<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_319_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SMB_Handle_Type<pos:position pos:line="1" pos:column="16"/></name></type>
<name pos:line="2" pos:column="1">SMB_Connect_Server<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">SMB_Handle_Type<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">Con_Handle<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">char<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">server<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type><name pos:line="3" pos:column="40">NTdomain<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SMB_Handle_Type<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">con<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">called<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><literal type="number" pos:line="6" pos:column="17">80<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="22">calling<pos:position pos:line="6" pos:column="29"/></name><index pos:line="6" pos:column="29">[<expr><literal type="number" pos:line="6" pos:column="30">80<pos:position pos:line="6" pos:column="32"/></literal></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>, <modifier pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="36">address<pos:position pos:line="6" pos:column="43"/></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Get a connection structure if one does not exist */</comment>

    <expr_stmt><expr><name pos:line="11" pos:column="5">con<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name pos:line="11" pos:column="11">Con_Handle<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">Con_Handle<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">NULL<pos:position pos:line="13" pos:column="27"/></name></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">con<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="20">(<pos:position pos:line="15" pos:column="21"/></operator>struct <name pos:line="15" pos:column="28">SMB_Connect_Def<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></operator><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator> <call><name pos:line="15" pos:column="47">malloc<pos:position pos:line="15" pos:column="53"/></name><argument_list pos:line="15" pos:column="53">(<argument><expr><sizeof pos:line="15" pos:column="54">sizeof<argument_list pos:line="15" pos:column="60">(<argument><expr pos:line="15" pos:column="61">struct <name pos:line="15" pos:column="68">SMB_Connect_Def<pos:position pos:line="15" pos:column="83"/></name></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="85"/></argument_list></call><operator pos:line="15" pos:column="85">)<pos:position pos:line="15" pos:column="86"/></operator> <operator pos:line="15" pos:column="87">==<pos:position pos:line="15" pos:column="89"/></operator> <name pos:line="15" pos:column="90">NULL<pos:position pos:line="15" pos:column="94"/></name></expr>)<pos:position pos:line="15" pos:column="95"/></condition><then pos:line="15" pos:column="95"> <block pos:line="15" pos:column="96">{


            <expr_stmt><expr><name pos:line="18" pos:column="13">SMBlib_errno<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">SMBlibE_NoSpace<pos:position pos:line="18" pos:column="43"/></name></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
            <return pos:line="19" pos:column="13">return <expr><name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr>;<pos:position pos:line="19" pos:column="25"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="22" pos:column="5">/* Init some things ... */</comment>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">strcpy<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name><name pos:line="24" pos:column="12">con<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">service<pos:position pos:line="24" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="26">""<pos:position pos:line="24" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">strcpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">con<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">username<pos:position pos:line="25" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">""<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">strcpy<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">con<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">password<pos:position pos:line="26" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">""<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">strcpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">con<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">sock_options<pos:position pos:line="27" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">""<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">strcpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">con<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">address<pos:position pos:line="28" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="26">""<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">strcpy<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name><name pos:line="29" pos:column="12">con<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">desthost<pos:position pos:line="29" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">server<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">strcpy<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name><name pos:line="30" pos:column="12">con<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">PDomain<pos:position pos:line="30" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">NTdomain<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">strcpy<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name><name pos:line="31" pos:column="12">con<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">OSName<pos:position pos:line="31" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="25">SMBLIB_DEFAULT_OSNAME<pos:position pos:line="31" pos:column="46"/></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">strcpy<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><name><name pos:line="32" pos:column="12">con<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">LMType<pos:position pos:line="32" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="25">SMBLIB_DEFAULT_LMTYPE<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">con<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">first_tree<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">con<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">last_tree<pos:position pos:line="33" pos:column="37"/></name></name> <operator pos:line="33" pos:column="38">=<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">NULL<pos:position pos:line="33" pos:column="44"/></name></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">SMB_Get_My_Name<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">con<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">myname<pos:position pos:line="35" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="34">sizeof<argument_list pos:line="35" pos:column="40">(<argument><expr><name><name pos:line="35" pos:column="41">con<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">myname<pos:position pos:line="35" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">con<pos:position pos:line="37" pos:column="8"/></name><operator pos:line="37" pos:column="8">-&gt;<pos:position pos:line="37" pos:column="13"/></operator><name pos:line="37" pos:column="10">port<pos:position pos:line="37" pos:column="14"/></name></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>		<comment type="block" pos:line="37" pos:column="33">/* No port selected */</comment>

    <comment type="block" pos:line="39" pos:column="5">/* Get some things we need for the SMB Header */</comment>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">con<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">pid<pos:position pos:line="41" pos:column="13"/></name></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">getpid<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">()<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">con<pos:position pos:line="42" pos:column="8"/></name><operator pos:line="42" pos:column="8">-&gt;<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="10">mid<pos:position pos:line="42" pos:column="13"/></name></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <name><name pos:line="42" pos:column="16">con<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">pid<pos:position pos:line="42" pos:column="24"/></name></name></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>	<comment type="block" pos:line="42" pos:column="33">/* This will do for now ... */</comment>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">con<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="10">uid<pos:position pos:line="43" pos:column="13"/></name></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>		<comment type="block" pos:line="43" pos:column="33">/* Until we have done a logon, no uid ... */</comment>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">con<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">-&gt;<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="10">gid<pos:position pos:line="44" pos:column="13"/></name></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">getgid<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">()<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Now connect to the remote end, but first upper case the name of the
     * service we are going to call, sine some servers want it in uppercase */</comment>

    <for pos:line="49" pos:column="5">for <control pos:line="49" pos:column="9">(<init><expr><name pos:line="49" pos:column="10">i<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>;<pos:position pos:line="49" pos:column="16"/></init> <condition><expr><name pos:line="49" pos:column="17">i<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">&lt;<pos:position pos:line="49" pos:column="23"/></operator> <call><name pos:line="49" pos:column="21">strlen<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">server<pos:position pos:line="49" pos:column="34"/></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="36"/></condition> <incr><expr><name pos:line="49" pos:column="37">i<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">++<pos:position pos:line="49" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="41"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="50" pos:column="9">called<pos:position pos:line="50" pos:column="15"/></name><index pos:line="50" pos:column="15">[<expr><name pos:line="50" pos:column="16">i<pos:position pos:line="50" pos:column="17"/></name></expr>]<pos:position pos:line="50" pos:column="18"/></index></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <call><name pos:line="50" pos:column="21">xtoupper<pos:position pos:line="50" pos:column="29"/></name><argument_list pos:line="50" pos:column="29">(<argument><expr><name><name pos:line="50" pos:column="30">server<pos:position pos:line="50" pos:column="36"/></name><index pos:line="50" pos:column="36">[<expr><name pos:line="50" pos:column="37">i<pos:position pos:line="50" pos:column="38"/></name></expr>]<pos:position pos:line="50" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">called<pos:position pos:line="52" pos:column="11"/></name><index pos:line="52" pos:column="11">[<expr><call><name pos:line="52" pos:column="12">strlen<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">server<pos:position pos:line="52" pos:column="25"/></name></expr></argument>)<pos:position pos:line="52" pos:column="26"/></argument_list></call></expr>]<pos:position pos:line="52" pos:column="27"/></index></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <literal type="number" pos:line="52" pos:column="30">0<pos:position pos:line="52" pos:column="31"/></literal></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>	<comment type="block" pos:line="52" pos:column="33">/* Make it a string */</comment>

    <for pos:line="54" pos:column="5">for <control pos:line="54" pos:column="9">(<init><expr><name pos:line="54" pos:column="10">i<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <literal type="number" pos:line="54" pos:column="14">0<pos:position pos:line="54" pos:column="15"/></literal></expr>;<pos:position pos:line="54" pos:column="16"/></init> <condition><expr><name pos:line="54" pos:column="17">i<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&lt;<pos:position pos:line="54" pos:column="23"/></operator> <call><name pos:line="54" pos:column="21">strlen<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name><name pos:line="54" pos:column="28">con<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">-&gt;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="33">myname<pos:position pos:line="54" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="41"/></condition> <incr><expr><name pos:line="54" pos:column="42">i<pos:position pos:line="54" pos:column="43"/></name><operator pos:line="54" pos:column="43">++<pos:position pos:line="54" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="46"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="9">calling<pos:position pos:line="55" pos:column="16"/></name><index pos:line="55" pos:column="16">[<expr><name pos:line="55" pos:column="17">i<pos:position pos:line="55" pos:column="18"/></name></expr>]<pos:position pos:line="55" pos:column="19"/></index></name> <operator pos:line="55" pos:column="20">=<pos:position pos:line="55" pos:column="21"/></operator> <call><name pos:line="55" pos:column="22">xtoupper<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name><name pos:line="55" pos:column="31">con<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">-&gt;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="36">myname<pos:position pos:line="55" pos:column="42"/></name><index pos:line="55" pos:column="42">[<expr><name pos:line="55" pos:column="43">i<pos:position pos:line="55" pos:column="44"/></name></expr>]<pos:position pos:line="55" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="57" pos:column="5">calling<pos:position pos:line="57" pos:column="12"/></name><index pos:line="57" pos:column="12">[<expr><call><name pos:line="57" pos:column="13">strlen<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name><name pos:line="57" pos:column="20">con<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">myname<pos:position pos:line="57" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>]<pos:position pos:line="57" pos:column="33"/></index></name> <operator pos:line="57" pos:column="34">=<pos:position pos:line="57" pos:column="35"/></operator> <literal type="number" pos:line="57" pos:column="36">0<pos:position pos:line="57" pos:column="37"/></literal></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>	<comment type="block" pos:line="57" pos:column="41">/* Make it a string */</comment>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><call><name pos:line="59" pos:column="9">strcmp<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name><name pos:line="59" pos:column="16">con<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">address<pos:position pos:line="59" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="30">""<pos:position pos:line="59" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="33"/></argument_list></call> <operator pos:line="59" pos:column="34">==<pos:position pos:line="59" pos:column="36"/></operator> <literal type="number" pos:line="59" pos:column="37">0<pos:position pos:line="59" pos:column="38"/></literal></expr>)<pos:position pos:line="59" pos:column="39"/></condition><then pos:line="59" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="60" pos:column="9">address<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <name><name pos:line="60" pos:column="19">con<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">desthost<pos:position pos:line="60" pos:column="32"/></name></name></expr>;<pos:position pos:line="60" pos:column="33"/></expr_stmt></block></then>
    <else pos:line="61" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="9">address<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <name><name pos:line="62" pos:column="19">con<pos:position pos:line="62" pos:column="22"/></name><operator pos:line="62" pos:column="22">-&gt;<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="24">address<pos:position pos:line="62" pos:column="31"/></name></name></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="64" pos:column="5">con<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">-&gt;<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="10">Trans_Connect<pos:position pos:line="64" pos:column="23"/></name></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <call><name pos:line="64" pos:column="26">RFCNB_Call<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">called<pos:position pos:line="64" pos:column="43"/></name></expr></argument>,
                                    <argument><expr><name pos:line="65" pos:column="37">calling<pos:position pos:line="65" pos:column="44"/></name></expr></argument>,
                                    <argument><expr><name pos:line="66" pos:column="37">address<pos:position pos:line="66" pos:column="44"/></name></expr></argument>,		<comment type="block" pos:line="66" pos:column="57">/* Protocol specific */</comment>
                                    <argument><expr><name><name pos:line="67" pos:column="37">con<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">-&gt;<pos:position pos:line="67" pos:column="45"/></operator><name pos:line="67" pos:column="42">port<pos:position pos:line="67" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* Did we get one? */</comment>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name><name pos:line="71" pos:column="9">con<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">Trans_Connect<pos:position pos:line="71" pos:column="27"/></name></name> <operator pos:line="71" pos:column="28">==<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">NULL<pos:position pos:line="71" pos:column="35"/></name></expr>)<pos:position pos:line="71" pos:column="36"/></condition><then pos:line="71" pos:column="36"> <block pos:line="71" pos:column="37">{

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">Con_Handle<pos:position pos:line="73" pos:column="23"/></name> <operator pos:line="73" pos:column="24">==<pos:position pos:line="73" pos:column="26"/></operator> <name pos:line="73" pos:column="27">NULL<pos:position pos:line="73" pos:column="31"/></name></expr>)<pos:position pos:line="73" pos:column="32"/></condition><then pos:line="73" pos:column="32"> <block pos:line="73" pos:column="33">{
            <expr_stmt><expr><name pos:line="74" pos:column="13">Con_Handle<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <name pos:line="74" pos:column="26">NULL<pos:position pos:line="74" pos:column="30"/></name></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">free<pos:position pos:line="75" pos:column="17"/></name><argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">con<pos:position pos:line="75" pos:column="21"/></name></expr></argument>)<pos:position pos:line="75" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="77" pos:column="9">SMBlib_errno<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <operator pos:line="77" pos:column="24">-<pos:position pos:line="77" pos:column="25"/></operator><name pos:line="77" pos:column="25">SMBlibE_CallFailed<pos:position pos:line="77" pos:column="43"/></name></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt>
        <return pos:line="78" pos:column="9">return <expr><name pos:line="78" pos:column="16">NULL<pos:position pos:line="78" pos:column="20"/></name></expr>;<pos:position pos:line="78" pos:column="21"/></return>

    }<pos:position pos:line="80" pos:column="6"/></block></then></if>
    <return pos:line="81" pos:column="5">return <expr><operator pos:line="81" pos:column="12">(<pos:position pos:line="81" pos:column="13"/></operator><name pos:line="81" pos:column="13">con<pos:position pos:line="81" pos:column="16"/></name><operator pos:line="81" pos:column="16">)<pos:position pos:line="81" pos:column="17"/></operator></expr>;<pos:position pos:line="81" pos:column="18"/></return>

}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

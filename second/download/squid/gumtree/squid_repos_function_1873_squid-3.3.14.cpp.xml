<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1873_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerConnectSucceded<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">CachePeer<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">p<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">p<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">tcp_up<pos:position pos:line="4" pos:column="19"/></name></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">15<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">2<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"TCP connection to "<pos:position pos:line="5" pos:column="43"/></literal> <operator pos:line="5" pos:column="44">&lt;&lt;<pos:position pos:line="5" pos:column="52"/></operator> <name><name pos:line="5" pos:column="47">p<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">host<pos:position pos:line="5" pos:column="54"/></name></name> <operator pos:line="5" pos:column="55">&lt;&lt;<pos:position pos:line="5" pos:column="63"/></operator> <literal type="string" pos:line="5" pos:column="58">"/"<pos:position pos:line="5" pos:column="61"/></literal> <operator pos:line="5" pos:column="62">&lt;&lt;<pos:position pos:line="5" pos:column="70"/></operator> <name><name pos:line="5" pos:column="65">p<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">-&gt;<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="68">http_port<pos:position pos:line="5" pos:column="77"/></name></name> <operator pos:line="5" pos:column="78">&lt;&lt;<pos:position pos:line="5" pos:column="86"/></operator> <literal type="string" pos:line="5" pos:column="81">" succeded"<pos:position pos:line="5" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">tcp_up<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name><name pos:line="6" pos:column="21">p<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">connect_fail_limit<pos:position pos:line="6" pos:column="42"/></name></name></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt> <comment type="line" pos:line="6" pos:column="44">// NP: so peerAlive(p) works properly.</comment>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">peerAlive<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">p<pos:position pos:line="7" pos:column="20"/></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name><name pos:line="8" pos:column="14">p<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">n_addresses<pos:position pos:line="8" pos:column="28"/></name></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="13">ipcache_nbgethostbyname<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name><name pos:line="9" pos:column="37">p<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">host<pos:position pos:line="9" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="46">peerDNSConfigure<pos:position pos:line="9" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">p<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <else pos:line="10" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">p<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">tcp_up<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name><name pos:line="11" pos:column="21">p<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">connect_fail_limit<pos:position pos:line="11" pos:column="42"/></name></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt></block></else></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

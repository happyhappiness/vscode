<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4793_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">parse<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">anIndex<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">aPath<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">i<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">GetInteger<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">&lt;=<pos:position pos:line="5" pos:column="16"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">fatal<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="string" pos:line="6" pos:column="15">"storeCossDirParse: invalid size value"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="8" pos:column="5">index<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">anIndex<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">path<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">xstrdup<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">aPath<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">max_size<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <cast type="static" pos:line="12" pos:column="16">static_cast<argument_list type="generic" pos:line="12" pos:column="27">&lt;<argument><expr><name pos:line="12" pos:column="28">uint64_t<pos:position pos:line="12" pos:column="36"/></name></expr></argument>&gt;<pos:position pos:line="12" pos:column="40"/></argument_list><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">i<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></cast> <operator pos:line="12" pos:column="41">&lt;&lt;<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="44">20<pos:position pos:line="12" pos:column="46"/></literal></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt> <comment type="line" pos:line="12" pos:column="48">// MBytes to Bytes</comment>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">parseOptions<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">NULL<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">io<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">changeIO<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><call><name><name pos:line="17" pos:column="18">DiskIOModule<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">::<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">FindDefault<pos:position pos:line="17" pos:column="43"/></name></name><argument_list pos:line="17" pos:column="43">()<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Enforce maxobjsize being set to something */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">max_objsize<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">==<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">-<pos:position pos:line="20" pos:column="25"/></operator><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">fatal<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><literal type="string" pos:line="21" pos:column="15">"COSS requires max-size to be set to something other than -1!\n"<pos:position pos:line="21" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">max_objsize<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">&gt;<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="23">COSS_MEMBUF_SZ<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="9">fatalf<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="string" pos:line="24" pos:column="16">"COSS max-size option must be less than COSS_MEMBUF_SZ (%d)\n"<pos:position pos:line="24" pos:column="78"/></literal></expr></argument>,
               <argument><expr><name pos:line="25" pos:column="16">COSS_MEMBUF_SZ<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="27" pos:column="5">// check that we won't overflow sfileno later.</comment>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">uint64_t<pos:position pos:line="28" pos:column="19"/></name></type> <name pos:line="28" pos:column="20">max_offset<pos:position pos:line="28" pos:column="30"/></name> <init pos:line="28" pos:column="31">= <expr><operator pos:line="28" pos:column="33">(<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">uint64_t<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">)<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">SwapFilenMax<pos:position pos:line="28" pos:column="55"/></name> <operator pos:line="28" pos:column="56">&lt;&lt;<pos:position pos:line="28" pos:column="64"/></operator> <name pos:line="28" pos:column="59">blksz_bits<pos:position pos:line="28" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="70"/></decl_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">maxSize<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">()<pos:position pos:line="30" pos:column="18"/></argument_list></call> <operator pos:line="30" pos:column="19">&gt;<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="21">max_offset<pos:position pos:line="30" pos:column="31"/></name></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32"> <block pos:line="30" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">47<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="20">DBG_CRITICAL<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="34">"COSS block-size = "<pos:position pos:line="31" pos:column="54"/></literal> <operator pos:line="31" pos:column="55">&lt;&lt;<pos:position pos:line="31" pos:column="63"/></operator> <operator pos:line="31" pos:column="58">(<pos:position pos:line="31" pos:column="59"/></operator><literal type="number" pos:line="31" pos:column="59">1<pos:position pos:line="31" pos:column="60"/></literal><operator pos:line="31" pos:column="60">&lt;&lt;<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="62">blksz_bits<pos:position pos:line="31" pos:column="72"/></name><operator pos:line="31" pos:column="72">)<pos:position pos:line="31" pos:column="73"/></operator> <operator pos:line="31" pos:column="74">&lt;&lt;<pos:position pos:line="31" pos:column="82"/></operator> <literal type="string" pos:line="31" pos:column="77">" bytes"<pos:position pos:line="31" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">47<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="20">DBG_CRITICAL<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"COSS largest file offset = "<pos:position pos:line="32" pos:column="63"/></literal> <operator pos:line="32" pos:column="64">&lt;&lt;<pos:position pos:line="32" pos:column="72"/></operator> <operator pos:line="32" pos:column="67">(<pos:position pos:line="32" pos:column="68"/></operator><name pos:line="32" pos:column="68">max_offset<pos:position pos:line="32" pos:column="78"/></name> <operator pos:line="32" pos:column="79">&gt;&gt;<pos:position pos:line="32" pos:column="84"/></operator> <literal type="number" pos:line="32" pos:column="82">10<pos:position pos:line="32" pos:column="84"/></literal><operator pos:line="32" pos:column="84">)<pos:position pos:line="32" pos:column="85"/></operator> <operator pos:line="32" pos:column="86">&lt;&lt;<pos:position pos:line="32" pos:column="94"/></operator> <literal type="string" pos:line="32" pos:column="89">" KB"<pos:position pos:line="32" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">debugs<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">47<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="20">DBG_CRITICAL<pos:position pos:line="33" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="34">"COSS cache_dir size = "<pos:position pos:line="33" pos:column="58"/></literal> <operator pos:line="33" pos:column="59">&lt;&lt;<pos:position pos:line="33" pos:column="67"/></operator> <operator pos:line="33" pos:column="62">(<pos:position pos:line="33" pos:column="63"/></operator><call><name pos:line="33" pos:column="63">maxSize<pos:position pos:line="33" pos:column="70"/></name><argument_list pos:line="33" pos:column="70">()<pos:position pos:line="33" pos:column="72"/></argument_list></call> <operator pos:line="33" pos:column="73">&gt;&gt;<pos:position pos:line="33" pos:column="78"/></operator> <literal type="number" pos:line="33" pos:column="76">10<pos:position pos:line="33" pos:column="78"/></literal><operator pos:line="33" pos:column="78">)<pos:position pos:line="33" pos:column="79"/></operator> <operator pos:line="33" pos:column="80">&lt;&lt;<pos:position pos:line="33" pos:column="88"/></operator> <literal type="string" pos:line="33" pos:column="83">" KB"<pos:position pos:line="33" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">fatal<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><literal type="string" pos:line="34" pos:column="15">"COSS cache_dir size exceeds largest offset\n"<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

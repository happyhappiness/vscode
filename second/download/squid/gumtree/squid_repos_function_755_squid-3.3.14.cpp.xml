<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_755_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">clientHierarchical<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">ClientHttpRequest<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">http<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">url<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name><name pos:line="4" pos:column="23">http<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">uri<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequest<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">request<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">http<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">request<pos:position pos:line="5" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HttpRequestMethod<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">method<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">= <expr><name><name pos:line="6" pos:column="32">request<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">method<pos:position pos:line="6" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">wordlist<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">p<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

    <comment type="line" pos:line="9" pos:column="5">// intercepted requests MUST NOT (yet) be sent to peers unless verified</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">request<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">flags<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">hostVerified<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">&amp;&amp;<pos:position pos:line="10" pos:column="48"/></operator> <operator pos:line="10" pos:column="41">(<pos:position pos:line="10" pos:column="42"/></operator><name><name pos:line="10" pos:column="42">request<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">flags<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">intercepted<pos:position pos:line="10" pos:column="68"/></name></name> <operator pos:line="10" pos:column="69">||<pos:position pos:line="10" pos:column="71"/></operator> <name><name pos:line="10" pos:column="72">request<pos:position pos:line="10" pos:column="79"/></name><operator pos:line="10" pos:column="79">-&gt;<pos:position pos:line="10" pos:column="84"/></operator><name pos:line="10" pos:column="81">flags<pos:position pos:line="10" pos:column="86"/></name><operator pos:line="10" pos:column="86">.<pos:position pos:line="10" pos:column="87"/></operator><name pos:line="10" pos:column="87">spoofClientIp<pos:position pos:line="10" pos:column="100"/></name></name><operator pos:line="10" pos:column="100">)<pos:position pos:line="10" pos:column="101"/></operator></expr>)<pos:position pos:line="10" pos:column="102"/></condition><then pos:line="10" pos:column="102">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * IMS needs a private key, so we can use the hierarchy for IMS only if our
     * neighbors support private keys
     */</comment>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">request<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">flags<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">ims<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">&amp;&amp;<pos:position pos:line="18" pos:column="38"/></operator> <operator pos:line="18" pos:column="31">!<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">neighbors_do_private_keys<pos:position pos:line="18" pos:column="57"/></name></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/*
     * This is incorrect: authenticating requests can be sent via a hierarchy
     * (they can even be cached if the correct headers are set on the reply)
     */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">request<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">flags<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">auth<pos:position pos:line="25" pos:column="28"/></name></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">method<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">==<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">METHOD_TRACE<pos:position pos:line="28" pos:column="31"/></name></expr>)<pos:position pos:line="28" pos:column="32"/></condition><then pos:line="28" pos:column="32">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">method<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">!=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">METHOD_GET<pos:position pos:line="31" pos:column="29"/></name></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30">
        <block type="pseudo"><return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* scan hierarchy_stoplist */</comment>
    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><expr><name pos:line="35" pos:column="10">p<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <name><name pos:line="35" pos:column="14">Config<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">hierarchy_stoplist<pos:position pos:line="35" pos:column="39"/></name></name></expr>;<pos:position pos:line="35" pos:column="40"/></init> <condition><expr><name pos:line="35" pos:column="41">p<pos:position pos:line="35" pos:column="42"/></name></expr>;<pos:position pos:line="35" pos:column="43"/></condition> <incr><expr><name pos:line="35" pos:column="44">p<pos:position pos:line="35" pos:column="45"/></name> <operator pos:line="35" pos:column="46">=<pos:position pos:line="35" pos:column="47"/></operator> <name><name pos:line="35" pos:column="48">p<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">next<pos:position pos:line="35" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="35" pos:column="56"/></control>
        <block type="pseudo"><if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">strstr<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">url<pos:position pos:line="36" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="25">p<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">key<pos:position pos:line="36" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
            <block type="pseudo"><return pos:line="37" pos:column="13">return <expr><literal type="number" pos:line="37" pos:column="20">0<pos:position pos:line="37" pos:column="21"/></literal></expr>;<pos:position pos:line="37" pos:column="22"/></return></block></then></if></block></for>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">request<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">flags<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">loopDetected<pos:position pos:line="39" pos:column="36"/></name></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
        <block type="pseudo"><return pos:line="40" pos:column="9">return <expr><literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></return></block></then></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">request<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">protocol<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">==<pos:position pos:line="42" pos:column="29"/></operator> <name><name pos:line="42" pos:column="30">AnyP<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">::<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">PROTO_HTTP<pos:position pos:line="42" pos:column="46"/></name></name></expr>)<pos:position pos:line="42" pos:column="47"/></condition><then pos:line="42" pos:column="47">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><call><name pos:line="43" pos:column="16">httpCachable<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">method<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></return></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">request<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">protocol<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">==<pos:position pos:line="45" pos:column="29"/></operator> <name><name pos:line="45" pos:column="30">AnyP<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">::<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="36">PROTO_GOPHER<pos:position pos:line="45" pos:column="48"/></name></name></expr>)<pos:position pos:line="45" pos:column="49"/></condition><then pos:line="45" pos:column="49">
        <block type="pseudo"><return pos:line="46" pos:column="9">return <expr><call><name pos:line="46" pos:column="16">gopherCachable<pos:position pos:line="46" pos:column="30"/></name><argument_list pos:line="46" pos:column="30">(<argument><expr><name pos:line="46" pos:column="31">request<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></return></block></then></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">request<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">protocol<pos:position pos:line="48" pos:column="26"/></name></name> <operator pos:line="48" pos:column="27">==<pos:position pos:line="48" pos:column="29"/></operator> <name><name pos:line="48" pos:column="30">AnyP<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">::<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">PROTO_CACHE_OBJECT<pos:position pos:line="48" pos:column="54"/></name></name></expr>)<pos:position pos:line="48" pos:column="55"/></condition><then pos:line="48" pos:column="55">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></return></block></then></if>

    <return pos:line="51" pos:column="5">return <expr><literal type="number" pos:line="51" pos:column="12">1<pos:position pos:line="51" pos:column="13"/></literal></expr>;<pos:position pos:line="51" pos:column="14"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

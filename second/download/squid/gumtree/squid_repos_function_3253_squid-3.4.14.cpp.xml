<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3253_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">copyToShm<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">StoreEntry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">&amp;<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="33">e<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="36">MemStoreMap<pos:position pos:line="2" pos:column="47"/></name><operator pos:line="2" pos:column="47">::<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">Extras<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">extras<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ipc<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">Mem<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">PageId<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">page<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">Ipc<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">::<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">Mem<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">::<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">GetPage<pos:position pos:line="5" pos:column="27"/></name></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name><name pos:line="5" pos:column="28">Ipc<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">::<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">Mem<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">::<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">PageId<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">::<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">cachePage<pos:position pos:line="5" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="57">page<pos:position pos:line="5" pos:column="61"/></name></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="63"/></condition><then pos:line="5" pos:column="63"> <block pos:line="5" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">20<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">5<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">HERE<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&lt;&lt;<pos:position pos:line="6" pos:column="36"/></operator> <literal type="string" pos:line="6" pos:column="31">"No mem-cache page for "<pos:position pos:line="6" pos:column="55"/></literal> <operator pos:line="6" pos:column="56">&lt;&lt;<pos:position pos:line="6" pos:column="64"/></operator> <name pos:line="6" pos:column="59">e<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">false<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return> <comment type="line" pos:line="7" pos:column="23">// GetPage is responsible for any cleanup on failures</comment>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">int64_t<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">bufSize<pos:position pos:line="10" pos:column="26"/></name> <init pos:line="10" pos:column="27">= <expr><call><name><name pos:line="10" pos:column="29">Ipc<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">::<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">Mem<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">::<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">PageSize<pos:position pos:line="10" pos:column="47"/></name></name><argument_list pos:line="10" pos:column="47">()<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int64_t<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">eSize<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name><name pos:line="11" pos:column="27">e<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">mem_obj<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">endOffset<pos:position pos:line="11" pos:column="47"/></name></name><argument_list pos:line="11" pos:column="47">()<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">StoreIOBuffer<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">sharedSpace<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">bufSize<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr></argument>,
                              <argument><expr><cast type="static" pos:line="14" pos:column="31">static_cast<argument_list type="generic" pos:line="14" pos:column="42">&lt;<argument><expr><name pos:line="14" pos:column="43">char<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">*<pos:position pos:line="14" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="52"/></argument_list><argument_list pos:line="14" pos:column="49">(<argument><expr><call><name pos:line="14" pos:column="50">PagePointer<pos:position pos:line="14" pos:column="61"/></name><argument_list pos:line="14" pos:column="61">(<argument><expr><name pos:line="14" pos:column="62">page<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></cast></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></decl>;<pos:position pos:line="14" pos:column="70"/></decl_stmt>

    <comment type="line" pos:line="16" pos:column="5">// check that we kept everything or purge incomplete/sparse cached entry</comment>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">ssize_t<pos:position pos:line="17" pos:column="18"/></name></type> <name pos:line="17" pos:column="19">copied<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><call><name><name pos:line="17" pos:column="28">e<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">mem_obj<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">data_hdr<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">.<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="48">copy<pos:position pos:line="17" pos:column="52"/></name></name><argument_list pos:line="17" pos:column="52">(<argument><expr><name pos:line="17" pos:column="53">sharedSpace<pos:position pos:line="17" pos:column="64"/></name></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="66"/></decl_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">eSize<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">!=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">copied<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">20<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">2<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">HERE<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">&lt;&lt;<pos:position pos:line="19" pos:column="36"/></operator> <literal type="string" pos:line="19" pos:column="31">"Failed to mem-cache "<pos:position pos:line="19" pos:column="53"/></literal> <operator pos:line="19" pos:column="54">&lt;&lt;<pos:position pos:line="19" pos:column="62"/></operator> <name pos:line="19" pos:column="57">e<pos:position pos:line="19" pos:column="58"/></name> <operator pos:line="19" pos:column="59">&lt;&lt;<pos:position pos:line="19" pos:column="67"/></operator> <literal type="string" pos:line="19" pos:column="62">": "<pos:position pos:line="19" pos:column="66"/></literal> <operator pos:line="19" pos:column="67">&lt;&lt;<pos:position pos:line="19" pos:column="75"/></operator>
               <name pos:line="20" pos:column="16">eSize<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&lt;&lt;<pos:position pos:line="20" pos:column="30"/></operator> <literal type="string" pos:line="20" pos:column="25">"!="<pos:position pos:line="20" pos:column="29"/></literal> <operator pos:line="20" pos:column="30">&lt;&lt;<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="33">copied<pos:position pos:line="20" pos:column="39"/></name></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>
        <comment type="line" pos:line="21" pos:column="9">// cleanup</comment>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">PutPage<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">page<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="boolean" pos:line="23" pos:column="16">false<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">20<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">7<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">HERE<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&lt;&lt;<pos:position pos:line="26" pos:column="32"/></operator> <literal type="string" pos:line="26" pos:column="27">"mem-cached all "<pos:position pos:line="26" pos:column="44"/></literal> <operator pos:line="26" pos:column="45">&lt;&lt;<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="48">eSize<pos:position pos:line="26" pos:column="53"/></name> <operator pos:line="26" pos:column="54">&lt;&lt;<pos:position pos:line="26" pos:column="62"/></operator> <literal type="string" pos:line="26" pos:column="57">" bytes of "<pos:position pos:line="26" pos:column="69"/></literal> <operator pos:line="26" pos:column="70">&lt;&lt;<pos:position pos:line="26" pos:column="78"/></operator> <name pos:line="26" pos:column="73">e<pos:position pos:line="26" pos:column="74"/></name> <operator pos:line="26" pos:column="75">&lt;&lt;<pos:position pos:line="26" pos:column="83"/></operator>
           <literal type="string" pos:line="27" pos:column="12">" in "<pos:position pos:line="27" pos:column="18"/></literal> <operator pos:line="27" pos:column="19">&lt;&lt;<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="22">page<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="29" pos:column="5">theCurrentSize<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">+=<pos:position pos:line="29" pos:column="22"/></operator> <call><name><name pos:line="29" pos:column="23">Ipc<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">::<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">Mem<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">::<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">PageSize<pos:position pos:line="29" pos:column="41"/></name></name><argument_list pos:line="29" pos:column="41">()<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
    <comment type="line" pos:line="30" pos:column="5">// remember storage location and size</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">extras<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">page<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">page<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">extras<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">storedSize<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">copied<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><literal type="boolean" pos:line="33" pos:column="12">true<pos:position pos:line="33" pos:column="16"/></literal></expr>;<pos:position pos:line="33" pos:column="17"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1979_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">BodyPipe<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">putMoreData<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">aBuffer<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">size_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">size<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">bodySizeKnown<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">()<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">size<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <call><name pos:line="5" pos:column="16">min<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">uint64_t<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">size<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="36">unproducedSize<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">()<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">size_t<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">spaceSize<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><cast type="static" pos:line="7" pos:column="30">static_cast<argument_list type="generic" pos:line="7" pos:column="41">&lt;<argument><expr><name pos:line="7" pos:column="42">size_t<pos:position pos:line="7" pos:column="48"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="52"/></argument_list><argument_list pos:line="7" pos:column="49">(<argument><expr><call><name><name pos:line="7" pos:column="50">theBuf<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">.<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">potentialSpaceSize<pos:position pos:line="7" pos:column="75"/></name></name><argument_list pos:line="7" pos:column="75">()<pos:position pos:line="7" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="78"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="79"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">size<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <call><name pos:line="8" pos:column="17">min<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">size<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="27">spaceSize<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call><operator pos:line="8" pos:column="37">)<pos:position pos:line="8" pos:column="38"/></operator></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">theBuf<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">append<pos:position pos:line="9" pos:column="22"/></name></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">aBuffer<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">size<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">postAppend<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">size<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">size<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6210_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Forwarder<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">RequestTimedOut<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">void<pos:position pos:line="2" pos:column="37"/></name><modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">param<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">54<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">param<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">!=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">Forwarder<pos:position pos:line="6" pos:column="14"/></name><modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type> <name pos:line="6" pos:column="16">fwdr<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><cast type="static" pos:line="6" pos:column="23">static_cast<argument_list type="generic" pos:line="6" pos:column="34">&lt;<argument><expr><name pos:line="6" pos:column="35">Forwarder<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="49"/></argument_list><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">param<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
    <comment type="line" pos:line="7" pos:column="5">// use async call to enable job call protection that time events lack</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">CallJobHere<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><literal type="number" pos:line="8" pos:column="17">54<pos:position pos:line="8" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="21">5<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="24">fwdr<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">Forwarder<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">requestTimedOut<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

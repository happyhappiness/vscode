<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2163_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeDigestRebuildStep<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">datanotused<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* TODO: call Store::Root().size() to determine this.. */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">count<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><name><name pos:line="5" pos:column="17">Config<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">Store<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">objectsPerBucket<pos:position pos:line="5" pos:column="46"/></name></name> <operator pos:line="5" pos:column="47">*<pos:position pos:line="5" pos:column="48"/></operator> <operator pos:line="5" pos:column="49">(<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="50">int<pos:position pos:line="5" pos:column="53"/></name><operator pos:line="5" pos:column="53">)<pos:position pos:line="5" pos:column="54"/></operator> <call><name pos:line="5" pos:column="55">ceil<pos:position pos:line="5" pos:column="59"/></name><argument_list pos:line="5" pos:column="59">(<argument><expr><operator pos:line="5" pos:column="60">(<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="61">double<pos:position pos:line="5" pos:column="67"/></name><operator pos:line="5" pos:column="67">)<pos:position pos:line="5" pos:column="68"/></operator> <name pos:line="5" pos:column="69">store_hash_buckets<pos:position pos:line="5" pos:column="87"/></name> <operator pos:line="5" pos:column="88">*<pos:position pos:line="5" pos:column="89"/></operator>
                <operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">double<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator> <name><name pos:line="6" pos:column="26">Config<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">digest<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">rebuild_chunk_percentage<pos:position pos:line="6" pos:column="64"/></name></name> <operator pos:line="6" pos:column="65">/<pos:position pos:line="6" pos:column="66"/></operator> <literal type="number" pos:line="6" pos:column="67">100.0<pos:position pos:line="6" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">sd_state<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">rebuild_lock<pos:position pos:line="7" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">71<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"storeDigestRebuildStep: buckets: "<pos:position pos:line="9" pos:column="54"/></literal> <operator pos:line="9" pos:column="55">&lt;&lt;<pos:position pos:line="9" pos:column="63"/></operator> <name pos:line="9" pos:column="58">store_hash_buckets<pos:position pos:line="9" pos:column="76"/></name> <operator pos:line="9" pos:column="77">&lt;&lt;<pos:position pos:line="9" pos:column="85"/></operator> <literal type="string" pos:line="9" pos:column="80">" entries to check: "<pos:position pos:line="9" pos:column="101"/></literal> <operator pos:line="9" pos:column="102">&lt;&lt;<pos:position pos:line="9" pos:column="110"/></operator> <name pos:line="9" pos:column="105">count<pos:position pos:line="9" pos:column="110"/></name></expr></argument>)<pos:position pos:line="9" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="112"/></expr_stmt>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">count<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">--<pos:position pos:line="11" pos:column="19"/></operator> <operator pos:line="11" pos:column="20">&amp;&amp;<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="23">!<pos:position pos:line="11" pos:column="24"/></operator><call><name><name pos:line="11" pos:column="24">sd_state<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">theSearch<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">isDone<pos:position pos:line="11" pos:column="50"/></name></name><argument_list pos:line="11" pos:column="50">()<pos:position pos:line="11" pos:column="52"/></argument_list></call> <operator pos:line="11" pos:column="53">&amp;&amp;<pos:position pos:line="11" pos:column="63"/></operator> <call><name><name pos:line="11" pos:column="56">sd_state<pos:position pos:line="11" pos:column="64"/></name><operator pos:line="11" pos:column="64">.<pos:position pos:line="11" pos:column="65"/></operator><name pos:line="11" pos:column="65">theSearch<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">-&gt;<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="76">next<pos:position pos:line="11" pos:column="80"/></name></name><argument_list pos:line="11" pos:column="80">()<pos:position pos:line="11" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="83"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">storeDigestAdd<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><call><name><name pos:line="12" pos:column="24">sd_state<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">theSearch<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">currentItem<pos:position pos:line="12" pos:column="55"/></name></name><argument_list pos:line="12" pos:column="55">()<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt></block></while>

    <comment type="block" pos:line="14" pos:column="5">/* are we done ? */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">sd_state<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">.<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">theSearch<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">isDone<pos:position pos:line="15" pos:column="35"/></name></name><argument_list pos:line="15" pos:column="35">()<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">storeDigestRebuildFinish<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">()<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">eventAdd<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><literal type="string" pos:line="18" pos:column="18">"storeDigestRebuildStep"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">storeDigestRebuildStep<pos:position pos:line="18" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="68">NULL<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="74">0.0<pos:position pos:line="18" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="79">1<pos:position pos:line="18" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="82"/></expr_stmt></block></else></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

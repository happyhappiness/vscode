<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4195_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Preview<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">wrote<pos:position pos:line="1" pos:column="38"/></name></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">size_t<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">size<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">bool<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">wroteEof<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name pos:line="3" pos:column="10">enabled<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">()<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="5" pos:column="5">theWritten<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">+=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">size<pos:position pos:line="5" pos:column="23"/></name></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">theWritten<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">&lt;=<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="24">theAd<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">wroteEof<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">theState<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">stIeof<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></then> <comment type="line" pos:line="10" pos:column="28">// written size is irrelevant</comment>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">theWritten<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&gt;=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="28">theAd<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">theState<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">stDone<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt></block></then></if></elseif></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

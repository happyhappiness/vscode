<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3863_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">untrustedToStoreCtx_cb<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">X509_STORE_CTX<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">ctx<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>,<parameter><decl><type><name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">data<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">83<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">4<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>,  <argument><expr><literal type="string" pos:line="4" pos:column="20">"Try to use pre-downloaded intermediate certificates\n"<pos:position pos:line="4" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="77"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><cast type="static" pos:line="6" pos:column="16">static_cast<argument_list type="generic" pos:line="6" pos:column="27">&lt;<argument><expr><name pos:line="6" pos:column="28">SSL<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="37"/></argument_list><argument_list pos:line="6" pos:column="34">(<argument><expr><call><name pos:line="6" pos:column="35">X509_STORE_CTX_get_ex_data<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><name pos:line="6" pos:column="62">ctx<pos:position pos:line="6" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="67">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="6" pos:column="101"/></name><argument_list pos:line="6" pos:column="101">()<pos:position pos:line="6" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="105"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="106"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">STACK_OF<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">X509<pos:position pos:line="7" pos:column="18"/></name></expr></argument>)<pos:position pos:line="7" pos:column="19"/></argument_list></call> <operator pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">sslUntrustedStack<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">=<pos:position pos:line="7" pos:column="40"/></operator> static_cast <operator pos:line="7" pos:column="53">&lt;<pos:position pos:line="7" pos:column="57"/></operator><call><name pos:line="7" pos:column="54">STACK_OF<pos:position pos:line="7" pos:column="62"/></name><argument_list pos:line="7" pos:column="62">(<argument><expr><name pos:line="7" pos:column="63">X509<pos:position pos:line="7" pos:column="67"/></name></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call> <operator pos:line="7" pos:column="69">*<pos:position pos:line="7" pos:column="70"/></operator><operator pos:line="7" pos:column="70">&gt;<pos:position pos:line="7" pos:column="74"/></operator><operator pos:line="7" pos:column="71">(<pos:position pos:line="7" pos:column="72"/></operator><call><name pos:line="7" pos:column="72">SSL_get_ex_data<pos:position pos:line="7" pos:column="87"/></name><argument_list pos:line="7" pos:column="87">(<argument><expr><name pos:line="7" pos:column="88">ssl<pos:position pos:line="7" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="93">ssl_ex_index_ssl_untrusted_chain<pos:position pos:line="7" pos:column="125"/></name></expr></argument>)<pos:position pos:line="7" pos:column="126"/></argument_list></call><operator pos:line="7" pos:column="126">)<pos:position pos:line="7" pos:column="127"/></operator></expr>;<pos:position pos:line="7" pos:column="128"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// OpenSSL already maintains ctx-&gt;untrusted but we cannot modify</comment>
    <comment type="line" pos:line="10" pos:column="5">// internal OpenSSL list directly. We have to give OpenSSL our own</comment>
    <comment type="line" pos:line="11" pos:column="5">// list, but it must include certificates on the OpenSSL ctx-&gt;untrusted</comment>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">HAVE_LIBCRYPTO_X509_STORE_CTX_GET0_UNTRUSTED<pos:position pos:line="12" pos:column="49"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">STACK_OF<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">X509<pos:position pos:line="13" pos:column="18"/></name></expr></argument>)<pos:position pos:line="13" pos:column="19"/></argument_list></call> <operator pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">oldUntrusted<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">=<pos:position pos:line="13" pos:column="35"/></operator> <call><name pos:line="13" pos:column="36">X509_STORE_CTX_get0_untrusted<pos:position pos:line="13" pos:column="65"/></name><argument_list pos:line="13" pos:column="65">(<argument><expr><name pos:line="13" pos:column="66">ctx<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">STACK_OF<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">X509<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call> <operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">oldUntrusted<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">=<pos:position pos:line="15" pos:column="35"/></operator> <name><name pos:line="15" pos:column="36">ctx<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">untrusted<pos:position pos:line="15" pos:column="50"/></name></name></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">STACK_OF<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">X509<pos:position pos:line="17" pos:column="18"/></name></expr></argument>)<pos:position pos:line="17" pos:column="19"/></argument_list></call> <operator pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">sk<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <call><name pos:line="17" pos:column="26">sk_X509_dup<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">oldUntrusted<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt> <comment type="line" pos:line="17" pos:column="53">// oldUntrusted is always not NULL</comment>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><decl><type><name pos:line="19" pos:column="10">int<pos:position pos:line="19" pos:column="13"/></name></type> <name pos:line="19" pos:column="14">i<pos:position pos:line="19" pos:column="15"/></name> <init pos:line="19" pos:column="16">= <expr><literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="20"/></init> <condition><expr><name pos:line="19" pos:column="21">i<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="25">sk_X509_num<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><name pos:line="19" pos:column="37">sslUntrustedStack<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></condition> <incr><expr><operator pos:line="19" pos:column="57">++<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="59">i<pos:position pos:line="19" pos:column="60"/></name></expr></incr>)<pos:position pos:line="19" pos:column="61"/></control> <block pos:line="19" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">X509<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name pos:line="20" pos:column="15">cert<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><call><name pos:line="20" pos:column="22">sk_X509_value<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">sslUntrustedStack<pos:position pos:line="20" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">i<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">sk_X509_push<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">sk<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="26">cert<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>

    <comment type="line" pos:line="24" pos:column="5">// If the local untrusted certificates internal database is used</comment>
    <comment type="line" pos:line="25" pos:column="5">// run completeIssuers to add missing certificates if possible.</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name><name pos:line="26" pos:column="9">SquidUntrustedCerts<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">size<pos:position pos:line="26" pos:column="33"/></name></name><argument_list pos:line="26" pos:column="33">()<pos:position pos:line="26" pos:column="35"/></argument_list></call> <operator pos:line="26" pos:column="36">&gt;<pos:position pos:line="26" pos:column="40"/></operator> <literal type="number" pos:line="26" pos:column="38">0<pos:position pos:line="26" pos:column="39"/></literal></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="9">completeIssuers<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">ctx<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">sk<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">X509_STORE_CTX_set_chain<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">ctx<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">sk<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt> <comment type="line" pos:line="29" pos:column="40">// No locking/unlocking, just sets ctx-&gt;untrusted</comment>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">ret<pos:position pos:line="30" pos:column="12"/></name> <init pos:line="30" pos:column="13">= <expr><call><name pos:line="30" pos:column="15">X509_verify_cert<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">ctx<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="37"/></decl_stmt>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">HAVE_LIBCRYPTO_X509_STORE_CTX_SET0_UNTRUSTED<pos:position pos:line="31" pos:column="49"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">X509_STORE_CTX_set0_untrusted<pos:position pos:line="32" pos:column="34"/></name><argument_list pos:line="32" pos:column="34">(<argument><expr><name pos:line="32" pos:column="35">ctx<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">oldUntrusted<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
<cpp:else pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">else<pos:position pos:line="33" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">X509_STORE_CTX_set_chain<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">ctx<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">oldUntrusted<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt> <comment type="line" pos:line="34" pos:column="50">// Set back the old untrusted list</comment>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">sk_X509_free<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">sk<pos:position pos:line="36" pos:column="20"/></name></expr></argument>)<pos:position pos:line="36" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt> <comment type="line" pos:line="36" pos:column="23">// Release sk list</comment>
    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">ret<pos:position pos:line="37" pos:column="15"/></name></expr>;<pos:position pos:line="37" pos:column="16"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

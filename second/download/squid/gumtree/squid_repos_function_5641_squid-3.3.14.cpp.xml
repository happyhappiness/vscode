<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5641_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskdFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">close<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"DiskdFile::close: "<pos:position pos:line="4" pos:column="39"/></literal> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="43">this<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">&lt;&lt;<pos:position pos:line="4" pos:column="56"/></operator> <literal type="string" pos:line="4" pos:column="51">" closing for "<pos:position pos:line="4" pos:column="66"/></literal> <operator pos:line="4" pos:column="67">&lt;&lt;<pos:position pos:line="4" pos:column="75"/></operator> <call><name><name pos:line="4" pos:column="70">ioRequestor<pos:position pos:line="4" pos:column="81"/></name><operator pos:line="4" pos:column="81">.<pos:position pos:line="4" pos:column="82"/></operator><name pos:line="4" pos:column="82">getRaw<pos:position pos:line="4" pos:column="88"/></name></name><argument_list pos:line="4" pos:column="88">()<pos:position pos:line="4" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><call><name><name pos:line="5" pos:column="13">ioRequestor<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">getRaw<pos:position pos:line="5" pos:column="31"/></name></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ioAway<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">()<pos:position pos:line="6" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">x<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><call><name><name pos:line="7" pos:column="13">IO<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">send<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">_MQD_CLOSE<pos:position pos:line="7" pos:column="32"/></name></expr></argument>,
                     <argument><expr><name pos:line="8" pos:column="22">id<pos:position pos:line="8" pos:column="24"/></name></expr></argument>,
                     <argument><expr><name pos:line="9" pos:column="22">this<pos:position pos:line="9" pos:column="26"/></name></expr></argument>,
                     <argument><expr><literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>,
                     <argument><expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>,
                     <argument><expr><operator pos:line="12" pos:column="22">-<pos:position pos:line="12" pos:column="23"/></operator><literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>,
                     <argument><expr><name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">x<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">&lt;<pos:position pos:line="15" pos:column="15"/></operator> <literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal></expr>)<pos:position pos:line="15" pos:column="15"/></condition><then pos:line="15" pos:column="15"> <block pos:line="15" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ioCompleted<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">()<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">errorOccured<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <literal type="boolean" pos:line="17" pos:column="24">true<pos:position pos:line="17" pos:column="28"/></literal></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">79<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">DBG_IMPORTANT<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"storeDiskdSend CLOSE: "<pos:position pos:line="18" pos:column="59"/></literal> <operator pos:line="18" pos:column="60">&lt;&lt;<pos:position pos:line="18" pos:column="68"/></operator> <call><name pos:line="18" pos:column="63">xstrerror<pos:position pos:line="18" pos:column="72"/></name><argument_list pos:line="18" pos:column="72">()<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">notifyClient<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">()<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">ioRequestor<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="24" pos:column="5">++<pos:position pos:line="24" pos:column="7"/></operator><name><name pos:line="24" pos:column="7">diskd_stats<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">close<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">ops<pos:position pos:line="24" pos:column="28"/></name></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

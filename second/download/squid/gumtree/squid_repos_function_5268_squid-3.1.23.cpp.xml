<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5268_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">net_db_peer<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">netdbPeerAdd<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">netdbEntry<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">n<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">peer<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">e<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">net_db_peer<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">p<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">net_db_peer<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">o<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">osize<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">n_peers<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="23">n<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">n_peers_alloc<pos:position pos:line="9" pos:column="39"/></name></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40"> <block pos:line="9" pos:column="41">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">o<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name><name pos:line="10" pos:column="13">n<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">peers<pos:position pos:line="10" pos:column="21"/></name></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">osize<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name><name pos:line="11" pos:column="17">n<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">n_peers_alloc<pos:position pos:line="11" pos:column="33"/></name></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">n<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">n_peers_alloc<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">==<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="13">n<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">n_peers_alloc<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <literal type="number" pos:line="14" pos:column="32">2<pos:position pos:line="14" pos:column="33"/></literal></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></then>
        <else pos:line="15" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="13">n<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">n_peers_alloc<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">&lt;&lt;=<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="34">1<pos:position pos:line="16" pos:column="35"/></literal></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">38<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">3<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"netdbPeerAdd: Growing peer list for '"<pos:position pos:line="18" pos:column="62"/></literal> <operator pos:line="18" pos:column="63">&lt;&lt;<pos:position pos:line="18" pos:column="71"/></operator> <name><name pos:line="18" pos:column="66">n<pos:position pos:line="18" pos:column="67"/></name><operator pos:line="18" pos:column="67">-&gt;<pos:position pos:line="18" pos:column="72"/></operator><name pos:line="18" pos:column="69">network<pos:position pos:line="18" pos:column="76"/></name></name> <operator pos:line="18" pos:column="77">&lt;&lt;<pos:position pos:line="18" pos:column="85"/></operator> <literal type="string" pos:line="18" pos:column="80">"' to "<pos:position pos:line="18" pos:column="87"/></literal> <operator pos:line="18" pos:column="88">&lt;&lt;<pos:position pos:line="18" pos:column="96"/></operator> <name><name pos:line="18" pos:column="91">n<pos:position pos:line="18" pos:column="92"/></name><operator pos:line="18" pos:column="92">-&gt;<pos:position pos:line="18" pos:column="97"/></operator><name pos:line="18" pos:column="94">n_peers_alloc<pos:position pos:line="18" pos:column="107"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="109"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="20" pos:column="9">n<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">peers<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <operator pos:line="20" pos:column="20">(<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">net_db_peer<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">*<pos:position pos:line="20" pos:column="34"/></operator><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator><call><name pos:line="20" pos:column="35">xcalloc<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name><name pos:line="20" pos:column="43">n<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">n_peers_alloc<pos:position pos:line="20" pos:column="59"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="61">sizeof<argument_list pos:line="20" pos:column="67">(<argument><expr><name pos:line="20" pos:column="68">net_db_peer<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="82"/></expr_stmt>

        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></init> <condition><expr><name pos:line="22" pos:column="21">i<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&lt;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="25">osize<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></condition> <incr><expr><name pos:line="22" pos:column="32">i<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">++<pos:position pos:line="22" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="36"/></control>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="13">*<pos:position pos:line="23" pos:column="14"/></operator><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name><name pos:line="23" pos:column="15">n<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">peers<pos:position pos:line="23" pos:column="23"/></name></name> <operator pos:line="23" pos:column="24">+<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">i<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator><operator pos:line="23" pos:column="32">(<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">o<pos:position pos:line="23" pos:column="34"/></name> <operator pos:line="23" pos:column="35">+<pos:position pos:line="23" pos:column="36"/></operator> <name pos:line="23" pos:column="37">i<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt></block></for>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">osize<pos:position pos:line="25" pos:column="18"/></name></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19"> <block pos:line="25" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">safe_free<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">o<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">p<pos:position pos:line="30" pos:column="6"/></name> <operator pos:line="30" pos:column="7">=<pos:position pos:line="30" pos:column="8"/></operator> <name><name pos:line="30" pos:column="9">n<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">peers<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">+<pos:position pos:line="30" pos:column="19"/></operator> <name><name pos:line="30" pos:column="20">n<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">n_peers<pos:position pos:line="30" pos:column="30"/></name></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">p<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">peername<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">netdbPeerName<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name><name pos:line="31" pos:column="33">e<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">host<pos:position pos:line="31" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">n<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">n_peers<pos:position pos:line="32" pos:column="15"/></name></name><operator pos:line="32" pos:column="15">++<pos:position pos:line="32" pos:column="17"/></operator></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">p<pos:position pos:line="33" pos:column="13"/></name></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

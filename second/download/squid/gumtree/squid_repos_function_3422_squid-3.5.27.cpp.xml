<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3422_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">snmpHandleUdp<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">sock<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">void<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">not_used<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">SNMP_REQUEST_SIZE<pos:position pos:line="4" pos:column="38"/></name></expr>]<pos:position pos:line="4" pos:column="39"/></index></name></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Ip<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">::<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">Address<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">from<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SnmpRequest<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">snmp_rq<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">len<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">49<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">5<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"snmpHandleUdp: Called."<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">Comm<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">::<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">SetSelect<pos:position pos:line="11" pos:column="20"/></name></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">sock<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">COMM_SELECT_READ<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">snmpHandleUdp<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">NULL<pos:position pos:line="11" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="66">0<pos:position pos:line="11" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memset<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">buf<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="17">'\0'<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="23">sizeof<argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">buf<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">len<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">comm_udp_recvfrom<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">sock<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">buf<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="40">sizeof<argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">buf<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></sizeof><operator pos:line="15" pos:column="51">-<pos:position pos:line="15" pos:column="52"/></operator><literal type="number" pos:line="15" pos:column="52">1<pos:position pos:line="15" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="55">0<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="58">from<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">len<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&gt;<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">49<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">3<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"snmpHandleUdp: FD "<pos:position pos:line="18" pos:column="43"/></literal> <operator pos:line="18" pos:column="44">&lt;&lt;<pos:position pos:line="18" pos:column="52"/></operator> <name pos:line="18" pos:column="47">sock<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">&lt;&lt;<pos:position pos:line="18" pos:column="60"/></operator> <literal type="string" pos:line="18" pos:column="55">": received "<pos:position pos:line="18" pos:column="68"/></literal> <operator pos:line="18" pos:column="69">&lt;&lt;<pos:position pos:line="18" pos:column="77"/></operator> <name pos:line="18" pos:column="72">len<pos:position pos:line="18" pos:column="75"/></name> <operator pos:line="18" pos:column="76">&lt;&lt;<pos:position pos:line="18" pos:column="84"/></operator> <literal type="string" pos:line="18" pos:column="79">" bytes from "<pos:position pos:line="18" pos:column="93"/></literal> <operator pos:line="18" pos:column="94">&lt;&lt;<pos:position pos:line="18" pos:column="102"/></operator> <name pos:line="18" pos:column="97">from<pos:position pos:line="18" pos:column="101"/></name> <operator pos:line="18" pos:column="102">&lt;&lt;<pos:position pos:line="18" pos:column="110"/></operator> <literal type="string" pos:line="18" pos:column="105">"."<pos:position pos:line="18" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="110"/></expr_stmt>

        <expr_stmt><expr><name pos:line="20" pos:column="9">snmp_rq<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">SnmpRequest<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">*<pos:position pos:line="20" pos:column="33"/></operator><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator><call><name pos:line="20" pos:column="34">xcalloc<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="45">sizeof<argument_list pos:line="20" pos:column="51">(<argument><expr><name pos:line="20" pos:column="52">SnmpRequest<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">snmp_rq<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">buf<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">u_char<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">*<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="33">)<pos:position pos:line="21" pos:column="34"/></operator> <name pos:line="21" pos:column="35">buf<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">snmp_rq<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">len<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">len<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">snmp_rq<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">sock<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">sock<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">snmp_rq<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">outbuf<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <operator pos:line="24" pos:column="27">(<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">unsigned<pos:position pos:line="24" pos:column="36"/></name> <name pos:line="24" pos:column="37">char<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">*<pos:position pos:line="24" pos:column="43"/></operator><operator pos:line="24" pos:column="43">)<pos:position pos:line="24" pos:column="44"/></operator><call><name pos:line="24" pos:column="44">xmalloc<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name><name pos:line="24" pos:column="52">snmp_rq<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">-&gt;<pos:position pos:line="24" pos:column="64"/></operator><name pos:line="24" pos:column="61">outlen<pos:position pos:line="24" pos:column="67"/></name></name> <operator pos:line="24" pos:column="68">=<pos:position pos:line="24" pos:column="69"/></operator> <name pos:line="24" pos:column="70">SNMP_REQUEST_SIZE<pos:position pos:line="24" pos:column="87"/></name></expr></argument>)<pos:position pos:line="24" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">snmp_rq<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">-&gt;<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="18">from<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="25">from<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">snmpDecodePacket<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">snmp_rq<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">xfree<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><name><name pos:line="27" pos:column="15">snmp_rq<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">outbuf<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">xfree<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">snmp_rq<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">49<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="20">DBG_IMPORTANT<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="35">"snmpHandleUdp: FD "<pos:position pos:line="30" pos:column="55"/></literal> <operator pos:line="30" pos:column="56">&lt;&lt;<pos:position pos:line="30" pos:column="64"/></operator> <name pos:line="30" pos:column="59">sock<pos:position pos:line="30" pos:column="63"/></name> <operator pos:line="30" pos:column="64">&lt;&lt;<pos:position pos:line="30" pos:column="72"/></operator> <literal type="string" pos:line="30" pos:column="67">" recvfrom: "<pos:position pos:line="30" pos:column="80"/></literal> <operator pos:line="30" pos:column="81">&lt;&lt;<pos:position pos:line="30" pos:column="89"/></operator> <call><name pos:line="30" pos:column="84">xstrerror<pos:position pos:line="30" pos:column="93"/></name><argument_list pos:line="30" pos:column="93">()<pos:position pos:line="30" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="97"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></else></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

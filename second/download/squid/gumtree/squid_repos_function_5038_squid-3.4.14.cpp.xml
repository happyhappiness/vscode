<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5038_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">CleanEvent<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">void<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">unused<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">swap_index<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">j<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name> <init pos:line="7" pos:column="11">= <expr><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/*
     * Assert that there are UFS cache_dirs configured, otherwise
     * we should never be called.
     */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">NumberOfUFSDirs<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">NULL<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">UFSDirToGlobalDirMapping<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">SwapDir<pos:position pos:line="15" pos:column="16"/></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">sd<pos:position pos:line="15" pos:column="20"/></name></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
        <comment type="block" pos:line="16" pos:column="9">/*
         * Initialize the little array that translates UFS cache_dir
         * number into the Config.cacheSwap.swapDirs array index.
         */</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">UFSDirToGlobalDirMapping<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="36">(<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">int<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">*<pos:position pos:line="20" pos:column="42"/></operator><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator><call><name pos:line="20" pos:column="43">xcalloc<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><name pos:line="20" pos:column="51">NumberOfUFSDirs<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="68">sizeof<argument_list pos:line="20" pos:column="74">(<argument><expr><operator pos:line="20" pos:column="75">*<pos:position pos:line="20" pos:column="76"/></operator><name pos:line="20" pos:column="76">UFSDirToGlobalDirMapping<pos:position pos:line="20" pos:column="100"/></name></expr></argument>)<pos:position pos:line="20" pos:column="101"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="103"/></expr_stmt>

        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">i<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr><operator pos:line="22" pos:column="19">,<pos:position pos:line="22" pos:column="20"/></operator> <expr><name pos:line="22" pos:column="21">n<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></init> <condition><expr><name pos:line="22" pos:column="28">i<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">&lt;<pos:position pos:line="22" pos:column="34"/></operator> <name><name pos:line="22" pos:column="32">Config<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">cacheSwap<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">.<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="49">n_configured<pos:position pos:line="22" pos:column="61"/></name></name></expr>;<pos:position pos:line="22" pos:column="62"/></condition> <incr><expr><operator pos:line="22" pos:column="63">++<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="65">i<pos:position pos:line="22" pos:column="66"/></name></expr></incr>)<pos:position pos:line="22" pos:column="67"/></control> <block pos:line="22" pos:column="68">{
            <comment type="block" pos:line="23" pos:column="13">/* This is bogus, the controller should just clean each instance once */</comment>
            <expr_stmt><expr><name pos:line="24" pos:column="13">sd<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <cast type="dynamic" pos:line="24" pos:column="18">dynamic_cast <argument_list type="generic" pos:line="24" pos:column="31">&lt;<argument><expr><name pos:line="24" pos:column="32">SwapDir<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">*<pos:position pos:line="24" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="24" pos:column="45"/></argument_list><argument_list pos:line="24" pos:column="42">(<argument><expr><call><name pos:line="24" pos:column="43">INDEXSD<pos:position pos:line="24" pos:column="50"/></name><argument_list pos:line="24" pos:column="50">(<argument><expr><name pos:line="24" pos:column="51">i<pos:position pos:line="24" pos:column="52"/></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></cast></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><call><name><name pos:line="26" pos:column="18">UFSSwapDir<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">::<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">IsUFSDir<pos:position pos:line="26" pos:column="38"/></name></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">sd<pos:position pos:line="26" pos:column="41"/></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="43"/></condition><then pos:line="26" pos:column="43">
                <block type="pseudo"><continue pos:line="27" pos:column="17">continue;<pos:position pos:line="27" pos:column="26"/></continue></block></then></if>

            <decl_stmt><decl><type><name pos:line="29" pos:column="13">UFSSwapDir<pos:position pos:line="29" pos:column="23"/></name> <modifier pos:line="29" pos:column="24">*<pos:position pos:line="29" pos:column="25"/></modifier></type><name pos:line="29" pos:column="25">usd<pos:position pos:line="29" pos:column="28"/></name> <init pos:line="29" pos:column="29">= <expr><cast type="dynamic" pos:line="29" pos:column="31">dynamic_cast<argument_list type="generic" pos:line="29" pos:column="43">&lt;<argument><expr><name pos:line="29" pos:column="44">UFSSwapDir<pos:position pos:line="29" pos:column="54"/></name> <operator pos:line="29" pos:column="55">*<pos:position pos:line="29" pos:column="56"/></operator></expr></argument>&gt;<pos:position pos:line="29" pos:column="60"/></argument_list><argument_list pos:line="29" pos:column="57">(<argument><expr><name pos:line="29" pos:column="58">sd<pos:position pos:line="29" pos:column="60"/></name></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="29" pos:column="62"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="31" pos:column="13">assert<pos:position pos:line="31" pos:column="19"/></name> <argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">usd<pos:position pos:line="31" pos:column="24"/></name></expr></argument>)<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="33" pos:column="13">UFSDirToGlobalDirMapping<pos:position pos:line="33" pos:column="37"/></name><index pos:line="33" pos:column="37">[<expr><name pos:line="33" pos:column="38">n<pos:position pos:line="33" pos:column="39"/></name></expr>]<pos:position pos:line="33" pos:column="40"/></index></name> <operator pos:line="33" pos:column="41">=<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">i<pos:position pos:line="33" pos:column="44"/></name></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">n<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>

            <expr_stmt><expr><name pos:line="36" pos:column="13">j<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">+=<pos:position pos:line="36" pos:column="17"/></operator> <operator pos:line="36" pos:column="18">(<pos:position pos:line="36" pos:column="19"/></operator><name><name pos:line="36" pos:column="19">usd<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">l1<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">*<pos:position pos:line="36" pos:column="28"/></operator> <name><name pos:line="36" pos:column="29">usd<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">l2<pos:position pos:line="36" pos:column="36"/></name></name><operator pos:line="36" pos:column="36">)<pos:position pos:line="36" pos:column="37"/></operator></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="39" pos:column="9">assert<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">n<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">==<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">NumberOfUFSDirs<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="40" pos:column="9">/*
         * Start the commonUfsDirClean() swap_index with a random
         * value.  j equals the total number of UFS level 2
         * swap directories
         */</comment>
        <expr_stmt><expr><name pos:line="45" pos:column="9">swap_index<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <call pos:line="45" pos:column="22">(<name pos:line="45" pos:column="23">int<pos:position pos:line="45" pos:column="26"/></name>) <argument_list pos:line="45" pos:column="28">(<argument><expr><call><name pos:line="45" pos:column="29">squid_random<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">()<pos:position pos:line="45" pos:column="43"/></argument_list></call> <operator pos:line="45" pos:column="44">%<pos:position pos:line="45" pos:column="45"/></operator> <name pos:line="45" pos:column="46">j<pos:position pos:line="45" pos:column="47"/></name></expr></argument>)<pos:position pos:line="45" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* if the rebuild is finished, start cleaning directories. */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><literal type="number" pos:line="49" pos:column="9">0<pos:position pos:line="49" pos:column="10"/></literal> <operator pos:line="49" pos:column="11">==<pos:position pos:line="49" pos:column="13"/></operator> <name><name pos:line="49" pos:column="14">StoreController<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">::<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="31">store_dirs_rebuilding<pos:position pos:line="49" pos:column="52"/></name></name></expr>)<pos:position pos:line="49" pos:column="53"/></condition><then pos:line="49" pos:column="53"> <block pos:line="49" pos:column="54">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">n<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">DirClean<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">swap_index<pos:position pos:line="50" pos:column="32"/></name></expr></argument>)<pos:position pos:line="50" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="51" pos:column="9">++<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">swap_index<pos:position pos:line="51" pos:column="21"/></name></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">eventAdd<pos:position pos:line="54" pos:column="13"/></name><argument_list pos:line="54" pos:column="13">(<argument><expr><literal type="string" pos:line="54" pos:column="14">"storeDirClean"<pos:position pos:line="54" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="31">CleanEvent<pos:position pos:line="54" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="43">NULL<pos:position pos:line="54" pos:column="47"/></name></expr></argument>,
             <argument><expr><literal type="number" pos:line="55" pos:column="14">15.0<pos:position pos:line="55" pos:column="18"/></literal> <operator pos:line="55" pos:column="19">*<pos:position pos:line="55" pos:column="20"/></operator> <call><name pos:line="55" pos:column="21">exp<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><operator pos:line="55" pos:column="25">-<pos:position pos:line="55" pos:column="26"/></operator><literal type="number" pos:line="55" pos:column="26">0.25<pos:position pos:line="55" pos:column="30"/></literal> <operator pos:line="55" pos:column="31">*<pos:position pos:line="55" pos:column="32"/></operator> <name pos:line="55" pos:column="33">n<pos:position pos:line="55" pos:column="34"/></name></expr></argument>)<pos:position pos:line="55" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="37">1<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

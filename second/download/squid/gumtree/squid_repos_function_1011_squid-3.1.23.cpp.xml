<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1011_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Debug<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">xassert<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">msg<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">file<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">line<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">CurrentDebug<pos:position pos:line="5" pos:column="21"/></name></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22"> <block pos:line="5" pos:column="23">{
        <expr_stmt><expr><operator pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">CurrentDebug<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;&lt;<pos:position pos:line="6" pos:column="31"/></operator> <literal type="string" pos:line="6" pos:column="26">"assertion failed: "<pos:position pos:line="6" pos:column="46"/></literal> <operator pos:line="6" pos:column="47">&lt;&lt;<pos:position pos:line="6" pos:column="55"/></operator> <name pos:line="6" pos:column="50">file<pos:position pos:line="6" pos:column="54"/></name> <operator pos:line="6" pos:column="55">&lt;&lt;<pos:position pos:line="6" pos:column="63"/></operator> <literal type="string" pos:line="6" pos:column="58">":"<pos:position pos:line="6" pos:column="61"/></literal> <operator pos:line="6" pos:column="62">&lt;&lt;<pos:position pos:line="6" pos:column="70"/></operator> <name pos:line="6" pos:column="65">line<pos:position pos:line="6" pos:column="69"/></name> <operator pos:line="6" pos:column="70">&lt;&lt;<pos:position pos:line="6" pos:column="78"/></operator>
        <literal type="string" pos:line="7" pos:column="9">": \""<pos:position pos:line="7" pos:column="15"/></literal> <operator pos:line="7" pos:column="16">&lt;&lt;<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="19">msg<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="string" pos:line="7" pos:column="26">"\""<pos:position pos:line="7" pos:column="30"/></literal></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">abort<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">()<pos:position pos:line="9" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

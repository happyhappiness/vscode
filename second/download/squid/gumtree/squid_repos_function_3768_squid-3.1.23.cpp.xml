<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3768_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">finalize<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// create service reps from service configs</comment>
    <typedef pos:line="5" pos:column="5">typedef <type><name><name><name pos:line="5" pos:column="13">Vector<pos:position pos:line="5" pos:column="19"/></name><argument_list type="generic" pos:line="5" pos:column="19">&lt;<argument><expr><name pos:line="5" pos:column="20">ServiceConfig<pos:position pos:line="5" pos:column="33"/></name><modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></expr></argument>&gt;<pos:position pos:line="5" pos:column="38"/></argument_list></name><operator pos:line="5" pos:column="35">::<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">const_iterator<pos:position pos:line="5" pos:column="51"/></name></name></type> <name pos:line="5" pos:column="52">VISCI<pos:position pos:line="5" pos:column="57"/></name>;<pos:position pos:line="5" pos:column="58"/></typedef>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name><name pos:line="6" pos:column="11">Vector<pos:position pos:line="6" pos:column="17"/></name><argument_list type="generic" pos:line="6" pos:column="17">&lt;<argument><expr><name pos:line="6" pos:column="18">ServiceConfig<pos:position pos:line="6" pos:column="31"/></name><modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></expr></argument>&gt;<pos:position pos:line="6" pos:column="36"/></argument_list></name> <modifier pos:line="6" pos:column="34">&amp;<pos:position pos:line="6" pos:column="39"/></modifier></type><name pos:line="6" pos:column="35">configs<pos:position pos:line="6" pos:column="42"/></name> <init pos:line="6" pos:column="43">= <expr><name pos:line="6" pos:column="45">serviceConfigs<pos:position pos:line="6" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">93<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="15">3<pos:position pos:line="7" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="18">HERE<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="string" pos:line="7" pos:column="26">"Found "<pos:position pos:line="7" pos:column="34"/></literal> <operator pos:line="7" pos:column="35">&lt;&lt;<pos:position pos:line="7" pos:column="43"/></operator> <call><name><name pos:line="7" pos:column="38">configs<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">size<pos:position pos:line="7" pos:column="50"/></name></name><argument_list pos:line="7" pos:column="50">()<pos:position pos:line="7" pos:column="52"/></argument_list></call> <operator pos:line="7" pos:column="53">&lt;&lt;<pos:position pos:line="7" pos:column="61"/></operator> <literal type="string" pos:line="7" pos:column="56">" service configs."<pos:position pos:line="7" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="77"/></expr_stmt>
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name pos:line="8" pos:column="10">VISCI<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">i<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><call><name><name pos:line="8" pos:column="20">configs<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">begin<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">()<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="36"/></init> <condition><expr><name pos:line="8" pos:column="37">i<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">!=<pos:position pos:line="8" pos:column="41"/></operator> <call><name><name pos:line="8" pos:column="42">configs<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">.<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">end<pos:position pos:line="8" pos:column="53"/></name></name><argument_list pos:line="8" pos:column="53">()<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></condition> <incr><expr><operator pos:line="8" pos:column="57">++<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">i<pos:position pos:line="8" pos:column="60"/></name></expr></incr>)<pos:position pos:line="8" pos:column="61"/></control> <block pos:line="8" pos:column="62">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">ServiceConfig<pos:position pos:line="9" pos:column="28"/></name> <modifier pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></modifier></type><name pos:line="9" pos:column="30">cfg<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><operator pos:line="9" pos:column="37">*<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">i<pos:position pos:line="9" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">FindService<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name><name pos:line="10" pos:column="25">cfg<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">key<pos:position pos:line="10" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call> <operator pos:line="10" pos:column="34">!=<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">debugs<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="number" pos:line="11" pos:column="20">93<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"ERROR: Duplicate adaptation service name: "<pos:position pos:line="11" pos:column="70"/></literal> <operator pos:line="11" pos:column="71">&lt;&lt;<pos:position pos:line="11" pos:column="79"/></operator>
                   <name><name pos:line="12" pos:column="20">cfg<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">key<pos:position pos:line="12" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
            <continue pos:line="13" pos:column="13">continue;<pos:position pos:line="13" pos:column="22"/></continue> <comment type="line" pos:line="13" pos:column="23">// TODO: make fatal</comment>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">ServicePointer<pos:position pos:line="15" pos:column="23"/></name></type> <name pos:line="15" pos:column="24">s<pos:position pos:line="15" pos:column="25"/></name> <init pos:line="15" pos:column="26">= <expr><call><name pos:line="15" pos:column="28">createService<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><operator pos:line="15" pos:column="43">*<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">i<pos:position pos:line="15" pos:column="45"/></name></expr></argument>)<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">!=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">NULL<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">AllServices<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><call><name pos:line="17" pos:column="27">push_back<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">s<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">93<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="15">3<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">HERE<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;&lt;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="string" pos:line="20" pos:column="26">"Created "<pos:position pos:line="20" pos:column="36"/></literal> <operator pos:line="20" pos:column="37">&lt;&lt;<pos:position pos:line="20" pos:column="45"/></operator> <call><name><name pos:line="20" pos:column="40">configs<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">.<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">size<pos:position pos:line="20" pos:column="52"/></name></name><argument_list pos:line="20" pos:column="52">()<pos:position pos:line="20" pos:column="54"/></argument_list></call> <operator pos:line="20" pos:column="55">&lt;&lt;<pos:position pos:line="20" pos:column="63"/></operator>
           <literal type="string" pos:line="21" pos:column="12">" message adaptation services."<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

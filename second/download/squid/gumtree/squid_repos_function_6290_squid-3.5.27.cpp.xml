<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6290_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">OpenTimeout<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier></type> <name pos:line="2" pos:column="36">param<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">param<pos:position pos:line="4" pos:column="15"/></name></expr></argument>)<pos:position pos:line="4" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt>
    <comment type="line" pos:line="5" pos:column="5">// the pointer is used for comparison only and not dereferenced</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">IpcIoFile<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier><specifier pos:line="6" pos:column="22">const<pos:position pos:line="6" pos:column="27"/></specifier></type> <name pos:line="6" pos:column="28">ipcIoFile<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">=
        <expr><cast type="reinterpret" pos:line="7" pos:column="9">reinterpret_cast<argument_list type="generic" pos:line="7" pos:column="25">&lt;<argument><expr><specifier pos:line="7" pos:column="26">const<pos:position pos:line="7" pos:column="31"/></specifier> <name pos:line="7" pos:column="32">IpcIoFile<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="47"/></argument_list><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">param<pos:position pos:line="7" pos:column="50"/></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name><name pos:line="8" pos:column="10">IpcIoFileList<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">::<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">iterator<pos:position pos:line="8" pos:column="33"/></name></name></type> <name pos:line="8" pos:column="34">i<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><call><name><name pos:line="8" pos:column="38">WaitingForOpen<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">.<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="53">begin<pos:position pos:line="8" pos:column="58"/></name></name><argument_list pos:line="8" pos:column="58">()<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="61"/></init>
            <condition><expr><name pos:line="9" pos:column="13">i<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">!=<pos:position pos:line="9" pos:column="17"/></operator> <call><name><name pos:line="9" pos:column="18">WaitingForOpen<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">end<pos:position pos:line="9" pos:column="36"/></name></name><argument_list pos:line="9" pos:column="36">()<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></condition> <incr><expr><operator pos:line="9" pos:column="40">++<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">i<pos:position pos:line="9" pos:column="43"/></name></expr></incr>)<pos:position pos:line="9" pos:column="44"/></control> <block pos:line="9" pos:column="45">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">ipcIoFile<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
            <expr_stmt><expr><call><name><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">i<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">)<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">openCompleted<pos:position pos:line="11" pos:column="32"/></name></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="12" pos:column="13">WaitingForOpen<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">erase<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">i<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
            <break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

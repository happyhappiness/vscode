<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1248_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AccessLogEntry<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">getLogClientIp<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">buf<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">size_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">bufsz<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">log_ip<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="6" pos:column="27"/></name></expr></cpp:if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">Config<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">onoff<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">log_uses_indirect_client<pos:position pos:line="7" pos:column="46"/></name></name> <operator pos:line="7" pos:column="47">&amp;&amp;<pos:position pos:line="7" pos:column="57"/></operator> <name pos:line="7" pos:column="50">request<pos:position pos:line="7" pos:column="57"/></name></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">log_ip<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name><name pos:line="8" pos:column="18">request<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">indirect_client_addr<pos:position pos:line="8" pos:column="47"/></name></name></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">tcpClient<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">!=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr>)<pos:position pos:line="11" pos:column="31"/></condition><then pos:line="11" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="13">log_ip<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="22">tcpClient<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">remote<pos:position pos:line="12" pos:column="39"/></name></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt></block></then></if></elseif>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="13">log_ip<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">cache<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">caddr<pos:position pos:line="14" pos:column="33"/></name></name></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt></block></else></if>

    <comment type="line" pos:line="16" pos:column="5">// internally generated requests (and some ICAP) lack client IP</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">log_ip<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">isNoAddr<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">strncpy<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">buf<pos:position pos:line="18" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="22">"-"<pos:position pos:line="18" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">bufsz<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="22" pos:column="5">// Apply so-called 'privacy masking' to IPv4 clients</comment>
    <comment type="line" pos:line="23" pos:column="5">// - localhost IP is always shown in full</comment>
    <comment type="line" pos:line="24" pos:column="5">// - IPv4 clients masked with client_netmask</comment>
    <comment type="line" pos:line="25" pos:column="5">// - IPv6 clients use 'privacy addressing' instead.</comment>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><call><name><name pos:line="27" pos:column="10">log_ip<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">isLocalhost<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">()<pos:position pos:line="27" pos:column="30"/></argument_list></call> <operator pos:line="27" pos:column="31">&amp;&amp;<pos:position pos:line="27" pos:column="41"/></operator> <call><name><name pos:line="27" pos:column="34">log_ip<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">.<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">isIPv4<pos:position pos:line="27" pos:column="47"/></name></name><argument_list pos:line="27" pos:column="47">()<pos:position pos:line="27" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="28" pos:column="9">log_ip<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">.<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">applyMask<pos:position pos:line="28" pos:column="25"/></name></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name><name pos:line="28" pos:column="26">Config<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">Addrs<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">client_netmask<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">log_ip<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">toStr<pos:position pos:line="30" pos:column="17"/></name></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">buf<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="23">bufsz<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

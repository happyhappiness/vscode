<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_877_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">comm_has_incomplete_write<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">fd<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">isOpen<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">fd<pos:position pos:line="4" pos:column="21"/></name></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call> <operator pos:line="4" pos:column="23">&amp;&amp;<pos:position pos:line="4" pos:column="33"/></operator> <call><name pos:line="4" pos:column="26">COMMIO_FD_WRITECB<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">fd<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">COMMIO_FD_WRITECB<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">fd<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><call><name pos:line="5" pos:column="35">active<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">()<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

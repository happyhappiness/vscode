<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5913_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IcmpSquid<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Close<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ICMP<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">icmp_sock<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">37<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="16">DBG_IMPORTANT<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">HERE<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">&lt;&lt;<pos:position pos:line="9" pos:column="44"/></operator> <literal type="string" pos:line="9" pos:column="39">"Closing Pinger socket on FD "<pos:position pos:line="9" pos:column="69"/></literal> <operator pos:line="9" pos:column="70">&lt;&lt;<pos:position pos:line="9" pos:column="78"/></operator> <name pos:line="9" pos:column="73">icmp_sock<pos:position pos:line="9" pos:column="82"/></name></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="84"/></expr_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="11" pos:column="20"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">send<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">icmp_sock<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><specifier pos:line="13" pos:column="22">const<pos:position pos:line="13" pos:column="27"/></specifier> <name pos:line="13" pos:column="28">void<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></operator><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator> <literal type="string" pos:line="13" pos:column="36">"$shutdown\n"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="51">10<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="55">0<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>

<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">comm_close<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">icmp_sock<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="19" pos:column="20"/></name></expr></cpp:if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">hIpc<pos:position pos:line="21" pos:column="13"/></name></expr>)<pos:position pos:line="21" pos:column="14"/></condition><then pos:line="21" pos:column="14"> <block pos:line="21" pos:column="15">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">WaitForSingleObject<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">hIpc<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="39">12000<pos:position pos:line="22" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call> <operator pos:line="22" pos:column="46">!=<pos:position pos:line="22" pos:column="48"/></operator> <name pos:line="22" pos:column="49">WAIT_OBJECT_0<pos:position pos:line="22" pos:column="62"/></name></expr>)<pos:position pos:line="22" pos:column="63"/></condition><then pos:line="22" pos:column="63"> <block pos:line="22" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">getCurrentTime<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">()<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">debugs<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="number" pos:line="24" pos:column="20">37<pos:position pos:line="24" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">DBG_CRITICAL<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="38">HERE<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">&lt;&lt;<pos:position pos:line="24" pos:column="51"/></operator> <literal type="string" pos:line="24" pos:column="46">"WARNING: (pinger,"<pos:position pos:line="24" pos:column="65"/></literal> <operator pos:line="24" pos:column="66">&lt;&lt;<pos:position pos:line="24" pos:column="74"/></operator> <name pos:line="24" pos:column="69">pid<pos:position pos:line="24" pos:column="72"/></name> <operator pos:line="24" pos:column="73">&lt;&lt;<pos:position pos:line="24" pos:column="81"/></operator> <literal type="string" pos:line="24" pos:column="76">") didn't exit in 12 seconds"<pos:position pos:line="24" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="107"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">CloseHandle<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">hIpc<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="31" pos:column="5">icmp_sock<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <operator pos:line="31" pos:column="17">-<pos:position pos:line="31" pos:column="18"/></operator><literal type="number" pos:line="31" pos:column="18">1<pos:position pos:line="31" pos:column="19"/></literal></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>

<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

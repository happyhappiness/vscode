<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_746_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">WIN32_InstallService<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SC_HANDLE<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">schService<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SC_HANDLE<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">schSCManager<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">ServicePath<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">512<pos:position pos:line="6" pos:column="25"/></literal></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">szPath<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">512<pos:position pos:line="7" pos:column="20"/></literal></expr>]<pos:position pos:line="7" pos:column="21"/></index></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">lenpath<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">WIN32_Service_name<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">WIN32_Service_name<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <call><name pos:line="11" pos:column="30">xstrdup<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">_WIN_SQUID_DEFAULT_SERVICE_NAME<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">strcat<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">REGKEY<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">WIN32_Service_name<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">keys<pos:position pos:line="15" pos:column="9"/></name><index pos:line="15" pos:column="9">[<expr><literal type="number" pos:line="15" pos:column="10">4<pos:position pos:line="15" pos:column="11"/></literal></expr>]<pos:position pos:line="15" pos:column="12"/></index></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">WIN32_Service_name<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">lenpath<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">GetModuleFileName<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">ServicePath<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="57">512<pos:position pos:line="17" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call><operator pos:line="17" pos:column="61">)<pos:position pos:line="17" pos:column="62"/></operator> <operator pos:line="17" pos:column="63">==<pos:position pos:line="17" pos:column="65"/></operator> <literal type="number" pos:line="17" pos:column="66">0<pos:position pos:line="17" pos:column="67"/></literal></expr>)<pos:position pos:line="17" pos:column="68"/></condition><then pos:line="17" pos:column="68"> <block pos:line="17" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">fprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">stderr<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"Can't get executable path\n"<pos:position pos:line="18" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">exit<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">snprintf<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">szPath<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="22">sizeof<argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">szPath<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="38">"%s %s:%s"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">ServicePath<pos:position pos:line="22" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="63">_WIN_SQUID_SERVICE_OPTION<pos:position pos:line="22" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="90">WIN32_Service_name<pos:position pos:line="22" pos:column="108"/></name></expr></argument>)<pos:position pos:line="22" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="110"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">schSCManager<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <call><name pos:line="23" pos:column="20">OpenSCManager<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">NULL<pos:position pos:line="23" pos:column="38"/></name></expr></argument>,	<comment type="block" pos:line="23" pos:column="41">/* machine (NULL == local)    */</comment>
                                 <argument><expr><name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name></expr></argument>,			<comment type="block" pos:line="24" pos:column="57">/* database (NULL == default) */</comment>
                                 <argument><expr><name pos:line="25" pos:column="34">SC_MANAGER_ALL_ACCESS<pos:position pos:line="25" pos:column="55"/></name></expr></argument>	<comment type="block" pos:line="25" pos:column="57">/* access required            */</comment>
                                )<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">schSCManager<pos:position pos:line="28" pos:column="22"/></name></expr>)<pos:position pos:line="28" pos:column="23"/></condition><then pos:line="28" pos:column="23"> <block pos:line="28" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">fprintf<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">stderr<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="25">"OpenSCManager failed\n"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">exit<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">schService<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">CreateService<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">schSCManager<pos:position pos:line="32" pos:column="48"/></name></expr></argument>,    <comment type="block" pos:line="32" pos:column="53">/* SCManager database     */</comment>
                                   <argument><expr><name pos:line="33" pos:column="36">WIN32_Service_name<pos:position pos:line="33" pos:column="54"/></name></expr></argument>,			    <comment type="block" pos:line="33" pos:column="77">/* name of service        */</comment>
                                   <argument><expr><name pos:line="34" pos:column="36">WIN32_Service_name<pos:position pos:line="34" pos:column="54"/></name></expr></argument>,			    <comment type="block" pos:line="34" pos:column="77">/* name to display        */</comment>
                                   <argument><expr><name pos:line="35" pos:column="36">SERVICE_ALL_ACCESS<pos:position pos:line="35" pos:column="54"/></name></expr></argument>,			    <comment type="block" pos:line="35" pos:column="77">/* desired access         */</comment>
                                   <argument><expr><name pos:line="36" pos:column="36">SERVICE_WIN32_OWN_PROCESS<pos:position pos:line="36" pos:column="61"/></name></expr></argument>,		    <comment type="block" pos:line="36" pos:column="77">/* service type           */</comment>
                                   <argument><expr><name pos:line="37" pos:column="36">SERVICE_AUTO_START<pos:position pos:line="37" pos:column="54"/></name></expr></argument>,			    <comment type="block" pos:line="37" pos:column="77">/* start type             */</comment>
                                   <argument><expr><name pos:line="38" pos:column="36">SERVICE_ERROR_NORMAL<pos:position pos:line="38" pos:column="56"/></name></expr></argument>,		    <comment type="block" pos:line="38" pos:column="77">/* error control type     */</comment>
                                   <argument><expr><operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><specifier pos:line="39" pos:column="37">const<pos:position pos:line="39" pos:column="42"/></specifier> <name pos:line="39" pos:column="43">char<pos:position pos:line="39" pos:column="47"/></name> <operator pos:line="39" pos:column="48">*<pos:position pos:line="39" pos:column="49"/></operator><operator pos:line="39" pos:column="49">)<pos:position pos:line="39" pos:column="50"/></operator> <name pos:line="39" pos:column="51">szPath<pos:position pos:line="39" pos:column="57"/></name></expr></argument>,		    <comment type="block" pos:line="39" pos:column="77">/* service's binary       */</comment>
                                   <argument><expr><name pos:line="40" pos:column="36">NULL<pos:position pos:line="40" pos:column="40"/></name></expr></argument>,				    <comment type="block" pos:line="40" pos:column="77">/* no load ordering group */</comment>
                                   <argument><expr><name pos:line="41" pos:column="36">NULL<pos:position pos:line="41" pos:column="40"/></name></expr></argument>,				    <comment type="block" pos:line="41" pos:column="77">/* no tag identifier      */</comment>
                                   <argument><expr><literal type="string" pos:line="42" pos:column="36">"Tcpip\0AFD\0"<pos:position pos:line="42" pos:column="50"/></literal></expr></argument>,			    <comment type="block" pos:line="42" pos:column="77">/* dependencies           */</comment>
                                   <argument><expr><name pos:line="43" pos:column="36">NULL<pos:position pos:line="43" pos:column="40"/></name></expr></argument>,				    <comment type="block" pos:line="43" pos:column="77">/* LocalSystem account    */</comment>
                                   <argument><expr><name pos:line="44" pos:column="36">NULL<pos:position pos:line="44" pos:column="40"/></name></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>				    <comment type="block" pos:line="44" pos:column="77">/* no password            */</comment>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">schService<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">WIN32_OS_version<pos:position pos:line="47" pos:column="33"/></name> <operator pos:line="47" pos:column="34">&gt;<pos:position pos:line="47" pos:column="38"/></operator> <name pos:line="47" pos:column="36">_WIN_OS_WINNT<pos:position pos:line="47" pos:column="49"/></name></expr>)<pos:position pos:line="47" pos:column="50"/></condition><then pos:line="47" pos:column="50"> <block pos:line="47" pos:column="51">{
                <decl_stmt><decl><type><name pos:line="48" pos:column="17">HMODULE<pos:position pos:line="48" pos:column="24"/></name></type> <name pos:line="48" pos:column="25">ADVAPI32Handle<pos:position pos:line="48" pos:column="39"/></name></decl>;<pos:position pos:line="48" pos:column="40"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="49" pos:column="17">PFChangeServiceConfig2<pos:position pos:line="49" pos:column="39"/></name></type> <name pos:line="49" pos:column="40">ChangeServiceConfig2<pos:position pos:line="49" pos:column="60"/></name></decl>;<pos:position pos:line="49" pos:column="61"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="50" pos:column="17">DWORD<pos:position pos:line="50" pos:column="22"/></name></type> <name pos:line="50" pos:column="23">dwInfoLevel<pos:position pos:line="50" pos:column="34"/></name> <init pos:line="50" pos:column="35">= <expr><name pos:line="50" pos:column="37">SERVICE_CONFIG_DESCRIPTION<pos:position pos:line="50" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="64"/></decl_stmt>

                <expr_stmt><expr><name pos:line="52" pos:column="17">ADVAPI32Handle<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <call><name pos:line="52" pos:column="34">GetModuleHandle<pos:position pos:line="52" pos:column="49"/></name><argument_list pos:line="52" pos:column="49">(<argument><expr><literal type="string" pos:line="52" pos:column="50">"advapi32"<pos:position pos:line="52" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name pos:line="53" pos:column="17">ChangeServiceConfig2<pos:position pos:line="53" pos:column="37"/></name> <operator pos:line="53" pos:column="38">=<pos:position pos:line="53" pos:column="39"/></operator> <operator pos:line="53" pos:column="40">(<pos:position pos:line="53" pos:column="41"/></operator><name pos:line="53" pos:column="41">PFChangeServiceConfig2<pos:position pos:line="53" pos:column="63"/></name><operator pos:line="53" pos:column="63">)<pos:position pos:line="53" pos:column="64"/></operator> <call><name pos:line="53" pos:column="65">GetProcAddress<pos:position pos:line="53" pos:column="79"/></name><argument_list pos:line="53" pos:column="79">(<argument><expr><name pos:line="53" pos:column="80">ADVAPI32Handle<pos:position pos:line="53" pos:column="94"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="96">CHANGESERVICECONFIG2<pos:position pos:line="53" pos:column="116"/></name></expr></argument>)<pos:position pos:line="53" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="118"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">ChangeServiceConfig2<pos:position pos:line="54" pos:column="37"/></name><argument_list pos:line="54" pos:column="37">(<argument><expr><name pos:line="54" pos:column="38">schService<pos:position pos:line="54" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="50">dwInfoLevel<pos:position pos:line="54" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="63">&amp;<pos:position pos:line="54" pos:column="68"/></operator><name pos:line="54" pos:column="64">Squid_ServiceDescription<pos:position pos:line="54" pos:column="88"/></name></expr></argument>)<pos:position pos:line="54" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><name pos:line="55" pos:column="17">dwInfoLevel<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <name pos:line="55" pos:column="31">SERVICE_CONFIG_FAILURE_ACTIONS<pos:position pos:line="55" pos:column="61"/></name></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">ChangeServiceConfig2<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">schService<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="50">dwInfoLevel<pos:position pos:line="56" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="63">&amp;<pos:position pos:line="56" pos:column="68"/></operator><name pos:line="56" pos:column="64">Squid_ServiceFailureActions<pos:position pos:line="56" pos:column="91"/></name></expr></argument>)<pos:position pos:line="56" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="93"/></expr_stmt>
            }<pos:position pos:line="57" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="59" pos:column="13">CloseServiceHandle<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">schService<pos:position pos:line="59" pos:column="42"/></name></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
            <comment type="block" pos:line="60" pos:column="13">/* Now store the config file location in the registry */</comment>

            <if pos:line="62" pos:column="13">if <condition pos:line="62" pos:column="16">(<expr><operator pos:line="62" pos:column="17">!<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">ConfigFile<pos:position pos:line="62" pos:column="28"/></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="17">ConfigFile<pos:position pos:line="63" pos:column="27"/></name> <operator pos:line="63" pos:column="28">=<pos:position pos:line="63" pos:column="29"/></operator> <call><name pos:line="63" pos:column="30">xstrdup<pos:position pos:line="63" pos:column="37"/></name><argument_list pos:line="63" pos:column="37">(<argument><expr><name pos:line="63" pos:column="38">DefaultConfigFile<pos:position pos:line="63" pos:column="55"/></name></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="57"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="65" pos:column="13">WIN32_StoreKey<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">CONFIGFILE<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="40">REG_SZ<pos:position pos:line="65" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="48">(<pos:position pos:line="65" pos:column="49"/></operator><name pos:line="65" pos:column="49">unsigned<pos:position pos:line="65" pos:column="57"/></name> <name pos:line="65" pos:column="58">char<pos:position pos:line="65" pos:column="62"/></name> <operator pos:line="65" pos:column="63">*<pos:position pos:line="65" pos:column="64"/></operator><operator pos:line="65" pos:column="64">)<pos:position pos:line="65" pos:column="65"/></operator> <name pos:line="65" pos:column="66">ConfigFile<pos:position pos:line="65" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="78">strlen<pos:position pos:line="65" pos:column="84"/></name><argument_list pos:line="65" pos:column="84">(<argument><expr><name pos:line="65" pos:column="85">ConfigFile<pos:position pos:line="65" pos:column="95"/></name></expr></argument>)<pos:position pos:line="65" pos:column="96"/></argument_list></call> <operator pos:line="65" pos:column="97">+<pos:position pos:line="65" pos:column="98"/></operator> <literal type="number" pos:line="65" pos:column="99">1<pos:position pos:line="65" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="102"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="67" pos:column="13">printf<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="string" pos:line="67" pos:column="20">"Squid Cache version %s for %s\n"<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">version_string<pos:position pos:line="67" pos:column="69"/></name></expr></argument>,
                   <argument><expr><name pos:line="68" pos:column="20">CONFIG_HOST_TYPE<pos:position pos:line="68" pos:column="36"/></name></expr></argument>)<pos:position pos:line="68" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="70" pos:column="13">printf<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><literal type="string" pos:line="70" pos:column="20">"installed successfully as %s Windows System Service.\n"<pos:position pos:line="70" pos:column="76"/></literal></expr></argument>,
                   <argument><expr><name pos:line="71" pos:column="20">WIN32_Service_name<pos:position pos:line="71" pos:column="38"/></name></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="73" pos:column="13">printf<pos:position pos:line="73" pos:column="19"/></name>
            <argument_list pos:line="74" pos:column="13">(<argument><expr><literal type="string" pos:line="74" pos:column="14">"To run, start it from the Services Applet of Control Panel.\n"<pos:position pos:line="74" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="79"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="76" pos:column="13">printf<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><literal type="string" pos:line="76" pos:column="20">"Don't forget to edit squid.conf before starting it.\n\n"<pos:position pos:line="76" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then> <else pos:line="77" pos:column="11">else <block pos:line="77" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">fprintf<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><name pos:line="78" pos:column="21">stderr<pos:position pos:line="78" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="29">"CreateService failed\n"<pos:position pos:line="78" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">exit<pos:position pos:line="79" pos:column="17"/></name><argument_list pos:line="79" pos:column="17">(<argument><expr><literal type="number" pos:line="79" pos:column="18">1<pos:position pos:line="79" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="82" pos:column="9">CloseServiceHandle<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><name pos:line="82" pos:column="28">schSCManager<pos:position pos:line="82" pos:column="40"/></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></else></if>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

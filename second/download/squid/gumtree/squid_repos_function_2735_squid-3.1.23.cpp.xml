<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2735_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">update<pos:position pos:line="2" pos:column="19"/></name></name> <parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">HttpHeader<pos:position pos:line="2" pos:column="31"/></name> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">fresh<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">HttpHeaderMask<pos:position pos:line="2" pos:column="60"/></name> <specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">denied_mask<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">HttpHeaderEntry<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">e<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeaderPos<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">pos<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">HttpHeaderInitPos<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">fresh<pos:position pos:line="6" pos:column="17"/></name></expr></argument>)<pos:position pos:line="6" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">this<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">fresh<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">e<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name><name pos:line="9" pos:column="17">fresh<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">getEntry<pos:position pos:line="9" pos:column="32"/></name></name><argument_list pos:line="9" pos:column="32">(<argument><expr><operator pos:line="9" pos:column="33">&amp;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="34">pos<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call><operator pos:line="9" pos:column="38">)<pos:position pos:line="9" pos:column="39"/></operator></expr>)<pos:position pos:line="9" pos:column="40"/></condition> <block pos:line="9" pos:column="41">{
        <comment type="block" pos:line="10" pos:column="9">/* deny bad guys (ok to check for HDR_OTHER) here */</comment>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">denied_mask<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <call><name pos:line="12" pos:column="28">CBIT_TEST<pos:position pos:line="12" pos:column="37"/></name><argument_list pos:line="12" pos:column="37">(<argument><expr><operator pos:line="12" pos:column="38">*<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">denied_mask<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="52">e<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">id<pos:position pos:line="12" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="59"/></condition><then pos:line="12" pos:column="59">
            <block type="pseudo"><continue pos:line="13" pos:column="13">continue;<pos:position pos:line="13" pos:column="22"/></continue></block></then></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">e<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">id<pos:position pos:line="15" pos:column="18"/></name></name> <operator pos:line="15" pos:column="19">!=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">HDR_OTHER<pos:position pos:line="15" pos:column="31"/></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="13">delById<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name><name pos:line="16" pos:column="21">e<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">id<pos:position pos:line="16" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt></block></then>
        <else pos:line="17" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">delByName<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><call><name><name pos:line="18" pos:column="23">e<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">name<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">termedBuf<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">()<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt></block></else></if>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="21" pos:column="5">pos<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <name pos:line="21" pos:column="11">HttpHeaderInitPos<pos:position pos:line="21" pos:column="28"/></name></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">e<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name><name pos:line="22" pos:column="17">fresh<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">getEntry<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">(<argument><expr><operator pos:line="22" pos:column="33">&amp;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="34">pos<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator></expr>)<pos:position pos:line="22" pos:column="40"/></condition> <block pos:line="22" pos:column="41">{
        <comment type="block" pos:line="23" pos:column="9">/* deny bad guys (ok to check for HDR_OTHER) here */</comment>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">denied_mask<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">&amp;&amp;<pos:position pos:line="25" pos:column="35"/></operator> <call><name pos:line="25" pos:column="28">CBIT_TEST<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><operator pos:line="25" pos:column="38">*<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">denied_mask<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="52">e<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">id<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="59"/></condition><then pos:line="25" pos:column="59">
            <block type="pseudo"><continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">55<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">7<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"Updating header '"<pos:position pos:line="28" pos:column="42"/></literal> <operator pos:line="28" pos:column="43">&lt;&lt;<pos:position pos:line="28" pos:column="51"/></operator> <name><name pos:line="28" pos:column="46">HeadersAttrs<pos:position pos:line="28" pos:column="58"/></name><index pos:line="28" pos:column="58">[<expr><name><name pos:line="28" pos:column="59">e<pos:position pos:line="28" pos:column="60"/></name><operator pos:line="28" pos:column="60">-&gt;<pos:position pos:line="28" pos:column="65"/></operator><name pos:line="28" pos:column="62">id<pos:position pos:line="28" pos:column="64"/></name></name></expr>]<pos:position pos:line="28" pos:column="65"/></index></name><operator pos:line="28" pos:column="65">.<pos:position pos:line="28" pos:column="66"/></operator><name pos:line="28" pos:column="66">name<pos:position pos:line="28" pos:column="70"/></name> <operator pos:line="28" pos:column="71">&lt;&lt;<pos:position pos:line="28" pos:column="79"/></operator> <literal type="string" pos:line="28" pos:column="74">"' in cached entry"<pos:position pos:line="28" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="95"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">addEntry<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><call><name><name pos:line="30" pos:column="18">e<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">clone<pos:position pos:line="30" pos:column="26"/></name></name><argument_list pos:line="30" pos:column="26">()<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></while>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

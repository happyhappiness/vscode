<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1808_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerCountMcastPeersStart<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">data<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">peer<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">peer<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><operator pos:line="4" pos:column="22">)<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">data<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ps_state<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">psstate<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreEntry<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">fake<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">MemObject<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">mem<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">icp_common_t<pos:position pos:line="8" pos:column="17"/></name> <modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">query<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">reqnum<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">LOCAL_ARRAY<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">url<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">MAX_URL<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">p<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">type<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">PEER_MULTICAST<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">p<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">mcast<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">flags<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">count_event_pending<pos:position pos:line="12" pos:column="39"/></name></name> <operator pos:line="12" pos:column="40">=<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">0<pos:position pos:line="12" pos:column="43"/></literal></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">snprintf<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">url<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">MAX_URL<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"http://"<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">in_addr<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">ToURL<pos:position pos:line="14" pos:column="21"/></name></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">url<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">+<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">7<pos:position pos:line="14" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">MAX_URL<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">-<pos:position pos:line="14" pos:column="38"/></operator><literal type="number" pos:line="14" pos:column="38">8<pos:position pos:line="14" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">strcat<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">url<pos:position pos:line="15" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="17">"/"<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">fake<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">storeCreateEntry<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">url<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">url<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="39">request_flags<pos:position pos:line="16" pos:column="52"/></name><argument_list pos:line="16" pos:column="52">()<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="56">METHOD_GET<pos:position pos:line="16" pos:column="66"/></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">HttpRequest<pos:position pos:line="17" pos:column="16"/></name> <modifier pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></modifier></type><name pos:line="17" pos:column="18">req<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><call><name><name pos:line="17" pos:column="24">HttpRequest<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">::<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">CreateFromUrl<pos:position pos:line="17" pos:column="50"/></name></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">url<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="56"/></decl_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">psstate<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">new<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">ps_state<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">psstate<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">request<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <call><name pos:line="19" pos:column="24">HTTPMSGLOCK<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">req<pos:position pos:line="19" pos:column="39"/></name></expr></argument>)<pos:position pos:line="19" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">psstate<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">entry<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">fake<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">psstate<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">callback<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">psstate<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">callback_data<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">cbdataReference<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">p<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">psstate<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">ping<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">start<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">current_time<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">mem<pos:position pos:line="24" pos:column="8"/></name> <operator pos:line="24" pos:column="9">=<pos:position pos:line="24" pos:column="10"/></operator> <name><name pos:line="24" pos:column="11">fake<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">mem_obj<pos:position pos:line="24" pos:column="24"/></name></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">mem<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">request<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <call><name pos:line="25" pos:column="20">HTTPMSGLOCK<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name><name pos:line="25" pos:column="32">psstate<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">request<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">mem<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">-&gt;<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="10">start_ping<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">current_time<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">mem<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">ping_reply_callback<pos:position pos:line="27" pos:column="29"/></name></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">peerCountHandleIcpReply<pos:position pos:line="27" pos:column="55"/></name></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">mem<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">ircb_data<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">psstate<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">mcastSetTtl<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">theOutIcpConnection<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">p<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">mcast<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">.<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="47">ttl<pos:position pos:line="29" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">p<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">mcast<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">.<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">id<pos:position pos:line="30" pos:column="16"/></name></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name><name pos:line="30" pos:column="19">mem<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">id<pos:position pos:line="30" pos:column="26"/></name></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">reqnum<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">icpSetCacheKey<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><specifier pos:line="31" pos:column="30">const<pos:position pos:line="31" pos:column="35"/></specifier> <name pos:line="31" pos:column="36">cache_key<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">*<pos:position pos:line="31" pos:column="47"/></operator><operator pos:line="31" pos:column="47">)<pos:position pos:line="31" pos:column="48"/></operator><name><name pos:line="31" pos:column="48">fake<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">key<pos:position pos:line="31" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">query<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <call><name><name pos:line="32" pos:column="13">_icp_common_t<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">::<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">createMessage<pos:position pos:line="32" pos:column="41"/></name></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">ICP_QUERY<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="53">0<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">url<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">reqnum<pos:position pos:line="32" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="69">0<pos:position pos:line="32" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">icpUdpSend<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">theOutIcpConnection<pos:position pos:line="33" pos:column="35"/></name></expr></argument>,
               <argument><expr><name><name pos:line="34" pos:column="16">p<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">in_addr<pos:position pos:line="34" pos:column="26"/></name></name></expr></argument>,
               <argument><expr><name pos:line="35" pos:column="16">query<pos:position pos:line="35" pos:column="21"/></name></expr></argument>,
               <argument><expr><name pos:line="36" pos:column="16">LOG_ICP_QUERY<pos:position pos:line="36" pos:column="29"/></name></expr></argument>,
               <argument><expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">fake<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">-&gt;<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="11">ping_status<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <name pos:line="38" pos:column="25">PING_WAITING<pos:position pos:line="38" pos:column="37"/></name></expr>;<pos:position pos:line="38" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">eventAdd<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><literal type="string" pos:line="39" pos:column="14">"peerCountMcastPeersDone"<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>,
             <argument><expr><name pos:line="40" pos:column="14">peerCountMcastPeersDone<pos:position pos:line="40" pos:column="37"/></name></expr></argument>,
             <argument><expr><name pos:line="41" pos:column="14">psstate<pos:position pos:line="41" pos:column="21"/></name></expr></argument>,
             <argument><expr><name><name pos:line="42" pos:column="14">Config<pos:position pos:line="42" pos:column="20"/></name><operator pos:line="42" pos:column="20">.<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">Timeout<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">mcast_icp_query<pos:position pos:line="42" pos:column="44"/></name></name> <operator pos:line="42" pos:column="45">/<pos:position pos:line="42" pos:column="46"/></operator> <literal type="number" pos:line="42" pos:column="47">1000.0<pos:position pos:line="42" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="55">1<pos:position pos:line="42" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">p<pos:position pos:line="43" pos:column="6"/></name><operator pos:line="43" pos:column="6">-&gt;<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="8">mcast<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">.<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">flags<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">counting<pos:position pos:line="43" pos:column="28"/></name></name> <operator pos:line="43" pos:column="29">=<pos:position pos:line="43" pos:column="30"/></operator> <literal type="number" pos:line="43" pos:column="31">1<pos:position pos:line="43" pos:column="32"/></literal></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">peerCountMcastPeersSchedule<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">p<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="36">MCAST_COUNT_RATE<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

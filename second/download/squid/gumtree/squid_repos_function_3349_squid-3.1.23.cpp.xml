<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3349_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">clientGetMoreData<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">clientStreamNode<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type> <name pos:line="2" pos:column="38">aNode<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">ClientHttpRequest<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type> <name pos:line="2" pos:column="65">http<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Test preconditions */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">aNode<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><call><name pos:line="6" pos:column="12">cbdataReferenceValid<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">aNode<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">aNode<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">node<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">prev<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">==<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">NULL<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">aNode<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">node<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">next<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">!=<pos:position pos:line="8" pos:column="31"/></operator> <name pos:line="8" pos:column="32">NULL<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">clientReplyContext<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">context<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><cast type="dynamic" pos:line="9" pos:column="35">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="47">&lt;<argument><expr><name pos:line="9" pos:column="48">clientReplyContext<pos:position pos:line="9" pos:column="66"/></name> <operator pos:line="9" pos:column="67">*<pos:position pos:line="9" pos:column="68"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="72"/></argument_list><argument_list pos:line="9" pos:column="69">(<argument><expr><call><name><name pos:line="9" pos:column="70">aNode<pos:position pos:line="9" pos:column="75"/></name><operator pos:line="9" pos:column="75">-&gt;<pos:position pos:line="9" pos:column="80"/></operator><name pos:line="9" pos:column="77">data<pos:position pos:line="9" pos:column="81"/></name><operator pos:line="9" pos:column="81">.<pos:position pos:line="9" pos:column="82"/></operator><name pos:line="9" pos:column="82">getRaw<pos:position pos:line="9" pos:column="88"/></name></name><argument_list pos:line="9" pos:column="88">()<pos:position pos:line="9" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="91"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="92"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">context<pos:position pos:line="10" pos:column="20"/></name></expr></argument>)<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">context<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">http<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">http<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>


    <decl_stmt><decl><type><name pos:line="14" pos:column="5">clientStreamNode<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">next<pos:position pos:line="14" pos:column="27"/></name> <init pos:line="14" pos:column="28">= <expr><operator pos:line="14" pos:column="30">(<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">clientStreamNode<pos:position pos:line="14" pos:column="48"/></name> <operator pos:line="14" pos:column="49">*<pos:position pos:line="14" pos:column="50"/></operator><operator pos:line="14" pos:column="50">)<pos:position pos:line="14" pos:column="51"/></operator><name><name pos:line="14" pos:column="51">aNode<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">-&gt;<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="58">node<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">.<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">next<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">-&gt;<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="69">data<pos:position pos:line="14" pos:column="73"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="74"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name><name pos:line="16" pos:column="10">context<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">ourNode<pos:position pos:line="16" pos:column="26"/></name></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="9">context<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">ourNode<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">aNode<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* no cbdatareference, this is only used once, and safely */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">context<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">flags<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">storelogiccomplete<pos:position pos:line="20" pos:column="42"/></name></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">StoreIOBuffer<pos:position pos:line="21" pos:column="22"/></name></type> <name pos:line="21" pos:column="23">tempBuffer<pos:position pos:line="21" pos:column="33"/></name></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">tempBuffer<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">offset<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">next<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">readBuffer<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">offset<pos:position pos:line="22" pos:column="52"/></name></name> <operator pos:line="22" pos:column="53">+<pos:position pos:line="22" pos:column="54"/></operator> <name><name pos:line="22" pos:column="55">context<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">-&gt;<pos:position pos:line="22" pos:column="67"/></operator><name pos:line="22" pos:column="64">headers_sz<pos:position pos:line="22" pos:column="74"/></name></name></expr>;<pos:position pos:line="22" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">tempBuffer<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">length<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <name><name pos:line="23" pos:column="29">next<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">readBuffer<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">.<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">length<pos:position pos:line="23" pos:column="52"/></name></name></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">tempBuffer<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">data<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <name><name pos:line="24" pos:column="27">next<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-&gt;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="33">readBuffer<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">.<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="44">data<pos:position pos:line="24" pos:column="48"/></name></name></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="26" pos:column="9">storeClientCopy<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name><name pos:line="26" pos:column="25">context<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">-&gt;<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="34">sc<pos:position pos:line="26" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="26" pos:column="38">http<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">storeEntry<pos:position pos:line="26" pos:column="54"/></name></name><argument_list pos:line="26" pos:column="54">()<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr></argument>,
                        <argument><expr><name pos:line="27" pos:column="25">tempBuffer<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="37">clientReplyContext<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">::<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">SendMoreData<pos:position pos:line="27" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="71">context<pos:position pos:line="27" pos:column="78"/></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">context<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">http<pos:position pos:line="31" pos:column="22"/></name><operator pos:line="31" pos:column="22">-&gt;<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="24">request<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">method<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <name pos:line="31" pos:column="43">METHOD_PURGE<pos:position pos:line="31" pos:column="55"/></name></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56"> <block pos:line="31" pos:column="57">{
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">context<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">purgeRequest<pos:position pos:line="32" pos:column="30"/></name></name><argument_list pos:line="32" pos:column="30">()<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
        <return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="36" pos:column="5">// OPTIONS with Max-Forwards:0 handled in clientProcessRequest()</comment>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">context<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">http<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">request<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">method<pos:position pos:line="38" pos:column="39"/></name></name> <operator pos:line="38" pos:column="40">==<pos:position pos:line="38" pos:column="42"/></operator> <name pos:line="38" pos:column="43">METHOD_TRACE<pos:position pos:line="38" pos:column="55"/></name></expr>)<pos:position pos:line="38" pos:column="56"/></condition><then pos:line="38" pos:column="56"> <block pos:line="38" pos:column="57">{
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name><name pos:line="39" pos:column="13">context<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">http<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">-&gt;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="28">request<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">header<pos:position pos:line="39" pos:column="43"/></name><operator pos:line="39" pos:column="43">.<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="44">getInt64<pos:position pos:line="39" pos:column="52"/></name></name><argument_list pos:line="39" pos:column="52">(<argument><expr><name pos:line="39" pos:column="53">HDR_MAX_FORWARDS<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call> <operator pos:line="39" pos:column="71">==<pos:position pos:line="39" pos:column="73"/></operator> <literal type="number" pos:line="39" pos:column="74">0<pos:position pos:line="39" pos:column="75"/></literal></expr>)<pos:position pos:line="39" pos:column="76"/></condition><then pos:line="39" pos:column="76"> <block pos:line="39" pos:column="77">{
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">context<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">-&gt;<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="22">traceReply<pos:position pos:line="40" pos:column="32"/></name></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">aNode<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
            <return pos:line="41" pos:column="13">return;<pos:position pos:line="41" pos:column="20"/></return>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="44" pos:column="9">/* continue forwarding, not finished yet. */</comment>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">http<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">logType<pos:position pos:line="45" pos:column="22"/></name></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">LOG_TCP_MISS<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="47" pos:column="9">context<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">doGetMoreData<pos:position pos:line="47" pos:column="31"/></name></name><argument_list pos:line="47" pos:column="31">()<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then> <else pos:line="48" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="49" pos:column="9">context<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">identifyStoreObject<pos:position pos:line="49" pos:column="37"/></name></name><argument_list pos:line="49" pos:column="37">()<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt></block></else></if>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1053_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">String<pos:position pos:line="1" pos:column="7"/></name><operator pos:line="1" pos:column="7">::<pos:position pos:line="1" pos:column="9"/></operator><name pos:line="1" pos:column="9">size_type<pos:position pos:line="1" pos:column="18"/></name></name></type>
<name><name pos:line="2" pos:column="1">String<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">find<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">char<pos:position pos:line="2" pos:column="18"/></name> <specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">aString<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list> <specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">c<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">c<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">=<pos:position pos:line="5" pos:column="7"/></operator><call><name pos:line="5" pos:column="7">pos<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">aString<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">c<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">npos<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">c<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">rawBuf<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">()<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

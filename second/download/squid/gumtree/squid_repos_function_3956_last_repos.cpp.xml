<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3956_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeekingPeerConnector<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">noteWantWrite<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">()<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">fd<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">serverConnection<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">()<pos:position pos:line="4" pos:column="38"/></argument_list></call><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">fd<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Security<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">::<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">SessionPointer<pos:position pos:line="5" pos:column="29"/></name></name></type> <name pos:line="5" pos:column="30">session<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name><name pos:line="5" pos:column="38">fd_table<pos:position pos:line="5" pos:column="46"/></name><index pos:line="5" pos:column="46">[<expr><name pos:line="5" pos:column="47">fd<pos:position pos:line="5" pos:column="49"/></name></expr>]<pos:position pos:line="5" pos:column="50"/></index></name><operator pos:line="5" pos:column="50">.<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">ssl<pos:position pos:line="5" pos:column="54"/></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BIO<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">b<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><call><name pos:line="6" pos:column="14">SSL_get_rbio<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><call><name><name pos:line="6" pos:column="27">session<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">.<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">get<pos:position pos:line="6" pos:column="38"/></name></name><argument_list pos:line="6" pos:column="38">()<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Ssl<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ServerBio<pos:position pos:line="7" pos:column="19"/></name></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">srvBio<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><cast type="static" pos:line="7" pos:column="30">static_cast<argument_list type="generic" pos:line="7" pos:column="41">&lt;<argument><expr><name><name pos:line="7" pos:column="42">Ssl<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">::<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">ServerBio<pos:position pos:line="7" pos:column="56"/></name></name> <operator pos:line="7" pos:column="57">*<pos:position pos:line="7" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="62"/></argument_list><argument_list pos:line="7" pos:column="59">(<argument><expr><call><name pos:line="7" pos:column="60">BIO_get_data<pos:position pos:line="7" pos:column="72"/></name><argument_list pos:line="7" pos:column="72">(<argument><expr><name pos:line="7" pos:column="73">b<pos:position pos:line="7" pos:column="74"/></name></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="76"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="77"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><call><name><name pos:line="9" pos:column="10">srvBio<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">bumpMode<pos:position pos:line="9" pos:column="26"/></name></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="32">Ssl<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">::<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">bumpPeek<pos:position pos:line="9" pos:column="45"/></name></name> <operator pos:line="9" pos:column="46">||<pos:position pos:line="9" pos:column="48"/></operator> <call><name><name pos:line="9" pos:column="49">srvBio<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">bumpMode<pos:position pos:line="9" pos:column="65"/></name></name><argument_list pos:line="9" pos:column="65">()<pos:position pos:line="9" pos:column="67"/></argument_list></call> <operator pos:line="9" pos:column="68">==<pos:position pos:line="9" pos:column="70"/></operator> <name><name pos:line="9" pos:column="71">Ssl<pos:position pos:line="9" pos:column="74"/></name><operator pos:line="9" pos:column="74">::<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="76">bumpStare<pos:position pos:line="9" pos:column="85"/></name></name><operator pos:line="9" pos:column="85">)<pos:position pos:line="9" pos:column="86"/></operator> <operator pos:line="9" pos:column="87">&amp;&amp;<pos:position pos:line="9" pos:column="97"/></operator> <call><name><name pos:line="9" pos:column="90">srvBio<pos:position pos:line="9" pos:column="96"/></name><operator pos:line="9" pos:column="96">-&gt;<pos:position pos:line="9" pos:column="101"/></operator><name pos:line="9" pos:column="98">holdWrite<pos:position pos:line="9" pos:column="107"/></name></name><argument_list pos:line="9" pos:column="107">()<pos:position pos:line="9" pos:column="109"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="110"/></condition><then pos:line="9" pos:column="110"> <block pos:line="9" pos:column="111">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">81<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"hold write on SSL connection on FD "<pos:position pos:line="10" pos:column="60"/></literal> <operator pos:line="10" pos:column="61">&lt;&lt;<pos:position pos:line="10" pos:column="69"/></operator> <name pos:line="10" pos:column="64">fd<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">checkForPeekAndSplice<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">()<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">Security<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">::<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">PeerConnector<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">::<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">noteWantWrite<pos:position pos:line="15" pos:column="43"/></name></name><argument_list pos:line="15" pos:column="43">()<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

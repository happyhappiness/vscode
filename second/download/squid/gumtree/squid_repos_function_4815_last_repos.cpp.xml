<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4815_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBuf<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Parser<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">Tokenizer<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">consume<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name><name pos:line="2" pos:column="34">SBuf<pos:position pos:line="2" pos:column="38"/></name><operator pos:line="2" pos:column="38">::<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="40">size_type<pos:position pos:line="2" pos:column="49"/></name></name></type> <name pos:line="2" pos:column="50">n<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// careful: n may be npos!</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">24<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">5<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"consuming "<pos:position pos:line="5" pos:column="31"/></literal> <operator pos:line="5" pos:column="32">&lt;&lt;<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="35">n<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">&lt;&lt;<pos:position pos:line="5" pos:column="45"/></operator> <literal type="string" pos:line="5" pos:column="40">" bytes"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">SBuf<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">result<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name><name pos:line="6" pos:column="25">buf_<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">.<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">consume<pos:position pos:line="6" pos:column="37"/></name></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">n<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">parsed_<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">+=<pos:position pos:line="7" pos:column="15"/></operator> <call><name><name pos:line="7" pos:column="16">result<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">length<pos:position pos:line="7" pos:column="29"/></name></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

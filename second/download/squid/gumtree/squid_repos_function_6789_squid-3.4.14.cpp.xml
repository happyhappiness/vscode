<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6789_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">GenClientContext<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">PAUTH_SEQ<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">pAS<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">PSEC_WINNT_AUTH_IDENTITY<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">pAuthIdentity<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">PVOID<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">pIn<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">DWORD<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">cbIn<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">PVOID<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">pOut<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">PDWORD<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">pcbOut<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">PBOOL<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">pfDone<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     *  Routine Description:
     *
     *  Optionally takes an input buffer coming from the server and returns
     *  a buffer of information to send back to the server. Also returns
     *  an indication of whether or not the context is complete.
     *
     *  Return Value:
     *  Returns TRUE if successful; otherwise FALSE.
     */</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">TimeStamp<pos:position pos:line="14" pos:column="14"/></name></type>       <name pos:line="14" pos:column="21">tsExpiry<pos:position pos:line="14" pos:column="29"/></name></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">SecBufferDesc<pos:position pos:line="15" pos:column="18"/></name></type>   <name pos:line="15" pos:column="21">sbdOut<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">SecBuffer<pos:position pos:line="16" pos:column="14"/></name></type>       <name pos:line="16" pos:column="21">sbOut<pos:position pos:line="16" pos:column="26"/></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">SecBufferDesc<pos:position pos:line="17" pos:column="18"/></name></type>   <name pos:line="17" pos:column="21">sbdIn<pos:position pos:line="17" pos:column="26"/></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">SecBuffer<pos:position pos:line="18" pos:column="14"/></name></type>       <name pos:line="18" pos:column="21">sbIn<pos:position pos:line="18" pos:column="25"/></name></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">ULONG<pos:position pos:line="19" pos:column="10"/></name></type>           <name pos:line="19" pos:column="21">fContextAttr<pos:position pos:line="19" pos:column="33"/></name></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">pAS<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">fInitialized<pos:position pos:line="21" pos:column="27"/></name></name></expr>)<pos:position pos:line="21" pos:column="28"/></condition><then pos:line="21" pos:column="28"> <block pos:line="21" pos:column="29">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">SecurityStatus<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call><name pos:line="22" pos:column="26">_AcquireCredentialsHandle<pos:position pos:line="22" pos:column="51"/></name><argument_list pos:line="22" pos:column="51">(<argument><expr><name pos:line="22" pos:column="52">NULL<pos:position pos:line="22" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="58">(<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">SEC_CHAR<pos:position pos:line="22" pos:column="67"/></name><operator pos:line="22" pos:column="67">*<pos:position pos:line="22" pos:column="68"/></operator><operator pos:line="22" pos:column="68">)<pos:position pos:line="22" pos:column="69"/></operator> <call><name pos:line="22" pos:column="70">_T<pos:position pos:line="22" pos:column="72"/></name><argument_list pos:line="22" pos:column="72">(<argument><expr><name pos:line="22" pos:column="73">SSP_Package_InUse<pos:position pos:line="22" pos:column="90"/></name></expr></argument>)<pos:position pos:line="22" pos:column="91"/></argument_list></call></expr></argument>,
                         <argument><expr><name pos:line="23" pos:column="26">SECPKG_CRED_OUTBOUND<pos:position pos:line="23" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">NULL<pos:position pos:line="23" pos:column="52"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="23" pos:column="54">(<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">NTLM_mode<pos:position pos:line="23" pos:column="64"/></name> <operator pos:line="23" pos:column="65">==<pos:position pos:line="23" pos:column="67"/></operator> <name pos:line="23" pos:column="68">SSP_NTLM<pos:position pos:line="23" pos:column="76"/></name><operator pos:line="23" pos:column="76">)<pos:position pos:line="23" pos:column="77"/></operator></expr> ?<pos:position pos:line="23" pos:column="79"/></condition><then pos:line="23" pos:column="79"> <expr><name pos:line="23" pos:column="80">NULL<pos:position pos:line="23" pos:column="84"/></name></expr> <pos:position pos:line="23" pos:column="85"/></then><else pos:line="23" pos:column="85">: <expr><name pos:line="23" pos:column="87">pAuthIdentity<pos:position pos:line="23" pos:column="100"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="23" pos:column="102">NULL<pos:position pos:line="23" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="108">NULL<pos:position pos:line="23" pos:column="112"/></name></expr></argument>,
                         <argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name><name pos:line="24" pos:column="27">pAS<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">hcred<pos:position pos:line="24" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="39">&amp;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="40">tsExpiry<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">SecurityStatus<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&lt;<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">FALSE<pos:position pos:line="26" pos:column="25"/></name></expr>;<pos:position pos:line="26" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">pAS<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">fHaveCredHandle<pos:position pos:line="27" pos:column="29"/></name></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">TRUE<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/* Prepare output buffer */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">sbdOut<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">ulVersion<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">sbdOut<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">cBuffers<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="23">1<pos:position pos:line="32" pos:column="24"/></literal></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">sbdOut<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">pBuffers<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <operator pos:line="33" pos:column="23">&amp;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="24">sbOut<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">sbOut<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">.<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">cbBuffer<pos:position pos:line="34" pos:column="19"/></name></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">pcbOut<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">sbOut<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">.<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">BufferType<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <name pos:line="35" pos:column="24">SECBUFFER_TOKEN<pos:position pos:line="35" pos:column="39"/></name></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">sbOut<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">.<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">pvBuffer<pos:position pos:line="36" pos:column="19"/></name></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">pOut<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/* Prepare input buffer */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">pAS<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">fInitialized<pos:position pos:line="39" pos:column="26"/></name></name></expr>)<pos:position pos:line="39" pos:column="27"/></condition><then pos:line="39" pos:column="27">  <block pos:line="39" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">sbdIn<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">ulVersion<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <literal type="number" pos:line="40" pos:column="27">0<pos:position pos:line="40" pos:column="28"/></literal></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">sbdIn<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">cBuffers<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <literal type="number" pos:line="41" pos:column="26">1<pos:position pos:line="41" pos:column="27"/></literal></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">sbdIn<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">pBuffers<pos:position pos:line="42" pos:column="23"/></name></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <operator pos:line="42" pos:column="26">&amp;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="27">sbIn<pos:position pos:line="42" pos:column="31"/></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">sbIn<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">.<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">cbBuffer<pos:position pos:line="43" pos:column="22"/></name></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <name pos:line="43" pos:column="25">cbIn<pos:position pos:line="43" pos:column="29"/></name></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">sbIn<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">.<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">BufferType<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">SECBUFFER_TOKEN<pos:position pos:line="44" pos:column="42"/></name></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">sbIn<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">.<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">pvBuffer<pos:position pos:line="45" pos:column="22"/></name></name> <operator pos:line="45" pos:column="23">=<pos:position pos:line="45" pos:column="24"/></operator> <name pos:line="45" pos:column="25">pIn<pos:position pos:line="45" pos:column="28"/></name></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">SecurityStatus<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">_InitializeSecurityContext<pos:position pos:line="47" pos:column="48"/></name><argument_list pos:line="47" pos:column="48">(<argument><expr><operator pos:line="47" pos:column="49">&amp;<pos:position pos:line="47" pos:column="54"/></operator><name><name pos:line="47" pos:column="50">pAS<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">hcred<pos:position pos:line="47" pos:column="60"/></name></name></expr></argument>,
                     <argument><expr><ternary><condition><expr><name><name pos:line="48" pos:column="22">pAS<pos:position pos:line="48" pos:column="25"/></name><operator pos:line="48" pos:column="25">-&gt;<pos:position pos:line="48" pos:column="30"/></operator><name pos:line="48" pos:column="27">fInitialized<pos:position pos:line="48" pos:column="39"/></name></name></expr> ?<pos:position pos:line="48" pos:column="41"/></condition><then pos:line="48" pos:column="41"> <expr><operator pos:line="48" pos:column="42">&amp;<pos:position pos:line="48" pos:column="47"/></operator><name><name pos:line="48" pos:column="43">pAS<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">-&gt;<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="48">hctxt<pos:position pos:line="48" pos:column="53"/></name></name></expr> <pos:position pos:line="48" pos:column="54"/></then><else pos:line="48" pos:column="54">: <expr><name pos:line="48" pos:column="56">NULL<pos:position pos:line="48" pos:column="60"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="48" pos:column="62">NULL<pos:position pos:line="48" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="68">0<pos:position pos:line="48" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="71">0<pos:position pos:line="48" pos:column="72"/></literal></expr></argument>,
                     <argument><expr><name pos:line="49" pos:column="22">SECURITY_NATIVE_DREP<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="49" pos:column="44">pAS<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">-&gt;<pos:position pos:line="49" pos:column="52"/></operator><name pos:line="49" pos:column="49">fInitialized<pos:position pos:line="49" pos:column="61"/></name></name></expr> ?<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63"> <expr><operator pos:line="49" pos:column="64">&amp;<pos:position pos:line="49" pos:column="69"/></operator><name pos:line="49" pos:column="65">sbdIn<pos:position pos:line="49" pos:column="70"/></name></expr> <pos:position pos:line="49" pos:column="71"/></then><else pos:line="49" pos:column="71">: <expr><name pos:line="49" pos:column="73">NULL<pos:position pos:line="49" pos:column="77"/></name></expr></else></ternary></expr></argument>,
                     <argument><expr><literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr></argument>, <argument><expr><operator pos:line="50" pos:column="25">&amp;<pos:position pos:line="50" pos:column="30"/></operator><name><name pos:line="50" pos:column="26">pAS<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">hctxt<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="38">&amp;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="39">sbdOut<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="47">&amp;<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="48">fContextAttr<pos:position pos:line="50" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="62">&amp;<pos:position pos:line="50" pos:column="67"/></operator><name pos:line="50" pos:column="63">tsExpiry<pos:position pos:line="50" pos:column="71"/></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="73"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">SecurityStatus<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">&lt;<pos:position pos:line="51" pos:column="28"/></operator> <literal type="number" pos:line="51" pos:column="26">0<pos:position pos:line="51" pos:column="27"/></literal></expr>)<pos:position pos:line="51" pos:column="28"/></condition><then pos:line="51" pos:column="28">
        <block type="pseudo"><return pos:line="52" pos:column="9">return <expr><name pos:line="52" pos:column="16">FALSE<pos:position pos:line="52" pos:column="21"/></name></expr>;<pos:position pos:line="52" pos:column="22"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">pAS<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">fHaveCtxtHandle<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <name pos:line="53" pos:column="28">TRUE<pos:position pos:line="53" pos:column="32"/></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="55" pos:column="5">/* If necessary, complete token */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">SecurityStatus<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">==<pos:position pos:line="56" pos:column="26"/></operator> <name pos:line="56" pos:column="27">SEC_I_COMPLETE_NEEDED<pos:position pos:line="56" pos:column="48"/></name> <operator pos:line="56" pos:column="49">||<pos:position pos:line="56" pos:column="51"/></operator> <name pos:line="56" pos:column="52">SecurityStatus<pos:position pos:line="56" pos:column="66"/></name> <operator pos:line="56" pos:column="67">==<pos:position pos:line="56" pos:column="69"/></operator> <name pos:line="56" pos:column="70">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="56" pos:column="97"/></name></expr>)<pos:position pos:line="56" pos:column="98"/></condition><then pos:line="56" pos:column="98"> <block pos:line="56" pos:column="99">{
        <expr_stmt><expr><name pos:line="57" pos:column="9">SecurityStatus<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">_CompleteAuthToken<pos:position pos:line="57" pos:column="44"/></name><argument_list pos:line="57" pos:column="44">(<argument><expr><operator pos:line="57" pos:column="45">&amp;<pos:position pos:line="57" pos:column="50"/></operator><name><name pos:line="57" pos:column="46">pAS<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">hctxt<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="58">&amp;<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="59">sbdOut<pos:position pos:line="57" pos:column="65"/></name></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">SecurityStatus<pos:position pos:line="58" pos:column="27"/></name> <operator pos:line="58" pos:column="28">&lt;<pos:position pos:line="58" pos:column="32"/></operator> <literal type="number" pos:line="58" pos:column="30">0<pos:position pos:line="58" pos:column="31"/></literal></expr>)<pos:position pos:line="58" pos:column="32"/></condition><then pos:line="58" pos:column="32">
            <block type="pseudo"><return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">FALSE<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">pcbOut<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">=<pos:position pos:line="61" pos:column="14"/></operator> <name><name pos:line="61" pos:column="15">sbOut<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">.<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">cbBuffer<pos:position pos:line="61" pos:column="29"/></name></name></expr>;<pos:position pos:line="61" pos:column="30"/></expr_stmt>
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><name><name pos:line="62" pos:column="10">pAS<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">-&gt;<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="15">fInitialized<pos:position pos:line="62" pos:column="27"/></name></name></expr>)<pos:position pos:line="62" pos:column="28"/></condition><then pos:line="62" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="9">pAS<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">fInitialized<pos:position pos:line="63" pos:column="26"/></name></name> <operator pos:line="63" pos:column="27">=<pos:position pos:line="63" pos:column="28"/></operator> <name pos:line="63" pos:column="29">TRUE<pos:position pos:line="63" pos:column="33"/></name></expr>;<pos:position pos:line="63" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="64" pos:column="5">*<pos:position pos:line="64" pos:column="6"/></operator><name pos:line="64" pos:column="6">pfDone<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <operator pos:line="64" pos:column="15">!<pos:position pos:line="64" pos:column="16"/></operator><operator pos:line="64" pos:column="16">(<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">SecurityStatus<pos:position pos:line="64" pos:column="31"/></name> <operator pos:line="64" pos:column="32">==<pos:position pos:line="64" pos:column="34"/></operator> <name pos:line="64" pos:column="35">SEC_I_CONTINUE_NEEDED<pos:position pos:line="64" pos:column="56"/></name>
                <operator pos:line="65" pos:column="17">||<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">SecurityStatus<pos:position pos:line="65" pos:column="34"/></name> <operator pos:line="65" pos:column="35">==<pos:position pos:line="65" pos:column="37"/></operator> <name pos:line="65" pos:column="38">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="65" pos:column="65"/></name> <operator pos:line="65" pos:column="66">)<pos:position pos:line="65" pos:column="67"/></operator></expr>;<pos:position pos:line="65" pos:column="68"/></expr_stmt>
    <return pos:line="66" pos:column="5">return <expr><name pos:line="66" pos:column="12">TRUE<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

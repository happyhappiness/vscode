<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3652_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">IpAddress<pos:position pos:line="1" pos:column="15"/></name><operator pos:line="1" pos:column="15">::<pos:position pos:line="1" pos:column="17"/></operator><name pos:line="1" pos:column="17">GetReverseString<pos:position pos:line="1" pos:column="33"/></name></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name></type> <name><name pos:line="1" pos:column="39">buf<pos:position pos:line="1" pos:column="42"/></name><index pos:line="1" pos:column="42">[<expr><name pos:line="1" pos:column="43">MAX_IPSTRLEN<pos:position pos:line="1" pos:column="55"/></name></expr>]<pos:position pos:line="1" pos:column="56"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">int<pos:position pos:line="1" pos:column="61"/></name></type> <name pos:line="1" pos:column="62">show_type<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list> <specifier pos:line="1" pos:column="73">const<pos:position pos:line="1" pos:column="78"/></specifier>
<block pos:line="2" pos:column="1">{

    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">show_type<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">==<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">AF_UNSPEC<pos:position pos:line="4" pos:column="31"/></name></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <block pos:line="4" pos:column="33">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">show_type<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <ternary><condition><expr><call><name pos:line="5" pos:column="21">IsIPv6<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">()<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr> ?<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31"> <expr><name pos:line="5" pos:column="32">AF_INET6<pos:position pos:line="5" pos:column="40"/></name></expr> <pos:position pos:line="5" pos:column="41"/></then><else pos:line="5" pos:column="41">: <expr><name pos:line="5" pos:column="43">AF_INET<pos:position pos:line="5" pos:column="50"/></name></expr></else></ternary></expr> ;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">show_type<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">AF_INET<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">&amp;&amp;<pos:position pos:line="8" pos:column="40"/></operator> <call><name pos:line="8" pos:column="33">IsIPv4<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">()<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="42"/></condition><then pos:line="8" pos:column="42"> <block pos:line="8" pos:column="43">{
        <decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">in_addr<pos:position pos:line="9" pos:column="23"/></name></name><modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type> <name pos:line="9" pos:column="25">tmp<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><operator pos:line="9" pos:column="31">(<pos:position pos:line="9" pos:column="32"/></operator>struct <name pos:line="9" pos:column="39">in_addr<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">*<pos:position pos:line="9" pos:column="47"/></operator><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator><operator pos:line="9" pos:column="48">&amp;<pos:position pos:line="9" pos:column="53"/></operator><name><name pos:line="9" pos:column="49">m_SocketAddr<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">.<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="62">sin6_addr<pos:position pos:line="9" pos:column="71"/></name><operator pos:line="9" pos:column="71">.<pos:position pos:line="9" pos:column="72"/></operator><name pos:line="9" pos:column="72">s6_addr<pos:position pos:line="9" pos:column="79"/></name><index pos:line="9" pos:column="79">[<expr><literal type="number" pos:line="9" pos:column="80">12<pos:position pos:line="9" pos:column="82"/></literal></expr>]<pos:position pos:line="9" pos:column="83"/></index></name></expr></init></decl>;<pos:position pos:line="9" pos:column="84"/></decl_stmt>
        <return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">GetReverseString4<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">buf<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">tmp<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">( <expr><name pos:line="11" pos:column="17">show_type<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">==<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">AF_INET6<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&amp;&amp;<pos:position pos:line="11" pos:column="49"/></operator> <call><name pos:line="11" pos:column="42">IsIPv6<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">()<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr> )<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52"> <block pos:line="11" pos:column="53">{
        <return pos:line="12" pos:column="9">return <expr><call><name pos:line="12" pos:column="16">GetReverseString6<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">buf<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="39">m_SocketAddr<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">.<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">sin6_addr<pos:position pos:line="12" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">14<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="18">"Unable to convert '"<pos:position pos:line="15" pos:column="39"/></literal> <operator pos:line="15" pos:column="40">&lt;&lt;<pos:position pos:line="15" pos:column="48"/></operator> <call><name pos:line="15" pos:column="43">NtoA<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><name pos:line="15" pos:column="48">buf<pos:position pos:line="15" pos:column="51"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="52">MAX_IPSTRLEN<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call> <operator pos:line="15" pos:column="66">&lt;&lt;<pos:position pos:line="15" pos:column="74"/></operator> <literal type="string" pos:line="15" pos:column="69">"' to the rDNS type requested."<pos:position pos:line="15" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="102"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">buf<pos:position pos:line="17" pos:column="8"/></name><index pos:line="17" pos:column="8">[<expr><literal type="number" pos:line="17" pos:column="9">0<pos:position pos:line="17" pos:column="10"/></literal></expr>]<pos:position pos:line="17" pos:column="11"/></index></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="char" pos:line="17" pos:column="14">'\0'<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>

    <return pos:line="19" pos:column="5">return <expr><literal type="boolean" pos:line="19" pos:column="12">false<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

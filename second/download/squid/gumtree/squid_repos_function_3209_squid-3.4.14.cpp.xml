<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3209_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">fqdncacheParse<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">fqdncache_entry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">f<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">inbuf<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">DNS_INBUF_SZ<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">token<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ttl<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">name<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><specifier pos:line="7" pos:column="25">const<pos:position pos:line="7" pos:column="30"/></specifier> <name pos:line="7" pos:column="31">char<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></operator><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator><name><name pos:line="7" pos:column="38">f<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">-&gt;<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="41">hash<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">key<pos:position pos:line="7" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">f<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">expires<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">squid_curtime<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">+<pos:position pos:line="8" pos:column="33"/></operator> <name><name pos:line="8" pos:column="34">Config<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">negativeDnsTtl<pos:position pos:line="8" pos:column="55"/></name></name></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">f<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">flags<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">negcached<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="26">1<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">inbuf<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">==<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">35<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">DBG_IMPORTANT<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"fqdncacheParse: Got &lt;NULL&gt; reply in response to '"<pos:position pos:line="12" pos:column="92"/></literal> <operator pos:line="12" pos:column="87">&lt;&lt;<pos:position pos:line="12" pos:column="95"/></operator> <name pos:line="12" pos:column="90">name<pos:position pos:line="12" pos:column="94"/></name> <operator pos:line="12" pos:column="95">&lt;&lt;<pos:position pos:line="12" pos:column="103"/></operator> <literal type="string" pos:line="12" pos:column="98">"'"<pos:position pos:line="12" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">f<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">error_message<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="28">xstrdup<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><literal type="string" pos:line="13" pos:column="36">"Internal Error"<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">xstrncpy<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">buf<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="19">inbuf<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">DNS_INBUF_SZ<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">35<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">5<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"fqdncacheParse: parsing: {"<pos:position pos:line="18" pos:column="47"/></literal> <operator pos:line="18" pos:column="48">&lt;&lt;<pos:position pos:line="18" pos:column="56"/></operator> <name pos:line="18" pos:column="51">buf<pos:position pos:line="18" pos:column="54"/></name> <operator pos:line="18" pos:column="55">&lt;&lt;<pos:position pos:line="18" pos:column="63"/></operator> <literal type="string" pos:line="18" pos:column="58">"}"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">token<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">strtok<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">buf<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="25">w_space<pos:position pos:line="19" pos:column="32"/></name></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">NULL<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">token<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">35<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">DBG_IMPORTANT<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">"fqdncacheParse: Got &lt;NULL&gt;, expecting '$name' in response to '"<pos:position pos:line="22" pos:column="105"/></literal> <operator pos:line="22" pos:column="100">&lt;&lt;<pos:position pos:line="22" pos:column="108"/></operator> <name pos:line="22" pos:column="103">name<pos:position pos:line="22" pos:column="107"/></name> <operator pos:line="22" pos:column="108">&lt;&lt;<pos:position pos:line="22" pos:column="116"/></operator> <literal type="string" pos:line="22" pos:column="111">"'"<pos:position pos:line="22" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="116"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">f<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">error_message<pos:position pos:line="23" pos:column="25"/></name></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <call><name pos:line="23" pos:column="28">xstrdup<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><literal type="string" pos:line="23" pos:column="36">"Internal Error"<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">-<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr>;<pos:position pos:line="24" pos:column="19"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><literal type="number" pos:line="27" pos:column="9">0<pos:position pos:line="27" pos:column="10"/></literal> <operator pos:line="27" pos:column="11">==<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">strcmp<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">token<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="28">"$fail"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37"> <block pos:line="27" pos:column="38">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">token<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">strtok<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="30">"\n"<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">assert<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">NULL<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">!=<pos:position pos:line="29" pos:column="23"/></operator> <name pos:line="29" pos:column="24">token<pos:position pos:line="29" pos:column="29"/></name></expr></argument>)<pos:position pos:line="29" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">f<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">error_message<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <call><name pos:line="30" pos:column="28">xstrdup<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><name pos:line="30" pos:column="36">token<pos:position pos:line="30" pos:column="41"/></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><literal type="number" pos:line="34" pos:column="9">0<pos:position pos:line="34" pos:column="10"/></literal> <operator pos:line="34" pos:column="11">!=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">strcmp<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">token<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="28">"$name"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">35<pos:position pos:line="35" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="20">DBG_IMPORTANT<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"fqdncacheParse: Got '"<pos:position pos:line="35" pos:column="58"/></literal> <operator pos:line="35" pos:column="59">&lt;&lt;<pos:position pos:line="35" pos:column="67"/></operator> <name pos:line="35" pos:column="62">inbuf<pos:position pos:line="35" pos:column="67"/></name> <operator pos:line="35" pos:column="68">&lt;&lt;<pos:position pos:line="35" pos:column="76"/></operator> <literal type="string" pos:line="35" pos:column="71">"', expecting '$name' in response to '"<pos:position pos:line="35" pos:column="110"/></literal> <operator pos:line="35" pos:column="111">&lt;&lt;<pos:position pos:line="35" pos:column="119"/></operator> <name pos:line="35" pos:column="114">name<pos:position pos:line="35" pos:column="118"/></name> <operator pos:line="35" pos:column="119">&lt;&lt;<pos:position pos:line="35" pos:column="127"/></operator> <literal type="string" pos:line="35" pos:column="122">"'"<pos:position pos:line="35" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="127"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">f<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">error_message<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <call><name pos:line="36" pos:column="28">xstrdup<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><literal type="string" pos:line="36" pos:column="36">"Internal Error"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">-<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">token<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name pos:line="40" pos:column="13">strtok<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name pos:line="40" pos:column="20">NULL<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="26">w_space<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">NULL<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">==<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">token<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">35<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">DBG_IMPORTANT<pos:position pos:line="43" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="35">"fqdncacheParse: Got '"<pos:position pos:line="43" pos:column="58"/></literal> <operator pos:line="43" pos:column="59">&lt;&lt;<pos:position pos:line="43" pos:column="67"/></operator> <name pos:line="43" pos:column="62">inbuf<pos:position pos:line="43" pos:column="67"/></name> <operator pos:line="43" pos:column="68">&lt;&lt;<pos:position pos:line="43" pos:column="76"/></operator> <literal type="string" pos:line="43" pos:column="71">"', expecting TTL in response to '"<pos:position pos:line="43" pos:column="106"/></literal> <operator pos:line="43" pos:column="107">&lt;&lt;<pos:position pos:line="43" pos:column="115"/></operator> <name pos:line="43" pos:column="110">name<pos:position pos:line="43" pos:column="114"/></name> <operator pos:line="43" pos:column="115">&lt;&lt;<pos:position pos:line="43" pos:column="123"/></operator> <literal type="string" pos:line="43" pos:column="118">"'"<pos:position pos:line="43" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="123"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">f<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">error_message<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <call><name pos:line="44" pos:column="28">xstrdup<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><literal type="string" pos:line="44" pos:column="36">"Internal Error"<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">-<pos:position pos:line="45" pos:column="17"/></operator><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="48" pos:column="5">ttl<pos:position pos:line="48" pos:column="8"/></name> <operator pos:line="48" pos:column="9">=<pos:position pos:line="48" pos:column="10"/></operator> <call><name pos:line="48" pos:column="11">atoi<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">token<pos:position pos:line="48" pos:column="21"/></name></expr></argument>)<pos:position pos:line="48" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="50" pos:column="5">token<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">strtok<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="26">w_space<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">NULL<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">==<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">token<pos:position pos:line="52" pos:column="22"/></name></expr>)<pos:position pos:line="52" pos:column="23"/></condition><then pos:line="52" pos:column="23"> <block pos:line="52" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">debugs<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="number" pos:line="53" pos:column="16">35<pos:position pos:line="53" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="20">DBG_IMPORTANT<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="35">"fqdncacheParse: Got '"<pos:position pos:line="53" pos:column="58"/></literal> <operator pos:line="53" pos:column="59">&lt;&lt;<pos:position pos:line="53" pos:column="67"/></operator> <name pos:line="53" pos:column="62">inbuf<pos:position pos:line="53" pos:column="67"/></name> <operator pos:line="53" pos:column="68">&lt;&lt;<pos:position pos:line="53" pos:column="76"/></operator> <literal type="string" pos:line="53" pos:column="71">"', expecting hostname in response to '"<pos:position pos:line="53" pos:column="111"/></literal> <operator pos:line="53" pos:column="112">&lt;&lt;<pos:position pos:line="53" pos:column="120"/></operator> <name pos:line="53" pos:column="115">name<pos:position pos:line="53" pos:column="119"/></name> <operator pos:line="53" pos:column="120">&lt;&lt;<pos:position pos:line="53" pos:column="128"/></operator> <literal type="string" pos:line="53" pos:column="123">"'"<pos:position pos:line="53" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="128"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">f<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">error_message<pos:position pos:line="54" pos:column="25"/></name></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <call><name pos:line="54" pos:column="28">xstrdup<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><literal type="string" pos:line="54" pos:column="36">"Internal Error"<pos:position pos:line="54" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">-<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">1<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="58" pos:column="5">f<pos:position pos:line="58" pos:column="6"/></name><operator pos:line="58" pos:column="6">-&gt;<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="8">names<pos:position pos:line="58" pos:column="13"/></name><index pos:line="58" pos:column="13">[<expr><literal type="number" pos:line="58" pos:column="14">0<pos:position pos:line="58" pos:column="15"/></literal></expr>]<pos:position pos:line="58" pos:column="16"/></index></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <call><name pos:line="58" pos:column="19">xstrdup<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">token<pos:position pos:line="58" pos:column="32"/></name></expr></argument>)<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">f<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">-&gt;<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="8">name_count<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <literal type="number" pos:line="59" pos:column="21">1<pos:position pos:line="59" pos:column="22"/></literal></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">ttl<pos:position pos:line="61" pos:column="12"/></name> <operator pos:line="61" pos:column="13">==<pos:position pos:line="61" pos:column="15"/></operator> <literal type="number" pos:line="61" pos:column="16">0<pos:position pos:line="61" pos:column="17"/></literal> <operator pos:line="61" pos:column="18">||<pos:position pos:line="61" pos:column="20"/></operator> <name pos:line="61" pos:column="21">ttl<pos:position pos:line="61" pos:column="24"/></name> <operator pos:line="61" pos:column="25">&gt;<pos:position pos:line="61" pos:column="29"/></operator> <name><name pos:line="61" pos:column="27">Config<pos:position pos:line="61" pos:column="33"/></name><operator pos:line="61" pos:column="33">.<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="34">positiveDnsTtl<pos:position pos:line="61" pos:column="48"/></name></name></expr>)<pos:position pos:line="61" pos:column="49"/></condition><then pos:line="61" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="9">ttl<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name><name pos:line="62" pos:column="15">Config<pos:position pos:line="62" pos:column="21"/></name><operator pos:line="62" pos:column="21">.<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">positiveDnsTtl<pos:position pos:line="62" pos:column="36"/></name></name></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">ttl<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">&lt;<pos:position pos:line="64" pos:column="17"/></operator> <name><name pos:line="64" pos:column="15">Config<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">.<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="22">negativeDnsTtl<pos:position pos:line="64" pos:column="36"/></name></name></expr>)<pos:position pos:line="64" pos:column="37"/></condition><then pos:line="64" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="9">ttl<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <name><name pos:line="65" pos:column="15">Config<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">.<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">negativeDnsTtl<pos:position pos:line="65" pos:column="36"/></name></name></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="67" pos:column="5">f<pos:position pos:line="67" pos:column="6"/></name><operator pos:line="67" pos:column="6">-&gt;<pos:position pos:line="67" pos:column="11"/></operator><name pos:line="67" pos:column="8">expires<pos:position pos:line="67" pos:column="15"/></name></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <name pos:line="67" pos:column="18">squid_curtime<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">+<pos:position pos:line="67" pos:column="33"/></operator> <name pos:line="67" pos:column="34">ttl<pos:position pos:line="67" pos:column="37"/></name></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="69" pos:column="5">f<pos:position pos:line="69" pos:column="6"/></name><operator pos:line="69" pos:column="6">-&gt;<pos:position pos:line="69" pos:column="11"/></operator><name pos:line="69" pos:column="8">flags<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">.<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">negcached<pos:position pos:line="69" pos:column="23"/></name></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <literal type="number" pos:line="69" pos:column="26">0<pos:position pos:line="69" pos:column="27"/></literal></expr>;<pos:position pos:line="69" pos:column="28"/></expr_stmt>

    <return pos:line="71" pos:column="5">return <expr><name><name pos:line="71" pos:column="12">f<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">name_count<pos:position pos:line="71" pos:column="25"/></name></name></expr>;<pos:position pos:line="71" pos:column="26"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

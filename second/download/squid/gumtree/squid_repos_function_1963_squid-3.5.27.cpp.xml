<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1963_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerClearRRLoop<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">data<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">peerClearRR<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">eventAdd<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><literal type="string" pos:line="5" pos:column="14">"peerClearRR"<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">peerClearRRLoop<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">data<pos:position pos:line="5" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="52">5<pos:position pos:line="5" pos:column="53"/></literal> <operator pos:line="5" pos:column="54">*<pos:position pos:line="5" pos:column="55"/></operator> <literal type="number" pos:line="5" pos:column="56">60.0<pos:position pos:line="5" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="62">0<pos:position pos:line="5" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="65"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5860_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Digest<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">UserRequest<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">authenticate<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name pos:line="2" pos:column="41">HttpRequest<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">request<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">ConnStateData<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type> <name pos:line="2" pos:column="80">conn<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="86">http_hdr_type<pos:position pos:line="2" pos:column="99"/></name></type> <name pos:line="2" pos:column="100">type<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="105"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HASHHEX<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">SESSIONKEY<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HASHHEX<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">HA2<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="string" pos:line="5" pos:column="19">""<pos:position pos:line="5" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HASHHEX<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">Response<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* if the check has corrupted the user, just return */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">user<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">()<pos:position pos:line="9" pos:column="15"/></argument_list></call> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">||<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">user<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">()<pos:position pos:line="9" pos:column="33"/></argument_list></call><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><call><name pos:line="9" pos:column="35">credentials<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">()<pos:position pos:line="9" pos:column="48"/></argument_list></call> <operator pos:line="9" pos:column="49">==<pos:position pos:line="9" pos:column="51"/></operator> <name><name pos:line="9" pos:column="52">Auth<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">::<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">Failed<pos:position pos:line="9" pos:column="64"/></name></name></expr>)<pos:position pos:line="9" pos:column="65"/></condition><then pos:line="9" pos:column="65"> <block pos:line="9" pos:column="66">{
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">Auth<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">::<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">User<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">::<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">Pointer<pos:position pos:line="13" pos:column="24"/></name></name></type> <name pos:line="13" pos:column="25">auth_user<pos:position pos:line="13" pos:column="34"/></name> <init pos:line="13" pos:column="35">= <expr><call><name pos:line="13" pos:column="37">user<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">()<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">Auth<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">::<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">Digest<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">::<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">User<pos:position pos:line="15" pos:column="23"/></name></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">digest_user<pos:position pos:line="15" pos:column="36"/></name> <init pos:line="15" pos:column="37">= <expr><cast type="dynamic" pos:line="15" pos:column="39">dynamic_cast<argument_list type="generic" pos:line="15" pos:column="51">&lt;<argument><expr><name><name pos:line="15" pos:column="52">Auth<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">::<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">Digest<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">::<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="66">User<pos:position pos:line="15" pos:column="70"/></name></name><operator pos:line="15" pos:column="70">*<pos:position pos:line="15" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="75"/></argument_list><argument_list pos:line="15" pos:column="72">(<argument><expr><call><name><name pos:line="15" pos:column="73">auth_user<pos:position pos:line="15" pos:column="82"/></name><operator pos:line="15" pos:column="82">.<pos:position pos:line="15" pos:column="83"/></operator><name pos:line="15" pos:column="83">getRaw<pos:position pos:line="15" pos:column="89"/></name></name><argument_list pos:line="15" pos:column="89">()<pos:position pos:line="15" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="92"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="15" pos:column="93"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">digest_user<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">!=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">NULL<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">Auth<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">::<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">Digest<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">::<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">UserRequest<pos:position pos:line="18" pos:column="30"/></name></name> <modifier pos:line="18" pos:column="31">*<pos:position pos:line="18" pos:column="32"/></modifier></type><name pos:line="18" pos:column="32">digest_request<pos:position pos:line="18" pos:column="46"/></name> <init pos:line="18" pos:column="47">= <expr><name pos:line="18" pos:column="49">this<pos:position pos:line="18" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="54"/></decl_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* do we have the HA1 */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">digest_user<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">HA1created<pos:position pos:line="21" pos:column="33"/></name></name></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34"> <block pos:line="21" pos:column="35">{
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">auth_user<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">credentials<pos:position pos:line="22" pos:column="31"/></name></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name><name pos:line="22" pos:column="32">Auth<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">::<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">Pending<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">digest_request<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">-&gt;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="25">nonce<pos:position pos:line="26" pos:column="30"/></name></name> <operator pos:line="26" pos:column="31">==<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="34">NULL<pos:position pos:line="26" pos:column="38"/></name></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
        <comment type="block" pos:line="27" pos:column="9">/* this isn't a nonce we issued */</comment>
        <expr_stmt><expr><call><name><name pos:line="28" pos:column="9">auth_user<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">credentials<pos:position pos:line="28" pos:column="31"/></name></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name><name pos:line="28" pos:column="32">Auth<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">::<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">Failed<pos:position pos:line="28" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
        <return pos:line="29" pos:column="9">return;<pos:position pos:line="29" pos:column="16"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">DigestCalcHA1<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name><name pos:line="32" pos:column="19">digest_request<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">algorithm<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">NULL<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">NULL<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="58">NULL<pos:position pos:line="32" pos:column="62"/></name></expr></argument>,
                  <argument><expr><call><name pos:line="33" pos:column="19">authenticateDigestNonceNonceb64<pos:position pos:line="33" pos:column="50"/></name><argument_list pos:line="33" pos:column="50">(<argument><expr><name><name pos:line="33" pos:column="51">digest_request<pos:position pos:line="33" pos:column="65"/></name><operator pos:line="33" pos:column="65">-&gt;<pos:position pos:line="33" pos:column="70"/></operator><name pos:line="33" pos:column="67">nonce<pos:position pos:line="33" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr></argument>,
                  <argument><expr><name><name pos:line="34" pos:column="19">digest_request<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">-&gt;<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="35">cnonce<pos:position pos:line="34" pos:column="41"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="35" pos:column="19">digest_user<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">HA1<pos:position pos:line="35" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">SESSIONKEY<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">SBuf<pos:position pos:line="36" pos:column="9"/></name></type> <name pos:line="36" pos:column="10">sTmp<pos:position pos:line="36" pos:column="14"/></name> <init pos:line="36" pos:column="15">= <expr><call><name><name pos:line="36" pos:column="17">request<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">method<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">.<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">image<pos:position pos:line="36" pos:column="38"/></name></name><argument_list pos:line="36" pos:column="38">()<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">DigestCalcResponse<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">SESSIONKEY<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="36">authenticateDigestNonceNonceb64<pos:position pos:line="37" pos:column="67"/></name><argument_list pos:line="37" pos:column="67">(<argument><expr><name><name pos:line="37" pos:column="68">digest_request<pos:position pos:line="37" pos:column="82"/></name><operator pos:line="37" pos:column="82">-&gt;<pos:position pos:line="37" pos:column="87"/></operator><name pos:line="37" pos:column="84">nonce<pos:position pos:line="37" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="90"/></argument_list></call></expr></argument>,
                       <argument><expr><name><name pos:line="38" pos:column="24">digest_request<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">nc<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="44">digest_request<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">-&gt;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="60">cnonce<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="68">digest_request<pos:position pos:line="38" pos:column="82"/></name><operator pos:line="38" pos:column="82">-&gt;<pos:position pos:line="38" pos:column="87"/></operator><name pos:line="38" pos:column="84">qop<pos:position pos:line="38" pos:column="87"/></name></name></expr></argument>,
                       <argument><expr><call><name><name pos:line="39" pos:column="24">sTmp<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">.<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="29">c_str<pos:position pos:line="39" pos:column="34"/></name></name><argument_list pos:line="39" pos:column="34">()<pos:position pos:line="39" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="38">digest_request<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">uri<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="59">HA2<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="64">Response<pos:position pos:line="39" pos:column="72"/></name></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">debugs<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="number" pos:line="41" pos:column="12">29<pos:position pos:line="41" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="16">9<pos:position pos:line="41" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"\nResponse = '"<pos:position pos:line="41" pos:column="35"/></literal> <operator pos:line="41" pos:column="36">&lt;&lt;<pos:position pos:line="41" pos:column="44"/></operator> <name><name pos:line="41" pos:column="39">digest_request<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">response<pos:position pos:line="41" pos:column="63"/></name></name> <operator pos:line="41" pos:column="64">&lt;&lt;<pos:position pos:line="41" pos:column="72"/></operator> <literal type="string" pos:line="41" pos:column="67">"'\nsquid is = '"<pos:position pos:line="41" pos:column="84"/></literal> <operator pos:line="41" pos:column="85">&lt;&lt;<pos:position pos:line="41" pos:column="93"/></operator> <name pos:line="41" pos:column="88">Response<pos:position pos:line="41" pos:column="96"/></name> <operator pos:line="41" pos:column="97">&lt;&lt;<pos:position pos:line="41" pos:column="105"/></operator> <literal type="string" pos:line="41" pos:column="100">"'"<pos:position pos:line="41" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="105"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">strcasecmp<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name><name pos:line="43" pos:column="20">digest_request<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">-&gt;<pos:position pos:line="43" pos:column="39"/></operator><name pos:line="43" pos:column="36">response<pos:position pos:line="43" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">Response<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call> <operator pos:line="43" pos:column="56">!=<pos:position pos:line="43" pos:column="58"/></operator> <literal type="number" pos:line="43" pos:column="59">0<pos:position pos:line="43" pos:column="60"/></literal></expr>)<pos:position pos:line="43" pos:column="61"/></condition><then pos:line="43" pos:column="61"> <block pos:line="43" pos:column="62">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name><name pos:line="44" pos:column="14">digest_request<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">-&gt;<pos:position pos:line="44" pos:column="33"/></operator><name pos:line="44" pos:column="30">flags<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">helper_queried<pos:position pos:line="44" pos:column="50"/></name></name></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51"> <block pos:line="44" pos:column="52">{
            <comment type="block" pos:line="45" pos:column="13">/* Query the helper in case the password has changed */</comment>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">digest_request<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">flags<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">.<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">helper_queried<pos:position pos:line="46" pos:column="49"/></name></name> <operator pos:line="46" pos:column="50">=<pos:position pos:line="46" pos:column="51"/></operator> <literal type="boolean" pos:line="46" pos:column="52">true<pos:position pos:line="46" pos:column="56"/></literal></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">auth_user<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">credentials<pos:position pos:line="47" pos:column="35"/></name></name><argument_list pos:line="47" pos:column="35">(<argument><expr><name><name pos:line="47" pos:column="36">Auth<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">::<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="42">Pending<pos:position pos:line="47" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
            <return pos:line="48" pos:column="13">return;<pos:position pos:line="48" pos:column="20"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><cast type="static" pos:line="51" pos:column="13">static_cast<argument_list type="generic" pos:line="51" pos:column="24">&lt;<argument><expr><name><name pos:line="51" pos:column="25">Auth<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">::<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="31">Digest<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">::<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">Config<pos:position pos:line="51" pos:column="45"/></name></name><operator pos:line="51" pos:column="45">*<pos:position pos:line="51" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="51" pos:column="50"/></argument_list><argument_list pos:line="51" pos:column="47">(<argument><expr><call><name><name pos:line="51" pos:column="48">Auth<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">::<pos:position pos:line="51" pos:column="54"/></operator><name pos:line="51" pos:column="54">Config<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">::<pos:position pos:line="51" pos:column="62"/></operator><name pos:line="51" pos:column="62">Find<pos:position pos:line="51" pos:column="66"/></name></name><argument_list pos:line="51" pos:column="66">(<argument><expr><literal type="string" pos:line="51" pos:column="67">"digest"<pos:position pos:line="51" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="77"/></argument_list></cast><operator pos:line="51" pos:column="77">-&gt;<pos:position pos:line="51" pos:column="82"/></operator><name pos:line="51" pos:column="79">PostWorkaround<pos:position pos:line="51" pos:column="93"/></name> <operator pos:line="51" pos:column="94">&amp;&amp;<pos:position pos:line="51" pos:column="104"/></operator> <name><name pos:line="51" pos:column="97">request<pos:position pos:line="51" pos:column="104"/></name><operator pos:line="51" pos:column="104">-&gt;<pos:position pos:line="51" pos:column="109"/></operator><name pos:line="51" pos:column="106">method<pos:position pos:line="51" pos:column="112"/></name></name> <operator pos:line="51" pos:column="113">!=<pos:position pos:line="51" pos:column="115"/></operator> <name><name pos:line="51" pos:column="116">Http<pos:position pos:line="51" pos:column="120"/></name><operator pos:line="51" pos:column="120">::<pos:position pos:line="51" pos:column="122"/></operator><name pos:line="51" pos:column="122">METHOD_GET<pos:position pos:line="51" pos:column="132"/></name></name></expr>)<pos:position pos:line="51" pos:column="133"/></condition><then pos:line="51" pos:column="133"> <block pos:line="51" pos:column="134">{
            <comment type="block" pos:line="52" pos:column="13">/* Ugly workaround for certain very broken browsers using the
             * wrong method to calculate the request-digest on POST request.
             * This should be deleted once Digest authentication becomes more
             * widespread and such broken browsers no longer are commonly
             * used.
             */</comment>
            <expr_stmt><expr><name pos:line="58" pos:column="13">sTmp<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <call><name pos:line="58" pos:column="20">HttpRequestMethod<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name><name pos:line="58" pos:column="38">Http<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">::<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="44">METHOD_GET<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call><operator pos:line="58" pos:column="55">.<pos:position pos:line="58" pos:column="56"/></operator><call><name pos:line="58" pos:column="56">image<pos:position pos:line="58" pos:column="61"/></name><argument_list pos:line="58" pos:column="61">()<pos:position pos:line="58" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">DigestCalcResponse<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">(<argument><expr><name pos:line="59" pos:column="32">SESSIONKEY<pos:position pos:line="59" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="44">authenticateDigestNonceNonceb64<pos:position pos:line="59" pos:column="75"/></name><argument_list pos:line="59" pos:column="75">(<argument><expr><name><name pos:line="59" pos:column="76">digest_request<pos:position pos:line="59" pos:column="90"/></name><operator pos:line="59" pos:column="90">-&gt;<pos:position pos:line="59" pos:column="95"/></operator><name pos:line="59" pos:column="92">nonce<pos:position pos:line="59" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="98"/></argument_list></call></expr></argument>,
                               <argument><expr><name><name pos:line="60" pos:column="32">digest_request<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">-&gt;<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="48">nc<pos:position pos:line="60" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="52">digest_request<pos:position pos:line="60" pos:column="66"/></name><operator pos:line="60" pos:column="66">-&gt;<pos:position pos:line="60" pos:column="71"/></operator><name pos:line="60" pos:column="68">cnonce<pos:position pos:line="60" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="76">digest_request<pos:position pos:line="60" pos:column="90"/></name><operator pos:line="60" pos:column="90">-&gt;<pos:position pos:line="60" pos:column="95"/></operator><name pos:line="60" pos:column="92">qop<pos:position pos:line="60" pos:column="95"/></name></name></expr></argument>,
                               <argument><expr><call><name><name pos:line="61" pos:column="32">sTmp<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">.<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="37">c_str<pos:position pos:line="61" pos:column="42"/></name></name><argument_list pos:line="61" pos:column="42">()<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="46">digest_request<pos:position pos:line="61" pos:column="60"/></name><operator pos:line="61" pos:column="60">-&gt;<pos:position pos:line="61" pos:column="65"/></operator><name pos:line="61" pos:column="62">uri<pos:position pos:line="61" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="67">HA2<pos:position pos:line="61" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="72">Response<pos:position pos:line="61" pos:column="80"/></name></expr></argument>)<pos:position pos:line="61" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="82"/></expr_stmt>

            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><call><name pos:line="63" pos:column="17">strcasecmp<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><name><name pos:line="63" pos:column="28">digest_request<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">-&gt;<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="44">response<pos:position pos:line="63" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="54">Response<pos:position pos:line="63" pos:column="62"/></name></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="64"/></condition><then pos:line="63" pos:column="64"> <block pos:line="63" pos:column="65">{
                <expr_stmt><expr><call><name><name pos:line="64" pos:column="17">auth_user<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">credentials<pos:position pos:line="64" pos:column="39"/></name></name><argument_list pos:line="64" pos:column="39">(<argument><expr><name><name pos:line="64" pos:column="40">Auth<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">::<pos:position pos:line="64" pos:column="46"/></operator><name pos:line="64" pos:column="46">Failed<pos:position pos:line="64" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="65" pos:column="17">digest_request<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">-&gt;<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="33">flags<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">.<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="39">invalid_password<pos:position pos:line="65" pos:column="55"/></name></name> <operator pos:line="65" pos:column="56">=<pos:position pos:line="65" pos:column="57"/></operator> <literal type="boolean" pos:line="65" pos:column="58">true<pos:position pos:line="65" pos:column="62"/></literal></expr>;<pos:position pos:line="65" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="66" pos:column="17">digest_request<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">-&gt;<pos:position pos:line="66" pos:column="36"/></operator><name pos:line="66" pos:column="33">setDenyMessage<pos:position pos:line="66" pos:column="47"/></name></name><argument_list pos:line="66" pos:column="47">(<argument><expr><literal type="string" pos:line="66" pos:column="48">"Incorrect password"<pos:position pos:line="66" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="70"/></expr_stmt>
                <return pos:line="67" pos:column="17">return;<pos:position pos:line="67" pos:column="24"/></return>
            }<pos:position pos:line="68" pos:column="14"/></block></then> <else pos:line="68" pos:column="15">else <block pos:line="68" pos:column="20">{
                <decl_stmt><decl><type><specifier pos:line="69" pos:column="17">const<pos:position pos:line="69" pos:column="22"/></specifier> <name pos:line="69" pos:column="23">char<pos:position pos:line="69" pos:column="27"/></name> <modifier pos:line="69" pos:column="28">*<pos:position pos:line="69" pos:column="29"/></modifier></type><name pos:line="69" pos:column="29">useragent<pos:position pos:line="69" pos:column="38"/></name> <init pos:line="69" pos:column="39">= <expr><call><name><name pos:line="69" pos:column="41">request<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">-&gt;<pos:position pos:line="69" pos:column="53"/></operator><name pos:line="69" pos:column="50">header<pos:position pos:line="69" pos:column="56"/></name><operator pos:line="69" pos:column="56">.<pos:position pos:line="69" pos:column="57"/></operator><name pos:line="69" pos:column="57">getStr<pos:position pos:line="69" pos:column="63"/></name></name><argument_list pos:line="69" pos:column="63">(<argument><expr><name pos:line="69" pos:column="64">HDR_USER_AGENT<pos:position pos:line="69" pos:column="78"/></name></expr></argument>)<pos:position pos:line="69" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="69" pos:column="80"/></decl_stmt>

                <decl_stmt><decl><specifier pos:line="71" pos:column="17">static<pos:position pos:line="71" pos:column="23"/></specifier> <type><name><name pos:line="71" pos:column="24">Ip<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">::<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">Address<pos:position pos:line="71" pos:column="35"/></name></name></type> <name pos:line="71" pos:column="36">last_broken_addr<pos:position pos:line="71" pos:column="52"/></name></decl>;<pos:position pos:line="71" pos:column="53"/></decl_stmt>
                <decl_stmt><decl><specifier pos:line="72" pos:column="17">static<pos:position pos:line="72" pos:column="23"/></specifier> <type><name pos:line="72" pos:column="24">int<pos:position pos:line="72" pos:column="27"/></name></type> <name pos:line="72" pos:column="28">seen_broken_client<pos:position pos:line="72" pos:column="46"/></name> <init pos:line="72" pos:column="47">= <expr><literal type="number" pos:line="72" pos:column="49">0<pos:position pos:line="72" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="72" pos:column="51"/></decl_stmt>

                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><operator pos:line="74" pos:column="21">!<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="22">seen_broken_client<pos:position pos:line="74" pos:column="40"/></name></expr>)<pos:position pos:line="74" pos:column="41"/></condition><then pos:line="74" pos:column="41"> <block pos:line="74" pos:column="42">{
                    <expr_stmt><expr><call><name><name pos:line="75" pos:column="21">last_broken_addr<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">setNoAddr<pos:position pos:line="75" pos:column="47"/></name></name><argument_list pos:line="75" pos:column="47">()<pos:position pos:line="75" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="76" pos:column="21">seen_broken_client<pos:position pos:line="76" pos:column="39"/></name> <operator pos:line="76" pos:column="40">=<pos:position pos:line="76" pos:column="41"/></operator> <literal type="number" pos:line="76" pos:column="42">1<pos:position pos:line="76" pos:column="43"/></literal></expr>;<pos:position pos:line="76" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="77" pos:column="18"/></block></then></if>

                <if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">last_broken_addr<pos:position pos:line="79" pos:column="37"/></name> <operator pos:line="79" pos:column="38">!=<pos:position pos:line="79" pos:column="40"/></operator> <name><name pos:line="79" pos:column="41">request<pos:position pos:line="79" pos:column="48"/></name><operator pos:line="79" pos:column="48">-&gt;<pos:position pos:line="79" pos:column="53"/></operator><name pos:line="79" pos:column="50">client_addr<pos:position pos:line="79" pos:column="61"/></name></name></expr>)<pos:position pos:line="79" pos:column="62"/></condition><then pos:line="79" pos:column="62"> <block pos:line="79" pos:column="63">{
                    <expr_stmt><expr><call><name pos:line="80" pos:column="21">debugs<pos:position pos:line="80" pos:column="27"/></name><argument_list pos:line="80" pos:column="27">(<argument><expr><literal type="number" pos:line="80" pos:column="28">29<pos:position pos:line="80" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="32">DBG_IMPORTANT<pos:position pos:line="80" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="47">"Digest POST bug detected from "<pos:position pos:line="80" pos:column="79"/></literal> <operator pos:line="80" pos:column="80">&lt;&lt;<pos:position pos:line="80" pos:column="88"/></operator>
                           <name><name pos:line="81" pos:column="28">request<pos:position pos:line="81" pos:column="35"/></name><operator pos:line="81" pos:column="35">-&gt;<pos:position pos:line="81" pos:column="40"/></operator><name pos:line="81" pos:column="37">client_addr<pos:position pos:line="81" pos:column="48"/></name></name> <operator pos:line="81" pos:column="49">&lt;&lt;<pos:position pos:line="81" pos:column="57"/></operator> <literal type="string" pos:line="81" pos:column="52">" using '"<pos:position pos:line="81" pos:column="62"/></literal> <operator pos:line="81" pos:column="63">&lt;&lt;<pos:position pos:line="81" pos:column="71"/></operator>
                           <operator pos:line="82" pos:column="28">(<pos:position pos:line="82" pos:column="29"/></operator><ternary><condition><expr><name pos:line="82" pos:column="29">useragent<pos:position pos:line="82" pos:column="38"/></name></expr> ?<pos:position pos:line="82" pos:column="40"/></condition><then pos:line="82" pos:column="40"> <expr><name pos:line="82" pos:column="41">useragent<pos:position pos:line="82" pos:column="50"/></name></expr> <pos:position pos:line="82" pos:column="51"/></then><else pos:line="82" pos:column="51">: <expr><literal type="string" pos:line="82" pos:column="53">"-"<pos:position pos:line="82" pos:column="56"/></literal></expr></else></ternary><operator pos:line="82" pos:column="56">)<pos:position pos:line="82" pos:column="57"/></operator> <operator pos:line="82" pos:column="58">&lt;&lt;<pos:position pos:line="82" pos:column="66"/></operator>
                           <literal type="string" pos:line="83" pos:column="28">"'. Please upgrade browser. See Bug #630 for details."<pos:position pos:line="83" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="84"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="85" pos:column="21">last_broken_addr<pos:position pos:line="85" pos:column="37"/></name> <operator pos:line="85" pos:column="38">=<pos:position pos:line="85" pos:column="39"/></operator> <name><name pos:line="85" pos:column="40">request<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">-&gt;<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="49">client_addr<pos:position pos:line="85" pos:column="60"/></name></name></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="86" pos:column="18"/></block></then></if>
            }<pos:position pos:line="87" pos:column="14"/></block></else></if>
        }<pos:position pos:line="88" pos:column="10"/></block></then> <else pos:line="88" pos:column="11">else <block pos:line="88" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="89" pos:column="13">auth_user<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">credentials<pos:position pos:line="89" pos:column="35"/></name></name><argument_list pos:line="89" pos:column="35">(<argument><expr><name><name pos:line="89" pos:column="36">Auth<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">::<pos:position pos:line="89" pos:column="42"/></operator><name pos:line="89" pos:column="42">Failed<pos:position pos:line="89" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="90" pos:column="13">digest_request<pos:position pos:line="90" pos:column="27"/></name><operator pos:line="90" pos:column="27">-&gt;<pos:position pos:line="90" pos:column="32"/></operator><name pos:line="90" pos:column="29">flags<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">.<pos:position pos:line="90" pos:column="35"/></operator><name pos:line="90" pos:column="35">invalid_password<pos:position pos:line="90" pos:column="51"/></name></name> <operator pos:line="90" pos:column="52">=<pos:position pos:line="90" pos:column="53"/></operator> <literal type="boolean" pos:line="90" pos:column="54">true<pos:position pos:line="90" pos:column="58"/></literal></expr>;<pos:position pos:line="90" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="91" pos:column="13">digest_request<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">-&gt;<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="29">setDenyMessage<pos:position pos:line="91" pos:column="43"/></name></name><argument_list pos:line="91" pos:column="43">(<argument><expr><literal type="string" pos:line="91" pos:column="44">"Incorrect password"<pos:position pos:line="91" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt>
            <return pos:line="92" pos:column="13">return;<pos:position pos:line="92" pos:column="20"/></return>
        }<pos:position pos:line="93" pos:column="10"/></block></else></if>
    }<pos:position pos:line="94" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="96" pos:column="5">/* check for stale nonce */</comment>
    <comment type="block" pos:line="97" pos:column="5">/* check Auth::Pending to avoid loop */</comment>

    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><call><name pos:line="99" pos:column="10">authDigestNonceIsValid<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name><name pos:line="99" pos:column="33">digest_request<pos:position pos:line="99" pos:column="47"/></name><operator pos:line="99" pos:column="47">-&gt;<pos:position pos:line="99" pos:column="52"/></operator><name pos:line="99" pos:column="49">nonce<pos:position pos:line="99" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="56">digest_request<pos:position pos:line="99" pos:column="70"/></name><operator pos:line="99" pos:column="70">-&gt;<pos:position pos:line="99" pos:column="75"/></operator><name pos:line="99" pos:column="72">nc<pos:position pos:line="99" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="75"/></argument_list></call> <operator pos:line="99" pos:column="76">&amp;&amp;<pos:position pos:line="99" pos:column="86"/></operator> <call><name pos:line="99" pos:column="79">user<pos:position pos:line="99" pos:column="83"/></name><argument_list pos:line="99" pos:column="83">()<pos:position pos:line="99" pos:column="85"/></argument_list></call><operator pos:line="99" pos:column="85">-&gt;<pos:position pos:line="99" pos:column="90"/></operator><call><name pos:line="99" pos:column="87">credentials<pos:position pos:line="99" pos:column="98"/></name><argument_list pos:line="99" pos:column="98">()<pos:position pos:line="99" pos:column="100"/></argument_list></call> <operator pos:line="99" pos:column="101">!=<pos:position pos:line="99" pos:column="103"/></operator> <name><name pos:line="99" pos:column="104">Auth<pos:position pos:line="99" pos:column="108"/></name><operator pos:line="99" pos:column="108">::<pos:position pos:line="99" pos:column="110"/></operator><name pos:line="99" pos:column="110">Pending<pos:position pos:line="99" pos:column="117"/></name></name></expr>)<pos:position pos:line="99" pos:column="118"/></condition><then pos:line="99" pos:column="118"> <block pos:line="99" pos:column="119">{
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">debugs<pos:position pos:line="100" pos:column="15"/></name><argument_list pos:line="100" pos:column="15">(<argument><expr><literal type="number" pos:line="100" pos:column="16">29<pos:position pos:line="100" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="20">3<pos:position pos:line="100" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="100" pos:column="23">auth_user<pos:position pos:line="100" pos:column="32"/></name><operator pos:line="100" pos:column="32">-&gt;<pos:position pos:line="100" pos:column="37"/></operator><name pos:line="100" pos:column="34">username<pos:position pos:line="100" pos:column="42"/></name></name><argument_list pos:line="100" pos:column="42">()<pos:position pos:line="100" pos:column="44"/></argument_list></call> <operator pos:line="100" pos:column="45">&lt;&lt;<pos:position pos:line="100" pos:column="53"/></operator> <literal type="string" pos:line="100" pos:column="48">"' validated OK but nonce stale: "<pos:position pos:line="100" pos:column="82"/></literal> <operator pos:line="100" pos:column="83">&lt;&lt;<pos:position pos:line="100" pos:column="91"/></operator> <name><name pos:line="100" pos:column="86">digest_request<pos:position pos:line="100" pos:column="100"/></name><operator pos:line="100" pos:column="100">-&gt;<pos:position pos:line="100" pos:column="105"/></operator><name pos:line="100" pos:column="102">nonceb64<pos:position pos:line="100" pos:column="110"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="112"/></expr_stmt>
        <comment type="block" pos:line="101" pos:column="9">/* Pending prevent banner and makes a ldap control */</comment>
        <expr_stmt><expr><call><name><name pos:line="102" pos:column="9">auth_user<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">-&gt;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="20">credentials<pos:position pos:line="102" pos:column="31"/></name></name><argument_list pos:line="102" pos:column="31">(<argument><expr><name><name pos:line="102" pos:column="32">Auth<pos:position pos:line="102" pos:column="36"/></name><operator pos:line="102" pos:column="36">::<pos:position pos:line="102" pos:column="38"/></operator><name pos:line="102" pos:column="38">Pending<pos:position pos:line="102" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="103" pos:column="9">nonce<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">flags<pos:position pos:line="103" pos:column="21"/></name><operator pos:line="103" pos:column="21">.<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="22">valid<pos:position pos:line="103" pos:column="27"/></name></name> <operator pos:line="103" pos:column="28">=<pos:position pos:line="103" pos:column="29"/></operator> <literal type="boolean" pos:line="103" pos:column="30">false<pos:position pos:line="103" pos:column="35"/></literal></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">authDigestNoncePurge<pos:position pos:line="104" pos:column="29"/></name><argument_list pos:line="104" pos:column="29">(<argument><expr><name pos:line="104" pos:column="30">nonce<pos:position pos:line="104" pos:column="35"/></name></expr></argument>)<pos:position pos:line="104" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>
        <return pos:line="105" pos:column="9">return;<pos:position pos:line="105" pos:column="16"/></return>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="108" pos:column="5">auth_user<pos:position pos:line="108" pos:column="14"/></name><operator pos:line="108" pos:column="14">-&gt;<pos:position pos:line="108" pos:column="19"/></operator><name pos:line="108" pos:column="16">credentials<pos:position pos:line="108" pos:column="27"/></name></name><argument_list pos:line="108" pos:column="27">(<argument><expr><name><name pos:line="108" pos:column="28">Auth<pos:position pos:line="108" pos:column="32"/></name><operator pos:line="108" pos:column="32">::<pos:position pos:line="108" pos:column="34"/></operator><name pos:line="108" pos:column="34">Ok<pos:position pos:line="108" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="110" pos:column="5">/* password was checked and did match */</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">debugs<pos:position pos:line="111" pos:column="11"/></name><argument_list pos:line="111" pos:column="11">(<argument><expr><literal type="number" pos:line="111" pos:column="12">29<pos:position pos:line="111" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="111" pos:column="16">4<pos:position pos:line="111" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="19">"user '"<pos:position pos:line="111" pos:column="27"/></literal> <operator pos:line="111" pos:column="28">&lt;&lt;<pos:position pos:line="111" pos:column="36"/></operator> <call><name><name pos:line="111" pos:column="31">auth_user<pos:position pos:line="111" pos:column="40"/></name><operator pos:line="111" pos:column="40">-&gt;<pos:position pos:line="111" pos:column="45"/></operator><name pos:line="111" pos:column="42">username<pos:position pos:line="111" pos:column="50"/></name></name><argument_list pos:line="111" pos:column="50">()<pos:position pos:line="111" pos:column="52"/></argument_list></call> <operator pos:line="111" pos:column="53">&lt;&lt;<pos:position pos:line="111" pos:column="61"/></operator> <literal type="string" pos:line="111" pos:column="56">"' validated OK"<pos:position pos:line="111" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="74"/></expr_stmt>
}<pos:position pos:line="112" pos:column="2"/></block></function></unit>

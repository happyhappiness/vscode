<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_96_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">reply_done<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">fd<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">data<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">_request<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">r<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">data<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">opt_range<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then><block type="pseudo"><empty_stmt pos:line="5" pos:column="19">;<pos:position pos:line="5" pos:column="20"/></empty_stmt></block></then>		<comment type="block" pos:line="5" pos:column="33">/* skip size checks for now */</comment>
    <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><call><name pos:line="6" pos:column="14">strcmp<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name><name pos:line="6" pos:column="21">r<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">method<pos:position pos:line="6" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="32">"HEAD"<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call> <operator pos:line="6" pos:column="40">==<pos:position pos:line="6" pos:column="42"/></operator> <literal type="number" pos:line="6" pos:column="43">0<pos:position pos:line="6" pos:column="44"/></literal></expr>)<pos:position pos:line="6" pos:column="45"/></condition><then><block type="pseudo"><empty_stmt pos:line="6" pos:column="45">;<pos:position pos:line="6" pos:column="46"/></empty_stmt></block></then></if></elseif>
    <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><name><name pos:line="7" pos:column="14">r<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">bodysize<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">!=<pos:position pos:line="7" pos:column="28"/></operator> <name><name pos:line="7" pos:column="29">r<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">content_length<pos:position pos:line="7" pos:column="46"/></name></name> <operator pos:line="7" pos:column="47">&amp;&amp;<pos:position pos:line="7" pos:column="57"/></operator> <name><name pos:line="7" pos:column="50">r<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">content_length<pos:position pos:line="7" pos:column="67"/></name></name> <operator pos:line="7" pos:column="68">&gt;=<pos:position pos:line="7" pos:column="73"/></operator> <literal type="number" pos:line="7" pos:column="71">0<pos:position pos:line="7" pos:column="72"/></literal></expr>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">fprintf<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">stderr<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="25">"ERROR: %s got %d of %d bytes\n"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="9" pos:column="17">r<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">url<pos:position pos:line="9" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="25">r<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">bodysize<pos:position pos:line="9" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="38">r<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">content_length<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><name><name pos:line="10" pos:column="14">r<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">validsize<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">&gt;=<pos:position pos:line="10" pos:column="32"/></operator> <literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr>)<pos:position pos:line="10" pos:column="32"/></condition><then pos:line="10" pos:column="32"> <block pos:line="10" pos:column="33">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">r<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">validsize<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">!=<pos:position pos:line="11" pos:column="28"/></operator> <name><name pos:line="11" pos:column="29">r<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">bodysize<pos:position pos:line="11" pos:column="40"/></name></name></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">fprintf<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">stderr<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"WARNING: %s size mismatch wanted %d bytes got %d\n"<pos:position pos:line="12" pos:column="81"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="13" pos:column="21">r<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">url<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="29">r<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">validsize<pos:position pos:line="13" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="43">r<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">bodysize<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt></block></then>
        <elseif pos:line="14" pos:column="9">else <if pos:line="14" pos:column="14">if <condition pos:line="14" pos:column="17">(<expr><name pos:line="14" pos:column="18">opt_checksum<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&amp;&amp;<pos:position pos:line="14" pos:column="41"/></operator> <name><name pos:line="14" pos:column="34">r<pos:position pos:line="14" pos:column="35"/></name><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">validsum<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">!=<pos:position pos:line="14" pos:column="48"/></operator> <name><name pos:line="14" pos:column="49">r<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">sum<pos:position pos:line="14" pos:column="55"/></name></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">fprintf<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">stderr<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="29">"WARNING: %s invalid checksum wanted 0x%lx got 0x%lx\n"<pos:position pos:line="15" pos:column="84"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="16" pos:column="21">r<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">url<pos:position pos:line="16" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="29">r<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">validsum<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="42">r<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">sum<pos:position pos:line="16" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">r<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">validstatus<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">&amp;&amp;<pos:position pos:line="18" pos:column="34"/></operator> <name><name pos:line="18" pos:column="27">r<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">status<pos:position pos:line="18" pos:column="36"/></name></name> <operator pos:line="18" pos:column="37">!=<pos:position pos:line="18" pos:column="39"/></operator> <name><name pos:line="18" pos:column="40">r<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">validstatus<pos:position pos:line="18" pos:column="54"/></name></name></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55"> <block pos:line="18" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">fprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">stderr<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="25">"WARNING: %s status mismatch wanted %d got %d\n"<pos:position pos:line="19" pos:column="73"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="20" pos:column="17">r<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">url<pos:position pos:line="20" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="25">r<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">-&gt;<pos:position pos:line="20" pos:column="31"/></operator><name pos:line="20" pos:column="28">validstatus<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="41">r<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">status<pos:position pos:line="20" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">trace_file<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20"> <block pos:line="22" pos:column="21">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">opt_checksum<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="13">fprintf<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">trace_file<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"%s %s %d %s %d 0x%lx\n"<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="25" pos:column="21">r<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">method<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="32">r<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">url<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">r<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">status<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="51">r<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">requestbodyfile<pos:position pos:line="25" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="71">r<pos:position pos:line="25" pos:column="72"/></name><operator pos:line="25" pos:column="72">-&gt;<pos:position pos:line="25" pos:column="77"/></operator><name pos:line="25" pos:column="74">bodysize<pos:position pos:line="25" pos:column="82"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="84">r<pos:position pos:line="25" pos:column="85"/></name><operator pos:line="25" pos:column="85">-&gt;<pos:position pos:line="25" pos:column="90"/></operator><name pos:line="25" pos:column="87">sum<pos:position pos:line="25" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="92"/></expr_stmt></block></then>
        <else pos:line="26" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="13">fprintf<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">trace_file<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"%s %s %d %s %d\n"<pos:position pos:line="27" pos:column="51"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="28" pos:column="21">r<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">method<pos:position pos:line="28" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="32">r<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">-&gt;<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="35">url<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="40">r<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">status<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="51">r<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">requestbodyfile<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="71">r<pos:position pos:line="28" pos:column="72"/></name><operator pos:line="28" pos:column="72">-&gt;<pos:position pos:line="28" pos:column="77"/></operator><name pos:line="28" pos:column="74">bodysize<pos:position pos:line="28" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="84"/></expr_stmt></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">free_request<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">r<pos:position pos:line="30" pos:column="19"/></name></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5037_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">writeCleanDone<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">()<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">UFSCleanLog<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">state<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">UFSCleanLog<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">cleanLog<pos:position pos:line="4" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fd<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">NULL<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">state<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">fd<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">&lt;<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">state<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">walker<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">Done<pos:position pos:line="13" pos:column="24"/></name></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name><name pos:line="13" pos:column="25">state<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">walker<pos:position pos:line="13" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">FD_WRITE_METHOD<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name><name pos:line="15" pos:column="25">state<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">fd<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="36">state<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">outbuf<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="51">state<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">-&gt;<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="58">outbuf_offset<pos:position pos:line="15" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call> <operator pos:line="15" pos:column="73">&lt;<pos:position pos:line="15" pos:column="77"/></operator> <literal type="number" pos:line="15" pos:column="75">0<pos:position pos:line="15" pos:column="76"/></literal></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77"> <block pos:line="15" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">50<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_CRITICAL<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">HERE<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">&lt;&lt;<pos:position pos:line="16" pos:column="47"/></operator> <name><name pos:line="16" pos:column="42">state<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">newLog<pos:position pos:line="16" pos:column="55"/></name></name> <operator pos:line="16" pos:column="56">&lt;&lt;<pos:position pos:line="16" pos:column="64"/></operator> <literal type="string" pos:line="16" pos:column="59">": write: "<pos:position pos:line="16" pos:column="70"/></literal> <operator pos:line="16" pos:column="71">&lt;&lt;<pos:position pos:line="16" pos:column="79"/></operator> <call><name pos:line="16" pos:column="74">xstrerror<pos:position pos:line="16" pos:column="83"/></name><argument_list pos:line="16" pos:column="83">()<pos:position pos:line="16" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">50<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">DBG_CRITICAL<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">HERE<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">&lt;&lt;<pos:position pos:line="17" pos:column="47"/></operator> <literal type="string" pos:line="17" pos:column="42">"Current swap logfile not replaced."<pos:position pos:line="17" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">file_close<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name><name pos:line="18" pos:column="20">state<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">fd<pos:position pos:line="18" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">state<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">fd<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <operator pos:line="19" pos:column="21">-<pos:position pos:line="19" pos:column="22"/></operator><literal type="number" pos:line="19" pos:column="22">1<pos:position pos:line="19" pos:column="23"/></literal></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name><operator pos:line="20" pos:column="9">::<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">unlink<pos:position pos:line="20" pos:column="17"/></name></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name><name pos:line="20" pos:column="18">state<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">newLog<pos:position pos:line="20" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">safe_free<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">state<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">outbuf<pos:position pos:line="23" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="24" pos:column="5">/*
     * You can't rename open files on Microsoft "operating systems"
     * so we have to close before renaming.
     */</comment>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">closeLog<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">()<pos:position pos:line="28" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>
    <comment type="block" pos:line="29" pos:column="5">/* save the fd value for a later test */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">fd<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <name><name pos:line="30" pos:column="10">state<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">fd<pos:position pos:line="30" pos:column="19"/></name></name></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="31" pos:column="5">/* rename */</comment>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">state<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">fd<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">&gt;=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="22">0<pos:position pos:line="33" pos:column="23"/></literal></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block pos:line="33" pos:column="25">{
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">_SQUID_OS2_<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">||<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">_SQUID_WINDOWS_<pos:position pos:line="34" pos:column="35"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">file_close<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name><name pos:line="35" pos:column="20">state<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">fd<pos:position pos:line="35" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">state<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">fd<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">-<pos:position pos:line="36" pos:column="22"/></operator><literal type="number" pos:line="36" pos:column="22">1<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="39" pos:column="9">xrename<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name><name pos:line="39" pos:column="17">state<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">newLog<pos:position pos:line="39" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="32">state<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">cur<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="42" pos:column="5">/* touch a timestamp file if we're not still validating */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">StoreController<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">::<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">store_dirs_rebuilding<pos:position pos:line="43" pos:column="47"/></name></name></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">void<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">)<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></expr_stmt></block></then>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><name pos:line="45" pos:column="14">fd<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">&lt;<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="19">0<pos:position pos:line="45" pos:column="20"/></literal></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="9">(<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">void<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">)<pos:position pos:line="46" pos:column="15"/></operator> <literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr>;<pos:position pos:line="46" pos:column="18"/></expr_stmt></block></then></if></elseif>
    <else pos:line="47" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="9">file_close<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><call><name pos:line="48" pos:column="20">file_open<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name><name pos:line="48" pos:column="30">state<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">cln<pos:position pos:line="48" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="42">O_WRONLY<pos:position pos:line="48" pos:column="50"/></name> <operator pos:line="48" pos:column="51">|<pos:position pos:line="48" pos:column="52"/></operator> <name pos:line="48" pos:column="53">O_CREAT<pos:position pos:line="48" pos:column="60"/></name> <operator pos:line="48" pos:column="61">|<pos:position pos:line="48" pos:column="62"/></operator> <name pos:line="48" pos:column="63">O_TRUNC<pos:position pos:line="48" pos:column="70"/></name> <operator pos:line="48" pos:column="71">|<pos:position pos:line="48" pos:column="72"/></operator> <name pos:line="48" pos:column="73">O_BINARY<pos:position pos:line="48" pos:column="81"/></name></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="84"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="50" pos:column="5">/* close */</comment>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">safe_free<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><name><name pos:line="51" pos:column="15">state<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">cur<pos:position pos:line="51" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">safe_free<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name><name pos:line="53" pos:column="15">state<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">newLog<pos:position pos:line="53" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">safe_free<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name><name pos:line="55" pos:column="15">state<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">-&gt;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="22">cln<pos:position pos:line="55" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="27"/></expr_stmt>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">state<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">fd<pos:position pos:line="57" pos:column="18"/></name></name> <operator pos:line="57" pos:column="19">&gt;=<pos:position pos:line="57" pos:column="24"/></operator> <literal type="number" pos:line="57" pos:column="22">0<pos:position pos:line="57" pos:column="23"/></literal></expr>)<pos:position pos:line="57" pos:column="24"/></condition><then pos:line="57" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="9">file_close<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name><name pos:line="58" pos:column="20">state<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">fd<pos:position pos:line="58" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="60" pos:column="5">state<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">fd<pos:position pos:line="60" pos:column="14"/></name></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <operator pos:line="60" pos:column="17">-<pos:position pos:line="60" pos:column="18"/></operator><literal type="number" pos:line="60" pos:column="18">1<pos:position pos:line="60" pos:column="19"/></literal></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="62" pos:column="5">delete<pos:position pos:line="62" pos:column="11"/></operator> <name pos:line="62" pos:column="12">state<pos:position pos:line="62" pos:column="17"/></name></expr>;<pos:position pos:line="62" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="64" pos:column="5">cleanLog<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <name pos:line="64" pos:column="16">NULL<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

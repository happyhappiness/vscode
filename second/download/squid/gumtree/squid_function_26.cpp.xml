<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_26.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLFilledChecklist<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">authenticated<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">http_hdr_type<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">headertype<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">NULL<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">request<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25"> <block pos:line="6" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">fatal<pos:position pos:line="7" pos:column="14"/></name> <argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"requiresRequest SHOULD have been true for this ACL!!"<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="72"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <elseif pos:line="9" pos:column="7">else <if pos:line="9" pos:column="12">if <condition pos:line="9" pos:column="15">(<expr><name><name pos:line="9" pos:column="16">request<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">flags<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">.<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">accelerated<pos:position pos:line="9" pos:column="42"/></name></name></expr>)<pos:position pos:line="9" pos:column="43"/></condition><then pos:line="9" pos:column="43"> <block pos:line="9" pos:column="44">{
        <comment type="block" pos:line="10" pos:column="9">/* WWW authorization on accelerated requests */</comment>
        <expr_stmt><expr><name pos:line="11" pos:column="9">headertype<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">HDR_AUTHORIZATION<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if></elseif> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><name><name pos:line="12" pos:column="16">request<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">flags<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">intercepted<pos:position pos:line="12" pos:column="42"/></name></name> <operator pos:line="12" pos:column="43">||<pos:position pos:line="12" pos:column="45"/></operator> <name><name pos:line="12" pos:column="46">request<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">flags<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">.<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">spoof_client_ip<pos:position pos:line="12" pos:column="76"/></name></name></expr>)<pos:position pos:line="12" pos:column="77"/></condition><then pos:line="12" pos:column="77"> <block pos:line="12" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">28<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">DBG_IMPORTANT<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">HERE<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">&lt;&lt;<pos:position pos:line="13" pos:column="48"/></operator> <literal type="string" pos:line="13" pos:column="43">" authentication not applicable on intercepted requests."<pos:position pos:line="13" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="102"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <comment type="block" pos:line="16" pos:column="9">/* Proxy authorization on proxy requests */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">headertype<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">HDR_PROXY_AUTHORIZATION<pos:position pos:line="17" pos:column="45"/></name></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="20" pos:column="5">/* get authed here */</comment>
    <comment type="block" pos:line="21" pos:column="5">/* Note: this fills in auth_user_request when applicable */</comment>
    <comment type="block" pos:line="22" pos:column="5">/*
     * DPW 2007-05-08
     * tryToAuthenticateAndSetAuthUser used to try to lock and
     * unlock auth_user_request on our behalf, but it was too
     * ugly and hard to follow.  Now we do our own locking here.
     *
     * I'm not sure what tryToAuthenticateAndSetAuthUser does when
     * auth_user_request is set before calling.  I'm tempted to
     * unlock and set it to NULL, but it seems safer to save the
     * pointer before calling and unlock it afterwards.  If the
     * pointer doesn't change then its a no-op.
     */</comment>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">AuthUserRequest<pos:position pos:line="34" pos:column="20"/></name> <modifier pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></modifier></type><name pos:line="34" pos:column="22">old_auth_user_request<pos:position pos:line="34" pos:column="43"/></name> <init pos:line="34" pos:column="44">= <expr><name pos:line="34" pos:column="46">auth_user_request<pos:position pos:line="34" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">auth_acl_t<pos:position pos:line="35" pos:column="15"/></name></type> <name pos:line="35" pos:column="16">result<pos:position pos:line="35" pos:column="22"/></name> <init pos:line="35" pos:column="23">= <expr><call><name><name pos:line="35" pos:column="25">AuthUserRequest<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">::<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">tryToAuthenticateAndSetAuthUser<pos:position pos:line="35" pos:column="73"/></name></name> <argument_list pos:line="35" pos:column="74">(<argument><expr><operator pos:line="35" pos:column="75">&amp;<pos:position pos:line="35" pos:column="80"/></operator><name pos:line="35" pos:column="76">auth_user_request<pos:position pos:line="35" pos:column="93"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="95">headertype<pos:position pos:line="35" pos:column="105"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="107">request<pos:position pos:line="35" pos:column="114"/></name></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="116">conn<pos:position pos:line="35" pos:column="120"/></name><argument_list pos:line="35" pos:column="120">()<pos:position pos:line="35" pos:column="122"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="124">src_addr<pos:position pos:line="35" pos:column="132"/></name></expr></argument>)<pos:position pos:line="35" pos:column="133"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="134"/></decl_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">auth_user_request<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">AUTHUSERREQUESTLOCK<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">auth_user_request<pos:position pos:line="37" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="48">"ACLFilledChecklist"<pos:position pos:line="37" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="70"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">AUTHUSERREQUESTUNLOCK<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">old_auth_user_request<pos:position pos:line="38" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="50">"old ACLFilledChecklist"<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
    <switch pos:line="39" pos:column="5">switch <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">result<pos:position pos:line="39" pos:column="19"/></name></expr>)<pos:position pos:line="39" pos:column="20"/></condition> <block pos:line="39" pos:column="21">{

    <case pos:line="41" pos:column="5">case <expr><name pos:line="41" pos:column="10">AUTH_ACL_CANNOT_AUTHENTICATE<pos:position pos:line="41" pos:column="38"/></name></expr>:<pos:position pos:line="41" pos:column="39"/></case>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">28<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">4<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"aclMatchAcl: returning  0 user authenticated but not authorised."<pos:position pos:line="42" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="91"/></expr_stmt>
        <return pos:line="43" pos:column="9">return <expr><literal type="number" pos:line="43" pos:column="16">0<pos:position pos:line="43" pos:column="17"/></literal></expr>;<pos:position pos:line="43" pos:column="18"/></return>

    <case pos:line="45" pos:column="5">case <expr><name pos:line="45" pos:column="10">AUTH_AUTHENTICATED<pos:position pos:line="45" pos:column="28"/></name></expr>:<pos:position pos:line="45" pos:column="29"/></case>

        <return pos:line="47" pos:column="9">return <expr><literal type="number" pos:line="47" pos:column="16">1<pos:position pos:line="47" pos:column="17"/></literal></expr>;<pos:position pos:line="47" pos:column="18"/></return>
        <break pos:line="48" pos:column="9">break;<pos:position pos:line="48" pos:column="15"/></break>

    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">AUTH_ACL_HELPER<pos:position pos:line="50" pos:column="25"/></name></expr>:<pos:position pos:line="50" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">28<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="20">4<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"aclMatchAcl: returning 0 sending credentials to helper."<pos:position pos:line="51" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">changeState<pos:position pos:line="52" pos:column="20"/></name> <argument_list pos:line="52" pos:column="21">(<argument><expr><call><name><name pos:line="52" pos:column="22">ProxyAuthLookup<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">::<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="39">Instance<pos:position pos:line="52" pos:column="47"/></name></name><argument_list pos:line="52" pos:column="47">()<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>;<pos:position pos:line="53" pos:column="18"/></return>

    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">AUTH_ACL_CHALLENGE<pos:position pos:line="55" pos:column="28"/></name></expr>:<pos:position pos:line="55" pos:column="29"/></case>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">debugs<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><literal type="number" pos:line="56" pos:column="16">28<pos:position pos:line="56" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="20">4<pos:position pos:line="56" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="23">"aclMatchAcl: returning 0 sending authentication challenge."<pos:position pos:line="56" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">changeState<pos:position pos:line="57" pos:column="20"/></name> <argument_list pos:line="57" pos:column="21">(<argument><expr><call><name><name pos:line="57" pos:column="22">ProxyAuthNeeded<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">::<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">Instance<pos:position pos:line="57" pos:column="47"/></name></name><argument_list pos:line="57" pos:column="47">()<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="51"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr>;<pos:position pos:line="58" pos:column="18"/></return>

    <default pos:line="60" pos:column="5">default:<pos:position pos:line="60" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">fatal<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><literal type="string" pos:line="61" pos:column="15">"unexpected authenticateAuthenticate reply\n"<pos:position pos:line="61" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="62"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><literal type="number" pos:line="62" pos:column="16">0<pos:position pos:line="62" pos:column="17"/></literal></expr>;<pos:position pos:line="62" pos:column="18"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></switch>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

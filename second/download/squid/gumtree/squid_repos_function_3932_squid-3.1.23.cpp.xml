<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3932_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">makeRequestHeaders<pos:position pos:line="1" pos:column="51"/></name></name><parameter_list pos:line="1" pos:column="51">(<parameter><decl><type><name pos:line="1" pos:column="52">MemBuf<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">&amp;<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="60">buf<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">ntoabuf<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><name pos:line="3" pos:column="18">MAX_IPSTRLEN<pos:position pos:line="3" pos:column="30"/></name></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <comment type="block" pos:line="4" pos:column="5">/*
     * XXX These should use HttpHdr interfaces instead of Printfs
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name><name pos:line="7" pos:column="11">Adaptation<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">::<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">ServiceConfig<pos:position pos:line="7" pos:column="36"/></name></name> <modifier pos:line="7" pos:column="37">&amp;<pos:position pos:line="7" pos:column="42"/></modifier></type><name pos:line="7" pos:column="38">s<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><call><name pos:line="7" pos:column="42">service<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">()<pos:position pos:line="7" pos:column="51"/></argument_list></call><operator pos:line="7" pos:column="51">.<pos:position pos:line="7" pos:column="52"/></operator><call><name pos:line="7" pos:column="52">cfg<pos:position pos:line="7" pos:column="55"/></name><argument_list pos:line="7" pos:column="55">()<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">buf<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">.<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">Printf<pos:position pos:line="8" pos:column="15"/></name></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"%s "<pos:position pos:line="8" pos:column="21"/></literal> <name pos:line="8" pos:column="22">SQUIDSTRINGPH<pos:position pos:line="8" pos:column="35"/></name> <literal type="string" pos:line="8" pos:column="36">" ICAP/1.0\r\n"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="53">s<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">.<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">methodStr<pos:position pos:line="8" pos:column="64"/></name></name><argument_list pos:line="8" pos:column="64">()<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="68">SQUIDSTRINGPRINT<pos:position pos:line="8" pos:column="84"/></name><argument_list pos:line="8" pos:column="84">(<argument><expr><name><name pos:line="8" pos:column="85">s<pos:position pos:line="8" pos:column="86"/></name><operator pos:line="8" pos:column="86">.<pos:position pos:line="8" pos:column="87"/></operator><name pos:line="8" pos:column="87">uri<pos:position pos:line="8" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">buf<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">.<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">Printf<pos:position pos:line="9" pos:column="15"/></name></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="string" pos:line="9" pos:column="16">"Host: "<pos:position pos:line="9" pos:column="24"/></literal> <name pos:line="9" pos:column="25">SQUIDSTRINGPH<pos:position pos:line="9" pos:column="38"/></name> <literal type="string" pos:line="9" pos:column="39">":%d\r\n"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="50">SQUIDSTRINGPRINT<pos:position pos:line="9" pos:column="66"/></name><argument_list pos:line="9" pos:column="66">(<argument><expr><name><name pos:line="9" pos:column="67">s<pos:position pos:line="9" pos:column="68"/></name><operator pos:line="9" pos:column="68">.<pos:position pos:line="9" pos:column="69"/></operator><name pos:line="9" pos:column="69">host<pos:position pos:line="9" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="76">s<pos:position pos:line="9" pos:column="77"/></name><operator pos:line="9" pos:column="77">.<pos:position pos:line="9" pos:column="78"/></operator><name pos:line="9" pos:column="78">port<pos:position pos:line="9" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">buf<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">.<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">Printf<pos:position pos:line="10" pos:column="15"/></name></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"Date: %s\r\n"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="32">mkrfc1123<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">squid_curtime<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">TheConfig<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">reuse_connections<pos:position pos:line="12" pos:column="37"/></name></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="9">buf<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">Printf<pos:position pos:line="13" pos:column="19"/></name></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="string" pos:line="13" pos:column="20">"Connection: close\r\n"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="15" pos:column="5">// we must forward "Proxy-Authenticate" and "Proxy-Authorization"</comment>
    <comment type="line" pos:line="16" pos:column="5">// as ICAP headers.</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">virgin<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">header<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">-&gt;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="24">header<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">has<pos:position pos:line="17" pos:column="34"/></name></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">HDR_PROXY_AUTHENTICATE<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59"> <block pos:line="17" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">String<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">vh<pos:position pos:line="18" pos:column="18"/></name><init pos:line="18" pos:column="18">=<expr><call><name><name pos:line="18" pos:column="19">virgin<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">header<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">header<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">getByName<pos:position pos:line="18" pos:column="50"/></name></name><argument_list pos:line="18" pos:column="50">(<argument><expr><literal type="string" pos:line="18" pos:column="51">"Proxy-Authenticate"<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="73"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">buf<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">Printf<pos:position pos:line="19" pos:column="19"/></name></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="string" pos:line="19" pos:column="20">"Proxy-Authenticate: "<pos:position pos:line="19" pos:column="42"/></literal> <name pos:line="19" pos:column="43">SQUIDSTRINGPH<pos:position pos:line="19" pos:column="56"/></name> <literal type="string" pos:line="19" pos:column="57">"\r\n"<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>,<argument><expr><call><name pos:line="19" pos:column="64">SQUIDSTRINGPRINT<pos:position pos:line="19" pos:column="80"/></name><argument_list pos:line="19" pos:column="80">(<argument><expr><name pos:line="19" pos:column="81">vh<pos:position pos:line="19" pos:column="83"/></name></expr></argument>)<pos:position pos:line="19" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="86"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name><name pos:line="22" pos:column="9">virgin<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">header<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">header<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">.<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">has<pos:position pos:line="22" pos:column="34"/></name></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">HDR_PROXY_AUTHORIZATION<pos:position pos:line="22" pos:column="58"/></name></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="60"/></condition><then pos:line="22" pos:column="60"> <block pos:line="22" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">String<pos:position pos:line="23" pos:column="15"/></name></type> <name pos:line="23" pos:column="16">vh<pos:position pos:line="23" pos:column="18"/></name><init pos:line="23" pos:column="18">=<expr><call><name><name pos:line="23" pos:column="19">virgin<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">header<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">-&gt;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="34">header<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">.<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">getByName<pos:position pos:line="23" pos:column="50"/></name></name><argument_list pos:line="23" pos:column="50">(<argument><expr><literal type="string" pos:line="23" pos:column="51">"Proxy-Authorization"<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="74"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">buf<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">Printf<pos:position pos:line="24" pos:column="19"/></name></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"Proxy-Authorization: "<pos:position pos:line="24" pos:column="43"/></literal> <name pos:line="24" pos:column="44">SQUIDSTRINGPH<pos:position pos:line="24" pos:column="57"/></name> <literal type="string" pos:line="24" pos:column="58">"\r\n"<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="66">SQUIDSTRINGPRINT<pos:position pos:line="24" pos:column="82"/></name><argument_list pos:line="24" pos:column="82">(<argument><expr><name pos:line="24" pos:column="83">vh<pos:position pos:line="24" pos:column="85"/></name></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="88"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">const<pos:position pos:line="27" pos:column="10"/></specifier> <name pos:line="27" pos:column="11">HttpRequest<pos:position pos:line="27" pos:column="22"/></name> <modifier pos:line="27" pos:column="23">*<pos:position pos:line="27" pos:column="24"/></modifier></type><name pos:line="27" pos:column="24">request<pos:position pos:line="27" pos:column="31"/></name> <init pos:line="27" pos:column="32">= <expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><call><name pos:line="27" pos:column="35">virginRequest<pos:position pos:line="27" pos:column="48"/></name><argument_list pos:line="27" pos:column="48">()<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="51"/></decl_stmt>

    <comment type="line" pos:line="29" pos:column="5">// share the cross-transactional database records if needed</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">Adaptation<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">::<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">Config<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">::<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="29">masterx_shared_name<pos:position pos:line="30" pos:column="48"/></name></name></expr>)<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49"> <block pos:line="30" pos:column="50">{
        <decl_stmt><decl><type><name><name pos:line="31" pos:column="9">Adaptation<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">::<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">History<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">::<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">Pointer<pos:position pos:line="31" pos:column="37"/></name></name></type> <name pos:line="31" pos:column="38">ah<pos:position pos:line="31" pos:column="40"/></name> <init pos:line="31" pos:column="41">= <expr><call><name><name pos:line="31" pos:column="43">request<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">-&gt;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="52">adaptHistory<pos:position pos:line="31" pos:column="64"/></name></name><argument_list pos:line="31" pos:column="64">(<argument><expr><literal type="boolean" pos:line="31" pos:column="65">true<pos:position pos:line="31" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="71"/></decl_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">ah<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">!=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">NULL<pos:position pos:line="32" pos:column="23"/></name></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24"> <block pos:line="32" pos:column="25">{
            <decl_stmt><decl><type><name pos:line="33" pos:column="13">String<pos:position pos:line="33" pos:column="19"/></name></type> <name pos:line="33" pos:column="20">name<pos:position pos:line="33" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="33" pos:column="26">value<pos:position pos:line="33" pos:column="31"/></name></decl>;<pos:position pos:line="33" pos:column="32"/></decl_stmt>
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><call><name><name pos:line="34" pos:column="17">ah<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">getXxRecord<pos:position pos:line="34" pos:column="32"/></name></name><argument_list pos:line="34" pos:column="32">(<argument><expr><name pos:line="34" pos:column="33">name<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">value<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="46"/></condition><then pos:line="34" pos:column="46"> <block pos:line="34" pos:column="47">{
                <expr_stmt><expr><call><name><name pos:line="35" pos:column="17">buf<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">Printf<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">SQUIDSTRINGPH<pos:position pos:line="35" pos:column="41"/></name> <literal type="string" pos:line="35" pos:column="42">": "<pos:position pos:line="35" pos:column="46"/></literal> <name pos:line="35" pos:column="47">SQUIDSTRINGPH<pos:position pos:line="35" pos:column="60"/></name> <literal type="string" pos:line="35" pos:column="61">"\r\n"<pos:position pos:line="35" pos:column="67"/></literal></expr></argument>,
                           <argument><expr><call><name pos:line="36" pos:column="28">SQUIDSTRINGPRINT<pos:position pos:line="36" pos:column="44"/></name><argument_list pos:line="36" pos:column="44">(<argument><expr><name pos:line="36" pos:column="45">name<pos:position pos:line="36" pos:column="49"/></name></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="52">SQUIDSTRINGPRINT<pos:position pos:line="36" pos:column="68"/></name><argument_list pos:line="36" pos:column="68">(<argument><expr><name pos:line="36" pos:column="69">value<pos:position pos:line="36" pos:column="74"/></name></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>


    <expr_stmt><expr><call><name><name pos:line="42" pos:column="5">buf<pos:position pos:line="42" pos:column="8"/></name><operator pos:line="42" pos:column="8">.<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">Printf<pos:position pos:line="42" pos:column="15"/></name></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="string" pos:line="42" pos:column="16">"Encapsulated: "<pos:position pos:line="42" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="44" pos:column="5">MemBuf<pos:position pos:line="44" pos:column="11"/></name></type> <name pos:line="44" pos:column="12">httpBuf<pos:position pos:line="44" pos:column="19"/></name></decl>;<pos:position pos:line="44" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">httpBuf<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">.<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="13">init<pos:position pos:line="46" pos:column="17"/></name></name><argument_list pos:line="46" pos:column="17">()<pos:position pos:line="46" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>

    <comment type="line" pos:line="48" pos:column="5">// build HTTP request header, if any</comment>
    <decl_stmt><decl><type><name><name pos:line="49" pos:column="5">ICAP<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">::<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">Method<pos:position pos:line="49" pos:column="17"/></name></name></type> <name pos:line="49" pos:column="18">m<pos:position pos:line="49" pos:column="19"/></name> <init pos:line="49" pos:column="20">= <expr><name><name pos:line="49" pos:column="22">s<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">.<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">method<pos:position pos:line="49" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="49" pos:column="31"/></decl_stmt>

    <comment type="line" pos:line="51" pos:column="5">// to simplify, we could assume that request is always available</comment>

    <decl_stmt><decl><type><name pos:line="53" pos:column="5">String<pos:position pos:line="53" pos:column="11"/></name></type> <name pos:line="53" pos:column="12">urlPath<pos:position pos:line="53" pos:column="19"/></name></decl>;<pos:position pos:line="53" pos:column="20"/></decl_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">request<pos:position pos:line="54" pos:column="16"/></name></expr>)<pos:position pos:line="54" pos:column="17"/></condition><then pos:line="54" pos:column="17"> <block pos:line="54" pos:column="18">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">urlPath<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <name><name pos:line="55" pos:column="19">request<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">-&gt;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="28">urlpath<pos:position pos:line="55" pos:column="35"/></name></name></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">ICAP<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">::<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="19">methodRespmod<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">==<pos:position pos:line="56" pos:column="35"/></operator> <name pos:line="56" pos:column="36">m<pos:position pos:line="56" pos:column="37"/></name></expr>)<pos:position pos:line="56" pos:column="38"/></condition><then pos:line="56" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="13">encapsulateHead<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">buf<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="34">"req-hdr"<pos:position pos:line="57" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="45">httpBuf<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">request<pos:position pos:line="57" pos:column="61"/></name></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="63"/></expr_stmt></block></then>
        <elseif pos:line="58" pos:column="9">else <if pos:line="58" pos:column="14">if <condition pos:line="58" pos:column="17">(<expr><name><name pos:line="58" pos:column="18">ICAP<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">::<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="24">methodReqmod<pos:position pos:line="58" pos:column="36"/></name></name> <operator pos:line="58" pos:column="37">==<pos:position pos:line="58" pos:column="39"/></operator> <name pos:line="58" pos:column="40">m<pos:position pos:line="58" pos:column="41"/></name></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="13">encapsulateHead<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">buf<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="34">"req-hdr"<pos:position pos:line="59" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="45">httpBuf<pos:position pos:line="59" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="54">virgin<pos:position pos:line="59" pos:column="60"/></name><operator pos:line="59" pos:column="60">.<pos:position pos:line="59" pos:column="61"/></operator><name pos:line="59" pos:column="61">header<pos:position pos:line="59" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="69"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">ICAP<pos:position pos:line="62" pos:column="13"/></name><operator pos:line="62" pos:column="13">::<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">methodRespmod<pos:position pos:line="62" pos:column="28"/></name></name> <operator pos:line="62" pos:column="29">==<pos:position pos:line="62" pos:column="31"/></operator> <name pos:line="62" pos:column="32">m<pos:position pos:line="62" pos:column="33"/></name></expr>)<pos:position pos:line="62" pos:column="34"/></condition><then pos:line="62" pos:column="34">
        <block type="pseudo"><if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<decl><type><specifier pos:line="63" pos:column="13">const<pos:position pos:line="63" pos:column="18"/></specifier> <name pos:line="63" pos:column="19">HttpMsg<pos:position pos:line="63" pos:column="26"/></name> <modifier pos:line="63" pos:column="27">*<pos:position pos:line="63" pos:column="28"/></modifier></type><name pos:line="63" pos:column="28">prime<pos:position pos:line="63" pos:column="33"/></name> <init pos:line="63" pos:column="34">= <expr><name><name pos:line="63" pos:column="36">virgin<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">.<pos:position pos:line="63" pos:column="43"/></operator><name pos:line="63" pos:column="43">header<pos:position pos:line="63" pos:column="49"/></name></name></expr></init></decl>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="13">encapsulateHead<pos:position pos:line="64" pos:column="28"/></name><argument_list pos:line="64" pos:column="28">(<argument><expr><name pos:line="64" pos:column="29">buf<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="34">"res-hdr"<pos:position pos:line="64" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="45">httpBuf<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="54">prime<pos:position pos:line="64" pos:column="59"/></name></expr></argument>)<pos:position pos:line="64" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt></block></then></if></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><call><name><name pos:line="66" pos:column="10">virginBody<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">.<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">expected<pos:position pos:line="66" pos:column="29"/></name></name><argument_list pos:line="66" pos:column="29">()<pos:position pos:line="66" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="32"/></condition><then pos:line="66" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="67" pos:column="9">buf<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">.<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">Printf<pos:position pos:line="67" pos:column="19"/></name></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="string" pos:line="67" pos:column="20">"null-body=%d"<pos:position pos:line="67" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="36">(<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="37">int<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">)<pos:position pos:line="67" pos:column="41"/></operator> <call><name><name pos:line="67" pos:column="42">httpBuf<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">.<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="50">contentSize<pos:position pos:line="67" pos:column="61"/></name></name><argument_list pos:line="67" pos:column="61">()<pos:position pos:line="67" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="65"/></expr_stmt></block></then>
    <elseif pos:line="68" pos:column="5">else <if pos:line="68" pos:column="10">if <condition pos:line="68" pos:column="13">(<expr><name><name pos:line="68" pos:column="14">ICAP<pos:position pos:line="68" pos:column="18"/></name><operator pos:line="68" pos:column="18">::<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">methodReqmod<pos:position pos:line="68" pos:column="32"/></name></name> <operator pos:line="68" pos:column="33">==<pos:position pos:line="68" pos:column="35"/></operator> <name pos:line="68" pos:column="36">m<pos:position pos:line="68" pos:column="37"/></name></expr>)<pos:position pos:line="68" pos:column="38"/></condition><then pos:line="68" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="69" pos:column="9">buf<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">.<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="13">Printf<pos:position pos:line="69" pos:column="19"/></name></name><argument_list pos:line="69" pos:column="19">(<argument><expr><literal type="string" pos:line="69" pos:column="20">"req-body=%d"<pos:position pos:line="69" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="69" pos:column="35">(<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="36">int<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">)<pos:position pos:line="69" pos:column="40"/></operator> <call><name><name pos:line="69" pos:column="41">httpBuf<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">.<pos:position pos:line="69" pos:column="49"/></operator><name pos:line="69" pos:column="49">contentSize<pos:position pos:line="69" pos:column="60"/></name></name><argument_list pos:line="69" pos:column="60">()<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <else pos:line="70" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="71" pos:column="9">buf<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">.<pos:position pos:line="71" pos:column="13"/></operator><name pos:line="71" pos:column="13">Printf<pos:position pos:line="71" pos:column="19"/></name></name><argument_list pos:line="71" pos:column="19">(<argument><expr><literal type="string" pos:line="71" pos:column="20">"res-body=%d"<pos:position pos:line="71" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="71" pos:column="35">(<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="36">int<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">)<pos:position pos:line="71" pos:column="40"/></operator> <call><name><name pos:line="71" pos:column="41">httpBuf<pos:position pos:line="71" pos:column="48"/></name><operator pos:line="71" pos:column="48">.<pos:position pos:line="71" pos:column="49"/></operator><name pos:line="71" pos:column="49">contentSize<pos:position pos:line="71" pos:column="60"/></name></name><argument_list pos:line="71" pos:column="60">()<pos:position pos:line="71" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="64"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="73" pos:column="5">buf<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">.<pos:position pos:line="73" pos:column="9"/></operator><name pos:line="73" pos:column="9">append<pos:position pos:line="73" pos:column="15"/></name></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name><name pos:line="73" pos:column="16">ICAP<pos:position pos:line="73" pos:column="20"/></name><operator pos:line="73" pos:column="20">::<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">crlf<pos:position pos:line="73" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="28">2<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="31"/></expr_stmt> <comment type="line" pos:line="73" pos:column="32">// terminate Encapsulated line</comment>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><call><name><name pos:line="75" pos:column="9">preview<pos:position pos:line="75" pos:column="16"/></name><operator pos:line="75" pos:column="16">.<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="17">enabled<pos:position pos:line="75" pos:column="24"/></name></name><argument_list pos:line="75" pos:column="24">()<pos:position pos:line="75" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="27"/></condition><then pos:line="75" pos:column="27"> <block pos:line="75" pos:column="28">{
        <expr_stmt><expr><call><name><name pos:line="76" pos:column="9">buf<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">.<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="13">Printf<pos:position pos:line="76" pos:column="19"/></name></name><argument_list pos:line="76" pos:column="19">(<argument><expr><literal type="string" pos:line="76" pos:column="20">"Preview: %d\r\n"<pos:position pos:line="76" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="76" pos:column="39">(<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="40">int<pos:position pos:line="76" pos:column="43"/></name><operator pos:line="76" pos:column="43">)<pos:position pos:line="76" pos:column="44"/></operator><call><name><name pos:line="76" pos:column="44">preview<pos:position pos:line="76" pos:column="51"/></name><operator pos:line="76" pos:column="51">.<pos:position pos:line="76" pos:column="52"/></operator><name pos:line="76" pos:column="52">ad<pos:position pos:line="76" pos:column="54"/></name></name><argument_list pos:line="76" pos:column="54">()<pos:position pos:line="76" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><call><name><name pos:line="77" pos:column="13">virginBody<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">.<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="24">expected<pos:position pos:line="77" pos:column="32"/></name></name><argument_list pos:line="77" pos:column="32">()<pos:position pos:line="77" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35"> <comment type="line" pos:line="77" pos:column="36">// there is a body to preview</comment>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="78" pos:column="13">virginBodySending<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">.<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="31">plan<pos:position pos:line="78" pos:column="35"/></name></name><argument_list pos:line="78" pos:column="35">()<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt></block></then>
        <else pos:line="79" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="13">finishNullOrEmptyBodyPreview<pos:position pos:line="80" pos:column="41"/></name><argument_list pos:line="80" pos:column="41">(<argument><expr><name pos:line="80" pos:column="42">httpBuf<pos:position pos:line="80" pos:column="49"/></name></expr></argument>)<pos:position pos:line="80" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="51"/></expr_stmt></block></else></if>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><call><name pos:line="83" pos:column="9">shouldAllow204<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">()<pos:position pos:line="83" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="26"/></condition><then pos:line="83" pos:column="26"> <block pos:line="83" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">debugs<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><literal type="number" pos:line="84" pos:column="16">93<pos:position pos:line="84" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="84" pos:column="19">5<pos:position pos:line="84" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="22">HERE<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">&lt;&lt;<pos:position pos:line="84" pos:column="35"/></operator> <literal type="string" pos:line="84" pos:column="30">"will allow 204s outside of preview"<pos:position pos:line="84" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">state<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">.<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="15">allowedPostview204<pos:position pos:line="85" pos:column="33"/></name></name> <operator pos:line="85" pos:column="34">=<pos:position pos:line="85" pos:column="35"/></operator> <literal type="boolean" pos:line="85" pos:column="36">true<pos:position pos:line="85" pos:column="40"/></literal></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="86" pos:column="9">buf<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">.<pos:position pos:line="86" pos:column="13"/></operator><name pos:line="86" pos:column="13">Printf<pos:position pos:line="86" pos:column="19"/></name></name><argument_list pos:line="86" pos:column="19">(<argument><expr><literal type="string" pos:line="86" pos:column="20">"Allow: 204\r\n"<pos:position pos:line="86" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><call><name><name pos:line="87" pos:column="13">virginBody<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">.<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="24">expected<pos:position pos:line="87" pos:column="32"/></name></name><argument_list pos:line="87" pos:column="32">()<pos:position pos:line="87" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="35"/></condition><then pos:line="87" pos:column="35"> <comment type="line" pos:line="87" pos:column="36">// there is a body to echo</comment>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="88" pos:column="13">virginBodySending<pos:position pos:line="88" pos:column="30"/></name><operator pos:line="88" pos:column="30">.<pos:position pos:line="88" pos:column="31"/></operator><name pos:line="88" pos:column="31">plan<pos:position pos:line="88" pos:column="35"/></name></name><argument_list pos:line="88" pos:column="35">()<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt></block></then></if>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><name><name pos:line="91" pos:column="9">TheConfig<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">.<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">send_client_ip<pos:position pos:line="91" pos:column="33"/></name></name> <operator pos:line="91" pos:column="34">&amp;&amp;<pos:position pos:line="91" pos:column="44"/></operator> <name pos:line="91" pos:column="37">request<pos:position pos:line="91" pos:column="44"/></name></expr>)<pos:position pos:line="91" pos:column="45"/></condition><then pos:line="91" pos:column="45"> <block pos:line="91" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="92" pos:column="9">IpAddress<pos:position pos:line="92" pos:column="18"/></name></type> <name pos:line="92" pos:column="19">client_addr<pos:position pos:line="92" pos:column="30"/></name></decl>;<pos:position pos:line="92" pos:column="31"/></decl_stmt>
<cpp:if pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">if<pos:position pos:line="93" pos:column="4"/></cpp:directive> <expr><name pos:line="93" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="93" pos:column="27"/></name></expr></cpp:if>
        <if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name><name pos:line="94" pos:column="13">TheConfig<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">.<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="23">icap_uses_indirect_client<pos:position pos:line="94" pos:column="48"/></name></name></expr>)<pos:position pos:line="94" pos:column="49"/></condition><then pos:line="94" pos:column="49"> <block pos:line="94" pos:column="50">{
            <expr_stmt><expr><name pos:line="95" pos:column="13">client_addr<pos:position pos:line="95" pos:column="24"/></name> <operator pos:line="95" pos:column="25">=<pos:position pos:line="95" pos:column="26"/></operator> <name><name pos:line="95" pos:column="27">request<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">indirect_client_addr<pos:position pos:line="95" pos:column="56"/></name></name></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then> <else pos:line="96" pos:column="11">else
<cpp:endif pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">endif<pos:position pos:line="97" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="13">client_addr<pos:position pos:line="98" pos:column="24"/></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <name><name pos:line="98" pos:column="27">request<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">-&gt;<pos:position pos:line="98" pos:column="39"/></operator><name pos:line="98" pos:column="36">client_addr<pos:position pos:line="98" pos:column="47"/></name></name></expr>;<pos:position pos:line="98" pos:column="48"/></expr_stmt></block></else></if>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><operator pos:line="99" pos:column="13">!<pos:position pos:line="99" pos:column="14"/></operator><call><name><name pos:line="99" pos:column="14">client_addr<pos:position pos:line="99" pos:column="25"/></name><operator pos:line="99" pos:column="25">.<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">IsAnyAddr<pos:position pos:line="99" pos:column="35"/></name></name><argument_list pos:line="99" pos:column="35">()<pos:position pos:line="99" pos:column="37"/></argument_list></call> <operator pos:line="99" pos:column="38">&amp;&amp;<pos:position pos:line="99" pos:column="48"/></operator> <operator pos:line="99" pos:column="41">!<pos:position pos:line="99" pos:column="42"/></operator><call><name><name pos:line="99" pos:column="42">client_addr<pos:position pos:line="99" pos:column="53"/></name><operator pos:line="99" pos:column="53">.<pos:position pos:line="99" pos:column="54"/></operator><name pos:line="99" pos:column="54">IsNoAddr<pos:position pos:line="99" pos:column="62"/></name></name><argument_list pos:line="99" pos:column="62">()<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="65"/></condition><then pos:line="99" pos:column="65">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="100" pos:column="13">buf<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">.<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="17">Printf<pos:position pos:line="100" pos:column="23"/></name></name><argument_list pos:line="100" pos:column="23">(<argument><expr><literal type="string" pos:line="100" pos:column="24">"X-Client-IP: %s\r\n"<pos:position pos:line="100" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="100" pos:column="47">client_addr<pos:position pos:line="100" pos:column="58"/></name><operator pos:line="100" pos:column="58">.<pos:position pos:line="100" pos:column="59"/></operator><name pos:line="100" pos:column="59">NtoA<pos:position pos:line="100" pos:column="63"/></name></name><argument_list pos:line="100" pos:column="63">(<argument><expr><name pos:line="100" pos:column="64">ntoabuf<pos:position pos:line="100" pos:column="71"/></name></expr></argument>,<argument><expr><name pos:line="100" pos:column="72">MAX_IPSTRLEN<pos:position pos:line="100" pos:column="84"/></name></expr></argument>)<pos:position pos:line="100" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="87"/></expr_stmt></block></then></if>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><name><name pos:line="103" pos:column="9">TheConfig<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">.<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">send_client_username<pos:position pos:line="103" pos:column="39"/></name></name> <operator pos:line="103" pos:column="40">&amp;&amp;<pos:position pos:line="103" pos:column="50"/></operator> <name pos:line="103" pos:column="43">request<pos:position pos:line="103" pos:column="50"/></name></expr>)<pos:position pos:line="103" pos:column="51"/></condition><then pos:line="103" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="9">makeUsernameHeader<pos:position pos:line="104" pos:column="27"/></name><argument_list pos:line="104" pos:column="27">(<argument><expr><name pos:line="104" pos:column="28">request<pos:position pos:line="104" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="37">buf<pos:position pos:line="104" pos:column="40"/></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="106" pos:column="5">// fprintf(stderr, "%s\n", buf.content());</comment>

    <expr_stmt><expr><call><name><name pos:line="108" pos:column="5">buf<pos:position pos:line="108" pos:column="8"/></name><operator pos:line="108" pos:column="8">.<pos:position pos:line="108" pos:column="9"/></operator><name pos:line="108" pos:column="9">append<pos:position pos:line="108" pos:column="15"/></name></name><argument_list pos:line="108" pos:column="15">(<argument><expr><name><name pos:line="108" pos:column="16">ICAP<pos:position pos:line="108" pos:column="20"/></name><operator pos:line="108" pos:column="20">::<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="22">crlf<pos:position pos:line="108" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="28">2<pos:position pos:line="108" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="31"/></expr_stmt> <comment type="line" pos:line="108" pos:column="32">// terminate ICAP header</comment>

    <comment type="line" pos:line="110" pos:column="5">// fill icapRequest for logging</comment>
    <expr_stmt><expr><call><name pos:line="111" pos:column="5">Must<pos:position pos:line="111" pos:column="9"/></name><argument_list pos:line="111" pos:column="9">(<argument><expr><call><name><name pos:line="111" pos:column="10">icapRequest<pos:position pos:line="111" pos:column="21"/></name><operator pos:line="111" pos:column="21">-&gt;<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="23">parseCharBuf<pos:position pos:line="111" pos:column="35"/></name></name><argument_list pos:line="111" pos:column="35">(<argument><expr><call><name><name pos:line="111" pos:column="36">buf<pos:position pos:line="111" pos:column="39"/></name><operator pos:line="111" pos:column="39">.<pos:position pos:line="111" pos:column="40"/></operator><name pos:line="111" pos:column="40">content<pos:position pos:line="111" pos:column="47"/></name></name><argument_list pos:line="111" pos:column="47">()<pos:position pos:line="111" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="111" pos:column="51">buf<pos:position pos:line="111" pos:column="54"/></name><operator pos:line="111" pos:column="54">.<pos:position pos:line="111" pos:column="55"/></operator><name pos:line="111" pos:column="55">contentSize<pos:position pos:line="111" pos:column="66"/></name></name><argument_list pos:line="111" pos:column="66">()<pos:position pos:line="111" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="71"/></expr_stmt>

    <comment type="line" pos:line="113" pos:column="5">// start ICAP request body with encapsulated HTTP headers</comment>
    <expr_stmt><expr><call><name><name pos:line="114" pos:column="5">buf<pos:position pos:line="114" pos:column="8"/></name><operator pos:line="114" pos:column="8">.<pos:position pos:line="114" pos:column="9"/></operator><name pos:line="114" pos:column="9">append<pos:position pos:line="114" pos:column="15"/></name></name><argument_list pos:line="114" pos:column="15">(<argument><expr><call><name><name pos:line="114" pos:column="16">httpBuf<pos:position pos:line="114" pos:column="23"/></name><operator pos:line="114" pos:column="23">.<pos:position pos:line="114" pos:column="24"/></operator><name pos:line="114" pos:column="24">content<pos:position pos:line="114" pos:column="31"/></name></name><argument_list pos:line="114" pos:column="31">()<pos:position pos:line="114" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="114" pos:column="35">httpBuf<pos:position pos:line="114" pos:column="42"/></name><operator pos:line="114" pos:column="42">.<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="43">contentSize<pos:position pos:line="114" pos:column="54"/></name></name><argument_list pos:line="114" pos:column="54">()<pos:position pos:line="114" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="114" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="116" pos:column="5">httpBuf<pos:position pos:line="116" pos:column="12"/></name><operator pos:line="116" pos:column="12">.<pos:position pos:line="116" pos:column="13"/></operator><name pos:line="116" pos:column="13">clean<pos:position pos:line="116" pos:column="18"/></name></name><argument_list pos:line="116" pos:column="18">()<pos:position pos:line="116" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="21"/></expr_stmt>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

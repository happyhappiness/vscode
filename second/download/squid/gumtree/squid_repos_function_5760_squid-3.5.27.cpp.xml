<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5760_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">Auth<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">UserRequest<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">Pointer<pos:position pos:line="1" pos:column="34"/></name></name></type>
<name pos:line="2" pos:column="1">authTryGetUser<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">Auth<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">UserRequest<pos:position pos:line="2" pos:column="33"/></name><operator pos:line="2" pos:column="33">::<pos:position pos:line="2" pos:column="35"/></operator><name pos:line="2" pos:column="35">Pointer<pos:position pos:line="2" pos:column="42"/></name></name></type> <name pos:line="2" pos:column="43">auth_user_request<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">ConnStateData<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier></type> <name pos:line="2" pos:column="78">conn<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="84">HttpRequest<pos:position pos:line="2" pos:column="95"/></name> <modifier pos:line="2" pos:column="96">*<pos:position pos:line="2" pos:column="97"/></modifier></type> <name pos:line="2" pos:column="98">request<pos:position pos:line="2" pos:column="105"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="106"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Auth<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">UserRequest<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">::<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">Pointer<pos:position pos:line="4" pos:column="31"/></name></name></type> <name pos:line="4" pos:column="32">res<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">auth_user_request<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">!=<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">res<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">auth_user_request<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt></block></then>
    <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><name pos:line="8" pos:column="14">request<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">!=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">&amp;&amp;<pos:position pos:line="8" pos:column="40"/></operator> <name><name pos:line="8" pos:column="33">request<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">auth_user_request<pos:position pos:line="8" pos:column="59"/></name></name> <operator pos:line="8" pos:column="60">!=<pos:position pos:line="8" pos:column="62"/></operator> <name pos:line="8" pos:column="63">NULL<pos:position pos:line="8" pos:column="67"/></name></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">res<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name><name pos:line="9" pos:column="15">request<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">auth_user_request<pos:position pos:line="9" pos:column="41"/></name></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><name pos:line="10" pos:column="14">conn<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">!=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">res<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <call><name><name pos:line="11" pos:column="15">conn<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">getAuth<pos:position pos:line="11" pos:column="28"/></name></name><argument_list pos:line="11" pos:column="28">()<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt></block></then></if></elseif></if>

    <comment type="line" pos:line="13" pos:column="5">// attach the credential notes from helper to the transaction</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">request<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">!=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">&amp;&amp;<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="28">res<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">!=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">NULL<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&amp;&amp;<pos:position pos:line="14" pos:column="50"/></operator> <call><name><name pos:line="14" pos:column="43">res<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">user<pos:position pos:line="14" pos:column="52"/></name></name><argument_list pos:line="14" pos:column="52">()<pos:position pos:line="14" pos:column="54"/></argument_list></call> <operator pos:line="14" pos:column="55">!=<pos:position pos:line="14" pos:column="57"/></operator> <name pos:line="14" pos:column="58">NULL<pos:position pos:line="14" pos:column="62"/></name></expr>)<pos:position pos:line="14" pos:column="63"/></condition><then pos:line="14" pos:column="63"> <block pos:line="14" pos:column="64">{
        <comment type="line" pos:line="15" pos:column="9">// XXX: we have no access to the transaction / AccessLogEntry so cant SyncNotes().</comment>
        <comment type="line" pos:line="16" pos:column="9">// workaround by using anything already set in HttpRequest</comment>
        <comment type="line" pos:line="17" pos:column="9">// OR use new and rely on a later Sync copying these to AccessLogEntry</comment>

        <expr_stmt><expr><call><name pos:line="19" pos:column="9">UpdateRequestNotes<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">conn<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="34">*<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">request<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="44">res<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">user<pos:position pos:line="19" pos:column="53"/></name></name><argument_list pos:line="19" pos:column="53">()<pos:position pos:line="19" pos:column="55"/></argument_list></call><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">notes<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">res<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

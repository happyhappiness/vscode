<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3291_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">copyToShmSlice<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">StoreEntry<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">&amp;<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="38">e<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="41">Ipc<pos:position pos:line="2" pos:column="44"/></name><operator pos:line="2" pos:column="44">::<pos:position pos:line="2" pos:column="46"/></operator><name pos:line="2" pos:column="46">StoreMapAnchor<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">anchor<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ipc<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">StoreMap<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">Slice<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">&amp;<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="27">slice<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">=
        <expr><call><name><name pos:line="5" pos:column="9">map<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">writeableSlice<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name><name pos:line="5" pos:column="29">e<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">mem_obj<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">memCache<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">index<pos:position pos:line="5" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">lastWritingSlice<pos:position pos:line="5" pos:column="72"/></name></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Ipc<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">Mem<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">::<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">PageId<pos:position pos:line="7" pos:column="21"/></name></name></type> <name pos:line="7" pos:column="22">page<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name><name pos:line="7" pos:column="29">extras<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">items<pos:position pos:line="7" pos:column="42"/></name><index pos:line="7" pos:column="42">[<expr><name pos:line="7" pos:column="43">lastWritingSlice<pos:position pos:line="7" pos:column="59"/></name></expr>]<pos:position pos:line="7" pos:column="60"/></index></name><operator pos:line="7" pos:column="60">.<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="61">page<pos:position pos:line="7" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">lastWritingSlice<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&gt;=<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal> <operator pos:line="8" pos:column="34">&amp;&amp;<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="37">page<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">20<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">7<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"entry "<pos:position pos:line="9" pos:column="27"/></literal> <operator pos:line="9" pos:column="28">&lt;&lt;<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="31">e<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">&lt;&lt;<pos:position pos:line="9" pos:column="41"/></operator> <literal type="string" pos:line="9" pos:column="36">" slice "<pos:position pos:line="9" pos:column="45"/></literal> <operator pos:line="9" pos:column="46">&lt;&lt;<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="49">lastWritingSlice<pos:position pos:line="9" pos:column="65"/></name> <operator pos:line="9" pos:column="66">&lt;&lt;<pos:position pos:line="9" pos:column="74"/></operator> <literal type="string" pos:line="9" pos:column="69">" has "<pos:position pos:line="9" pos:column="76"/></literal> <operator pos:line="9" pos:column="77">&lt;&lt;<pos:position pos:line="9" pos:column="85"/></operator>
           <name pos:line="10" pos:column="12">page<pos:position pos:line="10" pos:column="16"/></name></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">int64_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">bufSize<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><call><name><name pos:line="12" pos:column="29">Ipc<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">::<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">Mem<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">::<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">PageSize<pos:position pos:line="12" pos:column="47"/></name></name><argument_list pos:line="12" pos:column="47">()<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">int64_t<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">sliceOffset<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><name><name pos:line="13" pos:column="33">e<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">mem_obj<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">memCache<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">offset<pos:position pos:line="13" pos:column="59"/></name></name> <operator pos:line="13" pos:column="60">%<pos:position pos:line="13" pos:column="61"/></operator> <name pos:line="13" pos:column="62">bufSize<pos:position pos:line="13" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">StoreIOBuffer<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">sharedSpace<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">bufSize<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">-<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">sliceOffset<pos:position pos:line="14" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="54">e<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">.<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">mem_obj<pos:position pos:line="14" pos:column="63"/></name><operator pos:line="14" pos:column="63">-&gt;<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="65">memCache<pos:position pos:line="14" pos:column="73"/></name><operator pos:line="14" pos:column="73">.<pos:position pos:line="14" pos:column="74"/></operator><name pos:line="14" pos:column="74">offset<pos:position pos:line="14" pos:column="80"/></name></name></expr></argument>,
                              <argument><expr><cast type="static" pos:line="15" pos:column="31">static_cast<argument_list type="generic" pos:line="15" pos:column="42">&lt;<argument><expr><name pos:line="15" pos:column="43">char<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">*<pos:position pos:line="15" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="52"/></argument_list><argument_list pos:line="15" pos:column="49">(<argument><expr><call><name pos:line="15" pos:column="50">PagePointer<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name pos:line="15" pos:column="62">page<pos:position pos:line="15" pos:column="66"/></name></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></cast> <operator pos:line="15" pos:column="69">+<pos:position pos:line="15" pos:column="70"/></operator> <name pos:line="15" pos:column="71">sliceOffset<pos:position pos:line="15" pos:column="82"/></name></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></decl>;<pos:position pos:line="15" pos:column="84"/></decl_stmt>

    <comment type="line" pos:line="17" pos:column="5">// check that we kept everything or purge incomplete/sparse cached entry</comment>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">ssize_t<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">copied<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><call><name><name pos:line="18" pos:column="28">e<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">mem_obj<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">data_hdr<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">.<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">copy<pos:position pos:line="18" pos:column="52"/></name></name><argument_list pos:line="18" pos:column="52">(<argument><expr><name pos:line="18" pos:column="53">sharedSpace<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="66"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">copied<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">&lt;=<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21"> <block pos:line="19" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">20<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">2<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"Failed to mem-cache "<pos:position pos:line="20" pos:column="45"/></literal> <operator pos:line="20" pos:column="46">&lt;&lt;<pos:position pos:line="20" pos:column="54"/></operator> <operator pos:line="20" pos:column="49">(<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">bufSize<pos:position pos:line="20" pos:column="57"/></name> <operator pos:line="20" pos:column="58">-<pos:position pos:line="20" pos:column="59"/></operator> <name pos:line="20" pos:column="60">sliceOffset<pos:position pos:line="20" pos:column="71"/></name><operator pos:line="20" pos:column="71">)<pos:position pos:line="20" pos:column="72"/></operator> <operator pos:line="20" pos:column="73">&lt;&lt;<pos:position pos:line="20" pos:column="81"/></operator>
               <literal type="string" pos:line="21" pos:column="16">" bytes of "<pos:position pos:line="21" pos:column="28"/></literal> <operator pos:line="21" pos:column="29">&lt;&lt;<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="32">e<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">&lt;&lt;<pos:position pos:line="21" pos:column="42"/></operator> <literal type="string" pos:line="21" pos:column="37">" from "<pos:position pos:line="21" pos:column="45"/></literal> <operator pos:line="21" pos:column="46">&lt;&lt;<pos:position pos:line="21" pos:column="54"/></operator> <name><name pos:line="21" pos:column="49">e<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">mem_obj<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">memCache<pos:position pos:line="21" pos:column="68"/></name><operator pos:line="21" pos:column="68">.<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="69">offset<pos:position pos:line="21" pos:column="75"/></name></name> <operator pos:line="21" pos:column="76">&lt;&lt;<pos:position pos:line="21" pos:column="84"/></operator>
               <literal type="string" pos:line="22" pos:column="16">" in "<pos:position pos:line="22" pos:column="22"/></literal> <operator pos:line="22" pos:column="23">&lt;&lt;<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="26">page<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
        <throw pos:line="23" pos:column="9">throw <expr><call><name pos:line="23" pos:column="15">TexcHere<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="string" pos:line="23" pos:column="24">"data_hdr.copy failure"<pos:position pos:line="23" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></throw>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">20<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">7<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"mem-cached "<pos:position pos:line="26" pos:column="32"/></literal> <operator pos:line="26" pos:column="33">&lt;&lt;<pos:position pos:line="26" pos:column="41"/></operator> <name pos:line="26" pos:column="36">copied<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">&lt;&lt;<pos:position pos:line="26" pos:column="51"/></operator> <literal type="string" pos:line="26" pos:column="46">" bytes of "<pos:position pos:line="26" pos:column="58"/></literal> <operator pos:line="26" pos:column="59">&lt;&lt;<pos:position pos:line="26" pos:column="67"/></operator> <name pos:line="26" pos:column="62">e<pos:position pos:line="26" pos:column="63"/></name> <operator pos:line="26" pos:column="64">&lt;&lt;<pos:position pos:line="26" pos:column="72"/></operator>
           <literal type="string" pos:line="27" pos:column="12">" from "<pos:position pos:line="27" pos:column="20"/></literal> <operator pos:line="27" pos:column="21">&lt;&lt;<pos:position pos:line="27" pos:column="29"/></operator> <name><name pos:line="27" pos:column="24">e<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">mem_obj<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">memCache<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">.<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">offset<pos:position pos:line="27" pos:column="50"/></name></name> <operator pos:line="27" pos:column="51">&lt;&lt;<pos:position pos:line="27" pos:column="59"/></operator> <literal type="string" pos:line="27" pos:column="54">" in "<pos:position pos:line="27" pos:column="60"/></literal> <operator pos:line="27" pos:column="61">&lt;&lt;<pos:position pos:line="27" pos:column="69"/></operator> <name pos:line="27" pos:column="64">page<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">slice<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">.<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">size<pos:position pos:line="29" pos:column="15"/></name></name> <operator pos:line="29" pos:column="16">+=<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">copied<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">e<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">.<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">mem_obj<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">memCache<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">offset<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">+=<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="35">copied<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">anchor<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">basics<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">swap_file_sz<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <name><name pos:line="31" pos:column="34">e<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">.<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">mem_obj<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">memCache<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">.<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">offset<pos:position pos:line="31" pos:column="60"/></name></name></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3983_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">noteCommConnected<pos:position pos:line="1" pos:column="50"/></name></name><parameter_list pos:line="1" pos:column="50">(<parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">CommConnectCbParams<pos:position pos:line="1" pos:column="76"/></name> <modifier pos:line="1" pos:column="77">&amp;<pos:position pos:line="1" pos:column="82"/></modifier></type><name pos:line="1" pos:column="78">io<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">connector<pos:position pos:line="3" pos:column="19"/></name> <operator pos:line="3" pos:column="20">!=<pos:position pos:line="3" pos:column="22"/></operator> <name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">connector<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">=<pos:position pos:line="4" pos:column="16"/></operator> <name pos:line="4" pos:column="17">NULL<pos:position pos:line="4" pos:column="21"/></name></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">io<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">flag<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">!=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">COMM_OK<pos:position pos:line="6" pos:column="27"/></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">dieOnConnectionFailure<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">()<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt></block></then></if> <comment type="line" pos:line="7" pos:column="35">// throws</comment>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">fd_table<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><name pos:line="9" pos:column="14">connection<pos:position pos:line="9" pos:column="24"/></name></expr>]<pos:position pos:line="9" pos:column="25"/></index></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><call><name pos:line="9" pos:column="26">noteUse<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">icapPconnPool<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">handleCommConnected<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

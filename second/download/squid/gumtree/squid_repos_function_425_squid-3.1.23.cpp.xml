<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_425_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">md5sum<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">s<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">unsigned<pos:position pos:line="3" pos:column="20"/></name> <name pos:line="3" pos:column="21">char<pos:position pos:line="3" pos:column="25"/></name></type> <name><name pos:line="3" pos:column="26">digest<pos:position pos:line="3" pos:column="32"/></name><index pos:line="3" pos:column="32">[<expr><literal type="number" pos:line="3" pos:column="33">16<pos:position pos:line="3" pos:column="35"/></literal></expr>]<pos:position pos:line="3" pos:column="36"/></index></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SquidMD5_CTX<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">ctx<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">idx<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">sum<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><literal type="number" pos:line="6" pos:column="21">33<pos:position pos:line="6" pos:column="23"/></literal></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">memset<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">digest<pos:position pos:line="8" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="21">16<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">SquidMD5Init<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><operator pos:line="10" pos:column="18">&amp;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="19">ctx<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">SquidMD5Update<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><operator pos:line="11" pos:column="20">&amp;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="21">ctx<pos:position pos:line="11" pos:column="24"/></name></expr></argument>,<argument><expr><operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><specifier pos:line="11" pos:column="26">const<pos:position pos:line="11" pos:column="31"/></specifier> <name pos:line="11" pos:column="32">unsigned<pos:position pos:line="11" pos:column="40"/></name> <name pos:line="11" pos:column="41">char<pos:position pos:line="11" pos:column="45"/></name> <operator pos:line="11" pos:column="46">*<pos:position pos:line="11" pos:column="47"/></operator><operator pos:line="11" pos:column="47">)<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">s<pos:position pos:line="11" pos:column="49"/></name></expr></argument>,<argument><expr><call><name pos:line="11" pos:column="50">strlen<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name pos:line="11" pos:column="57">s<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">SquidMD5Final<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">digest<pos:position pos:line="12" pos:column="25"/></name></expr></argument>,<argument><expr><operator pos:line="12" pos:column="26">&amp;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="27">ctx<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">idx<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">0<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></init> <condition><expr><name pos:line="14" pos:column="17">idx<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">&lt;<pos:position pos:line="14" pos:column="24"/></operator><literal type="number" pos:line="14" pos:column="21">16<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></condition> <incr><expr><name pos:line="14" pos:column="25">idx<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">++<pos:position pos:line="14" pos:column="30"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="31"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="9">sprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><name><name pos:line="15" pos:column="18">sum<pos:position pos:line="15" pos:column="21"/></name><index pos:line="15" pos:column="21">[<expr><name pos:line="15" pos:column="22">idx<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">2<pos:position pos:line="15" pos:column="27"/></literal></expr>]<pos:position pos:line="15" pos:column="28"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="29">"%02x"<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>,<argument><expr><name><name pos:line="15" pos:column="36">digest<pos:position pos:line="15" pos:column="42"/></name><index pos:line="15" pos:column="42">[<expr><name pos:line="15" pos:column="43">idx<pos:position pos:line="15" pos:column="46"/></name></expr>]<pos:position pos:line="15" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">sum<pos:position pos:line="17" pos:column="8"/></name><index pos:line="17" pos:column="8">[<expr><literal type="number" pos:line="17" pos:column="9">32<pos:position pos:line="17" pos:column="11"/></literal></expr>]<pos:position pos:line="17" pos:column="12"/></index></name><operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator><literal type="char" pos:line="17" pos:column="13">'\0'<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* Don't leave anything around in vm they could use. */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memset<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">digest<pos:position pos:line="20" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="23">sizeof <name pos:line="20" pos:column="30">digest<pos:position pos:line="20" pos:column="36"/></name></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>

    <return pos:line="22" pos:column="5">return <expr><name pos:line="22" pos:column="12">sum<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

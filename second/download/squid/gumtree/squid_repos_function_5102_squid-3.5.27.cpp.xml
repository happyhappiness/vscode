<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5102_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Parser<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">Tokenizer<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">skipOne<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">CharacterSet<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">chars<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">buf_<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">.<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">isEmpty<pos:position pos:line="4" pos:column="22"/></name></name><argument_list pos:line="4" pos:column="22">()<pos:position pos:line="4" pos:column="24"/></argument_list></call> <operator pos:line="4" pos:column="25">&amp;&amp;<pos:position pos:line="4" pos:column="35"/></operator> <name><name pos:line="4" pos:column="28">chars<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><name><name pos:line="4" pos:column="34">buf_<pos:position pos:line="4" pos:column="38"/></name><index pos:line="4" pos:column="38">[<expr><literal type="number" pos:line="4" pos:column="39">0<pos:position pos:line="4" pos:column="40"/></literal></expr>]<pos:position pos:line="4" pos:column="41"/></index></name></expr>]<pos:position pos:line="4" pos:column="42"/></index></name></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">success<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></return></block></then></if>
    <return pos:line="6" pos:column="5">return <expr><literal type="boolean" pos:line="6" pos:column="12">false<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

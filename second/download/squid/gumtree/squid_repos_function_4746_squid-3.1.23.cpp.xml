<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4746_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ident<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">ConnectDone<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">DnsLookupDetails<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">&amp;<pos:position pos:line="2" pos:column="56"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">comm_err_t<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">status<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">int<pos:position pos:line="2" pos:column="76"/></name></type> <name pos:line="2" pos:column="77">xerrno<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="85">void<pos:position pos:line="2" pos:column="89"/></name> <modifier pos:line="2" pos:column="90">*<pos:position pos:line="2" pos:column="91"/></modifier></type><name pos:line="2" pos:column="91">data<pos:position pos:line="2" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="96"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IdentStateData<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">IdentStateData<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator><operator pos:line="4" pos:column="46">)<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">data<pos:position pos:line="4" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">IdentClient<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">c<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">status<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">!=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">COMM_OK<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
        <comment type="block" pos:line="8" pos:column="9">/* Failed to connect */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">comm_close<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">fd<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * see if any of our clients still care
     */</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">c<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name><name pos:line="16" pos:column="14">state<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">clients<pos:position pos:line="16" pos:column="28"/></name></name></expr>;<pos:position pos:line="16" pos:column="29"/></init> <condition><expr><name pos:line="16" pos:column="30">c<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></condition> <incr><expr><name pos:line="16" pos:column="33">c<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">=<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="37">c<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">next<pos:position pos:line="16" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="45"/></control> <block pos:line="16" pos:column="46">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">cbdataReferenceValid<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name><name pos:line="17" pos:column="34">c<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">callback_data<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52">
            <block type="pseudo"><break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">c<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">==<pos:position pos:line="21" pos:column="13"/></operator> <name pos:line="21" pos:column="14">NULL<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition><then pos:line="21" pos:column="19"> <block pos:line="21" pos:column="20">{
        <comment type="block" pos:line="22" pos:column="9">/* no clients care */</comment>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">comm_close<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">fd<pos:position pos:line="23" pos:column="22"/></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">MemBuf<pos:position pos:line="27" pos:column="11"/></name></type> <name pos:line="27" pos:column="12">mb<pos:position pos:line="27" pos:column="14"/></name></decl>;<pos:position pos:line="27" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">mb<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">.<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">init<pos:position pos:line="28" pos:column="12"/></name></name><argument_list pos:line="28" pos:column="12">()<pos:position pos:line="28" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">mb<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">.<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">Printf<pos:position pos:line="29" pos:column="14"/></name></name><argument_list pos:line="29" pos:column="14">(<argument><expr><literal type="string" pos:line="29" pos:column="15">"%d, %d\r\n"<pos:position pos:line="29" pos:column="27"/></literal></expr></argument>,
              <argument><expr><call><name><name pos:line="30" pos:column="15">state<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">my_peer<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">.<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">GetPort<pos:position pos:line="30" pos:column="37"/></name></name><argument_list pos:line="30" pos:column="37">()<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr></argument>,
              <argument><expr><call><name><name pos:line="31" pos:column="15">state<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">me<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">GetPort<pos:position pos:line="31" pos:column="32"/></name></name><argument_list pos:line="31" pos:column="32">()<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">comm_write_mbuf<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">fd<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="25">&amp;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="26">mb<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">NULL<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">state<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">comm_read<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name pos:line="33" pos:column="15">fd<pos:position pos:line="33" pos:column="17"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="19">state<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">buf<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="31">BUFSIZ<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="39">Ident<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">::<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">ReadReply<pos:position pos:line="33" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="57">state<pos:position pos:line="33" pos:column="62"/></name></expr></argument>)<pos:position pos:line="33" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">commSetTimeout<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">fd<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="24">Ident<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">::<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">TheConfig<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">.<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">timeout<pos:position pos:line="34" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="50">Ident<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">::<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">Timeout<pos:position pos:line="34" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="66">state<pos:position pos:line="34" pos:column="71"/></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4039_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">checkConsuming<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">()<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// quit if we already stopped or are still using the pipe</comment>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">virgin<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">body_pipe<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">||<pos:position pos:line="4" pos:column="29"/></operator> <operator pos:line="4" pos:column="30">!<pos:position pos:line="4" pos:column="31"/></operator><call><name><name pos:line="4" pos:column="31">state<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">.<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">doneConsumingVirgin<pos:position pos:line="4" pos:column="56"/></name></name><argument_list pos:line="4" pos:column="56">()<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="59"/></condition><then pos:line="4" pos:column="59">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">93<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">7<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">HERE<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="string" pos:line="7" pos:column="27">"will stop consuming"<pos:position pos:line="7" pos:column="48"/></literal> <operator pos:line="7" pos:column="49">&lt;&lt;<pos:position pos:line="7" pos:column="57"/></operator> <call><name pos:line="7" pos:column="52">status<pos:position pos:line="7" pos:column="58"/></name><argument_list pos:line="7" pos:column="58">()<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">stopConsumingFrom<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name><name pos:line="8" pos:column="23">virgin<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">body_pipe<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

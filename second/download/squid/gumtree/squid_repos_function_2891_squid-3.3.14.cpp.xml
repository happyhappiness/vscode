<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2891_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">headersEnd<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">mime<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">size_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">l<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">e<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">state<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">1<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">PROF_start<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">headersEnd<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">e<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&lt;<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="16">l<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&amp;&amp;<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="21">state<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">&lt;<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="29">3<pos:position pos:line="9" pos:column="30"/></literal></expr>)<pos:position pos:line="9" pos:column="31"/></condition> <block pos:line="9" pos:column="32">{
        <switch pos:line="10" pos:column="9">switch <condition pos:line="10" pos:column="16">(<expr><name pos:line="10" pos:column="17">state<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition> <block pos:line="10" pos:column="24">{

        <case pos:line="12" pos:column="9">case <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>:<pos:position pos:line="12" pos:column="16"/></case>

            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><literal type="char" pos:line="14" pos:column="17">'\n'<pos:position pos:line="14" pos:column="21"/></literal> <operator pos:line="14" pos:column="22">==<pos:position pos:line="14" pos:column="24"/></operator> <name><name pos:line="14" pos:column="25">mime<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><name pos:line="14" pos:column="30">e<pos:position pos:line="14" pos:column="31"/></name></expr>]<pos:position pos:line="14" pos:column="32"/></index></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">state<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="25">1<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt></block></then></if>

            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>

        <case pos:line="19" pos:column="9">case <expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr>:<pos:position pos:line="19" pos:column="16"/></case>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><literal type="char" pos:line="20" pos:column="17">'\r'<pos:position pos:line="20" pos:column="21"/></literal> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="25">mime<pos:position pos:line="20" pos:column="29"/></name><index pos:line="20" pos:column="29">[<expr><name pos:line="20" pos:column="30">e<pos:position pos:line="20" pos:column="31"/></name></expr>]<pos:position pos:line="20" pos:column="32"/></index></name></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">state<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">2<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt></block></then>
            <elseif pos:line="22" pos:column="13">else <if pos:line="22" pos:column="18">if <condition pos:line="22" pos:column="21">(<expr><literal type="char" pos:line="22" pos:column="22">'\n'<pos:position pos:line="22" pos:column="26"/></literal> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <name><name pos:line="22" pos:column="30">mime<pos:position pos:line="22" pos:column="34"/></name><index pos:line="22" pos:column="34">[<expr><name pos:line="22" pos:column="35">e<pos:position pos:line="22" pos:column="36"/></name></expr>]<pos:position pos:line="22" pos:column="37"/></index></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">state<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">3<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt></block></then></if></elseif>
            <else pos:line="24" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="17">state<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">=<pos:position pos:line="25" pos:column="24"/></operator> <literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt></block></else></if>

            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>

        <case pos:line="29" pos:column="9">case <expr><literal type="number" pos:line="29" pos:column="14">2<pos:position pos:line="29" pos:column="15"/></literal></expr>:<pos:position pos:line="29" pos:column="16"/></case>
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><literal type="char" pos:line="30" pos:column="17">'\n'<pos:position pos:line="30" pos:column="21"/></literal> <operator pos:line="30" pos:column="22">==<pos:position pos:line="30" pos:column="24"/></operator> <name><name pos:line="30" pos:column="25">mime<pos:position pos:line="30" pos:column="29"/></name><index pos:line="30" pos:column="29">[<expr><name pos:line="30" pos:column="30">e<pos:position pos:line="30" pos:column="31"/></name></expr>]<pos:position pos:line="30" pos:column="32"/></index></name></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="17">state<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">3<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt></block></then>
            <else pos:line="32" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">state<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt></block></else></if>

            <break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break>

        <default pos:line="37" pos:column="9">default:<pos:position pos:line="37" pos:column="17"/></default>
            <break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break>
        }<pos:position pos:line="39" pos:column="10"/></block></switch>

        <expr_stmt><expr><operator pos:line="41" pos:column="9">++<pos:position pos:line="41" pos:column="11"/></operator><name pos:line="41" pos:column="11">e<pos:position pos:line="41" pos:column="12"/></name></expr>;<pos:position pos:line="41" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">PROF_stop<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">headersEnd<pos:position pos:line="43" pos:column="25"/></name></expr></argument>)<pos:position pos:line="43" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><literal type="number" pos:line="45" pos:column="9">3<pos:position pos:line="45" pos:column="10"/></literal> <operator pos:line="45" pos:column="11">==<pos:position pos:line="45" pos:column="13"/></operator> <name pos:line="45" pos:column="14">state<pos:position pos:line="45" pos:column="19"/></name></expr>)<pos:position pos:line="45" pos:column="20"/></condition><then pos:line="45" pos:column="20">
        <block type="pseudo"><return pos:line="46" pos:column="9">return <expr><name pos:line="46" pos:column="16">e<pos:position pos:line="46" pos:column="17"/></name></expr>;<pos:position pos:line="46" pos:column="18"/></return></block></then></if>

    <return pos:line="48" pos:column="5">return <expr><literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

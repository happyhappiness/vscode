<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3954_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeekingPeerConnector<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">initialize<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name><name pos:line="2" pos:column="39">Security<pos:position pos:line="2" pos:column="47"/></name><operator pos:line="2" pos:column="47">::<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">SessionPointer<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">&amp;<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="65">serverSession<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">Security<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">PeerConnector<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">::<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">initialize<pos:position pos:line="4" pos:column="45"/></name></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">serverSession<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="61"/></condition><then pos:line="4" pos:column="61">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<decl><type><name pos:line="7" pos:column="9">ConnStateData<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">csd<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><call><name><name pos:line="7" pos:column="30">request<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">clientConnectionManager<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">.<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="63">valid<pos:position pos:line="7" pos:column="68"/></name></name><argument_list pos:line="7" pos:column="68">()<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></init></decl>)<pos:position pos:line="7" pos:column="71"/></condition><then pos:line="7" pos:column="71"> <block pos:line="7" pos:column="72">{

        <comment type="line" pos:line="9" pos:column="9">// client connection is required in the case we need to splice</comment>
        <comment type="line" pos:line="10" pos:column="9">// or terminate client and server connections</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">clientConn<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">SBuf<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">hostName<pos:position pos:line="12" pos:column="23"/></name> <init pos:line="12" pos:column="24">= <expr><name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>

        <comment type="line" pos:line="14" pos:column="9">//Enable Status_request TLS extension, required to bump some clients</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">SSL_set_tlsext_status_type<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><call><name><name pos:line="15" pos:column="36">serverSession<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">get<pos:position pos:line="15" pos:column="53"/></name></name><argument_list pos:line="15" pos:column="53">()<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">TLSEXT_STATUSTYPE_ocsp<pos:position pos:line="15" pos:column="79"/></name></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="81"/></expr_stmt>

        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name><name pos:line="17" pos:column="15">Security<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">::<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">TlsDetails<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">::<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">Pointer<pos:position pos:line="17" pos:column="44"/></name></name></type> <name pos:line="17" pos:column="45">details<pos:position pos:line="17" pos:column="52"/></name> <init pos:line="17" pos:column="53">= <expr><name><name pos:line="17" pos:column="55">csd<pos:position pos:line="17" pos:column="58"/></name><operator pos:line="17" pos:column="58">-&gt;<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="60">tlsParser<pos:position pos:line="17" pos:column="69"/></name><operator pos:line="17" pos:column="69">.<pos:position pos:line="17" pos:column="70"/></operator><name pos:line="17" pos:column="70">details<pos:position pos:line="17" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="78"/></decl_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">details<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&amp;&amp;<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="24">!<pos:position pos:line="18" pos:column="25"/></operator><call><name><name pos:line="18" pos:column="25">details<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">serverName<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">isEmpty<pos:position pos:line="18" pos:column="52"/></name></name><argument_list pos:line="18" pos:column="52">()<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="13">hostName<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <operator pos:line="19" pos:column="24">new<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">SBuf<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name><name pos:line="19" pos:column="33">details<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">serverName<pos:position pos:line="19" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt></block></then></if>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">hostName<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
            <comment type="line" pos:line="22" pos:column="13">// While we are peeking at the certificate, we may not know the server</comment>
            <comment type="line" pos:line="23" pos:column="13">// name that the client will request (after interception or CONNECT)</comment>
            <comment type="line" pos:line="24" pos:column="13">// unless it was the CONNECT request with a user-typed address.</comment>
            <decl_stmt><decl><type><specifier pos:line="25" pos:column="13">const<pos:position pos:line="25" pos:column="18"/></specifier> <name pos:line="25" pos:column="19">bool<pos:position pos:line="25" pos:column="23"/></name></type> <name pos:line="25" pos:column="24">isConnectRequest<pos:position pos:line="25" pos:column="40"/></name> <init pos:line="25" pos:column="41">= <expr><operator pos:line="25" pos:column="43">!<pos:position pos:line="25" pos:column="44"/></operator><call><name><name pos:line="25" pos:column="44">csd<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">port<pos:position pos:line="25" pos:column="53"/></name><operator pos:line="25" pos:column="53">-&gt;<pos:position pos:line="25" pos:column="58"/></operator><name pos:line="25" pos:column="55">flags<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">.<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="61">isIntercepted<pos:position pos:line="25" pos:column="74"/></name></name><argument_list pos:line="25" pos:column="74">()<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="77"/></decl_stmt>
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><name><name pos:line="26" pos:column="18">request<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">flags<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">sslPeek<pos:position pos:line="26" pos:column="40"/></name></name> <operator pos:line="26" pos:column="41">||<pos:position pos:line="26" pos:column="43"/></operator> <name pos:line="26" pos:column="44">isConnectRequest<pos:position pos:line="26" pos:column="60"/></name></expr>)<pos:position pos:line="26" pos:column="61"/></condition><then pos:line="26" pos:column="61">
                <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="17">hostName<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <operator pos:line="27" pos:column="28">new<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">SBuf<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><call><name><name pos:line="27" pos:column="37">request<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">url<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">.<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">host<pos:position pos:line="27" pos:column="54"/></name></name><argument_list pos:line="27" pos:column="54">()<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">hostName<pos:position pos:line="30" pos:column="21"/></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">SSL_set_ex_data<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><call><name><name pos:line="31" pos:column="29">serverSession<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">.<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">get<pos:position pos:line="31" pos:column="46"/></name></name><argument_list pos:line="31" pos:column="46">()<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">ssl_ex_index_server<pos:position pos:line="31" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="71">(<pos:position pos:line="31" pos:column="72"/></operator><name pos:line="31" pos:column="72">void<pos:position pos:line="31" pos:column="76"/></name><operator pos:line="31" pos:column="76">*<pos:position pos:line="31" pos:column="77"/></operator><operator pos:line="31" pos:column="77">)<pos:position pos:line="31" pos:column="78"/></operator><name pos:line="31" pos:column="78">hostName<pos:position pos:line="31" pos:column="86"/></name></expr></argument>)<pos:position pos:line="31" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="88"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">Must<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><operator pos:line="33" pos:column="14">!<pos:position pos:line="33" pos:column="15"/></operator><call><name><name pos:line="33" pos:column="15">csd<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">serverBump<pos:position pos:line="33" pos:column="30"/></name></name><argument_list pos:line="33" pos:column="30">()<pos:position pos:line="33" pos:column="32"/></argument_list></call> <operator pos:line="33" pos:column="33">||<pos:position pos:line="33" pos:column="35"/></operator> <call><name><name pos:line="33" pos:column="36">csd<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">serverBump<pos:position pos:line="33" pos:column="51"/></name></name><argument_list pos:line="33" pos:column="51">()<pos:position pos:line="33" pos:column="53"/></argument_list></call><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">step<pos:position pos:line="33" pos:column="59"/></name> <operator pos:line="33" pos:column="60">&lt;=<pos:position pos:line="33" pos:column="65"/></operator> <name><name pos:line="33" pos:column="63">Ssl<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">::<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="68">bumpStep2<pos:position pos:line="33" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="79"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">csd<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">sslBumpMode<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">==<pos:position pos:line="34" pos:column="32"/></operator> <name><name pos:line="34" pos:column="33">Ssl<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">::<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">bumpPeek<pos:position pos:line="34" pos:column="46"/></name></name> <operator pos:line="34" pos:column="47">||<pos:position pos:line="34" pos:column="49"/></operator> <name><name pos:line="34" pos:column="50">csd<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">-&gt;<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="55">sslBumpMode<pos:position pos:line="34" pos:column="66"/></name></name> <operator pos:line="34" pos:column="67">==<pos:position pos:line="34" pos:column="69"/></operator> <name><name pos:line="34" pos:column="70">Ssl<pos:position pos:line="34" pos:column="73"/></name><operator pos:line="34" pos:column="73">::<pos:position pos:line="34" pos:column="75"/></operator><name pos:line="34" pos:column="75">bumpStare<pos:position pos:line="34" pos:column="84"/></name></name></expr>)<pos:position pos:line="34" pos:column="85"/></condition><then pos:line="34" pos:column="85"> <block pos:line="34" pos:column="86">{
            <decl_stmt><decl><type><name pos:line="35" pos:column="13">auto<pos:position pos:line="35" pos:column="17"/></name></type> <name pos:line="35" pos:column="18">clientSession<pos:position pos:line="35" pos:column="31"/></name> <init pos:line="35" pos:column="32">= <expr><name><name pos:line="35" pos:column="34">fd_table<pos:position pos:line="35" pos:column="42"/></name><index pos:line="35" pos:column="42">[<expr><name><name pos:line="35" pos:column="43">clientConn<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">-&gt;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="55">fd<pos:position pos:line="35" pos:column="57"/></name></name></expr>]<pos:position pos:line="35" pos:column="58"/></index></name><operator pos:line="35" pos:column="58">.<pos:position pos:line="35" pos:column="59"/></operator><call><name><name pos:line="35" pos:column="59">ssl<pos:position pos:line="35" pos:column="62"/></name><operator pos:line="35" pos:column="62">.<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">get<pos:position pos:line="35" pos:column="66"/></name></name><argument_list pos:line="35" pos:column="66">()<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="69"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">Must<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">clientSession<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">BIO<pos:position pos:line="37" pos:column="16"/></name> <modifier pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></modifier></type><name pos:line="37" pos:column="18">bc<pos:position pos:line="37" pos:column="20"/></name> <init pos:line="37" pos:column="21">= <expr><call><name pos:line="37" pos:column="23">SSL_get_rbio<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">clientSession<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="51"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="38" pos:column="13">Ssl<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">::<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">ClientBio<pos:position pos:line="38" pos:column="27"/></name></name> <modifier pos:line="38" pos:column="28">*<pos:position pos:line="38" pos:column="29"/></modifier></type><name pos:line="38" pos:column="29">cltBio<pos:position pos:line="38" pos:column="35"/></name> <init pos:line="38" pos:column="36">= <expr><cast type="static" pos:line="38" pos:column="38">static_cast<argument_list type="generic" pos:line="38" pos:column="49">&lt;<argument><expr><name><name pos:line="38" pos:column="50">Ssl<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">::<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="55">ClientBio<pos:position pos:line="38" pos:column="64"/></name></name> <operator pos:line="38" pos:column="65">*<pos:position pos:line="38" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="38" pos:column="70"/></argument_list><argument_list pos:line="38" pos:column="67">(<argument><expr><call><name pos:line="38" pos:column="68">BIO_get_data<pos:position pos:line="38" pos:column="80"/></name><argument_list pos:line="38" pos:column="80">(<argument><expr><name pos:line="38" pos:column="81">bc<pos:position pos:line="38" pos:column="83"/></name></expr></argument>)<pos:position pos:line="38" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="85"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="38" pos:column="86"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">Must<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">cltBio<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">details<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">&amp;&amp;<pos:position pos:line="40" pos:column="35"/></operator> <name><name pos:line="40" pos:column="28">details<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">-&gt;<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="37">tlsVersion<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">.<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">protocol<pos:position pos:line="40" pos:column="56"/></name></name> <operator pos:line="40" pos:column="57">!=<pos:position pos:line="40" pos:column="59"/></operator> <name><name pos:line="40" pos:column="60">AnyP<pos:position pos:line="40" pos:column="64"/></name><operator pos:line="40" pos:column="64">::<pos:position pos:line="40" pos:column="66"/></operator><name pos:line="40" pos:column="66">PROTO_NONE<pos:position pos:line="40" pos:column="76"/></name></name></expr>)<pos:position pos:line="40" pos:column="77"/></condition><then pos:line="40" pos:column="77">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="17">applyTlsDetailsToSSL<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><call><name><name pos:line="41" pos:column="38">serverSession<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">.<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">get<pos:position pos:line="41" pos:column="55"/></name></name><argument_list pos:line="41" pos:column="55">()<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">details<pos:position pos:line="41" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="68">csd<pos:position pos:line="41" pos:column="71"/></name><operator pos:line="41" pos:column="71">-&gt;<pos:position pos:line="41" pos:column="76"/></operator><name pos:line="41" pos:column="73">sslBumpMode<pos:position pos:line="41" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="86"/></expr_stmt></block></then></if>

            <decl_stmt><decl><type><name pos:line="43" pos:column="13">BIO<pos:position pos:line="43" pos:column="16"/></name> <modifier pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></modifier></type><name pos:line="43" pos:column="18">b<pos:position pos:line="43" pos:column="19"/></name> <init pos:line="43" pos:column="20">= <expr><call><name pos:line="43" pos:column="22">SSL_get_rbio<pos:position pos:line="43" pos:column="34"/></name><argument_list pos:line="43" pos:column="34">(<argument><expr><call><name><name pos:line="43" pos:column="35">serverSession<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">.<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">get<pos:position pos:line="43" pos:column="52"/></name></name><argument_list pos:line="43" pos:column="52">()<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="56"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="44" pos:column="13">Ssl<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">::<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">ServerBio<pos:position pos:line="44" pos:column="27"/></name></name> <modifier pos:line="44" pos:column="28">*<pos:position pos:line="44" pos:column="29"/></modifier></type><name pos:line="44" pos:column="29">srvBio<pos:position pos:line="44" pos:column="35"/></name> <init pos:line="44" pos:column="36">= <expr><cast type="static" pos:line="44" pos:column="38">static_cast<argument_list type="generic" pos:line="44" pos:column="49">&lt;<argument><expr><name><name pos:line="44" pos:column="50">Ssl<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">::<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">ServerBio<pos:position pos:line="44" pos:column="64"/></name></name> <operator pos:line="44" pos:column="65">*<pos:position pos:line="44" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="44" pos:column="70"/></argument_list><argument_list pos:line="44" pos:column="67">(<argument><expr><call><name pos:line="44" pos:column="68">BIO_get_data<pos:position pos:line="44" pos:column="80"/></name><argument_list pos:line="44" pos:column="80">(<argument><expr><name pos:line="44" pos:column="81">b<pos:position pos:line="44" pos:column="82"/></name></expr></argument>)<pos:position pos:line="44" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="84"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="44" pos:column="85"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">Must<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">srvBio<pos:position pos:line="45" pos:column="24"/></name></expr></argument>)<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
            <comment type="line" pos:line="46" pos:column="13">// inherit client features such as TLS version and SNI</comment>
            <expr_stmt><expr><call><name><name pos:line="47" pos:column="13">srvBio<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">setClientFeatures<pos:position pos:line="47" pos:column="38"/></name></name><argument_list pos:line="47" pos:column="38">(<argument><expr><name pos:line="47" pos:column="39">details<pos:position pos:line="47" pos:column="46"/></name></expr></argument>, <argument><expr><call><name><name pos:line="47" pos:column="48">cltBio<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">-&gt;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="56">rBufData<pos:position pos:line="47" pos:column="64"/></name></name><argument_list pos:line="47" pos:column="64">()<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">srvBio<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">recordInput<pos:position pos:line="48" pos:column="32"/></name></name><argument_list pos:line="48" pos:column="32">(<argument><expr><literal type="boolean" pos:line="48" pos:column="33">true<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">srvBio<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">mode<pos:position pos:line="49" pos:column="25"/></name></name><argument_list pos:line="49" pos:column="25">(<argument><expr><name><name pos:line="49" pos:column="26">csd<pos:position pos:line="49" pos:column="29"/></name><operator pos:line="49" pos:column="29">-&gt;<pos:position pos:line="49" pos:column="34"/></operator><name pos:line="49" pos:column="31">sslBumpMode<pos:position pos:line="49" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then> <else pos:line="50" pos:column="11">else <block pos:line="50" pos:column="16">{
            <comment type="line" pos:line="51" pos:column="13">// Set client SSL options</comment>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">SSL_set_options<pos:position pos:line="52" pos:column="28"/></name><argument_list pos:line="52" pos:column="28">(<argument><expr><call><name><name pos:line="52" pos:column="29">serverSession<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">.<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="43">get<pos:position pos:line="52" pos:column="46"/></name></name><argument_list pos:line="52" pos:column="46">()<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name><operator pos:line="52" pos:column="50">::<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="52">Security<pos:position pos:line="52" pos:column="60"/></name><operator pos:line="52" pos:column="60">::<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="62">ProxyOutgoingConfig<pos:position pos:line="52" pos:column="81"/></name><operator pos:line="52" pos:column="81">.<pos:position pos:line="52" pos:column="82"/></operator><name pos:line="52" pos:column="82">parsedOptions<pos:position pos:line="52" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="97"/></expr_stmt>

            <comment type="line" pos:line="54" pos:column="13">// Use SNI TLS extension only when we connect directly</comment>
            <comment type="line" pos:line="55" pos:column="13">// to the origin server and we know the server host name.</comment>
            <decl_stmt><decl><type><specifier pos:line="56" pos:column="13">const<pos:position pos:line="56" pos:column="18"/></specifier> <name pos:line="56" pos:column="19">char<pos:position pos:line="56" pos:column="23"/></name> <modifier pos:line="56" pos:column="24">*<pos:position pos:line="56" pos:column="25"/></modifier></type><name pos:line="56" pos:column="25">sniServer<pos:position pos:line="56" pos:column="34"/></name> <init pos:line="56" pos:column="35">= <expr><name pos:line="56" pos:column="37">NULL<pos:position pos:line="56" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="56" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="57" pos:column="13">const<pos:position pos:line="57" pos:column="18"/></specifier> <name pos:line="57" pos:column="19">bool<pos:position pos:line="57" pos:column="23"/></name></type> <name pos:line="57" pos:column="24">redirected<pos:position pos:line="57" pos:column="34"/></name> <init pos:line="57" pos:column="35">= <expr><name><name pos:line="57" pos:column="37">request<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">-&gt;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="46">flags<pos:position pos:line="57" pos:column="51"/></name><operator pos:line="57" pos:column="51">.<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="52">redirected<pos:position pos:line="57" pos:column="62"/></name></name> <operator pos:line="57" pos:column="63">&amp;&amp;<pos:position pos:line="57" pos:column="73"/></operator> <name><operator pos:line="57" pos:column="66">::<pos:position pos:line="57" pos:column="68"/></operator><name pos:line="57" pos:column="68">Config<pos:position pos:line="57" pos:column="74"/></name><operator pos:line="57" pos:column="74">.<pos:position pos:line="57" pos:column="75"/></operator><name pos:line="57" pos:column="75">onoff<pos:position pos:line="57" pos:column="80"/></name><operator pos:line="57" pos:column="80">.<pos:position pos:line="57" pos:column="81"/></operator><name pos:line="57" pos:column="81">redir_rewrites_host<pos:position pos:line="57" pos:column="100"/></name></name></expr></init></decl>;<pos:position pos:line="57" pos:column="101"/></decl_stmt>
            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">hostName<pos:position pos:line="58" pos:column="26"/></name> <operator pos:line="58" pos:column="27">||<pos:position pos:line="58" pos:column="29"/></operator> <name pos:line="58" pos:column="30">redirected<pos:position pos:line="58" pos:column="40"/></name></expr>)<pos:position pos:line="58" pos:column="41"/></condition><then pos:line="58" pos:column="41">
                <block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="17">sniServer<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="59" pos:column="29">!<pos:position pos:line="59" pos:column="30"/></operator><call><name><name pos:line="59" pos:column="30">request<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">-&gt;<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="39">url<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">.<pos:position pos:line="59" pos:column="43"/></operator><name pos:line="59" pos:column="43">hostIsNumeric<pos:position pos:line="59" pos:column="56"/></name></name><argument_list pos:line="59" pos:column="56">()<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr> ?<pos:position pos:line="59" pos:column="60"/></condition><then pos:line="59" pos:column="60"> <expr><call><name><name pos:line="59" pos:column="61">request<pos:position pos:line="59" pos:column="68"/></name><operator pos:line="59" pos:column="68">-&gt;<pos:position pos:line="59" pos:column="73"/></operator><name pos:line="59" pos:column="70">url<pos:position pos:line="59" pos:column="73"/></name><operator pos:line="59" pos:column="73">.<pos:position pos:line="59" pos:column="74"/></operator><name pos:line="59" pos:column="74">host<pos:position pos:line="59" pos:column="78"/></name></name><argument_list pos:line="59" pos:column="78">()<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr> <pos:position pos:line="59" pos:column="81"/></then><else pos:line="59" pos:column="81">: <expr><name pos:line="59" pos:column="83">NULL<pos:position pos:line="59" pos:column="87"/></name></expr></else></ternary></expr>;<pos:position pos:line="59" pos:column="88"/></expr_stmt></block></then>
            <else pos:line="60" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="17">sniServer<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <call><name><name pos:line="61" pos:column="29">hostName<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">-&gt;<pos:position pos:line="61" pos:column="42"/></operator><name pos:line="61" pos:column="39">c_str<pos:position pos:line="61" pos:column="44"/></name></name><argument_list pos:line="61" pos:column="44">()<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt></block></else></if>

            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><name pos:line="63" pos:column="17">sniServer<pos:position pos:line="63" pos:column="26"/></name></expr>)<pos:position pos:line="63" pos:column="27"/></condition><then pos:line="63" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="64" pos:column="17">Ssl<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">::<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="22">setClientSNI<pos:position pos:line="64" pos:column="34"/></name></name><argument_list pos:line="64" pos:column="34">(<argument><expr><call><name><name pos:line="64" pos:column="35">serverSession<pos:position pos:line="64" pos:column="48"/></name><operator pos:line="64" pos:column="48">.<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="49">get<pos:position pos:line="64" pos:column="52"/></name></name><argument_list pos:line="64" pos:column="52">()<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="56">sniServer<pos:position pos:line="64" pos:column="65"/></name></expr></argument>)<pos:position pos:line="64" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt></block></then></if>
        }<pos:position pos:line="65" pos:column="10"/></block></else></if>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<decl><type><name><name pos:line="67" pos:column="13">Ssl<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">::<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">ServerBump<pos:position pos:line="67" pos:column="28"/></name></name> <modifier pos:line="67" pos:column="29">*<pos:position pos:line="67" pos:column="30"/></modifier></type><name pos:line="67" pos:column="30">serverBump<pos:position pos:line="67" pos:column="40"/></name> <init pos:line="67" pos:column="41">= <expr><call><name><name pos:line="67" pos:column="43">csd<pos:position pos:line="67" pos:column="46"/></name><operator pos:line="67" pos:column="46">-&gt;<pos:position pos:line="67" pos:column="51"/></operator><name pos:line="67" pos:column="48">serverBump<pos:position pos:line="67" pos:column="58"/></name></name><argument_list pos:line="67" pos:column="58">()<pos:position pos:line="67" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="67" pos:column="61"/></condition><then pos:line="67" pos:column="61"> <block pos:line="67" pos:column="62">{
            <expr_stmt><expr><call><name><name pos:line="68" pos:column="13">serverBump<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">-&gt;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="25">attachServerSession<pos:position pos:line="68" pos:column="44"/></name></name><argument_list pos:line="68" pos:column="44">(<argument><expr><name pos:line="68" pos:column="45">serverSession<pos:position pos:line="68" pos:column="58"/></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="60"/></expr_stmt>
            <comment type="line" pos:line="69" pos:column="13">// store peeked cert to check SQUID_X509_V_ERR_CERT_CHANGE</comment>
            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<decl><type><name pos:line="70" pos:column="17">X509<pos:position pos:line="70" pos:column="21"/></name> <modifier pos:line="70" pos:column="22">*<pos:position pos:line="70" pos:column="23"/></modifier></type><name pos:line="70" pos:column="23">peeked_cert<pos:position pos:line="70" pos:column="34"/></name> <init pos:line="70" pos:column="35">= <expr><call><name><name pos:line="70" pos:column="37">serverBump<pos:position pos:line="70" pos:column="47"/></name><operator pos:line="70" pos:column="47">-&gt;<pos:position pos:line="70" pos:column="52"/></operator><name pos:line="70" pos:column="49">serverCert<pos:position pos:line="70" pos:column="59"/></name><operator pos:line="70" pos:column="59">.<pos:position pos:line="70" pos:column="60"/></operator><name pos:line="70" pos:column="60">get<pos:position pos:line="70" pos:column="63"/></name></name><argument_list pos:line="70" pos:column="63">()<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr></init></decl>)<pos:position pos:line="70" pos:column="66"/></condition><then pos:line="70" pos:column="66"> <block pos:line="70" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">X509_up_ref<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">peeked_cert<pos:position pos:line="71" pos:column="40"/></name></expr></argument>)<pos:position pos:line="71" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">SSL_set_ex_data<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><call><name><name pos:line="72" pos:column="33">serverSession<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">.<pos:position pos:line="72" pos:column="47"/></operator><name pos:line="72" pos:column="47">get<pos:position pos:line="72" pos:column="50"/></name></name><argument_list pos:line="72" pos:column="50">()<pos:position pos:line="72" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="54">ssl_ex_index_ssl_peeked_cert<pos:position pos:line="72" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="84">peeked_cert<pos:position pos:line="72" pos:column="95"/></name></expr></argument>)<pos:position pos:line="72" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="97"/></expr_stmt>
            }<pos:position pos:line="73" pos:column="14"/></block></then></if>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <return pos:line="77" pos:column="5">return <expr><literal type="boolean" pos:line="77" pos:column="12">true<pos:position pos:line="77" pos:column="16"/></literal></expr>;<pos:position pos:line="77" pos:column="17"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

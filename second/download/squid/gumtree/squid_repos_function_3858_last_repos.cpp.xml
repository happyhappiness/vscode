<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3858_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">X509<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">findCertIssuerFast<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">Ssl<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">CertsIndexedList<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">list<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">X509<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">cert<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buffer<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">2048<pos:position pos:line="4" pos:column="28"/></literal></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<decl><type><name pos:line="6" pos:column="9">X509_NAME<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">issuerName<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><call><name pos:line="6" pos:column="33">X509_get_issuer_name<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name pos:line="6" pos:column="54">cert<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr></init></decl>)<pos:position pos:line="6" pos:column="60"/></condition><then pos:line="6" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">X509_NAME_oneline<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">issuerName<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">buffer<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="47">sizeof<argument_list pos:line="7" pos:column="53">(<argument><expr><name pos:line="7" pos:column="54">buffer<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="63"/></expr_stmt></block></then>
    <else pos:line="8" pos:column="5">else
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></else></if>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <specifier pos:line="11" pos:column="11">auto<pos:position pos:line="11" pos:column="15"/></specifier></type> <name pos:line="11" pos:column="16">ret<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><call><name><name pos:line="11" pos:column="22">list<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">.<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">equal_range<pos:position pos:line="11" pos:column="38"/></name></name><argument_list pos:line="11" pos:column="38">(<argument><expr><call><name pos:line="11" pos:column="39">SBuf<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><name pos:line="11" pos:column="44">buffer<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><decl><type><name><name pos:line="12" pos:column="10">Ssl<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">::<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">CertsIndexedList<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">::<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">iterator<pos:position pos:line="12" pos:column="41"/></name></name></type> <name pos:line="12" pos:column="42">it<pos:position pos:line="12" pos:column="44"/></name> <init pos:line="12" pos:column="45">= <expr><name><name pos:line="12" pos:column="47">ret<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">first<pos:position pos:line="12" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="57"/></init> <condition><expr><name pos:line="12" pos:column="58">it<pos:position pos:line="12" pos:column="60"/></name> <operator pos:line="12" pos:column="61">!=<pos:position pos:line="12" pos:column="63"/></operator> <name><name pos:line="12" pos:column="64">ret<pos:position pos:line="12" pos:column="67"/></name><operator pos:line="12" pos:column="67">.<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="68">second<pos:position pos:line="12" pos:column="74"/></name></name></expr>;<pos:position pos:line="12" pos:column="75"/></condition> <incr><expr><operator pos:line="12" pos:column="76">++<pos:position pos:line="12" pos:column="78"/></operator><name pos:line="12" pos:column="78">it<pos:position pos:line="12" pos:column="80"/></name></expr></incr>)<pos:position pos:line="12" pos:column="81"/></control> <block pos:line="12" pos:column="82">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">X509<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">issuer<pos:position pos:line="13" pos:column="21"/></name> <init pos:line="13" pos:column="22">= <expr><name><name pos:line="13" pos:column="24">it<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">-&gt;<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="28">second<pos:position pos:line="13" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">X509_check_issued<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">issuer<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">cert<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call> <operator pos:line="14" pos:column="45">==<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="48">X509_V_OK<pos:position pos:line="14" pos:column="57"/></name></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58"> <block pos:line="14" pos:column="59">{
            <return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">issuer<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">NULL<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

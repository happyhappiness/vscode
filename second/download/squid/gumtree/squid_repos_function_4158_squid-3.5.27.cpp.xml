<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4158_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">noteBodyProducerAborted<pos:position pos:line="1" pos:column="56"/></name></name><parameter_list pos:line="1" pos:column="56">(<parameter><decl><type><name><name pos:line="1" pos:column="57">BodyPipe<pos:position pos:line="1" pos:column="65"/></name><operator pos:line="1" pos:column="65">::<pos:position pos:line="1" pos:column="67"/></operator><name pos:line="1" pos:column="67">Pointer<pos:position pos:line="1" pos:column="74"/></name></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name><name pos:line="3" pos:column="10">virgin<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">.<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">body_pipe<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">-&gt;<pos:position pos:line="3" pos:column="31"/></operator><name pos:line="3" pos:column="28">productionEnded<pos:position pos:line="3" pos:column="43"/></name></name><argument_list pos:line="3" pos:column="43">()<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="47"/></expr_stmt>

    <comment type="line" pos:line="5" pos:column="5">// push writer and sender in case we were waiting for the last-chunk</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">writeMore<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">()<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">state<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">sending<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <name><name pos:line="8" pos:column="26">State<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">::<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">sendingVirgin<pos:position pos:line="8" pos:column="46"/></name></name></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">echoMore<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">()<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

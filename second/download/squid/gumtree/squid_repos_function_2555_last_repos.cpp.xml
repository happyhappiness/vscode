<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2555_last_repos.cpp" pos:tabs="8"><function type="operator"><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">ostream<pos:position pos:line="1" pos:column="13"/></name></name> <modifier pos:line="1" pos:column="14">&amp;<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="15">operator <name pos:line="1" pos:column="24">&lt;&lt;<pos:position pos:line="1" pos:column="32"/></name></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name><name pos:line="1" pos:column="27">std<pos:position pos:line="1" pos:column="30"/></name><operator pos:line="1" pos:column="30">::<pos:position pos:line="1" pos:column="32"/></operator><name pos:line="1" pos:column="32">ostream<pos:position pos:line="1" pos:column="39"/></name></name> <modifier pos:line="1" pos:column="40">&amp;<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="41">os<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">StoreEntry<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">&amp;<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="63">e<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">os<pos:position pos:line="3" pos:column="7"/></name> <operator pos:line="3" pos:column="8">&lt;&lt;<pos:position pos:line="3" pos:column="16"/></operator> <literal type="string" pos:line="3" pos:column="11">"e:"<pos:position pos:line="3" pos:column="15"/></literal></expr>;<pos:position pos:line="3" pos:column="16"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">e<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">mem_obj<pos:position pos:line="5" pos:column="18"/></name></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <block pos:line="5" pos:column="20">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">e<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">mem_obj<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">xitTable<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">index<pos:position pos:line="6" pos:column="38"/></name></name> <operator pos:line="6" pos:column="39">&gt;<pos:position pos:line="6" pos:column="43"/></operator> <operator pos:line="6" pos:column="41">-<pos:position pos:line="6" pos:column="42"/></operator><literal type="number" pos:line="6" pos:column="42">1<pos:position pos:line="6" pos:column="43"/></literal></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="13">os<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">&lt;&lt;<pos:position pos:line="7" pos:column="24"/></operator> <literal type="char" pos:line="7" pos:column="19">'t'<pos:position pos:line="7" pos:column="22"/></literal> <operator pos:line="7" pos:column="23">&lt;&lt;<pos:position pos:line="7" pos:column="31"/></operator> <name><name pos:line="7" pos:column="26">e<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">.<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">mem_obj<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">xitTable<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">index<pos:position pos:line="7" pos:column="51"/></name></name></expr>;<pos:position pos:line="7" pos:column="52"/></expr_stmt></block></then></if>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">e<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">mem_obj<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">memCache<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">.<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">index<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">&gt;<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="41">-<pos:position pos:line="8" pos:column="42"/></operator><literal type="number" pos:line="8" pos:column="42">1<pos:position pos:line="8" pos:column="43"/></literal></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="13">os<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&lt;&lt;<pos:position pos:line="9" pos:column="24"/></operator> <literal type="char" pos:line="9" pos:column="19">'m'<pos:position pos:line="9" pos:column="22"/></literal> <operator pos:line="9" pos:column="23">&lt;&lt;<pos:position pos:line="9" pos:column="31"/></operator> <name><name pos:line="9" pos:column="26">e<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">mem_obj<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">memCache<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">index<pos:position pos:line="9" pos:column="51"/></name></name></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">e<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">swap_filen<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">&gt;<pos:position pos:line="11" pos:column="26"/></operator> <operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal> <operator pos:line="11" pos:column="27">||<pos:position pos:line="11" pos:column="29"/></operator> <name><name pos:line="11" pos:column="30">e<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">swap_dirn<pos:position pos:line="11" pos:column="41"/></name></name> <operator pos:line="11" pos:column="42">&gt;<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="44">-<pos:position pos:line="11" pos:column="45"/></operator><literal type="number" pos:line="11" pos:column="45">1<pos:position pos:line="11" pos:column="46"/></literal></expr>)<pos:position pos:line="11" pos:column="47"/></condition><then pos:line="11" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">os<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">&lt;&lt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="char" pos:line="12" pos:column="15">'d'<pos:position pos:line="12" pos:column="18"/></literal> <operator pos:line="12" pos:column="19">&lt;&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="22">e<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">swap_filen<pos:position pos:line="12" pos:column="34"/></name></name> <operator pos:line="12" pos:column="35">&lt;&lt;<pos:position pos:line="12" pos:column="43"/></operator> <literal type="char" pos:line="12" pos:column="38">'@'<pos:position pos:line="12" pos:column="41"/></literal> <operator pos:line="12" pos:column="42">&lt;&lt;<pos:position pos:line="12" pos:column="50"/></operator> <name><name pos:line="12" pos:column="45">e<pos:position pos:line="12" pos:column="46"/></name><operator pos:line="12" pos:column="46">.<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">swap_dirn<pos:position pos:line="12" pos:column="56"/></name></name></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">os<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">&lt;&lt;<pos:position pos:line="14" pos:column="16"/></operator> <literal type="char" pos:line="14" pos:column="11">'='<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>

    <comment type="line" pos:line="16" pos:column="5">// print only non-default status values, using unique letters</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">e<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">.<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">mem_status<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">!=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">NOT_IN_MEMORY<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">||<pos:position pos:line="17" pos:column="41"/></operator>
            <name><name pos:line="18" pos:column="13">e<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">store_status<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">!=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">STORE_PENDING<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">||<pos:position pos:line="18" pos:column="47"/></operator>
            <name><name pos:line="19" pos:column="13">e<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">swap_status<pos:position pos:line="19" pos:column="26"/></name></name> <operator pos:line="19" pos:column="27">!=<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">SWAPOUT_NONE<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">||<pos:position pos:line="19" pos:column="45"/></operator>
            <name><name pos:line="20" pos:column="13">e<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">.<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">ping_status<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">!=<pos:position pos:line="20" pos:column="29"/></operator> <name pos:line="20" pos:column="30">PING_NONE<pos:position pos:line="20" pos:column="39"/></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40"> <block pos:line="20" pos:column="41">{
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">e<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">mem_status<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">!=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">NOT_IN_MEMORY<pos:position pos:line="21" pos:column="42"/></name></expr>)<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43"> <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="44">os<pos:position pos:line="21" pos:column="46"/></name> <operator pos:line="21" pos:column="47">&lt;&lt;<pos:position pos:line="21" pos:column="55"/></operator> <literal type="char" pos:line="21" pos:column="50">'m'<pos:position pos:line="21" pos:column="53"/></literal></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt></block></then></if>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">e<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">store_status<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">!=<pos:position pos:line="22" pos:column="30"/></operator> <name pos:line="22" pos:column="31">STORE_PENDING<pos:position pos:line="22" pos:column="44"/></name></expr>)<pos:position pos:line="22" pos:column="45"/></condition><then pos:line="22" pos:column="45"> <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="46">os<pos:position pos:line="22" pos:column="48"/></name> <operator pos:line="22" pos:column="49">&lt;&lt;<pos:position pos:line="22" pos:column="57"/></operator> <literal type="char" pos:line="22" pos:column="52">'s'<pos:position pos:line="22" pos:column="55"/></literal></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt></block></then></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">e<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">swap_status<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">!=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">SWAPOUT_NONE<pos:position pos:line="23" pos:column="42"/></name></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="44">os<pos:position pos:line="23" pos:column="46"/></name> <operator pos:line="23" pos:column="47">&lt;&lt;<pos:position pos:line="23" pos:column="55"/></operator> <literal type="char" pos:line="23" pos:column="50">'w'<pos:position pos:line="23" pos:column="53"/></literal> <operator pos:line="23" pos:column="54">&lt;&lt;<pos:position pos:line="23" pos:column="62"/></operator> <name><name pos:line="23" pos:column="57">e<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">.<pos:position pos:line="23" pos:column="59"/></operator><name pos:line="23" pos:column="59">swap_status<pos:position pos:line="23" pos:column="70"/></name></name></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt></block></then></if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">e<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">ping_status<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">!=<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">PING_NONE<pos:position pos:line="24" pos:column="39"/></name></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="41">os<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">&lt;&lt;<pos:position pos:line="24" pos:column="52"/></operator> <literal type="char" pos:line="24" pos:column="47">'p'<pos:position pos:line="24" pos:column="50"/></literal> <operator pos:line="24" pos:column="51">&lt;&lt;<pos:position pos:line="24" pos:column="59"/></operator> <name><name pos:line="24" pos:column="54">e<pos:position pos:line="24" pos:column="55"/></name><operator pos:line="24" pos:column="55">.<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="56">ping_status<pos:position pos:line="24" pos:column="67"/></name></name></expr>;<pos:position pos:line="24" pos:column="68"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="27" pos:column="5">// print only set flags, using unique letters</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">e<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">.<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">flags<pos:position pos:line="28" pos:column="16"/></name></name></expr>)<pos:position pos:line="28" pos:column="17"/></condition><then pos:line="28" pos:column="17"> <block pos:line="28" pos:column="18">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">EBIT_TEST<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name><name pos:line="29" pos:column="23">e<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">flags<pos:position pos:line="29" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">ENTRY_SPECIAL<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="48">os<pos:position pos:line="29" pos:column="50"/></name> <operator pos:line="29" pos:column="51">&lt;&lt;<pos:position pos:line="29" pos:column="59"/></operator> <literal type="char" pos:line="29" pos:column="54">'S'<pos:position pos:line="29" pos:column="57"/></literal></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></then></if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">EBIT_TEST<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name><name pos:line="30" pos:column="23">e<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">flags<pos:position pos:line="30" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="32">ENTRY_REVALIDATE_ALWAYS<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57"> <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="58">os<pos:position pos:line="30" pos:column="60"/></name> <operator pos:line="30" pos:column="61">&lt;&lt;<pos:position pos:line="30" pos:column="69"/></operator> <literal type="char" pos:line="30" pos:column="64">'R'<pos:position pos:line="30" pos:column="67"/></literal></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt></block></then></if>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">EBIT_TEST<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name><name pos:line="31" pos:column="23">e<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">flags<pos:position pos:line="31" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">DELAY_SENDING<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="47"/></condition><then pos:line="31" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="48">os<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">&lt;&lt;<pos:position pos:line="31" pos:column="59"/></operator> <literal type="char" pos:line="31" pos:column="54">'P'<pos:position pos:line="31" pos:column="57"/></literal></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt></block></then></if>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">EBIT_TEST<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">e<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">.<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="25">flags<pos:position pos:line="32" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="32">RELEASE_REQUEST<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="50">os<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">&lt;&lt;<pos:position pos:line="32" pos:column="61"/></operator> <literal type="char" pos:line="32" pos:column="56">'X'<pos:position pos:line="32" pos:column="59"/></literal></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt></block></then></if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">EBIT_TEST<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">e<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">flags<pos:position pos:line="33" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="32">REFRESH_REQUEST<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49"> <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="50">os<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">&lt;&lt;<pos:position pos:line="33" pos:column="61"/></operator> <literal type="char" pos:line="33" pos:column="56">'F'<pos:position pos:line="33" pos:column="59"/></literal></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt></block></then></if>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">EBIT_TEST<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name><name pos:line="34" pos:column="23">e<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">flags<pos:position pos:line="34" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">ENTRY_REVALIDATE_STALE<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56"> <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="57">os<pos:position pos:line="34" pos:column="59"/></name> <operator pos:line="34" pos:column="60">&lt;&lt;<pos:position pos:line="34" pos:column="68"/></operator> <literal type="char" pos:line="34" pos:column="63">'E'<pos:position pos:line="34" pos:column="66"/></literal></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">EBIT_TEST<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name><name pos:line="35" pos:column="23">e<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">flags<pos:position pos:line="35" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">KEY_PRIVATE<pos:position pos:line="35" pos:column="43"/></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45"> <block pos:line="35" pos:column="46">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">os<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">&lt;&lt;<pos:position pos:line="36" pos:column="24"/></operator> <literal type="char" pos:line="36" pos:column="19">'I'<pos:position pos:line="36" pos:column="22"/></literal></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">e<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">shareableWhenPrivate<pos:position pos:line="37" pos:column="39"/></name></name></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="17">os<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">&lt;&lt;<pos:position pos:line="38" pos:column="28"/></operator> <literal type="char" pos:line="38" pos:column="23">'H'<pos:position pos:line="38" pos:column="26"/></literal></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">EBIT_TEST<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name><name pos:line="40" pos:column="23">e<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">.<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">flags<pos:position pos:line="40" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">KEY_PRIVATE<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="45"/></condition><then pos:line="40" pos:column="45"> <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="46">os<pos:position pos:line="40" pos:column="48"/></name> <operator pos:line="40" pos:column="49">&lt;&lt;<pos:position pos:line="40" pos:column="57"/></operator> <literal type="char" pos:line="40" pos:column="52">'I'<pos:position pos:line="40" pos:column="55"/></literal></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name pos:line="41" pos:column="13">EBIT_TEST<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name><name pos:line="41" pos:column="23">e<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">flags<pos:position pos:line="41" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">ENTRY_FWD_HDR_WAIT<pos:position pos:line="41" pos:column="50"/></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="52"/></condition><then pos:line="41" pos:column="52"> <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="53">os<pos:position pos:line="41" pos:column="55"/></name> <operator pos:line="41" pos:column="56">&lt;&lt;<pos:position pos:line="41" pos:column="64"/></operator> <literal type="char" pos:line="41" pos:column="59">'W'<pos:position pos:line="41" pos:column="62"/></literal></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt></block></then></if>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">EBIT_TEST<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><name><name pos:line="42" pos:column="23">e<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">.<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">flags<pos:position pos:line="42" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="32">ENTRY_NEGCACHED<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49"> <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="50">os<pos:position pos:line="42" pos:column="52"/></name> <operator pos:line="42" pos:column="53">&lt;&lt;<pos:position pos:line="42" pos:column="61"/></operator> <literal type="char" pos:line="42" pos:column="56">'N'<pos:position pos:line="42" pos:column="59"/></literal></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt></block></then></if>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">EBIT_TEST<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">(<argument><expr><name><name pos:line="43" pos:column="23">e<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">.<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">flags<pos:position pos:line="43" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="32">ENTRY_VALIDATED<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="49"/></condition><then pos:line="43" pos:column="49"> <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="50">os<pos:position pos:line="43" pos:column="52"/></name> <operator pos:line="43" pos:column="53">&lt;&lt;<pos:position pos:line="43" pos:column="61"/></operator> <literal type="char" pos:line="43" pos:column="56">'V'<pos:position pos:line="43" pos:column="59"/></literal></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt></block></then></if>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">EBIT_TEST<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name><name pos:line="44" pos:column="23">e<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">.<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">flags<pos:position pos:line="44" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="32">ENTRY_BAD_LENGTH<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="50"/></condition><then pos:line="44" pos:column="50"> <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="51">os<pos:position pos:line="44" pos:column="53"/></name> <operator pos:line="44" pos:column="54">&lt;&lt;<pos:position pos:line="44" pos:column="62"/></operator> <literal type="char" pos:line="44" pos:column="57">'L'<pos:position pos:line="44" pos:column="60"/></literal></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt></block></then></if>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">EBIT_TEST<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name><name pos:line="45" pos:column="23">e<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">.<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">flags<pos:position pos:line="45" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">ENTRY_ABORTED<pos:position pos:line="45" pos:column="45"/></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="47"/></condition><then pos:line="45" pos:column="47"> <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="48">os<pos:position pos:line="45" pos:column="50"/></name> <operator pos:line="45" pos:column="51">&lt;&lt;<pos:position pos:line="45" pos:column="59"/></operator> <literal type="char" pos:line="45" pos:column="54">'A'<pos:position pos:line="45" pos:column="57"/></literal></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">e<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">.<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">mem_obj<pos:position pos:line="48" pos:column="18"/></name></name> <operator pos:line="48" pos:column="19">&amp;&amp;<pos:position pos:line="48" pos:column="29"/></operator> <name><name pos:line="48" pos:column="22">e<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">mem_obj<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">smpCollapsed<pos:position pos:line="48" pos:column="45"/></name></name></expr>)<pos:position pos:line="48" pos:column="46"/></condition><then pos:line="48" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="9">os<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">&lt;&lt;<pos:position pos:line="49" pos:column="20"/></operator> <literal type="char" pos:line="49" pos:column="15">'O'<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt></block></then></if>

    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">os<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">&lt;&lt;<pos:position pos:line="51" pos:column="23"/></operator> <literal type="char" pos:line="51" pos:column="18">'/'<pos:position pos:line="51" pos:column="21"/></literal> <operator pos:line="51" pos:column="22">&lt;&lt;<pos:position pos:line="51" pos:column="30"/></operator> <operator pos:line="51" pos:column="25">&amp;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="26">e<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">&lt;&lt;<pos:position pos:line="51" pos:column="36"/></operator> <literal type="char" pos:line="51" pos:column="31">'*'<pos:position pos:line="51" pos:column="34"/></literal> <operator pos:line="51" pos:column="35">&lt;&lt;<pos:position pos:line="51" pos:column="43"/></operator> <call><name><name pos:line="51" pos:column="38">e<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">.<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">locks<pos:position pos:line="51" pos:column="45"/></name></name><argument_list pos:line="51" pos:column="45">()<pos:position pos:line="51" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="48"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

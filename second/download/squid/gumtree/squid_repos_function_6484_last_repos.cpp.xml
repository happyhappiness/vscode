<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6484_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoRr<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">create<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">()<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">cacheSwap<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">n_strands<pos:position pos:line="4" pos:column="35"/></name></name> <operator pos:line="4" pos:column="36">&lt;=<pos:position pos:line="4" pos:column="41"/></operator> <literal type="number" pos:line="4" pos:column="39">0<pos:position pos:line="4" pos:column="40"/></literal></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><operator pos:line="7" pos:column="10">!<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">owner<pos:position pos:line="7" pos:column="16"/></name></expr></argument>)<pos:position pos:line="7" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">owner<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name><name pos:line="8" pos:column="13">Ipc<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">FewToFewBiQueue<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">::<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">Init<pos:position pos:line="8" pos:column="39"/></name></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name pos:line="8" pos:column="40">ShmLabel<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="50">Config<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">.<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">workers<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="66">1<pos:position pos:line="8" pos:column="67"/></literal></expr></argument>,
                                       <argument><expr><name><name pos:line="9" pos:column="40">Config<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">.<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">cacheSwap<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">.<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">n_strands<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>,
                                       <argument><expr><literal type="number" pos:line="10" pos:column="40">1<pos:position pos:line="10" pos:column="41"/></literal> <operator pos:line="10" pos:column="42">+<pos:position pos:line="10" pos:column="43"/></operator> <name><name pos:line="10" pos:column="44">Config<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">workers<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="60">sizeof<argument_list pos:line="10" pos:column="66">(<argument><expr><name pos:line="10" pos:column="67">IpcIoMsg<pos:position pos:line="10" pos:column="75"/></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></sizeof></expr></argument>,
                                       <argument><expr><name pos:line="11" pos:column="40">QueueCapacity<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

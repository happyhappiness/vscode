<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6850_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Kids<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">someRunning<pos:position pos:line="1" pos:column="23"/></name></name><parameter_list pos:line="1" pos:column="23">()<pos:position pos:line="1" pos:column="25"/></parameter_list> <specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier>
<block pos:line="2" pos:column="1">{
    <for pos:line="3" pos:column="5">for <control pos:line="3" pos:column="9">(<init><decl><type><name pos:line="3" pos:column="10">size_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">i<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></init> <condition><expr><name pos:line="3" pos:column="24">i<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&lt;<pos:position pos:line="3" pos:column="30"/></operator> <call><name><name pos:line="3" pos:column="28">storage<pos:position pos:line="3" pos:column="35"/></name><operator pos:line="3" pos:column="35">.<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="36">size<pos:position pos:line="3" pos:column="40"/></name></name><argument_list pos:line="3" pos:column="40">()<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="43"/></condition> <incr><expr><operator pos:line="3" pos:column="44">++<pos:position pos:line="3" pos:column="46"/></operator><name pos:line="3" pos:column="46">i<pos:position pos:line="3" pos:column="47"/></name></expr></incr>)<pos:position pos:line="3" pos:column="48"/></control> <block pos:line="3" pos:column="49">{
        <if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">storage<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name></expr>]<pos:position pos:line="4" pos:column="23"/></index></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><call><name pos:line="4" pos:column="24">running<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34">
            <block type="pseudo"><return pos:line="5" pos:column="13">return <expr><literal type="boolean" pos:line="5" pos:column="20">true<pos:position pos:line="5" pos:column="24"/></literal></expr>;<pos:position pos:line="5" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="6" pos:column="6"/></block></for>
    <return pos:line="7" pos:column="5">return <expr><literal type="boolean" pos:line="7" pos:column="12">false<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

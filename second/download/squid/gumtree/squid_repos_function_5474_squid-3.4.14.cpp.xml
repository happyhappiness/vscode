<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5474_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">accessLogLogTo<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">CustomLog<pos:position pos:line="2" pos:column="25"/></name><modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">log<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="32">AccessLogEntry<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">Pointer<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">al<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">ACLChecklist<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="76">checklist<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">al<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">url<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="6" pos:column="9">al<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">url<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">dash_str<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">al<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">http<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">content_type<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">||<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">al<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">http<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">content_type<pos:position pos:line="8" pos:column="57"/></name></name> <operator pos:line="8" pos:column="58">==<pos:position pos:line="8" pos:column="60"/></operator> <literal type="char" pos:line="8" pos:column="61">'\0'<pos:position pos:line="8" pos:column="65"/></literal></expr>)<pos:position pos:line="8" pos:column="66"/></condition><then pos:line="8" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="9">al<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">http<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">content_type<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">dash_str<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">al<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">icp<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">opcode<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="9">al<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">_private<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">method_str<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name><name pos:line="12" pos:column="35">icp_opcode_str<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><name><name pos:line="12" pos:column="50">al<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">icp<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">opcode<pos:position pos:line="12" pos:column="64"/></name></name></expr>]<pos:position pos:line="12" pos:column="65"/></index></name></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt></block></then>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><name><name pos:line="13" pos:column="14">al<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">htcp<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">.<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">opcode<pos:position pos:line="13" pos:column="29"/></name></name></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="9">al<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">_private<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">method_str<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <name><name pos:line="14" pos:column="35">al<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">htcp<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">opcode<pos:position pos:line="14" pos:column="50"/></name></name></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <else pos:line="15" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="9">al<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">_private<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">method_str<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <call><name pos:line="16" pos:column="35">RequestMethodStr<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name><name pos:line="16" pos:column="52">al<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">http<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">.<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="61">method<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt></block></else></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">al<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">hier<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">host<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>]<pos:position pos:line="18" pos:column="25"/></index></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <literal type="char" pos:line="18" pos:column="29">'\0'<pos:position pos:line="18" pos:column="33"/></literal></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">xstrncpy<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">al<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">hier<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">host<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">dash_str<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">SQUIDHOSTNAMELEN<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt></block></then></if>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init pos:line="21" pos:column="10">;<pos:position pos:line="21" pos:column="11"/></init> <condition><expr><name pos:line="21" pos:column="12">log<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></condition> <incr><expr><name pos:line="21" pos:column="17">log<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name><name pos:line="21" pos:column="23">log<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">next<pos:position pos:line="21" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="33"/></control> <block pos:line="21" pos:column="34">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">log<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">-&gt;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="18">aclList<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">&amp;&amp;<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="29">checklist<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">&amp;&amp;<pos:position pos:line="22" pos:column="49"/></operator> <call><name><name pos:line="22" pos:column="42">checklist<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="53">fastCheck<pos:position pos:line="22" pos:column="62"/></name></name><argument_list pos:line="22" pos:column="62">(<argument><expr><name><name pos:line="22" pos:column="63">log<pos:position pos:line="22" pos:column="66"/></name><operator pos:line="22" pos:column="66">-&gt;<pos:position pos:line="22" pos:column="71"/></operator><name pos:line="22" pos:column="68">aclList<pos:position pos:line="22" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="76"/></argument_list></call> <operator pos:line="22" pos:column="77">!=<pos:position pos:line="22" pos:column="79"/></operator> <name pos:line="22" pos:column="80">ACCESS_ALLOWED<pos:position pos:line="22" pos:column="94"/></name></expr>)<pos:position pos:line="22" pos:column="95"/></condition><then pos:line="22" pos:column="95">
            <block type="pseudo"><continue pos:line="23" pos:column="13">continue;<pos:position pos:line="23" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="25" pos:column="9">// The special-case "none" type has no logfile object set</comment>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">log<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">type<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">==<pos:position pos:line="26" pos:column="25"/></operator> <name><name pos:line="26" pos:column="26">Log<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">::<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">Format<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">::<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">CLF_NONE<pos:position pos:line="26" pos:column="47"/></name></name></expr>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48">
            <block type="pseudo"><return pos:line="27" pos:column="13">return;<pos:position pos:line="27" pos:column="20"/></return></block></then></if>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name><name pos:line="29" pos:column="13">log<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">logfile<pos:position pos:line="29" pos:column="25"/></name></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26"> <block pos:line="29" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">logfileLineStart<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name><name pos:line="30" pos:column="30">log<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">logfile<pos:position pos:line="30" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>

            <switch pos:line="32" pos:column="13">switch <condition pos:line="32" pos:column="20">(<expr><name><name pos:line="32" pos:column="21">log<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">type<pos:position pos:line="32" pos:column="30"/></name></name></expr>)<pos:position pos:line="32" pos:column="31"/></condition> <block pos:line="32" pos:column="32">{

            <case pos:line="34" pos:column="13">case <expr><name><name pos:line="34" pos:column="18">Log<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">::<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">Format<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">::<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">CLF_SQUID<pos:position pos:line="34" pos:column="40"/></name></name></expr>:<pos:position pos:line="34" pos:column="41"/></case>
                <expr_stmt><expr><call><name><name pos:line="35" pos:column="17">Log<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">::<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">Format<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">::<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">SquidNative<pos:position pos:line="35" pos:column="41"/></name></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">al<pos:position pos:line="35" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">log<pos:position pos:line="35" pos:column="49"/></name><operator pos:line="35" pos:column="49">-&gt;<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="51">logfile<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>

            <case pos:line="38" pos:column="13">case <expr><name><name pos:line="38" pos:column="18">Log<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">::<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">Format<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">::<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">CLF_COMBINED<pos:position pos:line="38" pos:column="43"/></name></name></expr>:<pos:position pos:line="38" pos:column="44"/></case>
                <expr_stmt><expr><call><name><name pos:line="39" pos:column="17">Log<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">::<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">Format<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">::<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">HttpdCombined<pos:position pos:line="39" pos:column="43"/></name></name><argument_list pos:line="39" pos:column="43">(<argument><expr><name pos:line="39" pos:column="44">al<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="48">log<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">-&gt;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="53">logfile<pos:position pos:line="39" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="62"/></expr_stmt>
                <break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>

            <case pos:line="42" pos:column="13">case <expr><name><name pos:line="42" pos:column="18">Log<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">::<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">Format<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">::<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">CLF_COMMON<pos:position pos:line="42" pos:column="41"/></name></name></expr>:<pos:position pos:line="42" pos:column="42"/></case>
                <expr_stmt><expr><call><name><name pos:line="43" pos:column="17">Log<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">::<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">Format<pos:position pos:line="43" pos:column="28"/></name><operator pos:line="43" pos:column="28">::<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">HttpdCommon<pos:position pos:line="43" pos:column="41"/></name></name><argument_list pos:line="43" pos:column="41">(<argument><expr><name pos:line="43" pos:column="42">al<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="46">log<pos:position pos:line="43" pos:column="49"/></name><operator pos:line="43" pos:column="49">-&gt;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="51">logfile<pos:position pos:line="43" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt>
                <break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>

            <case pos:line="46" pos:column="13">case <expr><name><name pos:line="46" pos:column="18">Log<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">::<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">Format<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">::<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">CLF_REFERER<pos:position pos:line="46" pos:column="42"/></name></name></expr>:<pos:position pos:line="46" pos:column="43"/></case>
                <expr_stmt><expr><call><name><name pos:line="47" pos:column="17">Log<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">::<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">Format<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">::<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">SquidReferer<pos:position pos:line="47" pos:column="42"/></name></name><argument_list pos:line="47" pos:column="42">(<argument><expr><name pos:line="47" pos:column="43">al<pos:position pos:line="47" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="47">log<pos:position pos:line="47" pos:column="50"/></name><operator pos:line="47" pos:column="50">-&gt;<pos:position pos:line="47" pos:column="55"/></operator><name pos:line="47" pos:column="52">logfile<pos:position pos:line="47" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="61"/></expr_stmt>
                <break pos:line="48" pos:column="17">break;<pos:position pos:line="48" pos:column="23"/></break>

            <case pos:line="50" pos:column="13">case <expr><name><name pos:line="50" pos:column="18">Log<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">::<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">Format<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">::<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">CLF_USERAGENT<pos:position pos:line="50" pos:column="44"/></name></name></expr>:<pos:position pos:line="50" pos:column="45"/></case>
                <expr_stmt><expr><call><name><name pos:line="51" pos:column="17">Log<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">::<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">Format<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">::<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="30">SquidUserAgent<pos:position pos:line="51" pos:column="44"/></name></name><argument_list pos:line="51" pos:column="44">(<argument><expr><name pos:line="51" pos:column="45">al<pos:position pos:line="51" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="49">log<pos:position pos:line="51" pos:column="52"/></name><operator pos:line="51" pos:column="52">-&gt;<pos:position pos:line="51" pos:column="57"/></operator><name pos:line="51" pos:column="54">logfile<pos:position pos:line="51" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="63"/></expr_stmt>
                <break pos:line="52" pos:column="17">break;<pos:position pos:line="52" pos:column="23"/></break>

            <case pos:line="54" pos:column="13">case <expr><name><name pos:line="54" pos:column="18">Log<pos:position pos:line="54" pos:column="21"/></name><operator pos:line="54" pos:column="21">::<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">Format<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">::<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">CLF_CUSTOM<pos:position pos:line="54" pos:column="41"/></name></name></expr>:<pos:position pos:line="54" pos:column="42"/></case>
                <expr_stmt><expr><call><name><name pos:line="55" pos:column="17">Log<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">::<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">Format<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">::<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">SquidCustom<pos:position pos:line="55" pos:column="41"/></name></name><argument_list pos:line="55" pos:column="41">(<argument><expr><name pos:line="55" pos:column="42">al<pos:position pos:line="55" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">log<pos:position pos:line="55" pos:column="49"/></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
                <break pos:line="56" pos:column="17">break;<pos:position pos:line="56" pos:column="23"/></break>

<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">ICAP_CLIENT<pos:position pos:line="58" pos:column="16"/></name></expr></cpp:if>
            <case pos:line="59" pos:column="13">case <expr><name><name pos:line="59" pos:column="18">Log<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">::<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="23">Format<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">::<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="31">CLF_ICAP_SQUID<pos:position pos:line="59" pos:column="45"/></name></name></expr>:<pos:position pos:line="59" pos:column="46"/></case>
                <expr_stmt><expr><call><name><name pos:line="60" pos:column="17">Log<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">::<pos:position pos:line="60" pos:column="22"/></operator><name pos:line="60" pos:column="22">Format<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">::<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="30">SquidIcap<pos:position pos:line="60" pos:column="39"/></name></name><argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">al<pos:position pos:line="60" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="44">log<pos:position pos:line="60" pos:column="47"/></name><operator pos:line="60" pos:column="47">-&gt;<pos:position pos:line="60" pos:column="52"/></operator><name pos:line="60" pos:column="49">logfile<pos:position pos:line="60" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="58"/></expr_stmt>
                <break pos:line="61" pos:column="17">break;<pos:position pos:line="61" pos:column="23"/></break>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

            <default pos:line="64" pos:column="13">default:<pos:position pos:line="64" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">fatalf<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><literal type="string" pos:line="65" pos:column="24">"Unknown log format %d\n"<pos:position pos:line="65" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="51">log<pos:position pos:line="65" pos:column="54"/></name><operator pos:line="65" pos:column="54">-&gt;<pos:position pos:line="65" pos:column="59"/></operator><name pos:line="65" pos:column="56">type<pos:position pos:line="65" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="62"/></expr_stmt>
                <break pos:line="66" pos:column="17">break;<pos:position pos:line="66" pos:column="23"/></break>
            }<pos:position pos:line="67" pos:column="14"/></block></switch>

            <expr_stmt><expr><call><name pos:line="69" pos:column="13">logfileLineEnd<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">log<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">logfile<pos:position pos:line="69" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="72" pos:column="9">// NP:  WTF?  if _any_ log line has no checklist ignore the following ones?</comment>
        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><operator pos:line="73" pos:column="13">!<pos:position pos:line="73" pos:column="14"/></operator><name pos:line="73" pos:column="14">checklist<pos:position pos:line="73" pos:column="23"/></name></expr>)<pos:position pos:line="73" pos:column="24"/></condition><then pos:line="73" pos:column="24">
            <block type="pseudo"><break pos:line="74" pos:column="13">break;<pos:position pos:line="74" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="75" pos:column="6"/></block></for>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2978_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreController<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">maintain<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">time_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">last_warn_time<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">PROF_start<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">storeMaintainSwapSpace<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">swapDir<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">maintain<pos:position pos:line="7" pos:column="22"/></name></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* this should be emitted by the oversize dir, not globally */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">store_swap_size<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">&gt;<pos:position pos:line="11" pos:column="29"/></operator> <call><name><name pos:line="11" pos:column="27">Store<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">::<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">Root<pos:position pos:line="11" pos:column="38"/></name></name><argument_list pos:line="11" pos:column="38">()<pos:position pos:line="11" pos:column="40"/></argument_list></call><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><call><name pos:line="11" pos:column="41">maxSize<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">()<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51"> <block pos:line="11" pos:column="52">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">squid_curtime<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">-<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">last_warn_time<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">&gt;<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="46">10<pos:position pos:line="12" pos:column="48"/></literal></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">20<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">"WARNING: Disk space over limit: "<pos:position pos:line="13" pos:column="61"/></literal> <operator pos:line="13" pos:column="62">&lt;&lt;<pos:position pos:line="13" pos:column="70"/></operator> <name pos:line="13" pos:column="65">store_swap_size<pos:position pos:line="13" pos:column="80"/></name> <operator pos:line="13" pos:column="81">&lt;&lt;<pos:position pos:line="13" pos:column="89"/></operator> <literal type="string" pos:line="13" pos:column="84">" KB &gt; "<pos:position pos:line="13" pos:column="95"/></literal>
                   <operator pos:line="14" pos:column="20">&lt;&lt;<pos:position pos:line="14" pos:column="28"/></operator> <call><name><name pos:line="14" pos:column="23">Store<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">::<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">Root<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><call><name pos:line="14" pos:column="37">maxSize<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">()<pos:position pos:line="14" pos:column="46"/></argument_list></call> <operator pos:line="14" pos:column="47">&lt;&lt;<pos:position pos:line="14" pos:column="55"/></operator> <literal type="string" pos:line="14" pos:column="50">" KB"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">last_warn_time<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">squid_curtime<pos:position pos:line="15" pos:column="43"/></name></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">PROF_stop<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">storeMaintainSwapSpace<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

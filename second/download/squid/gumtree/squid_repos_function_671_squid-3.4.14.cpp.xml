<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_671_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlloader_add<pos:position pos:line="2" pos:column="16"/></name> <parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">lt_dlvtable<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">vtable<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">SList<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">item<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">vtable<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator>	<comment type="block" pos:line="6" pos:column="25">/* diagnose invalid vtable fields */</comment>
      <operator pos:line="7" pos:column="7">||<pos:position pos:line="7" pos:column="9"/></operator> <operator pos:line="7" pos:column="10">(<pos:position pos:line="7" pos:column="11"/></operator><name><name pos:line="7" pos:column="11">vtable<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">module_open<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">0<pos:position pos:line="7" pos:column="35"/></literal><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator>
      <operator pos:line="8" pos:column="7">||<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name><name pos:line="8" pos:column="11">vtable<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">module_close<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">==<pos:position pos:line="8" pos:column="34"/></operator> <literal type="number" pos:line="8" pos:column="35">0<pos:position pos:line="8" pos:column="36"/></literal><operator pos:line="8" pos:column="36">)<pos:position pos:line="8" pos:column="37"/></operator>
      <operator pos:line="9" pos:column="7">||<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name><name pos:line="9" pos:column="11">vtable<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">find_sym<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal><operator pos:line="9" pos:column="32">)<pos:position pos:line="9" pos:column="33"/></operator>
      <operator pos:line="10" pos:column="7">||<pos:position pos:line="10" pos:column="9"/></operator> <operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><operator pos:line="10" pos:column="11">(<pos:position pos:line="10" pos:column="12"/></operator><name><name pos:line="10" pos:column="12">vtable<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">priority<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">!=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">LT_DLLOADER_PREPEND<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">)<pos:position pos:line="10" pos:column="52"/></operator> <operator pos:line="10" pos:column="53">&amp;&amp;<pos:position pos:line="10" pos:column="63"/></operator>
	  <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name><name pos:line="11" pos:column="12">vtable<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">priority<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">!=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">LT_DLLOADER_APPEND<pos:position pos:line="11" pos:column="50"/></name><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53">
    <block pos:line="12" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">LT__SETERROR<pos:position pos:line="13" pos:column="19"/></name> <argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">INVALID_LOADER<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><name pos:line="14" pos:column="14">RETURN_FAILURE<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">item<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">slist_box<pos:position pos:line="17" pos:column="19"/></name> <argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">vtable<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">item<pos:position pos:line="18" pos:column="12"/></name></expr>)<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><call pos:line="20" pos:column="7">(<modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier><name pos:line="20" pos:column="9">lt__alloc_die<pos:position pos:line="20" pos:column="22"/></name>) <argument_list pos:line="20" pos:column="24">()<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="22" pos:column="7">/* Let the caller know something went wrong if lt__alloc_die
	 doesn't abort.  */</comment>
      <return pos:line="24" pos:column="7">return <expr><name pos:line="24" pos:column="14">RETURN_FAILURE<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name><name pos:line="27" pos:column="7">vtable<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">priority<pos:position pos:line="27" pos:column="23"/></name></name> <operator pos:line="27" pos:column="24">==<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">LT_DLLOADER_PREPEND<pos:position pos:line="27" pos:column="46"/></name></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47">
    <block pos:line="28" pos:column="5">{
      <expr_stmt><expr><name pos:line="29" pos:column="7">loaders<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">slist_cons<pos:position pos:line="29" pos:column="27"/></name> <argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">item<pos:position pos:line="29" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="35">loaders<pos:position pos:line="29" pos:column="42"/></name></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then>
  <else pos:line="31" pos:column="3">else
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">assert<pos:position pos:line="33" pos:column="13"/></name> <argument_list pos:line="33" pos:column="14">(<argument><expr><name><name pos:line="33" pos:column="15">vtable<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">priority<pos:position pos:line="33" pos:column="31"/></name></name> <operator pos:line="33" pos:column="32">==<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="35">LT_DLLOADER_APPEND<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="34" pos:column="7">loaders<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">slist_concat<pos:position pos:line="34" pos:column="29"/></name> <argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">loaders<pos:position pos:line="34" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">item<pos:position pos:line="34" pos:column="44"/></name></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>

  <return pos:line="37" pos:column="3">return <expr><name pos:line="37" pos:column="10">RETURN_SUCCESS<pos:position pos:line="37" pos:column="24"/></name></expr>;<pos:position pos:line="37" pos:column="25"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4294_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">parse_flags<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">flags<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">long<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">fl<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tmp<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">flag<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">flags<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">tmp<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">xstrdup<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">flags<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">flag<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">strtok<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">tmp<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">":,"<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">flag<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition> <block pos:line="15" pos:column="18">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">strcmp<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">flag<pos:position pos:line="16" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="26">"NO_DEFAULT_CA"<pos:position pos:line="16" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call> <operator pos:line="16" pos:column="43">==<pos:position pos:line="16" pos:column="45"/></operator> <literal type="number" pos:line="16" pos:column="46">0<pos:position pos:line="16" pos:column="47"/></literal></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="13">fl<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">|=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">SSL_FLAG_NO_DEFAULT_CA<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt></block></then>
        <elseif pos:line="18" pos:column="9">else <if pos:line="18" pos:column="14">if <condition pos:line="18" pos:column="17">(<expr><call><name pos:line="18" pos:column="18">strcmp<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">flag<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"DELAYED_AUTH"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call> <operator pos:line="18" pos:column="47">==<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">0<pos:position pos:line="18" pos:column="51"/></literal></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="13">fl<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">|=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">SSL_FLAG_DELAYED_AUTH<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="20" pos:column="9">else <if pos:line="20" pos:column="14">if <condition pos:line="20" pos:column="17">(<expr><call><name pos:line="20" pos:column="18">strcmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">flag<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"DONT_VERIFY_PEER"<pos:position pos:line="20" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call> <operator pos:line="20" pos:column="51">==<pos:position pos:line="20" pos:column="53"/></operator> <literal type="number" pos:line="20" pos:column="54">0<pos:position pos:line="20" pos:column="55"/></literal></expr>)<pos:position pos:line="20" pos:column="56"/></condition><then pos:line="20" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="13">fl<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">|=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">SSL_FLAG_DONT_VERIFY_PEER<pos:position pos:line="21" pos:column="44"/></name></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><call><name pos:line="22" pos:column="18">strcmp<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">flag<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="31">"DONT_VERIFY_DOMAIN"<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call> <operator pos:line="22" pos:column="53">==<pos:position pos:line="22" pos:column="55"/></operator> <literal type="number" pos:line="22" pos:column="56">0<pos:position pos:line="22" pos:column="57"/></literal></expr>)<pos:position pos:line="22" pos:column="58"/></condition><then pos:line="22" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">fl<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">|=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">SSL_FLAG_DONT_VERIFY_DOMAIN<pos:position pos:line="23" pos:column="46"/></name></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><call><name pos:line="24" pos:column="18">strcmp<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">flag<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"NO_SESSION_REUSE"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call> <operator pos:line="24" pos:column="51">==<pos:position pos:line="24" pos:column="53"/></operator> <literal type="number" pos:line="24" pos:column="54">0<pos:position pos:line="24" pos:column="55"/></literal></expr>)<pos:position pos:line="24" pos:column="56"/></condition><then pos:line="24" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">fl<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">|=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">SSL_FLAG_NO_SESSION_REUSE<pos:position pos:line="25" pos:column="44"/></name></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt></block></then></if></elseif>

<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">X509_V_FLAG_CRL_CHECK<pos:position pos:line="27" pos:column="26"/></name></expr></cpp:if>

        <elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><call><name pos:line="29" pos:column="18">strcmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">flag<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"VERIFY_CRL"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call> <operator pos:line="29" pos:column="45">==<pos:position pos:line="29" pos:column="47"/></operator> <literal type="number" pos:line="29" pos:column="48">0<pos:position pos:line="29" pos:column="49"/></literal></expr>)<pos:position pos:line="29" pos:column="50"/></condition><then pos:line="29" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="13">fl<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">|=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">SSL_FLAG_VERIFY_CRL<pos:position pos:line="30" pos:column="38"/></name></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><call><name pos:line="31" pos:column="18">strcmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">flag<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"VERIFY_CRL_ALL"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call> <operator pos:line="31" pos:column="49">==<pos:position pos:line="31" pos:column="51"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="13">fl<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">|=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">SSL_FLAG_VERIFY_CRL_ALL<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt></block></then></if></elseif>

<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>

        <else pos:line="36" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">fatalf<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="string" pos:line="37" pos:column="20">"Unknown ssl flag '%s'"<pos:position pos:line="37" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">flag<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name pos:line="39" pos:column="9">flag<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">strtok<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">NULL<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="29">":,"<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">safe_free<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">tmp<pos:position pos:line="42" pos:column="18"/></name></expr></argument>)<pos:position pos:line="42" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="20"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">fl<pos:position pos:line="43" pos:column="14"/></name></expr>;<pos:position pos:line="43" pos:column="15"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

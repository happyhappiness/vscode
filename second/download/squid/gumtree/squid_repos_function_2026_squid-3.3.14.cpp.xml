<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2026_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">addHistory<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">label<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">aFile<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">int<pos:position pos:line="1" pos:column="58"/></name></type> <name pos:line="1" pos:column="59">aLine<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list> <block pos:line="1" pos:column="66">{
        <if pos:line="2" pos:column="9">if <condition pos:line="2" pos:column="12">(<expr><call><name><name pos:line="2" pos:column="13">calls<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">.<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">size<pos:position pos:line="2" pos:column="23"/></name></name><argument_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></argument_list></call> <operator pos:line="2" pos:column="26">&gt;<pos:position pos:line="2" pos:column="30"/></operator> <literal type="number" pos:line="2" pos:column="28">1000<pos:position pos:line="2" pos:column="32"/></literal></expr>)<pos:position pos:line="2" pos:column="33"/></condition><then pos:line="2" pos:column="33">
            <block type="pseudo"><return pos:line="3" pos:column="13">return;<pos:position pos:line="3" pos:column="20"/></return></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="5" pos:column="9">calls<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">.<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">push_back<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">(<argument><expr><operator pos:line="5" pos:column="25">new<pos:position pos:line="5" pos:column="28"/></operator> <call><name pos:line="5" pos:column="29">CBDataCall<pos:position pos:line="5" pos:column="39"/></name><argument_list pos:line="5" pos:column="39">(<argument><expr><name pos:line="5" pos:column="40">label<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">aFile<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="54">aLine<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3866_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Qos<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">Config<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">parseConfigLine<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* parse options ... */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">token<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* These are set as appropriate and then used to check whether the initial loop has been done */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">mark<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="boolean" pos:line="7" pos:column="17">false<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">tos<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* Assume preserve is true. We don't set at initialisation as this affects isHitTosActive().
       We have to do this now, as we may never match the 'tos' parameter below */</comment>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><operator pos:line="11" pos:column="5">!<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">USE_QOS_TOS<pos:position pos:line="11" pos:column="17"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">3<pos:position pos:line="12" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="15">DBG_CRITICAL<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"ERROR: Invalid option 'qos_flows'. QOS features not enabled in this build"<pos:position pos:line="12" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="106"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">self_destruct<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">()<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">( <expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">token<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <call><name><name pos:line="16" pos:column="22">ConfigParser<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">::<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">NextToken<pos:position pos:line="16" pos:column="45"/></name></name><argument_list pos:line="16" pos:column="45">()<pos:position pos:line="16" pos:column="47"/></argument_list></call><operator pos:line="16" pos:column="47">)<pos:position pos:line="16" pos:column="48"/></operator></expr> )<pos:position pos:line="16" pos:column="50"/></condition> <block pos:line="16" pos:column="51">{

        <comment type="line" pos:line="18" pos:column="9">// Work out TOS or mark. Default to TOS for backwards compatibility</comment>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">mark<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">||<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">tos<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><call><name pos:line="20" pos:column="17">strncmp<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">token<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="32">"mark"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="39">4<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call> <operator pos:line="20" pos:column="42">==<pos:position pos:line="20" pos:column="44"/></operator> <literal type="number" pos:line="20" pos:column="45">0<pos:position pos:line="20" pos:column="46"/></literal></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47"> <block pos:line="20" pos:column="48">{
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">SO_MARK<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">&amp;&amp;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="16">USE_LIBCAP<pos:position pos:line="21" pos:column="26"/></name></expr></cpp:if>
                <expr_stmt><expr><name pos:line="22" pos:column="17">mark<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="boolean" pos:line="22" pos:column="24">true<pos:position pos:line="22" pos:column="28"/></literal></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
                <comment type="line" pos:line="23" pos:column="17">// Assume preserve is true. We don't set at initialisation as this affects isHitNfmarkActive()</comment>
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">USE_LIBNETFILTERCONNTRACK<pos:position pos:line="24" pos:column="30"/></name></expr></cpp:if>
                <expr_stmt><expr><name pos:line="25" pos:column="17">preserveMissMark<pos:position pos:line="25" pos:column="33"/></name> <operator pos:line="25" pos:column="34">=<pos:position pos:line="25" pos:column="35"/></operator> <literal type="boolean" pos:line="25" pos:column="36">true<pos:position pos:line="25" pos:column="40"/></literal></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
<cpp:else pos:line="26" pos:column="1"># <cpp:directive pos:line="26" pos:column="3">else<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:else> <comment type="line" pos:line="26" pos:column="8">// USE_LIBNETFILTERCONNTRACK</comment>
                <expr_stmt><expr><name pos:line="27" pos:column="17">preserveMissMark<pos:position pos:line="27" pos:column="33"/></name> <operator pos:line="27" pos:column="34">=<pos:position pos:line="27" pos:column="35"/></operator> <literal type="boolean" pos:line="27" pos:column="36">false<pos:position pos:line="27" pos:column="41"/></literal></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="28" pos:column="17">debugs<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><literal type="number" pos:line="28" pos:column="24">3<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">DBG_IMPORTANT<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="42">"WARNING: Squid not compiled with Netfilter conntrack library. "<pos:position pos:line="28" pos:column="106"/></literal>
                       <operator pos:line="29" pos:column="24">&lt;&lt;<pos:position pos:line="29" pos:column="32"/></operator> <literal type="string" pos:line="29" pos:column="27">"Netfilter mark preservation not available."<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif> <comment type="line" pos:line="30" pos:column="8">// USE_LIBNETFILTERCONNTRACK</comment>
<cpp:elif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">elif<pos:position pos:line="31" pos:column="6"/></cpp:directive> <expr><name pos:line="31" pos:column="7">SO_MARK<pos:position pos:line="31" pos:column="14"/></name></expr></cpp:elif> <comment type="line" pos:line="31" pos:column="15">// SO_MARK &amp;&amp; USE_LIBCAP</comment>
                <expr_stmt><expr><call><name pos:line="32" pos:column="17">debugs<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="number" pos:line="32" pos:column="24">3<pos:position pos:line="32" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">DBG_CRITICAL<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="41">"ERROR: Invalid parameter 'mark' in qos_flows option. "<pos:position pos:line="32" pos:column="96"/></literal>
                       <operator pos:line="33" pos:column="24">&lt;&lt;<pos:position pos:line="33" pos:column="32"/></operator> <literal type="string" pos:line="33" pos:column="27">"Linux Netfilter marking not available without LIBCAP support."<pos:position pos:line="33" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="92"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">self_destruct<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">()<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else> <comment type="line" pos:line="35" pos:column="7">// SO_MARK &amp;&amp; USE_LIBCAP</comment>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">debugs<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="number" pos:line="36" pos:column="24">3<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="27">DBG_CRITICAL<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="41">"ERROR: Invalid parameter 'mark' in qos_flows option. "<pos:position pos:line="36" pos:column="96"/></literal>
                       <operator pos:line="37" pos:column="24">&lt;&lt;<pos:position pos:line="37" pos:column="32"/></operator> <literal type="string" pos:line="37" pos:column="27">"Linux Netfilter marking not available on this platform."<pos:position pos:line="37" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="86"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">self_destruct<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">()<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif> <comment type="line" pos:line="39" pos:column="8">// SO_MARK &amp;&amp; USE_LIBCAP</comment>
            }<pos:position pos:line="40" pos:column="14"/></block></then> <elseif pos:line="40" pos:column="15">else <if pos:line="40" pos:column="20">if <condition pos:line="40" pos:column="23">(<expr><call><name pos:line="40" pos:column="24">strncmp<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">token<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="39">"tos"<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="40" pos:column="45">3<pos:position pos:line="40" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call> <operator pos:line="40" pos:column="48">==<pos:position pos:line="40" pos:column="50"/></operator> <literal type="number" pos:line="40" pos:column="51">0<pos:position pos:line="40" pos:column="52"/></literal></expr>)<pos:position pos:line="40" pos:column="53"/></condition><then pos:line="40" pos:column="53"> <block pos:line="40" pos:column="54">{
                <expr_stmt><expr><name pos:line="41" pos:column="17">preserveMissTos<pos:position pos:line="41" pos:column="32"/></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator> <literal type="boolean" pos:line="41" pos:column="35">true<pos:position pos:line="41" pos:column="39"/></literal></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="42" pos:column="17">tos<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <literal type="boolean" pos:line="42" pos:column="23">true<pos:position pos:line="42" pos:column="27"/></literal></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if></elseif> <else pos:line="43" pos:column="15">else <block pos:line="43" pos:column="20">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">preserveMissTos<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator> <literal type="boolean" pos:line="44" pos:column="35">true<pos:position pos:line="44" pos:column="39"/></literal></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name pos:line="45" pos:column="17">tos<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <literal type="boolean" pos:line="45" pos:column="23">true<pos:position pos:line="45" pos:column="27"/></literal></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></else></if>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><call><name pos:line="49" pos:column="13">strncmp<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">token<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="28">"local-hit="<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="49" pos:column="41">10<pos:position pos:line="49" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call> <operator pos:line="49" pos:column="45">==<pos:position pos:line="49" pos:column="47"/></operator> <literal type="number" pos:line="49" pos:column="48">0<pos:position pos:line="49" pos:column="49"/></literal></expr>)<pos:position pos:line="49" pos:column="50"/></condition><then pos:line="49" pos:column="50"> <block pos:line="49" pos:column="51">{

            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">mark<pos:position pos:line="51" pos:column="21"/></name></expr>)<pos:position pos:line="51" pos:column="22"/></condition><then pos:line="51" pos:column="22"> <block pos:line="51" pos:column="23">{
                <if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><operator pos:line="52" pos:column="21">!<pos:position pos:line="52" pos:column="22"/></operator><call><name pos:line="52" pos:column="22">xstrtoui<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><operator pos:line="52" pos:column="31">&amp;<pos:position pos:line="52" pos:column="36"/></operator><name><name pos:line="52" pos:column="32">token<pos:position pos:line="52" pos:column="37"/></name><index pos:line="52" pos:column="37">[<expr><literal type="number" pos:line="52" pos:column="38">10<pos:position pos:line="52" pos:column="40"/></literal></expr>]<pos:position pos:line="52" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">NULL<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="49">&amp;<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="50">markLocalHit<pos:position pos:line="52" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="64">0<pos:position pos:line="52" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="52" pos:column="67">std<pos:position pos:line="52" pos:column="70"/></name><operator pos:line="52" pos:column="70">::<pos:position pos:line="52" pos:column="72"/></operator><name><name pos:line="52" pos:column="72">numeric_limits<pos:position pos:line="52" pos:column="86"/></name><argument_list type="generic" pos:line="52" pos:column="86">&lt;<argument><expr><name pos:line="52" pos:column="87">nfmark_t<pos:position pos:line="52" pos:column="95"/></name></expr></argument>&gt;<pos:position pos:line="52" pos:column="99"/></argument_list></name><operator pos:line="52" pos:column="96">::<pos:position pos:line="52" pos:column="98"/></operator><name pos:line="52" pos:column="98">max<pos:position pos:line="52" pos:column="101"/></name></name><argument_list pos:line="52" pos:column="101">()<pos:position pos:line="52" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="104"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="105"/></condition><then pos:line="52" pos:column="105"> <block pos:line="52" pos:column="106">{
                    <expr_stmt><expr><call><name pos:line="53" pos:column="21">debugs<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><literal type="number" pos:line="53" pos:column="28">3<pos:position pos:line="53" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="31">DBG_CRITICAL<pos:position pos:line="53" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="45">"ERROR: Bad mark local-hit value "<pos:position pos:line="53" pos:column="79"/></literal> <operator pos:line="53" pos:column="80">&lt;&lt;<pos:position pos:line="53" pos:column="88"/></operator> <operator pos:line="53" pos:column="83">&amp;<pos:position pos:line="53" pos:column="88"/></operator><name><name pos:line="53" pos:column="84">token<pos:position pos:line="53" pos:column="89"/></name><index pos:line="53" pos:column="89">[<expr><literal type="number" pos:line="53" pos:column="90">10<pos:position pos:line="53" pos:column="92"/></literal></expr>]<pos:position pos:line="53" pos:column="93"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="95"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="54" pos:column="21">self_destruct<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">()<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="55" pos:column="18"/></block></then></if>
            }<pos:position pos:line="56" pos:column="14"/></block></then> <else pos:line="56" pos:column="15">else <block pos:line="56" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="57" pos:column="17">unsigned<pos:position pos:line="57" pos:column="25"/></name> <name pos:line="57" pos:column="26">int<pos:position pos:line="57" pos:column="29"/></name></type> <name pos:line="57" pos:column="30">v<pos:position pos:line="57" pos:column="31"/></name> <init pos:line="57" pos:column="32">= <expr><literal type="number" pos:line="57" pos:column="34">0<pos:position pos:line="57" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="36"/></decl_stmt>
                <if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">!<pos:position pos:line="58" pos:column="22"/></operator><call><name pos:line="58" pos:column="22">xstrtoui<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name><name pos:line="58" pos:column="32">token<pos:position pos:line="58" pos:column="37"/></name><index pos:line="58" pos:column="37">[<expr><literal type="number" pos:line="58" pos:column="38">10<pos:position pos:line="58" pos:column="40"/></literal></expr>]<pos:position pos:line="58" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="43">NULL<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="49">&amp;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="50">v<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="53">0<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="58" pos:column="56">std<pos:position pos:line="58" pos:column="59"/></name><operator pos:line="58" pos:column="59">::<pos:position pos:line="58" pos:column="61"/></operator><name><name pos:line="58" pos:column="61">numeric_limits<pos:position pos:line="58" pos:column="75"/></name><argument_list type="generic" pos:line="58" pos:column="75">&lt;<argument><expr><name pos:line="58" pos:column="76">tos_t<pos:position pos:line="58" pos:column="81"/></name></expr></argument>&gt;<pos:position pos:line="58" pos:column="85"/></argument_list></name><operator pos:line="58" pos:column="82">::<pos:position pos:line="58" pos:column="84"/></operator><name pos:line="58" pos:column="84">max<pos:position pos:line="58" pos:column="87"/></name></name><argument_list pos:line="58" pos:column="87">()<pos:position pos:line="58" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="91"/></condition><then pos:line="58" pos:column="91"> <block pos:line="58" pos:column="92">{
                    <expr_stmt><expr><call><name pos:line="59" pos:column="21">debugs<pos:position pos:line="59" pos:column="27"/></name><argument_list pos:line="59" pos:column="27">(<argument><expr><literal type="number" pos:line="59" pos:column="28">3<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="31">DBG_CRITICAL<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="45">"ERROR: Bad TOS local-hit value "<pos:position pos:line="59" pos:column="78"/></literal> <operator pos:line="59" pos:column="79">&lt;&lt;<pos:position pos:line="59" pos:column="87"/></operator> <operator pos:line="59" pos:column="82">&amp;<pos:position pos:line="59" pos:column="87"/></operator><name><name pos:line="59" pos:column="83">token<pos:position pos:line="59" pos:column="88"/></name><index pos:line="59" pos:column="88">[<expr><literal type="number" pos:line="59" pos:column="89">10<pos:position pos:line="59" pos:column="91"/></literal></expr>]<pos:position pos:line="59" pos:column="92"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="94"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="60" pos:column="21">self_destruct<pos:position pos:line="60" pos:column="34"/></name><argument_list pos:line="60" pos:column="34">()<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="61" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="62" pos:column="17">tosLocalHit<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <operator pos:line="62" pos:column="31">(<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="32">tos_t<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">)<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="38">v<pos:position pos:line="62" pos:column="39"/></name></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="63" pos:column="14"/></block></else></if>

        }<pos:position pos:line="65" pos:column="10"/></block></then> <elseif pos:line="65" pos:column="11">else <if pos:line="65" pos:column="16">if <condition pos:line="65" pos:column="19">(<expr><call><name pos:line="65" pos:column="20">strncmp<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">token<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="35">"sibling-hit="<pos:position pos:line="65" pos:column="49"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="65" pos:column="50">12<pos:position pos:line="65" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call> <operator pos:line="65" pos:column="54">==<pos:position pos:line="65" pos:column="56"/></operator> <literal type="number" pos:line="65" pos:column="57">0<pos:position pos:line="65" pos:column="58"/></literal></expr>)<pos:position pos:line="65" pos:column="59"/></condition><then pos:line="65" pos:column="59"> <block pos:line="65" pos:column="60">{

            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name pos:line="67" pos:column="17">mark<pos:position pos:line="67" pos:column="21"/></name></expr>)<pos:position pos:line="67" pos:column="22"/></condition><then pos:line="67" pos:column="22"> <block pos:line="67" pos:column="23">{
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">!<pos:position pos:line="68" pos:column="22"/></operator><call><name pos:line="68" pos:column="22">xstrtoui<pos:position pos:line="68" pos:column="30"/></name><argument_list pos:line="68" pos:column="30">(<argument><expr><operator pos:line="68" pos:column="31">&amp;<pos:position pos:line="68" pos:column="36"/></operator><name><name pos:line="68" pos:column="32">token<pos:position pos:line="68" pos:column="37"/></name><index pos:line="68" pos:column="37">[<expr><literal type="number" pos:line="68" pos:column="38">12<pos:position pos:line="68" pos:column="40"/></literal></expr>]<pos:position pos:line="68" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="43">NULL<pos:position pos:line="68" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="49">&amp;<pos:position pos:line="68" pos:column="54"/></operator><name pos:line="68" pos:column="50">markSiblingHit<pos:position pos:line="68" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="66">0<pos:position pos:line="68" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="68" pos:column="69">std<pos:position pos:line="68" pos:column="72"/></name><operator pos:line="68" pos:column="72">::<pos:position pos:line="68" pos:column="74"/></operator><name><name pos:line="68" pos:column="74">numeric_limits<pos:position pos:line="68" pos:column="88"/></name><argument_list type="generic" pos:line="68" pos:column="88">&lt;<argument><expr><name pos:line="68" pos:column="89">nfmark_t<pos:position pos:line="68" pos:column="97"/></name></expr></argument>&gt;<pos:position pos:line="68" pos:column="101"/></argument_list></name><operator pos:line="68" pos:column="98">::<pos:position pos:line="68" pos:column="100"/></operator><name pos:line="68" pos:column="100">max<pos:position pos:line="68" pos:column="103"/></name></name><argument_list pos:line="68" pos:column="103">()<pos:position pos:line="68" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="106"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="107"/></condition><then pos:line="68" pos:column="107"> <block pos:line="68" pos:column="108">{
                    <expr_stmt><expr><call><name pos:line="69" pos:column="21">debugs<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><literal type="number" pos:line="69" pos:column="28">3<pos:position pos:line="69" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="31">DBG_CRITICAL<pos:position pos:line="69" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="45">"ERROR: Bad mark sibling-hit value "<pos:position pos:line="69" pos:column="81"/></literal> <operator pos:line="69" pos:column="82">&lt;&lt;<pos:position pos:line="69" pos:column="90"/></operator> <operator pos:line="69" pos:column="85">&amp;<pos:position pos:line="69" pos:column="90"/></operator><name><name pos:line="69" pos:column="86">token<pos:position pos:line="69" pos:column="91"/></name><index pos:line="69" pos:column="91">[<expr><literal type="number" pos:line="69" pos:column="92">12<pos:position pos:line="69" pos:column="94"/></literal></expr>]<pos:position pos:line="69" pos:column="95"/></index></name></expr></argument>)<pos:position pos:line="69" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="97"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="70" pos:column="21">self_destruct<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">()<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="71" pos:column="18"/></block></then></if>
            }<pos:position pos:line="72" pos:column="14"/></block></then> <else pos:line="72" pos:column="15">else <block pos:line="72" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="73" pos:column="17">unsigned<pos:position pos:line="73" pos:column="25"/></name> <name pos:line="73" pos:column="26">int<pos:position pos:line="73" pos:column="29"/></name></type> <name pos:line="73" pos:column="30">v<pos:position pos:line="73" pos:column="31"/></name> <init pos:line="73" pos:column="32">= <expr><literal type="number" pos:line="73" pos:column="34">0<pos:position pos:line="73" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="73" pos:column="36"/></decl_stmt>
                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><operator pos:line="74" pos:column="21">!<pos:position pos:line="74" pos:column="22"/></operator><call><name pos:line="74" pos:column="22">xstrtoui<pos:position pos:line="74" pos:column="30"/></name><argument_list pos:line="74" pos:column="30">(<argument><expr><operator pos:line="74" pos:column="31">&amp;<pos:position pos:line="74" pos:column="36"/></operator><name><name pos:line="74" pos:column="32">token<pos:position pos:line="74" pos:column="37"/></name><index pos:line="74" pos:column="37">[<expr><literal type="number" pos:line="74" pos:column="38">12<pos:position pos:line="74" pos:column="40"/></literal></expr>]<pos:position pos:line="74" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="43">NULL<pos:position pos:line="74" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="49">&amp;<pos:position pos:line="74" pos:column="54"/></operator><name pos:line="74" pos:column="50">v<pos:position pos:line="74" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="53">0<pos:position pos:line="74" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="74" pos:column="56">std<pos:position pos:line="74" pos:column="59"/></name><operator pos:line="74" pos:column="59">::<pos:position pos:line="74" pos:column="61"/></operator><name><name pos:line="74" pos:column="61">numeric_limits<pos:position pos:line="74" pos:column="75"/></name><argument_list type="generic" pos:line="74" pos:column="75">&lt;<argument><expr><name pos:line="74" pos:column="76">tos_t<pos:position pos:line="74" pos:column="81"/></name></expr></argument>&gt;<pos:position pos:line="74" pos:column="85"/></argument_list></name><operator pos:line="74" pos:column="82">::<pos:position pos:line="74" pos:column="84"/></operator><name pos:line="74" pos:column="84">max<pos:position pos:line="74" pos:column="87"/></name></name><argument_list pos:line="74" pos:column="87">()<pos:position pos:line="74" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="91"/></condition><then pos:line="74" pos:column="91"> <block pos:line="74" pos:column="92">{
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">debugs<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><literal type="number" pos:line="75" pos:column="28">3<pos:position pos:line="75" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="31">DBG_CRITICAL<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="45">"ERROR: Bad TOS sibling-hit value "<pos:position pos:line="75" pos:column="80"/></literal> <operator pos:line="75" pos:column="81">&lt;&lt;<pos:position pos:line="75" pos:column="89"/></operator> <operator pos:line="75" pos:column="84">&amp;<pos:position pos:line="75" pos:column="89"/></operator><name><name pos:line="75" pos:column="85">token<pos:position pos:line="75" pos:column="90"/></name><index pos:line="75" pos:column="90">[<expr><literal type="number" pos:line="75" pos:column="91">12<pos:position pos:line="75" pos:column="93"/></literal></expr>]<pos:position pos:line="75" pos:column="94"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="96"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="76" pos:column="21">self_destruct<pos:position pos:line="76" pos:column="34"/></name><argument_list pos:line="76" pos:column="34">()<pos:position pos:line="76" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="77" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="78" pos:column="17">tosSiblingHit<pos:position pos:line="78" pos:column="30"/></name> <operator pos:line="78" pos:column="31">=<pos:position pos:line="78" pos:column="32"/></operator> <operator pos:line="78" pos:column="33">(<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="34">tos_t<pos:position pos:line="78" pos:column="39"/></name><operator pos:line="78" pos:column="39">)<pos:position pos:line="78" pos:column="40"/></operator><name pos:line="78" pos:column="40">v<pos:position pos:line="78" pos:column="41"/></name></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></else></if>

        }<pos:position pos:line="81" pos:column="10"/></block></then></if></elseif> <elseif pos:line="81" pos:column="11">else <if pos:line="81" pos:column="16">if <condition pos:line="81" pos:column="19">(<expr><call><name pos:line="81" pos:column="20">strncmp<pos:position pos:line="81" pos:column="27"/></name><argument_list pos:line="81" pos:column="27">(<argument><expr><name pos:line="81" pos:column="28">token<pos:position pos:line="81" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="35">"parent-hit="<pos:position pos:line="81" pos:column="48"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="81" pos:column="49">11<pos:position pos:line="81" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="52"/></argument_list></call> <operator pos:line="81" pos:column="53">==<pos:position pos:line="81" pos:column="55"/></operator> <literal type="number" pos:line="81" pos:column="56">0<pos:position pos:line="81" pos:column="57"/></literal></expr>)<pos:position pos:line="81" pos:column="58"/></condition><then pos:line="81" pos:column="58"> <block pos:line="81" pos:column="59">{

            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">mark<pos:position pos:line="83" pos:column="21"/></name></expr>)<pos:position pos:line="83" pos:column="22"/></condition><then pos:line="83" pos:column="22"> <block pos:line="83" pos:column="23">{
                <if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><operator pos:line="84" pos:column="21">!<pos:position pos:line="84" pos:column="22"/></operator><call><name pos:line="84" pos:column="22">xstrtoui<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><operator pos:line="84" pos:column="31">&amp;<pos:position pos:line="84" pos:column="36"/></operator><name><name pos:line="84" pos:column="32">token<pos:position pos:line="84" pos:column="37"/></name><index pos:line="84" pos:column="37">[<expr><literal type="number" pos:line="84" pos:column="38">11<pos:position pos:line="84" pos:column="40"/></literal></expr>]<pos:position pos:line="84" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="43">NULL<pos:position pos:line="84" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="49">&amp;<pos:position pos:line="84" pos:column="54"/></operator><name pos:line="84" pos:column="50">markParentHit<pos:position pos:line="84" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="65">0<pos:position pos:line="84" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="84" pos:column="68">std<pos:position pos:line="84" pos:column="71"/></name><operator pos:line="84" pos:column="71">::<pos:position pos:line="84" pos:column="73"/></operator><name><name pos:line="84" pos:column="73">numeric_limits<pos:position pos:line="84" pos:column="87"/></name><argument_list type="generic" pos:line="84" pos:column="87">&lt;<argument><expr><name pos:line="84" pos:column="88">nfmark_t<pos:position pos:line="84" pos:column="96"/></name></expr></argument>&gt;<pos:position pos:line="84" pos:column="100"/></argument_list></name><operator pos:line="84" pos:column="97">::<pos:position pos:line="84" pos:column="99"/></operator><name pos:line="84" pos:column="99">max<pos:position pos:line="84" pos:column="102"/></name></name><argument_list pos:line="84" pos:column="102">()<pos:position pos:line="84" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="105"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="106"/></condition><then pos:line="84" pos:column="106"> <block pos:line="84" pos:column="107">{
                    <expr_stmt><expr><call><name pos:line="85" pos:column="21">debugs<pos:position pos:line="85" pos:column="27"/></name><argument_list pos:line="85" pos:column="27">(<argument><expr><literal type="number" pos:line="85" pos:column="28">3<pos:position pos:line="85" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="31">DBG_CRITICAL<pos:position pos:line="85" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="45">"ERROR: Bad mark parent-hit value "<pos:position pos:line="85" pos:column="80"/></literal> <operator pos:line="85" pos:column="81">&lt;&lt;<pos:position pos:line="85" pos:column="89"/></operator> <operator pos:line="85" pos:column="84">&amp;<pos:position pos:line="85" pos:column="89"/></operator><name><name pos:line="85" pos:column="85">token<pos:position pos:line="85" pos:column="90"/></name><index pos:line="85" pos:column="90">[<expr><literal type="number" pos:line="85" pos:column="91">11<pos:position pos:line="85" pos:column="93"/></literal></expr>]<pos:position pos:line="85" pos:column="94"/></index></name></expr></argument>)<pos:position pos:line="85" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="96"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">self_destruct<pos:position pos:line="86" pos:column="34"/></name><argument_list pos:line="86" pos:column="34">()<pos:position pos:line="86" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="87" pos:column="18"/></block></then></if>
            }<pos:position pos:line="88" pos:column="14"/></block></then> <else pos:line="88" pos:column="15">else <block pos:line="88" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="89" pos:column="17">unsigned<pos:position pos:line="89" pos:column="25"/></name> <name pos:line="89" pos:column="26">int<pos:position pos:line="89" pos:column="29"/></name></type> <name pos:line="89" pos:column="30">v<pos:position pos:line="89" pos:column="31"/></name> <init pos:line="89" pos:column="32">= <expr><literal type="number" pos:line="89" pos:column="34">0<pos:position pos:line="89" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="89" pos:column="36"/></decl_stmt>
                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">!<pos:position pos:line="90" pos:column="22"/></operator><call><name pos:line="90" pos:column="22">xstrtoui<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><operator pos:line="90" pos:column="31">&amp;<pos:position pos:line="90" pos:column="36"/></operator><name><name pos:line="90" pos:column="32">token<pos:position pos:line="90" pos:column="37"/></name><index pos:line="90" pos:column="37">[<expr><literal type="number" pos:line="90" pos:column="38">11<pos:position pos:line="90" pos:column="40"/></literal></expr>]<pos:position pos:line="90" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="43">NULL<pos:position pos:line="90" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="49">&amp;<pos:position pos:line="90" pos:column="54"/></operator><name pos:line="90" pos:column="50">v<pos:position pos:line="90" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="53">0<pos:position pos:line="90" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="90" pos:column="56">std<pos:position pos:line="90" pos:column="59"/></name><operator pos:line="90" pos:column="59">::<pos:position pos:line="90" pos:column="61"/></operator><name><name pos:line="90" pos:column="61">numeric_limits<pos:position pos:line="90" pos:column="75"/></name><argument_list type="generic" pos:line="90" pos:column="75">&lt;<argument><expr><name pos:line="90" pos:column="76">tos_t<pos:position pos:line="90" pos:column="81"/></name></expr></argument>&gt;<pos:position pos:line="90" pos:column="85"/></argument_list></name><operator pos:line="90" pos:column="82">::<pos:position pos:line="90" pos:column="84"/></operator><name pos:line="90" pos:column="84">max<pos:position pos:line="90" pos:column="87"/></name></name><argument_list pos:line="90" pos:column="87">()<pos:position pos:line="90" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="91"/></condition><then pos:line="90" pos:column="91"> <block pos:line="90" pos:column="92">{
                    <expr_stmt><expr><call><name pos:line="91" pos:column="21">debugs<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><literal type="number" pos:line="91" pos:column="28">3<pos:position pos:line="91" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="31">DBG_CRITICAL<pos:position pos:line="91" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="45">"ERROR: Bad TOS parent-hit value "<pos:position pos:line="91" pos:column="79"/></literal> <operator pos:line="91" pos:column="80">&lt;&lt;<pos:position pos:line="91" pos:column="88"/></operator> <operator pos:line="91" pos:column="83">&amp;<pos:position pos:line="91" pos:column="88"/></operator><name><name pos:line="91" pos:column="84">token<pos:position pos:line="91" pos:column="89"/></name><index pos:line="91" pos:column="89">[<expr><literal type="number" pos:line="91" pos:column="90">11<pos:position pos:line="91" pos:column="92"/></literal></expr>]<pos:position pos:line="91" pos:column="93"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="95"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="92" pos:column="21">self_destruct<pos:position pos:line="92" pos:column="34"/></name><argument_list pos:line="92" pos:column="34">()<pos:position pos:line="92" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="93" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="94" pos:column="17">tosParentHit<pos:position pos:line="94" pos:column="29"/></name> <operator pos:line="94" pos:column="30">=<pos:position pos:line="94" pos:column="31"/></operator> <operator pos:line="94" pos:column="32">(<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="33">tos_t<pos:position pos:line="94" pos:column="38"/></name><operator pos:line="94" pos:column="38">)<pos:position pos:line="94" pos:column="39"/></operator><name pos:line="94" pos:column="39">v<pos:position pos:line="94" pos:column="40"/></name></expr>;<pos:position pos:line="94" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="95" pos:column="14"/></block></else></if>

        }<pos:position pos:line="97" pos:column="10"/></block></then></if></elseif> <elseif pos:line="97" pos:column="11">else <if pos:line="97" pos:column="16">if <condition pos:line="97" pos:column="19">(<expr><call><name pos:line="97" pos:column="20">strncmp<pos:position pos:line="97" pos:column="27"/></name><argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">token<pos:position pos:line="97" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="35">"miss="<pos:position pos:line="97" pos:column="42"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="97" pos:column="43">5<pos:position pos:line="97" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="45"/></argument_list></call> <operator pos:line="97" pos:column="46">==<pos:position pos:line="97" pos:column="48"/></operator> <literal type="number" pos:line="97" pos:column="49">0<pos:position pos:line="97" pos:column="50"/></literal></expr>)<pos:position pos:line="97" pos:column="51"/></condition><then pos:line="97" pos:column="51"> <block pos:line="97" pos:column="52">{

            <decl_stmt><decl><type><name pos:line="99" pos:column="13">char<pos:position pos:line="99" pos:column="17"/></name> <modifier pos:line="99" pos:column="18">*<pos:position pos:line="99" pos:column="19"/></modifier></type><name pos:line="99" pos:column="19">end<pos:position pos:line="99" pos:column="22"/></name></decl>;<pos:position pos:line="99" pos:column="23"/></decl_stmt>
            <if pos:line="100" pos:column="13">if <condition pos:line="100" pos:column="16">(<expr><name pos:line="100" pos:column="17">mark<pos:position pos:line="100" pos:column="21"/></name></expr>)<pos:position pos:line="100" pos:column="22"/></condition><then pos:line="100" pos:column="22"> <block pos:line="100" pos:column="23">{
                <if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><operator pos:line="101" pos:column="21">!<pos:position pos:line="101" pos:column="22"/></operator><call><name pos:line="101" pos:column="22">xstrtoui<pos:position pos:line="101" pos:column="30"/></name><argument_list pos:line="101" pos:column="30">(<argument><expr><operator pos:line="101" pos:column="31">&amp;<pos:position pos:line="101" pos:column="36"/></operator><name><name pos:line="101" pos:column="32">token<pos:position pos:line="101" pos:column="37"/></name><index pos:line="101" pos:column="37">[<expr><literal type="number" pos:line="101" pos:column="38">5<pos:position pos:line="101" pos:column="39"/></literal></expr>]<pos:position pos:line="101" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="42">&amp;<pos:position pos:line="101" pos:column="47"/></operator><name pos:line="101" pos:column="43">end<pos:position pos:line="101" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="48">&amp;<pos:position pos:line="101" pos:column="53"/></operator><name pos:line="101" pos:column="49">markMiss<pos:position pos:line="101" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="59">0<pos:position pos:line="101" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="101" pos:column="62">std<pos:position pos:line="101" pos:column="65"/></name><operator pos:line="101" pos:column="65">::<pos:position pos:line="101" pos:column="67"/></operator><name><name pos:line="101" pos:column="67">numeric_limits<pos:position pos:line="101" pos:column="81"/></name><argument_list type="generic" pos:line="101" pos:column="81">&lt;<argument><expr><name pos:line="101" pos:column="82">nfmark_t<pos:position pos:line="101" pos:column="90"/></name></expr></argument>&gt;<pos:position pos:line="101" pos:column="94"/></argument_list></name><operator pos:line="101" pos:column="91">::<pos:position pos:line="101" pos:column="93"/></operator><name pos:line="101" pos:column="93">max<pos:position pos:line="101" pos:column="96"/></name></name><argument_list pos:line="101" pos:column="96">()<pos:position pos:line="101" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="101" pos:column="99"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="100"/></condition><then pos:line="101" pos:column="100"> <block pos:line="101" pos:column="101">{
                    <expr_stmt><expr><call><name pos:line="102" pos:column="21">debugs<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><literal type="number" pos:line="102" pos:column="28">3<pos:position pos:line="102" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="31">DBG_CRITICAL<pos:position pos:line="102" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="45">"ERROR: Bad mark miss value "<pos:position pos:line="102" pos:column="74"/></literal> <operator pos:line="102" pos:column="75">&lt;&lt;<pos:position pos:line="102" pos:column="83"/></operator> <operator pos:line="102" pos:column="78">&amp;<pos:position pos:line="102" pos:column="83"/></operator><name><name pos:line="102" pos:column="79">token<pos:position pos:line="102" pos:column="84"/></name><index pos:line="102" pos:column="84">[<expr><literal type="number" pos:line="102" pos:column="85">5<pos:position pos:line="102" pos:column="86"/></literal></expr>]<pos:position pos:line="102" pos:column="87"/></index></name></expr></argument>)<pos:position pos:line="102" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="89"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="103" pos:column="21">self_destruct<pos:position pos:line="103" pos:column="34"/></name><argument_list pos:line="103" pos:column="34">()<pos:position pos:line="103" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="104" pos:column="18"/></block></then></if>
                <if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><operator pos:line="105" pos:column="21">*<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="22">end<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">==<pos:position pos:line="105" pos:column="28"/></operator> <literal type="char" pos:line="105" pos:column="29">'/'<pos:position pos:line="105" pos:column="32"/></literal></expr>)<pos:position pos:line="105" pos:column="33"/></condition><then pos:line="105" pos:column="33"> <block pos:line="105" pos:column="34">{
                    <if pos:line="106" pos:column="21">if <condition pos:line="106" pos:column="24">(<expr><operator pos:line="106" pos:column="25">!<pos:position pos:line="106" pos:column="26"/></operator><call><name pos:line="106" pos:column="26">xstrtoui<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name pos:line="106" pos:column="35">end<pos:position pos:line="106" pos:column="38"/></name> <operator pos:line="106" pos:column="39">+<pos:position pos:line="106" pos:column="40"/></operator> <literal type="number" pos:line="106" pos:column="41">1<pos:position pos:line="106" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="44">NULL<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="50">&amp;<pos:position pos:line="106" pos:column="55"/></operator><name pos:line="106" pos:column="51">markMissMask<pos:position pos:line="106" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="65">0<pos:position pos:line="106" pos:column="66"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="106" pos:column="68">std<pos:position pos:line="106" pos:column="71"/></name><operator pos:line="106" pos:column="71">::<pos:position pos:line="106" pos:column="73"/></operator><name><name pos:line="106" pos:column="73">numeric_limits<pos:position pos:line="106" pos:column="87"/></name><argument_list type="generic" pos:line="106" pos:column="87">&lt;<argument><expr><name pos:line="106" pos:column="88">nfmark_t<pos:position pos:line="106" pos:column="96"/></name></expr></argument>&gt;<pos:position pos:line="106" pos:column="100"/></argument_list></name><operator pos:line="106" pos:column="97">::<pos:position pos:line="106" pos:column="99"/></operator><name pos:line="106" pos:column="99">max<pos:position pos:line="106" pos:column="102"/></name></name><argument_list pos:line="106" pos:column="102">()<pos:position pos:line="106" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="105"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="106"/></condition><then pos:line="106" pos:column="106"> <block pos:line="106" pos:column="107">{
                        <expr_stmt><expr><call><name pos:line="107" pos:column="25">debugs<pos:position pos:line="107" pos:column="31"/></name><argument_list pos:line="107" pos:column="31">(<argument><expr><literal type="number" pos:line="107" pos:column="32">3<pos:position pos:line="107" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="35">DBG_CRITICAL<pos:position pos:line="107" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="49">"ERROR: Bad mark miss mask value "<pos:position pos:line="107" pos:column="83"/></literal> <operator pos:line="107" pos:column="84">&lt;&lt;<pos:position pos:line="107" pos:column="92"/></operator> <operator pos:line="107" pos:column="87">(<pos:position pos:line="107" pos:column="88"/></operator><name pos:line="107" pos:column="88">end<pos:position pos:line="107" pos:column="91"/></name> <operator pos:line="107" pos:column="92">+<pos:position pos:line="107" pos:column="93"/></operator> <literal type="number" pos:line="107" pos:column="94">1<pos:position pos:line="107" pos:column="95"/></literal><operator pos:line="107" pos:column="95">)<pos:position pos:line="107" pos:column="96"/></operator> <operator pos:line="107" pos:column="97">&lt;&lt;<pos:position pos:line="107" pos:column="105"/></operator> <literal type="string" pos:line="107" pos:column="100">". Using 0xFFFFFFFF instead."<pos:position pos:line="107" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="131"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="108" pos:column="25">markMissMask<pos:position pos:line="108" pos:column="37"/></name> <operator pos:line="108" pos:column="38">=<pos:position pos:line="108" pos:column="39"/></operator> <literal type="number" pos:line="108" pos:column="40">0xFFFFFFFF<pos:position pos:line="108" pos:column="50"/></literal></expr>;<pos:position pos:line="108" pos:column="51"/></expr_stmt>
                    }<pos:position pos:line="109" pos:column="22"/></block></then></if>
                }<pos:position pos:line="110" pos:column="18"/></block></then> <else pos:line="110" pos:column="19">else <block pos:line="110" pos:column="24">{
                    <expr_stmt><expr><name pos:line="111" pos:column="21">markMissMask<pos:position pos:line="111" pos:column="33"/></name> <operator pos:line="111" pos:column="34">=<pos:position pos:line="111" pos:column="35"/></operator> <literal type="number" pos:line="111" pos:column="36">0xFFFFFFFF<pos:position pos:line="111" pos:column="46"/></literal></expr>;<pos:position pos:line="111" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="112" pos:column="18"/></block></else></if>
            }<pos:position pos:line="113" pos:column="14"/></block></then> <else pos:line="113" pos:column="15">else <block pos:line="113" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="114" pos:column="17">unsigned<pos:position pos:line="114" pos:column="25"/></name> <name pos:line="114" pos:column="26">int<pos:position pos:line="114" pos:column="29"/></name></type> <name pos:line="114" pos:column="30">v<pos:position pos:line="114" pos:column="31"/></name> <init pos:line="114" pos:column="32">= <expr><literal type="number" pos:line="114" pos:column="34">0<pos:position pos:line="114" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="114" pos:column="36"/></decl_stmt>
                <if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><operator pos:line="115" pos:column="21">!<pos:position pos:line="115" pos:column="22"/></operator><call><name pos:line="115" pos:column="22">xstrtoui<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">(<argument><expr><operator pos:line="115" pos:column="31">&amp;<pos:position pos:line="115" pos:column="36"/></operator><name><name pos:line="115" pos:column="32">token<pos:position pos:line="115" pos:column="37"/></name><index pos:line="115" pos:column="37">[<expr><literal type="number" pos:line="115" pos:column="38">5<pos:position pos:line="115" pos:column="39"/></literal></expr>]<pos:position pos:line="115" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="42">&amp;<pos:position pos:line="115" pos:column="47"/></operator><name pos:line="115" pos:column="43">end<pos:position pos:line="115" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="115" pos:column="48">&amp;<pos:position pos:line="115" pos:column="53"/></operator><name pos:line="115" pos:column="49">v<pos:position pos:line="115" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="52">0<pos:position pos:line="115" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="115" pos:column="55">std<pos:position pos:line="115" pos:column="58"/></name><operator pos:line="115" pos:column="58">::<pos:position pos:line="115" pos:column="60"/></operator><name><name pos:line="115" pos:column="60">numeric_limits<pos:position pos:line="115" pos:column="74"/></name><argument_list type="generic" pos:line="115" pos:column="74">&lt;<argument><expr><name pos:line="115" pos:column="75">tos_t<pos:position pos:line="115" pos:column="80"/></name></expr></argument>&gt;<pos:position pos:line="115" pos:column="84"/></argument_list></name><operator pos:line="115" pos:column="81">::<pos:position pos:line="115" pos:column="83"/></operator><name pos:line="115" pos:column="83">max<pos:position pos:line="115" pos:column="86"/></name></name><argument_list pos:line="115" pos:column="86">()<pos:position pos:line="115" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="90"/></condition><then pos:line="115" pos:column="90"> <block pos:line="115" pos:column="91">{
                    <expr_stmt><expr><call><name pos:line="116" pos:column="21">debugs<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><literal type="number" pos:line="116" pos:column="28">3<pos:position pos:line="116" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="31">DBG_CRITICAL<pos:position pos:line="116" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="45">"ERROR: Bad TOS miss value "<pos:position pos:line="116" pos:column="73"/></literal> <operator pos:line="116" pos:column="74">&lt;&lt;<pos:position pos:line="116" pos:column="82"/></operator> <operator pos:line="116" pos:column="77">&amp;<pos:position pos:line="116" pos:column="82"/></operator><name><name pos:line="116" pos:column="78">token<pos:position pos:line="116" pos:column="83"/></name><index pos:line="116" pos:column="83">[<expr><literal type="number" pos:line="116" pos:column="84">5<pos:position pos:line="116" pos:column="85"/></literal></expr>]<pos:position pos:line="116" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="116" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="88"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="117" pos:column="21">self_destruct<pos:position pos:line="117" pos:column="34"/></name><argument_list pos:line="117" pos:column="34">()<pos:position pos:line="117" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="118" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="119" pos:column="17">tosMiss<pos:position pos:line="119" pos:column="24"/></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <operator pos:line="119" pos:column="27">(<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="28">tos_t<pos:position pos:line="119" pos:column="33"/></name><operator pos:line="119" pos:column="33">)<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="34">v<pos:position pos:line="119" pos:column="35"/></name></expr>;<pos:position pos:line="119" pos:column="36"/></expr_stmt>
                <if pos:line="120" pos:column="17">if <condition pos:line="120" pos:column="20">(<expr><operator pos:line="120" pos:column="21">*<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="22">end<pos:position pos:line="120" pos:column="25"/></name> <operator pos:line="120" pos:column="26">==<pos:position pos:line="120" pos:column="28"/></operator> <literal type="char" pos:line="120" pos:column="29">'/'<pos:position pos:line="120" pos:column="32"/></literal></expr>)<pos:position pos:line="120" pos:column="33"/></condition><then pos:line="120" pos:column="33"> <block pos:line="120" pos:column="34">{
                    <if pos:line="121" pos:column="21">if <condition pos:line="121" pos:column="24">(<expr><operator pos:line="121" pos:column="25">!<pos:position pos:line="121" pos:column="26"/></operator><call><name pos:line="121" pos:column="26">xstrtoui<pos:position pos:line="121" pos:column="34"/></name><argument_list pos:line="121" pos:column="34">(<argument><expr><name pos:line="121" pos:column="35">end<pos:position pos:line="121" pos:column="38"/></name> <operator pos:line="121" pos:column="39">+<pos:position pos:line="121" pos:column="40"/></operator> <literal type="number" pos:line="121" pos:column="41">1<pos:position pos:line="121" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="44">NULL<pos:position pos:line="121" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="50">&amp;<pos:position pos:line="121" pos:column="55"/></operator><name pos:line="121" pos:column="51">v<pos:position pos:line="121" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="54">0<pos:position pos:line="121" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="121" pos:column="57">std<pos:position pos:line="121" pos:column="60"/></name><operator pos:line="121" pos:column="60">::<pos:position pos:line="121" pos:column="62"/></operator><name><name pos:line="121" pos:column="62">numeric_limits<pos:position pos:line="121" pos:column="76"/></name><argument_list type="generic" pos:line="121" pos:column="76">&lt;<argument><expr><name pos:line="121" pos:column="77">tos_t<pos:position pos:line="121" pos:column="82"/></name></expr></argument>&gt;<pos:position pos:line="121" pos:column="86"/></argument_list></name><operator pos:line="121" pos:column="83">::<pos:position pos:line="121" pos:column="85"/></operator><name pos:line="121" pos:column="85">max<pos:position pos:line="121" pos:column="88"/></name></name><argument_list pos:line="121" pos:column="88">()<pos:position pos:line="121" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="121" pos:column="91"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="92"/></condition><then pos:line="121" pos:column="92"> <block pos:line="121" pos:column="93">{
                        <expr_stmt><expr><call><name pos:line="122" pos:column="25">debugs<pos:position pos:line="122" pos:column="31"/></name><argument_list pos:line="122" pos:column="31">(<argument><expr><literal type="number" pos:line="122" pos:column="32">3<pos:position pos:line="122" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="35">DBG_CRITICAL<pos:position pos:line="122" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="49">"ERROR: Bad TOS miss mask value "<pos:position pos:line="122" pos:column="82"/></literal> <operator pos:line="122" pos:column="83">&lt;&lt;<pos:position pos:line="122" pos:column="91"/></operator> <operator pos:line="122" pos:column="86">(<pos:position pos:line="122" pos:column="87"/></operator><name pos:line="122" pos:column="87">end<pos:position pos:line="122" pos:column="90"/></name> <operator pos:line="122" pos:column="91">+<pos:position pos:line="122" pos:column="92"/></operator> <literal type="number" pos:line="122" pos:column="93">1<pos:position pos:line="122" pos:column="94"/></literal><operator pos:line="122" pos:column="94">)<pos:position pos:line="122" pos:column="95"/></operator> <operator pos:line="122" pos:column="96">&lt;&lt;<pos:position pos:line="122" pos:column="104"/></operator> <literal type="string" pos:line="122" pos:column="99">". Using 0xFF instead."<pos:position pos:line="122" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="124"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="123" pos:column="25">tosMissMask<pos:position pos:line="123" pos:column="36"/></name> <operator pos:line="123" pos:column="37">=<pos:position pos:line="123" pos:column="38"/></operator> <literal type="number" pos:line="123" pos:column="39">0xFF<pos:position pos:line="123" pos:column="43"/></literal></expr>;<pos:position pos:line="123" pos:column="44"/></expr_stmt>
                    }<pos:position pos:line="124" pos:column="22"/></block></then> <else pos:line="124" pos:column="23">else
                        <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="25">tosMissMask<pos:position pos:line="125" pos:column="36"/></name> <operator pos:line="125" pos:column="37">=<pos:position pos:line="125" pos:column="38"/></operator> <operator pos:line="125" pos:column="39">(<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="40">tos_t<pos:position pos:line="125" pos:column="45"/></name><operator pos:line="125" pos:column="45">)<pos:position pos:line="125" pos:column="46"/></operator><name pos:line="125" pos:column="46">v<pos:position pos:line="125" pos:column="47"/></name></expr>;<pos:position pos:line="125" pos:column="48"/></expr_stmt></block></else></if>
                }<pos:position pos:line="126" pos:column="18"/></block></then> <else pos:line="126" pos:column="19">else <block pos:line="126" pos:column="24">{
                    <expr_stmt><expr><name pos:line="127" pos:column="21">tosMissMask<pos:position pos:line="127" pos:column="32"/></name> <operator pos:line="127" pos:column="33">=<pos:position pos:line="127" pos:column="34"/></operator> <literal type="number" pos:line="127" pos:column="35">0xFF<pos:position pos:line="127" pos:column="39"/></literal></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="128" pos:column="18"/></block></else></if>
            }<pos:position pos:line="129" pos:column="14"/></block></else></if>

        }<pos:position pos:line="131" pos:column="10"/></block></then></if></elseif> <elseif pos:line="131" pos:column="11">else <if pos:line="131" pos:column="16">if <condition pos:line="131" pos:column="19">(<expr><call><name pos:line="131" pos:column="20">strcmp<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">(<argument><expr><name pos:line="131" pos:column="27">token<pos:position pos:line="131" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="34">"disable-preserve-miss"<pos:position pos:line="131" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="58"/></argument_list></call> <operator pos:line="131" pos:column="59">==<pos:position pos:line="131" pos:column="61"/></operator> <literal type="number" pos:line="131" pos:column="62">0<pos:position pos:line="131" pos:column="63"/></literal></expr>)<pos:position pos:line="131" pos:column="64"/></condition><then pos:line="131" pos:column="64"> <block pos:line="131" pos:column="65">{

            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><name pos:line="133" pos:column="17">preserveMissTosMask<pos:position pos:line="133" pos:column="36"/></name><operator pos:line="133" pos:column="36">!=<pos:position pos:line="133" pos:column="38"/></operator><literal type="number" pos:line="133" pos:column="38">0xFFU<pos:position pos:line="133" pos:column="43"/></literal> <operator pos:line="133" pos:column="44">||<pos:position pos:line="133" pos:column="46"/></operator> <name pos:line="133" pos:column="47">preserveMissMarkMask<pos:position pos:line="133" pos:column="67"/></name><operator pos:line="133" pos:column="67">!=<pos:position pos:line="133" pos:column="69"/></operator><literal type="number" pos:line="133" pos:column="69">0xFFFFFFFFU<pos:position pos:line="133" pos:column="80"/></literal></expr>)<pos:position pos:line="133" pos:column="81"/></condition><then pos:line="133" pos:column="81"> <block pos:line="133" pos:column="82">{
                <expr_stmt><expr><call><name pos:line="134" pos:column="17">debugs<pos:position pos:line="134" pos:column="23"/></name><argument_list pos:line="134" pos:column="23">(<argument><expr><literal type="number" pos:line="134" pos:column="24">3<pos:position pos:line="134" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="27">DBG_CRITICAL<pos:position pos:line="134" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="41">"ERROR: miss-mask feature cannot be set with disable-preserve-miss"<pos:position pos:line="134" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="110"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">self_destruct<pos:position pos:line="135" pos:column="30"/></name><argument_list pos:line="135" pos:column="30">()<pos:position pos:line="135" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="136" pos:column="14"/></block></then></if>
            <if pos:line="137" pos:column="13">if <condition pos:line="137" pos:column="16">(<expr><name pos:line="137" pos:column="17">mark<pos:position pos:line="137" pos:column="21"/></name></expr>)<pos:position pos:line="137" pos:column="22"/></condition><then pos:line="137" pos:column="22"> <block pos:line="137" pos:column="23">{
                <expr_stmt><expr><name pos:line="138" pos:column="17">preserveMissMark<pos:position pos:line="138" pos:column="33"/></name> <operator pos:line="138" pos:column="34">=<pos:position pos:line="138" pos:column="35"/></operator> <literal type="boolean" pos:line="138" pos:column="36">false<pos:position pos:line="138" pos:column="41"/></literal></expr>;<pos:position pos:line="138" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="139" pos:column="17">preserveMissMarkMask<pos:position pos:line="139" pos:column="37"/></name> <operator pos:line="139" pos:column="38">=<pos:position pos:line="139" pos:column="39"/></operator> <literal type="number" pos:line="139" pos:column="40">0<pos:position pos:line="139" pos:column="41"/></literal></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="140" pos:column="14"/></block></then> <else pos:line="140" pos:column="15">else <block pos:line="140" pos:column="20">{
                <expr_stmt><expr><name pos:line="141" pos:column="17">preserveMissTos<pos:position pos:line="141" pos:column="32"/></name> <operator pos:line="141" pos:column="33">=<pos:position pos:line="141" pos:column="34"/></operator> <literal type="boolean" pos:line="141" pos:column="35">false<pos:position pos:line="141" pos:column="40"/></literal></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="142" pos:column="17">preserveMissTosMask<pos:position pos:line="142" pos:column="36"/></name> <operator pos:line="142" pos:column="37">=<pos:position pos:line="142" pos:column="38"/></operator> <literal type="number" pos:line="142" pos:column="39">0<pos:position pos:line="142" pos:column="40"/></literal></expr>;<pos:position pos:line="142" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="143" pos:column="14"/></block></else></if>

        }<pos:position pos:line="145" pos:column="10"/></block></then></if></elseif> <elseif pos:line="145" pos:column="11">else <if pos:line="145" pos:column="16">if <condition pos:line="145" pos:column="19">(<expr><call><name pos:line="145" pos:column="20">strncmp<pos:position pos:line="145" pos:column="27"/></name><argument_list pos:line="145" pos:column="27">(<argument><expr><name pos:line="145" pos:column="28">token<pos:position pos:line="145" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="35">"miss-mask="<pos:position pos:line="145" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="145" pos:column="48">10<pos:position pos:line="145" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="51"/></argument_list></call> <operator pos:line="145" pos:column="52">==<pos:position pos:line="145" pos:column="54"/></operator> <literal type="number" pos:line="145" pos:column="55">0<pos:position pos:line="145" pos:column="56"/></literal></expr>)<pos:position pos:line="145" pos:column="57"/></condition><then pos:line="145" pos:column="57"> <block pos:line="145" pos:column="58">{

            <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><name pos:line="147" pos:column="17">mark<pos:position pos:line="147" pos:column="21"/></name> <operator pos:line="147" pos:column="22">&amp;&amp;<pos:position pos:line="147" pos:column="32"/></operator> <name pos:line="147" pos:column="25">preserveMissMark<pos:position pos:line="147" pos:column="41"/></name></expr>)<pos:position pos:line="147" pos:column="42"/></condition><then pos:line="147" pos:column="42"> <block pos:line="147" pos:column="43">{
                <if pos:line="148" pos:column="17">if <condition pos:line="148" pos:column="20">(<expr><operator pos:line="148" pos:column="21">!<pos:position pos:line="148" pos:column="22"/></operator><call><name pos:line="148" pos:column="22">xstrtoui<pos:position pos:line="148" pos:column="30"/></name><argument_list pos:line="148" pos:column="30">(<argument><expr><operator pos:line="148" pos:column="31">&amp;<pos:position pos:line="148" pos:column="36"/></operator><name><name pos:line="148" pos:column="32">token<pos:position pos:line="148" pos:column="37"/></name><index pos:line="148" pos:column="37">[<expr><literal type="number" pos:line="148" pos:column="38">10<pos:position pos:line="148" pos:column="40"/></literal></expr>]<pos:position pos:line="148" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="43">NULL<pos:position pos:line="148" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="49">&amp;<pos:position pos:line="148" pos:column="54"/></operator><name pos:line="148" pos:column="50">preserveMissMarkMask<pos:position pos:line="148" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="72">0<pos:position pos:line="148" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="148" pos:column="75">std<pos:position pos:line="148" pos:column="78"/></name><operator pos:line="148" pos:column="78">::<pos:position pos:line="148" pos:column="80"/></operator><name><name pos:line="148" pos:column="80">numeric_limits<pos:position pos:line="148" pos:column="94"/></name><argument_list type="generic" pos:line="148" pos:column="94">&lt;<argument><expr><name pos:line="148" pos:column="95">nfmark_t<pos:position pos:line="148" pos:column="103"/></name></expr></argument>&gt;<pos:position pos:line="148" pos:column="107"/></argument_list></name><operator pos:line="148" pos:column="104">::<pos:position pos:line="148" pos:column="106"/></operator><name pos:line="148" pos:column="106">max<pos:position pos:line="148" pos:column="109"/></name></name><argument_list pos:line="148" pos:column="109">()<pos:position pos:line="148" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="112"/></argument_list></call></expr>)<pos:position pos:line="148" pos:column="113"/></condition><then pos:line="148" pos:column="113"> <block pos:line="148" pos:column="114">{
                    <expr_stmt><expr><call><name pos:line="149" pos:column="21">debugs<pos:position pos:line="149" pos:column="27"/></name><argument_list pos:line="149" pos:column="27">(<argument><expr><literal type="number" pos:line="149" pos:column="28">3<pos:position pos:line="149" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="31">DBG_CRITICAL<pos:position pos:line="149" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="45">"ERROR: Bad mark miss-mark value "<pos:position pos:line="149" pos:column="79"/></literal> <operator pos:line="149" pos:column="80">&lt;&lt;<pos:position pos:line="149" pos:column="88"/></operator> <operator pos:line="149" pos:column="83">&amp;<pos:position pos:line="149" pos:column="88"/></operator><name><name pos:line="149" pos:column="84">token<pos:position pos:line="149" pos:column="89"/></name><index pos:line="149" pos:column="89">[<expr><literal type="number" pos:line="149" pos:column="90">10<pos:position pos:line="149" pos:column="92"/></literal></expr>]<pos:position pos:line="149" pos:column="93"/></index></name></expr></argument>)<pos:position pos:line="149" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="95"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="150" pos:column="21">self_destruct<pos:position pos:line="150" pos:column="34"/></name><argument_list pos:line="150" pos:column="34">()<pos:position pos:line="150" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="151" pos:column="18"/></block></then></if>
            }<pos:position pos:line="152" pos:column="14"/></block></then> <elseif pos:line="152" pos:column="15">else <if pos:line="152" pos:column="20">if <condition pos:line="152" pos:column="23">(<expr><name pos:line="152" pos:column="24">preserveMissTos<pos:position pos:line="152" pos:column="39"/></name></expr>)<pos:position pos:line="152" pos:column="40"/></condition><then pos:line="152" pos:column="40"> <block pos:line="152" pos:column="41">{
                <decl_stmt><decl><type><name pos:line="153" pos:column="17">unsigned<pos:position pos:line="153" pos:column="25"/></name> <name pos:line="153" pos:column="26">int<pos:position pos:line="153" pos:column="29"/></name></type> <name pos:line="153" pos:column="30">v<pos:position pos:line="153" pos:column="31"/></name> <init pos:line="153" pos:column="32">= <expr><literal type="number" pos:line="153" pos:column="34">0<pos:position pos:line="153" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="153" pos:column="36"/></decl_stmt>
                <if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><operator pos:line="154" pos:column="21">!<pos:position pos:line="154" pos:column="22"/></operator><call><name pos:line="154" pos:column="22">xstrtoui<pos:position pos:line="154" pos:column="30"/></name><argument_list pos:line="154" pos:column="30">(<argument><expr><operator pos:line="154" pos:column="31">&amp;<pos:position pos:line="154" pos:column="36"/></operator><name><name pos:line="154" pos:column="32">token<pos:position pos:line="154" pos:column="37"/></name><index pos:line="154" pos:column="37">[<expr><literal type="number" pos:line="154" pos:column="38">10<pos:position pos:line="154" pos:column="40"/></literal></expr>]<pos:position pos:line="154" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="43">NULL<pos:position pos:line="154" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="154" pos:column="49">&amp;<pos:position pos:line="154" pos:column="54"/></operator><name pos:line="154" pos:column="50">v<pos:position pos:line="154" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="53">0<pos:position pos:line="154" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="154" pos:column="56">std<pos:position pos:line="154" pos:column="59"/></name><operator pos:line="154" pos:column="59">::<pos:position pos:line="154" pos:column="61"/></operator><name><name pos:line="154" pos:column="61">numeric_limits<pos:position pos:line="154" pos:column="75"/></name><argument_list type="generic" pos:line="154" pos:column="75">&lt;<argument><expr><name pos:line="154" pos:column="76">tos_t<pos:position pos:line="154" pos:column="81"/></name></expr></argument>&gt;<pos:position pos:line="154" pos:column="85"/></argument_list></name><operator pos:line="154" pos:column="82">::<pos:position pos:line="154" pos:column="84"/></operator><name pos:line="154" pos:column="84">max<pos:position pos:line="154" pos:column="87"/></name></name><argument_list pos:line="154" pos:column="87">()<pos:position pos:line="154" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="154" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="154" pos:column="91"/></condition><then pos:line="154" pos:column="91"> <block pos:line="154" pos:column="92">{
                    <expr_stmt><expr><call><name pos:line="155" pos:column="21">debugs<pos:position pos:line="155" pos:column="27"/></name><argument_list pos:line="155" pos:column="27">(<argument><expr><literal type="number" pos:line="155" pos:column="28">3<pos:position pos:line="155" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="31">DBG_CRITICAL<pos:position pos:line="155" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="45">"ERROR: Bad TOS miss-mark value "<pos:position pos:line="155" pos:column="78"/></literal> <operator pos:line="155" pos:column="79">&lt;&lt;<pos:position pos:line="155" pos:column="87"/></operator> <operator pos:line="155" pos:column="82">&amp;<pos:position pos:line="155" pos:column="87"/></operator><name><name pos:line="155" pos:column="83">token<pos:position pos:line="155" pos:column="88"/></name><index pos:line="155" pos:column="88">[<expr><literal type="number" pos:line="155" pos:column="89">10<pos:position pos:line="155" pos:column="91"/></literal></expr>]<pos:position pos:line="155" pos:column="92"/></index></name></expr></argument>)<pos:position pos:line="155" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="94"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="156" pos:column="21">self_destruct<pos:position pos:line="156" pos:column="34"/></name><argument_list pos:line="156" pos:column="34">()<pos:position pos:line="156" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="157" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="158" pos:column="17">preserveMissTosMask<pos:position pos:line="158" pos:column="36"/></name> <operator pos:line="158" pos:column="37">=<pos:position pos:line="158" pos:column="38"/></operator> <operator pos:line="158" pos:column="39">(<pos:position pos:line="158" pos:column="40"/></operator><name pos:line="158" pos:column="40">tos_t<pos:position pos:line="158" pos:column="45"/></name><operator pos:line="158" pos:column="45">)<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="46">v<pos:position pos:line="158" pos:column="47"/></name></expr>;<pos:position pos:line="158" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="159" pos:column="14"/></block></then></if></elseif> <else pos:line="159" pos:column="15">else <block pos:line="159" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="160" pos:column="17">debugs<pos:position pos:line="160" pos:column="23"/></name><argument_list pos:line="160" pos:column="23">(<argument><expr><literal type="number" pos:line="160" pos:column="24">3<pos:position pos:line="160" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="160" pos:column="27">DBG_CRITICAL<pos:position pos:line="160" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="41">"ERROR: miss-mask feature cannot be set without miss-preservation enabled"<pos:position pos:line="160" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="117"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="161" pos:column="17">self_destruct<pos:position pos:line="161" pos:column="30"/></name><argument_list pos:line="161" pos:column="30">()<pos:position pos:line="161" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="33"/></expr_stmt>
            }<pos:position pos:line="162" pos:column="14"/></block></else></if>

        }<pos:position pos:line="164" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="165" pos:column="6"/></block></while>
}<pos:position pos:line="166" pos:column="2"/></block></function></unit>

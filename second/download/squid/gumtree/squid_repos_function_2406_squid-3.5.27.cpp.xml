<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2406_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemObject<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">readAheadPolicyCanRead<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">bool<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">canRead<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">endOffset<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call> <operator pos:line="4" pos:column="38">-<pos:position pos:line="4" pos:column="39"/></operator> <call><name pos:line="4" pos:column="40">getReply<pos:position pos:line="4" pos:column="48"/></name><argument_list pos:line="4" pos:column="48">()<pos:position pos:line="4" pos:column="50"/></argument_list></call><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">hdr_sz<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">&lt;<pos:position pos:line="4" pos:column="63"/></operator>
                         <call><name pos:line="5" pos:column="26">lowestMemReaderOffset<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">()<pos:position pos:line="5" pos:column="49"/></argument_list></call> <operator pos:line="5" pos:column="50">+<pos:position pos:line="5" pos:column="51"/></operator> <name><name pos:line="5" pos:column="52">Config<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">.<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="59">readAheadGap<pos:position pos:line="5" pos:column="71"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="72"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">canRead<pos:position pos:line="7" pos:column="17"/></name></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18"> <block pos:line="7" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">19<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">9<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"no: "<pos:position pos:line="8" pos:column="29"/></literal> <operator pos:line="8" pos:column="30">&lt;&lt;<pos:position pos:line="8" pos:column="38"/></operator> <call><name pos:line="8" pos:column="33">endOffset<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">&lt;&lt;<pos:position pos:line="8" pos:column="53"/></operator> <literal type="char" pos:line="8" pos:column="48">'-'<pos:position pos:line="8" pos:column="51"/></literal> <operator pos:line="8" pos:column="52">&lt;&lt;<pos:position pos:line="8" pos:column="60"/></operator> <call><name pos:line="8" pos:column="55">getReply<pos:position pos:line="8" pos:column="63"/></name><argument_list pos:line="8" pos:column="63">()<pos:position pos:line="8" pos:column="65"/></argument_list></call><operator pos:line="8" pos:column="65">-&gt;<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="67">hdr_sz<pos:position pos:line="8" pos:column="73"/></name> <operator pos:line="8" pos:column="74">&lt;&lt;<pos:position pos:line="8" pos:column="82"/></operator>
               <literal type="string" pos:line="9" pos:column="16">" &lt; "<pos:position pos:line="9" pos:column="24"/></literal> <operator pos:line="9" pos:column="22">&lt;&lt;<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="25">lowestMemReaderOffset<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">()<pos:position pos:line="9" pos:column="48"/></argument_list></call> <operator pos:line="9" pos:column="49">&lt;&lt;<pos:position pos:line="9" pos:column="57"/></operator> <literal type="char" pos:line="9" pos:column="52">'+'<pos:position pos:line="9" pos:column="55"/></literal> <operator pos:line="9" pos:column="56">&lt;&lt;<pos:position pos:line="9" pos:column="64"/></operator> <name><name pos:line="9" pos:column="59">Config<pos:position pos:line="9" pos:column="65"/></name><operator pos:line="9" pos:column="65">.<pos:position pos:line="9" pos:column="66"/></operator><name pos:line="9" pos:column="66">readAheadGap<pos:position pos:line="9" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">canRead<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

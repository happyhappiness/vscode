<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1821_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">allow_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">aclMatchExternal<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">external_acl_data<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">acl<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">ACLFilledChecklist<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ch<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">82<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">9<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"acl=\""<pos:position pos:line="4" pos:column="35"/></literal> <operator pos:line="4" pos:column="36">&lt;&lt;<pos:position pos:line="4" pos:column="44"/></operator> <name><name pos:line="4" pos:column="39">acl<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">def<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">-&gt;<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="49">name<pos:position pos:line="4" pos:column="53"/></name></name> <operator pos:line="4" pos:column="54">&lt;&lt;<pos:position pos:line="4" pos:column="62"/></operator> <literal type="string" pos:line="4" pos:column="57">"\""<pos:position pos:line="4" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="63"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ExternalACLEntryPointer<pos:position pos:line="5" pos:column="28"/></name></type> <name pos:line="5" pos:column="29">entry<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name><name pos:line="5" pos:column="37">ch<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">extacl_entry<pos:position pos:line="5" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">external_acl_message<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <literal type="string" pos:line="7" pos:column="28">"MISSING REQUIRED INFORMATION"<pos:position pos:line="7" pos:column="58"/></literal></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">entry<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">!=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">entry<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">def<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">acl<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">def<pos:position pos:line="10" pos:column="35"/></name></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
            <comment type="block" pos:line="11" pos:column="13">/* Ours, use it.. if the key matches */</comment>
            <decl_stmt><decl><type><specifier pos:line="12" pos:column="13">const<pos:position pos:line="12" pos:column="18"/></specifier> <name pos:line="12" pos:column="19">char<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">key<pos:position pos:line="12" pos:column="28"/></name> <init pos:line="12" pos:column="29">= <expr><call><name pos:line="12" pos:column="31">makeExternalAclKey<pos:position pos:line="12" pos:column="49"/></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">ch<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">acl<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="59"/></decl_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">key<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
                <block type="pseudo"><return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">ACCESS_DUNNO<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></return></block></then></if> <comment type="line" pos:line="14" pos:column="38">// insufficent data to continue</comment>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><call><name pos:line="15" pos:column="17">strcmp<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">key<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">char<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></operator><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator><name><name pos:line="15" pos:column="36">entry<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">key<pos:position pos:line="15" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></call> <operator pos:line="15" pos:column="48">!=<pos:position pos:line="15" pos:column="50"/></operator> <literal type="number" pos:line="15" pos:column="51">0<pos:position pos:line="15" pos:column="52"/></literal></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">debugs<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="number" pos:line="16" pos:column="24">82<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="28">9<pos:position pos:line="16" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"entry key='"<pos:position pos:line="16" pos:column="44"/></literal> <operator pos:line="16" pos:column="45">&lt;&lt;<pos:position pos:line="16" pos:column="53"/></operator> <operator pos:line="16" pos:column="48">(<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">char<pos:position pos:line="16" pos:column="53"/></name> <operator pos:line="16" pos:column="54">*<pos:position pos:line="16" pos:column="55"/></operator><operator pos:line="16" pos:column="55">)<pos:position pos:line="16" pos:column="56"/></operator><name><name pos:line="16" pos:column="56">entry<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">-&gt;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="63">key<pos:position pos:line="16" pos:column="66"/></name></name> <operator pos:line="16" pos:column="67">&lt;&lt;<pos:position pos:line="16" pos:column="75"/></operator> <literal type="string" pos:line="16" pos:column="70">"', our key='"<pos:position pos:line="16" pos:column="84"/></literal> <operator pos:line="16" pos:column="85">&lt;&lt;<pos:position pos:line="16" pos:column="93"/></operator> <name pos:line="16" pos:column="88">key<pos:position pos:line="16" pos:column="91"/></name> <operator pos:line="16" pos:column="92">&lt;&lt;<pos:position pos:line="16" pos:column="100"/></operator> <literal type="string" pos:line="16" pos:column="95">"' dont match. Discarded."<pos:position pos:line="16" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="123"/></expr_stmt>
                <comment type="line" pos:line="17" pos:column="17">// too bad. need a new lookup.</comment>
                <expr_stmt><expr><name pos:line="18" pos:column="17">entry<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="25">ch<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">extacl_entry<pos:position pos:line="18" pos:column="41"/></name></name> <operator pos:line="18" pos:column="42">=<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">NULL<pos:position pos:line="18" pos:column="48"/></name></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
        }<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else <block pos:line="20" pos:column="16">{
            <comment type="block" pos:line="21" pos:column="13">/* Not ours.. get rid of it */</comment>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">82<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">9<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"entry "<pos:position pos:line="22" pos:column="35"/></literal> <operator pos:line="22" pos:column="36">&lt;&lt;<pos:position pos:line="22" pos:column="44"/></operator> <name pos:line="22" pos:column="39">entry<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">&lt;&lt;<pos:position pos:line="22" pos:column="53"/></operator> <literal type="string" pos:line="22" pos:column="48">" not valid or not ours. Discarded."<pos:position pos:line="22" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="86"/></expr_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">entry<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">!=<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">NULL<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">debugs<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="number" pos:line="24" pos:column="24">82<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="28">9<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"entry def="<pos:position pos:line="24" pos:column="43"/></literal> <operator pos:line="24" pos:column="44">&lt;&lt;<pos:position pos:line="24" pos:column="52"/></operator> <name><name pos:line="24" pos:column="47">entry<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">-&gt;<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="54">def<pos:position pos:line="24" pos:column="57"/></name></name> <operator pos:line="24" pos:column="58">&lt;&lt;<pos:position pos:line="24" pos:column="66"/></operator> <literal type="string" pos:line="24" pos:column="61">", our def="<pos:position pos:line="24" pos:column="73"/></literal> <operator pos:line="24" pos:column="74">&lt;&lt;<pos:position pos:line="24" pos:column="82"/></operator> <name><name pos:line="24" pos:column="77">acl<pos:position pos:line="24" pos:column="80"/></name><operator pos:line="24" pos:column="80">-&gt;<pos:position pos:line="24" pos:column="85"/></operator><name pos:line="24" pos:column="82">def<pos:position pos:line="24" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="87"/></expr_stmt>
                <decl_stmt><decl><type><specifier pos:line="25" pos:column="17">const<pos:position pos:line="25" pos:column="22"/></specifier> <name pos:line="25" pos:column="23">char<pos:position pos:line="25" pos:column="27"/></name> <modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">key<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><call><name pos:line="25" pos:column="35">makeExternalAclKey<pos:position pos:line="25" pos:column="53"/></name><argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">ch<pos:position pos:line="25" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">acl<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="63"/></decl_stmt> <comment type="line" pos:line="25" pos:column="64">// may be nil</comment>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">debugs<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><literal type="number" pos:line="26" pos:column="24">82<pos:position pos:line="26" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="28">9<pos:position pos:line="26" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="31">"entry key='"<pos:position pos:line="26" pos:column="44"/></literal> <operator pos:line="26" pos:column="45">&lt;&lt;<pos:position pos:line="26" pos:column="53"/></operator> <operator pos:line="26" pos:column="48">(<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">char<pos:position pos:line="26" pos:column="53"/></name> <operator pos:line="26" pos:column="54">*<pos:position pos:line="26" pos:column="55"/></operator><operator pos:line="26" pos:column="55">)<pos:position pos:line="26" pos:column="56"/></operator><name><name pos:line="26" pos:column="56">entry<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">-&gt;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="63">key<pos:position pos:line="26" pos:column="66"/></name></name> <operator pos:line="26" pos:column="67">&lt;&lt;<pos:position pos:line="26" pos:column="75"/></operator> <literal type="string" pos:line="26" pos:column="70">"', our key='"<pos:position pos:line="26" pos:column="84"/></literal> <operator pos:line="26" pos:column="85">&lt;&lt;<pos:position pos:line="26" pos:column="93"/></operator> <name pos:line="26" pos:column="88">key<pos:position pos:line="26" pos:column="91"/></name> <operator pos:line="26" pos:column="92">&lt;&lt;<pos:position pos:line="26" pos:column="100"/></operator> <literal type="string" pos:line="26" pos:column="95">"'"<pos:position pos:line="26" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="100"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="28" pos:column="13">entry<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name><name pos:line="28" pos:column="21">ch<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">extacl_entry<pos:position pos:line="28" pos:column="37"/></name></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <name pos:line="28" pos:column="40">NULL<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></else></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">entry<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <block pos:line="32" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">debugs<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">82<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="20">9<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">HERE<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">&lt;&lt;<pos:position pos:line="33" pos:column="36"/></operator> <literal type="string" pos:line="33" pos:column="31">"No helper entry available"<pos:position pos:line="33" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">USE_AUTH<pos:position pos:line="34" pos:column="13"/></name></expr></cpp:if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">acl<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">def<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">require_auth<pos:position pos:line="35" pos:column="35"/></name></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
            <comment type="block" pos:line="36" pos:column="13">/* Make sure the user is authenticated */</comment>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugs<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="number" pos:line="37" pos:column="20">82<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="24">3<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="27">HERE<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">&lt;&lt;<pos:position pos:line="37" pos:column="40"/></operator> <name><name pos:line="37" pos:column="35">acl<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">def<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">name<pos:position pos:line="37" pos:column="49"/></name></name> <operator pos:line="37" pos:column="50">&lt;&lt;<pos:position pos:line="37" pos:column="58"/></operator> <literal type="string" pos:line="37" pos:column="53">" check user authenticated."<pos:position pos:line="37" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="83"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="38" pos:column="13">const<pos:position pos:line="38" pos:column="18"/></specifier> <name pos:line="38" pos:column="19">allow_t<pos:position pos:line="38" pos:column="26"/></name></type> <name pos:line="38" pos:column="27">ti<pos:position pos:line="38" pos:column="29"/></name> <init pos:line="38" pos:column="30">= <expr><call><name pos:line="38" pos:column="32">AuthenticateAcl<pos:position pos:line="38" pos:column="47"/></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name pos:line="38" pos:column="48">ch<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="52"/></decl_stmt>
            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name pos:line="39" pos:column="17">ti<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">!=<pos:position pos:line="39" pos:column="22"/></operator> <name pos:line="39" pos:column="23">ACCESS_ALLOWED<pos:position pos:line="39" pos:column="37"/></name></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> <block pos:line="39" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="40" pos:column="17">debugs<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><literal type="number" pos:line="40" pos:column="24">82<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="28">2<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="31">HERE<pos:position pos:line="40" pos:column="35"/></name> <operator pos:line="40" pos:column="36">&lt;&lt;<pos:position pos:line="40" pos:column="44"/></operator> <name><name pos:line="40" pos:column="39">acl<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">def<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">-&gt;<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="49">name<pos:position pos:line="40" pos:column="53"/></name></name> <operator pos:line="40" pos:column="54">&lt;&lt;<pos:position pos:line="40" pos:column="62"/></operator> <literal type="string" pos:line="40" pos:column="57">" user not authenticated ("<pos:position pos:line="40" pos:column="84"/></literal> <operator pos:line="40" pos:column="85">&lt;&lt;<pos:position pos:line="40" pos:column="93"/></operator> <name pos:line="40" pos:column="88">ti<pos:position pos:line="40" pos:column="90"/></name> <operator pos:line="40" pos:column="91">&lt;&lt;<pos:position pos:line="40" pos:column="99"/></operator> <literal type="string" pos:line="40" pos:column="94">")"<pos:position pos:line="40" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="99"/></expr_stmt>
                <return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">ti<pos:position pos:line="41" pos:column="26"/></name></expr>;<pos:position pos:line="41" pos:column="27"/></return>
            }<pos:position pos:line="42" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">debugs<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="number" pos:line="43" pos:column="20">82<pos:position pos:line="43" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="24">3<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">HERE<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">&lt;&lt;<pos:position pos:line="43" pos:column="40"/></operator> <name><name pos:line="43" pos:column="35">acl<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">def<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">name<pos:position pos:line="43" pos:column="49"/></name></name> <operator pos:line="43" pos:column="50">&lt;&lt;<pos:position pos:line="43" pos:column="58"/></operator> <literal type="string" pos:line="43" pos:column="53">" user is authenticated."<pos:position pos:line="43" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
        <decl_stmt><decl><type><specifier pos:line="46" pos:column="9">const<pos:position pos:line="46" pos:column="14"/></specifier> <name pos:line="46" pos:column="15">char<pos:position pos:line="46" pos:column="19"/></name> <modifier pos:line="46" pos:column="20">*<pos:position pos:line="46" pos:column="21"/></modifier></type><name pos:line="46" pos:column="21">key<pos:position pos:line="46" pos:column="24"/></name> <init pos:line="46" pos:column="25">= <expr><call><name pos:line="46" pos:column="27">makeExternalAclKey<pos:position pos:line="46" pos:column="45"/></name><argument_list pos:line="46" pos:column="45">(<argument><expr><name pos:line="46" pos:column="46">ch<pos:position pos:line="46" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="50">acl<pos:position pos:line="46" pos:column="53"/></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="55"/></decl_stmt>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><operator pos:line="48" pos:column="13">!<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">key<pos:position pos:line="48" pos:column="17"/></name></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18"> <block pos:line="48" pos:column="19">{
            <comment type="block" pos:line="49" pos:column="13">/* Not sufficient data to process */</comment>
            <return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">ACCESS_DUNNO<pos:position pos:line="50" pos:column="32"/></name></expr>;<pos:position pos:line="50" pos:column="33"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="53" pos:column="9">entry<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <cast type="static" pos:line="53" pos:column="17">static_cast<argument_list type="generic" pos:line="53" pos:column="28">&lt;<argument><expr><name pos:line="53" pos:column="29">ExternalACLEntry<pos:position pos:line="53" pos:column="45"/></name> <operator pos:line="53" pos:column="46">*<pos:position pos:line="53" pos:column="47"/></operator></expr></argument>&gt;<pos:position pos:line="53" pos:column="51"/></argument_list><argument_list pos:line="53" pos:column="48">(<argument><expr><call><name pos:line="53" pos:column="49">hash_lookup<pos:position pos:line="53" pos:column="60"/></name><argument_list pos:line="53" pos:column="60">(<argument><expr><name><name pos:line="53" pos:column="61">acl<pos:position pos:line="53" pos:column="64"/></name><operator pos:line="53" pos:column="64">-&gt;<pos:position pos:line="53" pos:column="69"/></operator><name pos:line="53" pos:column="66">def<pos:position pos:line="53" pos:column="69"/></name><operator pos:line="53" pos:column="69">-&gt;<pos:position pos:line="53" pos:column="74"/></operator><name pos:line="53" pos:column="71">cache<pos:position pos:line="53" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="78">key<pos:position pos:line="53" pos:column="81"/></name></expr></argument>)<pos:position pos:line="53" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="83"/></argument_list></cast></expr>;<pos:position pos:line="53" pos:column="84"/></expr_stmt>

        <decl_stmt><decl><type><specifier pos:line="55" pos:column="9">const<pos:position pos:line="55" pos:column="14"/></specifier> <name pos:line="55" pos:column="15">ExternalACLEntryPointer<pos:position pos:line="55" pos:column="38"/></name></type> <name pos:line="55" pos:column="39">staleEntry<pos:position pos:line="55" pos:column="49"/></name> <init pos:line="55" pos:column="50">= <expr><name pos:line="55" pos:column="52">entry<pos:position pos:line="55" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="55" pos:column="58"/></decl_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">entry<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">!=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">NULL<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">&amp;&amp;<pos:position pos:line="56" pos:column="37"/></operator> <call><name pos:line="56" pos:column="30">external_acl_entry_expired<pos:position pos:line="56" pos:column="56"/></name><argument_list pos:line="56" pos:column="56">(<argument><expr><name><name pos:line="56" pos:column="57">acl<pos:position pos:line="56" pos:column="60"/></name><operator pos:line="56" pos:column="60">-&gt;<pos:position pos:line="56" pos:column="65"/></operator><name pos:line="56" pos:column="62">def<pos:position pos:line="56" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="67">entry<pos:position pos:line="56" pos:column="72"/></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="74"/></condition><then pos:line="56" pos:column="74">
            <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="13">entry<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="21">NULL<pos:position pos:line="57" pos:column="25"/></name></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt></block></then></if>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">entry<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">!=<pos:position pos:line="59" pos:column="21"/></operator> <name pos:line="59" pos:column="22">NULL<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">&amp;&amp;<pos:position pos:line="59" pos:column="37"/></operator> <call><name pos:line="59" pos:column="30">external_acl_grace_expired<pos:position pos:line="59" pos:column="56"/></name><argument_list pos:line="59" pos:column="56">(<argument><expr><name><name pos:line="59" pos:column="57">acl<pos:position pos:line="59" pos:column="60"/></name><operator pos:line="59" pos:column="60">-&gt;<pos:position pos:line="59" pos:column="65"/></operator><name pos:line="59" pos:column="62">def<pos:position pos:line="59" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="67">entry<pos:position pos:line="59" pos:column="72"/></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="74"/></condition><then pos:line="59" pos:column="74"> <block pos:line="59" pos:column="75">{
            <comment type="line" pos:line="60" pos:column="13">// refresh in the background</comment>
            <expr_stmt><expr><call><name><name pos:line="61" pos:column="13">ExternalACLLookup<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">::<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="32">Start<pos:position pos:line="61" pos:column="37"/></name></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">ch<pos:position pos:line="61" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">acl<pos:position pos:line="61" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="61" pos:column="47">true<pos:position pos:line="61" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">debugs<pos:position pos:line="62" pos:column="19"/></name><argument_list pos:line="62" pos:column="19">(<argument><expr><literal type="number" pos:line="62" pos:column="20">82<pos:position pos:line="62" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="24">4<pos:position pos:line="62" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="27">HERE<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">&lt;&lt;<pos:position pos:line="62" pos:column="40"/></operator> <literal type="string" pos:line="62" pos:column="35">"no need to wait for the refresh of '"<pos:position pos:line="62" pos:column="73"/></literal> <operator pos:line="62" pos:column="74">&lt;&lt;<pos:position pos:line="62" pos:column="82"/></operator>
                   <name pos:line="63" pos:column="20">key<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">&lt;&lt;<pos:position pos:line="63" pos:column="32"/></operator> <literal type="string" pos:line="63" pos:column="27">"' in '"<pos:position pos:line="63" pos:column="35"/></literal> <operator pos:line="63" pos:column="36">&lt;&lt;<pos:position pos:line="63" pos:column="44"/></operator> <name><name pos:line="63" pos:column="39">acl<pos:position pos:line="63" pos:column="42"/></name><operator pos:line="63" pos:column="42">-&gt;<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="44">def<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">-&gt;<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="49">name<pos:position pos:line="63" pos:column="53"/></name></name> <operator pos:line="63" pos:column="54">&lt;&lt;<pos:position pos:line="63" pos:column="62"/></operator> <literal type="string" pos:line="63" pos:column="57">"' (ch="<pos:position pos:line="63" pos:column="65"/></literal> <operator pos:line="63" pos:column="66">&lt;&lt;<pos:position pos:line="63" pos:column="74"/></operator> <name pos:line="63" pos:column="69">ch<pos:position pos:line="63" pos:column="71"/></name> <operator pos:line="63" pos:column="72">&lt;&lt;<pos:position pos:line="63" pos:column="80"/></operator> <literal type="string" pos:line="63" pos:column="75">")."<pos:position pos:line="63" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="81"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><operator pos:line="66" pos:column="13">!<pos:position pos:line="66" pos:column="14"/></operator><name pos:line="66" pos:column="14">entry<pos:position pos:line="66" pos:column="19"/></name></expr>)<pos:position pos:line="66" pos:column="20"/></condition><then pos:line="66" pos:column="20"> <block pos:line="66" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">debugs<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="number" pos:line="67" pos:column="20">82<pos:position pos:line="67" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="24">2<pos:position pos:line="67" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="27">HERE<pos:position pos:line="67" pos:column="31"/></name> <operator pos:line="67" pos:column="32">&lt;&lt;<pos:position pos:line="67" pos:column="40"/></operator> <name><name pos:line="67" pos:column="35">acl<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">-&gt;<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="40">def<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">-&gt;<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="45">name<pos:position pos:line="67" pos:column="49"/></name></name> <operator pos:line="67" pos:column="50">&lt;&lt;<pos:position pos:line="67" pos:column="58"/></operator> <literal type="string" pos:line="67" pos:column="53">"(\""<pos:position pos:line="67" pos:column="58"/></literal> <operator pos:line="67" pos:column="59">&lt;&lt;<pos:position pos:line="67" pos:column="67"/></operator> <name pos:line="67" pos:column="62">key<pos:position pos:line="67" pos:column="65"/></name> <operator pos:line="67" pos:column="66">&lt;&lt;<pos:position pos:line="67" pos:column="74"/></operator> <literal type="string" pos:line="67" pos:column="69">"\") = lookup needed"<pos:position pos:line="67" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="92"/></expr_stmt>

            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name><name pos:line="69" pos:column="17">acl<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">-&gt;<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="22">def<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">-&gt;<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="27">theHelper<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">-&gt;<pos:position pos:line="69" pos:column="41"/></operator><name pos:line="69" pos:column="38">stats<pos:position pos:line="69" pos:column="43"/></name><operator pos:line="69" pos:column="43">.<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="44">queue_size<pos:position pos:line="69" pos:column="54"/></name></name> <operator pos:line="69" pos:column="55">&lt;<pos:position pos:line="69" pos:column="59"/></operator> <operator pos:line="69" pos:column="57">(<pos:position pos:line="69" pos:column="58"/></operator><name pos:line="69" pos:column="58">int<pos:position pos:line="69" pos:column="61"/></name><operator pos:line="69" pos:column="61">)<pos:position pos:line="69" pos:column="62"/></operator><name><name pos:line="69" pos:column="62">acl<pos:position pos:line="69" pos:column="65"/></name><operator pos:line="69" pos:column="65">-&gt;<pos:position pos:line="69" pos:column="70"/></operator><name pos:line="69" pos:column="67">def<pos:position pos:line="69" pos:column="70"/></name><operator pos:line="69" pos:column="70">-&gt;<pos:position pos:line="69" pos:column="75"/></operator><name pos:line="69" pos:column="72">theHelper<pos:position pos:line="69" pos:column="81"/></name><operator pos:line="69" pos:column="81">-&gt;<pos:position pos:line="69" pos:column="86"/></operator><name pos:line="69" pos:column="83">childs<pos:position pos:line="69" pos:column="89"/></name><operator pos:line="69" pos:column="89">.<pos:position pos:line="69" pos:column="90"/></operator><name pos:line="69" pos:column="90">n_active<pos:position pos:line="69" pos:column="98"/></name></name></expr>)<pos:position pos:line="69" pos:column="99"/></condition><then pos:line="69" pos:column="99"> <block pos:line="69" pos:column="100">{
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">debugs<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><literal type="number" pos:line="70" pos:column="24">82<pos:position pos:line="70" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="28">2<pos:position pos:line="70" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="31">HERE<pos:position pos:line="70" pos:column="35"/></name> <operator pos:line="70" pos:column="36">&lt;&lt;<pos:position pos:line="70" pos:column="44"/></operator> <literal type="string" pos:line="70" pos:column="39">"\""<pos:position pos:line="70" pos:column="43"/></literal> <operator pos:line="70" pos:column="44">&lt;&lt;<pos:position pos:line="70" pos:column="52"/></operator> <name pos:line="70" pos:column="47">key<pos:position pos:line="70" pos:column="50"/></name> <operator pos:line="70" pos:column="51">&lt;&lt;<pos:position pos:line="70" pos:column="59"/></operator> <literal type="string" pos:line="70" pos:column="54">"\": queueing a call."<pos:position pos:line="70" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="78"/></expr_stmt>
                <if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><operator pos:line="71" pos:column="21">!<pos:position pos:line="71" pos:column="22"/></operator><call><name><name pos:line="71" pos:column="22">ch<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">goAsync<pos:position pos:line="71" pos:column="33"/></name></name><argument_list pos:line="71" pos:column="33">(<argument><expr><call><name><name pos:line="71" pos:column="34">ExternalACLLookup<pos:position pos:line="71" pos:column="51"/></name><operator pos:line="71" pos:column="51">::<pos:position pos:line="71" pos:column="53"/></operator><name pos:line="71" pos:column="53">Instance<pos:position pos:line="71" pos:column="61"/></name></name><argument_list pos:line="71" pos:column="61">()<pos:position pos:line="71" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="65"/></condition><then pos:line="71" pos:column="65">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="21">debugs<pos:position pos:line="72" pos:column="27"/></name><argument_list pos:line="72" pos:column="27">(<argument><expr><literal type="number" pos:line="72" pos:column="28">82<pos:position pos:line="72" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="32">2<pos:position pos:line="72" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="35">"\""<pos:position pos:line="72" pos:column="39"/></literal> <operator pos:line="72" pos:column="40">&lt;&lt;<pos:position pos:line="72" pos:column="48"/></operator> <name pos:line="72" pos:column="43">key<pos:position pos:line="72" pos:column="46"/></name> <operator pos:line="72" pos:column="47">&lt;&lt;<pos:position pos:line="72" pos:column="55"/></operator> <literal type="string" pos:line="72" pos:column="50">"\": no async support!"<pos:position pos:line="72" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="75"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">debugs<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><literal type="number" pos:line="73" pos:column="24">82<pos:position pos:line="73" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="28">2<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="31">HERE<pos:position pos:line="73" pos:column="35"/></name> <operator pos:line="73" pos:column="36">&lt;&lt;<pos:position pos:line="73" pos:column="44"/></operator> <literal type="string" pos:line="73" pos:column="39">"\""<pos:position pos:line="73" pos:column="43"/></literal> <operator pos:line="73" pos:column="44">&lt;&lt;<pos:position pos:line="73" pos:column="52"/></operator> <name pos:line="73" pos:column="47">key<pos:position pos:line="73" pos:column="50"/></name> <operator pos:line="73" pos:column="51">&lt;&lt;<pos:position pos:line="73" pos:column="59"/></operator> <literal type="string" pos:line="73" pos:column="54">"\": return -1."<pos:position pos:line="73" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="72"/></expr_stmt>
                <return pos:line="74" pos:column="17">return <expr><name pos:line="74" pos:column="24">ACCESS_DUNNO<pos:position pos:line="74" pos:column="36"/></name></expr>;<pos:position pos:line="74" pos:column="37"/></return> <comment type="line" pos:line="74" pos:column="38">// expired cached or simply absent entry</comment>
            }<pos:position pos:line="75" pos:column="14"/></block></then> <else pos:line="75" pos:column="15">else <block pos:line="75" pos:column="20">{
                <if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><operator pos:line="76" pos:column="21">!<pos:position pos:line="76" pos:column="22"/></operator><name pos:line="76" pos:column="22">staleEntry<pos:position pos:line="76" pos:column="32"/></name></expr>)<pos:position pos:line="76" pos:column="33"/></condition><then pos:line="76" pos:column="33"> <block pos:line="76" pos:column="34">{
                    <expr_stmt><expr><call><name pos:line="77" pos:column="21">debugs<pos:position pos:line="77" pos:column="27"/></name><argument_list pos:line="77" pos:column="27">(<argument><expr><literal type="number" pos:line="77" pos:column="28">82<pos:position pos:line="77" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="32">DBG_IMPORTANT<pos:position pos:line="77" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="47">"WARNING: external ACL '"<pos:position pos:line="77" pos:column="72"/></literal> <operator pos:line="77" pos:column="73">&lt;&lt;<pos:position pos:line="77" pos:column="81"/></operator> <name><name pos:line="77" pos:column="76">acl<pos:position pos:line="77" pos:column="79"/></name><operator pos:line="77" pos:column="79">-&gt;<pos:position pos:line="77" pos:column="84"/></operator><name pos:line="77" pos:column="81">def<pos:position pos:line="77" pos:column="84"/></name><operator pos:line="77" pos:column="84">-&gt;<pos:position pos:line="77" pos:column="89"/></operator><name pos:line="77" pos:column="86">name<pos:position pos:line="77" pos:column="90"/></name></name> <operator pos:line="77" pos:column="91">&lt;&lt;<pos:position pos:line="77" pos:column="99"/></operator>
                           <literal type="string" pos:line="78" pos:column="28">"' queue overload. Request rejected '"<pos:position pos:line="78" pos:column="66"/></literal> <operator pos:line="78" pos:column="67">&lt;&lt;<pos:position pos:line="78" pos:column="75"/></operator> <name pos:line="78" pos:column="70">key<pos:position pos:line="78" pos:column="73"/></name> <operator pos:line="78" pos:column="74">&lt;&lt;<pos:position pos:line="78" pos:column="82"/></operator> <literal type="string" pos:line="78" pos:column="77">"'."<pos:position pos:line="78" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="83"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="79" pos:column="21">external_acl_message<pos:position pos:line="79" pos:column="41"/></name> <operator pos:line="79" pos:column="42">=<pos:position pos:line="79" pos:column="43"/></operator> <literal type="string" pos:line="79" pos:column="44">"SYSTEM TOO BUSY, TRY AGAIN LATER"<pos:position pos:line="79" pos:column="78"/></literal></expr>;<pos:position pos:line="79" pos:column="79"/></expr_stmt>
                    <return pos:line="80" pos:column="21">return <expr><name pos:line="80" pos:column="28">ACCESS_DUNNO<pos:position pos:line="80" pos:column="40"/></name></expr>;<pos:position pos:line="80" pos:column="41"/></return>
                }<pos:position pos:line="81" pos:column="18"/></block></then> <else pos:line="81" pos:column="19">else <block pos:line="81" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="82" pos:column="21">debugs<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><literal type="number" pos:line="82" pos:column="28">82<pos:position pos:line="82" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="32">DBG_IMPORTANT<pos:position pos:line="82" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="47">"WARNING: external ACL '"<pos:position pos:line="82" pos:column="72"/></literal> <operator pos:line="82" pos:column="73">&lt;&lt;<pos:position pos:line="82" pos:column="81"/></operator> <name><name pos:line="82" pos:column="76">acl<pos:position pos:line="82" pos:column="79"/></name><operator pos:line="82" pos:column="79">-&gt;<pos:position pos:line="82" pos:column="84"/></operator><name pos:line="82" pos:column="81">def<pos:position pos:line="82" pos:column="84"/></name><operator pos:line="82" pos:column="84">-&gt;<pos:position pos:line="82" pos:column="89"/></operator><name pos:line="82" pos:column="86">name<pos:position pos:line="82" pos:column="90"/></name></name> <operator pos:line="82" pos:column="91">&lt;&lt;<pos:position pos:line="82" pos:column="99"/></operator>
                           <literal type="string" pos:line="83" pos:column="28">"' queue overload. Using stale result. '"<pos:position pos:line="83" pos:column="69"/></literal> <operator pos:line="83" pos:column="70">&lt;&lt;<pos:position pos:line="83" pos:column="78"/></operator> <name pos:line="83" pos:column="73">key<pos:position pos:line="83" pos:column="76"/></name> <operator pos:line="83" pos:column="77">&lt;&lt;<pos:position pos:line="83" pos:column="85"/></operator> <literal type="string" pos:line="83" pos:column="80">"'."<pos:position pos:line="83" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="86"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="84" pos:column="21">entry<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">=<pos:position pos:line="84" pos:column="28"/></operator> <name pos:line="84" pos:column="29">staleEntry<pos:position pos:line="84" pos:column="39"/></name></expr>;<pos:position pos:line="84" pos:column="40"/></expr_stmt>
                    <comment type="block" pos:line="85" pos:column="21">/* Fall thru to processing below */</comment>
                }<pos:position pos:line="86" pos:column="18"/></block></else></if>
            }<pos:position pos:line="87" pos:column="14"/></block></else></if>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="91" pos:column="5">debugs<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><literal type="number" pos:line="91" pos:column="12">82<pos:position pos:line="91" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="16">4<pos:position pos:line="91" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="19">HERE<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">&lt;&lt;<pos:position pos:line="91" pos:column="32"/></operator> <literal type="string" pos:line="91" pos:column="27">"entry = { date="<pos:position pos:line="91" pos:column="44"/></literal> <operator pos:line="91" pos:column="45">&lt;&lt;<pos:position pos:line="91" pos:column="53"/></operator>
           <operator pos:line="92" pos:column="12">(<pos:position pos:line="92" pos:column="13"/></operator><name pos:line="92" pos:column="13">long<pos:position pos:line="92" pos:column="17"/></name> <name pos:line="92" pos:column="18">unsigned<pos:position pos:line="92" pos:column="26"/></name> <name pos:line="92" pos:column="27">int<pos:position pos:line="92" pos:column="30"/></name><operator pos:line="92" pos:column="30">)<pos:position pos:line="92" pos:column="31"/></operator> <name><name pos:line="92" pos:column="32">entry<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">-&gt;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="39">date<pos:position pos:line="92" pos:column="43"/></name></name> <operator pos:line="92" pos:column="44">&lt;&lt;<pos:position pos:line="92" pos:column="52"/></operator>
           <literal type="string" pos:line="93" pos:column="12">", result="<pos:position pos:line="93" pos:column="23"/></literal> <operator pos:line="93" pos:column="24">&lt;&lt;<pos:position pos:line="93" pos:column="32"/></operator> <name><name pos:line="93" pos:column="27">entry<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">-&gt;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="34">result<pos:position pos:line="93" pos:column="40"/></name></name> <operator pos:line="93" pos:column="41">&lt;&lt;<pos:position pos:line="93" pos:column="49"/></operator>
           <literal type="string" pos:line="94" pos:column="12">" tag="<pos:position pos:line="94" pos:column="19"/></literal> <operator pos:line="94" pos:column="20">&lt;&lt;<pos:position pos:line="94" pos:column="28"/></operator> <name><name pos:line="94" pos:column="23">entry<pos:position pos:line="94" pos:column="28"/></name><operator pos:line="94" pos:column="28">-&gt;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="30">tag<pos:position pos:line="94" pos:column="33"/></name></name> <operator pos:line="94" pos:column="34">&lt;&lt;<pos:position pos:line="94" pos:column="42"/></operator>
           <literal type="string" pos:line="95" pos:column="12">" log="<pos:position pos:line="95" pos:column="19"/></literal> <operator pos:line="95" pos:column="20">&lt;&lt;<pos:position pos:line="95" pos:column="28"/></operator> <name><name pos:line="95" pos:column="23">entry<pos:position pos:line="95" pos:column="28"/></name><operator pos:line="95" pos:column="28">-&gt;<pos:position pos:line="95" pos:column="33"/></operator><name pos:line="95" pos:column="30">log<pos:position pos:line="95" pos:column="33"/></name></name> <operator pos:line="95" pos:column="34">&lt;&lt;<pos:position pos:line="95" pos:column="42"/></operator> <literal type="string" pos:line="95" pos:column="37">" }"<pos:position pos:line="95" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt>
<cpp:if pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">if<pos:position pos:line="96" pos:column="4"/></cpp:directive> <expr><name pos:line="96" pos:column="5">USE_AUTH<pos:position pos:line="96" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="97" pos:column="5">debugs<pos:position pos:line="97" pos:column="11"/></name><argument_list pos:line="97" pos:column="11">(<argument><expr><literal type="number" pos:line="97" pos:column="12">82<pos:position pos:line="97" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="16">4<pos:position pos:line="97" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="19">HERE<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">&lt;&lt;<pos:position pos:line="97" pos:column="32"/></operator> <literal type="string" pos:line="97" pos:column="27">"entry user="<pos:position pos:line="97" pos:column="40"/></literal> <operator pos:line="97" pos:column="41">&lt;&lt;<pos:position pos:line="97" pos:column="49"/></operator> <name><name pos:line="97" pos:column="44">entry<pos:position pos:line="97" pos:column="49"/></name><operator pos:line="97" pos:column="49">-&gt;<pos:position pos:line="97" pos:column="54"/></operator><name pos:line="97" pos:column="51">user<pos:position pos:line="97" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="100" pos:column="5">external_acl_cache_touch<pos:position pos:line="100" pos:column="29"/></name><argument_list pos:line="100" pos:column="29">(<argument><expr><name><name pos:line="100" pos:column="30">acl<pos:position pos:line="100" pos:column="33"/></name><operator pos:line="100" pos:column="33">-&gt;<pos:position pos:line="100" pos:column="38"/></operator><name pos:line="100" pos:column="35">def<pos:position pos:line="100" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="40">entry<pos:position pos:line="100" pos:column="45"/></name></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="101" pos:column="5">external_acl_message<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <call><name><name pos:line="101" pos:column="28">entry<pos:position pos:line="101" pos:column="33"/></name><operator pos:line="101" pos:column="33">-&gt;<pos:position pos:line="101" pos:column="38"/></operator><name pos:line="101" pos:column="35">message<pos:position pos:line="101" pos:column="42"/></name><operator pos:line="101" pos:column="42">.<pos:position pos:line="101" pos:column="43"/></operator><name pos:line="101" pos:column="43">termedBuf<pos:position pos:line="101" pos:column="52"/></name></name><argument_list pos:line="101" pos:column="52">()<pos:position pos:line="101" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="103" pos:column="5">debugs<pos:position pos:line="103" pos:column="11"/></name><argument_list pos:line="103" pos:column="11">(<argument><expr><literal type="number" pos:line="103" pos:column="12">82<pos:position pos:line="103" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="16">2<pos:position pos:line="103" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="19">HERE<pos:position pos:line="103" pos:column="23"/></name> <operator pos:line="103" pos:column="24">&lt;&lt;<pos:position pos:line="103" pos:column="32"/></operator> <name><name pos:line="103" pos:column="27">acl<pos:position pos:line="103" pos:column="30"/></name><operator pos:line="103" pos:column="30">-&gt;<pos:position pos:line="103" pos:column="35"/></operator><name pos:line="103" pos:column="32">def<pos:position pos:line="103" pos:column="35"/></name><operator pos:line="103" pos:column="35">-&gt;<pos:position pos:line="103" pos:column="40"/></operator><name pos:line="103" pos:column="37">name<pos:position pos:line="103" pos:column="41"/></name></name> <operator pos:line="103" pos:column="42">&lt;&lt;<pos:position pos:line="103" pos:column="50"/></operator> <literal type="string" pos:line="103" pos:column="45">" = "<pos:position pos:line="103" pos:column="50"/></literal> <operator pos:line="103" pos:column="51">&lt;&lt;<pos:position pos:line="103" pos:column="59"/></operator> <name><name pos:line="103" pos:column="54">entry<pos:position pos:line="103" pos:column="59"/></name><operator pos:line="103" pos:column="59">-&gt;<pos:position pos:line="103" pos:column="64"/></operator><name pos:line="103" pos:column="61">result<pos:position pos:line="103" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">copyResultsFromEntry<pos:position pos:line="104" pos:column="25"/></name><argument_list pos:line="104" pos:column="25">(<argument><expr><name><name pos:line="104" pos:column="26">ch<pos:position pos:line="104" pos:column="28"/></name><operator pos:line="104" pos:column="28">-&gt;<pos:position pos:line="104" pos:column="33"/></operator><name pos:line="104" pos:column="30">request<pos:position pos:line="104" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="39">entry<pos:position pos:line="104" pos:column="44"/></name></expr></argument>)<pos:position pos:line="104" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="46"/></expr_stmt>
    <return pos:line="105" pos:column="5">return <expr><name><name pos:line="105" pos:column="12">entry<pos:position pos:line="105" pos:column="17"/></name><operator pos:line="105" pos:column="17">-&gt;<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="19">result<pos:position pos:line="105" pos:column="25"/></name></name></expr>;<pos:position pos:line="105" pos:column="26"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

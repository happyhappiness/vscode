<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_469_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nmasldap_get_password<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(
    <parameter><decl><type><name pos:line="2" pos:column="5">LDAP<pos:position pos:line="2" pos:column="9"/></name>	 <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">ld<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>     <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">objectDN<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name>   <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">pwdSize<pos:position pos:line="4" pos:column="22"/></name></decl></parameter>,	<comment type="block" pos:line="4" pos:column="25">/* in bytes */</comment>
    <parameter><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name>     <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">pwd<pos:position pos:line="5" pos:column="27"/></name></decl></parameter> )<pos:position pos:line="5" pos:column="29"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">berval<pos:position pos:line="9" pos:column="18"/></name></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">requestBV<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">replyOID<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">berval<pos:position pos:line="11" pos:column="18"/></name></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">replyBV<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">serverVersion<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">pwdBuf<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">size_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">pwdBufLen<pos:position pos:line="14" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="23">bufferLen<pos:position pos:line="14" pos:column="32"/></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Validate char parameters. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">objectDN<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">NULL<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">||<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><call><name pos:line="17" pos:column="30">strlen<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">objectDN<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call> <operator pos:line="17" pos:column="47">==<pos:position pos:line="17" pos:column="49"/></operator> <literal type="number" pos:line="17" pos:column="50">0<pos:position pos:line="17" pos:column="51"/></literal><operator pos:line="17" pos:column="51">)<pos:position pos:line="17" pos:column="52"/></operator> <operator pos:line="17" pos:column="53">||<pos:position pos:line="17" pos:column="55"/></operator> <name pos:line="17" pos:column="56">pwdSize<pos:position pos:line="17" pos:column="63"/></name> <operator pos:line="17" pos:column="64">==<pos:position pos:line="17" pos:column="66"/></operator> <name pos:line="17" pos:column="67">NULL<pos:position pos:line="17" pos:column="71"/></name> <operator pos:line="17" pos:column="72">||<pos:position pos:line="17" pos:column="74"/></operator> <name pos:line="17" pos:column="75">ld<pos:position pos:line="17" pos:column="77"/></name> <operator pos:line="17" pos:column="78">==<pos:position pos:line="17" pos:column="80"/></operator> <name pos:line="17" pos:column="81">NULL<pos:position pos:line="17" pos:column="85"/></name></expr>)<pos:position pos:line="17" pos:column="86"/></condition><then pos:line="17" pos:column="86"> <block pos:line="17" pos:column="87">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">LDAP_NO_SUCH_ATTRIBUTE<pos:position pos:line="18" pos:column="38"/></name></expr>;<pos:position pos:line="18" pos:column="39"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">bufferLen<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">pwdBufLen<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">*<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">pwdSize<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">pwdBuf<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">SMB_MALLOC_ARRAY<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">char<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">pwdBufLen<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">+<pos:position pos:line="22" pos:column="47"/></operator><literal type="number" pos:line="22" pos:column="47">2<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">pwdBuf<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">==<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">NULL<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24"> <block pos:line="23" pos:column="25">{
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">LDAP_NO_MEMORY<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">err<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <call><name pos:line="27" pos:column="11">berEncodePasswordData<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="34">requestBV<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">objectDN<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">NULL<pos:position pos:line="27" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="61">NULL<pos:position pos:line="27" pos:column="65"/></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="67"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">err<pos:position pos:line="28" pos:column="12"/></name></expr>)<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13"> <block pos:line="28" pos:column="14">{
        <goto pos:line="29" pos:column="9">goto <name pos:line="29" pos:column="14">Cleanup<pos:position pos:line="29" pos:column="21"/></name>;<pos:position pos:line="29" pos:column="22"/></goto>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/* Call the ldap_extended_operation (synchronously) */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">err<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">ldap_extended_operation_s<pos:position pos:line="33" pos:column="41"/></name><argument_list pos:line="33" pos:column="41">(<argument><expr><name pos:line="33" pos:column="42">ld<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="46">NMASLDAP_GET_PASSWORD_REQUEST<pos:position pos:line="33" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="77">requestBV<pos:position pos:line="33" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="88">NULL<pos:position pos:line="33" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="94">NULL<pos:position pos:line="33" pos:column="98"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="100">&amp;<pos:position pos:line="33" pos:column="105"/></operator><name pos:line="33" pos:column="101">replyOID<pos:position pos:line="33" pos:column="109"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="111">&amp;<pos:position pos:line="33" pos:column="116"/></operator><name pos:line="33" pos:column="112">replyBV<pos:position pos:line="33" pos:column="119"/></name></expr></argument>)<pos:position pos:line="33" pos:column="120"/></argument_list></call><operator pos:line="33" pos:column="120">)<pos:position pos:line="33" pos:column="121"/></operator></expr>)<pos:position pos:line="33" pos:column="122"/></condition><then pos:line="33" pos:column="122"> <block pos:line="33" pos:column="123">{
        <goto pos:line="34" pos:column="9">goto <name pos:line="34" pos:column="14">Cleanup<pos:position pos:line="34" pos:column="21"/></name>;<pos:position pos:line="34" pos:column="22"/></goto>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="37" pos:column="5">/* Make sure there is a return OID */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">replyOID<pos:position pos:line="38" pos:column="18"/></name></expr>)<pos:position pos:line="38" pos:column="19"/></condition><then pos:line="38" pos:column="19"> <block pos:line="38" pos:column="20">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">err<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">LDAP_NOT_SUPPORTED<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
        <goto pos:line="40" pos:column="9">goto <name pos:line="40" pos:column="14">Cleanup<pos:position pos:line="40" pos:column="21"/></name>;<pos:position pos:line="40" pos:column="22"/></goto>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="43" pos:column="5">/* Is this what we were expecting to get back. */</comment>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name pos:line="44" pos:column="9">strcmp<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">replyOID<pos:position pos:line="44" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="26">NMASLDAP_GET_PASSWORD_RESPONSE<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="58"/></condition><then pos:line="44" pos:column="58"> <block pos:line="44" pos:column="59">{
        <expr_stmt><expr><name pos:line="45" pos:column="9">err<pos:position pos:line="45" pos:column="12"/></name> <operator pos:line="45" pos:column="13">=<pos:position pos:line="45" pos:column="14"/></operator> <name pos:line="45" pos:column="15">LDAP_NOT_SUPPORTED<pos:position pos:line="45" pos:column="33"/></name></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
        <goto pos:line="46" pos:column="9">goto <name pos:line="46" pos:column="14">Cleanup<pos:position pos:line="46" pos:column="21"/></name>;<pos:position pos:line="46" pos:column="22"/></goto>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="49" pos:column="5">/* Do we have a good returned berval? */</comment>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">!<pos:position pos:line="50" pos:column="10"/></operator><name pos:line="50" pos:column="10">replyBV<pos:position pos:line="50" pos:column="17"/></name></expr>)<pos:position pos:line="50" pos:column="18"/></condition><then pos:line="50" pos:column="18"> <block pos:line="50" pos:column="19">{
        <comment type="block" pos:line="51" pos:column="9">/* No; returned berval means we experienced a rather drastic error. */</comment>
        <comment type="block" pos:line="52" pos:column="9">/* Return operations error. */</comment>
        <expr_stmt><expr><name pos:line="53" pos:column="9">err<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <name pos:line="53" pos:column="15">LDAP_OPERATIONS_ERROR<pos:position pos:line="53" pos:column="36"/></name></expr>;<pos:position pos:line="53" pos:column="37"/></expr_stmt>
        <goto pos:line="54" pos:column="9">goto <name pos:line="54" pos:column="14">Cleanup<pos:position pos:line="54" pos:column="21"/></name>;<pos:position pos:line="54" pos:column="22"/></goto>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="57" pos:column="5">err<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <call><name pos:line="57" pos:column="11">berDecodeLoginData<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">replyBV<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="39">&amp;<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="40">serverVersion<pos:position pos:line="57" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="55">&amp;<pos:position pos:line="57" pos:column="60"/></operator><name pos:line="57" pos:column="56">pwdBufLen<pos:position pos:line="57" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="67">pwdBuf<pos:position pos:line="57" pos:column="73"/></name></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">serverVersion<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">!=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">NMAS_LDAP_EXT_VERSION<pos:position pos:line="59" pos:column="47"/></name></expr>)<pos:position pos:line="59" pos:column="48"/></condition><then pos:line="59" pos:column="48"> <block pos:line="59" pos:column="49">{
        <expr_stmt><expr><name pos:line="60" pos:column="9">err<pos:position pos:line="60" pos:column="12"/></name> <operator pos:line="60" pos:column="13">=<pos:position pos:line="60" pos:column="14"/></operator> <name pos:line="60" pos:column="15">LDAP_OPERATIONS_ERROR<pos:position pos:line="60" pos:column="36"/></name></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>
        <goto pos:line="61" pos:column="9">goto <name pos:line="61" pos:column="14">Cleanup<pos:position pos:line="61" pos:column="21"/></name>;<pos:position pos:line="61" pos:column="22"/></goto>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">!<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">err<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">&amp;&amp;<pos:position pos:line="64" pos:column="24"/></operator> <name pos:line="64" pos:column="17">pwdBufLen<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">!=<pos:position pos:line="64" pos:column="29"/></operator> <literal type="number" pos:line="64" pos:column="30">0<pos:position pos:line="64" pos:column="31"/></literal></expr>)<pos:position pos:line="64" pos:column="32"/></condition><then pos:line="64" pos:column="32"> <block pos:line="64" pos:column="33">{
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">*<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">pwdSize<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">&gt;=<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="25">pwdBufLen<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">+<pos:position pos:line="65" pos:column="35"/></operator><literal type="number" pos:line="65" pos:column="35">1<pos:position pos:line="65" pos:column="36"/></literal> <operator pos:line="65" pos:column="37">&amp;&amp;<pos:position pos:line="65" pos:column="47"/></operator> <name pos:line="65" pos:column="40">pwd<pos:position pos:line="65" pos:column="43"/></name> <operator pos:line="65" pos:column="44">!=<pos:position pos:line="65" pos:column="46"/></operator> <name pos:line="65" pos:column="47">NULL<pos:position pos:line="65" pos:column="51"/></name></expr>)<pos:position pos:line="65" pos:column="52"/></condition><then pos:line="65" pos:column="52"> <block pos:line="65" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">memcpy<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><name pos:line="66" pos:column="20">pwd<pos:position pos:line="66" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="25">pwdBuf<pos:position pos:line="66" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="33">pwdBufLen<pos:position pos:line="66" pos:column="42"/></name></expr></argument>)<pos:position pos:line="66" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="67" pos:column="13">pwd<pos:position pos:line="67" pos:column="16"/></name><index pos:line="67" pos:column="16">[<expr><name pos:line="67" pos:column="17">pwdBufLen<pos:position pos:line="67" pos:column="26"/></name></expr>]<pos:position pos:line="67" pos:column="27"/></index></name> <operator pos:line="67" pos:column="28">=<pos:position pos:line="67" pos:column="29"/></operator> <literal type="number" pos:line="67" pos:column="30">0<pos:position pos:line="67" pos:column="31"/></literal></expr>;<pos:position pos:line="67" pos:column="32"/></expr_stmt> <comment type="block" pos:line="67" pos:column="33">/* add null termination */</comment>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">pwdSize<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">pwdBufLen<pos:position pos:line="69" pos:column="29"/></name></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt> <comment type="block" pos:line="69" pos:column="31">/* does not include null termination */</comment>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

<label><name pos:line="72" pos:column="1">Cleanup<pos:position pos:line="72" pos:column="8"/></name>:<pos:position pos:line="72" pos:column="9"/></label>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">replyBV<pos:position pos:line="74" pos:column="16"/></name></expr>)<pos:position pos:line="74" pos:column="17"/></condition><then pos:line="74" pos:column="17"> <block pos:line="74" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">ber_bvfree<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">replyBV<pos:position pos:line="75" pos:column="27"/></name></expr></argument>)<pos:position pos:line="75" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="78" pos:column="5">/* Free the return OID string if one was returned. */</comment>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">replyOID<pos:position pos:line="79" pos:column="17"/></name></expr>)<pos:position pos:line="79" pos:column="18"/></condition><then pos:line="79" pos:column="18"> <block pos:line="79" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ldap_memfree<pos:position pos:line="80" pos:column="21"/></name><argument_list pos:line="80" pos:column="21">(<argument><expr><name pos:line="80" pos:column="22">replyOID<pos:position pos:line="80" pos:column="30"/></name></expr></argument>)<pos:position pos:line="80" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/* Free memory allocated while building the request ber and berval. */</comment>
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><name pos:line="84" pos:column="9">requestBV<pos:position pos:line="84" pos:column="18"/></name></expr>)<pos:position pos:line="84" pos:column="19"/></condition><then pos:line="84" pos:column="19"> <block pos:line="84" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">ber_bvfree<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><name pos:line="85" pos:column="20">requestBV<pos:position pos:line="85" pos:column="29"/></name></expr></argument>)<pos:position pos:line="85" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">pwdBuf<pos:position pos:line="88" pos:column="15"/></name> <operator pos:line="88" pos:column="16">!=<pos:position pos:line="88" pos:column="18"/></operator> <name pos:line="88" pos:column="19">NULL<pos:position pos:line="88" pos:column="23"/></name></expr>)<pos:position pos:line="88" pos:column="24"/></condition><then pos:line="88" pos:column="24"> <block pos:line="88" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">memset<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><name pos:line="89" pos:column="16">pwdBuf<pos:position pos:line="89" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="24">0<pos:position pos:line="89" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="27">bufferLen<pos:position pos:line="89" pos:column="36"/></name></expr></argument>)<pos:position pos:line="89" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">free<pos:position pos:line="90" pos:column="13"/></name><argument_list pos:line="90" pos:column="13">(<argument><expr><name pos:line="90" pos:column="14">pwdBuf<pos:position pos:line="90" pos:column="20"/></name></expr></argument>)<pos:position pos:line="90" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="93" pos:column="5">/* Return the appropriate error/success code. */</comment>
    <return pos:line="94" pos:column="5">return <expr><name pos:line="94" pos:column="12">err<pos:position pos:line="94" pos:column="15"/></name></expr>;<pos:position pos:line="94" pos:column="16"/></return>
}<pos:position pos:line="95" pos:column="2"/></block></function></unit>

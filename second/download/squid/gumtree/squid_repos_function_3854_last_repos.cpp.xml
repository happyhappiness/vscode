<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3854_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">verifySslCertificate<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name><name pos:line="2" pos:column="27">Security<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">ContextPointer<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">ctx<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">CertificateProperties<pos:position pos:line="2" pos:column="79"/></name> <specifier pos:line="2" pos:column="80">const<pos:position pos:line="2" pos:column="85"/></specifier> <modifier pos:line="2" pos:column="86">&amp;<pos:position pos:line="2" pos:column="91"/></modifier></type><name pos:line="2" pos:column="87">properties<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">HAVE_SSL_CTX_GET0_CERTIFICATE<pos:position pos:line="4" pos:column="34"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">X509<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type> <name pos:line="5" pos:column="12">cert<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name pos:line="5" pos:column="19">SSL_CTX_get0_certificate<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><call><name><name pos:line="5" pos:column="44">ctx<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">.<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="48">get<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">()<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="55"/></decl_stmt>
<cpp:elif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">elif<pos:position pos:line="6" pos:column="6"/></cpp:directive> <expr><name pos:line="6" pos:column="7">SQUID_USE_SSLGETCERTIFICATE_HACK<pos:position pos:line="6" pos:column="39"/></name></expr></cpp:elif>
    <comment type="line" pos:line="7" pos:column="5">// SSL_get_certificate is buggy in openssl versions 1.0.1d and 1.0.1e</comment>
    <comment type="line" pos:line="8" pos:column="5">// Try to retrieve certificate directly from Security::ContextPointer object</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">X509<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier><modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier><modifier pos:line="9" pos:column="12">*<pos:position pos:line="9" pos:column="13"/></modifier></type><name pos:line="9" pos:column="13">pCert<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">X509<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></operator><operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></operator><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator><name><name pos:line="9" pos:column="31">ctx<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">cert<pos:position pos:line="9" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">X509<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type> <name pos:line="10" pos:column="12">cert<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><ternary><condition><expr><name pos:line="10" pos:column="19">pCert<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">pCert<pos:position pos:line="10" pos:column="34"/></name></expr> ?<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <expr><operator pos:line="10" pos:column="37">*<pos:position pos:line="10" pos:column="38"/></operator><operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="39">pCert<pos:position pos:line="10" pos:column="44"/></name></expr> <pos:position pos:line="10" pos:column="45"/></then><else pos:line="10" pos:column="45">: <expr><name pos:line="10" pos:column="47">NULL<pos:position pos:line="10" pos:column="51"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="10" pos:column="52"/></decl_stmt>
<cpp:elif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">elif<pos:position pos:line="11" pos:column="6"/></cpp:directive> <expr><name pos:line="11" pos:column="7">SQUID_SSLGETCERTIFICATE_BUGGY<pos:position pos:line="11" pos:column="36"/></name></expr></cpp:elif>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">X509<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type> <name pos:line="12" pos:column="12">cert<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="line" pos:line="15" pos:column="5">// Temporary ssl for getting X509 certificate from SSL_CTX.</comment>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">Security<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">::<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">SessionPointer<pos:position pos:line="16" pos:column="29"/></name></name></type> <name pos:line="16" pos:column="30">ssl<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><call><name><name pos:line="16" pos:column="34">Security<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">::<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">NewSessionObject<pos:position pos:line="16" pos:column="60"/></name></name><argument_list pos:line="16" pos:column="60">(<argument><expr><name pos:line="16" pos:column="61">ctx<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></decl>;<pos:position pos:line="16" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">X509<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type> <name pos:line="17" pos:column="12">cert<pos:position pos:line="17" pos:column="16"/></name> <init pos:line="17" pos:column="17">= <expr><call><name pos:line="17" pos:column="19">SSL_get_certificate<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><call><name><name pos:line="17" pos:column="39">ssl<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">.<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">get<pos:position pos:line="17" pos:column="46"/></name></name><argument_list pos:line="17" pos:column="46">()<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="50"/></decl_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">cert<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition><then pos:line="19" pos:column="15">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">false<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return></block></then></if>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">ASN1_TIME<pos:position pos:line="21" pos:column="14"/></name> <modifier pos:line="21" pos:column="15">*<pos:position pos:line="21" pos:column="16"/></modifier></type> <name pos:line="21" pos:column="17">time_notBefore<pos:position pos:line="21" pos:column="31"/></name> <init pos:line="21" pos:column="32">= <expr><call><name pos:line="21" pos:column="34">X509_get_notBefore<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">(<argument><expr><name pos:line="21" pos:column="53">cert<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">ASN1_TIME<pos:position pos:line="22" pos:column="14"/></name> <modifier pos:line="22" pos:column="15">*<pos:position pos:line="22" pos:column="16"/></modifier></type> <name pos:line="22" pos:column="17">time_notAfter<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><call><name pos:line="22" pos:column="33">X509_get_notAfter<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">cert<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">bool<pos:position pos:line="23" pos:column="9"/></name></type> <name pos:line="23" pos:column="10">ret<pos:position pos:line="23" pos:column="13"/></name> <init pos:line="23" pos:column="14">= <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><call><name pos:line="23" pos:column="17">X509_cmp_current_time<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">time_notBefore<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call> <operator pos:line="23" pos:column="55">&lt;<pos:position pos:line="23" pos:column="59"/></operator> <literal type="number" pos:line="23" pos:column="57">0<pos:position pos:line="23" pos:column="58"/></literal> <operator pos:line="23" pos:column="59">&amp;&amp;<pos:position pos:line="23" pos:column="69"/></operator> <call><name pos:line="23" pos:column="62">X509_cmp_current_time<pos:position pos:line="23" pos:column="83"/></name><argument_list pos:line="23" pos:column="83">(<argument><expr><name pos:line="23" pos:column="84">time_notAfter<pos:position pos:line="23" pos:column="97"/></name></expr></argument>)<pos:position pos:line="23" pos:column="98"/></argument_list></call> <operator pos:line="23" pos:column="99">&gt;<pos:position pos:line="23" pos:column="103"/></operator> <literal type="number" pos:line="23" pos:column="101">0<pos:position pos:line="23" pos:column="102"/></literal><operator pos:line="23" pos:column="102">)<pos:position pos:line="23" pos:column="103"/></operator></expr></init></decl>;<pos:position pos:line="23" pos:column="104"/></decl_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">ret<pos:position pos:line="24" pos:column="13"/></name></expr>)<pos:position pos:line="24" pos:column="14"/></condition><then pos:line="24" pos:column="14">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="boolean" pos:line="25" pos:column="16">false<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></then></if>

    <return pos:line="27" pos:column="5">return <expr><call><name pos:line="27" pos:column="12">certificateMatchesProperties<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">cert<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">properties<pos:position pos:line="27" pos:column="57"/></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

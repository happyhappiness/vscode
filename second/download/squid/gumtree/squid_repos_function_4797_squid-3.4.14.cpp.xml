<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4797_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">HelperChildConfig<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">needNew<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* during the startup and reconfigure use our special amount... */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">starting_up<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">||<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">reconfiguring<pos:position pos:line="5" pos:column="37"/></name></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <block type="pseudo"><return pos:line="5" pos:column="39">return <expr><name pos:line="5" pos:column="46">n_startup<pos:position pos:line="5" pos:column="55"/></name></expr>;<pos:position pos:line="5" pos:column="56"/></return></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/* keep a minimum of n_idle helpers free... */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">( <expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">n_active<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">+<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">n_idle<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">&lt;<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="32">n_max<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <block type="pseudo"><return pos:line="8" pos:column="39">return <expr><name pos:line="8" pos:column="46">n_idle<pos:position pos:line="8" pos:column="52"/></name></expr>;<pos:position pos:line="8" pos:column="53"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* dont ever start more than n_max processes. */</comment>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">n_max<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">-<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">n_active<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator></expr>;<pos:position pos:line="11" pos:column="31"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

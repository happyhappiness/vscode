<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1901_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">StoreIOState<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name pos:line="2" pos:column="1">storeCreate<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">StoreEntry<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type> <name pos:line="2" pos:column="26">e<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="29">StoreIOState<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">STFNCB<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type> <name pos:line="2" pos:column="52">file_callback<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="67">StoreIOState<pos:position pos:line="2" pos:column="79"/></name><operator pos:line="2" pos:column="79">::<pos:position pos:line="2" pos:column="81"/></operator><name pos:line="2" pos:column="81">STIOCB<pos:position pos:line="2" pos:column="87"/></name></name> <modifier pos:line="2" pos:column="88">*<pos:position pos:line="2" pos:column="89"/></modifier></type> <name pos:line="2" pos:column="90">close_callback<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="106">void<pos:position pos:line="2" pos:column="110"/></name> <modifier pos:line="2" pos:column="111">*<pos:position pos:line="2" pos:column="112"/></modifier></type><name pos:line="2" pos:column="112">callback_data<pos:position pos:line="2" pos:column="125"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="126"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">e<pos:position pos:line="4" pos:column="14"/></name></expr></argument>)<pos:position pos:line="4" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="6" pos:column="5">++<pos:position pos:line="6" pos:column="7"/></operator><name><name pos:line="6" pos:column="7">store_io_stats<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">create<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">calls<pos:position pos:line="6" pos:column="34"/></name></name></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * Pick the swapdir
     * We assume that the header has been packed by now ..
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">sdirno<pos:position pos:line="12" pos:column="17"/></name></type> <name pos:line="12" pos:column="18">dirn<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><call><name pos:line="12" pos:column="25">storeDirSelectSwapDir<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><name pos:line="12" pos:column="47">e<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">dirn<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <operator pos:line="14" pos:column="17">-<pos:position pos:line="14" pos:column="18"/></operator><literal type="number" pos:line="14" pos:column="18">1<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">20<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">2<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"storeCreate: no swapdirs for "<pos:position pos:line="15" pos:column="54"/></literal> <operator pos:line="15" pos:column="55">&lt;&lt;<pos:position pos:line="15" pos:column="63"/></operator> <operator pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">e<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator><name><name pos:line="16" pos:column="11">store_io_stats<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">.<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">create<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">.<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">select_fail<pos:position pos:line="16" pos:column="44"/></name></name></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">20<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">2<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"storeCreate: Selected dir "<pos:position pos:line="20" pos:column="47"/></literal> <operator pos:line="20" pos:column="48">&lt;&lt;<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="51">dirn<pos:position pos:line="20" pos:column="55"/></name> <operator pos:line="20" pos:column="56">&lt;&lt;<pos:position pos:line="20" pos:column="64"/></operator> <literal type="string" pos:line="20" pos:column="59">" for "<pos:position pos:line="20" pos:column="66"/></literal> <operator pos:line="20" pos:column="67">&lt;&lt;<pos:position pos:line="20" pos:column="75"/></operator> <operator pos:line="20" pos:column="70">*<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="71">e<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">SwapDir<pos:position pos:line="21" pos:column="12"/></name> <modifier pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></modifier></type><name pos:line="21" pos:column="14">SD<pos:position pos:line="21" pos:column="16"/></name> <init pos:line="21" pos:column="17">= <expr><cast type="dynamic" pos:line="21" pos:column="19">dynamic_cast<argument_list type="generic" pos:line="21" pos:column="31">&lt;<argument><expr><name pos:line="21" pos:column="32">SwapDir<pos:position pos:line="21" pos:column="39"/></name> <operator pos:line="21" pos:column="40">*<pos:position pos:line="21" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="21" pos:column="45"/></argument_list><argument_list pos:line="21" pos:column="42">(<argument><expr><call><name pos:line="21" pos:column="43">INDEXSD<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><name pos:line="21" pos:column="51">dirn<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="21" pos:column="58"/></decl_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Now that we have a fs to use, call its storeCreate function */</comment>
    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">StoreIOState<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">::<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">Pointer<pos:position pos:line="24" pos:column="26"/></name></name></type> <name pos:line="24" pos:column="27">sio<pos:position pos:line="24" pos:column="30"/></name> <init pos:line="24" pos:column="31">= <expr><call><name><name pos:line="24" pos:column="33">SD<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">-&gt;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="37">createStoreIO<pos:position pos:line="24" pos:column="50"/></name></name><argument_list pos:line="24" pos:column="50">(<argument><expr><operator pos:line="24" pos:column="51">*<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">e<pos:position pos:line="24" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">file_callback<pos:position pos:line="24" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="70">close_callback<pos:position pos:line="24" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="86">callback_data<pos:position pos:line="24" pos:column="99"/></name></expr></argument>)<pos:position pos:line="24" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="101"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">sio<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="27" pos:column="9">++<pos:position pos:line="27" pos:column="11"/></operator><name><name pos:line="27" pos:column="11">store_io_stats<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">create<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">create_fail<pos:position pos:line="27" pos:column="44"/></name></name></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt></block></then>
    <else pos:line="28" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="29" pos:column="9">++<pos:position pos:line="29" pos:column="11"/></operator><name><name pos:line="29" pos:column="11">store_io_stats<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">.<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">create<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">success<pos:position pos:line="29" pos:column="40"/></name></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt></block></else></if>

    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">sio<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

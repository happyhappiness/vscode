<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7188_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ipc<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">StrandCoords<pos:position pos:line="1" pos:column="18"/></name></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Inquirer<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">applyQueryParams<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name><name pos:line="2" pos:column="39">Ipc<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">StrandCoords<pos:position pos:line="2" pos:column="56"/></name></name><modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type> <name pos:line="2" pos:column="58">aStrands<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="68">const<pos:position pos:line="2" pos:column="73"/></specifier> <name pos:line="2" pos:column="74">QueryParams<pos:position pos:line="2" pos:column="85"/></name><modifier pos:line="2" pos:column="85">&amp;<pos:position pos:line="2" pos:column="90"/></modifier></type> <name pos:line="2" pos:column="87">aParams<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="95"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ipc<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">StrandCoords<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">sc<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">QueryParam<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">::<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">Pointer<pos:position pos:line="6" pos:column="24"/></name></name></type> <name pos:line="6" pos:column="25">processesParam<pos:position pos:line="6" pos:column="39"/></name> <init pos:line="6" pos:column="40">= <expr><call><name><name pos:line="6" pos:column="42">aParams<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">.<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">get<pos:position pos:line="6" pos:column="53"/></name></name><argument_list pos:line="6" pos:column="53">(<argument><expr><literal type="string" pos:line="6" pos:column="54">"processes"<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">QueryParam<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">::<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">Pointer<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">workersParam<pos:position pos:line="7" pos:column="37"/></name> <init pos:line="7" pos:column="38">= <expr><call><name><name pos:line="7" pos:column="40">aParams<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">get<pos:position pos:line="7" pos:column="51"/></name></name><argument_list pos:line="7" pos:column="51">(<argument><expr><literal type="string" pos:line="7" pos:column="52">"workers"<pos:position pos:line="7" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="63"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">processesParam<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="27">NULL<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">||<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">workersParam<pos:position pos:line="9" pos:column="47"/></name> <operator pos:line="9" pos:column="48">==<pos:position pos:line="9" pos:column="50"/></operator> <name pos:line="9" pos:column="51">NULL<pos:position pos:line="9" pos:column="55"/></name></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56"> <block pos:line="9" pos:column="57">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">processesParam<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">!=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">NULL<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
            <decl_stmt><decl><type><name pos:line="11" pos:column="13">IntParam<pos:position pos:line="11" pos:column="21"/></name><modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type> <name pos:line="11" pos:column="23">param<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><cast type="dynamic" pos:line="11" pos:column="31">dynamic_cast<argument_list type="generic" pos:line="11" pos:column="43">&lt;<argument><expr><name pos:line="11" pos:column="44">IntParam<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">*<pos:position pos:line="11" pos:column="53"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="57"/></argument_list><argument_list pos:line="11" pos:column="54">(<argument><expr><call><name><name pos:line="11" pos:column="55">processesParam<pos:position pos:line="11" pos:column="69"/></name><operator pos:line="11" pos:column="69">.<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="70">getRaw<pos:position pos:line="11" pos:column="76"/></name></name><argument_list pos:line="11" pos:column="76">()<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="80"/></decl_stmt>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">param<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">&amp;&amp;<pos:position pos:line="12" pos:column="41"/></operator> <name><name pos:line="12" pos:column="34">param<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">type<pos:position pos:line="12" pos:column="45"/></name></name> <operator pos:line="12" pos:column="46">==<pos:position pos:line="12" pos:column="48"/></operator> <name><name pos:line="12" pos:column="49">QueryParam<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">::<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">ptInt<pos:position pos:line="12" pos:column="66"/></name></name></expr>)<pos:position pos:line="12" pos:column="67"/></condition><then pos:line="12" pos:column="67"> <block pos:line="12" pos:column="68">{
                <decl_stmt><decl><type><specifier pos:line="13" pos:column="17">const<pos:position pos:line="13" pos:column="22"/></specifier> <name><name pos:line="13" pos:column="23">std<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">::<pos:position pos:line="13" pos:column="28"/></operator><name><name pos:line="13" pos:column="28">vector<pos:position pos:line="13" pos:column="34"/></name><argument_list type="generic" pos:line="13" pos:column="34">&lt;<argument><expr><name pos:line="13" pos:column="35">int<pos:position pos:line="13" pos:column="38"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="42"/></argument_list></name></name><modifier pos:line="13" pos:column="39">&amp;<pos:position pos:line="13" pos:column="44"/></modifier></type> <name pos:line="13" pos:column="41">processes<pos:position pos:line="13" pos:column="50"/></name> <init pos:line="13" pos:column="51">= <expr><call><name><name pos:line="13" pos:column="53">param<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">value<pos:position pos:line="13" pos:column="65"/></name></name><argument_list pos:line="13" pos:column="65">()<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="68"/></decl_stmt>
                <for pos:line="14" pos:column="17">for <control pos:line="14" pos:column="21">(<init><decl><type><name><name pos:line="14" pos:column="22">Ipc<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">::<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">StrandCoords<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">::<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">const_iterator<pos:position pos:line="14" pos:column="55"/></name></name></type> <name pos:line="14" pos:column="56">iter<pos:position pos:line="14" pos:column="60"/></name> <init pos:line="14" pos:column="61">= <expr><call><name><name pos:line="14" pos:column="63">aStrands<pos:position pos:line="14" pos:column="71"/></name><operator pos:line="14" pos:column="71">.<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">begin<pos:position pos:line="14" pos:column="77"/></name></name><argument_list pos:line="14" pos:column="77">()<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="80"/></init>
                        <condition><expr><name pos:line="15" pos:column="25">iter<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">!=<pos:position pos:line="15" pos:column="32"/></operator> <call><name><name pos:line="15" pos:column="33">aStrands<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">.<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">end<pos:position pos:line="15" pos:column="45"/></name></name><argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="48"/></condition> <incr><expr><operator pos:line="15" pos:column="49">++<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">iter<pos:position pos:line="15" pos:column="55"/></name></expr></incr>)<pos:position pos:line="15" pos:column="56"/></control> <block pos:line="15" pos:column="57">{
                    <if pos:line="16" pos:column="21">if <condition pos:line="16" pos:column="24">(<expr><call><name><name pos:line="16" pos:column="25">std<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">::<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">find<pos:position pos:line="16" pos:column="34"/></name></name><argument_list pos:line="16" pos:column="34">(<argument><expr><call><name><name pos:line="16" pos:column="35">processes<pos:position pos:line="16" pos:column="44"/></name><operator pos:line="16" pos:column="44">.<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="45">begin<pos:position pos:line="16" pos:column="50"/></name></name><argument_list pos:line="16" pos:column="50">()<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="16" pos:column="54">processes<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">.<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">end<pos:position pos:line="16" pos:column="67"/></name></name><argument_list pos:line="16" pos:column="67">()<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="71">iter<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">-&gt;<pos:position pos:line="16" pos:column="80"/></operator><name pos:line="16" pos:column="77">kidId<pos:position pos:line="16" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="83"/></argument_list></call> <operator pos:line="16" pos:column="84">!=<pos:position pos:line="16" pos:column="86"/></operator> <call><name><name pos:line="16" pos:column="87">processes<pos:position pos:line="16" pos:column="96"/></name><operator pos:line="16" pos:column="96">.<pos:position pos:line="16" pos:column="97"/></operator><name pos:line="16" pos:column="97">end<pos:position pos:line="16" pos:column="100"/></name></name><argument_list pos:line="16" pos:column="100">()<pos:position pos:line="16" pos:column="102"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="103"/></condition><then pos:line="16" pos:column="103">
                        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="25">sc<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">push_back<pos:position pos:line="17" pos:column="37"/></name></name><argument_list pos:line="17" pos:column="37">(<argument><expr><operator pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">iter<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt></block></then></if>
                }<pos:position pos:line="18" pos:column="18"/></block></for>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
        }<pos:position pos:line="20" pos:column="10"/></block></then> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><name pos:line="20" pos:column="20">workersParam<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">!=<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">NULL<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">IntParam<pos:position pos:line="21" pos:column="21"/></name><modifier pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></modifier></type> <name pos:line="21" pos:column="23">param<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><cast type="dynamic" pos:line="21" pos:column="31">dynamic_cast<argument_list type="generic" pos:line="21" pos:column="43">&lt;<argument><expr><name pos:line="21" pos:column="44">IntParam<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">*<pos:position pos:line="21" pos:column="53"/></operator></expr></argument>&gt;<pos:position pos:line="21" pos:column="57"/></argument_list><argument_list pos:line="21" pos:column="54">(<argument><expr><call><name><name pos:line="21" pos:column="55">workersParam<pos:position pos:line="21" pos:column="67"/></name><operator pos:line="21" pos:column="67">.<pos:position pos:line="21" pos:column="68"/></operator><name pos:line="21" pos:column="68">getRaw<pos:position pos:line="21" pos:column="74"/></name></name><argument_list pos:line="21" pos:column="74">()<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="21" pos:column="78"/></decl_stmt>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">param<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">!=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">&amp;&amp;<pos:position pos:line="22" pos:column="41"/></operator> <name><name pos:line="22" pos:column="34">param<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">type<pos:position pos:line="22" pos:column="45"/></name></name> <operator pos:line="22" pos:column="46">==<pos:position pos:line="22" pos:column="48"/></operator> <name><name pos:line="22" pos:column="49">QueryParam<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">::<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="61">ptInt<pos:position pos:line="22" pos:column="66"/></name></name></expr>)<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67"> <block pos:line="22" pos:column="68">{
                <decl_stmt><decl><type><specifier pos:line="23" pos:column="17">const<pos:position pos:line="23" pos:column="22"/></specifier> <name><name pos:line="23" pos:column="23">std<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">::<pos:position pos:line="23" pos:column="28"/></operator><name><name pos:line="23" pos:column="28">vector<pos:position pos:line="23" pos:column="34"/></name><argument_list type="generic" pos:line="23" pos:column="34">&lt;<argument><expr><name pos:line="23" pos:column="35">int<pos:position pos:line="23" pos:column="38"/></name></expr></argument>&gt;<pos:position pos:line="23" pos:column="42"/></argument_list></name></name><modifier pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></modifier></type> <name pos:line="23" pos:column="41">workers<pos:position pos:line="23" pos:column="48"/></name> <init pos:line="23" pos:column="49">= <expr><call><name><name pos:line="23" pos:column="51">param<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">value<pos:position pos:line="23" pos:column="63"/></name></name><argument_list pos:line="23" pos:column="63">()<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="66"/></decl_stmt>
                <for pos:line="24" pos:column="17">for <control pos:line="24" pos:column="21">(<init><decl><type><name pos:line="24" pos:column="22">int<pos:position pos:line="24" pos:column="25"/></name></type> <name pos:line="24" pos:column="26">i<pos:position pos:line="24" pos:column="27"/></name> <init pos:line="24" pos:column="28">= <expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="32"/></init> <condition><expr><name pos:line="24" pos:column="33">i<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">&lt;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="37">(<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">int<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">)<pos:position pos:line="24" pos:column="42"/></operator><call><name><name pos:line="24" pos:column="42">aStrands<pos:position pos:line="24" pos:column="50"/></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">size<pos:position pos:line="24" pos:column="55"/></name></name><argument_list pos:line="24" pos:column="55">()<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></condition> <incr><expr><operator pos:line="24" pos:column="59">++<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="61">i<pos:position pos:line="24" pos:column="62"/></name></expr></incr>)<pos:position pos:line="24" pos:column="63"/></control> <block pos:line="24" pos:column="64">{
                    <if pos:line="25" pos:column="21">if <condition pos:line="25" pos:column="24">(<expr><call><name><name pos:line="25" pos:column="25">std<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">::<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">find<pos:position pos:line="25" pos:column="34"/></name></name><argument_list pos:line="25" pos:column="34">(<argument><expr><call><name><name pos:line="25" pos:column="35">workers<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">begin<pos:position pos:line="25" pos:column="48"/></name></name><argument_list pos:line="25" pos:column="48">()<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="52">workers<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">end<pos:position pos:line="25" pos:column="63"/></name></name><argument_list pos:line="25" pos:column="63">()<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="67">i<pos:position pos:line="25" pos:column="68"/></name> <operator pos:line="25" pos:column="69">+<pos:position pos:line="25" pos:column="70"/></operator> <literal type="number" pos:line="25" pos:column="71">1<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call> <operator pos:line="25" pos:column="74">!=<pos:position pos:line="25" pos:column="76"/></operator> <call><name><name pos:line="25" pos:column="77">workers<pos:position pos:line="25" pos:column="84"/></name><operator pos:line="25" pos:column="84">.<pos:position pos:line="25" pos:column="85"/></operator><name pos:line="25" pos:column="85">end<pos:position pos:line="25" pos:column="88"/></name></name><argument_list pos:line="25" pos:column="88">()<pos:position pos:line="25" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="91"/></condition><then pos:line="25" pos:column="91">
                        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="26" pos:column="25">sc<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">.<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">push_back<pos:position pos:line="26" pos:column="37"/></name></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">aStrands<pos:position pos:line="26" pos:column="46"/></name><index pos:line="26" pos:column="46">[<expr><name pos:line="26" pos:column="47">i<pos:position pos:line="26" pos:column="48"/></name></expr>]<pos:position pos:line="26" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt></block></then></if>
                }<pos:position pos:line="27" pos:column="18"/></block></for>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
            <expr_stmt><expr><name pos:line="30" pos:column="13">sc<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">aStrands<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">debugs<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">16<pos:position pos:line="34" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="16">4<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="19">HERE<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">&lt;&lt;<pos:position pos:line="34" pos:column="32"/></operator> <literal type="string" pos:line="34" pos:column="27">"strands kid IDs = "<pos:position pos:line="34" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><decl><type><name><name pos:line="35" pos:column="10">Ipc<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">::<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">StrandCoords<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">::<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">const_iterator<pos:position pos:line="35" pos:column="43"/></name></name></type> <name pos:line="35" pos:column="44">iter<pos:position pos:line="35" pos:column="48"/></name> <init pos:line="35" pos:column="49">= <expr><call><name><name pos:line="35" pos:column="51">sc<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">.<pos:position pos:line="35" pos:column="54"/></operator><name pos:line="35" pos:column="54">begin<pos:position pos:line="35" pos:column="59"/></name></name><argument_list pos:line="35" pos:column="59">()<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="62"/></init> <condition><expr><name pos:line="35" pos:column="63">iter<pos:position pos:line="35" pos:column="67"/></name> <operator pos:line="35" pos:column="68">!=<pos:position pos:line="35" pos:column="70"/></operator> <call><name><name pos:line="35" pos:column="71">sc<pos:position pos:line="35" pos:column="73"/></name><operator pos:line="35" pos:column="73">.<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="74">end<pos:position pos:line="35" pos:column="77"/></name></name><argument_list pos:line="35" pos:column="77">()<pos:position pos:line="35" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="80"/></condition> <incr><expr><operator pos:line="35" pos:column="81">++<pos:position pos:line="35" pos:column="83"/></operator><name pos:line="35" pos:column="83">iter<pos:position pos:line="35" pos:column="87"/></name></expr></incr>)<pos:position pos:line="35" pos:column="88"/></control> <block pos:line="35" pos:column="89">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">16<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">4<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">HERE<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&lt;&lt;<pos:position pos:line="36" pos:column="36"/></operator> <name><name pos:line="36" pos:column="31">iter<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">-&gt;<pos:position pos:line="36" pos:column="40"/></operator><name pos:line="36" pos:column="37">kidId<pos:position pos:line="36" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></for>

    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">sc<pos:position pos:line="39" pos:column="14"/></name></expr>;<pos:position pos:line="39" pos:column="15"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4481_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLNoteData<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">match<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">HttpRequest<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">request<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">request<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">notes<pos:position pos:line="4" pos:column="23"/></name></name> <operator pos:line="4" pos:column="24">!=<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&amp;&amp;<pos:position pos:line="4" pos:column="42"/></operator> <call><name pos:line="4" pos:column="35">matchNotes<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">(<argument><expr><call><name><name pos:line="4" pos:column="46">request<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">-&gt;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="55">notes<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">.<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="61">getRaw<pos:position pos:line="4" pos:column="67"/></name></name><argument_list pos:line="4" pos:column="67">()<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="71"/></condition><then pos:line="4" pos:column="71">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">true<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_ADAPTATION<pos:position pos:line="6" pos:column="19"/></name></expr></cpp:if>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name><name pos:line="7" pos:column="11">Adaptation<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">::<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">History<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">::<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">Pointer<pos:position pos:line="7" pos:column="39"/></name></name></type> <name pos:line="7" pos:column="40">ah<pos:position pos:line="7" pos:column="42"/></name> <init pos:line="7" pos:column="43">= <expr><call><name><name pos:line="7" pos:column="45">request<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">adaptLogHistory<pos:position pos:line="7" pos:column="69"/></name></name><argument_list pos:line="7" pos:column="69">()<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="72"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">ah<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">!=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <name><name pos:line="8" pos:column="23">ah<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">metaHeaders<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">!=<pos:position pos:line="8" pos:column="41"/></operator> <name pos:line="8" pos:column="42">NULL<pos:position pos:line="8" pos:column="46"/></name> <operator pos:line="8" pos:column="47">&amp;&amp;<pos:position pos:line="8" pos:column="57"/></operator> <call><name pos:line="8" pos:column="50">matchNotes<pos:position pos:line="8" pos:column="60"/></name><argument_list pos:line="8" pos:column="60">(<argument><expr><call><name><name pos:line="8" pos:column="61">ah<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">-&gt;<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="65">metaHeaders<pos:position pos:line="8" pos:column="76"/></name><operator pos:line="8" pos:column="76">.<pos:position pos:line="8" pos:column="77"/></operator><name pos:line="8" pos:column="77">getRaw<pos:position pos:line="8" pos:column="83"/></name></name><argument_list pos:line="8" pos:column="83">()<pos:position pos:line="8" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="87"/></condition><then pos:line="8" pos:column="87">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">true<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="11" pos:column="5">return <expr><literal type="boolean" pos:line="11" pos:column="12">false<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

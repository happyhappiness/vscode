<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2142_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">htcpBuildPacket<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">buf<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">buflen<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">htcpStuff<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">stuff<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ssize_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">s<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ssize_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">off<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">hdr_sz<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">htcpHeader<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">htcpHeader<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">hdr<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* skip the header -- we don't know the overall length */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">buflen<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">&lt;<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="18">hdr_sz<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">off<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">+=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">hdr_sz<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">s<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <call><name pos:line="15" pos:column="9">htcpBuildData<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">buf<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">+<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">off<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">buflen<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">-<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">off<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="48">stuff<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">s<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">&lt;<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal></expr>)<pos:position pos:line="17" pos:column="15"/></condition><then pos:line="17" pos:column="15"> <block pos:line="17" pos:column="16">{
        <return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">off<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">+=<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">s<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">s<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <call><name pos:line="22" pos:column="9">htcpBuildAuth<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">buf<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">+<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">off<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">buflen<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">-<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">off<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">&lt;<pos:position pos:line="24" pos:column="15"/></operator> <literal type="number" pos:line="24" pos:column="13">0<pos:position pos:line="24" pos:column="14"/></literal></expr>)<pos:position pos:line="24" pos:column="15"/></condition><then pos:line="24" pos:column="15"> <block pos:line="24" pos:column="16">{
        <return pos:line="25" pos:column="9">return <expr><literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="28" pos:column="5">off<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">+=<pos:position pos:line="28" pos:column="11"/></operator> <name pos:line="28" pos:column="12">s<pos:position pos:line="28" pos:column="13"/></name></expr>;<pos:position pos:line="28" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">hdr<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">.<pos:position pos:line="29" pos:column="9"/></operator><name pos:line="29" pos:column="9">length<pos:position pos:line="29" pos:column="15"/></name></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">htons<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">uint16_t<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">)<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="35">off<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">hdr<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">.<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">major<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">old_squid_format<pos:position pos:line="32" pos:column="25"/></name></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="9">hdr<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">.<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">minor<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal></expr>;<pos:position pos:line="33" pos:column="23"/></expr_stmt></block></then>
    <else pos:line="34" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="9">hdr<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">minor<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">1<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">memcpy<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">buf<pos:position pos:line="37" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="17">&amp;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="18">hdr<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="23">hdr_sz<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">debugs<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="number" pos:line="39" pos:column="12">31<pos:position pos:line="39" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="16">3<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="19">"htcpBuildPacket: size "<pos:position pos:line="39" pos:column="43"/></literal> <operator pos:line="39" pos:column="44">&lt;&lt;<pos:position pos:line="39" pos:column="52"/></operator> <name pos:line="39" pos:column="47">off<pos:position pos:line="39" pos:column="50"/></name></expr></argument>)<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="52"/></expr_stmt>

    <return pos:line="41" pos:column="5">return <expr><name pos:line="41" pos:column="12">off<pos:position pos:line="41" pos:column="15"/></name></expr>;<pos:position pos:line="41" pos:column="16"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1365.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Convert<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">token<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">bool<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">building_deny_info_url<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">bool<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">allowRecursion<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">MemBuf<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">mb<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>   <comment type="block" pos:line="5" pos:column="29">/* takes priority over mb if set */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">do_quote<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">no_urlescape<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><literal type="number" pos:line="7" pos:column="24">0<pos:position pos:line="7" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>       <comment type="block" pos:line="7" pos:column="33">/* if true then item is NOT to be further URL-encoded */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">ntoabuf<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">MAX_IPSTRLEN<pos:position pos:line="8" pos:column="30"/></name></expr>]<pos:position pos:line="8" pos:column="31"/></index></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">mb<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">.<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">reset<pos:position pos:line="10" pos:column="13"/></name></name><argument_list pos:line="10" pos:column="13">()<pos:position pos:line="10" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>

    <switch pos:line="12" pos:column="5">switch <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">token<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition> <block pos:line="12" pos:column="20">{

    <case pos:line="14" pos:column="5">case <expr><literal type="char" pos:line="14" pos:column="10">'a'<pos:position pos:line="14" pos:column="13"/></literal></expr>:<pos:position pos:line="14" pos:column="14"/></case>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_AUTH<pos:position pos:line="15" pos:column="13"/></name></expr></cpp:if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">request<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&amp;&amp;<pos:position pos:line="16" pos:column="31"/></operator> <name><name pos:line="16" pos:column="24">request<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">auth_user_request<pos:position pos:line="16" pos:column="50"/></name></name> <operator pos:line="16" pos:column="51">!=<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="54">NULL<pos:position pos:line="16" pos:column="58"/></name></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="13">p<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name><name pos:line="17" pos:column="17">request<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">auth_user_request<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">-&gt;<pos:position pos:line="17" pos:column="48"/></operator><name pos:line="17" pos:column="45">username<pos:position pos:line="17" pos:column="53"/></name></name><argument_list pos:line="17" pos:column="53">()<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt></block></then></if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">p<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16">
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">p<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="string" pos:line="20" pos:column="17">"-"<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt></block></then></if>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>

    <case pos:line="23" pos:column="5">case <expr><literal type="char" pos:line="23" pos:column="10">'b'<pos:position pos:line="23" pos:column="13"/></literal></expr>:<pos:position pos:line="23" pos:column="14"/></case>
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">mb<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">Printf<pos:position pos:line="24" pos:column="18"/></name></name><argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"%d"<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="25">getMyPort<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">()<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>

    <case pos:line="27" pos:column="5">case <expr><literal type="char" pos:line="27" pos:column="10">'B'<pos:position pos:line="27" pos:column="13"/></literal></expr>:<pos:position pos:line="27" pos:column="14"/></case>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">building_deny_info_url<pos:position pos:line="28" pos:column="35"/></name></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <block type="pseudo"><break pos:line="28" pos:column="37">break;<pos:position pos:line="28" pos:column="43"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="29" pos:column="9">p<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="29" pos:column="13">request<pos:position pos:line="29" pos:column="20"/></name></expr> ?<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22"> <expr><call><name><name pos:line="29" pos:column="23">Ftp<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">::<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">UrlWith2f<pos:position pos:line="29" pos:column="37"/></name></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">request<pos:position pos:line="29" pos:column="45"/></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr> <pos:position pos:line="29" pos:column="47"/></then><else pos:line="29" pos:column="47">: <expr><literal type="string" pos:line="29" pos:column="49">"[no URL]"<pos:position pos:line="29" pos:column="59"/></literal></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
        <break pos:line="30" pos:column="9">break;<pos:position pos:line="30" pos:column="15"/></break>

    <case pos:line="32" pos:column="5">case <expr><literal type="char" pos:line="32" pos:column="10">'c'<pos:position pos:line="32" pos:column="13"/></literal></expr>:<pos:position pos:line="32" pos:column="14"/></case>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">building_deny_info_url<pos:position pos:line="33" pos:column="35"/></name></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block type="pseudo"><break pos:line="33" pos:column="37">break;<pos:position pos:line="33" pos:column="43"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">p<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name pos:line="34" pos:column="13">errorPageName<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">type<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>

    <case pos:line="37" pos:column="5">case <expr><literal type="char" pos:line="37" pos:column="10">'D'<pos:position pos:line="37" pos:column="13"/></literal></expr>:<pos:position pos:line="37" pos:column="14"/></case>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">allowRecursion<pos:position pos:line="38" pos:column="28"/></name></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="13">p<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <literal type="string" pos:line="39" pos:column="17">"%D"<pos:position pos:line="39" pos:column="21"/></literal></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt></block></then>  <comment type="line" pos:line="39" pos:column="24">// if recursion is not allowed, do not convert</comment>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">USE_OPENSSL<pos:position pos:line="40" pos:column="16"/></name></expr></cpp:if>
        <comment type="line" pos:line="41" pos:column="9">// currently only SSL error details implemented</comment>
        <elseif pos:line="42" pos:column="9">else <if pos:line="42" pos:column="14">if <condition pos:line="42" pos:column="17">(<expr><name pos:line="42" pos:column="18">detail<pos:position pos:line="42" pos:column="24"/></name></expr>)<pos:position pos:line="42" pos:column="25"/></condition><then pos:line="42" pos:column="25"> <block pos:line="42" pos:column="26">{
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">detail<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">useRequest<pos:position pos:line="43" pos:column="31"/></name></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">request<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="44" pos:column="13">const<pos:position pos:line="44" pos:column="18"/></specifier> <name pos:line="44" pos:column="19">String<pos:position pos:line="44" pos:column="25"/></name> <modifier pos:line="44" pos:column="26">&amp;<pos:position pos:line="44" pos:column="31"/></modifier></type><name pos:line="44" pos:column="27">errDetail<pos:position pos:line="44" pos:column="36"/></name> <init pos:line="44" pos:column="37">= <expr><call><name><name pos:line="44" pos:column="39">detail<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">toString<pos:position pos:line="44" pos:column="55"/></name></name><argument_list pos:line="44" pos:column="55">()<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="58"/></decl_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><call><name><name pos:line="45" pos:column="17">errDetail<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">size<pos:position pos:line="45" pos:column="31"/></name></name><argument_list pos:line="45" pos:column="31">()<pos:position pos:line="45" pos:column="33"/></argument_list></call> <operator pos:line="45" pos:column="34">&gt;<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="36">0<pos:position pos:line="45" pos:column="37"/></literal></expr>)<pos:position pos:line="45" pos:column="38"/></condition><then pos:line="45" pos:column="38"> <block pos:line="45" pos:column="39">{
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">MemBuf<pos:position pos:line="46" pos:column="23"/></name> <modifier pos:line="46" pos:column="24">*<pos:position pos:line="46" pos:column="25"/></modifier></type><name pos:line="46" pos:column="25">detail_mb<pos:position pos:line="46" pos:column="34"/></name>  <init pos:line="46" pos:column="36">= <expr><call><name pos:line="46" pos:column="38">ConvertText<pos:position pos:line="46" pos:column="49"/></name><argument_list pos:line="46" pos:column="49">(<argument><expr><call><name><name pos:line="46" pos:column="50">errDetail<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">.<pos:position pos:line="46" pos:column="60"/></operator><name pos:line="46" pos:column="60">termedBuf<pos:position pos:line="46" pos:column="69"/></name></name><argument_list pos:line="46" pos:column="69">()<pos:position pos:line="46" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="boolean" pos:line="46" pos:column="73">false<pos:position pos:line="46" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="80"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="47" pos:column="17">mb<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">append<pos:position pos:line="47" pos:column="26"/></name></name><argument_list pos:line="47" pos:column="26">(<argument><expr><call><name><name pos:line="47" pos:column="27">detail_mb<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">content<pos:position pos:line="47" pos:column="45"/></name></name><argument_list pos:line="47" pos:column="45">()<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="47" pos:column="49">detail_mb<pos:position pos:line="47" pos:column="58"/></name><operator pos:line="47" pos:column="58">-&gt;<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="60">contentSize<pos:position pos:line="47" pos:column="71"/></name></name><argument_list pos:line="47" pos:column="71">()<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="48" pos:column="17">delete<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">detail_mb<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="49" pos:column="17">do_quote<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">0<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif></if>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><operator pos:line="53" pos:column="13">!<pos:position pos:line="53" pos:column="14"/></operator><call><name><name pos:line="53" pos:column="14">mb<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">.<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">contentSize<pos:position pos:line="53" pos:column="28"/></name></name><argument_list pos:line="53" pos:column="28">()<pos:position pos:line="53" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="31"/></condition><then pos:line="53" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="54" pos:column="13">mb<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">Printf<pos:position pos:line="54" pos:column="22"/></name></name><argument_list pos:line="54" pos:column="22">(<argument><expr><literal type="string" pos:line="54" pos:column="23">"[No Error Detail]"<pos:position pos:line="54" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt></block></then></if>
        <break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break>

    <case pos:line="57" pos:column="5">case <expr><literal type="char" pos:line="57" pos:column="10">'e'<pos:position pos:line="57" pos:column="13"/></literal></expr>:<pos:position pos:line="57" pos:column="14"/></case>
        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">mb<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">.<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="12">Printf<pos:position pos:line="58" pos:column="18"/></name></name><argument_list pos:line="58" pos:column="18">(<argument><expr><literal type="string" pos:line="58" pos:column="19">"%d"<pos:position pos:line="58" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="25">xerrno<pos:position pos:line="58" pos:column="31"/></name></expr></argument>)<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
        <break pos:line="59" pos:column="9">break;<pos:position pos:line="59" pos:column="15"/></break>

    <case pos:line="61" pos:column="5">case <expr><literal type="char" pos:line="61" pos:column="10">'E'<pos:position pos:line="61" pos:column="13"/></literal></expr>:<pos:position pos:line="61" pos:column="14"/></case>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">xerrno<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="63" pos:column="13">mb<pos:position pos:line="63" pos:column="15"/></name><operator pos:line="63" pos:column="15">.<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="16">Printf<pos:position pos:line="63" pos:column="22"/></name></name><argument_list pos:line="63" pos:column="22">(<argument><expr><literal type="string" pos:line="63" pos:column="23">"(%d) %s"<pos:position pos:line="63" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="34">xerrno<pos:position pos:line="63" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="42">strerror<pos:position pos:line="63" pos:column="50"/></name><argument_list pos:line="63" pos:column="50">(<argument><expr><name pos:line="63" pos:column="51">xerrno<pos:position pos:line="63" pos:column="57"/></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="60"/></expr_stmt></block></then>
        <else pos:line="64" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="65" pos:column="13">mb<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">.<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">Printf<pos:position pos:line="65" pos:column="22"/></name></name><argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="string" pos:line="65" pos:column="23">"[No Error]"<pos:position pos:line="65" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt></block></else></if>
        <break pos:line="66" pos:column="9">break;<pos:position pos:line="66" pos:column="15"/></break>

    <case pos:line="68" pos:column="5">case <expr><literal type="char" pos:line="68" pos:column="10">'f'<pos:position pos:line="68" pos:column="13"/></literal></expr>:<pos:position pos:line="68" pos:column="14"/></case>
        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">building_deny_info_url<pos:position pos:line="69" pos:column="35"/></name></expr>)<pos:position pos:line="69" pos:column="36"/></condition><then pos:line="69" pos:column="36"> <block type="pseudo"><break pos:line="69" pos:column="37">break;<pos:position pos:line="69" pos:column="43"/></break></block></then></if>
        <comment type="block" pos:line="70" pos:column="9">/* FTP REQUEST LINE */</comment>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name><name pos:line="71" pos:column="13">ftp<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">.<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">request<pos:position pos:line="71" pos:column="24"/></name></name></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="13">p<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <name><name pos:line="72" pos:column="17">ftp<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">.<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">request<pos:position pos:line="72" pos:column="28"/></name></name></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt></block></then>
        <else pos:line="73" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="13">p<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <literal type="string" pos:line="74" pos:column="17">"nothing"<pos:position pos:line="74" pos:column="26"/></literal></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt></block></else></if>
        <break pos:line="75" pos:column="9">break;<pos:position pos:line="75" pos:column="15"/></break>

    <case pos:line="77" pos:column="5">case <expr><literal type="char" pos:line="77" pos:column="10">'F'<pos:position pos:line="77" pos:column="13"/></literal></expr>:<pos:position pos:line="77" pos:column="14"/></case>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name pos:line="78" pos:column="13">building_deny_info_url<pos:position pos:line="78" pos:column="35"/></name></expr>)<pos:position pos:line="78" pos:column="36"/></condition><then pos:line="78" pos:column="36"> <block type="pseudo"><break pos:line="78" pos:column="37">break;<pos:position pos:line="78" pos:column="43"/></break></block></then></if>
        <comment type="block" pos:line="79" pos:column="9">/* FTP REPLY LINE */</comment>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name><name pos:line="80" pos:column="13">ftp<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">.<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="17">reply<pos:position pos:line="80" pos:column="22"/></name></name></expr>)<pos:position pos:line="80" pos:column="23"/></condition><then pos:line="80" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="13">p<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <name><name pos:line="81" pos:column="17">ftp<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">.<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">reply<pos:position pos:line="81" pos:column="26"/></name></name></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt></block></then>
        <else pos:line="82" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="13">p<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <literal type="string" pos:line="83" pos:column="17">"nothing"<pos:position pos:line="83" pos:column="26"/></literal></expr>;<pos:position pos:line="83" pos:column="27"/></expr_stmt></block></else></if>
        <break pos:line="84" pos:column="9">break;<pos:position pos:line="84" pos:column="15"/></break>

    <case pos:line="86" pos:column="5">case <expr><literal type="char" pos:line="86" pos:column="10">'g'<pos:position pos:line="86" pos:column="13"/></literal></expr>:<pos:position pos:line="86" pos:column="14"/></case>
        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">building_deny_info_url<pos:position pos:line="87" pos:column="35"/></name></expr>)<pos:position pos:line="87" pos:column="36"/></condition><then pos:line="87" pos:column="36"> <block type="pseudo"><break pos:line="87" pos:column="37">break;<pos:position pos:line="87" pos:column="43"/></break></block></then></if>
        <comment type="block" pos:line="88" pos:column="9">/* FTP SERVER RESPONSE */</comment>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name><name pos:line="89" pos:column="13">ftp<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">.<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="17">listing<pos:position pos:line="89" pos:column="24"/></name></name></expr>)<pos:position pos:line="89" pos:column="25"/></condition><then pos:line="89" pos:column="25"> <block pos:line="89" pos:column="26">{
            <expr_stmt><expr><call><name><name pos:line="90" pos:column="13">mb<pos:position pos:line="90" pos:column="15"/></name><operator pos:line="90" pos:column="15">.<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="16">append<pos:position pos:line="90" pos:column="22"/></name></name><argument_list pos:line="90" pos:column="22">(<argument><expr><call><name><name pos:line="90" pos:column="23">ftp<pos:position pos:line="90" pos:column="26"/></name><operator pos:line="90" pos:column="26">.<pos:position pos:line="90" pos:column="27"/></operator><name pos:line="90" pos:column="27">listing<pos:position pos:line="90" pos:column="34"/></name><operator pos:line="90" pos:column="34">-&gt;<pos:position pos:line="90" pos:column="39"/></operator><name pos:line="90" pos:column="36">content<pos:position pos:line="90" pos:column="43"/></name></name><argument_list pos:line="90" pos:column="43">()<pos:position pos:line="90" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="90" pos:column="47">ftp<pos:position pos:line="90" pos:column="50"/></name><operator pos:line="90" pos:column="50">.<pos:position pos:line="90" pos:column="51"/></operator><name pos:line="90" pos:column="51">listing<pos:position pos:line="90" pos:column="58"/></name><operator pos:line="90" pos:column="58">-&gt;<pos:position pos:line="90" pos:column="63"/></operator><name pos:line="90" pos:column="60">contentSize<pos:position pos:line="90" pos:column="71"/></name></name><argument_list pos:line="90" pos:column="71">()<pos:position pos:line="90" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name pos:line="91" pos:column="13">do_quote<pos:position pos:line="91" pos:column="21"/></name> <operator pos:line="91" pos:column="22">=<pos:position pos:line="91" pos:column="23"/></operator> <literal type="number" pos:line="91" pos:column="24">0<pos:position pos:line="91" pos:column="25"/></literal></expr>;<pos:position pos:line="91" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></then> <elseif pos:line="92" pos:column="11">else <if pos:line="92" pos:column="16">if <condition pos:line="92" pos:column="19">(<expr><name><name pos:line="92" pos:column="20">ftp<pos:position pos:line="92" pos:column="23"/></name><operator pos:line="92" pos:column="23">.<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="24">server_msg<pos:position pos:line="92" pos:column="34"/></name></name></expr>)<pos:position pos:line="92" pos:column="35"/></condition><then pos:line="92" pos:column="35"> <block pos:line="92" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">wordlistCat<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name><name pos:line="93" pos:column="25">ftp<pos:position pos:line="93" pos:column="28"/></name><operator pos:line="93" pos:column="28">.<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="29">server_msg<pos:position pos:line="93" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="41">&amp;<pos:position pos:line="93" pos:column="46"/></operator><name pos:line="93" pos:column="42">mb<pos:position pos:line="93" pos:column="44"/></name></expr></argument>)<pos:position pos:line="93" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if></elseif></if>
        <break pos:line="95" pos:column="9">break;<pos:position pos:line="95" pos:column="15"/></break>

    <case pos:line="97" pos:column="5">case <expr><literal type="char" pos:line="97" pos:column="10">'h'<pos:position pos:line="97" pos:column="13"/></literal></expr>:<pos:position pos:line="97" pos:column="14"/></case>
        <expr_stmt><expr><call><name><name pos:line="98" pos:column="9">mb<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">.<pos:position pos:line="98" pos:column="12"/></operator><name pos:line="98" pos:column="12">Printf<pos:position pos:line="98" pos:column="18"/></name></name><argument_list pos:line="98" pos:column="18">(<argument><expr><literal type="string" pos:line="98" pos:column="19">"%s"<pos:position pos:line="98" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="98" pos:column="25">getMyHostname<pos:position pos:line="98" pos:column="38"/></name><argument_list pos:line="98" pos:column="38">()<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
        <break pos:line="99" pos:column="9">break;<pos:position pos:line="99" pos:column="15"/></break>

    <case pos:line="101" pos:column="5">case <expr><literal type="char" pos:line="101" pos:column="10">'H'<pos:position pos:line="101" pos:column="13"/></literal></expr>:<pos:position pos:line="101" pos:column="14"/></case>
        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">request<pos:position pos:line="102" pos:column="20"/></name></expr>)<pos:position pos:line="102" pos:column="21"/></condition><then pos:line="102" pos:column="21"> <block pos:line="102" pos:column="22">{
            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name><name pos:line="103" pos:column="17">request<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">-&gt;<pos:position pos:line="103" pos:column="29"/></operator><name pos:line="103" pos:column="26">hier<pos:position pos:line="103" pos:column="30"/></name><operator pos:line="103" pos:column="30">.<pos:position pos:line="103" pos:column="31"/></operator><name pos:line="103" pos:column="31">host<pos:position pos:line="103" pos:column="35"/></name><index pos:line="103" pos:column="35">[<expr><literal type="number" pos:line="103" pos:column="36">0<pos:position pos:line="103" pos:column="37"/></literal></expr>]<pos:position pos:line="103" pos:column="38"/></index></name> <operator pos:line="103" pos:column="39">!=<pos:position pos:line="103" pos:column="41"/></operator> <literal type="char" pos:line="103" pos:column="42">'\0'<pos:position pos:line="103" pos:column="46"/></literal></expr>)<pos:position pos:line="103" pos:column="47"/></condition><then pos:line="103" pos:column="47"> <comment type="line" pos:line="103" pos:column="48">// if non-empty string.</comment>
                <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="17">p<pos:position pos:line="104" pos:column="18"/></name> <operator pos:line="104" pos:column="19">=<pos:position pos:line="104" pos:column="20"/></operator> <name><name pos:line="104" pos:column="21">request<pos:position pos:line="104" pos:column="28"/></name><operator pos:line="104" pos:column="28">-&gt;<pos:position pos:line="104" pos:column="33"/></operator><name pos:line="104" pos:column="30">hier<pos:position pos:line="104" pos:column="34"/></name><operator pos:line="104" pos:column="34">.<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="35">host<pos:position pos:line="104" pos:column="39"/></name></name></expr>;<pos:position pos:line="104" pos:column="40"/></expr_stmt></block></then>
            <else pos:line="105" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="17">p<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <call><name><name pos:line="106" pos:column="21">request<pos:position pos:line="106" pos:column="28"/></name><operator pos:line="106" pos:column="28">-&gt;<pos:position pos:line="106" pos:column="33"/></operator><name pos:line="106" pos:column="30">GetHost<pos:position pos:line="106" pos:column="37"/></name></name><argument_list pos:line="106" pos:column="37">()<pos:position pos:line="106" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="40"/></expr_stmt></block></else></if>
        }<pos:position pos:line="107" pos:column="10"/></block></then> <elseif pos:line="107" pos:column="11">else <if pos:line="107" pos:column="16">if <condition pos:line="107" pos:column="19">(<expr><operator pos:line="107" pos:column="20">!<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="21">building_deny_info_url<pos:position pos:line="107" pos:column="43"/></name></expr>)<pos:position pos:line="107" pos:column="44"/></condition><then pos:line="107" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="108" pos:column="13">p<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">=<pos:position pos:line="108" pos:column="16"/></operator> <literal type="string" pos:line="108" pos:column="17">"[unknown host]"<pos:position pos:line="108" pos:column="33"/></literal></expr>;<pos:position pos:line="108" pos:column="34"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="109" pos:column="9">break;<pos:position pos:line="109" pos:column="15"/></break>

    <case pos:line="111" pos:column="5">case <expr><literal type="char" pos:line="111" pos:column="10">'i'<pos:position pos:line="111" pos:column="13"/></literal></expr>:<pos:position pos:line="111" pos:column="14"/></case>
        <expr_stmt><expr><call><name><name pos:line="112" pos:column="9">mb<pos:position pos:line="112" pos:column="11"/></name><operator pos:line="112" pos:column="11">.<pos:position pos:line="112" pos:column="12"/></operator><name pos:line="112" pos:column="12">Printf<pos:position pos:line="112" pos:column="18"/></name></name><argument_list pos:line="112" pos:column="18">(<argument><expr><literal type="string" pos:line="112" pos:column="19">"%s"<pos:position pos:line="112" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="25">src_addr<pos:position pos:line="112" pos:column="33"/></name><operator pos:line="112" pos:column="33">.<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">toStr<pos:position pos:line="112" pos:column="39"/></name></name><argument_list pos:line="112" pos:column="39">(<argument><expr><name pos:line="112" pos:column="40">ntoabuf<pos:position pos:line="112" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="112" pos:column="48">MAX_IPSTRLEN<pos:position pos:line="112" pos:column="60"/></name></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="112" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="63"/></expr_stmt>
        <break pos:line="113" pos:column="9">break;<pos:position pos:line="113" pos:column="15"/></break>

    <case pos:line="115" pos:column="5">case <expr><literal type="char" pos:line="115" pos:column="10">'I'<pos:position pos:line="115" pos:column="13"/></literal></expr>:<pos:position pos:line="115" pos:column="14"/></case>
        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">request<pos:position pos:line="116" pos:column="20"/></name> <operator pos:line="116" pos:column="21">&amp;&amp;<pos:position pos:line="116" pos:column="31"/></operator> <name><name pos:line="116" pos:column="24">request<pos:position pos:line="116" pos:column="31"/></name><operator pos:line="116" pos:column="31">-&gt;<pos:position pos:line="116" pos:column="36"/></operator><name pos:line="116" pos:column="33">hier<pos:position pos:line="116" pos:column="37"/></name><operator pos:line="116" pos:column="37">.<pos:position pos:line="116" pos:column="38"/></operator><name pos:line="116" pos:column="38">tcpServer<pos:position pos:line="116" pos:column="47"/></name></name> <operator pos:line="116" pos:column="48">!=<pos:position pos:line="116" pos:column="50"/></operator> <name pos:line="116" pos:column="51">NULL<pos:position pos:line="116" pos:column="55"/></name></expr>)<pos:position pos:line="116" pos:column="56"/></condition><then pos:line="116" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><name pos:line="117" pos:column="13">p<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <call><name><name pos:line="117" pos:column="17">request<pos:position pos:line="117" pos:column="24"/></name><operator pos:line="117" pos:column="24">-&gt;<pos:position pos:line="117" pos:column="29"/></operator><name pos:line="117" pos:column="26">hier<pos:position pos:line="117" pos:column="30"/></name><operator pos:line="117" pos:column="30">.<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="31">tcpServer<pos:position pos:line="117" pos:column="40"/></name><operator pos:line="117" pos:column="40">-&gt;<pos:position pos:line="117" pos:column="45"/></operator><name pos:line="117" pos:column="42">remote<pos:position pos:line="117" pos:column="48"/></name><operator pos:line="117" pos:column="48">.<pos:position pos:line="117" pos:column="49"/></operator><name pos:line="117" pos:column="49">toStr<pos:position pos:line="117" pos:column="54"/></name></name><argument_list pos:line="117" pos:column="54">(<argument><expr><name pos:line="117" pos:column="55">ntoabuf<pos:position pos:line="117" pos:column="62"/></name></expr></argument>,<argument><expr><name pos:line="117" pos:column="63">MAX_IPSTRLEN<pos:position pos:line="117" pos:column="75"/></name></expr></argument>)<pos:position pos:line="117" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="77"/></expr_stmt></block></then>
        <elseif pos:line="118" pos:column="9">else <if pos:line="118" pos:column="14">if <condition pos:line="118" pos:column="17">(<expr><operator pos:line="118" pos:column="18">!<pos:position pos:line="118" pos:column="19"/></operator><name pos:line="118" pos:column="19">building_deny_info_url<pos:position pos:line="118" pos:column="41"/></name></expr>)<pos:position pos:line="118" pos:column="42"/></condition><then pos:line="118" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="13">p<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">=<pos:position pos:line="119" pos:column="16"/></operator> <literal type="string" pos:line="119" pos:column="17">"[unknown]"<pos:position pos:line="119" pos:column="28"/></literal></expr>;<pos:position pos:line="119" pos:column="29"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="120" pos:column="9">break;<pos:position pos:line="120" pos:column="15"/></break>

    <case pos:line="122" pos:column="5">case <expr><literal type="char" pos:line="122" pos:column="10">'l'<pos:position pos:line="122" pos:column="13"/></literal></expr>:<pos:position pos:line="122" pos:column="14"/></case>
        <if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><name pos:line="123" pos:column="13">building_deny_info_url<pos:position pos:line="123" pos:column="35"/></name></expr>)<pos:position pos:line="123" pos:column="36"/></condition><then pos:line="123" pos:column="36"> <block type="pseudo"><break pos:line="123" pos:column="37">break;<pos:position pos:line="123" pos:column="43"/></break></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="124" pos:column="9">mb<pos:position pos:line="124" pos:column="11"/></name><operator pos:line="124" pos:column="11">.<pos:position pos:line="124" pos:column="12"/></operator><name pos:line="124" pos:column="12">append<pos:position pos:line="124" pos:column="18"/></name></name><argument_list pos:line="124" pos:column="18">(<argument><expr><call><name><name pos:line="124" pos:column="19">error_stylesheet<pos:position pos:line="124" pos:column="35"/></name><operator pos:line="124" pos:column="35">.<pos:position pos:line="124" pos:column="36"/></operator><name pos:line="124" pos:column="36">content<pos:position pos:line="124" pos:column="43"/></name></name><argument_list pos:line="124" pos:column="43">()<pos:position pos:line="124" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="124" pos:column="47">error_stylesheet<pos:position pos:line="124" pos:column="63"/></name><operator pos:line="124" pos:column="63">.<pos:position pos:line="124" pos:column="64"/></operator><name pos:line="124" pos:column="64">contentSize<pos:position pos:line="124" pos:column="75"/></name></name><argument_list pos:line="124" pos:column="75">()<pos:position pos:line="124" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="125" pos:column="9">do_quote<pos:position pos:line="125" pos:column="17"/></name> <operator pos:line="125" pos:column="18">=<pos:position pos:line="125" pos:column="19"/></operator> <literal type="number" pos:line="125" pos:column="20">0<pos:position pos:line="125" pos:column="21"/></literal></expr>;<pos:position pos:line="125" pos:column="22"/></expr_stmt>
        <break pos:line="126" pos:column="9">break;<pos:position pos:line="126" pos:column="15"/></break>

    <case pos:line="128" pos:column="5">case <expr><literal type="char" pos:line="128" pos:column="10">'L'<pos:position pos:line="128" pos:column="13"/></literal></expr>:<pos:position pos:line="128" pos:column="14"/></case>
        <if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">building_deny_info_url<pos:position pos:line="129" pos:column="35"/></name></expr>)<pos:position pos:line="129" pos:column="36"/></condition><then pos:line="129" pos:column="36"> <block type="pseudo"><break pos:line="129" pos:column="37">break;<pos:position pos:line="129" pos:column="43"/></break></block></then></if>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name><name pos:line="130" pos:column="13">Config<pos:position pos:line="130" pos:column="19"/></name><operator pos:line="130" pos:column="19">.<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="20">errHtmlText<pos:position pos:line="130" pos:column="31"/></name></name></expr>)<pos:position pos:line="130" pos:column="32"/></condition><then pos:line="130" pos:column="32"> <block pos:line="130" pos:column="33">{
            <expr_stmt><expr><call><name><name pos:line="131" pos:column="13">mb<pos:position pos:line="131" pos:column="15"/></name><operator pos:line="131" pos:column="15">.<pos:position pos:line="131" pos:column="16"/></operator><name pos:line="131" pos:column="16">Printf<pos:position pos:line="131" pos:column="22"/></name></name><argument_list pos:line="131" pos:column="22">(<argument><expr><literal type="string" pos:line="131" pos:column="23">"%s"<pos:position pos:line="131" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="29">Config<pos:position pos:line="131" pos:column="35"/></name><operator pos:line="131" pos:column="35">.<pos:position pos:line="131" pos:column="36"/></operator><name pos:line="131" pos:column="36">errHtmlText<pos:position pos:line="131" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="131" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="132" pos:column="13">do_quote<pos:position pos:line="132" pos:column="21"/></name> <operator pos:line="132" pos:column="22">=<pos:position pos:line="132" pos:column="23"/></operator> <literal type="number" pos:line="132" pos:column="24">0<pos:position pos:line="132" pos:column="25"/></literal></expr>;<pos:position pos:line="132" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="133" pos:column="10"/></block></then> <else pos:line="133" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="13">p<pos:position pos:line="134" pos:column="14"/></name> <operator pos:line="134" pos:column="15">=<pos:position pos:line="134" pos:column="16"/></operator> <literal type="string" pos:line="134" pos:column="17">"[not available]"<pos:position pos:line="134" pos:column="34"/></literal></expr>;<pos:position pos:line="134" pos:column="35"/></expr_stmt></block></else></if>
        <break pos:line="135" pos:column="9">break;<pos:position pos:line="135" pos:column="15"/></break>

    <case pos:line="137" pos:column="5">case <expr><literal type="char" pos:line="137" pos:column="10">'m'<pos:position pos:line="137" pos:column="13"/></literal></expr>:<pos:position pos:line="137" pos:column="14"/></case>
        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><name pos:line="138" pos:column="13">building_deny_info_url<pos:position pos:line="138" pos:column="35"/></name></expr>)<pos:position pos:line="138" pos:column="36"/></condition><then pos:line="138" pos:column="36"> <block type="pseudo"><break pos:line="138" pos:column="37">break;<pos:position pos:line="138" pos:column="43"/></break></block></then></if>
<cpp:if pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">if<pos:position pos:line="139" pos:column="4"/></cpp:directive> <expr><name pos:line="139" pos:column="5">USE_AUTH<pos:position pos:line="139" pos:column="13"/></name></expr></cpp:if>
        <if pos:line="140" pos:column="9">if <condition pos:line="140" pos:column="12">(<expr><call><name><name pos:line="140" pos:column="13">auth_user_request<pos:position pos:line="140" pos:column="30"/></name><operator pos:line="140" pos:column="30">.<pos:position pos:line="140" pos:column="31"/></operator><name pos:line="140" pos:column="31">getRaw<pos:position pos:line="140" pos:column="37"/></name></name><argument_list pos:line="140" pos:column="37">()<pos:position pos:line="140" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="40"/></condition><then pos:line="140" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name pos:line="141" pos:column="13">p<pos:position pos:line="141" pos:column="14"/></name> <operator pos:line="141" pos:column="15">=<pos:position pos:line="141" pos:column="16"/></operator> <call><name><name pos:line="141" pos:column="17">auth_user_request<pos:position pos:line="141" pos:column="34"/></name><operator pos:line="141" pos:column="34">-&gt;<pos:position pos:line="141" pos:column="39"/></operator><name pos:line="141" pos:column="36">denyMessage<pos:position pos:line="141" pos:column="47"/></name></name><argument_list pos:line="141" pos:column="47">(<argument><expr><literal type="string" pos:line="141" pos:column="48">"[not available]"<pos:position pos:line="141" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="67"/></expr_stmt></block></then>
        <else pos:line="142" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="13">p<pos:position pos:line="143" pos:column="14"/></name> <operator pos:line="143" pos:column="15">=<pos:position pos:line="143" pos:column="16"/></operator> <literal type="string" pos:line="143" pos:column="17">"[not available]"<pos:position pos:line="143" pos:column="34"/></literal></expr>;<pos:position pos:line="143" pos:column="35"/></expr_stmt></block></else></if>
<cpp:else pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">else<pos:position pos:line="144" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="145" pos:column="9">p<pos:position pos:line="145" pos:column="10"/></name> <operator pos:line="145" pos:column="11">=<pos:position pos:line="145" pos:column="12"/></operator> <literal type="string" pos:line="145" pos:column="13">"-"<pos:position pos:line="145" pos:column="16"/></literal></expr>;<pos:position pos:line="145" pos:column="17"/></expr_stmt>
<cpp:endif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">endif<pos:position pos:line="146" pos:column="7"/></cpp:directive></cpp:endif>
        <break pos:line="147" pos:column="9">break;<pos:position pos:line="147" pos:column="15"/></break>

    <case pos:line="149" pos:column="5">case <expr><literal type="char" pos:line="149" pos:column="10">'M'<pos:position pos:line="149" pos:column="13"/></literal></expr>:<pos:position pos:line="149" pos:column="14"/></case>
        <if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><name pos:line="150" pos:column="13">request<pos:position pos:line="150" pos:column="20"/></name></expr>)<pos:position pos:line="150" pos:column="21"/></condition><then pos:line="150" pos:column="21"> <block pos:line="150" pos:column="22">{
            <decl_stmt><decl><type><specifier pos:line="151" pos:column="13">const<pos:position pos:line="151" pos:column="18"/></specifier> <name pos:line="151" pos:column="19">SBuf<pos:position pos:line="151" pos:column="23"/></name> <modifier pos:line="151" pos:column="24">&amp;<pos:position pos:line="151" pos:column="29"/></modifier></type><name pos:line="151" pos:column="25">m<pos:position pos:line="151" pos:column="26"/></name> <init pos:line="151" pos:column="27">= <expr><call><name><name pos:line="151" pos:column="29">request<pos:position pos:line="151" pos:column="36"/></name><operator pos:line="151" pos:column="36">-&gt;<pos:position pos:line="151" pos:column="41"/></operator><name pos:line="151" pos:column="38">method<pos:position pos:line="151" pos:column="44"/></name><operator pos:line="151" pos:column="44">.<pos:position pos:line="151" pos:column="45"/></operator><name pos:line="151" pos:column="45">image<pos:position pos:line="151" pos:column="50"/></name></name><argument_list pos:line="151" pos:column="50">()<pos:position pos:line="151" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="151" pos:column="53"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="152" pos:column="13">mb<pos:position pos:line="152" pos:column="15"/></name><operator pos:line="152" pos:column="15">.<pos:position pos:line="152" pos:column="16"/></operator><name pos:line="152" pos:column="16">append<pos:position pos:line="152" pos:column="22"/></name></name><argument_list pos:line="152" pos:column="22">(<argument><expr><call><name><name pos:line="152" pos:column="23">m<pos:position pos:line="152" pos:column="24"/></name><operator pos:line="152" pos:column="24">.<pos:position pos:line="152" pos:column="25"/></operator><name pos:line="152" pos:column="25">rawContent<pos:position pos:line="152" pos:column="35"/></name></name><argument_list pos:line="152" pos:column="35">()<pos:position pos:line="152" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="152" pos:column="39">m<pos:position pos:line="152" pos:column="40"/></name><operator pos:line="152" pos:column="40">.<pos:position pos:line="152" pos:column="41"/></operator><name pos:line="152" pos:column="41">length<pos:position pos:line="152" pos:column="47"/></name></name><argument_list pos:line="152" pos:column="47">()<pos:position pos:line="152" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="152" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="153" pos:column="10"/></block></then> <elseif pos:line="153" pos:column="11">else <if pos:line="153" pos:column="16">if <condition pos:line="153" pos:column="19">(<expr><operator pos:line="153" pos:column="20">!<pos:position pos:line="153" pos:column="21"/></operator><name pos:line="153" pos:column="21">building_deny_info_url<pos:position pos:line="153" pos:column="43"/></name></expr>)<pos:position pos:line="153" pos:column="44"/></condition><then pos:line="153" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="154" pos:column="13">p<pos:position pos:line="154" pos:column="14"/></name> <operator pos:line="154" pos:column="15">=<pos:position pos:line="154" pos:column="16"/></operator> <literal type="string" pos:line="154" pos:column="17">"[unknown method]"<pos:position pos:line="154" pos:column="35"/></literal></expr>;<pos:position pos:line="154" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="155" pos:column="9">break;<pos:position pos:line="155" pos:column="15"/></break>

    <case pos:line="157" pos:column="5">case <expr><literal type="char" pos:line="157" pos:column="10">'o'<pos:position pos:line="157" pos:column="13"/></literal></expr>:<pos:position pos:line="157" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="158" pos:column="9">p<pos:position pos:line="158" pos:column="10"/></name> <operator pos:line="158" pos:column="11">=<pos:position pos:line="158" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="158" pos:column="13">request<pos:position pos:line="158" pos:column="20"/></name></expr> ?<pos:position pos:line="158" pos:column="22"/></condition><then pos:line="158" pos:column="22"> <expr><call><name><name pos:line="158" pos:column="23">request<pos:position pos:line="158" pos:column="30"/></name><operator pos:line="158" pos:column="30">-&gt;<pos:position pos:line="158" pos:column="35"/></operator><name pos:line="158" pos:column="32">extacl_message<pos:position pos:line="158" pos:column="46"/></name><operator pos:line="158" pos:column="46">.<pos:position pos:line="158" pos:column="47"/></operator><name pos:line="158" pos:column="47">termedBuf<pos:position pos:line="158" pos:column="56"/></name></name><argument_list pos:line="158" pos:column="56">()<pos:position pos:line="158" pos:column="58"/></argument_list></call></expr> <pos:position pos:line="158" pos:column="59"/></then><else pos:line="158" pos:column="59">: <expr><name pos:line="158" pos:column="61">external_acl_message<pos:position pos:line="158" pos:column="81"/></name></expr></else></ternary></expr>;<pos:position pos:line="158" pos:column="82"/></expr_stmt>
        <if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><operator pos:line="159" pos:column="13">!<pos:position pos:line="159" pos:column="14"/></operator><name pos:line="159" pos:column="14">p<pos:position pos:line="159" pos:column="15"/></name> <operator pos:line="159" pos:column="16">&amp;&amp;<pos:position pos:line="159" pos:column="26"/></operator> <operator pos:line="159" pos:column="19">!<pos:position pos:line="159" pos:column="20"/></operator><name pos:line="159" pos:column="20">building_deny_info_url<pos:position pos:line="159" pos:column="42"/></name></expr>)<pos:position pos:line="159" pos:column="43"/></condition><then pos:line="159" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="13">p<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">=<pos:position pos:line="160" pos:column="16"/></operator> <literal type="string" pos:line="160" pos:column="17">"[not available]"<pos:position pos:line="160" pos:column="34"/></literal></expr>;<pos:position pos:line="160" pos:column="35"/></expr_stmt></block></then></if>
        <break pos:line="161" pos:column="9">break;<pos:position pos:line="161" pos:column="15"/></break>

    <case pos:line="163" pos:column="5">case <expr><literal type="char" pos:line="163" pos:column="10">'p'<pos:position pos:line="163" pos:column="13"/></literal></expr>:<pos:position pos:line="163" pos:column="14"/></case>
        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name pos:line="164" pos:column="13">request<pos:position pos:line="164" pos:column="20"/></name></expr>)<pos:position pos:line="164" pos:column="21"/></condition><then pos:line="164" pos:column="21"> <block pos:line="164" pos:column="22">{
            <expr_stmt><expr><call><name><name pos:line="165" pos:column="13">mb<pos:position pos:line="165" pos:column="15"/></name><operator pos:line="165" pos:column="15">.<pos:position pos:line="165" pos:column="16"/></operator><name pos:line="165" pos:column="16">Printf<pos:position pos:line="165" pos:column="22"/></name></name><argument_list pos:line="165" pos:column="22">(<argument><expr><literal type="string" pos:line="165" pos:column="23">"%d"<pos:position pos:line="165" pos:column="27"/></literal></expr></argument>, <argument><expr><operator pos:line="165" pos:column="29">(<pos:position pos:line="165" pos:column="30"/></operator><name pos:line="165" pos:column="30">int<pos:position pos:line="165" pos:column="33"/></name><operator pos:line="165" pos:column="33">)<pos:position pos:line="165" pos:column="34"/></operator> <name><name pos:line="165" pos:column="35">request<pos:position pos:line="165" pos:column="42"/></name><operator pos:line="165" pos:column="42">-&gt;<pos:position pos:line="165" pos:column="47"/></operator><name pos:line="165" pos:column="44">port<pos:position pos:line="165" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="165" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="166" pos:column="10"/></block></then> <elseif pos:line="166" pos:column="11">else <if pos:line="166" pos:column="16">if <condition pos:line="166" pos:column="19">(<expr><operator pos:line="166" pos:column="20">!<pos:position pos:line="166" pos:column="21"/></operator><name pos:line="166" pos:column="21">building_deny_info_url<pos:position pos:line="166" pos:column="43"/></name></expr>)<pos:position pos:line="166" pos:column="44"/></condition><then pos:line="166" pos:column="44"> <block pos:line="166" pos:column="45">{
            <expr_stmt><expr><name pos:line="167" pos:column="13">p<pos:position pos:line="167" pos:column="14"/></name> <operator pos:line="167" pos:column="15">=<pos:position pos:line="167" pos:column="16"/></operator> <literal type="string" pos:line="167" pos:column="17">"[unknown port]"<pos:position pos:line="167" pos:column="33"/></literal></expr>;<pos:position pos:line="167" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="168" pos:column="10"/></block></then></if></elseif></if>
        <break pos:line="169" pos:column="9">break;<pos:position pos:line="169" pos:column="15"/></break>

    <case pos:line="171" pos:column="5">case <expr><literal type="char" pos:line="171" pos:column="10">'P'<pos:position pos:line="171" pos:column="13"/></literal></expr>:<pos:position pos:line="171" pos:column="14"/></case>
        <if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><name pos:line="172" pos:column="13">request<pos:position pos:line="172" pos:column="20"/></name></expr>)<pos:position pos:line="172" pos:column="21"/></condition><then pos:line="172" pos:column="21"> <block pos:line="172" pos:column="22">{
            <expr_stmt><expr><name pos:line="173" pos:column="13">p<pos:position pos:line="173" pos:column="14"/></name> <operator pos:line="173" pos:column="15">=<pos:position pos:line="173" pos:column="16"/></operator> <call><name><name pos:line="173" pos:column="17">request<pos:position pos:line="173" pos:column="24"/></name><operator pos:line="173" pos:column="24">-&gt;<pos:position pos:line="173" pos:column="29"/></operator><name pos:line="173" pos:column="26">url<pos:position pos:line="173" pos:column="29"/></name><operator pos:line="173" pos:column="29">.<pos:position pos:line="173" pos:column="30"/></operator><name pos:line="173" pos:column="30">getScheme<pos:position pos:line="173" pos:column="39"/></name></name><argument_list pos:line="173" pos:column="39">()<pos:position pos:line="173" pos:column="41"/></argument_list></call><operator pos:line="173" pos:column="41">.<pos:position pos:line="173" pos:column="42"/></operator><call><name pos:line="173" pos:column="42">c_str<pos:position pos:line="173" pos:column="47"/></name><argument_list pos:line="173" pos:column="47">()<pos:position pos:line="173" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="174" pos:column="10"/></block></then> <elseif pos:line="174" pos:column="11">else <if pos:line="174" pos:column="16">if <condition pos:line="174" pos:column="19">(<expr><operator pos:line="174" pos:column="20">!<pos:position pos:line="174" pos:column="21"/></operator><name pos:line="174" pos:column="21">building_deny_info_url<pos:position pos:line="174" pos:column="43"/></name></expr>)<pos:position pos:line="174" pos:column="44"/></condition><then pos:line="174" pos:column="44"> <block pos:line="174" pos:column="45">{
            <expr_stmt><expr><name pos:line="175" pos:column="13">p<pos:position pos:line="175" pos:column="14"/></name> <operator pos:line="175" pos:column="15">=<pos:position pos:line="175" pos:column="16"/></operator> <literal type="string" pos:line="175" pos:column="17">"[unknown protocol]"<pos:position pos:line="175" pos:column="37"/></literal></expr>;<pos:position pos:line="175" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="176" pos:column="10"/></block></then></if></elseif></if>
        <break pos:line="177" pos:column="9">break;<pos:position pos:line="177" pos:column="15"/></break>

    <case pos:line="179" pos:column="5">case <expr><literal type="char" pos:line="179" pos:column="10">'R'<pos:position pos:line="179" pos:column="13"/></literal></expr>:<pos:position pos:line="179" pos:column="14"/></case>
        <if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name pos:line="180" pos:column="13">building_deny_info_url<pos:position pos:line="180" pos:column="35"/></name></expr>)<pos:position pos:line="180" pos:column="36"/></condition><then pos:line="180" pos:column="36"> <block pos:line="180" pos:column="37">{
            <expr_stmt><expr><name pos:line="181" pos:column="13">p<pos:position pos:line="181" pos:column="14"/></name> <operator pos:line="181" pos:column="15">=<pos:position pos:line="181" pos:column="16"/></operator> <operator pos:line="181" pos:column="17">(<pos:position pos:line="181" pos:column="18"/></operator><ternary><condition><expr><call><name><name pos:line="181" pos:column="18">request<pos:position pos:line="181" pos:column="25"/></name><operator pos:line="181" pos:column="25">-&gt;<pos:position pos:line="181" pos:column="30"/></operator><name pos:line="181" pos:column="27">urlpath<pos:position pos:line="181" pos:column="34"/></name><operator pos:line="181" pos:column="34">.<pos:position pos:line="181" pos:column="35"/></operator><name pos:line="181" pos:column="35">size<pos:position pos:line="181" pos:column="39"/></name></name><argument_list pos:line="181" pos:column="39">()<pos:position pos:line="181" pos:column="41"/></argument_list></call> <operator pos:line="181" pos:column="42">!=<pos:position pos:line="181" pos:column="44"/></operator> <literal type="number" pos:line="181" pos:column="45">0<pos:position pos:line="181" pos:column="46"/></literal></expr> ?<pos:position pos:line="181" pos:column="48"/></condition><then pos:line="181" pos:column="48"> <expr><call><name><name pos:line="181" pos:column="49">request<pos:position pos:line="181" pos:column="56"/></name><operator pos:line="181" pos:column="56">-&gt;<pos:position pos:line="181" pos:column="61"/></operator><name pos:line="181" pos:column="58">urlpath<pos:position pos:line="181" pos:column="65"/></name><operator pos:line="181" pos:column="65">.<pos:position pos:line="181" pos:column="66"/></operator><name pos:line="181" pos:column="66">termedBuf<pos:position pos:line="181" pos:column="75"/></name></name><argument_list pos:line="181" pos:column="75">()<pos:position pos:line="181" pos:column="77"/></argument_list></call></expr> <pos:position pos:line="181" pos:column="78"/></then><else pos:line="181" pos:column="78">: <expr><literal type="string" pos:line="181" pos:column="80">"/"<pos:position pos:line="181" pos:column="83"/></literal></expr></else></ternary><operator pos:line="181" pos:column="83">)<pos:position pos:line="181" pos:column="84"/></operator></expr>;<pos:position pos:line="181" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><name pos:line="182" pos:column="13">no_urlescape<pos:position pos:line="182" pos:column="25"/></name> <operator pos:line="182" pos:column="26">=<pos:position pos:line="182" pos:column="27"/></operator> <literal type="number" pos:line="182" pos:column="28">1<pos:position pos:line="182" pos:column="29"/></literal></expr>;<pos:position pos:line="182" pos:column="30"/></expr_stmt>
            <break pos:line="183" pos:column="13">break;<pos:position pos:line="183" pos:column="19"/></break>
        }<pos:position pos:line="184" pos:column="10"/></block></then></if>
        <if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">NULL<pos:position pos:line="185" pos:column="17"/></name> <operator pos:line="185" pos:column="18">!=<pos:position pos:line="185" pos:column="20"/></operator> <name pos:line="185" pos:column="21">request<pos:position pos:line="185" pos:column="28"/></name></expr>)<pos:position pos:line="185" pos:column="29"/></condition><then pos:line="185" pos:column="29"> <block pos:line="185" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="186" pos:column="13">Packer<pos:position pos:line="186" pos:column="19"/></name></type> <name pos:line="186" pos:column="20">pck<pos:position pos:line="186" pos:column="23"/></name></decl>;<pos:position pos:line="186" pos:column="24"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="187" pos:column="13">String<pos:position pos:line="187" pos:column="19"/></name></type> <name pos:line="187" pos:column="20">urlpath_or_slash<pos:position pos:line="187" pos:column="36"/></name></decl>;<pos:position pos:line="187" pos:column="37"/></decl_stmt>

            <if pos:line="189" pos:column="13">if <condition pos:line="189" pos:column="16">(<expr><call><name><name pos:line="189" pos:column="17">request<pos:position pos:line="189" pos:column="24"/></name><operator pos:line="189" pos:column="24">-&gt;<pos:position pos:line="189" pos:column="29"/></operator><name pos:line="189" pos:column="26">urlpath<pos:position pos:line="189" pos:column="33"/></name><operator pos:line="189" pos:column="33">.<pos:position pos:line="189" pos:column="34"/></operator><name pos:line="189" pos:column="34">size<pos:position pos:line="189" pos:column="38"/></name></name><argument_list pos:line="189" pos:column="38">()<pos:position pos:line="189" pos:column="40"/></argument_list></call> <operator pos:line="189" pos:column="41">!=<pos:position pos:line="189" pos:column="43"/></operator> <literal type="number" pos:line="189" pos:column="44">0<pos:position pos:line="189" pos:column="45"/></literal></expr>)<pos:position pos:line="189" pos:column="46"/></condition><then pos:line="189" pos:column="46">
                <block type="pseudo"><expr_stmt><expr><name pos:line="190" pos:column="17">urlpath_or_slash<pos:position pos:line="190" pos:column="33"/></name> <operator pos:line="190" pos:column="34">=<pos:position pos:line="190" pos:column="35"/></operator> <name><name pos:line="190" pos:column="36">request<pos:position pos:line="190" pos:column="43"/></name><operator pos:line="190" pos:column="43">-&gt;<pos:position pos:line="190" pos:column="48"/></operator><name pos:line="190" pos:column="45">urlpath<pos:position pos:line="190" pos:column="52"/></name></name></expr>;<pos:position pos:line="190" pos:column="53"/></expr_stmt></block></then>
            <else pos:line="191" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="192" pos:column="17">urlpath_or_slash<pos:position pos:line="192" pos:column="33"/></name> <operator pos:line="192" pos:column="34">=<pos:position pos:line="192" pos:column="35"/></operator> <literal type="string" pos:line="192" pos:column="36">"/"<pos:position pos:line="192" pos:column="39"/></literal></expr>;<pos:position pos:line="192" pos:column="40"/></expr_stmt></block></else></if>

            <expr_stmt><expr><call><name><name pos:line="194" pos:column="13">mb<pos:position pos:line="194" pos:column="15"/></name><operator pos:line="194" pos:column="15">.<pos:position pos:line="194" pos:column="16"/></operator><name pos:line="194" pos:column="16">Printf<pos:position pos:line="194" pos:column="22"/></name></name><argument_list pos:line="194" pos:column="22">(<argument><expr><name pos:line="194" pos:column="23">SQUIDSBUFPH<pos:position pos:line="194" pos:column="34"/></name> <literal type="string" pos:line="194" pos:column="35">" "<pos:position pos:line="194" pos:column="38"/></literal> <name pos:line="194" pos:column="39">SQUIDSTRINGPH<pos:position pos:line="194" pos:column="52"/></name> <literal type="string" pos:line="194" pos:column="53">" %s/%d.%d\n"<pos:position pos:line="194" pos:column="66"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="195" pos:column="23">SQUIDSBUFPRINT<pos:position pos:line="195" pos:column="37"/></name><argument_list pos:line="195" pos:column="37">(<argument><expr><call><name><name pos:line="195" pos:column="38">request<pos:position pos:line="195" pos:column="45"/></name><operator pos:line="195" pos:column="45">-&gt;<pos:position pos:line="195" pos:column="50"/></operator><name pos:line="195" pos:column="47">method<pos:position pos:line="195" pos:column="53"/></name><operator pos:line="195" pos:column="53">.<pos:position pos:line="195" pos:column="54"/></operator><name pos:line="195" pos:column="54">image<pos:position pos:line="195" pos:column="59"/></name></name><argument_list pos:line="195" pos:column="59">()<pos:position pos:line="195" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="195" pos:column="62"/></argument_list></call></expr></argument>,
                      <argument><expr><call><name pos:line="196" pos:column="23">SQUIDSTRINGPRINT<pos:position pos:line="196" pos:column="39"/></name><argument_list pos:line="196" pos:column="39">(<argument><expr><name pos:line="196" pos:column="40">urlpath_or_slash<pos:position pos:line="196" pos:column="56"/></name></expr></argument>)<pos:position pos:line="196" pos:column="57"/></argument_list></call></expr></argument>,
                      <argument><expr><name><name pos:line="197" pos:column="23">AnyP<pos:position pos:line="197" pos:column="27"/></name><operator pos:line="197" pos:column="27">::<pos:position pos:line="197" pos:column="29"/></operator><name pos:line="197" pos:column="29">ProtocolType_str<pos:position pos:line="197" pos:column="45"/></name><index pos:line="197" pos:column="45">[<expr><name><name pos:line="197" pos:column="46">request<pos:position pos:line="197" pos:column="53"/></name><operator pos:line="197" pos:column="53">-&gt;<pos:position pos:line="197" pos:column="58"/></operator><name pos:line="197" pos:column="55">http_ver<pos:position pos:line="197" pos:column="63"/></name><operator pos:line="197" pos:column="63">.<pos:position pos:line="197" pos:column="64"/></operator><name pos:line="197" pos:column="64">protocol<pos:position pos:line="197" pos:column="72"/></name></name></expr>]<pos:position pos:line="197" pos:column="73"/></index></name></expr></argument>,
                      <argument><expr><name><name pos:line="198" pos:column="23">request<pos:position pos:line="198" pos:column="30"/></name><operator pos:line="198" pos:column="30">-&gt;<pos:position pos:line="198" pos:column="35"/></operator><name pos:line="198" pos:column="32">http_ver<pos:position pos:line="198" pos:column="40"/></name><operator pos:line="198" pos:column="40">.<pos:position pos:line="198" pos:column="41"/></operator><name pos:line="198" pos:column="41">major<pos:position pos:line="198" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="198" pos:column="48">request<pos:position pos:line="198" pos:column="55"/></name><operator pos:line="198" pos:column="55">-&gt;<pos:position pos:line="198" pos:column="60"/></operator><name pos:line="198" pos:column="57">http_ver<pos:position pos:line="198" pos:column="65"/></name><operator pos:line="198" pos:column="65">.<pos:position pos:line="198" pos:column="66"/></operator><name pos:line="198" pos:column="66">minor<pos:position pos:line="198" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="199" pos:column="13">packerToMemInit<pos:position pos:line="199" pos:column="28"/></name><argument_list pos:line="199" pos:column="28">(<argument><expr><operator pos:line="199" pos:column="29">&amp;<pos:position pos:line="199" pos:column="34"/></operator><name pos:line="199" pos:column="30">pck<pos:position pos:line="199" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="199" pos:column="35">&amp;<pos:position pos:line="199" pos:column="40"/></operator><name pos:line="199" pos:column="36">mb<pos:position pos:line="199" pos:column="38"/></name></expr></argument>)<pos:position pos:line="199" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="200" pos:column="13">request<pos:position pos:line="200" pos:column="20"/></name><operator pos:line="200" pos:column="20">-&gt;<pos:position pos:line="200" pos:column="25"/></operator><name pos:line="200" pos:column="22">header<pos:position pos:line="200" pos:column="28"/></name><operator pos:line="200" pos:column="28">.<pos:position pos:line="200" pos:column="29"/></operator><name pos:line="200" pos:column="29">packInto<pos:position pos:line="200" pos:column="37"/></name></name><argument_list pos:line="200" pos:column="37">(<argument><expr><operator pos:line="200" pos:column="38">&amp;<pos:position pos:line="200" pos:column="43"/></operator><name pos:line="200" pos:column="39">pck<pos:position pos:line="200" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="200" pos:column="44">true<pos:position pos:line="200" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="50"/></expr_stmt> <comment type="line" pos:line="200" pos:column="51">//hide authorization data</comment>
            <expr_stmt><expr><call><name pos:line="201" pos:column="13">packerClean<pos:position pos:line="201" pos:column="24"/></name><argument_list pos:line="201" pos:column="24">(<argument><expr><operator pos:line="201" pos:column="25">&amp;<pos:position pos:line="201" pos:column="30"/></operator><name pos:line="201" pos:column="26">pck<pos:position pos:line="201" pos:column="29"/></name></expr></argument>)<pos:position pos:line="201" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="202" pos:column="10"/></block></then> <elseif pos:line="202" pos:column="11">else <if pos:line="202" pos:column="16">if <condition pos:line="202" pos:column="19">(<expr><name pos:line="202" pos:column="20">request_hdrs<pos:position pos:line="202" pos:column="32"/></name></expr>)<pos:position pos:line="202" pos:column="33"/></condition><then pos:line="202" pos:column="33"> <block pos:line="202" pos:column="34">{
            <expr_stmt><expr><name pos:line="203" pos:column="13">p<pos:position pos:line="203" pos:column="14"/></name> <operator pos:line="203" pos:column="15">=<pos:position pos:line="203" pos:column="16"/></operator> <name pos:line="203" pos:column="17">request_hdrs<pos:position pos:line="203" pos:column="29"/></name></expr>;<pos:position pos:line="203" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="204" pos:column="10"/></block></then></if></elseif> <else pos:line="204" pos:column="11">else <block pos:line="204" pos:column="16">{
            <expr_stmt><expr><name pos:line="205" pos:column="13">p<pos:position pos:line="205" pos:column="14"/></name> <operator pos:line="205" pos:column="15">=<pos:position pos:line="205" pos:column="16"/></operator> <literal type="string" pos:line="205" pos:column="17">"[no request]"<pos:position pos:line="205" pos:column="31"/></literal></expr>;<pos:position pos:line="205" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="206" pos:column="10"/></block></else></if>
        <break pos:line="207" pos:column="9">break;<pos:position pos:line="207" pos:column="15"/></break>

    <case pos:line="209" pos:column="5">case <expr><literal type="char" pos:line="209" pos:column="10">'s'<pos:position pos:line="209" pos:column="13"/></literal></expr>:<pos:position pos:line="209" pos:column="14"/></case>
        <comment type="block" pos:line="210" pos:column="9">/* for backward compat we make %s show the full URL. Drop this in some future release. */</comment>
        <if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<expr><name pos:line="211" pos:column="13">building_deny_info_url<pos:position pos:line="211" pos:column="35"/></name></expr>)<pos:position pos:line="211" pos:column="36"/></condition><then pos:line="211" pos:column="36"> <block pos:line="211" pos:column="37">{
            <expr_stmt><expr><name pos:line="212" pos:column="13">p<pos:position pos:line="212" pos:column="14"/></name> <operator pos:line="212" pos:column="15">=<pos:position pos:line="212" pos:column="16"/></operator> <ternary><condition><expr><name pos:line="212" pos:column="17">request<pos:position pos:line="212" pos:column="24"/></name></expr> ?<pos:position pos:line="212" pos:column="26"/></condition><then pos:line="212" pos:column="26"> <expr><call><name pos:line="212" pos:column="27">urlCanonical<pos:position pos:line="212" pos:column="39"/></name><argument_list pos:line="212" pos:column="39">(<argument><expr><name pos:line="212" pos:column="40">request<pos:position pos:line="212" pos:column="47"/></name></expr></argument>)<pos:position pos:line="212" pos:column="48"/></argument_list></call></expr> <pos:position pos:line="212" pos:column="49"/></then><else pos:line="212" pos:column="49">: <expr><name pos:line="212" pos:column="51">url<pos:position pos:line="212" pos:column="54"/></name></expr></else></ternary></expr>;<pos:position pos:line="212" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="213" pos:column="13">debugs<pos:position pos:line="213" pos:column="19"/></name><argument_list pos:line="213" pos:column="19">(<argument><expr><literal type="number" pos:line="213" pos:column="20">0<pos:position pos:line="213" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="213" pos:column="23">DBG_CRITICAL<pos:position pos:line="213" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="37">"WARNING: deny_info now accepts coded tags. Use %u to get the full URL instead of %s"<pos:position pos:line="213" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="124"/></expr_stmt>
        }<pos:position pos:line="214" pos:column="10"/></block></then> <else pos:line="214" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="215" pos:column="13">p<pos:position pos:line="215" pos:column="14"/></name> <operator pos:line="215" pos:column="15">=<pos:position pos:line="215" pos:column="16"/></operator> <name pos:line="215" pos:column="17">visible_appname_string<pos:position pos:line="215" pos:column="39"/></name></expr>;<pos:position pos:line="215" pos:column="40"/></expr_stmt></block></else></if>
        <break pos:line="216" pos:column="9">break;<pos:position pos:line="216" pos:column="15"/></break>

    <case pos:line="218" pos:column="5">case <expr><literal type="char" pos:line="218" pos:column="10">'S'<pos:position pos:line="218" pos:column="13"/></literal></expr>:<pos:position pos:line="218" pos:column="14"/></case>
        <if pos:line="219" pos:column="9">if <condition pos:line="219" pos:column="12">(<expr><name pos:line="219" pos:column="13">building_deny_info_url<pos:position pos:line="219" pos:column="35"/></name></expr>)<pos:position pos:line="219" pos:column="36"/></condition><then pos:line="219" pos:column="36"> <block pos:line="219" pos:column="37">{
            <expr_stmt><expr><name pos:line="220" pos:column="13">p<pos:position pos:line="220" pos:column="14"/></name> <operator pos:line="220" pos:column="15">=<pos:position pos:line="220" pos:column="16"/></operator> <name pos:line="220" pos:column="17">visible_appname_string<pos:position pos:line="220" pos:column="39"/></name></expr>;<pos:position pos:line="220" pos:column="40"/></expr_stmt>
            <break pos:line="221" pos:column="13">break;<pos:position pos:line="221" pos:column="19"/></break>
        }<pos:position pos:line="222" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="223" pos:column="9">/* signature may contain %-escapes, recursion */</comment>
        <if pos:line="224" pos:column="9">if <condition pos:line="224" pos:column="12">(<expr><name pos:line="224" pos:column="13">page_id<pos:position pos:line="224" pos:column="20"/></name> <operator pos:line="224" pos:column="21">!=<pos:position pos:line="224" pos:column="23"/></operator> <name pos:line="224" pos:column="24">ERR_SQUID_SIGNATURE<pos:position pos:line="224" pos:column="43"/></name></expr>)<pos:position pos:line="224" pos:column="44"/></condition><then pos:line="224" pos:column="44"> <block pos:line="224" pos:column="45">{
            <decl_stmt><decl><type><specifier pos:line="225" pos:column="13">const<pos:position pos:line="225" pos:column="18"/></specifier> <name pos:line="225" pos:column="19">int<pos:position pos:line="225" pos:column="22"/></name></type> <name pos:line="225" pos:column="23">saved_id<pos:position pos:line="225" pos:column="31"/></name> <init pos:line="225" pos:column="32">= <expr><name pos:line="225" pos:column="34">page_id<pos:position pos:line="225" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="225" pos:column="42"/></decl_stmt>
            <expr_stmt><expr><name pos:line="226" pos:column="13">page_id<pos:position pos:line="226" pos:column="20"/></name> <operator pos:line="226" pos:column="21">=<pos:position pos:line="226" pos:column="22"/></operator> <name pos:line="226" pos:column="23">ERR_SQUID_SIGNATURE<pos:position pos:line="226" pos:column="42"/></name></expr>;<pos:position pos:line="226" pos:column="43"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="227" pos:column="13">MemBuf<pos:position pos:line="227" pos:column="19"/></name> <modifier pos:line="227" pos:column="20">*<pos:position pos:line="227" pos:column="21"/></modifier></type><name pos:line="227" pos:column="21">sign_mb<pos:position pos:line="227" pos:column="28"/></name> <init pos:line="227" pos:column="29">= <expr><call><name pos:line="227" pos:column="31">BuildContent<pos:position pos:line="227" pos:column="43"/></name><argument_list pos:line="227" pos:column="43">()<pos:position pos:line="227" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="227" pos:column="46"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="228" pos:column="13">mb<pos:position pos:line="228" pos:column="15"/></name><operator pos:line="228" pos:column="15">.<pos:position pos:line="228" pos:column="16"/></operator><name pos:line="228" pos:column="16">Printf<pos:position pos:line="228" pos:column="22"/></name></name><argument_list pos:line="228" pos:column="22">(<argument><expr><literal type="string" pos:line="228" pos:column="23">"%s"<pos:position pos:line="228" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="228" pos:column="29">sign_mb<pos:position pos:line="228" pos:column="36"/></name><operator pos:line="228" pos:column="36">-&gt;<pos:position pos:line="228" pos:column="41"/></operator><name pos:line="228" pos:column="38">content<pos:position pos:line="228" pos:column="45"/></name></name><argument_list pos:line="228" pos:column="45">()<pos:position pos:line="228" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="228" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="229" pos:column="13">sign_mb<pos:position pos:line="229" pos:column="20"/></name><operator pos:line="229" pos:column="20">-&gt;<pos:position pos:line="229" pos:column="25"/></operator><name pos:line="229" pos:column="22">clean<pos:position pos:line="229" pos:column="27"/></name></name><argument_list pos:line="229" pos:column="27">()<pos:position pos:line="229" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="230" pos:column="13">delete<pos:position pos:line="230" pos:column="19"/></operator> <name pos:line="230" pos:column="20">sign_mb<pos:position pos:line="230" pos:column="27"/></name></expr>;<pos:position pos:line="230" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="231" pos:column="13">page_id<pos:position pos:line="231" pos:column="20"/></name> <operator pos:line="231" pos:column="21">=<pos:position pos:line="231" pos:column="22"/></operator> <name pos:line="231" pos:column="23">saved_id<pos:position pos:line="231" pos:column="31"/></name></expr>;<pos:position pos:line="231" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="232" pos:column="13">do_quote<pos:position pos:line="232" pos:column="21"/></name> <operator pos:line="232" pos:column="22">=<pos:position pos:line="232" pos:column="23"/></operator> <literal type="number" pos:line="232" pos:column="24">0<pos:position pos:line="232" pos:column="25"/></literal></expr>;<pos:position pos:line="232" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="233" pos:column="10"/></block></then> <else pos:line="233" pos:column="11">else <block pos:line="233" pos:column="16">{
            <comment type="block" pos:line="234" pos:column="13">/* wow, somebody put %S into ERR_SIGNATURE, stop recursion */</comment>
            <expr_stmt><expr><name pos:line="235" pos:column="13">p<pos:position pos:line="235" pos:column="14"/></name> <operator pos:line="235" pos:column="15">=<pos:position pos:line="235" pos:column="16"/></operator> <literal type="string" pos:line="235" pos:column="17">"[%S]"<pos:position pos:line="235" pos:column="23"/></literal></expr>;<pos:position pos:line="235" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="236" pos:column="10"/></block></else></if>
        <break pos:line="237" pos:column="9">break;<pos:position pos:line="237" pos:column="15"/></break>

    <case pos:line="239" pos:column="5">case <expr><literal type="char" pos:line="239" pos:column="10">'t'<pos:position pos:line="239" pos:column="13"/></literal></expr>:<pos:position pos:line="239" pos:column="14"/></case>
        <expr_stmt><expr><call><name><name pos:line="240" pos:column="9">mb<pos:position pos:line="240" pos:column="11"/></name><operator pos:line="240" pos:column="11">.<pos:position pos:line="240" pos:column="12"/></operator><name pos:line="240" pos:column="12">Printf<pos:position pos:line="240" pos:column="18"/></name></name><argument_list pos:line="240" pos:column="18">(<argument><expr><literal type="string" pos:line="240" pos:column="19">"%s"<pos:position pos:line="240" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="240" pos:column="25">Time<pos:position pos:line="240" pos:column="29"/></name><operator pos:line="240" pos:column="29">::<pos:position pos:line="240" pos:column="31"/></operator><name pos:line="240" pos:column="31">FormatHttpd<pos:position pos:line="240" pos:column="42"/></name></name><argument_list pos:line="240" pos:column="42">(<argument><expr><name pos:line="240" pos:column="43">squid_curtime<pos:position pos:line="240" pos:column="56"/></name></expr></argument>)<pos:position pos:line="240" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="240" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="59"/></expr_stmt>
        <break pos:line="241" pos:column="9">break;<pos:position pos:line="241" pos:column="15"/></break>

    <case pos:line="243" pos:column="5">case <expr><literal type="char" pos:line="243" pos:column="10">'T'<pos:position pos:line="243" pos:column="13"/></literal></expr>:<pos:position pos:line="243" pos:column="14"/></case>
        <expr_stmt><expr><call><name><name pos:line="244" pos:column="9">mb<pos:position pos:line="244" pos:column="11"/></name><operator pos:line="244" pos:column="11">.<pos:position pos:line="244" pos:column="12"/></operator><name pos:line="244" pos:column="12">Printf<pos:position pos:line="244" pos:column="18"/></name></name><argument_list pos:line="244" pos:column="18">(<argument><expr><literal type="string" pos:line="244" pos:column="19">"%s"<pos:position pos:line="244" pos:column="23"/></literal></expr></argument>, <argument><expr><call><name pos:line="244" pos:column="25">mkrfc1123<pos:position pos:line="244" pos:column="34"/></name><argument_list pos:line="244" pos:column="34">(<argument><expr><name pos:line="244" pos:column="35">squid_curtime<pos:position pos:line="244" pos:column="48"/></name></expr></argument>)<pos:position pos:line="244" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="244" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="51"/></expr_stmt>
        <break pos:line="245" pos:column="9">break;<pos:position pos:line="245" pos:column="15"/></break>

    <case pos:line="247" pos:column="5">case <expr><literal type="char" pos:line="247" pos:column="10">'U'<pos:position pos:line="247" pos:column="13"/></literal></expr>:<pos:position pos:line="247" pos:column="14"/></case>
        <comment type="block" pos:line="248" pos:column="9">/* Using the fake-https version of canonical so error pages see https:// */</comment>
        <comment type="block" pos:line="249" pos:column="9">/* even when the url-path cannot be shown as more than '*' */</comment>
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">request<pos:position pos:line="250" pos:column="20"/></name></expr>)<pos:position pos:line="250" pos:column="21"/></condition><then pos:line="250" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="251" pos:column="13">p<pos:position pos:line="251" pos:column="14"/></name> <operator pos:line="251" pos:column="15">=<pos:position pos:line="251" pos:column="16"/></operator> <call><name pos:line="251" pos:column="17">urlCanonicalFakeHttps<pos:position pos:line="251" pos:column="38"/></name><argument_list pos:line="251" pos:column="38">(<argument><expr><name pos:line="251" pos:column="39">request<pos:position pos:line="251" pos:column="46"/></name></expr></argument>)<pos:position pos:line="251" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="48"/></expr_stmt></block></then>
        <elseif pos:line="252" pos:column="9">else <if pos:line="252" pos:column="14">if <condition pos:line="252" pos:column="17">(<expr><name pos:line="252" pos:column="18">url<pos:position pos:line="252" pos:column="21"/></name></expr>)<pos:position pos:line="252" pos:column="22"/></condition><then pos:line="252" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="253" pos:column="13">p<pos:position pos:line="253" pos:column="14"/></name> <operator pos:line="253" pos:column="15">=<pos:position pos:line="253" pos:column="16"/></operator> <name pos:line="253" pos:column="17">url<pos:position pos:line="253" pos:column="20"/></name></expr>;<pos:position pos:line="253" pos:column="21"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="254" pos:column="9">else <if pos:line="254" pos:column="14">if <condition pos:line="254" pos:column="17">(<expr><operator pos:line="254" pos:column="18">!<pos:position pos:line="254" pos:column="19"/></operator><name pos:line="254" pos:column="19">building_deny_info_url<pos:position pos:line="254" pos:column="41"/></name></expr>)<pos:position pos:line="254" pos:column="42"/></condition><then pos:line="254" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="255" pos:column="13">p<pos:position pos:line="255" pos:column="14"/></name> <operator pos:line="255" pos:column="15">=<pos:position pos:line="255" pos:column="16"/></operator> <literal type="string" pos:line="255" pos:column="17">"[no URL]"<pos:position pos:line="255" pos:column="27"/></literal></expr>;<pos:position pos:line="255" pos:column="28"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="256" pos:column="9">break;<pos:position pos:line="256" pos:column="15"/></break>

    <case pos:line="258" pos:column="5">case <expr><literal type="char" pos:line="258" pos:column="10">'u'<pos:position pos:line="258" pos:column="13"/></literal></expr>:<pos:position pos:line="258" pos:column="14"/></case>
        <if pos:line="259" pos:column="9">if <condition pos:line="259" pos:column="12">(<expr><name pos:line="259" pos:column="13">request<pos:position pos:line="259" pos:column="20"/></name></expr>)<pos:position pos:line="259" pos:column="21"/></condition><then pos:line="259" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="260" pos:column="13">p<pos:position pos:line="260" pos:column="14"/></name> <operator pos:line="260" pos:column="15">=<pos:position pos:line="260" pos:column="16"/></operator> <call><name pos:line="260" pos:column="17">urlCanonical<pos:position pos:line="260" pos:column="29"/></name><argument_list pos:line="260" pos:column="29">(<argument><expr><name pos:line="260" pos:column="30">request<pos:position pos:line="260" pos:column="37"/></name></expr></argument>)<pos:position pos:line="260" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="39"/></expr_stmt></block></then>
        <elseif pos:line="261" pos:column="9">else <if pos:line="261" pos:column="14">if <condition pos:line="261" pos:column="17">(<expr><name pos:line="261" pos:column="18">url<pos:position pos:line="261" pos:column="21"/></name></expr>)<pos:position pos:line="261" pos:column="22"/></condition><then pos:line="261" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="262" pos:column="13">p<pos:position pos:line="262" pos:column="14"/></name> <operator pos:line="262" pos:column="15">=<pos:position pos:line="262" pos:column="16"/></operator> <name pos:line="262" pos:column="17">url<pos:position pos:line="262" pos:column="20"/></name></expr>;<pos:position pos:line="262" pos:column="21"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="263" pos:column="9">else <if pos:line="263" pos:column="14">if <condition pos:line="263" pos:column="17">(<expr><operator pos:line="263" pos:column="18">!<pos:position pos:line="263" pos:column="19"/></operator><name pos:line="263" pos:column="19">building_deny_info_url<pos:position pos:line="263" pos:column="41"/></name></expr>)<pos:position pos:line="263" pos:column="42"/></condition><then pos:line="263" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="264" pos:column="13">p<pos:position pos:line="264" pos:column="14"/></name> <operator pos:line="264" pos:column="15">=<pos:position pos:line="264" pos:column="16"/></operator> <literal type="string" pos:line="264" pos:column="17">"[no URL]"<pos:position pos:line="264" pos:column="27"/></literal></expr>;<pos:position pos:line="264" pos:column="28"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="265" pos:column="9">break;<pos:position pos:line="265" pos:column="15"/></break>

    <case pos:line="267" pos:column="5">case <expr><literal type="char" pos:line="267" pos:column="10">'w'<pos:position pos:line="267" pos:column="13"/></literal></expr>:<pos:position pos:line="267" pos:column="14"/></case>
        <if pos:line="268" pos:column="9">if <condition pos:line="268" pos:column="12">(<expr><name><name pos:line="268" pos:column="13">Config<pos:position pos:line="268" pos:column="19"/></name><operator pos:line="268" pos:column="19">.<pos:position pos:line="268" pos:column="20"/></operator><name pos:line="268" pos:column="20">adminEmail<pos:position pos:line="268" pos:column="30"/></name></name></expr>)<pos:position pos:line="268" pos:column="31"/></condition><then pos:line="268" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="269" pos:column="13">mb<pos:position pos:line="269" pos:column="15"/></name><operator pos:line="269" pos:column="15">.<pos:position pos:line="269" pos:column="16"/></operator><name pos:line="269" pos:column="16">Printf<pos:position pos:line="269" pos:column="22"/></name></name><argument_list pos:line="269" pos:column="22">(<argument><expr><literal type="string" pos:line="269" pos:column="23">"%s"<pos:position pos:line="269" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="269" pos:column="29">Config<pos:position pos:line="269" pos:column="35"/></name><operator pos:line="269" pos:column="35">.<pos:position pos:line="269" pos:column="36"/></operator><name pos:line="269" pos:column="36">adminEmail<pos:position pos:line="269" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="269" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="48"/></expr_stmt></block></then>
        <elseif pos:line="270" pos:column="9">else <if pos:line="270" pos:column="14">if <condition pos:line="270" pos:column="17">(<expr><operator pos:line="270" pos:column="18">!<pos:position pos:line="270" pos:column="19"/></operator><name pos:line="270" pos:column="19">building_deny_info_url<pos:position pos:line="270" pos:column="41"/></name></expr>)<pos:position pos:line="270" pos:column="42"/></condition><then pos:line="270" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="271" pos:column="13">p<pos:position pos:line="271" pos:column="14"/></name> <operator pos:line="271" pos:column="15">=<pos:position pos:line="271" pos:column="16"/></operator> <literal type="string" pos:line="271" pos:column="17">"[unknown]"<pos:position pos:line="271" pos:column="28"/></literal></expr>;<pos:position pos:line="271" pos:column="29"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="272" pos:column="9">break;<pos:position pos:line="272" pos:column="15"/></break>

    <case pos:line="274" pos:column="5">case <expr><literal type="char" pos:line="274" pos:column="10">'W'<pos:position pos:line="274" pos:column="13"/></literal></expr>:<pos:position pos:line="274" pos:column="14"/></case>
        <if pos:line="275" pos:column="9">if <condition pos:line="275" pos:column="12">(<expr><name pos:line="275" pos:column="13">building_deny_info_url<pos:position pos:line="275" pos:column="35"/></name></expr>)<pos:position pos:line="275" pos:column="36"/></condition><then pos:line="275" pos:column="36"> <block type="pseudo"><break pos:line="275" pos:column="37">break;<pos:position pos:line="275" pos:column="43"/></break></block></then></if>
        <if pos:line="276" pos:column="9">if <condition pos:line="276" pos:column="12">(<expr><name><name pos:line="276" pos:column="13">Config<pos:position pos:line="276" pos:column="19"/></name><operator pos:line="276" pos:column="19">.<pos:position pos:line="276" pos:column="20"/></operator><name pos:line="276" pos:column="20">adminEmail<pos:position pos:line="276" pos:column="30"/></name></name> <operator pos:line="276" pos:column="31">&amp;&amp;<pos:position pos:line="276" pos:column="41"/></operator> <name><name pos:line="276" pos:column="34">Config<pos:position pos:line="276" pos:column="40"/></name><operator pos:line="276" pos:column="40">.<pos:position pos:line="276" pos:column="41"/></operator><name pos:line="276" pos:column="41">onoff<pos:position pos:line="276" pos:column="46"/></name><operator pos:line="276" pos:column="46">.<pos:position pos:line="276" pos:column="47"/></operator><name pos:line="276" pos:column="47">emailErrData<pos:position pos:line="276" pos:column="59"/></name></name></expr>)<pos:position pos:line="276" pos:column="60"/></condition><then pos:line="276" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="277" pos:column="13">Dump<pos:position pos:line="277" pos:column="17"/></name><argument_list pos:line="277" pos:column="17">(<argument><expr><operator pos:line="277" pos:column="18">&amp;<pos:position pos:line="277" pos:column="23"/></operator><name pos:line="277" pos:column="19">mb<pos:position pos:line="277" pos:column="21"/></name></expr></argument>)<pos:position pos:line="277" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="23"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="278" pos:column="9">no_urlescape<pos:position pos:line="278" pos:column="21"/></name> <operator pos:line="278" pos:column="22">=<pos:position pos:line="278" pos:column="23"/></operator> <literal type="number" pos:line="278" pos:column="24">1<pos:position pos:line="278" pos:column="25"/></literal></expr>;<pos:position pos:line="278" pos:column="26"/></expr_stmt>
        <break pos:line="279" pos:column="9">break;<pos:position pos:line="279" pos:column="15"/></break>

    <case pos:line="281" pos:column="5">case <expr><literal type="char" pos:line="281" pos:column="10">'x'<pos:position pos:line="281" pos:column="13"/></literal></expr>:<pos:position pos:line="281" pos:column="14"/></case>
<cpp:if pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">if<pos:position pos:line="282" pos:column="4"/></cpp:directive> <expr><name pos:line="282" pos:column="5">USE_OPENSSL<pos:position pos:line="282" pos:column="16"/></name></expr></cpp:if>
        <if pos:line="283" pos:column="9">if <condition pos:line="283" pos:column="12">(<expr><name pos:line="283" pos:column="13">detail<pos:position pos:line="283" pos:column="19"/></name></expr>)<pos:position pos:line="283" pos:column="20"/></condition><then pos:line="283" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="284" pos:column="13">mb<pos:position pos:line="284" pos:column="15"/></name><operator pos:line="284" pos:column="15">.<pos:position pos:line="284" pos:column="16"/></operator><name pos:line="284" pos:column="16">Printf<pos:position pos:line="284" pos:column="22"/></name></name><argument_list pos:line="284" pos:column="22">(<argument><expr><literal type="string" pos:line="284" pos:column="23">"%s"<pos:position pos:line="284" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="284" pos:column="29">detail<pos:position pos:line="284" pos:column="35"/></name><operator pos:line="284" pos:column="35">-&gt;<pos:position pos:line="284" pos:column="40"/></operator><name pos:line="284" pos:column="37">errorName<pos:position pos:line="284" pos:column="46"/></name></name><argument_list pos:line="284" pos:column="46">()<pos:position pos:line="284" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="284" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="50"/></expr_stmt></block></then>
        <elseif pos:line="285" pos:column="9">else
<cpp:endif pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">endif<pos:position pos:line="286" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="287" pos:column="13">if <condition pos:line="287" pos:column="16">(<expr><operator pos:line="287" pos:column="17">!<pos:position pos:line="287" pos:column="18"/></operator><name pos:line="287" pos:column="18">building_deny_info_url<pos:position pos:line="287" pos:column="40"/></name></expr>)<pos:position pos:line="287" pos:column="41"/></condition><then pos:line="287" pos:column="41">
                <block type="pseudo"><expr_stmt><expr><name pos:line="288" pos:column="17">p<pos:position pos:line="288" pos:column="18"/></name> <operator pos:line="288" pos:column="19">=<pos:position pos:line="288" pos:column="20"/></operator> <literal type="string" pos:line="288" pos:column="21">"[Unknown Error Code]"<pos:position pos:line="288" pos:column="43"/></literal></expr>;<pos:position pos:line="288" pos:column="44"/></expr_stmt></block></then></if></elseif></if>
        <break pos:line="289" pos:column="9">break;<pos:position pos:line="289" pos:column="15"/></break>

    <case pos:line="291" pos:column="5">case <expr><literal type="char" pos:line="291" pos:column="10">'z'<pos:position pos:line="291" pos:column="13"/></literal></expr>:<pos:position pos:line="291" pos:column="14"/></case>
        <if pos:line="292" pos:column="9">if <condition pos:line="292" pos:column="12">(<expr><name pos:line="292" pos:column="13">building_deny_info_url<pos:position pos:line="292" pos:column="35"/></name></expr>)<pos:position pos:line="292" pos:column="36"/></condition><then pos:line="292" pos:column="36"> <block type="pseudo"><break pos:line="292" pos:column="37">break;<pos:position pos:line="292" pos:column="43"/></break></block></then></if>
        <if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><call><name><name pos:line="293" pos:column="13">dnsError<pos:position pos:line="293" pos:column="21"/></name><operator pos:line="293" pos:column="21">.<pos:position pos:line="293" pos:column="22"/></operator><name pos:line="293" pos:column="22">size<pos:position pos:line="293" pos:column="26"/></name></name><argument_list pos:line="293" pos:column="26">()<pos:position pos:line="293" pos:column="28"/></argument_list></call> <operator pos:line="293" pos:column="29">&gt;<pos:position pos:line="293" pos:column="33"/></operator> <literal type="number" pos:line="293" pos:column="31">0<pos:position pos:line="293" pos:column="32"/></literal></expr>)<pos:position pos:line="293" pos:column="33"/></condition><then pos:line="293" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name pos:line="294" pos:column="13">p<pos:position pos:line="294" pos:column="14"/></name> <operator pos:line="294" pos:column="15">=<pos:position pos:line="294" pos:column="16"/></operator> <call><name><name pos:line="294" pos:column="17">dnsError<pos:position pos:line="294" pos:column="25"/></name><operator pos:line="294" pos:column="25">.<pos:position pos:line="294" pos:column="26"/></operator><name pos:line="294" pos:column="26">termedBuf<pos:position pos:line="294" pos:column="35"/></name></name><argument_list pos:line="294" pos:column="35">()<pos:position pos:line="294" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="38"/></expr_stmt></block></then>
        <elseif pos:line="295" pos:column="9">else <if pos:line="295" pos:column="14">if <condition pos:line="295" pos:column="17">(<expr><name><name pos:line="295" pos:column="18">ftp<pos:position pos:line="295" pos:column="21"/></name><operator pos:line="295" pos:column="21">.<pos:position pos:line="295" pos:column="22"/></operator><name pos:line="295" pos:column="22">cwd_msg<pos:position pos:line="295" pos:column="29"/></name></name></expr>)<pos:position pos:line="295" pos:column="30"/></condition><then pos:line="295" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="296" pos:column="13">p<pos:position pos:line="296" pos:column="14"/></name> <operator pos:line="296" pos:column="15">=<pos:position pos:line="296" pos:column="16"/></operator> <name><name pos:line="296" pos:column="17">ftp<pos:position pos:line="296" pos:column="20"/></name><operator pos:line="296" pos:column="20">.<pos:position pos:line="296" pos:column="21"/></operator><name pos:line="296" pos:column="21">cwd_msg<pos:position pos:line="296" pos:column="28"/></name></name></expr>;<pos:position pos:line="296" pos:column="29"/></expr_stmt></block></then></if></elseif>
        <else pos:line="297" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="298" pos:column="13">p<pos:position pos:line="298" pos:column="14"/></name> <operator pos:line="298" pos:column="15">=<pos:position pos:line="298" pos:column="16"/></operator> <literal type="string" pos:line="298" pos:column="17">"[unknown]"<pos:position pos:line="298" pos:column="28"/></literal></expr>;<pos:position pos:line="298" pos:column="29"/></expr_stmt></block></else></if>
        <break pos:line="299" pos:column="9">break;<pos:position pos:line="299" pos:column="15"/></break>

    <case pos:line="301" pos:column="5">case <expr><literal type="char" pos:line="301" pos:column="10">'Z'<pos:position pos:line="301" pos:column="13"/></literal></expr>:<pos:position pos:line="301" pos:column="14"/></case>
        <if pos:line="302" pos:column="9">if <condition pos:line="302" pos:column="12">(<expr><name pos:line="302" pos:column="13">building_deny_info_url<pos:position pos:line="302" pos:column="35"/></name></expr>)<pos:position pos:line="302" pos:column="36"/></condition><then pos:line="302" pos:column="36"> <block type="pseudo"><break pos:line="302" pos:column="37">break;<pos:position pos:line="302" pos:column="43"/></break></block></then></if>
        <if pos:line="303" pos:column="9">if <condition pos:line="303" pos:column="12">(<expr><name pos:line="303" pos:column="13">err_msg<pos:position pos:line="303" pos:column="20"/></name></expr>)<pos:position pos:line="303" pos:column="21"/></condition><then pos:line="303" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="304" pos:column="13">p<pos:position pos:line="304" pos:column="14"/></name> <operator pos:line="304" pos:column="15">=<pos:position pos:line="304" pos:column="16"/></operator> <name pos:line="304" pos:column="17">err_msg<pos:position pos:line="304" pos:column="24"/></name></expr>;<pos:position pos:line="304" pos:column="25"/></expr_stmt></block></then>
        <else pos:line="305" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="306" pos:column="13">p<pos:position pos:line="306" pos:column="14"/></name> <operator pos:line="306" pos:column="15">=<pos:position pos:line="306" pos:column="16"/></operator> <literal type="string" pos:line="306" pos:column="17">"[unknown]"<pos:position pos:line="306" pos:column="28"/></literal></expr>;<pos:position pos:line="306" pos:column="29"/></expr_stmt></block></else></if>
        <break pos:line="307" pos:column="9">break;<pos:position pos:line="307" pos:column="15"/></break>

    <case pos:line="309" pos:column="5">case <expr><literal type="char" pos:line="309" pos:column="10">'%'<pos:position pos:line="309" pos:column="13"/></literal></expr>:<pos:position pos:line="309" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="310" pos:column="9">p<pos:position pos:line="310" pos:column="10"/></name> <operator pos:line="310" pos:column="11">=<pos:position pos:line="310" pos:column="12"/></operator> <literal type="string" pos:line="310" pos:column="13">"%"<pos:position pos:line="310" pos:column="16"/></literal></expr>;<pos:position pos:line="310" pos:column="17"/></expr_stmt>
        <break pos:line="311" pos:column="9">break;<pos:position pos:line="311" pos:column="15"/></break>

    <default pos:line="313" pos:column="5">default:<pos:position pos:line="313" pos:column="13"/></default>
        <expr_stmt><expr><call><name><name pos:line="314" pos:column="9">mb<pos:position pos:line="314" pos:column="11"/></name><operator pos:line="314" pos:column="11">.<pos:position pos:line="314" pos:column="12"/></operator><name pos:line="314" pos:column="12">Printf<pos:position pos:line="314" pos:column="18"/></name></name><argument_list pos:line="314" pos:column="18">(<argument><expr><literal type="string" pos:line="314" pos:column="19">"%%%c"<pos:position pos:line="314" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="314" pos:column="27">token<pos:position pos:line="314" pos:column="32"/></name></expr></argument>)<pos:position pos:line="314" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="315" pos:column="9">do_quote<pos:position pos:line="315" pos:column="17"/></name> <operator pos:line="315" pos:column="18">=<pos:position pos:line="315" pos:column="19"/></operator> <literal type="number" pos:line="315" pos:column="20">0<pos:position pos:line="315" pos:column="21"/></literal></expr>;<pos:position pos:line="315" pos:column="22"/></expr_stmt>
        <break pos:line="316" pos:column="9">break;<pos:position pos:line="316" pos:column="15"/></break>
    }<pos:position pos:line="317" pos:column="6"/></block></switch>

    <if pos:line="319" pos:column="5">if <condition pos:line="319" pos:column="8">(<expr><operator pos:line="319" pos:column="9">!<pos:position pos:line="319" pos:column="10"/></operator><name pos:line="319" pos:column="10">p<pos:position pos:line="319" pos:column="11"/></name></expr>)<pos:position pos:line="319" pos:column="12"/></condition><then pos:line="319" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><name pos:line="320" pos:column="9">p<pos:position pos:line="320" pos:column="10"/></name> <operator pos:line="320" pos:column="11">=<pos:position pos:line="320" pos:column="12"/></operator> <name><name pos:line="320" pos:column="13">mb<pos:position pos:line="320" pos:column="15"/></name><operator pos:line="320" pos:column="15">.<pos:position pos:line="320" pos:column="16"/></operator><name pos:line="320" pos:column="16">buf<pos:position pos:line="320" pos:column="19"/></name></name></expr>;<pos:position pos:line="320" pos:column="20"/></expr_stmt></block></then></if>     <comment type="block" pos:line="320" pos:column="25">/* do not use mb after this assignment! */</comment>

    <expr_stmt><expr><call><name pos:line="322" pos:column="5">assert<pos:position pos:line="322" pos:column="11"/></name><argument_list pos:line="322" pos:column="11">(<argument><expr><name pos:line="322" pos:column="12">p<pos:position pos:line="322" pos:column="13"/></name></expr></argument>)<pos:position pos:line="322" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="324" pos:column="5">debugs<pos:position pos:line="324" pos:column="11"/></name><argument_list pos:line="324" pos:column="11">(<argument><expr><literal type="number" pos:line="324" pos:column="12">4<pos:position pos:line="324" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="324" pos:column="15">3<pos:position pos:line="324" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="18">"errorConvert: %%"<pos:position pos:line="324" pos:column="36"/></literal> <operator pos:line="324" pos:column="37">&lt;&lt;<pos:position pos:line="324" pos:column="45"/></operator> <name pos:line="324" pos:column="40">token<pos:position pos:line="324" pos:column="45"/></name> <operator pos:line="324" pos:column="46">&lt;&lt;<pos:position pos:line="324" pos:column="54"/></operator> <literal type="string" pos:line="324" pos:column="49">" --&gt; '"<pos:position pos:line="324" pos:column="60"/></literal> <operator pos:line="324" pos:column="58">&lt;&lt;<pos:position pos:line="324" pos:column="66"/></operator> <name pos:line="324" pos:column="61">p<pos:position pos:line="324" pos:column="62"/></name> <operator pos:line="324" pos:column="63">&lt;&lt;<pos:position pos:line="324" pos:column="71"/></operator> <literal type="string" pos:line="324" pos:column="66">"'"<pos:position pos:line="324" pos:column="69"/></literal></expr></argument> )<pos:position pos:line="324" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="72"/></expr_stmt>

    <if pos:line="326" pos:column="5">if <condition pos:line="326" pos:column="8">(<expr><name pos:line="326" pos:column="9">do_quote<pos:position pos:line="326" pos:column="17"/></name></expr>)<pos:position pos:line="326" pos:column="18"/></condition><then pos:line="326" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="327" pos:column="9">p<pos:position pos:line="327" pos:column="10"/></name> <operator pos:line="327" pos:column="11">=<pos:position pos:line="327" pos:column="12"/></operator> <call><name pos:line="327" pos:column="13">html_quote<pos:position pos:line="327" pos:column="23"/></name><argument_list pos:line="327" pos:column="23">(<argument><expr><name pos:line="327" pos:column="24">p<pos:position pos:line="327" pos:column="25"/></name></expr></argument>)<pos:position pos:line="327" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="27"/></expr_stmt></block></then></if>

    <if pos:line="329" pos:column="5">if <condition pos:line="329" pos:column="8">(<expr><name pos:line="329" pos:column="9">building_deny_info_url<pos:position pos:line="329" pos:column="31"/></name> <operator pos:line="329" pos:column="32">&amp;&amp;<pos:position pos:line="329" pos:column="42"/></operator> <operator pos:line="329" pos:column="35">!<pos:position pos:line="329" pos:column="36"/></operator><name pos:line="329" pos:column="36">no_urlescape<pos:position pos:line="329" pos:column="48"/></name></expr>)<pos:position pos:line="329" pos:column="49"/></condition><then pos:line="329" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="330" pos:column="9">p<pos:position pos:line="330" pos:column="10"/></name> <operator pos:line="330" pos:column="11">=<pos:position pos:line="330" pos:column="12"/></operator> <call><name pos:line="330" pos:column="13">rfc1738_escape_part<pos:position pos:line="330" pos:column="32"/></name><argument_list pos:line="330" pos:column="32">(<argument><expr><name pos:line="330" pos:column="33">p<pos:position pos:line="330" pos:column="34"/></name></expr></argument>)<pos:position pos:line="330" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="36"/></expr_stmt></block></then></if>

    <return pos:line="332" pos:column="5">return <expr><name pos:line="332" pos:column="12">p<pos:position pos:line="332" pos:column="13"/></name></expr>;<pos:position pos:line="332" pos:column="14"/></return>
}<pos:position pos:line="333" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3627_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">IpIntercept<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">IpfInterception<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">fd<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">IpAddress<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">&amp;<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="55">me<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">IpAddress<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">client<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="78">IpAddress<pos:position pos:line="2" pos:column="87"/></name> <modifier pos:line="2" pos:column="88">&amp;<pos:position pos:line="2" pos:column="93"/></modifier></type><name pos:line="2" pos:column="89">dst<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="94">int<pos:position pos:line="2" pos:column="97"/></name></type> <name pos:line="2" pos:column="98">silent<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="105"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">IPF_TRANSPARENT<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>  <comment type="block" pos:line="4" pos:column="22">/* --enable-ipf-transparent */</comment>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><call><name pos:line="6" pos:column="5">defined<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">IPFILTER_VERSION<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call> <operator pos:line="6" pos:column="31">&amp;&amp;<pos:position pos:line="6" pos:column="41"/></operator> <operator pos:line="6" pos:column="34">(<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">IPFILTER_VERSION<pos:position pos:line="6" pos:column="51"/></name> <operator pos:line="6" pos:column="52">&gt;=<pos:position pos:line="6" pos:column="57"/></operator> <literal type="number" pos:line="6" pos:column="55">4000027<pos:position pos:line="6" pos:column="62"/></literal><operator pos:line="6" pos:column="62">)<pos:position pos:line="6" pos:column="63"/></operator></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">ipfobj<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">obj<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><specifier pos:line="9" pos:column="5">static<pos:position pos:line="9" pos:column="11"/></specifier> <type><name pos:line="9" pos:column="12">int<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">siocgnatl_cmd<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">SIOCGNATL<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">&amp;<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="44">0xff<pos:position pos:line="9" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">natlookup<pos:position pos:line="11" pos:column="21"/></name></name></type> <name pos:line="11" pos:column="22">natLookup<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="12" pos:column="5">static<pos:position pos:line="12" pos:column="11"/></specifier> <type><name pos:line="12" pos:column="12">int<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">natfd<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">x<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><call><name pos:line="15" pos:column="5">defined<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">IPFILTER_VERSION<pos:position pos:line="15" pos:column="29"/></name></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call> <operator pos:line="15" pos:column="31">&amp;&amp;<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="34">(<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="35">IPFILTER_VERSION<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">&gt;=<pos:position pos:line="15" pos:column="57"/></operator> <literal type="number" pos:line="15" pos:column="55">4000027<pos:position pos:line="15" pos:column="62"/></literal><operator pos:line="15" pos:column="62">)<pos:position pos:line="15" pos:column="63"/></operator></expr></cpp:if>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">obj<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">ipfo_rev<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">IPFILTER_VERSION<pos:position pos:line="17" pos:column="36"/></name></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">obj<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">ipfo_size<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <sizeof pos:line="18" pos:column="21">sizeof<argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">natLookup<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">obj<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">.<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">ipfo_ptr<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">&amp;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="21">natLookup<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">obj<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">.<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">ipfo_type<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">IPFOBJ_NATLOOKUP<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">obj<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">.<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">ipfo_offset<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">natLookup<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">nl_inport<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <call><name pos:line="24" pos:column="27">htons<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><call><name><name pos:line="24" pos:column="33">me<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">.<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">GetPort<pos:position pos:line="24" pos:column="43"/></name></name><argument_list pos:line="24" pos:column="43">()<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">natLookup<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">.<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">nl_outport<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">htons<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><call><name><name pos:line="25" pos:column="34">dst<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">GetPort<pos:position pos:line="25" pos:column="45"/></name></name><argument_list pos:line="25" pos:column="45">()<pos:position pos:line="25" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">me<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">.<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">GetInAddr<pos:position pos:line="26" pos:column="17"/></name></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name><name pos:line="26" pos:column="18">natLookup<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">.<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">nl_inip<pos:position pos:line="26" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">dst<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">.<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">GetInAddr<pos:position pos:line="27" pos:column="18"/></name></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">natLookup<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">.<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">nl_outip<pos:position pos:line="27" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">natLookup<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">.<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">nl_flags<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">IPN_TCP<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">natfd<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">&lt;<pos:position pos:line="30" pos:column="19"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19"> <block pos:line="30" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">int<pos:position pos:line="31" pos:column="12"/></name></type> <name pos:line="31" pos:column="13">save_errno<pos:position pos:line="31" pos:column="23"/></name></decl>;<pos:position pos:line="31" pos:column="24"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">enter_suid<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">()<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">IPNAT_NAME<pos:position pos:line="33" pos:column="18"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="34" pos:column="9">natfd<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">open<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">IPNAT_NAME<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="34">O_RDONLY<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="44">0<pos:position pos:line="34" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="47"/></expr_stmt>
<cpp:else pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">else<pos:position pos:line="35" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="36" pos:column="9">natfd<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">open<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">IPL_NAT<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="31">O_RDONLY<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="41">0<pos:position pos:line="36" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="38" pos:column="9">save_errno<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">errno<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">leave_suid<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">()<pos:position pos:line="39" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="40" pos:column="9">errno<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">save_errno<pos:position pos:line="40" pos:column="27"/></name></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">natfd<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">&lt;<pos:position pos:line="43" pos:column="19"/></operator> <literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">silent<pos:position pos:line="44" pos:column="20"/></name></expr>)<pos:position pos:line="44" pos:column="21"/></condition><then pos:line="44" pos:column="21"> <block pos:line="44" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">debugs<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="number" pos:line="45" pos:column="20">89<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="24">DBG_IMPORTANT<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="39">HERE<pos:position pos:line="45" pos:column="43"/></name> <operator pos:line="45" pos:column="44">&lt;&lt;<pos:position pos:line="45" pos:column="52"/></operator> <literal type="string" pos:line="45" pos:column="47">"NAT open failed: "<pos:position pos:line="45" pos:column="66"/></literal> <operator pos:line="45" pos:column="67">&lt;&lt;<pos:position pos:line="45" pos:column="75"/></operator> <call><name pos:line="45" pos:column="70">xstrerror<pos:position pos:line="45" pos:column="79"/></name><argument_list pos:line="45" pos:column="79">()<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name pos:line="46" pos:column="13">last_reported<pos:position pos:line="46" pos:column="26"/></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="29">squid_curtime<pos:position pos:line="46" pos:column="42"/></name></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><operator pos:line="47" pos:column="20">-<pos:position pos:line="47" pos:column="21"/></operator><literal type="number" pos:line="47" pos:column="21">1<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

<cpp:if pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">if<pos:position pos:line="51" pos:column="4"/></cpp:directive> <expr><call><name pos:line="51" pos:column="5">defined<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">IPFILTER_VERSION<pos:position pos:line="51" pos:column="29"/></name></expr></argument>)<pos:position pos:line="51" pos:column="30"/></argument_list></call> <operator pos:line="51" pos:column="31">&amp;&amp;<pos:position pos:line="51" pos:column="41"/></operator> <operator pos:line="51" pos:column="34">(<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">IPFILTER_VERSION<pos:position pos:line="51" pos:column="51"/></name> <operator pos:line="51" pos:column="52">&gt;=<pos:position pos:line="51" pos:column="57"/></operator> <literal type="number" pos:line="51" pos:column="55">4000027<pos:position pos:line="51" pos:column="62"/></literal><operator pos:line="51" pos:column="62">)<pos:position pos:line="51" pos:column="63"/></operator></expr></cpp:if>
    <expr_stmt><expr><name pos:line="52" pos:column="5">x<pos:position pos:line="52" pos:column="6"/></name> <operator pos:line="52" pos:column="7">=<pos:position pos:line="52" pos:column="8"/></operator> <call><name pos:line="52" pos:column="9">ioctl<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><name pos:line="52" pos:column="15">natfd<pos:position pos:line="52" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="22">SIOCGNATL<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="33">&amp;<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="34">obj<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>
<cpp:else pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">else<pos:position pos:line="53" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="54" pos:column="5">/*
    * IP-Filter changed the type for SIOCGNATL between
    * 3.3 and 3.4.  It also changed the cmd value for
    * SIOCGNATL, so at least we can detect it.  We could
    * put something in configure and use ifdefs here, but
    * this seems simpler.
    */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><literal type="number" pos:line="61" pos:column="9">63<pos:position pos:line="61" pos:column="11"/></literal> <operator pos:line="61" pos:column="12">==<pos:position pos:line="61" pos:column="14"/></operator> <name pos:line="61" pos:column="15">siocgnatl_cmd<pos:position pos:line="61" pos:column="28"/></name></expr>)<pos:position pos:line="61" pos:column="29"/></condition><then pos:line="61" pos:column="29"> <block pos:line="61" pos:column="30">{
        <decl_stmt><decl><type><name><name pos:line="62" pos:column="9">struct<pos:position pos:line="62" pos:column="15"/></name> <name pos:line="62" pos:column="16">natlookup<pos:position pos:line="62" pos:column="25"/></name></name> <modifier pos:line="62" pos:column="26">*<pos:position pos:line="62" pos:column="27"/></modifier></type><name pos:line="62" pos:column="27">nlp<pos:position pos:line="62" pos:column="30"/></name> <init pos:line="62" pos:column="31">= <expr><operator pos:line="62" pos:column="33">&amp;<pos:position pos:line="62" pos:column="38"/></operator><name pos:line="62" pos:column="34">natLookup<pos:position pos:line="62" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="62" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">x<pos:position pos:line="63" pos:column="10"/></name> <operator pos:line="63" pos:column="11">=<pos:position pos:line="63" pos:column="12"/></operator> <call><name pos:line="63" pos:column="13">ioctl<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><name pos:line="63" pos:column="19">natfd<pos:position pos:line="63" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="26">SIOCGNATL<pos:position pos:line="63" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="37">&amp;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="38">nlp<pos:position pos:line="63" pos:column="41"/></name></expr></argument>)<pos:position pos:line="63" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then> <else pos:line="64" pos:column="7">else <block pos:line="64" pos:column="12">{
        <expr_stmt><expr><name pos:line="65" pos:column="9">x<pos:position pos:line="65" pos:column="10"/></name> <operator pos:line="65" pos:column="11">=<pos:position pos:line="65" pos:column="12"/></operator> <call><name pos:line="65" pos:column="13">ioctl<pos:position pos:line="65" pos:column="18"/></name><argument_list pos:line="65" pos:column="18">(<argument><expr><name pos:line="65" pos:column="19">natfd<pos:position pos:line="65" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="26">SIOCGNATL<pos:position pos:line="65" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="37">&amp;<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="38">natLookup<pos:position pos:line="65" pos:column="47"/></name></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>

<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">x<pos:position pos:line="69" pos:column="10"/></name> <operator pos:line="69" pos:column="11">&lt;<pos:position pos:line="69" pos:column="15"/></operator> <literal type="number" pos:line="69" pos:column="13">0<pos:position pos:line="69" pos:column="14"/></literal></expr>)<pos:position pos:line="69" pos:column="15"/></condition><then pos:line="69" pos:column="15"> <block pos:line="69" pos:column="16">{
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">errno<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">!=<pos:position pos:line="70" pos:column="21"/></operator> <name pos:line="70" pos:column="22">ESRCH<pos:position pos:line="70" pos:column="27"/></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><operator pos:line="71" pos:column="17">!<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">silent<pos:position pos:line="71" pos:column="24"/></name></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25"> <block pos:line="71" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">debugs<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><literal type="number" pos:line="72" pos:column="24">89<pos:position pos:line="72" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="28">DBG_IMPORTANT<pos:position pos:line="72" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="43">HERE<pos:position pos:line="72" pos:column="47"/></name> <operator pos:line="72" pos:column="48">&lt;&lt;<pos:position pos:line="72" pos:column="56"/></operator> <literal type="string" pos:line="72" pos:column="51">"NAT lookup failed: ioctl(SIOCGNATL)"<pos:position pos:line="72" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><name pos:line="73" pos:column="17">last_reported<pos:position pos:line="73" pos:column="30"/></name> <operator pos:line="73" pos:column="31">=<pos:position pos:line="73" pos:column="32"/></operator> <name pos:line="73" pos:column="33">squid_curtime<pos:position pos:line="73" pos:column="46"/></name></expr>;<pos:position pos:line="73" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="76" pos:column="13">close<pos:position pos:line="76" pos:column="18"/></name><argument_list pos:line="76" pos:column="18">(<argument><expr><name pos:line="76" pos:column="19">natfd<pos:position pos:line="76" pos:column="24"/></name></expr></argument>)<pos:position pos:line="76" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">natfd<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">=<pos:position pos:line="77" pos:column="20"/></operator> <operator pos:line="77" pos:column="21">-<pos:position pos:line="77" pos:column="22"/></operator><literal type="number" pos:line="77" pos:column="22">1<pos:position pos:line="77" pos:column="23"/></literal></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

        <return pos:line="80" pos:column="9">return <expr><operator pos:line="80" pos:column="16">-<pos:position pos:line="80" pos:column="17"/></operator><literal type="number" pos:line="80" pos:column="17">1<pos:position pos:line="80" pos:column="18"/></literal></expr>;<pos:position pos:line="80" pos:column="19"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then> <else pos:line="81" pos:column="7">else <block pos:line="81" pos:column="12">{
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">client<pos:position pos:line="82" pos:column="19"/></name> <operator pos:line="82" pos:column="20">!=<pos:position pos:line="82" pos:column="22"/></operator> <name><name pos:line="82" pos:column="23">natLookup<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">.<pos:position pos:line="82" pos:column="33"/></operator><name pos:line="82" pos:column="33">nl_realip<pos:position pos:line="82" pos:column="42"/></name></name></expr>)<pos:position pos:line="82" pos:column="43"/></condition><then pos:line="82" pos:column="43"> <block pos:line="82" pos:column="44">{
            <expr_stmt><expr><name pos:line="83" pos:column="13">client<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">=<pos:position pos:line="83" pos:column="21"/></operator> <name><name pos:line="83" pos:column="22">natLookup<pos:position pos:line="83" pos:column="31"/></name><operator pos:line="83" pos:column="31">.<pos:position pos:line="83" pos:column="32"/></operator><name pos:line="83" pos:column="32">nl_realip<pos:position pos:line="83" pos:column="41"/></name></name></expr>;<pos:position pos:line="83" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="84" pos:column="13">client<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">.<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="20">SetPort<pos:position pos:line="84" pos:column="27"/></name></name><argument_list pos:line="84" pos:column="27">(<argument><expr><call><name pos:line="84" pos:column="28">ntohs<pos:position pos:line="84" pos:column="33"/></name><argument_list pos:line="84" pos:column="33">(<argument><expr><name><name pos:line="84" pos:column="34">natLookup<pos:position pos:line="84" pos:column="43"/></name><operator pos:line="84" pos:column="43">.<pos:position pos:line="84" pos:column="44"/></operator><name pos:line="84" pos:column="44">nl_realport<pos:position pos:line="84" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="86" pos:column="9">// else. we already copied it.</comment>

        <expr_stmt><expr><call><name pos:line="88" pos:column="9">debugs<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><literal type="number" pos:line="88" pos:column="16">89<pos:position pos:line="88" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="20">5<pos:position pos:line="88" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="23">HERE<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">&lt;&lt;<pos:position pos:line="88" pos:column="36"/></operator> <literal type="string" pos:line="88" pos:column="31">"address NAT: me= "<pos:position pos:line="88" pos:column="50"/></literal> <operator pos:line="88" pos:column="51">&lt;&lt;<pos:position pos:line="88" pos:column="59"/></operator> <name pos:line="88" pos:column="54">me<pos:position pos:line="88" pos:column="56"/></name> <operator pos:line="88" pos:column="57">&lt;&lt;<pos:position pos:line="88" pos:column="65"/></operator> <literal type="string" pos:line="88" pos:column="60">", client= "<pos:position pos:line="88" pos:column="72"/></literal> <operator pos:line="88" pos:column="73">&lt;&lt;<pos:position pos:line="88" pos:column="81"/></operator> <name pos:line="88" pos:column="76">client<pos:position pos:line="88" pos:column="82"/></name> <operator pos:line="88" pos:column="83">&lt;&lt;<pos:position pos:line="88" pos:column="91"/></operator> <literal type="string" pos:line="88" pos:column="86">", dst= "<pos:position pos:line="88" pos:column="95"/></literal> <operator pos:line="88" pos:column="96">&lt;&lt;<pos:position pos:line="88" pos:column="104"/></operator> <name pos:line="88" pos:column="99">dst<pos:position pos:line="88" pos:column="102"/></name></expr></argument>)<pos:position pos:line="88" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="104"/></expr_stmt>
        <return pos:line="89" pos:column="9">return <expr><literal type="number" pos:line="89" pos:column="16">0<pos:position pos:line="89" pos:column="17"/></literal></expr>;<pos:position pos:line="89" pos:column="18"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="92" pos:column="5">debugs<pos:position pos:line="92" pos:column="11"/></name><argument_list pos:line="92" pos:column="11">(<argument><expr><literal type="number" pos:line="92" pos:column="12">89<pos:position pos:line="92" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="16">9<pos:position pos:line="92" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="19">HERE<pos:position pos:line="92" pos:column="23"/></name> <operator pos:line="92" pos:column="24">&lt;&lt;<pos:position pos:line="92" pos:column="32"/></operator> <literal type="string" pos:line="92" pos:column="27">"address: me= "<pos:position pos:line="92" pos:column="42"/></literal> <operator pos:line="92" pos:column="43">&lt;&lt;<pos:position pos:line="92" pos:column="51"/></operator> <name pos:line="92" pos:column="46">me<pos:position pos:line="92" pos:column="48"/></name> <operator pos:line="92" pos:column="49">&lt;&lt;<pos:position pos:line="92" pos:column="57"/></operator> <literal type="string" pos:line="92" pos:column="52">", client= "<pos:position pos:line="92" pos:column="64"/></literal> <operator pos:line="92" pos:column="65">&lt;&lt;<pos:position pos:line="92" pos:column="73"/></operator> <name pos:line="92" pos:column="68">client<pos:position pos:line="92" pos:column="74"/></name> <operator pos:line="92" pos:column="75">&lt;&lt;<pos:position pos:line="92" pos:column="83"/></operator> <literal type="string" pos:line="92" pos:column="78">", dst= "<pos:position pos:line="92" pos:column="87"/></literal> <operator pos:line="92" pos:column="88">&lt;&lt;<pos:position pos:line="92" pos:column="96"/></operator> <name pos:line="92" pos:column="91">dst<pos:position pos:line="92" pos:column="94"/></name></expr></argument>)<pos:position pos:line="92" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="96"/></expr_stmt>

<cpp:endif pos:line="94" pos:column="1">#<cpp:directive pos:line="94" pos:column="2">endif<pos:position pos:line="94" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="94" pos:column="8">/* --enable-ipf-transparent */</comment>
    <return pos:line="95" pos:column="5">return <expr><operator pos:line="95" pos:column="12">-<pos:position pos:line="95" pos:column="13"/></operator><literal type="number" pos:line="95" pos:column="13">1<pos:position pos:line="95" pos:column="14"/></literal></expr>;<pos:position pos:line="95" pos:column="15"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

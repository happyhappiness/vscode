<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1267_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerSelectInit<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">memset<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">&amp;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="13">PeerStats<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="24">'\0'<pos:position pos:line="4" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="30">sizeof<argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">PeerStats<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><sizeof pos:line="5" pos:column="12">sizeof<argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">hier_strings<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></sizeof> <operator pos:line="5" pos:column="33">==<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="36">(<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">HIER_MAX<pos:position pos:line="5" pos:column="45"/></name> <operator pos:line="5" pos:column="46">+<pos:position pos:line="5" pos:column="47"/></operator> <literal type="number" pos:line="5" pos:column="48">1<pos:position pos:line="5" pos:column="49"/></literal><operator pos:line="5" pos:column="49">)<pos:position pos:line="5" pos:column="50"/></operator> <operator pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></operator> <sizeof pos:line="5" pos:column="53">sizeof<argument_list pos:line="5" pos:column="59">(<argument><expr><name pos:line="5" pos:column="60">char<pos:position pos:line="5" pos:column="64"/></name> <operator pos:line="5" pos:column="65">*<pos:position pos:line="5" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="69"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

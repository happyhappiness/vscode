<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4602_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">readUploadData<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">CommIoCbParams<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">io<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="19">io<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">conn<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">&lt;&lt;<pos:position pos:line="4" pos:column="35"/></operator> <literal type="string" pos:line="4" pos:column="30">" size "<pos:position pos:line="4" pos:column="38"/></literal> <operator pos:line="4" pos:column="39">&lt;&lt;<pos:position pos:line="4" pos:column="47"/></operator> <name><name pos:line="4" pos:column="42">io<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">size<pos:position pos:line="4" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">reader<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">!=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">reader<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><call><name><name pos:line="8" pos:column="12">Comm<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">IsConnOpen<pos:position pos:line="8" pos:column="28"/></name></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">dataConn<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">io<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">conn<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">fd<pos:position pos:line="9" pos:column="23"/></name></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <name><name pos:line="9" pos:column="27">dataConn<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">fd<pos:position pos:line="9" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">io<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">flag<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="20">Comm<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">::<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">OK<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="32">bodyPipe<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">!=<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">NULL<pos:position pos:line="11" pos:column="48"/></name></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <block pos:line="11" pos:column="50">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">io<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">size<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">&gt;<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr>)<pos:position pos:line="12" pos:column="25"/></condition><then pos:line="12" pos:column="25"> <block pos:line="12" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">statCounter<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">client_http<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">kbytes_in<pos:position pos:line="13" pos:column="46"/></name></name> <operator pos:line="13" pos:column="47">+=<pos:position pos:line="13" pos:column="49"/></operator> <name><name pos:line="13" pos:column="50">io<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">size<pos:position pos:line="13" pos:column="57"/></name></name></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>

            <decl_stmt><decl><type><name pos:line="15" pos:column="13">char<pos:position pos:line="15" pos:column="17"/></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier><specifier pos:line="15" pos:column="19">const<pos:position pos:line="15" pos:column="24"/></specifier></type> <name pos:line="15" pos:column="25">current_buf<pos:position pos:line="15" pos:column="36"/></name> <init pos:line="15" pos:column="37">= <expr><name pos:line="15" pos:column="39">uploadBuf<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">+<pos:position pos:line="15" pos:column="50"/></operator> <name pos:line="15" pos:column="51">uploadAvailSize<pos:position pos:line="15" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="67"/></decl_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name><name pos:line="16" pos:column="17">io<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">.<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">buf<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">!=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">current_buf<pos:position pos:line="16" pos:column="38"/></name></expr>)<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">memmove<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">current_buf<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="38">io<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">buf<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="46">io<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">size<pos:position pos:line="17" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="18" pos:column="13">uploadAvailSize<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">+=<pos:position pos:line="18" pos:column="31"/></operator> <name><name pos:line="18" pos:column="32">io<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">.<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">size<pos:position pos:line="18" pos:column="39"/></name></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">shovelUploadData<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">()<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then> <elseif pos:line="20" pos:column="11">else <if pos:line="20" pos:column="16">if <condition pos:line="20" pos:column="19">(<expr><name><name pos:line="20" pos:column="20">io<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">.<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">size<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33"> <block pos:line="20" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">33<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="24">5<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="27">io<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">conn<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">&lt;&lt;<pos:position pos:line="21" pos:column="43"/></operator> <literal type="string" pos:line="21" pos:column="38">" closed"<pos:position pos:line="21" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">closeDataConnection<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">uploadAvailSize<pos:position pos:line="23" pos:column="32"/></name> <operator pos:line="23" pos:column="33">&lt;=<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="36">0<pos:position pos:line="23" pos:column="37"/></literal></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">finishDechunkingRequest<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><literal type="boolean" pos:line="24" pos:column="41">true<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt></block></then></if>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then> <else pos:line="26" pos:column="7">else <block pos:line="26" pos:column="12">{ <comment type="line" pos:line="26" pos:column="14">// not Comm::Flags::OK or unexpected read</comment>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">33<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">5<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="23">io<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">.<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">conn<pos:position pos:line="27" pos:column="30"/></name></name> <operator pos:line="27" pos:column="31">&lt;&lt;<pos:position pos:line="27" pos:column="39"/></operator> <literal type="string" pos:line="27" pos:column="34">" closed"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">closeDataConnection<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">()<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">finishDechunkingRequest<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><literal type="boolean" pos:line="29" pos:column="33">false<pos:position pos:line="29" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

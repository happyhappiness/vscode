<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1200_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_icap_service_failure_limit<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name><name pos:line="1" pos:column="46">Adaptation<pos:position pos:line="1" pos:column="56"/></name><operator pos:line="1" pos:column="56">::<pos:position pos:line="1" pos:column="58"/></operator><name pos:line="1" pos:column="58">Icap<pos:position pos:line="1" pos:column="62"/></name><operator pos:line="1" pos:column="62">::<pos:position pos:line="1" pos:column="64"/></operator><name pos:line="1" pos:column="64">Config<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">cfg<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">token<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">time_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">d<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">m<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">cfg<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">-&gt;<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="10">service_failure_limit<pos:position pos:line="6" pos:column="31"/></name></name> <operator pos:line="6" pos:column="32">=<pos:position pos:line="6" pos:column="33"/></operator> <call><name pos:line="6" pos:column="34">GetInteger<pos:position pos:line="6" pos:column="44"/></name><argument_list pos:line="6" pos:column="44">()<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">token<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">strtok<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">w_space<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator> <operator pos:line="8" pos:column="41">==<pos:position pos:line="8" pos:column="43"/></operator> <name pos:line="8" pos:column="44">NULL<pos:position pos:line="8" pos:column="48"/></name></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strcmp<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">token<pos:position pos:line="11" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="22">"in"<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call> <operator pos:line="11" pos:column="28">!=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">DBG_CRITICAL<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"expecting 'in' on'"<pos:position pos:line="12" pos:column="53"/></literal>  <operator pos:line="12" pos:column="55">&lt;&lt;<pos:position pos:line="12" pos:column="63"/></operator> <name pos:line="12" pos:column="58">config_input_line<pos:position pos:line="12" pos:column="75"/></name> <operator pos:line="12" pos:column="76">&lt;&lt;<pos:position pos:line="12" pos:column="84"/></operator> <literal type="string" pos:line="12" pos:column="79">"'"<pos:position pos:line="12" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">self_destruct<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">()<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">token<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">strtok<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="31">w_space<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call><operator pos:line="16" pos:column="39">)<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="41">==<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">NULL<pos:position pos:line="16" pos:column="48"/></name></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49"> <block pos:line="16" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">self_destruct<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">()<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">d<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <cast type="static" pos:line="20" pos:column="9">static_cast<argument_list type="generic" pos:line="20" pos:column="20">&lt;<argument><expr><name pos:line="20" pos:column="21">time_t<pos:position pos:line="20" pos:column="27"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="31"/></argument_list> <argument_list pos:line="20" pos:column="29">(<argument><expr><call><name pos:line="20" pos:column="30">xatoi<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">token<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></cast></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">m<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <cast type="static" pos:line="22" pos:column="9">static_cast<argument_list type="generic" pos:line="22" pos:column="20">&lt;<argument><expr><name pos:line="22" pos:column="21">time_t<pos:position pos:line="22" pos:column="27"/></name></expr></argument>&gt;<pos:position pos:line="22" pos:column="31"/></argument_list> <argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></cast></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><literal type="number" pos:line="24" pos:column="9">0<pos:position pos:line="24" pos:column="10"/></literal> <operator pos:line="24" pos:column="11">==<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">d<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">void<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">token<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">strtok<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">NULL<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">w_space<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator> <operator pos:line="26" pos:column="46">==<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">NULL<pos:position pos:line="26" pos:column="53"/></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">3<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">DBG_CRITICAL<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"No time-units on '"<pos:position pos:line="27" pos:column="53"/></literal> <operator pos:line="27" pos:column="54">&lt;&lt;<pos:position pos:line="27" pos:column="62"/></operator> <name pos:line="27" pos:column="57">config_input_line<pos:position pos:line="27" pos:column="74"/></name> <operator pos:line="27" pos:column="75">&lt;&lt;<pos:position pos:line="27" pos:column="83"/></operator> <literal type="string" pos:line="27" pos:column="78">"'"<pos:position pos:line="27" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">self_destruct<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">()<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif> <elseif pos:line="29" pos:column="7">else <if pos:line="29" pos:column="12">if <condition pos:line="29" pos:column="15">(<expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">m<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <call><name pos:line="29" pos:column="21">parseTimeUnits<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">token<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="29" pos:column="43">false<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <literal type="number" pos:line="29" pos:column="54">0<pos:position pos:line="29" pos:column="55"/></literal></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">self_destruct<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">()<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cfg<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">oldest_service_failure<pos:position pos:line="32" pos:column="32"/></name></name> <operator pos:line="32" pos:column="33">=<pos:position pos:line="32" pos:column="34"/></operator> <operator pos:line="32" pos:column="35">(<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">m<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">*<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">d<pos:position pos:line="32" pos:column="41"/></name><operator pos:line="32" pos:column="41">)<pos:position pos:line="32" pos:column="42"/></operator></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

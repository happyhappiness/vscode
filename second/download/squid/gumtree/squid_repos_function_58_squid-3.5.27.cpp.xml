<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_58_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">MemBuf<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">consumeWhitespacePrefix<pos:position pos:line="1" pos:column="37"/></name></name><parameter_list pos:line="1" pos:column="37">()<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">PROF_start<pos:position pos:line="3" pos:column="15"/></name><argument_list pos:line="3" pos:column="15">(<argument><expr><name pos:line="3" pos:column="16">MemBuf_consumeWhitespace<pos:position pos:line="3" pos:column="40"/></name></expr></argument>)<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="42"/></expr_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">contentSize<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">()<pos:position pos:line="4" pos:column="22"/></argument_list></call> <operator pos:line="4" pos:column="23">&gt;<pos:position pos:line="4" pos:column="27"/></operator> <literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <block pos:line="4" pos:column="28">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">end<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">buf<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">+<pos:position pos:line="5" pos:column="32"/></operator> <call><name pos:line="5" pos:column="33">contentSize<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">()<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">p<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name pos:line="6" pos:column="25">buf<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
        <for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init pos:line="7" pos:column="14">;<pos:position pos:line="7" pos:column="15"/></init> <condition><expr><name pos:line="7" pos:column="16">p<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">&lt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">end<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">&amp;&amp;<pos:position pos:line="7" pos:column="32"/></operator> <call><name pos:line="7" pos:column="25">xisspace<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><operator pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">p<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></condition> <incr><expr><operator pos:line="7" pos:column="39">++<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">p<pos:position pos:line="7" pos:column="42"/></name></expr></incr>)<pos:position pos:line="7" pos:column="43"/></control><block type="pseudo"><empty_stmt pos:line="7" pos:column="43">;<pos:position pos:line="7" pos:column="44"/></empty_stmt></block></for>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">p<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">buf<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&gt;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="21">0<pos:position pos:line="8" pos:column="22"/></literal></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="13">consume<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">p<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">buf<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">PROF_stop<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">MemBuf_consumeWhitespace<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

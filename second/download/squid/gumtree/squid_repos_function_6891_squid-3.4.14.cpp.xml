<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6891_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">RFCNB_Pkt<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name pos:line="2" pos:column="1">RFCNB_Alloc_Pkt<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">n<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list> <block pos:line="2" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">RFCNB_Pkt<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">pkt<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">pkt<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator>struct <name pos:line="5" pos:column="24">RFCNB_Pkt<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator> <call><name pos:line="5" pos:column="37">malloc<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">(<argument><expr><sizeof pos:line="5" pos:column="44">sizeof<argument_list pos:line="5" pos:column="50">(<argument><expr pos:line="5" pos:column="51">struct <name pos:line="5" pos:column="58">RFCNB_Pkt<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call><operator pos:line="5" pos:column="69">)<pos:position pos:line="5" pos:column="70"/></operator> <operator pos:line="5" pos:column="71">==<pos:position pos:line="5" pos:column="73"/></operator> <name pos:line="5" pos:column="74">NULL<pos:position pos:line="5" pos:column="78"/></name></expr>)<pos:position pos:line="5" pos:column="79"/></condition><then pos:line="5" pos:column="79"> <block pos:line="5" pos:column="80">{

        <expr_stmt><expr><name pos:line="7" pos:column="9">RFCNB_errno<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">RFCNBE_NoSpace<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">RFCNB_saved_errno<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">errno<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">(<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">)<pos:position pos:line="9" pos:column="22"/></operator></expr>;<pos:position pos:line="9" pos:column="23"/></return>

    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">pkt<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">-&gt;<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="10">next<pos:position pos:line="12" pos:column="14"/></name></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">pkt<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">-&gt;<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="10">len<pos:position pos:line="13" pos:column="13"/></name></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">n<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">n<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>)<pos:position pos:line="15" pos:column="16"/></condition><then pos:line="15" pos:column="16">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">pkt<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">)<pos:position pos:line="16" pos:column="21"/></operator></expr>;<pos:position pos:line="16" pos:column="22"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name><name pos:line="18" pos:column="10">pkt<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">data<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">(<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">char<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">*<pos:position pos:line="18" pos:column="29"/></operator><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">malloc<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">n<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call><operator pos:line="18" pos:column="40">)<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="42">==<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">NULL<pos:position pos:line="18" pos:column="49"/></name></expr>)<pos:position pos:line="18" pos:column="50"/></condition><then pos:line="18" pos:column="50"> <block pos:line="18" pos:column="51">{

        <expr_stmt><expr><name pos:line="20" pos:column="9">RFCNB_errno<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">RFCNBE_NoSpace<pos:position pos:line="20" pos:column="37"/></name></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">RFCNB_saved_errno<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">errno<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">free<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">pkt<pos:position pos:line="22" pos:column="17"/></name></expr></argument>)<pos:position pos:line="22" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator></expr>;<pos:position pos:line="23" pos:column="23"/></return>

    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">pkt<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">)<pos:position pos:line="26" pos:column="17"/></operator></expr>;<pos:position pos:line="26" pos:column="18"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

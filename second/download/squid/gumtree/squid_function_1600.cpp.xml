<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1600.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">UNLINK_BUF_LEN<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">x<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">setbuf<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">stdin<pos:position pos:line="7" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">NULL<pos:position pos:line="7" pos:column="23"/></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">setbuf<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">stdout<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">close<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="number" pos:line="9" pos:column="11">2<pos:position pos:line="9" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">open<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">_PATH_DEVNULL<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">O_RDWR<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call> <operator pos:line="10" pos:column="37">&lt;<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <block pos:line="10" pos:column="42">{
        <empty_stmt pos:line="11" pos:column="9">;<pos:position pos:line="11" pos:column="10"/></empty_stmt> <comment type="line" pos:line="11" pos:column="11">// the irony of having to close(2) earlier is that we cannot report this failure.</comment>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><call><name pos:line="14" pos:column="12">fgets<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">buf<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="23">sizeof<argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">buf<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">stdin<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="43"/></condition> <block pos:line="14" pos:column="44">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">t<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strchr<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">buf<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="30">'\n'<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">t<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="char" pos:line="16" pos:column="18">'\0'<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="17" pos:column="9">x<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">unlink<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">buf<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">x<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&lt;<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="13">printf<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="string" pos:line="19" pos:column="20">"ERR\n"<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt></block></then>
        <else pos:line="20" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">printf<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="string" pos:line="21" pos:column="20">"OK\n"<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

    <return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2021_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">gen_quote_escape<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name><name pos:line="2" pos:column="24">std<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">string<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">var<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name><name pos:line="4" pos:column="12">std<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">string<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">esc<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">esc<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">clear<pos:position pos:line="5" pos:column="14"/></name></name><argument_list pos:line="5" pos:column="14">()<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">int<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <call><name><name pos:line="7" pos:column="25">var<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">length<pos:position pos:line="7" pos:column="35"/></name></name><argument_list pos:line="7" pos:column="35">()<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></condition> <incr><expr><operator pos:line="7" pos:column="39">++<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">i<pos:position pos:line="7" pos:column="42"/></name></expr></incr>)<pos:position pos:line="7" pos:column="43"/></control> <block pos:line="7" pos:column="44">{
        <switch pos:line="8" pos:column="9">switch <condition pos:line="8" pos:column="16">(<expr><name><name pos:line="8" pos:column="17">var<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name></expr>]<pos:position pos:line="8" pos:column="23"/></index></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition> <block pos:line="8" pos:column="25">{
        <case pos:line="9" pos:column="9">case <expr><literal type="char" pos:line="9" pos:column="14">'"'<pos:position pos:line="9" pos:column="17"/></literal></expr>:<pos:position pos:line="9" pos:column="18"/></case>
        <case pos:line="10" pos:column="9">case <expr><literal type="char" pos:line="10" pos:column="14">'\\'<pos:position pos:line="10" pos:column="18"/></literal></expr>:<pos:position pos:line="10" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="11" pos:column="13">esc<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">+=<pos:position pos:line="11" pos:column="19"/></operator> <literal type="char" pos:line="11" pos:column="20">'\\'<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
        <default pos:line="12" pos:column="9">default:<pos:position pos:line="12" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="13" pos:column="13">esc<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">+=<pos:position pos:line="13" pos:column="19"/></operator> <name><name pos:line="13" pos:column="20">var<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">i<pos:position pos:line="13" pos:column="25"/></name></expr>]<pos:position pos:line="13" pos:column="26"/></index></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></switch>
    }<pos:position pos:line="15" pos:column="6"/></block></for>

    <return pos:line="17" pos:column="5">return <expr><call><name><name pos:line="17" pos:column="12">esc<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">c_str<pos:position pos:line="17" pos:column="21"/></name></name><argument_list pos:line="17" pos:column="21">()<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2296_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">httpHdrCcPackInto<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">HttpHdrCc<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">cc<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">Packer<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">p<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">http_hdr_cc_type<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">flag<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">pcount<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">cc<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&amp;&amp;<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="18">p<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">flag<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">CC_PUBLIC<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></init> <condition><expr><name pos:line="8" pos:column="28">flag<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">&lt;<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="35">CC_ENUM_END<pos:position pos:line="8" pos:column="46"/></name></expr>;<pos:position pos:line="8" pos:column="47"/></condition> <incr><expr><operator pos:line="8" pos:column="48">++<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">flag<pos:position pos:line="8" pos:column="54"/></name></expr></incr>)<pos:position pos:line="8" pos:column="55"/></control> <block pos:line="8" pos:column="56">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">EBIT_TEST<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name><name pos:line="9" pos:column="23">cc<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">mask<pos:position pos:line="9" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">flag<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call> <operator pos:line="9" pos:column="39">&amp;&amp;<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="42">flag<pos:position pos:line="9" pos:column="46"/></name> <operator pos:line="9" pos:column="47">!=<pos:position pos:line="9" pos:column="49"/></operator> <name pos:line="9" pos:column="50">CC_OTHER<pos:position pos:line="9" pos:column="58"/></name></expr>)<pos:position pos:line="9" pos:column="59"/></condition><then pos:line="9" pos:column="59"> <block pos:line="9" pos:column="60">{

            <comment type="block" pos:line="11" pos:column="13">/* print option name */</comment>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">packerPrintf<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><ternary><condition><expr><name pos:line="12" pos:column="30">pcount<pos:position pos:line="12" pos:column="36"/></name></expr> ?<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <expr><literal type="string" pos:line="12" pos:column="39">", "<pos:position pos:line="12" pos:column="43"/></literal> <name pos:line="12" pos:column="44">SQUIDSTRINGPH<pos:position pos:line="12" pos:column="57"/></name></expr> <pos:position pos:line="12" pos:column="58"/></then><else pos:line="12" pos:column="58">: <expr><name pos:line="12" pos:column="60">SQUIDSTRINGPH<pos:position pos:line="12" pos:column="73"/></name></expr></else></ternary><operator pos:line="12" pos:column="73">)<pos:position pos:line="12" pos:column="74"/></operator></expr></argument>,
                         <argument><expr><call><name pos:line="13" pos:column="26">SQUIDSTRINGPRINT<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name><name pos:line="13" pos:column="43">CcFieldsInfo<pos:position pos:line="13" pos:column="55"/></name><index pos:line="13" pos:column="55">[<expr><name pos:line="13" pos:column="56">flag<pos:position pos:line="13" pos:column="60"/></name></expr>]<pos:position pos:line="13" pos:column="61"/></index></name><operator pos:line="13" pos:column="61">.<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="62">name<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>

            <comment type="block" pos:line="15" pos:column="13">/* handle options with values */</comment>

            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><name pos:line="17" pos:column="17">flag<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">==<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">CC_MAX_AGE<pos:position pos:line="17" pos:column="35"/></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="17">packerPrintf<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">p<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"=%d"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="40">(<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">int<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">cc<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">max_age<pos:position pos:line="18" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt></block></then></if>

            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">flag<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">CC_S_MAXAGE<pos:position pos:line="20" pos:column="36"/></name></expr>)<pos:position pos:line="20" pos:column="37"/></condition><then pos:line="20" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">packerPrintf<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">p<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"=%d"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="40">(<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">int<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">)<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="46">cc<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">s_maxage<pos:position pos:line="21" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt></block></then></if>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">flag<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">CC_MAX_STALE<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">&amp;&amp;<pos:position pos:line="23" pos:column="48"/></operator> <name><name pos:line="23" pos:column="41">cc<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">max_stale<pos:position pos:line="23" pos:column="54"/></name></name> <operator pos:line="23" pos:column="55">&gt;=<pos:position pos:line="23" pos:column="60"/></operator> <literal type="number" pos:line="23" pos:column="58">0<pos:position pos:line="23" pos:column="59"/></literal></expr>)<pos:position pos:line="23" pos:column="60"/></condition><then pos:line="23" pos:column="60">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">packerPrintf<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">p<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"=%d"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="40">(<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">int<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator> <name><name pos:line="24" pos:column="46">cc<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">max_stale<pos:position pos:line="24" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt></block></then></if>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">flag<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">==<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">CC_MIN_FRESH<pos:position pos:line="26" pos:column="37"/></name></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">packerPrintf<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">p<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"=%d"<pos:position pos:line="27" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="40">(<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">int<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">)<pos:position pos:line="27" pos:column="45"/></operator> <name><name pos:line="27" pos:column="46">cc<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">-&gt;<pos:position pos:line="27" pos:column="53"/></operator><name pos:line="27" pos:column="50">min_fresh<pos:position pos:line="27" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="29" pos:column="13">pcount<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">++<pos:position pos:line="29" pos:column="21"/></operator></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></for>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name><name pos:line="33" pos:column="9">cc<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">other<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">.<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">size<pos:position pos:line="33" pos:column="23"/></name></name><argument_list pos:line="33" pos:column="23">()<pos:position pos:line="33" pos:column="25"/></argument_list></call> <operator pos:line="33" pos:column="26">!=<pos:position pos:line="33" pos:column="28"/></operator> <literal type="number" pos:line="33" pos:column="29">0<pos:position pos:line="33" pos:column="30"/></literal></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="9">packerPrintf<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name pos:line="34" pos:column="22">p<pos:position pos:line="34" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><ternary><condition><expr><name pos:line="34" pos:column="26">pcount<pos:position pos:line="34" pos:column="32"/></name></expr> ?<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <expr><literal type="string" pos:line="34" pos:column="35">", "<pos:position pos:line="34" pos:column="39"/></literal> <name pos:line="34" pos:column="40">SQUIDSTRINGPH<pos:position pos:line="34" pos:column="53"/></name></expr> <pos:position pos:line="34" pos:column="54"/></then><else pos:line="34" pos:column="54">: <expr><name pos:line="34" pos:column="56">SQUIDSTRINGPH<pos:position pos:line="34" pos:column="69"/></name></expr></else></ternary><operator pos:line="34" pos:column="69">)<pos:position pos:line="34" pos:column="70"/></operator></expr></argument>,
                     <argument><expr><call><name pos:line="35" pos:column="22">SQUIDSTRINGPRINT<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name><name pos:line="35" pos:column="39">cc<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">other<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

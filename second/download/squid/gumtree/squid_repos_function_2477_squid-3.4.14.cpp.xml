<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2477_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">ipcacheAddEntryFromHosts<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">name<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">ipaddr<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ipcache_entry<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">i<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Ip<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">::<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">Address<pos:position pos:line="6" pos:column="16"/></name></name></type> <name pos:line="6" pos:column="17">ip<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">ip<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">ipaddr<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strchr<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">ipaddr<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="28">':'<pos:position pos:line="9" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call> <operator pos:line="9" pos:column="33">&amp;&amp;<pos:position pos:line="9" pos:column="43"/></operator> <call><name pos:line="9" pos:column="36">strspn<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">ipaddr<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="51">"0123456789abcdefABCDEF:"<pos:position pos:line="9" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call> <operator pos:line="9" pos:column="78">==<pos:position pos:line="9" pos:column="80"/></operator> <call><name pos:line="9" pos:column="81">strlen<pos:position pos:line="9" pos:column="87"/></name><argument_list pos:line="9" pos:column="87">(<argument><expr><name pos:line="9" pos:column="88">ipaddr<pos:position pos:line="9" pos:column="94"/></name></expr></argument>)<pos:position pos:line="9" pos:column="95"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="96"/></condition><then pos:line="9" pos:column="96"> <block pos:line="9" pos:column="97">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debugs<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="number" pos:line="10" pos:column="20">14<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="24">3<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="27">"ipcacheAddEntryFromHosts: Skipping IPv6 address '"<pos:position pos:line="10" pos:column="78"/></literal> <operator pos:line="10" pos:column="79">&lt;&lt;<pos:position pos:line="10" pos:column="87"/></operator> <name pos:line="10" pos:column="82">ipaddr<pos:position pos:line="10" pos:column="88"/></name> <operator pos:line="10" pos:column="89">&lt;&lt;<pos:position pos:line="10" pos:column="97"/></operator> <literal type="string" pos:line="10" pos:column="92">"'"<pos:position pos:line="10" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="97"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then> <else pos:line="11" pos:column="11">else <block pos:line="11" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">14<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="24">DBG_IMPORTANT<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"ipcacheAddEntryFromHosts: Bad IP address '"<pos:position pos:line="12" pos:column="83"/></literal> <operator pos:line="12" pos:column="84">&lt;&lt;<pos:position pos:line="12" pos:column="92"/></operator> <name pos:line="12" pos:column="87">ipaddr<pos:position pos:line="12" pos:column="93"/></name> <operator pos:line="12" pos:column="94">&lt;&lt;<pos:position pos:line="12" pos:column="102"/></operator> <literal type="string" pos:line="12" pos:column="97">"'"<pos:position pos:line="12" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="102"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></else></if>

        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">i<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">ipcache_get<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">name<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call><operator pos:line="18" pos:column="31">)<pos:position pos:line="18" pos:column="32"/></operator></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33"> <block pos:line="18" pos:column="34">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><literal type="number" pos:line="19" pos:column="13">1<pos:position pos:line="19" pos:column="14"/></literal> <operator pos:line="19" pos:column="15">==<pos:position pos:line="19" pos:column="17"/></operator> <name><name pos:line="19" pos:column="18">i<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">flags<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">fromhosts<pos:position pos:line="19" pos:column="36"/></name></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">ipcacheUnlockEntry<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">i<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><name><name pos:line="21" pos:column="20">i<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">locks<pos:position pos:line="21" pos:column="28"/></name></name> <operator pos:line="21" pos:column="29">&gt;<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="31">0<pos:position pos:line="21" pos:column="32"/></literal></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33"> <block pos:line="21" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">14<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">DBG_IMPORTANT<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"ipcacheAddEntryFromHosts: can't add static entry for locked name '"<pos:position pos:line="22" pos:column="107"/></literal> <operator pos:line="22" pos:column="108">&lt;&lt;<pos:position pos:line="22" pos:column="116"/></operator> <name pos:line="22" pos:column="111">name<pos:position pos:line="22" pos:column="115"/></name> <operator pos:line="22" pos:column="116">&lt;&lt;<pos:position pos:line="22" pos:column="124"/></operator> <literal type="string" pos:line="22" pos:column="119">"'"<pos:position pos:line="22" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="124"/></expr_stmt>
            <return pos:line="23" pos:column="13">return <expr><literal type="number" pos:line="23" pos:column="20">1<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">ipcacheRelease<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">i<pos:position pos:line="25" pos:column="29"/></name></expr></argument>)<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></else></if>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">i<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <call><name pos:line="29" pos:column="9">ipcacheCreateEntry<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">name<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">i<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">addrs<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">.<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">count<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="22">1<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">i<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">addrs<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">cur<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <literal type="number" pos:line="31" pos:column="20">0<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">i<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">addrs<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">.<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">badcount<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">i<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">addrs<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">.<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">in_addrs<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <cast type="static" pos:line="34" pos:column="25">static_cast<argument_list type="generic" pos:line="34" pos:column="36">&lt;<argument><expr><name><name pos:line="34" pos:column="37">Ip<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">::<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="41">Address<pos:position pos:line="34" pos:column="48"/></name></name> <operator pos:line="34" pos:column="49">*<pos:position pos:line="34" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="34" pos:column="54"/></argument_list><argument_list pos:line="34" pos:column="51">(<argument><expr><call><name pos:line="34" pos:column="52">xcalloc<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><literal type="number" pos:line="34" pos:column="60">1<pos:position pos:line="34" pos:column="61"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="63">sizeof<argument_list pos:line="34" pos:column="69">(<argument><expr><name><name pos:line="34" pos:column="70">Ip<pos:position pos:line="34" pos:column="72"/></name><operator pos:line="34" pos:column="72">::<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="74">Address<pos:position pos:line="34" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="84"/></argument_list></cast></expr>;<pos:position pos:line="34" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">i<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">addrs<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">.<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">bad_mask<pos:position pos:line="35" pos:column="22"/></name></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">unsigned<pos:position pos:line="35" pos:column="34"/></name> <name pos:line="35" pos:column="35">char<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">*<pos:position pos:line="35" pos:column="41"/></operator><operator pos:line="35" pos:column="41">)<pos:position pos:line="35" pos:column="42"/></operator><call><name pos:line="35" pos:column="42">xcalloc<pos:position pos:line="35" pos:column="49"/></name><argument_list pos:line="35" pos:column="49">(<argument><expr><literal type="number" pos:line="35" pos:column="50">1<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>, <argument><expr pos:line="35" pos:column="53">sizeof<operator pos:line="35" pos:column="59">(<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="60">unsigned<pos:position pos:line="35" pos:column="68"/></name> <name pos:line="35" pos:column="69">char<pos:position pos:line="35" pos:column="73"/></name><operator pos:line="35" pos:column="73">)<pos:position pos:line="35" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">i<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">addrs<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">.<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">in_addrs<pos:position pos:line="36" pos:column="22"/></name><index pos:line="36" pos:column="22">[<expr><literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr>]<pos:position pos:line="36" pos:column="25"/></index></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">ip<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">i<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">addrs<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">.<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">bad_mask<pos:position pos:line="37" pos:column="22"/></name><index pos:line="37" pos:column="22">[<expr><literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr>]<pos:position pos:line="37" pos:column="25"/></index></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">FALSE<pos:position pos:line="37" pos:column="33"/></name></expr>;<pos:position pos:line="37" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">i<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">flags<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">fromhosts<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <literal type="boolean" pos:line="38" pos:column="26">true<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ipcacheAddEntry<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name></expr></argument>)<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">ipcacheLockEntry<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><name pos:line="40" pos:column="22">i<pos:position pos:line="40" pos:column="23"/></name></expr></argument>)<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><literal type="number" pos:line="41" pos:column="12">0<pos:position pos:line="41" pos:column="13"/></literal></expr>;<pos:position pos:line="41" pos:column="14"/></return>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

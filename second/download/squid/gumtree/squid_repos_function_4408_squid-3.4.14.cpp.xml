<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4408_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name><name pos:line="1" pos:column="8">Ssl<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">CertificateDb<pos:position pos:line="1" pos:column="26"/></name><operator pos:line="1" pos:column="26">::<pos:position pos:line="1" pos:column="28"/></operator><name pos:line="1" pos:column="28">rebuildSize<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">()<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">size_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">dbSize<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="4" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">int<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name pos:line="5" pos:column="21">i<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;<pos:position pos:line="5" pos:column="27"/></operator> <call><name pos:line="5" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="5" pos:column="47"/></name><argument_list pos:line="5" pos:column="47">(<argument><expr><call><name><name pos:line="5" pos:column="48">db<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">.<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">get<pos:position pos:line="5" pos:column="54"/></name></name><argument_list pos:line="5" pos:column="54">()<pos:position pos:line="5" pos:column="56"/></argument_list></call><operator pos:line="5" pos:column="56">-&gt;<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="58">data<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></condition> <incr><expr><operator pos:line="5" pos:column="65">++<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="67">i<pos:position pos:line="5" pos:column="68"/></name></expr></incr>)<pos:position pos:line="5" pos:column="69"/></control> <block pos:line="5" pos:column="70">{
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="6" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier><modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type> <name pos:line="7" pos:column="23">current_row<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><operator pos:line="7" pos:column="37">(<pos:position pos:line="7" pos:column="38"/></operator><operator pos:line="7" pos:column="38">(<pos:position pos:line="7" pos:column="39"/></operator><specifier pos:line="7" pos:column="39">const<pos:position pos:line="7" pos:column="44"/></specifier> <name pos:line="7" pos:column="45">char<pos:position pos:line="7" pos:column="49"/></name> <operator pos:line="7" pos:column="50">*<pos:position pos:line="7" pos:column="51"/></operator><operator pos:line="7" pos:column="51">*<pos:position pos:line="7" pos:column="52"/></operator><operator pos:line="7" pos:column="52">)<pos:position pos:line="7" pos:column="53"/></operator><call><name pos:line="7" pos:column="53">sk_value<pos:position pos:line="7" pos:column="61"/></name><argument_list pos:line="7" pos:column="61">(<argument><expr><call><name pos:line="7" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="7" pos:column="78"/></name><argument_list pos:line="7" pos:column="78">(<argument><expr><name pos:line="7" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="7" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="96">db<pos:position pos:line="7" pos:column="98"/></name><operator pos:line="7" pos:column="98">.<pos:position pos:line="7" pos:column="99"/></operator><name pos:line="7" pos:column="99">get<pos:position pos:line="7" pos:column="102"/></name></name><argument_list pos:line="7" pos:column="102">()<pos:position pos:line="7" pos:column="104"/></argument_list></call><operator pos:line="7" pos:column="104">-&gt;<pos:position pos:line="7" pos:column="109"/></operator><name pos:line="7" pos:column="106">data<pos:position pos:line="7" pos:column="110"/></name></expr></argument>)<pos:position pos:line="7" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="113">i<pos:position pos:line="7" pos:column="114"/></name></expr></argument>)<pos:position pos:line="7" pos:column="115"/></argument_list></call><operator pos:line="7" pos:column="115">)<pos:position pos:line="7" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="117"/></decl_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type> <name pos:line="9" pos:column="23">current_row<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><operator pos:line="9" pos:column="37">(<pos:position pos:line="9" pos:column="38"/></operator><operator pos:line="9" pos:column="38">(<pos:position pos:line="9" pos:column="39"/></operator><specifier pos:line="9" pos:column="39">const<pos:position pos:line="9" pos:column="44"/></specifier> <name pos:line="9" pos:column="45">char<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator><operator pos:line="9" pos:column="51">*<pos:position pos:line="9" pos:column="52"/></operator><operator pos:line="9" pos:column="52">)<pos:position pos:line="9" pos:column="53"/></operator><call><name pos:line="9" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="9" pos:column="77"/></name><argument_list pos:line="9" pos:column="77">(<argument><expr><call><name><name pos:line="9" pos:column="78">db<pos:position pos:line="9" pos:column="80"/></name><operator pos:line="9" pos:column="80">.<pos:position pos:line="9" pos:column="81"/></operator><name pos:line="9" pos:column="81">get<pos:position pos:line="9" pos:column="84"/></name></name><argument_list pos:line="9" pos:column="84">()<pos:position pos:line="9" pos:column="86"/></argument_list></call><operator pos:line="9" pos:column="86">-&gt;<pos:position pos:line="9" pos:column="91"/></operator><name pos:line="9" pos:column="88">data<pos:position pos:line="9" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="94">i<pos:position pos:line="9" pos:column="95"/></name></expr></argument>)<pos:position pos:line="9" pos:column="96"/></argument_list></call><operator pos:line="9" pos:column="96">)<pos:position pos:line="9" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="9" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><decl><type><name pos:line="12" pos:column="10">int<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">i<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <call><name pos:line="12" pos:column="25">sk_num<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><call><name><name pos:line="12" pos:column="32">db<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">get<pos:position pos:line="12" pos:column="38"/></name></name><argument_list pos:line="12" pos:column="38">()<pos:position pos:line="12" pos:column="40"/></argument_list></call><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">data<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="48"/></condition> <incr><expr><operator pos:line="12" pos:column="49">++<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">i<pos:position pos:line="12" pos:column="52"/></name></expr></incr>)<pos:position pos:line="12" pos:column="53"/></control> <block pos:line="12" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">char<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier><modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type> <name pos:line="13" pos:column="23">current_row<pos:position pos:line="13" pos:column="34"/></name> <init pos:line="13" pos:column="35">= <expr><operator pos:line="13" pos:column="37">(<pos:position pos:line="13" pos:column="38"/></operator><operator pos:line="13" pos:column="38">(<pos:position pos:line="13" pos:column="39"/></operator><specifier pos:line="13" pos:column="39">const<pos:position pos:line="13" pos:column="44"/></specifier> <name pos:line="13" pos:column="45">char<pos:position pos:line="13" pos:column="49"/></name> <operator pos:line="13" pos:column="50">*<pos:position pos:line="13" pos:column="51"/></operator><operator pos:line="13" pos:column="51">*<pos:position pos:line="13" pos:column="52"/></operator><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator><call><name pos:line="13" pos:column="53">sk_value<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><call><name><name pos:line="13" pos:column="62">db<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">.<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="65">get<pos:position pos:line="13" pos:column="68"/></name></name><argument_list pos:line="13" pos:column="68">()<pos:position pos:line="13" pos:column="70"/></argument_list></call><operator pos:line="13" pos:column="70">-&gt;<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="72">data<pos:position pos:line="13" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="78">i<pos:position pos:line="13" pos:column="79"/></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call><operator pos:line="13" pos:column="80">)<pos:position pos:line="13" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="13" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name><name pos:line="15" pos:column="15">std<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">::<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">string<pos:position pos:line="15" pos:column="26"/></name></name></type> <name pos:line="15" pos:column="27">filename<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">cert_full<pos:position pos:line="15" pos:column="45"/></name> <operator pos:line="15" pos:column="46">+<pos:position pos:line="15" pos:column="47"/></operator> <literal type="string" pos:line="15" pos:column="48">"/"<pos:position pos:line="15" pos:column="51"/></literal> <operator pos:line="15" pos:column="52">+<pos:position pos:line="15" pos:column="53"/></operator> <name><name pos:line="15" pos:column="54">current_row<pos:position pos:line="15" pos:column="65"/></name><index pos:line="15" pos:column="65">[<expr><name pos:line="15" pos:column="66">cnlSerial<pos:position pos:line="15" pos:column="75"/></name></expr>]<pos:position pos:line="15" pos:column="76"/></index></name> <operator pos:line="15" pos:column="77">+<pos:position pos:line="15" pos:column="78"/></operator> <literal type="string" pos:line="15" pos:column="79">".pem"<pos:position pos:line="15" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></decl>;<pos:position pos:line="15" pos:column="87"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">size_t<pos:position pos:line="16" pos:column="21"/></name></type> <name pos:line="16" pos:column="22">fSize<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><call><name pos:line="16" pos:column="30">getFileSize<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">filename<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">dbSize<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">+=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">fSize<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>        
    }<pos:position pos:line="18" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">writeSize<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">dbSize<pos:position pos:line="19" pos:column="21"/></name></expr></argument>)<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">dbSize<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></for>

<function><type><name pos:line="23" pos:column="1">bool<pos:position pos:line="23" pos:column="5"/></name></type> <name><name pos:line="23" pos:column="6">Ssl<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">::<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">CertificateDb<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">::<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">pure_find<pos:position pos:line="23" pos:column="35"/></name></name><parameter_list pos:line="23" pos:column="35">(<parameter><decl><type><name><name pos:line="23" pos:column="36">std<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">::<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">string<pos:position pos:line="23" pos:column="47"/></name></name> <specifier pos:line="23" pos:column="48">const<pos:position pos:line="23" pos:column="53"/></specifier> <modifier pos:line="23" pos:column="54">&amp;<pos:position pos:line="23" pos:column="59"/></modifier></type> <name pos:line="23" pos:column="56">host_name<pos:position pos:line="23" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="23" pos:column="67">Ssl<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">::<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="72">X509_Pointer<pos:position pos:line="23" pos:column="84"/></name></name> <modifier pos:line="23" pos:column="85">&amp;<pos:position pos:line="23" pos:column="90"/></modifier></type> <name pos:line="23" pos:column="87">cert<pos:position pos:line="23" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="23" pos:column="93">Ssl<pos:position pos:line="23" pos:column="96"/></name><operator pos:line="23" pos:column="96">::<pos:position pos:line="23" pos:column="98"/></operator><name pos:line="23" pos:column="98">EVP_PKEY_Pointer<pos:position pos:line="23" pos:column="114"/></name></name> <modifier pos:line="23" pos:column="115">&amp;<pos:position pos:line="23" pos:column="120"/></modifier></type> <name pos:line="23" pos:column="117">pkey<pos:position pos:line="23" pos:column="121"/></name></decl></parameter>)<pos:position pos:line="23" pos:column="122"/></parameter_list> <block pos:line="23" pos:column="123">{
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">db<pos:position pos:line="24" pos:column="12"/></name></expr>)<pos:position pos:line="24" pos:column="13"/></condition><then pos:line="24" pos:column="13">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="boolean" pos:line="25" pos:column="16">false<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">Row<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">row<pos:position pos:line="27" pos:column="12"/></name></decl>;<pos:position pos:line="27" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">row<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">setValue<pos:position pos:line="28" pos:column="17"/></name></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name pos:line="28" pos:column="18">cnlName<pos:position pos:line="28" pos:column="25"/></name></expr></argument>, <argument><expr><call><name><name pos:line="28" pos:column="27">host_name<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">c_str<pos:position pos:line="28" pos:column="42"/></name></name><argument_list pos:line="28" pos:column="42">()<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name> <modifier pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></modifier><modifier pos:line="30" pos:column="11">*<pos:position pos:line="30" pos:column="12"/></modifier></type><name pos:line="30" pos:column="12">rrow<pos:position pos:line="30" pos:column="16"/></name> <init pos:line="30" pos:column="17">= <expr><call><name pos:line="30" pos:column="19">TXT_DB_get_by_index<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><call><name><name pos:line="30" pos:column="39">db<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">get<pos:position pos:line="30" pos:column="45"/></name></name><argument_list pos:line="30" pos:column="45">()<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="49">cnlName<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><call><name><name pos:line="30" pos:column="58">row<pos:position pos:line="30" pos:column="61"/></name><operator pos:line="30" pos:column="61">.<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="62">getRow<pos:position pos:line="30" pos:column="68"/></name></name><argument_list pos:line="30" pos:column="68">()<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="72"/></decl_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">rrow<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">==<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">NULL<pos:position pos:line="31" pos:column="21"/></name></expr>)<pos:position pos:line="31" pos:column="22"/></condition><then pos:line="31" pos:column="22">
        <block type="pseudo"><return pos:line="32" pos:column="9">return <expr><literal type="boolean" pos:line="32" pos:column="16">false<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></return></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><call><name pos:line="34" pos:column="10">sslDateIsInTheFuture<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name><name pos:line="34" pos:column="31">rrow<pos:position pos:line="34" pos:column="35"/></name><index pos:line="34" pos:column="35">[<expr><name pos:line="34" pos:column="36">cnlExp_date<pos:position pos:line="34" pos:column="47"/></name></expr>]<pos:position pos:line="34" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><literal type="boolean" pos:line="35" pos:column="16">false<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="37" pos:column="5">// read cert and pkey from file.</comment>
    <decl_stmt><decl><type><name><name pos:line="38" pos:column="5">std<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">::<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">string<pos:position pos:line="38" pos:column="16"/></name></name></type> <name pos:line="38" pos:column="17">filename<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><name pos:line="38" pos:column="26">cert_full<pos:position pos:line="38" pos:column="35"/></name> <operator pos:line="38" pos:column="36">+<pos:position pos:line="38" pos:column="37"/></operator> <literal type="string" pos:line="38" pos:column="38">"/"<pos:position pos:line="38" pos:column="41"/></literal> <operator pos:line="38" pos:column="42">+<pos:position pos:line="38" pos:column="43"/></operator> <name><name pos:line="38" pos:column="44">rrow<pos:position pos:line="38" pos:column="48"/></name><index pos:line="38" pos:column="48">[<expr><name pos:line="38" pos:column="49">cnlSerial<pos:position pos:line="38" pos:column="58"/></name></expr>]<pos:position pos:line="38" pos:column="59"/></index></name> <operator pos:line="38" pos:column="60">+<pos:position pos:line="38" pos:column="61"/></operator> <literal type="string" pos:line="38" pos:column="62">".pem"<pos:position pos:line="38" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></decl>;<pos:position pos:line="38" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">readCertAndPrivateKeyFromFiles<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">cert<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="42">pkey<pos:position pos:line="39" pos:column="46"/></name></expr></argument>, <argument><expr><call><name><name pos:line="39" pos:column="48">filename<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">.<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="57">c_str<pos:position pos:line="39" pos:column="62"/></name></name><argument_list pos:line="39" pos:column="62">()<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="66">NULL<pos:position pos:line="39" pos:column="70"/></name></expr></argument>)<pos:position pos:line="39" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="72"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">cert<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">||<pos:position pos:line="40" pos:column="17"/></operator> <operator pos:line="40" pos:column="18">!<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">pkey<pos:position pos:line="40" pos:column="23"/></name></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24">
        <block type="pseudo"><return pos:line="41" pos:column="9">return <expr><literal type="boolean" pos:line="41" pos:column="16">false<pos:position pos:line="41" pos:column="21"/></literal></expr>;<pos:position pos:line="41" pos:column="22"/></return></block></then></if>
    <return pos:line="42" pos:column="5">return <expr><literal type="boolean" pos:line="42" pos:column="12">true<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function>

<function><type><name pos:line="45" pos:column="1">size_t<pos:position pos:line="45" pos:column="7"/></name></type> <name><name pos:line="45" pos:column="8">Ssl<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">::<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">CertificateDb<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">::<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">size<pos:position pos:line="45" pos:column="32"/></name></name><parameter_list pos:line="45" pos:column="32">()<pos:position pos:line="45" pos:column="34"/></parameter_list> <block pos:line="45" pos:column="35">{
    <return pos:line="46" pos:column="5">return <expr><call><name pos:line="46" pos:column="12">readSize<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">()<pos:position pos:line="46" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="23"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function>

<function><type><name pos:line="49" pos:column="1">void<pos:position pos:line="49" pos:column="5"/></name></type> <name><name pos:line="49" pos:column="6">Ssl<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">::<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">CertificateDb<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">::<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="26">addSize<pos:position pos:line="49" pos:column="33"/></name></name><parameter_list pos:line="49" pos:column="33">(<parameter><decl><type><name><name pos:line="49" pos:column="34">std<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">::<pos:position pos:line="49" pos:column="39"/></operator><name pos:line="49" pos:column="39">string<pos:position pos:line="49" pos:column="45"/></name></name> <specifier pos:line="49" pos:column="46">const<pos:position pos:line="49" pos:column="51"/></specifier> <modifier pos:line="49" pos:column="52">&amp;<pos:position pos:line="49" pos:column="57"/></modifier></type> <name pos:line="49" pos:column="54">filename<pos:position pos:line="49" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="49" pos:column="63"/></parameter_list> <block pos:line="49" pos:column="64">{
    <comment type="line" pos:line="50" pos:column="5">// readSize will rebuild 'size' file if missing or it is corrupted</comment>
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">size_t<pos:position pos:line="51" pos:column="11"/></name></type> <name pos:line="51" pos:column="12">dbSize<pos:position pos:line="51" pos:column="18"/></name> <init pos:line="51" pos:column="19">= <expr><call><name pos:line="51" pos:column="21">readSize<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">()<pos:position pos:line="51" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">dbSize<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">+=<pos:position pos:line="52" pos:column="14"/></operator> <call><name pos:line="52" pos:column="15">getFileSize<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">filename<pos:position pos:line="52" pos:column="35"/></name></expr></argument>)<pos:position pos:line="52" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">writeSize<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">dbSize<pos:position pos:line="53" pos:column="21"/></name></expr></argument>)<pos:position pos:line="53" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
}<pos:position pos:line="54" pos:column="2"/></block></function>

<function><type><name pos:line="56" pos:column="1">void<pos:position pos:line="56" pos:column="5"/></name></type> <name><name pos:line="56" pos:column="6">Ssl<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">::<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">CertificateDb<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">::<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">subSize<pos:position pos:line="56" pos:column="33"/></name></name><parameter_list pos:line="56" pos:column="33">(<parameter><decl><type><name><name pos:line="56" pos:column="34">std<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">::<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">string<pos:position pos:line="56" pos:column="45"/></name></name> <specifier pos:line="56" pos:column="46">const<pos:position pos:line="56" pos:column="51"/></specifier> <modifier pos:line="56" pos:column="52">&amp;<pos:position pos:line="56" pos:column="57"/></modifier></type> <name pos:line="56" pos:column="54">filename<pos:position pos:line="56" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="56" pos:column="63"/></parameter_list> <block pos:line="56" pos:column="64">{
    <comment type="line" pos:line="57" pos:column="5">// readSize will rebuild 'size' file if missing or it is corrupted</comment>
    <decl_stmt><decl><type><name pos:line="58" pos:column="5">size_t<pos:position pos:line="58" pos:column="11"/></name></type> <name pos:line="58" pos:column="12">dbSize<pos:position pos:line="58" pos:column="18"/></name> <init pos:line="58" pos:column="19">= <expr><call><name pos:line="58" pos:column="21">readSize<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">()<pos:position pos:line="58" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><name pos:line="59" pos:column="5">dbSize<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">-=<pos:position pos:line="59" pos:column="14"/></operator> <call><name pos:line="59" pos:column="15">getFileSize<pos:position pos:line="59" pos:column="26"/></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">filename<pos:position pos:line="59" pos:column="35"/></name></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">writeSize<pos:position pos:line="60" pos:column="14"/></name><argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">dbSize<pos:position pos:line="60" pos:column="21"/></name></expr></argument>)<pos:position pos:line="60" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>
}<pos:position pos:line="61" pos:column="2"/></block></function>

<function><type><name pos:line="63" pos:column="1">size_t<pos:position pos:line="63" pos:column="7"/></name></type> <name><name pos:line="63" pos:column="8">Ssl<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">::<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">CertificateDb<pos:position pos:line="63" pos:column="26"/></name><operator pos:line="63" pos:column="26">::<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">readSize<pos:position pos:line="63" pos:column="36"/></name></name><parameter_list pos:line="63" pos:column="36">()<pos:position pos:line="63" pos:column="38"/></parameter_list> <block pos:line="63" pos:column="39">{
    <decl_stmt><decl><type><name><name pos:line="64" pos:column="5">std<pos:position pos:line="64" pos:column="8"/></name><operator pos:line="64" pos:column="8">::<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">ifstream<pos:position pos:line="64" pos:column="18"/></name></name></type> <name pos:line="64" pos:column="19">ifstr<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><call><name><name pos:line="64" pos:column="25">size_full<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">.<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="35">c_str<pos:position pos:line="64" pos:column="40"/></name></name><argument_list pos:line="64" pos:column="40">()<pos:position pos:line="64" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="43"/></argument_list></decl>;<pos:position pos:line="64" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">size_t<pos:position pos:line="65" pos:column="11"/></name></type> <name pos:line="65" pos:column="12">db_size<pos:position pos:line="65" pos:column="19"/></name> <init pos:line="65" pos:column="20">= <expr><literal type="number" pos:line="65" pos:column="22">0<pos:position pos:line="65" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="65" pos:column="24"/></decl_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">ifstr<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">||<pos:position pos:line="66" pos:column="18"/></operator> <operator pos:line="66" pos:column="19">!<pos:position pos:line="66" pos:column="20"/></operator><operator pos:line="66" pos:column="20">(<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">ifstr<pos:position pos:line="66" pos:column="26"/></name> <operator pos:line="66" pos:column="27">&gt;&gt;<pos:position pos:line="66" pos:column="32"/></operator> <name pos:line="66" pos:column="30">db_size<pos:position pos:line="66" pos:column="37"/></name><operator pos:line="66" pos:column="37">)<pos:position pos:line="66" pos:column="38"/></operator></expr>)<pos:position pos:line="66" pos:column="39"/></condition><then pos:line="66" pos:column="39">
        <block type="pseudo"><return pos:line="67" pos:column="9">return <expr><call><name pos:line="67" pos:column="16">rebuildSize<pos:position pos:line="67" pos:column="27"/></name><argument_list pos:line="67" pos:column="27">()<pos:position pos:line="67" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="30"/></return></block></then></if>
    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">db_size<pos:position pos:line="68" pos:column="19"/></name></expr>;<pos:position pos:line="68" pos:column="20"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function>

<function><type><name pos:line="71" pos:column="1">void<pos:position pos:line="71" pos:column="5"/></name></type> <name><name pos:line="71" pos:column="6">Ssl<pos:position pos:line="71" pos:column="9"/></name><operator pos:line="71" pos:column="9">::<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="11">CertificateDb<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">::<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="26">writeSize<pos:position pos:line="71" pos:column="35"/></name></name><parameter_list pos:line="71" pos:column="35">(<parameter><decl><type><name pos:line="71" pos:column="36">size_t<pos:position pos:line="71" pos:column="42"/></name></type> <name pos:line="71" pos:column="43">db_size<pos:position pos:line="71" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="71" pos:column="51"/></parameter_list> <block pos:line="71" pos:column="52">{
    <decl_stmt><decl><type><name><name pos:line="72" pos:column="5">std<pos:position pos:line="72" pos:column="8"/></name><operator pos:line="72" pos:column="8">::<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">ofstream<pos:position pos:line="72" pos:column="18"/></name></name></type> <name pos:line="72" pos:column="19">ofstr<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><call><name><name pos:line="72" pos:column="25">size_full<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">.<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">c_str<pos:position pos:line="72" pos:column="40"/></name></name><argument_list pos:line="72" pos:column="40">()<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="43"/></argument_list></decl>;<pos:position pos:line="72" pos:column="44"/></decl_stmt>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">!<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">ofstr<pos:position pos:line="73" pos:column="15"/></name></expr>)<pos:position pos:line="73" pos:column="16"/></condition><then pos:line="73" pos:column="16">
        <block type="pseudo"><throw pos:line="74" pos:column="9">throw <expr><call><name><name pos:line="74" pos:column="15">std<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">::<pos:position pos:line="74" pos:column="20"/></operator><name pos:line="74" pos:column="20">runtime_error<pos:position pos:line="74" pos:column="33"/></name></name><argument_list pos:line="74" pos:column="33">(<argument><expr><literal type="string" pos:line="74" pos:column="34">"cannot write \""<pos:position pos:line="74" pos:column="51"/></literal> <operator pos:line="74" pos:column="52">+<pos:position pos:line="74" pos:column="53"/></operator> <name pos:line="74" pos:column="54">size_full<pos:position pos:line="74" pos:column="63"/></name> <operator pos:line="74" pos:column="64">+<pos:position pos:line="74" pos:column="65"/></operator> <literal type="string" pos:line="74" pos:column="66">"\" file"<pos:position pos:line="74" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="77"/></throw></block></then></if>
    <expr_stmt><expr><name pos:line="75" pos:column="5">ofstr<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">&lt;&lt;<pos:position pos:line="75" pos:column="19"/></operator> <name pos:line="75" pos:column="14">db_size<pos:position pos:line="75" pos:column="21"/></name></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>
}<pos:position pos:line="76" pos:column="2"/></block></function>

<function><type><name pos:line="78" pos:column="1">size_t<pos:position pos:line="78" pos:column="7"/></name></type> <name><name pos:line="78" pos:column="8">Ssl<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">::<pos:position pos:line="78" pos:column="13"/></operator><name pos:line="78" pos:column="13">CertificateDb<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">::<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="28">getFileSize<pos:position pos:line="78" pos:column="39"/></name></name><parameter_list pos:line="78" pos:column="39">(<parameter><decl><type><name><name pos:line="78" pos:column="40">std<pos:position pos:line="78" pos:column="43"/></name><operator pos:line="78" pos:column="43">::<pos:position pos:line="78" pos:column="45"/></operator><name pos:line="78" pos:column="45">string<pos:position pos:line="78" pos:column="51"/></name></name> <specifier pos:line="78" pos:column="52">const<pos:position pos:line="78" pos:column="57"/></specifier> <modifier pos:line="78" pos:column="58">&amp;<pos:position pos:line="78" pos:column="63"/></modifier></type> <name pos:line="78" pos:column="60">filename<pos:position pos:line="78" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="78" pos:column="69"/></parameter_list> <block pos:line="78" pos:column="70">{
    <decl_stmt><decl><type><name><name pos:line="79" pos:column="5">std<pos:position pos:line="79" pos:column="8"/></name><operator pos:line="79" pos:column="8">::<pos:position pos:line="79" pos:column="10"/></operator><name pos:line="79" pos:column="10">ifstream<pos:position pos:line="79" pos:column="18"/></name></name></type> <name pos:line="79" pos:column="19">file<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><call><name><name pos:line="79" pos:column="24">filename<pos:position pos:line="79" pos:column="32"/></name><operator pos:line="79" pos:column="32">.<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="33">c_str<pos:position pos:line="79" pos:column="38"/></name></name><argument_list pos:line="79" pos:column="38">()<pos:position pos:line="79" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="42">std<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">::<pos:position pos:line="79" pos:column="47"/></operator><name pos:line="79" pos:column="47">ios<pos:position pos:line="79" pos:column="50"/></name><operator pos:line="79" pos:column="50">::<pos:position pos:line="79" pos:column="52"/></operator><name pos:line="79" pos:column="52">binary<pos:position pos:line="79" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="59"/></argument_list></decl>;<pos:position pos:line="79" pos:column="60"/></decl_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><operator pos:line="80" pos:column="9">!<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">file<pos:position pos:line="80" pos:column="14"/></name></expr>)<pos:position pos:line="80" pos:column="15"/></condition><then pos:line="80" pos:column="15">
        <block type="pseudo"><return pos:line="81" pos:column="9">return <expr><literal type="number" pos:line="81" pos:column="16">0<pos:position pos:line="81" pos:column="17"/></literal></expr>;<pos:position pos:line="81" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="82" pos:column="5">file<pos:position pos:line="82" pos:column="9"/></name><operator pos:line="82" pos:column="9">.<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">seekg<pos:position pos:line="82" pos:column="15"/></name></name><argument_list pos:line="82" pos:column="15">(<argument><expr><literal type="number" pos:line="82" pos:column="16">0<pos:position pos:line="82" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="19">std<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">::<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">ios_base<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">::<pos:position pos:line="82" pos:column="34"/></operator><name pos:line="82" pos:column="34">end<pos:position pos:line="82" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="83" pos:column="5">size_t<pos:position pos:line="83" pos:column="11"/></name></type> <name pos:line="83" pos:column="12">file_size<pos:position pos:line="83" pos:column="21"/></name> <init pos:line="83" pos:column="22">= <expr><call><name><name pos:line="83" pos:column="24">file<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">.<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="29">tellg<pos:position pos:line="83" pos:column="34"/></name></name><argument_list pos:line="83" pos:column="34">()<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="83" pos:column="37"/></decl_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><operator pos:line="84" pos:column="13">(<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">file_size<pos:position pos:line="84" pos:column="23"/></name> <operator pos:line="84" pos:column="24">+<pos:position pos:line="84" pos:column="25"/></operator> <name pos:line="84" pos:column="26">fs_block_size<pos:position pos:line="84" pos:column="39"/></name> <operator pos:line="84" pos:column="40">-<pos:position pos:line="84" pos:column="41"/></operator> <literal type="number" pos:line="84" pos:column="42">1<pos:position pos:line="84" pos:column="43"/></literal><operator pos:line="84" pos:column="43">)<pos:position pos:line="84" pos:column="44"/></operator> <operator pos:line="84" pos:column="45">/<pos:position pos:line="84" pos:column="46"/></operator> <name pos:line="84" pos:column="47">fs_block_size<pos:position pos:line="84" pos:column="60"/></name><operator pos:line="84" pos:column="60">)<pos:position pos:line="84" pos:column="61"/></operator> <operator pos:line="84" pos:column="62">*<pos:position pos:line="84" pos:column="63"/></operator> <name pos:line="84" pos:column="64">fs_block_size<pos:position pos:line="84" pos:column="77"/></name></expr>;<pos:position pos:line="84" pos:column="78"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function>

<function><type><name pos:line="87" pos:column="1">void<pos:position pos:line="87" pos:column="5"/></name></type> <name><name pos:line="87" pos:column="6">Ssl<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">::<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="11">CertificateDb<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">::<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">load<pos:position pos:line="87" pos:column="30"/></name></name><parameter_list pos:line="87" pos:column="30">()<pos:position pos:line="87" pos:column="32"/></parameter_list> <block pos:line="87" pos:column="33">{
    <comment type="line" pos:line="88" pos:column="5">// Load db from file.</comment>
    <decl_stmt><decl><type><name><name pos:line="89" pos:column="5">Ssl<pos:position pos:line="89" pos:column="8"/></name><operator pos:line="89" pos:column="8">::<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">BIO_Pointer<pos:position pos:line="89" pos:column="21"/></name></name></type> <name pos:line="89" pos:column="22">in<pos:position pos:line="89" pos:column="24"/></name><argument_list pos:line="89" pos:column="24">(<argument><expr><call><name pos:line="89" pos:column="25">BIO_new<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><call><name pos:line="89" pos:column="33">BIO_s_file<pos:position pos:line="89" pos:column="43"/></name><argument_list pos:line="89" pos:column="43">()<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="47"/></argument_list></decl>;<pos:position pos:line="89" pos:column="48"/></decl_stmt>
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><operator pos:line="90" pos:column="9">!<pos:position pos:line="90" pos:column="10"/></operator><name pos:line="90" pos:column="10">in<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">||<pos:position pos:line="90" pos:column="15"/></operator> <call><name pos:line="90" pos:column="16">BIO_read_filename<pos:position pos:line="90" pos:column="33"/></name><argument_list pos:line="90" pos:column="33">(<argument><expr><call><name><name pos:line="90" pos:column="34">in<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">.<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="37">get<pos:position pos:line="90" pos:column="40"/></name></name><argument_list pos:line="90" pos:column="40">()<pos:position pos:line="90" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="90" pos:column="44">db_full<pos:position pos:line="90" pos:column="51"/></name><operator pos:line="90" pos:column="51">.<pos:position pos:line="90" pos:column="52"/></operator><name pos:line="90" pos:column="52">c_str<pos:position pos:line="90" pos:column="57"/></name></name><argument_list pos:line="90" pos:column="57">()<pos:position pos:line="90" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="60"/></argument_list></call> <operator pos:line="90" pos:column="61">&lt;=<pos:position pos:line="90" pos:column="66"/></operator> <literal type="number" pos:line="90" pos:column="64">0<pos:position pos:line="90" pos:column="65"/></literal></expr>)<pos:position pos:line="90" pos:column="66"/></condition><then pos:line="90" pos:column="66">
        <block type="pseudo"><throw pos:line="91" pos:column="9">throw <expr><call><name><name pos:line="91" pos:column="15">std<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">::<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">runtime_error<pos:position pos:line="91" pos:column="33"/></name></name><argument_list pos:line="91" pos:column="33">(<argument><expr><literal type="string" pos:line="91" pos:column="34">"Uninitialized SSL certificate database directory: "<pos:position pos:line="91" pos:column="86"/></literal> <operator pos:line="91" pos:column="87">+<pos:position pos:line="91" pos:column="88"/></operator> <name pos:line="91" pos:column="89">db_path<pos:position pos:line="91" pos:column="96"/></name> <operator pos:line="91" pos:column="97">+<pos:position pos:line="91" pos:column="98"/></operator> <literal type="string" pos:line="91" pos:column="99">". To initialize, run \"ssl_crtd -c -s "<pos:position pos:line="91" pos:column="139"/></literal> <operator pos:line="91" pos:column="140">+<pos:position pos:line="91" pos:column="141"/></operator> <name pos:line="91" pos:column="142">db_path<pos:position pos:line="91" pos:column="149"/></name> <operator pos:line="91" pos:column="150">+<pos:position pos:line="91" pos:column="151"/></operator> <literal type="string" pos:line="91" pos:column="152">"\"."<pos:position pos:line="91" pos:column="157"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="158"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="159"/></throw></block></then></if>

    <decl_stmt><decl><type><name pos:line="93" pos:column="5">bool<pos:position pos:line="93" pos:column="9"/></name></type> <name pos:line="93" pos:column="10">corrupt<pos:position pos:line="93" pos:column="17"/></name> <init pos:line="93" pos:column="18">= <expr><literal type="boolean" pos:line="93" pos:column="20">false<pos:position pos:line="93" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="93" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="94" pos:column="5">Ssl<pos:position pos:line="94" pos:column="8"/></name><operator pos:line="94" pos:column="8">::<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">TXT_DB_Pointer<pos:position pos:line="94" pos:column="24"/></name></name></type> <name pos:line="94" pos:column="25">temp_db<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><call><name pos:line="94" pos:column="33">TXT_DB_read<pos:position pos:line="94" pos:column="44"/></name><argument_list pos:line="94" pos:column="44">(<argument><expr><call><name><name pos:line="94" pos:column="45">in<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">.<pos:position pos:line="94" pos:column="48"/></operator><name pos:line="94" pos:column="48">get<pos:position pos:line="94" pos:column="51"/></name></name><argument_list pos:line="94" pos:column="51">()<pos:position pos:line="94" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="55">cnlNumber<pos:position pos:line="94" pos:column="64"/></name></expr></argument>)<pos:position pos:line="94" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></decl>;<pos:position pos:line="94" pos:column="67"/></decl_stmt>
    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><operator pos:line="95" pos:column="9">!<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">temp_db<pos:position pos:line="95" pos:column="17"/></name></expr>)<pos:position pos:line="95" pos:column="18"/></condition><then pos:line="95" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="9">corrupt<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">=<pos:position pos:line="96" pos:column="18"/></operator> <literal type="boolean" pos:line="96" pos:column="19">true<pos:position pos:line="96" pos:column="23"/></literal></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="98" pos:column="5">// Create indexes in db.</comment>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><name pos:line="99" pos:column="10">corrupt<pos:position pos:line="99" pos:column="17"/></name> <operator pos:line="99" pos:column="18">&amp;&amp;<pos:position pos:line="99" pos:column="28"/></operator> <operator pos:line="99" pos:column="21">!<pos:position pos:line="99" pos:column="22"/></operator><call><name pos:line="99" pos:column="22">TXT_DB_create_index<pos:position pos:line="99" pos:column="41"/></name><argument_list pos:line="99" pos:column="41">(<argument><expr><call><name><name pos:line="99" pos:column="42">temp_db<pos:position pos:line="99" pos:column="49"/></name><operator pos:line="99" pos:column="49">.<pos:position pos:line="99" pos:column="50"/></operator><name pos:line="99" pos:column="50">get<pos:position pos:line="99" pos:column="53"/></name></name><argument_list pos:line="99" pos:column="53">()<pos:position pos:line="99" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="99" pos:column="57">cnlSerial<pos:position pos:line="99" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="68">NULL<pos:position pos:line="99" pos:column="72"/></name></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="74">LHASH_HASH_FN<pos:position pos:line="99" pos:column="87"/></name><argument_list pos:line="99" pos:column="87">(<argument><expr><name pos:line="99" pos:column="88">index_serial_hash<pos:position pos:line="99" pos:column="105"/></name></expr></argument>)<pos:position pos:line="99" pos:column="106"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="99" pos:column="108">LHASH_COMP_FN<pos:position pos:line="99" pos:column="121"/></name><argument_list pos:line="99" pos:column="121">(<argument><expr><name pos:line="99" pos:column="122">index_serial_cmp<pos:position pos:line="99" pos:column="138"/></name></expr></argument>)<pos:position pos:line="99" pos:column="139"/></argument_list></call></expr></argument>)<pos:position pos:line="99" pos:column="140"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="141"/></condition><then pos:line="99" pos:column="141">
        <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="9">corrupt<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">=<pos:position pos:line="100" pos:column="18"/></operator> <literal type="boolean" pos:line="100" pos:column="19">true<pos:position pos:line="100" pos:column="23"/></literal></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><operator pos:line="102" pos:column="9">!<pos:position pos:line="102" pos:column="10"/></operator><name pos:line="102" pos:column="10">corrupt<pos:position pos:line="102" pos:column="17"/></name> <operator pos:line="102" pos:column="18">&amp;&amp;<pos:position pos:line="102" pos:column="28"/></operator> <operator pos:line="102" pos:column="21">!<pos:position pos:line="102" pos:column="22"/></operator><call><name pos:line="102" pos:column="22">TXT_DB_create_index<pos:position pos:line="102" pos:column="41"/></name><argument_list pos:line="102" pos:column="41">(<argument><expr><call><name><name pos:line="102" pos:column="42">temp_db<pos:position pos:line="102" pos:column="49"/></name><operator pos:line="102" pos:column="49">.<pos:position pos:line="102" pos:column="50"/></operator><name pos:line="102" pos:column="50">get<pos:position pos:line="102" pos:column="53"/></name></name><argument_list pos:line="102" pos:column="53">()<pos:position pos:line="102" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="102" pos:column="57">cnlName<pos:position pos:line="102" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="66">NULL<pos:position pos:line="102" pos:column="70"/></name></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="72">LHASH_HASH_FN<pos:position pos:line="102" pos:column="85"/></name><argument_list pos:line="102" pos:column="85">(<argument><expr><name pos:line="102" pos:column="86">index_name_hash<pos:position pos:line="102" pos:column="101"/></name></expr></argument>)<pos:position pos:line="102" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="102" pos:column="104">LHASH_COMP_FN<pos:position pos:line="102" pos:column="117"/></name><argument_list pos:line="102" pos:column="117">(<argument><expr><name pos:line="102" pos:column="118">index_name_cmp<pos:position pos:line="102" pos:column="132"/></name></expr></argument>)<pos:position pos:line="102" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="134"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="135"/></condition><then pos:line="102" pos:column="135">
        <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="9">corrupt<pos:position pos:line="103" pos:column="16"/></name> <operator pos:line="103" pos:column="17">=<pos:position pos:line="103" pos:column="18"/></operator> <literal type="boolean" pos:line="103" pos:column="19">true<pos:position pos:line="103" pos:column="23"/></literal></expr>;<pos:position pos:line="103" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><name pos:line="105" pos:column="9">corrupt<pos:position pos:line="105" pos:column="16"/></name></expr>)<pos:position pos:line="105" pos:column="17"/></condition><then pos:line="105" pos:column="17">
        <block type="pseudo"><throw pos:line="106" pos:column="9">throw <expr><call><name><name pos:line="106" pos:column="15">std<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">::<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">runtime_error<pos:position pos:line="106" pos:column="33"/></name></name><argument_list pos:line="106" pos:column="33">(<argument><expr><literal type="string" pos:line="106" pos:column="34">"The SSL certificate database "<pos:position pos:line="106" pos:column="65"/></literal> <operator pos:line="106" pos:column="66">+<pos:position pos:line="106" pos:column="67"/></operator> <name pos:line="106" pos:column="68">db_path<pos:position pos:line="106" pos:column="75"/></name> <operator pos:line="106" pos:column="76">+<pos:position pos:line="106" pos:column="77"/></operator> <literal type="string" pos:line="106" pos:column="78">" is corrupted. Please rebuild"<pos:position pos:line="106" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="111"/></throw></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="108" pos:column="5">db<pos:position pos:line="108" pos:column="7"/></name><operator pos:line="108" pos:column="7">.<pos:position pos:line="108" pos:column="8"/></operator><name pos:line="108" pos:column="8">reset<pos:position pos:line="108" pos:column="13"/></name></name><argument_list pos:line="108" pos:column="13">(<argument><expr><call><name><name pos:line="108" pos:column="14">temp_db<pos:position pos:line="108" pos:column="21"/></name><operator pos:line="108" pos:column="21">.<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="22">release<pos:position pos:line="108" pos:column="29"/></name></name><argument_list pos:line="108" pos:column="29">()<pos:position pos:line="108" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt>
}<pos:position pos:line="109" pos:column="2"/></block></function>

<function><type><name pos:line="111" pos:column="1">void<pos:position pos:line="111" pos:column="5"/></name></type> <name><name pos:line="111" pos:column="6">Ssl<pos:position pos:line="111" pos:column="9"/></name><operator pos:line="111" pos:column="9">::<pos:position pos:line="111" pos:column="11"/></operator><name pos:line="111" pos:column="11">CertificateDb<pos:position pos:line="111" pos:column="24"/></name><operator pos:line="111" pos:column="24">::<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="26">save<pos:position pos:line="111" pos:column="30"/></name></name><parameter_list pos:line="111" pos:column="30">()<pos:position pos:line="111" pos:column="32"/></parameter_list> <block pos:line="111" pos:column="33">{
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><operator pos:line="112" pos:column="9">!<pos:position pos:line="112" pos:column="10"/></operator><name pos:line="112" pos:column="10">db<pos:position pos:line="112" pos:column="12"/></name></expr>)<pos:position pos:line="112" pos:column="13"/></condition><then pos:line="112" pos:column="13">
        <block type="pseudo"><throw pos:line="113" pos:column="9">throw <expr><call><name><name pos:line="113" pos:column="15">std<pos:position pos:line="113" pos:column="18"/></name><operator pos:line="113" pos:column="18">::<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="20">runtime_error<pos:position pos:line="113" pos:column="33"/></name></name><argument_list pos:line="113" pos:column="33">(<argument><expr><literal type="string" pos:line="113" pos:column="34">"The certificates database is not loaded"<pos:position pos:line="113" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="77"/></throw></block></then></if><empty_stmt pos:line="113" pos:column="77">;<pos:position pos:line="113" pos:column="78"/></empty_stmt>

    <comment type="line" pos:line="115" pos:column="5">// To save the db to file,  create a new BIO with BIO file methods.</comment>
    <decl_stmt><decl><type><name><name pos:line="116" pos:column="5">Ssl<pos:position pos:line="116" pos:column="8"/></name><operator pos:line="116" pos:column="8">::<pos:position pos:line="116" pos:column="10"/></operator><name pos:line="116" pos:column="10">BIO_Pointer<pos:position pos:line="116" pos:column="21"/></name></name></type> <name pos:line="116" pos:column="22">out<pos:position pos:line="116" pos:column="25"/></name><argument_list pos:line="116" pos:column="25">(<argument><expr><call><name pos:line="116" pos:column="26">BIO_new<pos:position pos:line="116" pos:column="33"/></name><argument_list pos:line="116" pos:column="33">(<argument><expr><call><name pos:line="116" pos:column="34">BIO_s_file<pos:position pos:line="116" pos:column="44"/></name><argument_list pos:line="116" pos:column="44">()<pos:position pos:line="116" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="48"/></argument_list></decl>;<pos:position pos:line="116" pos:column="49"/></decl_stmt>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><operator pos:line="117" pos:column="9">!<pos:position pos:line="117" pos:column="10"/></operator><name pos:line="117" pos:column="10">out<pos:position pos:line="117" pos:column="13"/></name> <operator pos:line="117" pos:column="14">||<pos:position pos:line="117" pos:column="16"/></operator> <operator pos:line="117" pos:column="17">!<pos:position pos:line="117" pos:column="18"/></operator><call><name pos:line="117" pos:column="18">BIO_write_filename<pos:position pos:line="117" pos:column="36"/></name><argument_list pos:line="117" pos:column="36">(<argument><expr><call><name><name pos:line="117" pos:column="37">out<pos:position pos:line="117" pos:column="40"/></name><operator pos:line="117" pos:column="40">.<pos:position pos:line="117" pos:column="41"/></operator><name pos:line="117" pos:column="41">get<pos:position pos:line="117" pos:column="44"/></name></name><argument_list pos:line="117" pos:column="44">()<pos:position pos:line="117" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><cast type="const" pos:line="117" pos:column="48">const_cast<argument_list type="generic" pos:line="117" pos:column="58">&lt;<argument><expr><name pos:line="117" pos:column="59">char<pos:position pos:line="117" pos:column="63"/></name> <operator pos:line="117" pos:column="64">*<pos:position pos:line="117" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="117" pos:column="69"/></argument_list><argument_list pos:line="117" pos:column="66">(<argument><expr><call><name><name pos:line="117" pos:column="67">db_full<pos:position pos:line="117" pos:column="74"/></name><operator pos:line="117" pos:column="74">.<pos:position pos:line="117" pos:column="75"/></operator><name pos:line="117" pos:column="75">c_str<pos:position pos:line="117" pos:column="80"/></name></name><argument_list pos:line="117" pos:column="80">()<pos:position pos:line="117" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="83"/></argument_list></cast></expr></argument>)<pos:position pos:line="117" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="85"/></condition><then pos:line="117" pos:column="85">
        <block type="pseudo"><throw pos:line="118" pos:column="9">throw <expr><call><name><name pos:line="118" pos:column="15">std<pos:position pos:line="118" pos:column="18"/></name><operator pos:line="118" pos:column="18">::<pos:position pos:line="118" pos:column="20"/></operator><name pos:line="118" pos:column="20">runtime_error<pos:position pos:line="118" pos:column="33"/></name></name><argument_list pos:line="118" pos:column="33">(<argument><expr><literal type="string" pos:line="118" pos:column="34">"Failed to initialize "<pos:position pos:line="118" pos:column="57"/></literal> <operator pos:line="118" pos:column="58">+<pos:position pos:line="118" pos:column="59"/></operator> <name pos:line="118" pos:column="60">db_full<pos:position pos:line="118" pos:column="67"/></name> <operator pos:line="118" pos:column="68">+<pos:position pos:line="118" pos:column="69"/></operator> <literal type="string" pos:line="118" pos:column="70">" file for writing"<pos:position pos:line="118" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="91"/></throw></block></then></if><empty_stmt pos:line="118" pos:column="91">;<pos:position pos:line="118" pos:column="92"/></empty_stmt>

    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><call><name pos:line="120" pos:column="9">TXT_DB_write<pos:position pos:line="120" pos:column="21"/></name><argument_list pos:line="120" pos:column="21">(<argument><expr><call><name><name pos:line="120" pos:column="22">out<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">.<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="26">get<pos:position pos:line="120" pos:column="29"/></name></name><argument_list pos:line="120" pos:column="29">()<pos:position pos:line="120" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="120" pos:column="33">db<pos:position pos:line="120" pos:column="35"/></name><operator pos:line="120" pos:column="35">.<pos:position pos:line="120" pos:column="36"/></operator><name pos:line="120" pos:column="36">get<pos:position pos:line="120" pos:column="39"/></name></name><argument_list pos:line="120" pos:column="39">()<pos:position pos:line="120" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="120" pos:column="42"/></argument_list></call> <operator pos:line="120" pos:column="43">&lt;<pos:position pos:line="120" pos:column="47"/></operator> <literal type="number" pos:line="120" pos:column="45">0<pos:position pos:line="120" pos:column="46"/></literal></expr>)<pos:position pos:line="120" pos:column="47"/></condition><then pos:line="120" pos:column="47">
        <block type="pseudo"><throw pos:line="121" pos:column="9">throw <expr><call><name><name pos:line="121" pos:column="15">std<pos:position pos:line="121" pos:column="18"/></name><operator pos:line="121" pos:column="18">::<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">runtime_error<pos:position pos:line="121" pos:column="33"/></name></name><argument_list pos:line="121" pos:column="33">(<argument><expr><literal type="string" pos:line="121" pos:column="34">"Failed to write "<pos:position pos:line="121" pos:column="52"/></literal> <operator pos:line="121" pos:column="53">+<pos:position pos:line="121" pos:column="54"/></operator> <name pos:line="121" pos:column="55">db_full<pos:position pos:line="121" pos:column="62"/></name> <operator pos:line="121" pos:column="63">+<pos:position pos:line="121" pos:column="64"/></operator> <literal type="string" pos:line="121" pos:column="65">" file"<pos:position pos:line="121" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="74"/></throw></block></then></if>
}<pos:position pos:line="122" pos:column="2"/></block></function>

<comment type="line" pos:line="124" pos:column="1">// Normally defined in defines.h file</comment>
<function><type><name pos:line="125" pos:column="1">void<pos:position pos:line="125" pos:column="5"/></name></type> <name><name pos:line="125" pos:column="6">Ssl<pos:position pos:line="125" pos:column="9"/></name><operator pos:line="125" pos:column="9">::<pos:position pos:line="125" pos:column="11"/></operator><name pos:line="125" pos:column="11">CertificateDb<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">::<pos:position pos:line="125" pos:column="26"/></operator><name pos:line="125" pos:column="26">deleteRow<pos:position pos:line="125" pos:column="35"/></name></name><parameter_list pos:line="125" pos:column="35">(<parameter><decl><type><specifier pos:line="125" pos:column="36">const<pos:position pos:line="125" pos:column="41"/></specifier> <name pos:line="125" pos:column="42">char<pos:position pos:line="125" pos:column="46"/></name> <modifier pos:line="125" pos:column="47">*<pos:position pos:line="125" pos:column="48"/></modifier><modifier pos:line="125" pos:column="48">*<pos:position pos:line="125" pos:column="49"/></modifier></type><name pos:line="125" pos:column="49">row<pos:position pos:line="125" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="125" pos:column="54">int<pos:position pos:line="125" pos:column="57"/></name></type> <name pos:line="125" pos:column="58">rowIndex<pos:position pos:line="125" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="125" pos:column="67"/></parameter_list> <block pos:line="125" pos:column="68">{
    <decl_stmt><decl><type><specifier pos:line="126" pos:column="5">const<pos:position pos:line="126" pos:column="10"/></specifier> <name><name pos:line="126" pos:column="11">std<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">::<pos:position pos:line="126" pos:column="16"/></operator><name pos:line="126" pos:column="16">string<pos:position pos:line="126" pos:column="22"/></name></name></type> <name pos:line="126" pos:column="23">filename<pos:position pos:line="126" pos:column="31"/></name><argument_list pos:line="126" pos:column="31">(<argument><expr><name pos:line="126" pos:column="32">cert_full<pos:position pos:line="126" pos:column="41"/></name> <operator pos:line="126" pos:column="42">+<pos:position pos:line="126" pos:column="43"/></operator> <literal type="string" pos:line="126" pos:column="44">"/"<pos:position pos:line="126" pos:column="47"/></literal> <operator pos:line="126" pos:column="48">+<pos:position pos:line="126" pos:column="49"/></operator> <name><name pos:line="126" pos:column="50">row<pos:position pos:line="126" pos:column="53"/></name><index pos:line="126" pos:column="53">[<expr><name pos:line="126" pos:column="54">cnlSerial<pos:position pos:line="126" pos:column="63"/></name></expr>]<pos:position pos:line="126" pos:column="64"/></index></name> <operator pos:line="126" pos:column="65">+<pos:position pos:line="126" pos:column="66"/></operator> <literal type="string" pos:line="126" pos:column="67">".pem"<pos:position pos:line="126" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="74"/></argument_list></decl>;<pos:position pos:line="126" pos:column="75"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">sq_TXT_DB_delete_row<pos:position pos:line="127" pos:column="25"/></name><argument_list pos:line="127" pos:column="25">(<argument><expr><call><name><name pos:line="127" pos:column="26">db<pos:position pos:line="127" pos:column="28"/></name><operator pos:line="127" pos:column="28">.<pos:position pos:line="127" pos:column="29"/></operator><name pos:line="127" pos:column="29">get<pos:position pos:line="127" pos:column="32"/></name></name><argument_list pos:line="127" pos:column="32">()<pos:position pos:line="127" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="127" pos:column="36">rowIndex<pos:position pos:line="127" pos:column="44"/></name></expr></argument>)<pos:position pos:line="127" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="129" pos:column="5">subSize<pos:position pos:line="129" pos:column="12"/></name><argument_list pos:line="129" pos:column="12">(<argument><expr><name pos:line="129" pos:column="13">filename<pos:position pos:line="129" pos:column="21"/></name></expr></argument>)<pos:position pos:line="129" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="23"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="130" pos:column="5">int<pos:position pos:line="130" pos:column="8"/></name></type> <name pos:line="130" pos:column="9">ret<pos:position pos:line="130" pos:column="12"/></name> <init pos:line="130" pos:column="13">= <expr><call><name pos:line="130" pos:column="15">remove<pos:position pos:line="130" pos:column="21"/></name><argument_list pos:line="130" pos:column="21">(<argument><expr><call><name><name pos:line="130" pos:column="22">filename<pos:position pos:line="130" pos:column="30"/></name><operator pos:line="130" pos:column="30">.<pos:position pos:line="130" pos:column="31"/></operator><name pos:line="130" pos:column="31">c_str<pos:position pos:line="130" pos:column="36"/></name></name><argument_list pos:line="130" pos:column="36">()<pos:position pos:line="130" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="130" pos:column="40"/></decl_stmt>
    <if pos:line="131" pos:column="5">if <condition pos:line="131" pos:column="8">(<expr><name pos:line="131" pos:column="9">ret<pos:position pos:line="131" pos:column="12"/></name> <operator pos:line="131" pos:column="13">&lt;<pos:position pos:line="131" pos:column="17"/></operator> <literal type="number" pos:line="131" pos:column="15">0<pos:position pos:line="131" pos:column="16"/></literal> <operator pos:line="131" pos:column="17">&amp;&amp;<pos:position pos:line="131" pos:column="27"/></operator> <name pos:line="131" pos:column="20">errno<pos:position pos:line="131" pos:column="25"/></name> <operator pos:line="131" pos:column="26">!=<pos:position pos:line="131" pos:column="28"/></operator> <name pos:line="131" pos:column="29">ENOENT<pos:position pos:line="131" pos:column="35"/></name></expr>)<pos:position pos:line="131" pos:column="36"/></condition><then pos:line="131" pos:column="36">
        <block type="pseudo"><throw pos:line="132" pos:column="9">throw <expr><call><name><name pos:line="132" pos:column="15">std<pos:position pos:line="132" pos:column="18"/></name><operator pos:line="132" pos:column="18">::<pos:position pos:line="132" pos:column="20"/></operator><name pos:line="132" pos:column="20">runtime_error<pos:position pos:line="132" pos:column="33"/></name></name><argument_list pos:line="132" pos:column="33">(<argument><expr><literal type="string" pos:line="132" pos:column="34">"Failed to remove certficate file "<pos:position pos:line="132" pos:column="69"/></literal> <operator pos:line="132" pos:column="70">+<pos:position pos:line="132" pos:column="71"/></operator> <name pos:line="132" pos:column="72">filename<pos:position pos:line="132" pos:column="80"/></name> <operator pos:line="132" pos:column="81">+<pos:position pos:line="132" pos:column="82"/></operator> <literal type="string" pos:line="132" pos:column="83">" from db"<pos:position pos:line="132" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="95"/></throw></block></then></if>
}<pos:position pos:line="133" pos:column="2"/></block></function>

<function><type><name pos:line="135" pos:column="1">bool<pos:position pos:line="135" pos:column="5"/></name></type> <name><name pos:line="135" pos:column="6">Ssl<pos:position pos:line="135" pos:column="9"/></name><operator pos:line="135" pos:column="9">::<pos:position pos:line="135" pos:column="11"/></operator><name pos:line="135" pos:column="11">CertificateDb<pos:position pos:line="135" pos:column="24"/></name><operator pos:line="135" pos:column="24">::<pos:position pos:line="135" pos:column="26"/></operator><name pos:line="135" pos:column="26">deleteInvalidCertificate<pos:position pos:line="135" pos:column="50"/></name></name><parameter_list pos:line="135" pos:column="50">()<pos:position pos:line="135" pos:column="52"/></parameter_list> <block pos:line="135" pos:column="53">{
    <if pos:line="136" pos:column="5">if <condition pos:line="136" pos:column="8">(<expr><operator pos:line="136" pos:column="9">!<pos:position pos:line="136" pos:column="10"/></operator><name pos:line="136" pos:column="10">db<pos:position pos:line="136" pos:column="12"/></name></expr>)<pos:position pos:line="136" pos:column="13"/></condition><then pos:line="136" pos:column="13">
        <block type="pseudo"><return pos:line="137" pos:column="9">return <expr><literal type="boolean" pos:line="137" pos:column="16">false<pos:position pos:line="137" pos:column="21"/></literal></expr>;<pos:position pos:line="137" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="139" pos:column="5">bool<pos:position pos:line="139" pos:column="9"/></name></type> <name pos:line="139" pos:column="10">removed_one<pos:position pos:line="139" pos:column="21"/></name> <init pos:line="139" pos:column="22">= <expr><literal type="boolean" pos:line="139" pos:column="24">false<pos:position pos:line="139" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="139" pos:column="30"/></decl_stmt>
<cpp:if pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">if<pos:position pos:line="140" pos:column="4"/></cpp:directive> <expr><name pos:line="140" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="140" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="141" pos:column="5">for <control pos:line="141" pos:column="9">(<init><decl><type><name pos:line="141" pos:column="10">int<pos:position pos:line="141" pos:column="13"/></name></type> <name pos:line="141" pos:column="14">i<pos:position pos:line="141" pos:column="15"/></name> <init pos:line="141" pos:column="16">= <expr><literal type="number" pos:line="141" pos:column="18">0<pos:position pos:line="141" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="141" pos:column="20"/></init> <condition><expr><name pos:line="141" pos:column="21">i<pos:position pos:line="141" pos:column="22"/></name> <operator pos:line="141" pos:column="23">&lt;<pos:position pos:line="141" pos:column="27"/></operator> <call><name pos:line="141" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="141" pos:column="47"/></name><argument_list pos:line="141" pos:column="47">(<argument><expr><call><name><name pos:line="141" pos:column="48">db<pos:position pos:line="141" pos:column="50"/></name><operator pos:line="141" pos:column="50">.<pos:position pos:line="141" pos:column="51"/></operator><name pos:line="141" pos:column="51">get<pos:position pos:line="141" pos:column="54"/></name></name><argument_list pos:line="141" pos:column="54">()<pos:position pos:line="141" pos:column="56"/></argument_list></call><operator pos:line="141" pos:column="56">-&gt;<pos:position pos:line="141" pos:column="61"/></operator><name pos:line="141" pos:column="58">data<pos:position pos:line="141" pos:column="62"/></name></expr></argument>)<pos:position pos:line="141" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="64"/></condition> <incr><expr><operator pos:line="141" pos:column="65">++<pos:position pos:line="141" pos:column="67"/></operator><name pos:line="141" pos:column="67">i<pos:position pos:line="141" pos:column="68"/></name></expr></incr>)<pos:position pos:line="141" pos:column="69"/></control> <block pos:line="141" pos:column="70">{
<cpp:if pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">if<pos:position pos:line="142" pos:column="4"/></cpp:directive> <expr><name pos:line="142" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="142" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="143" pos:column="9">const<pos:position pos:line="143" pos:column="14"/></specifier> <name pos:line="143" pos:column="15">char<pos:position pos:line="143" pos:column="19"/></name> <modifier pos:line="143" pos:column="20">*<pos:position pos:line="143" pos:column="21"/></modifier><modifier pos:line="143" pos:column="21">*<pos:position pos:line="143" pos:column="22"/></modifier></type> <name pos:line="143" pos:column="23">current_row<pos:position pos:line="143" pos:column="34"/></name> <init pos:line="143" pos:column="35">= <expr><operator pos:line="143" pos:column="37">(<pos:position pos:line="143" pos:column="38"/></operator><operator pos:line="143" pos:column="38">(<pos:position pos:line="143" pos:column="39"/></operator><specifier pos:line="143" pos:column="39">const<pos:position pos:line="143" pos:column="44"/></specifier> <name pos:line="143" pos:column="45">char<pos:position pos:line="143" pos:column="49"/></name> <operator pos:line="143" pos:column="50">*<pos:position pos:line="143" pos:column="51"/></operator><operator pos:line="143" pos:column="51">*<pos:position pos:line="143" pos:column="52"/></operator><operator pos:line="143" pos:column="52">)<pos:position pos:line="143" pos:column="53"/></operator><call><name pos:line="143" pos:column="53">sk_value<pos:position pos:line="143" pos:column="61"/></name><argument_list pos:line="143" pos:column="61">(<argument><expr><call><name pos:line="143" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="143" pos:column="78"/></name><argument_list pos:line="143" pos:column="78">(<argument><expr><name pos:line="143" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="143" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="143" pos:column="96">db<pos:position pos:line="143" pos:column="98"/></name><operator pos:line="143" pos:column="98">.<pos:position pos:line="143" pos:column="99"/></operator><name pos:line="143" pos:column="99">get<pos:position pos:line="143" pos:column="102"/></name></name><argument_list pos:line="143" pos:column="102">()<pos:position pos:line="143" pos:column="104"/></argument_list></call><operator pos:line="143" pos:column="104">-&gt;<pos:position pos:line="143" pos:column="109"/></operator><name pos:line="143" pos:column="106">data<pos:position pos:line="143" pos:column="110"/></name></expr></argument>)<pos:position pos:line="143" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="143" pos:column="113">i<pos:position pos:line="143" pos:column="114"/></name></expr></argument>)<pos:position pos:line="143" pos:column="115"/></argument_list></call><operator pos:line="143" pos:column="115">)<pos:position pos:line="143" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="143" pos:column="117"/></decl_stmt>
<cpp:else pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">else<pos:position pos:line="144" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="145" pos:column="9">const<pos:position pos:line="145" pos:column="14"/></specifier> <name pos:line="145" pos:column="15">char<pos:position pos:line="145" pos:column="19"/></name> <modifier pos:line="145" pos:column="20">*<pos:position pos:line="145" pos:column="21"/></modifier><modifier pos:line="145" pos:column="21">*<pos:position pos:line="145" pos:column="22"/></modifier></type> <name pos:line="145" pos:column="23">current_row<pos:position pos:line="145" pos:column="34"/></name> <init pos:line="145" pos:column="35">= <expr><operator pos:line="145" pos:column="37">(<pos:position pos:line="145" pos:column="38"/></operator><operator pos:line="145" pos:column="38">(<pos:position pos:line="145" pos:column="39"/></operator><specifier pos:line="145" pos:column="39">const<pos:position pos:line="145" pos:column="44"/></specifier> <name pos:line="145" pos:column="45">char<pos:position pos:line="145" pos:column="49"/></name> <operator pos:line="145" pos:column="50">*<pos:position pos:line="145" pos:column="51"/></operator><operator pos:line="145" pos:column="51">*<pos:position pos:line="145" pos:column="52"/></operator><operator pos:line="145" pos:column="52">)<pos:position pos:line="145" pos:column="53"/></operator><call><name pos:line="145" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="145" pos:column="77"/></name><argument_list pos:line="145" pos:column="77">(<argument><expr><call><name><name pos:line="145" pos:column="78">db<pos:position pos:line="145" pos:column="80"/></name><operator pos:line="145" pos:column="80">.<pos:position pos:line="145" pos:column="81"/></operator><name pos:line="145" pos:column="81">get<pos:position pos:line="145" pos:column="84"/></name></name><argument_list pos:line="145" pos:column="84">()<pos:position pos:line="145" pos:column="86"/></argument_list></call><operator pos:line="145" pos:column="86">-&gt;<pos:position pos:line="145" pos:column="91"/></operator><name pos:line="145" pos:column="88">data<pos:position pos:line="145" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="94">i<pos:position pos:line="145" pos:column="95"/></name></expr></argument>)<pos:position pos:line="145" pos:column="96"/></argument_list></call><operator pos:line="145" pos:column="96">)<pos:position pos:line="145" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="145" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">endif<pos:position pos:line="146" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">else<pos:position pos:line="147" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="148" pos:column="5">for <control pos:line="148" pos:column="9">(<init><decl><type><name pos:line="148" pos:column="10">int<pos:position pos:line="148" pos:column="13"/></name></type> <name pos:line="148" pos:column="14">i<pos:position pos:line="148" pos:column="15"/></name> <init pos:line="148" pos:column="16">= <expr><literal type="number" pos:line="148" pos:column="18">0<pos:position pos:line="148" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="148" pos:column="20"/></init> <condition><expr><name pos:line="148" pos:column="21">i<pos:position pos:line="148" pos:column="22"/></name> <operator pos:line="148" pos:column="23">&lt;<pos:position pos:line="148" pos:column="27"/></operator> <call><name pos:line="148" pos:column="25">sk_num<pos:position pos:line="148" pos:column="31"/></name><argument_list pos:line="148" pos:column="31">(<argument><expr><call><name><name pos:line="148" pos:column="32">db<pos:position pos:line="148" pos:column="34"/></name><operator pos:line="148" pos:column="34">.<pos:position pos:line="148" pos:column="35"/></operator><name pos:line="148" pos:column="35">get<pos:position pos:line="148" pos:column="38"/></name></name><argument_list pos:line="148" pos:column="38">()<pos:position pos:line="148" pos:column="40"/></argument_list></call><operator pos:line="148" pos:column="40">-&gt;<pos:position pos:line="148" pos:column="45"/></operator><name pos:line="148" pos:column="42">data<pos:position pos:line="148" pos:column="46"/></name></expr></argument>)<pos:position pos:line="148" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="48"/></condition> <incr><expr><operator pos:line="148" pos:column="49">++<pos:position pos:line="148" pos:column="51"/></operator><name pos:line="148" pos:column="51">i<pos:position pos:line="148" pos:column="52"/></name></expr></incr>)<pos:position pos:line="148" pos:column="53"/></control> <block pos:line="148" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="149" pos:column="9">const<pos:position pos:line="149" pos:column="14"/></specifier> <name pos:line="149" pos:column="15">char<pos:position pos:line="149" pos:column="19"/></name> <modifier pos:line="149" pos:column="20">*<pos:position pos:line="149" pos:column="21"/></modifier><modifier pos:line="149" pos:column="21">*<pos:position pos:line="149" pos:column="22"/></modifier></type> <name pos:line="149" pos:column="23">current_row<pos:position pos:line="149" pos:column="34"/></name> <init pos:line="149" pos:column="35">= <expr><operator pos:line="149" pos:column="37">(<pos:position pos:line="149" pos:column="38"/></operator><operator pos:line="149" pos:column="38">(<pos:position pos:line="149" pos:column="39"/></operator><specifier pos:line="149" pos:column="39">const<pos:position pos:line="149" pos:column="44"/></specifier> <name pos:line="149" pos:column="45">char<pos:position pos:line="149" pos:column="49"/></name> <operator pos:line="149" pos:column="50">*<pos:position pos:line="149" pos:column="51"/></operator><operator pos:line="149" pos:column="51">*<pos:position pos:line="149" pos:column="52"/></operator><operator pos:line="149" pos:column="52">)<pos:position pos:line="149" pos:column="53"/></operator><call><name pos:line="149" pos:column="53">sk_value<pos:position pos:line="149" pos:column="61"/></name><argument_list pos:line="149" pos:column="61">(<argument><expr><call><name><name pos:line="149" pos:column="62">db<pos:position pos:line="149" pos:column="64"/></name><operator pos:line="149" pos:column="64">.<pos:position pos:line="149" pos:column="65"/></operator><name pos:line="149" pos:column="65">get<pos:position pos:line="149" pos:column="68"/></name></name><argument_list pos:line="149" pos:column="68">()<pos:position pos:line="149" pos:column="70"/></argument_list></call><operator pos:line="149" pos:column="70">-&gt;<pos:position pos:line="149" pos:column="75"/></operator><name pos:line="149" pos:column="72">data<pos:position pos:line="149" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="78">i<pos:position pos:line="149" pos:column="79"/></name></expr></argument>)<pos:position pos:line="149" pos:column="80"/></argument_list></call><operator pos:line="149" pos:column="80">)<pos:position pos:line="149" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="149" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif<pos:position pos:line="150" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><operator pos:line="152" pos:column="13">!<pos:position pos:line="152" pos:column="14"/></operator><call><name pos:line="152" pos:column="14">sslDateIsInTheFuture<pos:position pos:line="152" pos:column="34"/></name><argument_list pos:line="152" pos:column="34">(<argument><expr><name><name pos:line="152" pos:column="35">current_row<pos:position pos:line="152" pos:column="46"/></name><index pos:line="152" pos:column="46">[<expr><name pos:line="152" pos:column="47">cnlExp_date<pos:position pos:line="152" pos:column="58"/></name></expr>]<pos:position pos:line="152" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="152" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="152" pos:column="61"/></condition><then pos:line="152" pos:column="61"> <block pos:line="152" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">deleteRow<pos:position pos:line="153" pos:column="22"/></name><argument_list pos:line="153" pos:column="22">(<argument><expr><name pos:line="153" pos:column="23">current_row<pos:position pos:line="153" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="36">i<pos:position pos:line="153" pos:column="37"/></name></expr></argument>)<pos:position pos:line="153" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="154" pos:column="13">removed_one<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">=<pos:position pos:line="154" pos:column="26"/></operator> <literal type="boolean" pos:line="154" pos:column="27">true<pos:position pos:line="154" pos:column="31"/></literal></expr>;<pos:position pos:line="154" pos:column="32"/></expr_stmt>
            <break pos:line="155" pos:column="13">break;<pos:position pos:line="155" pos:column="19"/></break>
        }<pos:position pos:line="156" pos:column="10"/></block></then></if>
    }<pos:position pos:line="157" pos:column="6"/></block></for>

    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><operator pos:line="159" pos:column="9">!<pos:position pos:line="159" pos:column="10"/></operator><name pos:line="159" pos:column="10">removed_one<pos:position pos:line="159" pos:column="21"/></name></expr>)<pos:position pos:line="159" pos:column="22"/></condition><then pos:line="159" pos:column="22">
        <block type="pseudo"><return pos:line="160" pos:column="9">return <expr><literal type="boolean" pos:line="160" pos:column="16">false<pos:position pos:line="160" pos:column="21"/></literal></expr>;<pos:position pos:line="160" pos:column="22"/></return></block></then></if>
    <return pos:line="161" pos:column="5">return <expr><literal type="boolean" pos:line="161" pos:column="12">true<pos:position pos:line="161" pos:column="16"/></literal></expr>;<pos:position pos:line="161" pos:column="17"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></for>

<function><type><name pos:line="164" pos:column="1">bool<pos:position pos:line="164" pos:column="5"/></name></type> <name><name pos:line="164" pos:column="6">Ssl<pos:position pos:line="164" pos:column="9"/></name><operator pos:line="164" pos:column="9">::<pos:position pos:line="164" pos:column="11"/></operator><name pos:line="164" pos:column="11">CertificateDb<pos:position pos:line="164" pos:column="24"/></name><operator pos:line="164" pos:column="24">::<pos:position pos:line="164" pos:column="26"/></operator><name pos:line="164" pos:column="26">deleteOldestCertificate<pos:position pos:line="164" pos:column="49"/></name></name><parameter_list pos:line="164" pos:column="49">()<pos:position pos:line="164" pos:column="51"/></parameter_list> <block pos:line="164" pos:column="52">{
    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><operator pos:line="165" pos:column="9">!<pos:position pos:line="165" pos:column="10"/></operator><name pos:line="165" pos:column="10">db<pos:position pos:line="165" pos:column="12"/></name></expr>)<pos:position pos:line="165" pos:column="13"/></condition><then pos:line="165" pos:column="13">
        <block type="pseudo"><return pos:line="166" pos:column="9">return <expr><literal type="boolean" pos:line="166" pos:column="16">false<pos:position pos:line="166" pos:column="21"/></literal></expr>;<pos:position pos:line="166" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">if<pos:position pos:line="168" pos:column="4"/></cpp:directive> <expr><name pos:line="168" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="168" pos:column="31"/></name></expr></cpp:if>
    <if pos:line="169" pos:column="5">if <condition pos:line="169" pos:column="8">(<expr><call><name pos:line="169" pos:column="9">sk_OPENSSL_PSTRING_num<pos:position pos:line="169" pos:column="31"/></name><argument_list pos:line="169" pos:column="31">(<argument><expr><call><name><name pos:line="169" pos:column="32">db<pos:position pos:line="169" pos:column="34"/></name><operator pos:line="169" pos:column="34">.<pos:position pos:line="169" pos:column="35"/></operator><name pos:line="169" pos:column="35">get<pos:position pos:line="169" pos:column="38"/></name></name><argument_list pos:line="169" pos:column="38">()<pos:position pos:line="169" pos:column="40"/></argument_list></call><operator pos:line="169" pos:column="40">-&gt;<pos:position pos:line="169" pos:column="45"/></operator><name pos:line="169" pos:column="42">data<pos:position pos:line="169" pos:column="46"/></name></expr></argument>)<pos:position pos:line="169" pos:column="47"/></argument_list></call> <operator pos:line="169" pos:column="48">==<pos:position pos:line="169" pos:column="50"/></operator> <literal type="number" pos:line="169" pos:column="51">0<pos:position pos:line="169" pos:column="52"/></literal></expr>)<pos:position pos:line="169" pos:column="53"/></condition><then pos:line="169" pos:column="53">
<cpp:else pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">else<pos:position pos:line="170" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="171" pos:column="5">if <condition pos:line="171" pos:column="8">(<expr><call><name pos:line="171" pos:column="9">sk_num<pos:position pos:line="171" pos:column="15"/></name><argument_list pos:line="171" pos:column="15">(<argument><expr><call><name><name pos:line="171" pos:column="16">db<pos:position pos:line="171" pos:column="18"/></name><operator pos:line="171" pos:column="18">.<pos:position pos:line="171" pos:column="19"/></operator><name pos:line="171" pos:column="19">get<pos:position pos:line="171" pos:column="22"/></name></name><argument_list pos:line="171" pos:column="22">()<pos:position pos:line="171" pos:column="24"/></argument_list></call><operator pos:line="171" pos:column="24">-&gt;<pos:position pos:line="171" pos:column="29"/></operator><name pos:line="171" pos:column="26">data<pos:position pos:line="171" pos:column="30"/></name></expr></argument>)<pos:position pos:line="171" pos:column="31"/></argument_list></call> <operator pos:line="171" pos:column="32">==<pos:position pos:line="171" pos:column="34"/></operator> <literal type="number" pos:line="171" pos:column="35">0<pos:position pos:line="171" pos:column="36"/></literal></expr>)<pos:position pos:line="171" pos:column="37"/></condition><then pos:line="171" pos:column="37">
<cpp:endif pos:line="172" pos:column="1">#<cpp:directive pos:line="172" pos:column="2">endif<pos:position pos:line="172" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><return pos:line="173" pos:column="9">return <expr><literal type="boolean" pos:line="173" pos:column="16">false<pos:position pos:line="173" pos:column="21"/></literal></expr>;<pos:position pos:line="173" pos:column="22"/></return></block></then></if></block></then></if>

<cpp:if pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">if<pos:position pos:line="175" pos:column="4"/></cpp:directive> <expr><name pos:line="175" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="175" pos:column="31"/></name></expr></cpp:if>
<cpp:if pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">if<pos:position pos:line="176" pos:column="4"/></cpp:directive> <expr><name pos:line="176" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="176" pos:column="35"/></name></expr></cpp:if>
    <decl_stmt><decl><type><specifier pos:line="177" pos:column="5">const<pos:position pos:line="177" pos:column="10"/></specifier> <name pos:line="177" pos:column="11">char<pos:position pos:line="177" pos:column="15"/></name> <modifier pos:line="177" pos:column="16">*<pos:position pos:line="177" pos:column="17"/></modifier><modifier pos:line="177" pos:column="17">*<pos:position pos:line="177" pos:column="18"/></modifier></type><name pos:line="177" pos:column="18">row<pos:position pos:line="177" pos:column="21"/></name> <init pos:line="177" pos:column="22">= <expr><operator pos:line="177" pos:column="24">(<pos:position pos:line="177" pos:column="25"/></operator><operator pos:line="177" pos:column="25">(<pos:position pos:line="177" pos:column="26"/></operator><specifier pos:line="177" pos:column="26">const<pos:position pos:line="177" pos:column="31"/></specifier> <name pos:line="177" pos:column="32">char<pos:position pos:line="177" pos:column="36"/></name> <operator pos:line="177" pos:column="37">*<pos:position pos:line="177" pos:column="38"/></operator><operator pos:line="177" pos:column="38">*<pos:position pos:line="177" pos:column="39"/></operator><operator pos:line="177" pos:column="39">)<pos:position pos:line="177" pos:column="40"/></operator><call><name pos:line="177" pos:column="40">sk_value<pos:position pos:line="177" pos:column="48"/></name><argument_list pos:line="177" pos:column="48">(<argument><expr><call><name pos:line="177" pos:column="49">CHECKED_STACK_OF<pos:position pos:line="177" pos:column="65"/></name><argument_list pos:line="177" pos:column="65">(<argument><expr><name pos:line="177" pos:column="66">OPENSSL_PSTRING<pos:position pos:line="177" pos:column="81"/></name></expr></argument>, <argument><expr><call><name><name pos:line="177" pos:column="83">db<pos:position pos:line="177" pos:column="85"/></name><operator pos:line="177" pos:column="85">.<pos:position pos:line="177" pos:column="86"/></operator><name pos:line="177" pos:column="86">get<pos:position pos:line="177" pos:column="89"/></name></name><argument_list pos:line="177" pos:column="89">()<pos:position pos:line="177" pos:column="91"/></argument_list></call><operator pos:line="177" pos:column="91">-&gt;<pos:position pos:line="177" pos:column="96"/></operator><name pos:line="177" pos:column="93">data<pos:position pos:line="177" pos:column="97"/></name></expr></argument>)<pos:position pos:line="177" pos:column="98"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="177" pos:column="100">0<pos:position pos:line="177" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="102"/></argument_list></call><operator pos:line="177" pos:column="102">)<pos:position pos:line="177" pos:column="103"/></operator></expr></init></decl>;<pos:position pos:line="177" pos:column="104"/></decl_stmt>
<cpp:else pos:line="178" pos:column="1">#<cpp:directive pos:line="178" pos:column="2">else<pos:position pos:line="178" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="179" pos:column="5">const<pos:position pos:line="179" pos:column="10"/></specifier> <name pos:line="179" pos:column="11">char<pos:position pos:line="179" pos:column="15"/></name> <modifier pos:line="179" pos:column="16">*<pos:position pos:line="179" pos:column="17"/></modifier><modifier pos:line="179" pos:column="17">*<pos:position pos:line="179" pos:column="18"/></modifier></type><name pos:line="179" pos:column="18">row<pos:position pos:line="179" pos:column="21"/></name> <init pos:line="179" pos:column="22">= <expr><operator pos:line="179" pos:column="24">(<pos:position pos:line="179" pos:column="25"/></operator><specifier pos:line="179" pos:column="25">const<pos:position pos:line="179" pos:column="30"/></specifier> <name pos:line="179" pos:column="31">char<pos:position pos:line="179" pos:column="35"/></name> <operator pos:line="179" pos:column="36">*<pos:position pos:line="179" pos:column="37"/></operator><operator pos:line="179" pos:column="37">*<pos:position pos:line="179" pos:column="38"/></operator><operator pos:line="179" pos:column="38">)<pos:position pos:line="179" pos:column="39"/></operator><call><name pos:line="179" pos:column="39">sk_OPENSSL_PSTRING_value<pos:position pos:line="179" pos:column="63"/></name><argument_list pos:line="179" pos:column="63">(<argument><expr><call><name><name pos:line="179" pos:column="64">db<pos:position pos:line="179" pos:column="66"/></name><operator pos:line="179" pos:column="66">.<pos:position pos:line="179" pos:column="67"/></operator><name pos:line="179" pos:column="67">get<pos:position pos:line="179" pos:column="70"/></name></name><argument_list pos:line="179" pos:column="70">()<pos:position pos:line="179" pos:column="72"/></argument_list></call><operator pos:line="179" pos:column="72">-&gt;<pos:position pos:line="179" pos:column="77"/></operator><name pos:line="179" pos:column="74">data<pos:position pos:line="179" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="80">0<pos:position pos:line="179" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="179" pos:column="83"/></decl_stmt>
<cpp:endif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">endif<pos:position pos:line="180" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">else<pos:position pos:line="181" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="182" pos:column="5">const<pos:position pos:line="182" pos:column="10"/></specifier> <name pos:line="182" pos:column="11">char<pos:position pos:line="182" pos:column="15"/></name> <modifier pos:line="182" pos:column="16">*<pos:position pos:line="182" pos:column="17"/></modifier><modifier pos:line="182" pos:column="17">*<pos:position pos:line="182" pos:column="18"/></modifier></type><name pos:line="182" pos:column="18">row<pos:position pos:line="182" pos:column="21"/></name> <init pos:line="182" pos:column="22">= <expr><operator pos:line="182" pos:column="24">(<pos:position pos:line="182" pos:column="25"/></operator><specifier pos:line="182" pos:column="25">const<pos:position pos:line="182" pos:column="30"/></specifier> <name pos:line="182" pos:column="31">char<pos:position pos:line="182" pos:column="35"/></name> <operator pos:line="182" pos:column="36">*<pos:position pos:line="182" pos:column="37"/></operator><operator pos:line="182" pos:column="37">*<pos:position pos:line="182" pos:column="38"/></operator><operator pos:line="182" pos:column="38">)<pos:position pos:line="182" pos:column="39"/></operator><call><name pos:line="182" pos:column="39">sk_value<pos:position pos:line="182" pos:column="47"/></name><argument_list pos:line="182" pos:column="47">(<argument><expr><call><name><name pos:line="182" pos:column="48">db<pos:position pos:line="182" pos:column="50"/></name><operator pos:line="182" pos:column="50">.<pos:position pos:line="182" pos:column="51"/></operator><name pos:line="182" pos:column="51">get<pos:position pos:line="182" pos:column="54"/></name></name><argument_list pos:line="182" pos:column="54">()<pos:position pos:line="182" pos:column="56"/></argument_list></call><operator pos:line="182" pos:column="56">-&gt;<pos:position pos:line="182" pos:column="61"/></operator><name pos:line="182" pos:column="58">data<pos:position pos:line="182" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="182" pos:column="64">0<pos:position pos:line="182" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="182" pos:column="67"/></decl_stmt>
<cpp:endif pos:line="183" pos:column="1">#<cpp:directive pos:line="183" pos:column="2">endif<pos:position pos:line="183" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="185" pos:column="5">deleteRow<pos:position pos:line="185" pos:column="14"/></name><argument_list pos:line="185" pos:column="14">(<argument><expr><name pos:line="185" pos:column="15">row<pos:position pos:line="185" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="20">0<pos:position pos:line="185" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="23"/></expr_stmt>

    <return pos:line="187" pos:column="5">return <expr><literal type="boolean" pos:line="187" pos:column="12">true<pos:position pos:line="187" pos:column="16"/></literal></expr>;<pos:position pos:line="187" pos:column="17"/></return>
}<pos:position pos:line="188" pos:column="2"/></block></function>

<function><type><name pos:line="190" pos:column="1">bool<pos:position pos:line="190" pos:column="5"/></name></type> <name><name pos:line="190" pos:column="6">Ssl<pos:position pos:line="190" pos:column="9"/></name><operator pos:line="190" pos:column="9">::<pos:position pos:line="190" pos:column="11"/></operator><name pos:line="190" pos:column="11">CertificateDb<pos:position pos:line="190" pos:column="24"/></name><operator pos:line="190" pos:column="24">::<pos:position pos:line="190" pos:column="26"/></operator><name pos:line="190" pos:column="26">deleteByHostname<pos:position pos:line="190" pos:column="42"/></name></name><parameter_list pos:line="190" pos:column="42">(<parameter><decl><type><name><name pos:line="190" pos:column="43">std<pos:position pos:line="190" pos:column="46"/></name><operator pos:line="190" pos:column="46">::<pos:position pos:line="190" pos:column="48"/></operator><name pos:line="190" pos:column="48">string<pos:position pos:line="190" pos:column="54"/></name></name> <specifier pos:line="190" pos:column="55">const<pos:position pos:line="190" pos:column="60"/></specifier> <modifier pos:line="190" pos:column="61">&amp;<pos:position pos:line="190" pos:column="66"/></modifier></type> <name pos:line="190" pos:column="63">host<pos:position pos:line="190" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="190" pos:column="68"/></parameter_list> <block pos:line="190" pos:column="69">{
    <if pos:line="191" pos:column="5">if <condition pos:line="191" pos:column="8">(<expr><operator pos:line="191" pos:column="9">!<pos:position pos:line="191" pos:column="10"/></operator><name pos:line="191" pos:column="10">db<pos:position pos:line="191" pos:column="12"/></name></expr>)<pos:position pos:line="191" pos:column="13"/></condition><then pos:line="191" pos:column="13">
        <block type="pseudo"><return pos:line="192" pos:column="9">return <expr><literal type="boolean" pos:line="192" pos:column="16">false<pos:position pos:line="192" pos:column="21"/></literal></expr>;<pos:position pos:line="192" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="194" pos:column="1">#<cpp:directive pos:line="194" pos:column="2">if<pos:position pos:line="194" pos:column="4"/></cpp:directive> <expr><name pos:line="194" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="194" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="195" pos:column="5">for <control pos:line="195" pos:column="9">(<init><decl><type><name pos:line="195" pos:column="10">int<pos:position pos:line="195" pos:column="13"/></name></type> <name pos:line="195" pos:column="14">i<pos:position pos:line="195" pos:column="15"/></name> <init pos:line="195" pos:column="16">= <expr><literal type="number" pos:line="195" pos:column="18">0<pos:position pos:line="195" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="195" pos:column="20"/></init> <condition><expr><name pos:line="195" pos:column="21">i<pos:position pos:line="195" pos:column="22"/></name> <operator pos:line="195" pos:column="23">&lt;<pos:position pos:line="195" pos:column="27"/></operator> <call><name pos:line="195" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="195" pos:column="47"/></name><argument_list pos:line="195" pos:column="47">(<argument><expr><call><name><name pos:line="195" pos:column="48">db<pos:position pos:line="195" pos:column="50"/></name><operator pos:line="195" pos:column="50">.<pos:position pos:line="195" pos:column="51"/></operator><name pos:line="195" pos:column="51">get<pos:position pos:line="195" pos:column="54"/></name></name><argument_list pos:line="195" pos:column="54">()<pos:position pos:line="195" pos:column="56"/></argument_list></call><operator pos:line="195" pos:column="56">-&gt;<pos:position pos:line="195" pos:column="61"/></operator><name pos:line="195" pos:column="58">data<pos:position pos:line="195" pos:column="62"/></name></expr></argument>)<pos:position pos:line="195" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="64"/></condition> <incr><expr><operator pos:line="195" pos:column="65">++<pos:position pos:line="195" pos:column="67"/></operator><name pos:line="195" pos:column="67">i<pos:position pos:line="195" pos:column="68"/></name></expr></incr>)<pos:position pos:line="195" pos:column="69"/></control> <block pos:line="195" pos:column="70">{
<cpp:if pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">if<pos:position pos:line="196" pos:column="4"/></cpp:directive> <expr><name pos:line="196" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="196" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="197" pos:column="9">const<pos:position pos:line="197" pos:column="14"/></specifier> <name pos:line="197" pos:column="15">char<pos:position pos:line="197" pos:column="19"/></name> <modifier pos:line="197" pos:column="20">*<pos:position pos:line="197" pos:column="21"/></modifier><modifier pos:line="197" pos:column="21">*<pos:position pos:line="197" pos:column="22"/></modifier></type> <name pos:line="197" pos:column="23">current_row<pos:position pos:line="197" pos:column="34"/></name> <init pos:line="197" pos:column="35">= <expr><operator pos:line="197" pos:column="37">(<pos:position pos:line="197" pos:column="38"/></operator><operator pos:line="197" pos:column="38">(<pos:position pos:line="197" pos:column="39"/></operator><specifier pos:line="197" pos:column="39">const<pos:position pos:line="197" pos:column="44"/></specifier> <name pos:line="197" pos:column="45">char<pos:position pos:line="197" pos:column="49"/></name> <operator pos:line="197" pos:column="50">*<pos:position pos:line="197" pos:column="51"/></operator><operator pos:line="197" pos:column="51">*<pos:position pos:line="197" pos:column="52"/></operator><operator pos:line="197" pos:column="52">)<pos:position pos:line="197" pos:column="53"/></operator><call><name pos:line="197" pos:column="53">sk_value<pos:position pos:line="197" pos:column="61"/></name><argument_list pos:line="197" pos:column="61">(<argument><expr><call><name pos:line="197" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="197" pos:column="78"/></name><argument_list pos:line="197" pos:column="78">(<argument><expr><name pos:line="197" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="197" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="197" pos:column="96">db<pos:position pos:line="197" pos:column="98"/></name><operator pos:line="197" pos:column="98">.<pos:position pos:line="197" pos:column="99"/></operator><name pos:line="197" pos:column="99">get<pos:position pos:line="197" pos:column="102"/></name></name><argument_list pos:line="197" pos:column="102">()<pos:position pos:line="197" pos:column="104"/></argument_list></call><operator pos:line="197" pos:column="104">-&gt;<pos:position pos:line="197" pos:column="109"/></operator><name pos:line="197" pos:column="106">data<pos:position pos:line="197" pos:column="110"/></name></expr></argument>)<pos:position pos:line="197" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="197" pos:column="113">i<pos:position pos:line="197" pos:column="114"/></name></expr></argument>)<pos:position pos:line="197" pos:column="115"/></argument_list></call><operator pos:line="197" pos:column="115">)<pos:position pos:line="197" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="197" pos:column="117"/></decl_stmt>
<cpp:else pos:line="198" pos:column="1">#<cpp:directive pos:line="198" pos:column="2">else<pos:position pos:line="198" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="199" pos:column="9">const<pos:position pos:line="199" pos:column="14"/></specifier> <name pos:line="199" pos:column="15">char<pos:position pos:line="199" pos:column="19"/></name> <modifier pos:line="199" pos:column="20">*<pos:position pos:line="199" pos:column="21"/></modifier><modifier pos:line="199" pos:column="21">*<pos:position pos:line="199" pos:column="22"/></modifier></type> <name pos:line="199" pos:column="23">current_row<pos:position pos:line="199" pos:column="34"/></name> <init pos:line="199" pos:column="35">= <expr><operator pos:line="199" pos:column="37">(<pos:position pos:line="199" pos:column="38"/></operator><operator pos:line="199" pos:column="38">(<pos:position pos:line="199" pos:column="39"/></operator><specifier pos:line="199" pos:column="39">const<pos:position pos:line="199" pos:column="44"/></specifier> <name pos:line="199" pos:column="45">char<pos:position pos:line="199" pos:column="49"/></name> <operator pos:line="199" pos:column="50">*<pos:position pos:line="199" pos:column="51"/></operator><operator pos:line="199" pos:column="51">*<pos:position pos:line="199" pos:column="52"/></operator><operator pos:line="199" pos:column="52">)<pos:position pos:line="199" pos:column="53"/></operator><call><name pos:line="199" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="199" pos:column="77"/></name><argument_list pos:line="199" pos:column="77">(<argument><expr><call><name><name pos:line="199" pos:column="78">db<pos:position pos:line="199" pos:column="80"/></name><operator pos:line="199" pos:column="80">.<pos:position pos:line="199" pos:column="81"/></operator><name pos:line="199" pos:column="81">get<pos:position pos:line="199" pos:column="84"/></name></name><argument_list pos:line="199" pos:column="84">()<pos:position pos:line="199" pos:column="86"/></argument_list></call><operator pos:line="199" pos:column="86">-&gt;<pos:position pos:line="199" pos:column="91"/></operator><name pos:line="199" pos:column="88">data<pos:position pos:line="199" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="94">i<pos:position pos:line="199" pos:column="95"/></name></expr></argument>)<pos:position pos:line="199" pos:column="96"/></argument_list></call><operator pos:line="199" pos:column="96">)<pos:position pos:line="199" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="199" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">endif<pos:position pos:line="200" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">else<pos:position pos:line="201" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="202" pos:column="5">for <control pos:line="202" pos:column="9">(<init><decl><type><name pos:line="202" pos:column="10">int<pos:position pos:line="202" pos:column="13"/></name></type> <name pos:line="202" pos:column="14">i<pos:position pos:line="202" pos:column="15"/></name> <init pos:line="202" pos:column="16">= <expr><literal type="number" pos:line="202" pos:column="18">0<pos:position pos:line="202" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="202" pos:column="20"/></init> <condition><expr><name pos:line="202" pos:column="21">i<pos:position pos:line="202" pos:column="22"/></name> <operator pos:line="202" pos:column="23">&lt;<pos:position pos:line="202" pos:column="27"/></operator> <call><name pos:line="202" pos:column="25">sk_num<pos:position pos:line="202" pos:column="31"/></name><argument_list pos:line="202" pos:column="31">(<argument><expr><call><name><name pos:line="202" pos:column="32">db<pos:position pos:line="202" pos:column="34"/></name><operator pos:line="202" pos:column="34">.<pos:position pos:line="202" pos:column="35"/></operator><name pos:line="202" pos:column="35">get<pos:position pos:line="202" pos:column="38"/></name></name><argument_list pos:line="202" pos:column="38">()<pos:position pos:line="202" pos:column="40"/></argument_list></call><operator pos:line="202" pos:column="40">-&gt;<pos:position pos:line="202" pos:column="45"/></operator><name pos:line="202" pos:column="42">data<pos:position pos:line="202" pos:column="46"/></name></expr></argument>)<pos:position pos:line="202" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="48"/></condition> <incr><expr><operator pos:line="202" pos:column="49">++<pos:position pos:line="202" pos:column="51"/></operator><name pos:line="202" pos:column="51">i<pos:position pos:line="202" pos:column="52"/></name></expr></incr>)<pos:position pos:line="202" pos:column="53"/></control> <block pos:line="202" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="203" pos:column="9">const<pos:position pos:line="203" pos:column="14"/></specifier> <name pos:line="203" pos:column="15">char<pos:position pos:line="203" pos:column="19"/></name> <modifier pos:line="203" pos:column="20">*<pos:position pos:line="203" pos:column="21"/></modifier><modifier pos:line="203" pos:column="21">*<pos:position pos:line="203" pos:column="22"/></modifier></type> <name pos:line="203" pos:column="23">current_row<pos:position pos:line="203" pos:column="34"/></name> <init pos:line="203" pos:column="35">= <expr><operator pos:line="203" pos:column="37">(<pos:position pos:line="203" pos:column="38"/></operator><operator pos:line="203" pos:column="38">(<pos:position pos:line="203" pos:column="39"/></operator><specifier pos:line="203" pos:column="39">const<pos:position pos:line="203" pos:column="44"/></specifier> <name pos:line="203" pos:column="45">char<pos:position pos:line="203" pos:column="49"/></name> <operator pos:line="203" pos:column="50">*<pos:position pos:line="203" pos:column="51"/></operator><operator pos:line="203" pos:column="51">*<pos:position pos:line="203" pos:column="52"/></operator><operator pos:line="203" pos:column="52">)<pos:position pos:line="203" pos:column="53"/></operator><call><name pos:line="203" pos:column="53">sk_value<pos:position pos:line="203" pos:column="61"/></name><argument_list pos:line="203" pos:column="61">(<argument><expr><call><name><name pos:line="203" pos:column="62">db<pos:position pos:line="203" pos:column="64"/></name><operator pos:line="203" pos:column="64">.<pos:position pos:line="203" pos:column="65"/></operator><name pos:line="203" pos:column="65">get<pos:position pos:line="203" pos:column="68"/></name></name><argument_list pos:line="203" pos:column="68">()<pos:position pos:line="203" pos:column="70"/></argument_list></call><operator pos:line="203" pos:column="70">-&gt;<pos:position pos:line="203" pos:column="75"/></operator><name pos:line="203" pos:column="72">data<pos:position pos:line="203" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="203" pos:column="78">i<pos:position pos:line="203" pos:column="79"/></name></expr></argument>)<pos:position pos:line="203" pos:column="80"/></argument_list></call><operator pos:line="203" pos:column="80">)<pos:position pos:line="203" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="203" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="204" pos:column="1">#<cpp:directive pos:line="204" pos:column="2">endif<pos:position pos:line="204" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="205" pos:column="9">if <condition pos:line="205" pos:column="12">(<expr><name pos:line="205" pos:column="13">host<pos:position pos:line="205" pos:column="17"/></name> <operator pos:line="205" pos:column="18">==<pos:position pos:line="205" pos:column="20"/></operator> <name><name pos:line="205" pos:column="21">current_row<pos:position pos:line="205" pos:column="32"/></name><index pos:line="205" pos:column="32">[<expr><name pos:line="205" pos:column="33">cnlName<pos:position pos:line="205" pos:column="40"/></name></expr>]<pos:position pos:line="205" pos:column="41"/></index></name></expr>)<pos:position pos:line="205" pos:column="42"/></condition><then pos:line="205" pos:column="42"> <block pos:line="205" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="206" pos:column="13">deleteRow<pos:position pos:line="206" pos:column="22"/></name><argument_list pos:line="206" pos:column="22">(<argument><expr><name pos:line="206" pos:column="23">current_row<pos:position pos:line="206" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="36">i<pos:position pos:line="206" pos:column="37"/></name></expr></argument>)<pos:position pos:line="206" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="39"/></expr_stmt>
            <return pos:line="207" pos:column="13">return <expr><literal type="boolean" pos:line="207" pos:column="20">true<pos:position pos:line="207" pos:column="24"/></literal></expr>;<pos:position pos:line="207" pos:column="25"/></return>
        }<pos:position pos:line="208" pos:column="10"/></block></then></if>
    }<pos:position pos:line="209" pos:column="6"/></block></for>
    <return pos:line="210" pos:column="5">return <expr><literal type="boolean" pos:line="210" pos:column="12">false<pos:position pos:line="210" pos:column="17"/></literal></expr>;<pos:position pos:line="210" pos:column="18"/></return>
}<pos:position pos:line="211" pos:column="2"/></block></for>

<function><type><name pos:line="213" pos:column="1">bool<pos:position pos:line="213" pos:column="5"/></name></type> <name><name pos:line="213" pos:column="6">Ssl<pos:position pos:line="213" pos:column="9"/></name><operator pos:line="213" pos:column="9">::<pos:position pos:line="213" pos:column="11"/></operator><name pos:line="213" pos:column="11">CertificateDb<pos:position pos:line="213" pos:column="24"/></name><operator pos:line="213" pos:column="24">::<pos:position pos:line="213" pos:column="26"/></operator><name pos:line="213" pos:column="26">IsEnabledDiskStore<pos:position pos:line="213" pos:column="44"/></name></name><parameter_list pos:line="213" pos:column="44">()<pos:position pos:line="213" pos:column="46"/></parameter_list> <specifier pos:line="213" pos:column="47">const<pos:position pos:line="213" pos:column="52"/></specifier> <block pos:line="213" pos:column="53">{
    <return pos:line="214" pos:column="5">return <expr><name pos:line="214" pos:column="12">enabled_disk_store<pos:position pos:line="214" pos:column="30"/></name></expr>;<pos:position pos:line="214" pos:column="31"/></return>
}<pos:position pos:line="215" pos:column="2"/></block></function></block></function></block></function></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3233_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">PconnModule<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">dump<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">e<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="21">poolCount<pos:position pos:line="6" pos:column="30"/></name></expr>;<pos:position pos:line="6" pos:column="31"/></condition> <incr><expr><name pos:line="6" pos:column="32">i<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">++<pos:position pos:line="6" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="36"/></control> <block pos:line="6" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">storeAppendPrintf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">e<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"\n Pool %d Stats\n"<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">i<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><operator pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></operator><operator pos:line="8" pos:column="11">(<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">pools<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">+<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">i<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator><operator pos:line="8" pos:column="21">-&gt;<pos:position pos:line="8" pos:column="26"/></operator><call><name pos:line="8" pos:column="23">dumpHist<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">e<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">storeAppendPrintf<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">e<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="30">"\n Pool %d Hash Table\n"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>,<argument><expr><name pos:line="9" pos:column="56">i<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><operator pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></operator><operator pos:line="10" pos:column="11">(<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">pools<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">+<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">i<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator><operator pos:line="10" pos:column="20">)<pos:position pos:line="10" pos:column="21"/></operator><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><call><name pos:line="10" pos:column="23">dumpHash<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">e<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

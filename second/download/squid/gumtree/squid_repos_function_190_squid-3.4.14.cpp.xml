<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_190_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">match_group<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">char<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">dict_group<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">username<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">group<pos:position pos:line="4" pos:column="17"/></name></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">g<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>		<comment type="block" pos:line="4" pos:column="33">/* a struct to hold group entries */</comment>
    <expr_stmt><expr><operator pos:line="5" pos:column="5">++<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">dict_group<pos:position pos:line="5" pos:column="17"/></name></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>			<comment type="block" pos:line="5" pos:column="41">/* the @ should be the first char
				   so we rip it off by incrementing
				   * the pointer by one */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">g<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">getgrnam<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">dict_group<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <name pos:line="9" pos:column="39">NULL<pos:position pos:line="9" pos:column="43"/></name></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44"> <block pos:line="9" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debug<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="string" pos:line="10" pos:column="15">"Group does not exist '%s'\n"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">dict_group<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><operator pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></operator><operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><name><name pos:line="13" pos:column="18">g<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">gr_mem<pos:position pos:line="13" pos:column="27"/></name></name><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="29">!=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr>)<pos:position pos:line="13" pos:column="37"/></condition> <block pos:line="13" pos:column="38">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><call><name pos:line="14" pos:column="17">strcmp<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">(<pos:position pos:line="14" pos:column="26"/></operator><operator pos:line="14" pos:column="26">(<pos:position pos:line="14" pos:column="27"/></operator><name><name pos:line="14" pos:column="27">g<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">gr_mem<pos:position pos:line="14" pos:column="36"/></name></name><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator><operator pos:line="14" pos:column="37">++<pos:position pos:line="14" pos:column="39"/></operator><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">username<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call> <operator pos:line="14" pos:column="52">==<pos:position pos:line="14" pos:column="54"/></operator> <literal type="number" pos:line="14" pos:column="55">0<pos:position pos:line="14" pos:column="56"/></literal></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57"> <block pos:line="14" pos:column="58">{
                <return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
        }<pos:position pos:line="17" pos:column="10"/></block></while>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return>

}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_517_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">extern<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">snmplib_debug<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">lvl<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">fmt<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,<parameter><decl><type><modifier pos:line="2" pos:column="40">...<pos:position pos:line="2" pos:column="43"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">BUFSIZ<pos:position pos:line="4" pos:column="20"/></name></expr>]<pos:position pos:line="4" pos:column="21"/></index></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">va_list<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">args<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">va_start<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">args<pos:position pos:line="6" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="20">fmt<pos:position pos:line="6" pos:column="23"/></name></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">snmplib_debug_hook<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">!=<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">NULL<pos:position pos:line="8" pos:column="35"/></name></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <block pos:line="8" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">vsnprintf<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name pos:line="9" pos:column="19">buf<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">BUFSIZ<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">fmt<pos:position pos:line="9" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="37">args<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">snmplib_debug_hook<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">lvl<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">buf<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else <block pos:line="11" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">vfprintf<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">stderr<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="26">fmt<pos:position pos:line="12" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">args<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">va_end<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">args<pos:position pos:line="14" pos:column="16"/></name></expr></argument>)<pos:position pos:line="14" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

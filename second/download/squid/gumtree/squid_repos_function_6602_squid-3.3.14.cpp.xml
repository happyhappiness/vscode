<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6602_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">html_quote<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">string<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">buf<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">size_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">bufsize<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="number" pos:line="5" pos:column="29">0<pos:position pos:line="5" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">src<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">dst<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* XXX This really should be implemented using a MemPool, but
     * MemPools are not yet available in lib...
     */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">buf<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">==<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">||<pos:position pos:line="13" pos:column="23"/></operator> <call><name pos:line="13" pos:column="24">strlen<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">string<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call> <operator pos:line="13" pos:column="39">*<pos:position pos:line="13" pos:column="40"/></operator> <literal type="number" pos:line="13" pos:column="41">6<pos:position pos:line="13" pos:column="42"/></literal> <operator pos:line="13" pos:column="43">&gt;<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="45">bufsize<pos:position pos:line="13" pos:column="52"/></name></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53"> <block pos:line="13" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">xfree<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">buf<pos:position pos:line="14" pos:column="18"/></name></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">bufsize<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <call><name pos:line="15" pos:column="19">strlen<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">string<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">*<pos:position pos:line="15" pos:column="35"/></operator> <literal type="number" pos:line="15" pos:column="36">6<pos:position pos:line="15" pos:column="37"/></literal> <operator pos:line="15" pos:column="38">+<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">1<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">buf<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">xcalloc<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">bufsize<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="32">1<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <for pos:line="18" pos:column="5">for <control pos:line="18" pos:column="9">(<init><expr><name pos:line="18" pos:column="10">src<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">string<pos:position pos:line="18" pos:column="22"/></name></expr><operator pos:line="18" pos:column="22">,<pos:position pos:line="18" pos:column="23"/></operator> <expr><name pos:line="18" pos:column="24">dst<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">buf<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></init> <condition><expr><operator pos:line="18" pos:column="35">*<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">src<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></condition> <incr><expr><name pos:line="18" pos:column="41">src<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">++<pos:position pos:line="18" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="47"/></control> <block pos:line="18" pos:column="48">{
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">escape<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><name pos:line="19" pos:column="30">NULL<pos:position pos:line="19" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="20" pos:column="9">const<pos:position pos:line="20" pos:column="14"/></specifier> <name pos:line="20" pos:column="15">unsigned<pos:position pos:line="20" pos:column="23"/></name> <name pos:line="20" pos:column="24">char<pos:position pos:line="20" pos:column="28"/></name></type> <name pos:line="20" pos:column="29">ch<pos:position pos:line="20" pos:column="31"/></name> <init pos:line="20" pos:column="32">= <expr><operator pos:line="20" pos:column="34">*<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">src<pos:position pos:line="20" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="39"/></decl_stmt>

        <comment type="block" pos:line="22" pos:column="9">/* Walk thru the list of HTML Entities that must be quoted to
         * display safely
         */</comment>
        <for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name><name pos:line="25" pos:column="21">htmlstandardentities<pos:position pos:line="25" pos:column="41"/></name><index pos:line="25" pos:column="41">[<expr><name pos:line="25" pos:column="42">i<pos:position pos:line="25" pos:column="43"/></name></expr>]<pos:position pos:line="25" pos:column="44"/></index></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">code<pos:position pos:line="25" pos:column="49"/></name></expr>;<pos:position pos:line="25" pos:column="50"/></condition> <incr><expr><name pos:line="25" pos:column="51">i<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">++<pos:position pos:line="25" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="55"/></control> <block pos:line="25" pos:column="56">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">ch<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">==<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">htmlstandardentities<pos:position pos:line="26" pos:column="43"/></name><index pos:line="26" pos:column="43">[<expr><name pos:line="26" pos:column="44">i<pos:position pos:line="26" pos:column="45"/></name></expr>]<pos:position pos:line="26" pos:column="46"/></index></name><operator pos:line="26" pos:column="46">.<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">code<pos:position pos:line="26" pos:column="51"/></name></expr>)<pos:position pos:line="26" pos:column="52"/></condition><then pos:line="26" pos:column="52"> <block pos:line="26" pos:column="53">{
                <expr_stmt><expr><name pos:line="27" pos:column="17">escape<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <name><name pos:line="27" pos:column="26">htmlstandardentities<pos:position pos:line="27" pos:column="46"/></name><index pos:line="27" pos:column="46">[<expr><name pos:line="27" pos:column="47">i<pos:position pos:line="27" pos:column="48"/></name></expr>]<pos:position pos:line="27" pos:column="49"/></index></name><operator pos:line="27" pos:column="49">.<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">quote<pos:position pos:line="27" pos:column="55"/></name></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
                <break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></for>
        <comment type="block" pos:line="31" pos:column="9">/* Encode control chars just to be on the safe side, and make
         * sure all 8-bit characters are encoded to protect from buggy
         * clients
         */</comment>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">escape<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">&amp;&amp;<pos:position pos:line="35" pos:column="31"/></operator> <operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">ch<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">&lt;=<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="31">0x1F<pos:position pos:line="35" pos:column="35"/></literal> <operator pos:line="35" pos:column="36">||<pos:position pos:line="35" pos:column="38"/></operator> <name pos:line="35" pos:column="39">ch<pos:position pos:line="35" pos:column="41"/></name> <operator pos:line="35" pos:column="42">&gt;=<pos:position pos:line="35" pos:column="47"/></operator> <literal type="number" pos:line="35" pos:column="45">0x7f<pos:position pos:line="35" pos:column="49"/></literal><operator pos:line="35" pos:column="49">)<pos:position pos:line="35" pos:column="50"/></operator> <operator pos:line="35" pos:column="51">&amp;&amp;<pos:position pos:line="35" pos:column="61"/></operator> <name pos:line="35" pos:column="54">ch<pos:position pos:line="35" pos:column="56"/></name> <operator pos:line="35" pos:column="57">!=<pos:position pos:line="35" pos:column="59"/></operator> <literal type="char" pos:line="35" pos:column="60">'\n'<pos:position pos:line="35" pos:column="64"/></literal> <operator pos:line="35" pos:column="65">&amp;&amp;<pos:position pos:line="35" pos:column="75"/></operator> <name pos:line="35" pos:column="68">ch<pos:position pos:line="35" pos:column="70"/></name> <operator pos:line="35" pos:column="71">!=<pos:position pos:line="35" pos:column="73"/></operator> <literal type="char" pos:line="35" pos:column="74">'\r'<pos:position pos:line="35" pos:column="78"/></literal> <operator pos:line="35" pos:column="79">&amp;&amp;<pos:position pos:line="35" pos:column="89"/></operator> <name pos:line="35" pos:column="82">ch<pos:position pos:line="35" pos:column="84"/></name> <operator pos:line="35" pos:column="85">!=<pos:position pos:line="35" pos:column="87"/></operator> <literal type="char" pos:line="35" pos:column="88">'\t'<pos:position pos:line="35" pos:column="92"/></literal></expr>)<pos:position pos:line="35" pos:column="93"/></condition><then pos:line="35" pos:column="93"> <block pos:line="35" pos:column="94">{
            <decl_stmt><decl><specifier pos:line="36" pos:column="13">static<pos:position pos:line="36" pos:column="19"/></specifier> <type><name pos:line="36" pos:column="20">char<pos:position pos:line="36" pos:column="24"/></name></type> <name><name pos:line="36" pos:column="25">dec_encoded<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><literal type="number" pos:line="36" pos:column="37">7<pos:position pos:line="36" pos:column="38"/></literal></expr>]<pos:position pos:line="36" pos:column="39"/></index></name></decl>;<pos:position pos:line="36" pos:column="40"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">snprintf<pos:position pos:line="37" pos:column="21"/></name><argument_list pos:line="37" pos:column="21">(<argument><expr><name pos:line="37" pos:column="22">dec_encoded<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="35">sizeof <name pos:line="37" pos:column="42">dec_encoded<pos:position pos:line="37" pos:column="53"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="55">"&amp;#%3d;"<pos:position pos:line="37" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="65">(<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="66">int<pos:position pos:line="37" pos:column="69"/></name><operator pos:line="37" pos:column="69">)<pos:position pos:line="37" pos:column="70"/></operator> <name pos:line="37" pos:column="71">ch<pos:position pos:line="37" pos:column="73"/></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name pos:line="38" pos:column="13">escape<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">dec_encoded<pos:position pos:line="38" pos:column="33"/></name></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">escape<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
            <comment type="block" pos:line="41" pos:column="13">/* Ok, An escaped form was found above. Use it */</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">strncpy<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">dst<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="26">escape<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="34">6<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="43" pos:column="13">dst<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">+=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">strlen<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">escape<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
            <comment type="block" pos:line="45" pos:column="13">/* Apparently there is no need to escape this character */</comment>
            <expr_stmt><expr><operator pos:line="46" pos:column="13">*<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">dst<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">++<pos:position pos:line="46" pos:column="19"/></operator> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <name pos:line="46" pos:column="22">ch<pos:position pos:line="46" pos:column="24"/></name></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></for>
    <comment type="block" pos:line="49" pos:column="5">/* Nullterminate and return the result */</comment>
    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">dst<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">=<pos:position pos:line="50" pos:column="11"/></operator> <literal type="char" pos:line="50" pos:column="12">'\0'<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">buf<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">)<pos:position pos:line="51" pos:column="17"/></operator></expr>;<pos:position pos:line="51" pos:column="18"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

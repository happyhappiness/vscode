<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_999.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parseProxy2p0<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name><name pos:line="4" pos:column="18">SBuf<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">::<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">size_type<pos:position pos:line="4" pos:column="33"/></name></name></type> <name pos:line="4" pos:column="34">prefixLen<pos:position pos:line="4" pos:column="43"/></name> <init pos:line="4" pos:column="44">= <expr><call><name><name pos:line="4" pos:column="46">Proxy2p0magic<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">.<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="60">length<pos:position pos:line="4" pos:column="66"/></name></name><argument_list pos:line="4" pos:column="66">()<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">in<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">.<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">buf<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">length<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call> <operator pos:line="5" pos:column="25">&lt;<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="27">prefixLen<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">+<pos:position pos:line="5" pos:column="38"/></operator> <literal type="number" pos:line="5" pos:column="39">4<pos:position pos:line="5" pos:column="40"/></literal></expr>)<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="6" pos:column="23">// need more bytes</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">in<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">buf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><name pos:line="8" pos:column="17">prefixLen<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name> <operator pos:line="8" pos:column="28">&amp;<pos:position pos:line="8" pos:column="33"/></operator> <literal type="number" pos:line="8" pos:column="30">0xF0<pos:position pos:line="8" pos:column="34"/></literal><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator> <operator pos:line="8" pos:column="36">!=<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">0x20<pos:position pos:line="8" pos:column="43"/></literal></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <comment type="line" pos:line="8" pos:column="45">// version == 2 is mandatory</comment>
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">proxyProtocolError<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><literal type="string" pos:line="9" pos:column="35">"PROXY/2.0 error: invalid version"<pos:position pos:line="9" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">command<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><operator pos:line="11" pos:column="26">(<pos:position pos:line="11" pos:column="27"/></operator><name><name pos:line="11" pos:column="27">in<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">buf<pos:position pos:line="11" pos:column="33"/></name><index pos:line="11" pos:column="33">[<expr><name pos:line="11" pos:column="34">prefixLen<pos:position pos:line="11" pos:column="43"/></name></expr>]<pos:position pos:line="11" pos:column="44"/></index></name> <operator pos:line="11" pos:column="45">&amp;<pos:position pos:line="11" pos:column="50"/></operator> <literal type="number" pos:line="11" pos:column="47">0x0F<pos:position pos:line="11" pos:column="51"/></literal><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">command<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&amp;<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="20">0xFE<pos:position pos:line="12" pos:column="24"/></literal><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">!=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">0x00<pos:position pos:line="12" pos:column="33"/></literal></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <comment type="line" pos:line="12" pos:column="35">// values other than 0x0-0x1 are invalid</comment>
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">proxyProtocolError<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><literal type="string" pos:line="13" pos:column="35">"PROXY/2.0 error: invalid command"<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">family<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><name><name pos:line="15" pos:column="26">in<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">buf<pos:position pos:line="15" pos:column="32"/></name><index pos:line="15" pos:column="32">[<expr><name pos:line="15" pos:column="33">prefixLen<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">+<pos:position pos:line="15" pos:column="43"/></operator><literal type="number" pos:line="15" pos:column="43">1<pos:position pos:line="15" pos:column="44"/></literal></expr>]<pos:position pos:line="15" pos:column="45"/></index></name> <operator pos:line="15" pos:column="46">&amp;<pos:position pos:line="15" pos:column="51"/></operator> <literal type="number" pos:line="15" pos:column="48">0xF0<pos:position pos:line="15" pos:column="52"/></literal><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator> <operator pos:line="15" pos:column="54">&gt;&gt;<pos:position pos:line="15" pos:column="59"/></operator><literal type="number" pos:line="15" pos:column="56">4<pos:position pos:line="15" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="58"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">family<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&gt;<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="18">0x3<pos:position pos:line="16" pos:column="21"/></literal></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <comment type="line" pos:line="16" pos:column="23">// values other than 0x0-0x3 are invalid</comment>
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><call><name pos:line="17" pos:column="16">proxyProtocolError<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><literal type="string" pos:line="17" pos:column="35">"PROXY/2.0 error: invalid family"<pos:position pos:line="17" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">char<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">proto<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name><name pos:line="19" pos:column="25">in<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">buf<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">prefixLen<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">+<pos:position pos:line="19" pos:column="42"/></operator><literal type="number" pos:line="19" pos:column="42">1<pos:position pos:line="19" pos:column="43"/></literal></expr>]<pos:position pos:line="19" pos:column="44"/></index></name> <operator pos:line="19" pos:column="45">&amp;<pos:position pos:line="19" pos:column="50"/></operator> <literal type="number" pos:line="19" pos:column="47">0x0F<pos:position pos:line="19" pos:column="51"/></literal><operator pos:line="19" pos:column="51">)<pos:position pos:line="19" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="19" pos:column="53"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">proto<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&gt;<pos:position pos:line="20" pos:column="19"/></operator> <literal type="number" pos:line="20" pos:column="17">0x2<pos:position pos:line="20" pos:column="20"/></literal></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21"> <comment type="line" pos:line="20" pos:column="22">// values other than 0x0-0x2 are invalid</comment>
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">proxyProtocolError<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><literal type="string" pos:line="21" pos:column="35">"PROXY/2.0 error: invalid protocol type"<pos:position pos:line="21" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">clen<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><call><name><name pos:line="23" pos:column="24">in<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">buf<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">rawContent<pos:position pos:line="23" pos:column="41"/></name></name><argument_list pos:line="23" pos:column="41">()<pos:position pos:line="23" pos:column="43"/></argument_list></call> <operator pos:line="23" pos:column="44">+<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">prefixLen<pos:position pos:line="23" pos:column="55"/></name> <operator pos:line="23" pos:column="56">+<pos:position pos:line="23" pos:column="57"/></operator> <literal type="number" pos:line="23" pos:column="58">2<pos:position pos:line="23" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">uint16_t<pos:position pos:line="24" pos:column="13"/></name></type> <name pos:line="24" pos:column="14">len<pos:position pos:line="24" pos:column="17"/></name></decl>;<pos:position pos:line="24" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">memcpy<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><operator pos:line="25" pos:column="12">&amp;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="13">len<pos:position pos:line="25" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="18">clen<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="24">sizeof<argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">len<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">len<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">ntohs<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">len<pos:position pos:line="26" pos:column="20"/></name></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name><name pos:line="28" pos:column="9">in<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">.<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="12">buf<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">.<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">length<pos:position pos:line="28" pos:column="22"/></name></name><argument_list pos:line="28" pos:column="22">()<pos:position pos:line="28" pos:column="24"/></argument_list></call> <operator pos:line="28" pos:column="25">&lt;<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="27">prefixLen<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">+<pos:position pos:line="28" pos:column="38"/></operator> <literal type="number" pos:line="28" pos:column="39">4<pos:position pos:line="28" pos:column="40"/></literal> <operator pos:line="28" pos:column="41">+<pos:position pos:line="28" pos:column="42"/></operator> <name pos:line="28" pos:column="43">len<pos:position pos:line="28" pos:column="46"/></name></expr>)<pos:position pos:line="28" pos:column="47"/></condition><then pos:line="28" pos:column="47">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><literal type="boolean" pos:line="29" pos:column="16">false<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="29" pos:column="23">// need more bytes</comment>

    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">in<pos:position pos:line="31" pos:column="7"/></name><operator pos:line="31" pos:column="7">.<pos:position pos:line="31" pos:column="8"/></operator><name pos:line="31" pos:column="8">buf<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">consume<pos:position pos:line="31" pos:column="19"/></name></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">prefixLen<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">+<pos:position pos:line="31" pos:column="31"/></operator> <literal type="number" pos:line="31" pos:column="32">4<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt> <comment type="line" pos:line="31" pos:column="36">// 4 being the extra bytes</comment>
    <decl_stmt><decl><type><specifier pos:line="32" pos:column="5">const<pos:position pos:line="32" pos:column="10"/></specifier> <name pos:line="32" pos:column="11">SBuf<pos:position pos:line="32" pos:column="15"/></name></type> <name pos:line="32" pos:column="16">extra<pos:position pos:line="32" pos:column="21"/></name> <init pos:line="32" pos:column="22">= <expr><call><name><name pos:line="32" pos:column="24">in<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">.<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">buf<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">.<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">consume<pos:position pos:line="32" pos:column="38"/></name></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">len<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">needProxyProtocolHeader_<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <literal type="boolean" pos:line="33" pos:column="32">false<pos:position pos:line="33" pos:column="37"/></literal></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt> <comment type="line" pos:line="33" pos:column="39">// found successfully</comment>

    <comment type="line" pos:line="35" pos:column="5">// LOCAL connections do nothing with the extras</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">command<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">==<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="20">0x00<pos:position pos:line="36" pos:column="24"/></literal></expr><comment type="block" pos:line="36" pos:column="24">/* LOCAL*/</comment>)<pos:position pos:line="36" pos:column="35"/></condition><then pos:line="36" pos:column="35">
        <block type="pseudo"><return pos:line="37" pos:column="9">return <expr><literal type="boolean" pos:line="37" pos:column="16">true<pos:position pos:line="37" pos:column="20"/></literal></expr>;<pos:position pos:line="37" pos:column="21"/></return></block></then></if>

    <union pos:line="39" pos:column="5">union <name pos:line="39" pos:column="11">pax<pos:position pos:line="39" pos:column="14"/></name> <block pos:line="39" pos:column="15">{<public type="default" pos:line="39" pos:column="16">
        <struct pos:line="40" pos:column="9">struct <block pos:line="40" pos:column="16">{<public type="default" pos:line="40" pos:column="17">        <comment type="block" pos:line="40" pos:column="25">/* for TCP/UDP over IPv4, len = 12 */</comment>
            <decl_stmt><decl><type><name><name pos:line="41" pos:column="13">struct<pos:position pos:line="41" pos:column="19"/></name> <name pos:line="41" pos:column="20">in_addr<pos:position pos:line="41" pos:column="27"/></name></name></type> <name pos:line="41" pos:column="28">src_addr<pos:position pos:line="41" pos:column="36"/></name></decl>;<pos:position pos:line="41" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="42" pos:column="13">struct<pos:position pos:line="42" pos:column="19"/></name> <name pos:line="42" pos:column="20">in_addr<pos:position pos:line="42" pos:column="27"/></name></name></type> <name pos:line="42" pos:column="28">dst_addr<pos:position pos:line="42" pos:column="36"/></name></decl>;<pos:position pos:line="42" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="43" pos:column="13">uint16_t<pos:position pos:line="43" pos:column="21"/></name></type> <name pos:line="43" pos:column="22">src_port<pos:position pos:line="43" pos:column="30"/></name></decl>;<pos:position pos:line="43" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">uint16_t<pos:position pos:line="44" pos:column="21"/></name></type> <name pos:line="44" pos:column="22">dst_port<pos:position pos:line="44" pos:column="30"/></name></decl>;<pos:position pos:line="44" pos:column="31"/></decl_stmt>
        <pos:position pos:line="45" pos:column="9"/></public>}<pos:position pos:line="45" pos:column="10"/></block> <decl><name pos:line="45" pos:column="11">ipv4_addr<pos:position pos:line="45" pos:column="20"/></name></decl>;<pos:position pos:line="45" pos:column="21"/></struct>
        <struct pos:line="46" pos:column="9">struct <block pos:line="46" pos:column="16">{<public type="default" pos:line="46" pos:column="17">        <comment type="block" pos:line="46" pos:column="25">/* for TCP/UDP over IPv6, len = 36 */</comment>
            <decl_stmt><decl><type><name><name pos:line="47" pos:column="13">struct<pos:position pos:line="47" pos:column="19"/></name> <name pos:line="47" pos:column="20">in6_addr<pos:position pos:line="47" pos:column="28"/></name></name></type> <name pos:line="47" pos:column="29">src_addr<pos:position pos:line="47" pos:column="37"/></name></decl>;<pos:position pos:line="47" pos:column="38"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="48" pos:column="13">struct<pos:position pos:line="48" pos:column="19"/></name> <name pos:line="48" pos:column="20">in6_addr<pos:position pos:line="48" pos:column="28"/></name></name></type> <name pos:line="48" pos:column="29">dst_addr<pos:position pos:line="48" pos:column="37"/></name></decl>;<pos:position pos:line="48" pos:column="38"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">uint16_t<pos:position pos:line="49" pos:column="21"/></name></type> <name pos:line="49" pos:column="22">src_port<pos:position pos:line="49" pos:column="30"/></name></decl>;<pos:position pos:line="49" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="50" pos:column="13">uint16_t<pos:position pos:line="50" pos:column="21"/></name></type> <name pos:line="50" pos:column="22">dst_port<pos:position pos:line="50" pos:column="30"/></name></decl>;<pos:position pos:line="50" pos:column="31"/></decl_stmt>
        <pos:position pos:line="51" pos:column="9"/></public>}<pos:position pos:line="51" pos:column="10"/></block> <decl><name pos:line="51" pos:column="11">ipv6_addr<pos:position pos:line="51" pos:column="20"/></name></decl>;<pos:position pos:line="51" pos:column="21"/></struct>
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">NOT_SUPPORTED<pos:position pos:line="52" pos:column="18"/></name></expr></cpp:if>
        <struct pos:line="53" pos:column="9">struct <block pos:line="53" pos:column="16">{<public type="default" pos:line="53" pos:column="17">        <comment type="block" pos:line="53" pos:column="25">/* for AF_UNIX sockets, len = 216 */</comment>
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">uint8_t<pos:position pos:line="54" pos:column="20"/></name></type> <name><name pos:line="54" pos:column="21">src_addr<pos:position pos:line="54" pos:column="29"/></name><index pos:line="54" pos:column="29">[<expr><literal type="number" pos:line="54" pos:column="30">108<pos:position pos:line="54" pos:column="33"/></literal></expr>]<pos:position pos:line="54" pos:column="34"/></index></name></decl>;<pos:position pos:line="54" pos:column="35"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">uint8_t<pos:position pos:line="55" pos:column="20"/></name></type> <name><name pos:line="55" pos:column="21">dst_addr<pos:position pos:line="55" pos:column="29"/></name><index pos:line="55" pos:column="29">[<expr><literal type="number" pos:line="55" pos:column="30">108<pos:position pos:line="55" pos:column="33"/></literal></expr>]<pos:position pos:line="55" pos:column="34"/></index></name></decl>;<pos:position pos:line="55" pos:column="35"/></decl_stmt>
        <pos:position pos:line="56" pos:column="9"/></public>}<pos:position pos:line="56" pos:column="10"/></block> <decl><name pos:line="56" pos:column="11">unix_addr<pos:position pos:line="56" pos:column="20"/></name></decl>;<pos:position pos:line="56" pos:column="21"/></struct>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
    <pos:position pos:line="58" pos:column="5"/></public>}<pos:position pos:line="58" pos:column="6"/></block>;<pos:position pos:line="58" pos:column="7"/></union>

    <decl_stmt><decl><type><name pos:line="60" pos:column="5">pax<pos:position pos:line="60" pos:column="8"/></name></type> <name pos:line="60" pos:column="9">ipu<pos:position pos:line="60" pos:column="12"/></name></decl>;<pos:position pos:line="60" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">memcpy<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><operator pos:line="61" pos:column="12">&amp;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="13">ipu<pos:position pos:line="61" pos:column="16"/></name></expr></argument>, <argument><expr><call><name><name pos:line="61" pos:column="18">extra<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">rawContent<pos:position pos:line="61" pos:column="34"/></name></name><argument_list pos:line="61" pos:column="34">()<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="38">sizeof<argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">pax<pos:position pos:line="61" pos:column="48"/></name></expr></argument>)<pos:position pos:line="61" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>

    <comment type="line" pos:line="63" pos:column="5">// replace the client connection values</comment>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">debugs<pos:position pos:line="64" pos:column="11"/></name><argument_list pos:line="64" pos:column="11">(<argument><expr><literal type="number" pos:line="64" pos:column="12">33<pos:position pos:line="64" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="16">5<pos:position pos:line="64" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="19">"PROXY/2.0 protocol on connection "<pos:position pos:line="64" pos:column="54"/></literal> <operator pos:line="64" pos:column="55">&lt;&lt;<pos:position pos:line="64" pos:column="63"/></operator> <name pos:line="64" pos:column="58">clientConnection<pos:position pos:line="64" pos:column="74"/></name></expr></argument>)<pos:position pos:line="64" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="76"/></expr_stmt>
    <switch pos:line="65" pos:column="5">switch <condition pos:line="65" pos:column="12">(<expr><name pos:line="65" pos:column="13">family<pos:position pos:line="65" pos:column="19"/></name></expr>)<pos:position pos:line="65" pos:column="20"/></condition> <block pos:line="65" pos:column="21">{
    <case pos:line="66" pos:column="5">case <expr><literal type="number" pos:line="66" pos:column="10">0x1<pos:position pos:line="66" pos:column="13"/></literal></expr>:<pos:position pos:line="66" pos:column="14"/></case> <comment type="line" pos:line="66" pos:column="15">// IPv4</comment>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">clientConnection<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">-&gt;<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="27">local<pos:position pos:line="67" pos:column="32"/></name></name> <operator pos:line="67" pos:column="33">=<pos:position pos:line="67" pos:column="34"/></operator> <name><name pos:line="67" pos:column="35">ipu<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">.<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="39">ipv4_addr<pos:position pos:line="67" pos:column="48"/></name><operator pos:line="67" pos:column="48">.<pos:position pos:line="67" pos:column="49"/></operator><name pos:line="67" pos:column="49">dst_addr<pos:position pos:line="67" pos:column="57"/></name></name></expr>;<pos:position pos:line="67" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">clientConnection<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">local<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">.<pos:position pos:line="68" pos:column="33"/></operator><name pos:line="68" pos:column="33">port<pos:position pos:line="68" pos:column="37"/></name></name><argument_list pos:line="68" pos:column="37">(<argument><expr><call><name pos:line="68" pos:column="38">ntohs<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><name><name pos:line="68" pos:column="44">ipu<pos:position pos:line="68" pos:column="47"/></name><operator pos:line="68" pos:column="47">.<pos:position pos:line="68" pos:column="48"/></operator><name pos:line="68" pos:column="48">ipv4_addr<pos:position pos:line="68" pos:column="57"/></name><operator pos:line="68" pos:column="57">.<pos:position pos:line="68" pos:column="58"/></operator><name pos:line="68" pos:column="58">dst_port<pos:position pos:line="68" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">clientConnection<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">-&gt;<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="27">remote<pos:position pos:line="69" pos:column="33"/></name></name> <operator pos:line="69" pos:column="34">=<pos:position pos:line="69" pos:column="35"/></operator> <name><name pos:line="69" pos:column="36">ipu<pos:position pos:line="69" pos:column="39"/></name><operator pos:line="69" pos:column="39">.<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="40">ipv4_addr<pos:position pos:line="69" pos:column="49"/></name><operator pos:line="69" pos:column="49">.<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="50">src_addr<pos:position pos:line="69" pos:column="58"/></name></name></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="70" pos:column="9">clientConnection<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">-&gt;<pos:position pos:line="70" pos:column="30"/></operator><name pos:line="70" pos:column="27">remote<pos:position pos:line="70" pos:column="33"/></name><operator pos:line="70" pos:column="33">.<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">port<pos:position pos:line="70" pos:column="38"/></name></name><argument_list pos:line="70" pos:column="38">(<argument><expr><call><name pos:line="70" pos:column="39">ntohs<pos:position pos:line="70" pos:column="44"/></name><argument_list pos:line="70" pos:column="44">(<argument><expr><name><name pos:line="70" pos:column="45">ipu<pos:position pos:line="70" pos:column="48"/></name><operator pos:line="70" pos:column="48">.<pos:position pos:line="70" pos:column="49"/></operator><name pos:line="70" pos:column="49">ipv4_addr<pos:position pos:line="70" pos:column="58"/></name><operator pos:line="70" pos:column="58">.<pos:position pos:line="70" pos:column="59"/></operator><name pos:line="70" pos:column="59">src_port<pos:position pos:line="70" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><operator pos:line="71" pos:column="13">(<pos:position pos:line="71" pos:column="14"/></operator><name><name pos:line="71" pos:column="14">clientConnection<pos:position pos:line="71" pos:column="30"/></name><operator pos:line="71" pos:column="30">-&gt;<pos:position pos:line="71" pos:column="35"/></operator><name pos:line="71" pos:column="32">flags<pos:position pos:line="71" pos:column="37"/></name></name> <operator pos:line="71" pos:column="38">&amp;<pos:position pos:line="71" pos:column="43"/></operator> <name pos:line="71" pos:column="40">COMM_TRANSPARENT<pos:position pos:line="71" pos:column="56"/></name><operator pos:line="71" pos:column="56">)<pos:position pos:line="71" pos:column="57"/></operator></expr>)<pos:position pos:line="71" pos:column="58"/></condition><then pos:line="71" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="13">clientConnection<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">-&gt;<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="31">flags<pos:position pos:line="72" pos:column="36"/></name></name> <operator pos:line="72" pos:column="37">^=<pos:position pos:line="72" pos:column="39"/></operator> <name pos:line="72" pos:column="40">COMM_TRANSPARENT<pos:position pos:line="72" pos:column="56"/></name></expr>;<pos:position pos:line="72" pos:column="57"/></expr_stmt></block></then></if> <comment type="line" pos:line="72" pos:column="58">// prevent TPROXY spoofing of this new IP.</comment>
        <break pos:line="73" pos:column="9">break;<pos:position pos:line="73" pos:column="15"/></break>
    <case pos:line="74" pos:column="5">case <expr><literal type="number" pos:line="74" pos:column="10">0x2<pos:position pos:line="74" pos:column="13"/></literal></expr>:<pos:position pos:line="74" pos:column="14"/></case> <comment type="line" pos:line="74" pos:column="15">// IPv6</comment>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">clientConnection<pos:position pos:line="75" pos:column="25"/></name><operator pos:line="75" pos:column="25">-&gt;<pos:position pos:line="75" pos:column="30"/></operator><name pos:line="75" pos:column="27">local<pos:position pos:line="75" pos:column="32"/></name></name> <operator pos:line="75" pos:column="33">=<pos:position pos:line="75" pos:column="34"/></operator> <name><name pos:line="75" pos:column="35">ipu<pos:position pos:line="75" pos:column="38"/></name><operator pos:line="75" pos:column="38">.<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="39">ipv6_addr<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">.<pos:position pos:line="75" pos:column="49"/></operator><name pos:line="75" pos:column="49">dst_addr<pos:position pos:line="75" pos:column="57"/></name></name></expr>;<pos:position pos:line="75" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="76" pos:column="9">clientConnection<pos:position pos:line="76" pos:column="25"/></name><operator pos:line="76" pos:column="25">-&gt;<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="27">local<pos:position pos:line="76" pos:column="32"/></name><operator pos:line="76" pos:column="32">.<pos:position pos:line="76" pos:column="33"/></operator><name pos:line="76" pos:column="33">port<pos:position pos:line="76" pos:column="37"/></name></name><argument_list pos:line="76" pos:column="37">(<argument><expr><call><name pos:line="76" pos:column="38">ntohs<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument><expr><name><name pos:line="76" pos:column="44">ipu<pos:position pos:line="76" pos:column="47"/></name><operator pos:line="76" pos:column="47">.<pos:position pos:line="76" pos:column="48"/></operator><name pos:line="76" pos:column="48">ipv6_addr<pos:position pos:line="76" pos:column="57"/></name><operator pos:line="76" pos:column="57">.<pos:position pos:line="76" pos:column="58"/></operator><name pos:line="76" pos:column="58">dst_port<pos:position pos:line="76" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">clientConnection<pos:position pos:line="77" pos:column="25"/></name><operator pos:line="77" pos:column="25">-&gt;<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="27">remote<pos:position pos:line="77" pos:column="33"/></name></name> <operator pos:line="77" pos:column="34">=<pos:position pos:line="77" pos:column="35"/></operator> <name><name pos:line="77" pos:column="36">ipu<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">.<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="40">ipv6_addr<pos:position pos:line="77" pos:column="49"/></name><operator pos:line="77" pos:column="49">.<pos:position pos:line="77" pos:column="50"/></operator><name pos:line="77" pos:column="50">src_addr<pos:position pos:line="77" pos:column="58"/></name></name></expr>;<pos:position pos:line="77" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="78" pos:column="9">clientConnection<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">remote<pos:position pos:line="78" pos:column="33"/></name><operator pos:line="78" pos:column="33">.<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="34">port<pos:position pos:line="78" pos:column="38"/></name></name><argument_list pos:line="78" pos:column="38">(<argument><expr><call><name pos:line="78" pos:column="39">ntohs<pos:position pos:line="78" pos:column="44"/></name><argument_list pos:line="78" pos:column="44">(<argument><expr><name><name pos:line="78" pos:column="45">ipu<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">.<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="49">ipv6_addr<pos:position pos:line="78" pos:column="58"/></name><operator pos:line="78" pos:column="58">.<pos:position pos:line="78" pos:column="59"/></operator><name pos:line="78" pos:column="59">src_port<pos:position pos:line="78" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="70"/></expr_stmt>
        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><operator pos:line="79" pos:column="13">(<pos:position pos:line="79" pos:column="14"/></operator><name><name pos:line="79" pos:column="14">clientConnection<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">flags<pos:position pos:line="79" pos:column="37"/></name></name> <operator pos:line="79" pos:column="38">&amp;<pos:position pos:line="79" pos:column="43"/></operator> <name pos:line="79" pos:column="40">COMM_TRANSPARENT<pos:position pos:line="79" pos:column="56"/></name><operator pos:line="79" pos:column="56">)<pos:position pos:line="79" pos:column="57"/></operator></expr>)<pos:position pos:line="79" pos:column="58"/></condition><then pos:line="79" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="13">clientConnection<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">-&gt;<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="31">flags<pos:position pos:line="80" pos:column="36"/></name></name> <operator pos:line="80" pos:column="37">^=<pos:position pos:line="80" pos:column="39"/></operator> <name pos:line="80" pos:column="40">COMM_TRANSPARENT<pos:position pos:line="80" pos:column="56"/></name></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt></block></then></if> <comment type="line" pos:line="80" pos:column="58">// prevent TPROXY spoofing of this new IP.</comment>
        <break pos:line="81" pos:column="9">break;<pos:position pos:line="81" pos:column="15"/></break>
    <default pos:line="82" pos:column="5">default:<pos:position pos:line="82" pos:column="13"/></default> <comment type="line" pos:line="82" pos:column="14">// do nothing</comment>
        <break pos:line="83" pos:column="9">break;<pos:position pos:line="83" pos:column="15"/></break>
    }<pos:position pos:line="84" pos:column="6"/></block></switch>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">debugs<pos:position pos:line="85" pos:column="11"/></name><argument_list pos:line="85" pos:column="11">(<argument><expr><literal type="number" pos:line="85" pos:column="12">33<pos:position pos:line="85" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="16">5<pos:position pos:line="85" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="19">"PROXY/2.0 upgrade: "<pos:position pos:line="85" pos:column="40"/></literal> <operator pos:line="85" pos:column="41">&lt;&lt;<pos:position pos:line="85" pos:column="49"/></operator> <name pos:line="85" pos:column="44">clientConnection<pos:position pos:line="85" pos:column="60"/></name></expr></argument>)<pos:position pos:line="85" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="62"/></expr_stmt>

    <comment type="line" pos:line="87" pos:column="5">// repeat fetch ensuring the new client FQDN can be logged</comment>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name><name pos:line="88" pos:column="9">Config<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">.<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">onoff<pos:position pos:line="88" pos:column="21"/></name><operator pos:line="88" pos:column="21">.<pos:position pos:line="88" pos:column="22"/></operator><name pos:line="88" pos:column="22">log_fqdn<pos:position pos:line="88" pos:column="30"/></name></name></expr>)<pos:position pos:line="88" pos:column="31"/></condition><then pos:line="88" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="9">fqdncache_gethostbyaddr<pos:position pos:line="89" pos:column="32"/></name><argument_list pos:line="89" pos:column="32">(<argument><expr><name><name pos:line="89" pos:column="33">clientConnection<pos:position pos:line="89" pos:column="49"/></name><operator pos:line="89" pos:column="49">-&gt;<pos:position pos:line="89" pos:column="54"/></operator><name pos:line="89" pos:column="51">remote<pos:position pos:line="89" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="59">FQDN_LOOKUP_IF_MISS<pos:position pos:line="89" pos:column="78"/></name></expr></argument>)<pos:position pos:line="89" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="80"/></expr_stmt></block></then></if>

    <return pos:line="91" pos:column="5">return <expr><literal type="boolean" pos:line="91" pos:column="12">true<pos:position pos:line="91" pos:column="16"/></literal></expr>;<pos:position pos:line="91" pos:column="17"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1664_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">double<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">statByteHitRatio<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">minutes<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">s<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">c<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="6" pos:column="22"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">cd<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="10" pos:column="5">/* size_t might be unsigned */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">minutes<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&lt;<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="22">N_COUNT_HIST<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">c<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <name><name pos:line="12" pos:column="9">CountHist<pos:position pos:line="12" pos:column="18"/></name><index pos:line="12" pos:column="18">[<expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>]<pos:position pos:line="12" pos:column="21"/></index></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name><name pos:line="12" pos:column="22">client_http<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">.<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">kbytes_out<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">kb<pos:position pos:line="12" pos:column="47"/></name></name> <operator pos:line="12" pos:column="48">-<pos:position pos:line="12" pos:column="49"/></operator> <name><name pos:line="12" pos:column="50">CountHist<pos:position pos:line="12" pos:column="59"/></name><index pos:line="12" pos:column="59">[<expr><name pos:line="12" pos:column="60">minutes<pos:position pos:line="12" pos:column="67"/></name></expr>]<pos:position pos:line="12" pos:column="68"/></index></name><operator pos:line="12" pos:column="68">.<pos:position pos:line="12" pos:column="69"/></operator><name><name pos:line="12" pos:column="69">client_http<pos:position pos:line="12" pos:column="80"/></name><operator pos:line="12" pos:column="80">.<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="81">kbytes_out<pos:position pos:line="12" pos:column="91"/></name><operator pos:line="12" pos:column="91">.<pos:position pos:line="12" pos:column="92"/></operator><name pos:line="12" pos:column="92">kb<pos:position pos:line="12" pos:column="94"/></name></name></expr>;<pos:position pos:line="12" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">s<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <name><name pos:line="13" pos:column="9">CountHist<pos:position pos:line="13" pos:column="18"/></name><index pos:line="13" pos:column="18">[<expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr>]<pos:position pos:line="13" pos:column="21"/></index></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name><name pos:line="13" pos:column="22">server<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">all<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">kbytes_in<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">kb<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">-<pos:position pos:line="13" pos:column="47"/></operator> <name><name pos:line="13" pos:column="48">CountHist<pos:position pos:line="13" pos:column="57"/></name><index pos:line="13" pos:column="57">[<expr><name pos:line="13" pos:column="58">minutes<pos:position pos:line="13" pos:column="65"/></name></expr>]<pos:position pos:line="13" pos:column="66"/></index></name><operator pos:line="13" pos:column="66">.<pos:position pos:line="13" pos:column="67"/></operator><name><name pos:line="13" pos:column="67">server<pos:position pos:line="13" pos:column="73"/></name><operator pos:line="13" pos:column="73">.<pos:position pos:line="13" pos:column="74"/></operator><name pos:line="13" pos:column="74">all<pos:position pos:line="13" pos:column="77"/></name><operator pos:line="13" pos:column="77">.<pos:position pos:line="13" pos:column="78"/></operator><name pos:line="13" pos:column="78">kbytes_in<pos:position pos:line="13" pos:column="87"/></name><operator pos:line="13" pos:column="87">.<pos:position pos:line="13" pos:column="88"/></operator><name pos:line="13" pos:column="88">kb<pos:position pos:line="13" pos:column="90"/></name></name></expr>;<pos:position pos:line="13" pos:column="91"/></expr_stmt>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="14" pos:column="22"/></name></expr></cpp:if>
    <comment type="block" pos:line="15" pos:column="5">/*
     * This ugly hack is here to prevent the user from seeing a
     * negative byte hit ratio.  When we fetch a cache digest from
     * a neighbor, it gets treated like a cache miss because the
     * object is consumed internally.  Thus, we subtract cache
     * digest bytes out before calculating the byte hit ratio.
     */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">cd<pos:position pos:line="22" pos:column="7"/></name> <operator pos:line="22" pos:column="8">=<pos:position pos:line="22" pos:column="9"/></operator> <name><name pos:line="22" pos:column="10">CountHist<pos:position pos:line="22" pos:column="19"/></name><index pos:line="22" pos:column="19">[<expr><literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>]<pos:position pos:line="22" pos:column="22"/></index></name><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><name><name pos:line="22" pos:column="23">cd<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">kbytes_recv<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">.<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">kb<pos:position pos:line="22" pos:column="40"/></name></name> <operator pos:line="22" pos:column="41">-<pos:position pos:line="22" pos:column="42"/></operator> <name><name pos:line="22" pos:column="43">CountHist<pos:position pos:line="22" pos:column="52"/></name><index pos:line="22" pos:column="52">[<expr><name pos:line="22" pos:column="53">minutes<pos:position pos:line="22" pos:column="60"/></name></expr>]<pos:position pos:line="22" pos:column="61"/></index></name><operator pos:line="22" pos:column="61">.<pos:position pos:line="22" pos:column="62"/></operator><name><name pos:line="22" pos:column="62">cd<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">.<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="65">kbytes_recv<pos:position pos:line="22" pos:column="76"/></name><operator pos:line="22" pos:column="76">.<pos:position pos:line="22" pos:column="77"/></operator><name pos:line="22" pos:column="77">kb<pos:position pos:line="22" pos:column="79"/></name></name></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">&lt;<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="13">cd<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">18<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="20">DBG_IMPORTANT<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="35">"STRANGE: srv_kbytes="<pos:position pos:line="25" pos:column="57"/></literal> <operator pos:line="25" pos:column="58">&lt;&lt;<pos:position pos:line="25" pos:column="66"/></operator> <name pos:line="25" pos:column="61">s<pos:position pos:line="25" pos:column="62"/></name> <operator pos:line="25" pos:column="63">&lt;&lt;<pos:position pos:line="25" pos:column="71"/></operator> <literal type="string" pos:line="25" pos:column="66">", cd_kbytes="<pos:position pos:line="25" pos:column="80"/></literal> <operator pos:line="25" pos:column="81">&lt;&lt;<pos:position pos:line="25" pos:column="89"/></operator> <name pos:line="25" pos:column="84">cd<pos:position pos:line="25" pos:column="86"/></name></expr></argument>)<pos:position pos:line="25" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="88"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">s<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">-=<pos:position pos:line="27" pos:column="9"/></operator> <name pos:line="27" pos:column="10">cd<pos:position pos:line="27" pos:column="12"/></name></expr>;<pos:position pos:line="27" pos:column="13"/></expr_stmt>

<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">c<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">&gt;<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="13">s<pos:position pos:line="31" pos:column="14"/></name></expr>)<pos:position pos:line="31" pos:column="15"/></condition><then pos:line="31" pos:column="15">
        <block type="pseudo"><return pos:line="32" pos:column="9">return <expr><call><name><name pos:line="32" pos:column="16">Math<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">::<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">doublePercent<pos:position pos:line="32" pos:column="35"/></name></name><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">c<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">-<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">s<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">c<pos:position pos:line="32" pos:column="44"/></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></return></block></then>
    <else pos:line="33" pos:column="5">else
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><operator pos:line="34" pos:column="16">(<pos:position pos:line="34" pos:column="17"/></operator><operator pos:line="34" pos:column="17">-<pos:position pos:line="34" pos:column="18"/></operator><literal type="number" pos:line="34" pos:column="18">1.0<pos:position pos:line="34" pos:column="21"/></literal> <operator pos:line="34" pos:column="22">*<pos:position pos:line="34" pos:column="23"/></operator> <call><name><name pos:line="34" pos:column="24">Math<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">::<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">doublePercent<pos:position pos:line="34" pos:column="43"/></name></name><argument_list pos:line="34" pos:column="43">(<argument><expr><name pos:line="34" pos:column="44">s<pos:position pos:line="34" pos:column="45"/></name> <operator pos:line="34" pos:column="46">-<pos:position pos:line="34" pos:column="47"/></operator> <name pos:line="34" pos:column="48">c<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">c<pos:position pos:line="34" pos:column="52"/></name></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call><operator pos:line="34" pos:column="53">)<pos:position pos:line="34" pos:column="54"/></operator></expr>;<pos:position pos:line="34" pos:column="55"/></return></block></else></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5078_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSStoreState<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">doWrite<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="4" pos:column="19">(<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">void<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><operator pos:line="4" pos:column="25">)<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">this<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><call><name><name pos:line="6" pos:column="12">theFile<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">canWrite<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">pending_writes<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">empty<pos:position pos:line="8" pos:column="29"/></name></name><argument_list pos:line="8" pos:column="29">()<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <block pos:line="8" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">79<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="23">(<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">void<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">this<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">&lt;&lt;<pos:position pos:line="9" pos:column="43"/></operator> <literal type="string" pos:line="9" pos:column="38">" write queue is empty"<pos:position pos:line="9" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">auto<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">&amp;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="11">q<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name><name pos:line="13" pos:column="15">pending_writes<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">front<pos:position pos:line="13" pos:column="35"/></name></name><argument_list pos:line="13" pos:column="35">()<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">theFile<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">error<pos:position pos:line="15" pos:column="23"/></name></name><argument_list pos:line="15" pos:column="23">()<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">79<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_IMPORTANT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">MYNAME<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">&lt;&lt;<pos:position pos:line="16" pos:column="50"/></operator> <literal type="string" pos:line="16" pos:column="45">" avoid write on theFile with error"<pos:position pos:line="16" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">pending_writes<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">pop<pos:position pos:line="17" pos:column="27"/></name></name><argument_list pos:line="17" pos:column="27">()<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="21" pos:column="5">/*
     * DPW 2006-05-24
     * UFSStoreState has a 'writing' flag that we used to set here,
     * but it wasn't really used anywhere.  In fact, some lower
     * layers such as DISKD allow multiple outstanding writes, which
     * makes the boolean writing flag meaningless.  We would need
     * a counter to keep track of writes going out and write callbacks
     * coming in.  For now let's just not use the writing flag at
     * all.
     */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">debugs<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="number" pos:line="31" pos:column="12">79<pos:position pos:line="31" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="16">3<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="19">(<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">void<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">)<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">this<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">&lt;&lt;<pos:position pos:line="31" pos:column="39"/></operator> <literal type="string" pos:line="31" pos:column="34">" calling theFile-&gt;write("<pos:position pos:line="31" pos:column="63"/></literal> <operator pos:line="31" pos:column="61">&lt;&lt;<pos:position pos:line="31" pos:column="69"/></operator> <name><name pos:line="31" pos:column="64">q<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">.<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="66">size<pos:position pos:line="31" pos:column="70"/></name></name> <operator pos:line="31" pos:column="71">&lt;&lt;<pos:position pos:line="31" pos:column="79"/></operator> <literal type="string" pos:line="31" pos:column="74">")"<pos:position pos:line="31" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">theFile<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">write<pos:position pos:line="33" pos:column="19"/></name></name><argument_list pos:line="33" pos:column="19">(<argument><expr><operator pos:line="33" pos:column="20">new<pos:position pos:line="33" pos:column="23"/></operator> <call><name pos:line="33" pos:column="24">WriteRequest<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name><name pos:line="33" pos:column="37">q<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">.<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">buf<pos:position pos:line="33" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="44">q<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">.<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="46">offset<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="54">q<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">.<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="56">size<pos:position pos:line="33" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="62">q<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">.<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="64">free_func<pos:position pos:line="33" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">q<pos:position pos:line="34" pos:column="6"/></name><operator pos:line="34" pos:column="6">.<pos:position pos:line="34" pos:column="7"/></operator><name pos:line="34" pos:column="7">buf<pos:position pos:line="34" pos:column="10"/></name></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <literal type="null" pos:line="34" pos:column="13">nullptr<pos:position pos:line="34" pos:column="20"/></literal></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt> <comment type="line" pos:line="34" pos:column="22">// prevent buf deletion on pop, its used by the above object</comment>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">pending_writes<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">pop<pos:position pos:line="35" pos:column="23"/></name></name><argument_list pos:line="35" pos:column="23">()<pos:position pos:line="35" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="26"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

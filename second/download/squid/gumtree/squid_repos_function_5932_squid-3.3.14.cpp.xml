<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5932_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIContext<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">end<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">el<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">ellen<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">strlen<pos:position pos:line="4" pos:column="32"/></name> <argument_list pos:line="4" pos:column="33">(<argument><expr><name pos:line="4" pos:column="34">el<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">localbuf<pos:position pos:line="5" pos:column="18"/></name> <index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">HTTP_REQBUF_SZ<pos:position pos:line="5" pos:column="34"/></name></expr>]<pos:position pos:line="5" pos:column="35"/></index></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">position<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">flags<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">error<pos:position pos:line="8" pos:column="20"/></name></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
        <comment type="block" pos:line="9" pos:column="9">/* waiting for expat to finish the buffer we gave it */</comment>
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <switch pos:line="12" pos:column="5">switch <condition pos:line="12" pos:column="12">(<expr><call><name><name pos:line="12" pos:column="13">ESIElement<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">::<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">IdentifyElement<pos:position pos:line="12" pos:column="40"/></name></name> <argument_list pos:line="12" pos:column="41">(<argument><expr><name pos:line="12" pos:column="42">el<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="46"/></condition> <block pos:line="12" pos:column="47">{

    <case pos:line="14" pos:column="5">case <expr><name><name pos:line="14" pos:column="10">ESIElement<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">ESI_ELEMENT_NONE<pos:position pos:line="14" pos:column="38"/></name></name></expr>:<pos:position pos:line="14" pos:column="39"/></case>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">assert<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">ellen<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <sizeof pos:line="15" pos:column="25">sizeof <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">localbuf<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt> <comment type="block" pos:line="15" pos:column="45">/* prevent unexpected overruns. */</comment>
        <comment type="block" pos:line="16" pos:column="9">/* Add elements we aren't interested in */</comment>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">localbuf<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr>]<pos:position pos:line="17" pos:column="20"/></index></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="char" pos:line="17" pos:column="23">'&lt;'<pos:position pos:line="17" pos:column="29"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">localbuf<pos:position pos:line="18" pos:column="17"/></name><index pos:line="18" pos:column="17">[<expr><literal type="number" pos:line="18" pos:column="18">1<pos:position pos:line="18" pos:column="19"/></literal></expr>]<pos:position pos:line="18" pos:column="20"/></index></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">'/'<pos:position pos:line="18" pos:column="26"/></literal></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">assert<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><call><name pos:line="19" pos:column="17">xstrncpy<pos:position pos:line="19" pos:column="25"/></name> <argument_list pos:line="19" pos:column="26">(<argument><expr><operator pos:line="19" pos:column="27">&amp;<pos:position pos:line="19" pos:column="32"/></operator><name><name pos:line="19" pos:column="28">localbuf<pos:position pos:line="19" pos:column="36"/></name><index pos:line="19" pos:column="36">[<expr><literal type="number" pos:line="19" pos:column="37">2<pos:position pos:line="19" pos:column="38"/></literal></expr>]<pos:position pos:line="19" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">el<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="45">sizeof<argument_list pos:line="19" pos:column="51">(<argument><expr><name pos:line="19" pos:column="52">localbuf<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></sizeof> <operator pos:line="19" pos:column="62">-<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="64">3<pos:position pos:line="19" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">position<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">localbuf<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">+<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">strlen<pos:position pos:line="20" pos:column="37"/></name> <argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">localbuf<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="21" pos:column="9">*<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">position<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <literal type="char" pos:line="21" pos:column="21">'&gt;'<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">++<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">position<pos:position pos:line="22" pos:column="19"/></name></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">position<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="char" pos:line="23" pos:column="21">'\0'<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">addLiteral<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">localbuf<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">position<pos:position pos:line="24" pos:column="39"/></name> <operator pos:line="24" pos:column="40">-<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="42">localbuf<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>

    <case pos:line="27" pos:column="5">case <expr><name><name pos:line="27" pos:column="10">ESIElement<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">::<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">ESI_ELEMENT_COMMENT<pos:position pos:line="27" pos:column="41"/></name></name></expr>:<pos:position pos:line="27" pos:column="42"/></case>

    <case pos:line="29" pos:column="5">case <expr><name><name pos:line="29" pos:column="10">ESIElement<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">::<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">ESI_ELEMENT_INCLUDE<pos:position pos:line="29" pos:column="41"/></name></name></expr>:<pos:position pos:line="29" pos:column="42"/></case>

    <case pos:line="31" pos:column="5">case <expr><name><name pos:line="31" pos:column="10">ESIElement<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">::<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">ESI_ELEMENT_REMOVE<pos:position pos:line="31" pos:column="40"/></name></name></expr>:<pos:position pos:line="31" pos:column="41"/></case>

    <case pos:line="33" pos:column="5">case <expr><name><name pos:line="33" pos:column="10">ESIElement<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">::<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">ESI_ELEMENT_TRY<pos:position pos:line="33" pos:column="37"/></name></name></expr>:<pos:position pos:line="33" pos:column="38"/></case>

    <case pos:line="35" pos:column="5">case <expr><name><name pos:line="35" pos:column="10">ESIElement<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">::<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">ESI_ELEMENT_ATTEMPT<pos:position pos:line="35" pos:column="41"/></name></name></expr>:<pos:position pos:line="35" pos:column="42"/></case>

    <case pos:line="37" pos:column="5">case <expr><name><name pos:line="37" pos:column="10">ESIElement<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">::<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">ESI_ELEMENT_EXCEPT<pos:position pos:line="37" pos:column="40"/></name></name></expr>:<pos:position pos:line="37" pos:column="41"/></case>

    <case pos:line="39" pos:column="5">case <expr><name><name pos:line="39" pos:column="10">ESIElement<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">::<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">ESI_ELEMENT_VARS<pos:position pos:line="39" pos:column="38"/></name></name></expr>:<pos:position pos:line="39" pos:column="39"/></case>

    <case pos:line="41" pos:column="5">case <expr><name><name pos:line="41" pos:column="10">ESIElement<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">::<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">ESI_ELEMENT_CHOOSE<pos:position pos:line="41" pos:column="40"/></name></name></expr>:<pos:position pos:line="41" pos:column="41"/></case>

    <case pos:line="43" pos:column="5">case <expr><name><name pos:line="43" pos:column="10">ESIElement<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">::<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">ESI_ELEMENT_WHEN<pos:position pos:line="43" pos:column="38"/></name></name></expr>:<pos:position pos:line="43" pos:column="39"/></case>

    <case pos:line="45" pos:column="5">case <expr><name><name pos:line="45" pos:column="10">ESIElement<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">::<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">ESI_ELEMENT_OTHERWISE<pos:position pos:line="45" pos:column="43"/></name></name></expr>:<pos:position pos:line="45" pos:column="44"/></case>

    <case pos:line="47" pos:column="5">case <expr><name><name pos:line="47" pos:column="10">ESIElement<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">::<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">ESI_ELEMENT_ASSIGN<pos:position pos:line="47" pos:column="40"/></name></name></expr>:<pos:position pos:line="47" pos:column="41"/></case>
        <comment type="block" pos:line="48" pos:column="9">/* pop of the stack */</comment>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">parserState<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">.<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="21">stack<pos:position pos:line="49" pos:column="26"/></name><index pos:line="49" pos:column="26">[<expr><operator pos:line="49" pos:column="27">--<pos:position pos:line="49" pos:column="29"/></operator><name><name pos:line="49" pos:column="29">parserState<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">.<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">stackdepth<pos:position pos:line="49" pos:column="51"/></name></name></expr>]<pos:position pos:line="49" pos:column="52"/></index></name> <operator pos:line="49" pos:column="53">=<pos:position pos:line="49" pos:column="54"/></operator> <name pos:line="49" pos:column="55">NULL<pos:position pos:line="49" pos:column="59"/></name></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
        <break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break>
    }<pos:position pos:line="51" pos:column="6"/></block></switch>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

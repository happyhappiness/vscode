<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4904_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AuthBasicUserRequest<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">module_start<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name pos:line="2" pos:column="36">RH<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">handler<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">void<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">data<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">basic_data<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">basic_auth<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name pos:line="5" pos:column="12">user<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">auth_type<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">==<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="33">AUTH_BASIC<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">basic_auth<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <cast type="dynamic" pos:line="6" pos:column="18">dynamic_cast<argument_list type="generic" pos:line="6" pos:column="30">&lt;<argument><expr><name pos:line="6" pos:column="31">basic_data<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="47"/></argument_list><argument_list pos:line="6" pos:column="44">(<argument><expr><call><name pos:line="6" pos:column="45">user<pos:position pos:line="6" pos:column="49"/></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">basic_auth<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">29<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">9<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">HERE<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&lt;&lt;<pos:position pos:line="8" pos:column="32"/></operator> <literal type="string" pos:line="8" pos:column="27">"'"<pos:position pos:line="8" pos:column="30"/></literal> <operator pos:line="8" pos:column="31">&lt;&lt;<pos:position pos:line="8" pos:column="39"/></operator> <call><name><name pos:line="8" pos:column="34">basic_auth<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">-&gt;<pos:position pos:line="8" pos:column="49"/></operator><name pos:line="8" pos:column="46">username<pos:position pos:line="8" pos:column="54"/></name></name><argument_list pos:line="8" pos:column="54">()<pos:position pos:line="8" pos:column="56"/></argument_list></call> <operator pos:line="8" pos:column="57">&lt;&lt;<pos:position pos:line="8" pos:column="65"/></operator> <literal type="string" pos:line="8" pos:column="60">":"<pos:position pos:line="8" pos:column="63"/></literal> <operator pos:line="8" pos:column="64">&lt;&lt;<pos:position pos:line="8" pos:column="72"/></operator> <name><name pos:line="8" pos:column="67">basic_auth<pos:position pos:line="8" pos:column="77"/></name><operator pos:line="8" pos:column="77">-&gt;<pos:position pos:line="8" pos:column="82"/></operator><name pos:line="8" pos:column="79">passwd<pos:position pos:line="8" pos:column="85"/></name></name> <operator pos:line="8" pos:column="86">&lt;&lt;<pos:position pos:line="8" pos:column="94"/></operator> <literal type="string" pos:line="8" pos:column="89">"'"<pos:position pos:line="8" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="94"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">basicConfig<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">authenticate<pos:position pos:line="10" pos:column="33"/></name></name> <operator pos:line="10" pos:column="34">==<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">NULL<pos:position pos:line="10" pos:column="41"/></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">handler<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">data<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">NULL<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* check to see if the auth_user already has a request outstanding */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">basic_auth<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">flags<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">.<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">credentials_ok<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">==<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="45">2<pos:position pos:line="16" pos:column="46"/></literal></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
        <comment type="block" pos:line="17" pos:column="9">/* there is a request with the same credentials already being verified */</comment>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">basic_auth<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">queueRequest<pos:position pos:line="18" pos:column="33"/></name></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">this<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">handler<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">data<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">basic_auth<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">submitRequest<pos:position pos:line="22" pos:column="30"/></name></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">this<pos:position pos:line="22" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="38">handler<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="47">data<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

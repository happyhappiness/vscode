<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1344.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Dump<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">MemBuf<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">mb<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemBuf<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">str<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">ntoabuf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><name pos:line="5" pos:column="18">MAX_IPSTRLEN<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">str<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">reset<pos:position pos:line="7" pos:column="14"/></name></name><argument_list pos:line="7" pos:column="14">()<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* email subject line */</comment>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">str<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">.<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">Printf<pos:position pos:line="9" pos:column="15"/></name></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="string" pos:line="9" pos:column="16">"CacheErrorInfo - %s"<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="39">errorPageName<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">type<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">mb<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">Printf<pos:position pos:line="10" pos:column="15"/></name></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="string" pos:line="10" pos:column="16">"?subject=%s"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="31">rfc1738_escape_part<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">(<argument><expr><name><name pos:line="10" pos:column="51">str<pos:position pos:line="10" pos:column="54"/></name><operator pos:line="10" pos:column="54">.<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="55">buf<pos:position pos:line="10" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">str<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">.<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">reset<pos:position pos:line="11" pos:column="14"/></name></name><argument_list pos:line="11" pos:column="14">()<pos:position pos:line="11" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* email body */</comment>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">str<pos:position pos:line="13" pos:column="8"/></name><operator pos:line="13" pos:column="8">.<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="9">Printf<pos:position pos:line="13" pos:column="15"/></name></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"CacheHost: %s\r\n"<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="37">getMyHostname<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">()<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/* - Err Msgs */</comment>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">str<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">.<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">Printf<pos:position pos:line="15" pos:column="15"/></name></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"ErrPage: %s\r\n"<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="35">errorPageName<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">type<pos:position pos:line="15" pos:column="53"/></name></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">xerrno<pos:position pos:line="17" pos:column="15"/></name></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16"> <block pos:line="17" pos:column="17">{
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">str<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">Printf<pos:position pos:line="18" pos:column="19"/></name></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="string" pos:line="18" pos:column="20">"Err: (%d) %s\r\n"<pos:position pos:line="18" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">xerrno<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="48">strerror<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><name pos:line="18" pos:column="57">xerrno<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">str<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">Printf<pos:position pos:line="20" pos:column="19"/></name></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="string" pos:line="20" pos:column="20">"Err: [none]\r\n"<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">USE_AUTH<pos:position pos:line="22" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name><name pos:line="23" pos:column="9">auth_user_request<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">getRaw<pos:position pos:line="23" pos:column="33"/></name></name><argument_list pos:line="23" pos:column="33">()<pos:position pos:line="23" pos:column="35"/></argument_list></call> <operator pos:line="23" pos:column="36">&amp;&amp;<pos:position pos:line="23" pos:column="46"/></operator> <call><name><name pos:line="23" pos:column="39">auth_user_request<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">denyMessage<pos:position pos:line="23" pos:column="69"/></name></name><argument_list pos:line="23" pos:column="69">()<pos:position pos:line="23" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="72"/></condition><then pos:line="23" pos:column="72">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="9">str<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">Printf<pos:position pos:line="24" pos:column="19"/></name></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"Auth ErrMsg: %s\r\n"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="43">auth_user_request<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="62">denyMessage<pos:position pos:line="24" pos:column="73"/></name></name><argument_list pos:line="24" pos:column="73">()<pos:position pos:line="24" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="77"/></expr_stmt></block></then></if>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name><name pos:line="26" pos:column="9">dnsError<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">size<pos:position pos:line="26" pos:column="22"/></name></name><argument_list pos:line="26" pos:column="22">()<pos:position pos:line="26" pos:column="24"/></argument_list></call> <operator pos:line="26" pos:column="25">&gt;<pos:position pos:line="26" pos:column="29"/></operator> <literal type="number" pos:line="26" pos:column="27">0<pos:position pos:line="26" pos:column="28"/></literal></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="27" pos:column="9">str<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">Printf<pos:position pos:line="27" pos:column="19"/></name></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="string" pos:line="27" pos:column="20">"DNS ErrMsg: %s\r\n"<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="27" pos:column="42">dnsError<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">.<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="51">termedBuf<pos:position pos:line="27" pos:column="60"/></name></name><argument_list pos:line="27" pos:column="60">()<pos:position pos:line="27" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* - TimeStamp */</comment>
    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">str<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">.<pos:position pos:line="30" pos:column="9"/></operator><name pos:line="30" pos:column="9">Printf<pos:position pos:line="30" pos:column="15"/></name></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="string" pos:line="30" pos:column="16">"TimeStamp: %s\r\n\r\n"<pos:position pos:line="30" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="41">mkrfc1123<pos:position pos:line="30" pos:column="50"/></name><argument_list pos:line="30" pos:column="50">(<argument><expr><name pos:line="30" pos:column="51">squid_curtime<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* - IP stuff */</comment>
    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">str<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">.<pos:position pos:line="33" pos:column="9"/></operator><name pos:line="33" pos:column="9">Printf<pos:position pos:line="33" pos:column="15"/></name></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="string" pos:line="33" pos:column="16">"ClientIP: %s\r\n"<pos:position pos:line="33" pos:column="34"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="33" pos:column="36">src_addr<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">.<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">toStr<pos:position pos:line="33" pos:column="50"/></name></name><argument_list pos:line="33" pos:column="50">(<argument><expr><name pos:line="33" pos:column="51">ntoabuf<pos:position pos:line="33" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="33" pos:column="59">MAX_IPSTRLEN<pos:position pos:line="33" pos:column="71"/></name></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">request<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">&amp;&amp;<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="20">request<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">hier<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">host<pos:position pos:line="35" pos:column="38"/></name><index pos:line="35" pos:column="38">[<expr><literal type="number" pos:line="35" pos:column="39">0<pos:position pos:line="35" pos:column="40"/></literal></expr>]<pos:position pos:line="35" pos:column="41"/></index></name> <operator pos:line="35" pos:column="42">!=<pos:position pos:line="35" pos:column="44"/></operator> <literal type="char" pos:line="35" pos:column="45">'\0'<pos:position pos:line="35" pos:column="49"/></literal></expr>)<pos:position pos:line="35" pos:column="50"/></condition><then pos:line="35" pos:column="50"> <block pos:line="35" pos:column="51">{
        <expr_stmt><expr><call><name><name pos:line="36" pos:column="9">str<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">.<pos:position pos:line="36" pos:column="13"/></operator><name pos:line="36" pos:column="13">Printf<pos:position pos:line="36" pos:column="19"/></name></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="string" pos:line="36" pos:column="20">"ServerIP: %s\r\n"<pos:position pos:line="36" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="40">request<pos:position pos:line="36" pos:column="47"/></name><operator pos:line="36" pos:column="47">-&gt;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="49">hier<pos:position pos:line="36" pos:column="53"/></name><operator pos:line="36" pos:column="53">.<pos:position pos:line="36" pos:column="54"/></operator><name pos:line="36" pos:column="54">host<pos:position pos:line="36" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">str<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">.<pos:position pos:line="39" pos:column="9"/></operator><name pos:line="39" pos:column="9">Printf<pos:position pos:line="39" pos:column="15"/></name></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="string" pos:line="39" pos:column="16">"\r\n"<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* - HTTP stuff */</comment>
    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">str<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">.<pos:position pos:line="41" pos:column="9"/></operator><name pos:line="41" pos:column="9">Printf<pos:position pos:line="41" pos:column="15"/></name></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"HTTP Request:\r\n"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">NULL<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">!=<pos:position pos:line="43" pos:column="16"/></operator> <name pos:line="43" pos:column="17">request<pos:position pos:line="43" pos:column="24"/></name></expr>)<pos:position pos:line="43" pos:column="25"/></condition><then pos:line="43" pos:column="25"> <block pos:line="43" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">Packer<pos:position pos:line="44" pos:column="15"/></name></type> <name pos:line="44" pos:column="16">pck<pos:position pos:line="44" pos:column="19"/></name></decl>;<pos:position pos:line="44" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">String<pos:position pos:line="45" pos:column="15"/></name></type> <name pos:line="45" pos:column="16">urlpath_or_slash<pos:position pos:line="45" pos:column="32"/></name></decl>;<pos:position pos:line="45" pos:column="33"/></decl_stmt>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name><name pos:line="47" pos:column="13">request<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">urlpath<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">size<pos:position pos:line="47" pos:column="34"/></name></name><argument_list pos:line="47" pos:column="34">()<pos:position pos:line="47" pos:column="36"/></argument_list></call> <operator pos:line="47" pos:column="37">!=<pos:position pos:line="47" pos:column="39"/></operator> <literal type="number" pos:line="47" pos:column="40">0<pos:position pos:line="47" pos:column="41"/></literal></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="13">urlpath_or_slash<pos:position pos:line="48" pos:column="29"/></name> <operator pos:line="48" pos:column="30">=<pos:position pos:line="48" pos:column="31"/></operator> <name><name pos:line="48" pos:column="32">request<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">-&gt;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="41">urlpath<pos:position pos:line="48" pos:column="48"/></name></name></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt></block></then>
        <else pos:line="49" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="13">urlpath_or_slash<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">=<pos:position pos:line="50" pos:column="31"/></operator> <literal type="string" pos:line="50" pos:column="32">"/"<pos:position pos:line="50" pos:column="35"/></literal></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="52" pos:column="9">str<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">.<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">Printf<pos:position pos:line="52" pos:column="19"/></name></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">SQUIDSBUFPH<pos:position pos:line="52" pos:column="31"/></name> <literal type="string" pos:line="52" pos:column="32">" "<pos:position pos:line="52" pos:column="35"/></literal> <name pos:line="52" pos:column="36">SQUIDSTRINGPH<pos:position pos:line="52" pos:column="49"/></name> <literal type="string" pos:line="52" pos:column="50">" %s/%d.%d\n"<pos:position pos:line="52" pos:column="63"/></literal></expr></argument>,
                   <argument><expr><call><name pos:line="53" pos:column="20">SQUIDSBUFPRINT<pos:position pos:line="53" pos:column="34"/></name><argument_list pos:line="53" pos:column="34">(<argument><expr><call><name><name pos:line="53" pos:column="35">request<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">-&gt;<pos:position pos:line="53" pos:column="47"/></operator><name pos:line="53" pos:column="44">method<pos:position pos:line="53" pos:column="50"/></name><operator pos:line="53" pos:column="50">.<pos:position pos:line="53" pos:column="51"/></operator><name pos:line="53" pos:column="51">image<pos:position pos:line="53" pos:column="56"/></name></name><argument_list pos:line="53" pos:column="56">()<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr></argument>,
                   <argument><expr><call><name pos:line="54" pos:column="20">SQUIDSTRINGPRINT<pos:position pos:line="54" pos:column="36"/></name><argument_list pos:line="54" pos:column="36">(<argument><expr><name pos:line="54" pos:column="37">urlpath_or_slash<pos:position pos:line="54" pos:column="53"/></name></expr></argument>)<pos:position pos:line="54" pos:column="54"/></argument_list></call></expr></argument>,
                   <argument><expr><name><name pos:line="55" pos:column="20">AnyP<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">::<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">ProtocolType_str<pos:position pos:line="55" pos:column="42"/></name><index pos:line="55" pos:column="42">[<expr><name><name pos:line="55" pos:column="43">request<pos:position pos:line="55" pos:column="50"/></name><operator pos:line="55" pos:column="50">-&gt;<pos:position pos:line="55" pos:column="55"/></operator><name pos:line="55" pos:column="52">http_ver<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">.<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">protocol<pos:position pos:line="55" pos:column="69"/></name></name></expr>]<pos:position pos:line="55" pos:column="70"/></index></name></expr></argument>,
                   <argument><expr><name><name pos:line="56" pos:column="20">request<pos:position pos:line="56" pos:column="27"/></name><operator pos:line="56" pos:column="27">-&gt;<pos:position pos:line="56" pos:column="32"/></operator><name pos:line="56" pos:column="29">http_ver<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">major<pos:position pos:line="56" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="45">request<pos:position pos:line="56" pos:column="52"/></name><operator pos:line="56" pos:column="52">-&gt;<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="54">http_ver<pos:position pos:line="56" pos:column="62"/></name><operator pos:line="56" pos:column="62">.<pos:position pos:line="56" pos:column="63"/></operator><name pos:line="56" pos:column="63">minor<pos:position pos:line="56" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">packerToMemInit<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><operator pos:line="57" pos:column="25">&amp;<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="26">pck<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">str<pos:position pos:line="57" pos:column="35"/></name></expr></argument>)<pos:position pos:line="57" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">request<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">header<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">.<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="25">packInto<pos:position pos:line="58" pos:column="33"/></name></name><argument_list pos:line="58" pos:column="33">(<argument><expr><operator pos:line="58" pos:column="34">&amp;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="35">pck<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">packerClean<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><operator pos:line="59" pos:column="21">&amp;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="22">pck<pos:position pos:line="59" pos:column="25"/></name></expr></argument>)<pos:position pos:line="59" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="62" pos:column="5">str<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">.<pos:position pos:line="62" pos:column="9"/></operator><name pos:line="62" pos:column="9">Printf<pos:position pos:line="62" pos:column="15"/></name></name><argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="string" pos:line="62" pos:column="16">"\r\n"<pos:position pos:line="62" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="63" pos:column="5">/* - FTP stuff */</comment>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">ftp<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">.<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="13">request<pos:position pos:line="65" pos:column="20"/></name></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21"> <block pos:line="65" pos:column="22">{
        <expr_stmt><expr><call><name><name pos:line="66" pos:column="9">str<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">.<pos:position pos:line="66" pos:column="13"/></operator><name pos:line="66" pos:column="13">Printf<pos:position pos:line="66" pos:column="19"/></name></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="string" pos:line="66" pos:column="20">"FTP Request: %s\r\n"<pos:position pos:line="66" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="43">ftp<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">.<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="47">request<pos:position pos:line="66" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="67" pos:column="9">str<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">.<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="13">Printf<pos:position pos:line="67" pos:column="19"/></name></name><argument_list pos:line="67" pos:column="19">(<argument><expr><literal type="string" pos:line="67" pos:column="20">"FTP Reply: %s\r\n"<pos:position pos:line="67" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="41">(<pos:position pos:line="67" pos:column="42"/></operator><ternary><condition><expr><name><name pos:line="67" pos:column="42">ftp<pos:position pos:line="67" pos:column="45"/></name><operator pos:line="67" pos:column="45">.<pos:position pos:line="67" pos:column="46"/></operator><name pos:line="67" pos:column="46">reply<pos:position pos:line="67" pos:column="51"/></name></name></expr>?<pos:position pos:line="67" pos:column="52"/></condition><then pos:line="67" pos:column="52"> <expr><name><name pos:line="67" pos:column="53">ftp<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">.<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="57">reply<pos:position pos:line="67" pos:column="62"/></name></name></expr></then><else pos:line="67" pos:column="62">:<expr><literal type="string" pos:line="67" pos:column="63">"[none]"<pos:position pos:line="67" pos:column="71"/></literal></expr></else></ternary><operator pos:line="67" pos:column="71">)<pos:position pos:line="67" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">str<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">.<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="13">Printf<pos:position pos:line="68" pos:column="19"/></name></name><argument_list pos:line="68" pos:column="19">(<argument><expr><literal type="string" pos:line="68" pos:column="20">"FTP Msg: "<pos:position pos:line="68" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">wordlistCat<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name><name pos:line="69" pos:column="21">ftp<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">.<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="25">server_msg<pos:position pos:line="69" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="37">&amp;<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="38">str<pos:position pos:line="69" pos:column="41"/></name></expr></argument>)<pos:position pos:line="69" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="70" pos:column="9">str<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">.<pos:position pos:line="70" pos:column="13"/></operator><name pos:line="70" pos:column="13">Printf<pos:position pos:line="70" pos:column="19"/></name></name><argument_list pos:line="70" pos:column="19">(<argument><expr><literal type="string" pos:line="70" pos:column="20">"\r\n"<pos:position pos:line="70" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="73" pos:column="5">str<pos:position pos:line="73" pos:column="8"/></name><operator pos:line="73" pos:column="8">.<pos:position pos:line="73" pos:column="9"/></operator><name pos:line="73" pos:column="9">Printf<pos:position pos:line="73" pos:column="15"/></name></name><argument_list pos:line="73" pos:column="15">(<argument><expr><literal type="string" pos:line="73" pos:column="16">"\r\n"<pos:position pos:line="73" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="74" pos:column="5">mb<pos:position pos:line="74" pos:column="7"/></name><operator pos:line="74" pos:column="7">-&gt;<pos:position pos:line="74" pos:column="12"/></operator><name pos:line="74" pos:column="9">Printf<pos:position pos:line="74" pos:column="15"/></name></name><argument_list pos:line="74" pos:column="15">(<argument><expr><literal type="string" pos:line="74" pos:column="16">"&amp;body=%s"<pos:position pos:line="74" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="28">rfc1738_escape_part<pos:position pos:line="74" pos:column="47"/></name><argument_list pos:line="74" pos:column="47">(<argument><expr><name><name pos:line="74" pos:column="48">str<pos:position pos:line="74" pos:column="51"/></name><operator pos:line="74" pos:column="51">.<pos:position pos:line="74" pos:column="52"/></operator><name pos:line="74" pos:column="52">buf<pos:position pos:line="74" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="75" pos:column="5">str<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">.<pos:position pos:line="75" pos:column="9"/></operator><name pos:line="75" pos:column="9">clean<pos:position pos:line="75" pos:column="14"/></name></name><argument_list pos:line="75" pos:column="14">()<pos:position pos:line="75" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="17"/></expr_stmt>
    <return pos:line="76" pos:column="5">return <expr><literal type="number" pos:line="76" pos:column="12">0<pos:position pos:line="76" pos:column="13"/></literal></expr>;<pos:position pos:line="76" pos:column="14"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

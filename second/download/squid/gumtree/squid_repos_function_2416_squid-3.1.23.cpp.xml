<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2416_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">connectStart<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">url<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><call><name><name pos:line="4" pos:column="23">entry<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">url<pos:position pos:line="4" pos:column="33"/></name></name><argument_list pos:line="4" pos:column="33">()<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fd<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><operator pos:line="5" pos:column="14">-<pos:position pos:line="5" pos:column="15"/></operator><literal type="number" pos:line="5" pos:column="15">1<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">FwdServer<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">fs<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name pos:line="6" pos:column="21">servers<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">host<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">short<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">port<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ctimeout<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ftimeout<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><name><name pos:line="10" pos:column="20">Config<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">Timeout<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">forward<pos:position pos:line="10" pos:column="42"/></name></name> <operator pos:line="10" pos:column="43">-<pos:position pos:line="10" pos:column="44"/></operator> <operator pos:line="10" pos:column="45">(<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">squid_curtime<pos:position pos:line="10" pos:column="59"/></name> <operator pos:line="10" pos:column="60">-<pos:position pos:line="10" pos:column="61"/></operator> <name pos:line="10" pos:column="62">start_t<pos:position pos:line="10" pos:column="69"/></name><operator pos:line="10" pos:column="69">)<pos:position pos:line="10" pos:column="70"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="71"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">IpAddress<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">outgoing<pos:position pos:line="12" pos:column="23"/></name></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">short<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">tos<pos:position pos:line="13" pos:column="23"/></name></decl>;<pos:position pos:line="13" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">IpAddress<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">client_addr<pos:position pos:line="14" pos:column="26"/></name></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">fs<pos:position pos:line="15" pos:column="14"/></name></expr></argument>)<pos:position pos:line="15" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">server_fd<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">==<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">17<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"fwdConnectStart: "<pos:position pos:line="17" pos:column="38"/></literal> <operator pos:line="17" pos:column="39">&lt;&lt;<pos:position pos:line="17" pos:column="47"/></operator> <name pos:line="17" pos:column="42">url<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">n_tries<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <comment type="line" pos:line="19" pos:column="23">// first attempt</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="20" pos:column="9">request<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">hier<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">.<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">first_conn_start<pos:position pos:line="20" pos:column="39"/></name></name> <operator pos:line="20" pos:column="40">=<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="42">current_time<pos:position pos:line="20" pos:column="54"/></name></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">fs<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">_peer<pos:position pos:line="22" pos:column="18"/></name></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">ctimeout<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <ternary><condition><expr><name><name pos:line="23" pos:column="20">fs<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">_peer<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">connect_timeout<pos:position pos:line="23" pos:column="46"/></name></name> <operator pos:line="23" pos:column="47">&gt;<pos:position pos:line="23" pos:column="51"/></operator> <literal type="number" pos:line="23" pos:column="49">0<pos:position pos:line="23" pos:column="50"/></literal></expr> ?<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52"> <expr><name><name pos:line="23" pos:column="53">fs<pos:position pos:line="23" pos:column="55"/></name><operator pos:line="23" pos:column="55">-&gt;<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="57">_peer<pos:position pos:line="23" pos:column="62"/></name><operator pos:line="23" pos:column="62">-&gt;<pos:position pos:line="23" pos:column="67"/></operator><name pos:line="23" pos:column="64">connect_timeout<pos:position pos:line="23" pos:column="79"/></name></name></expr>
                   <pos:position pos:line="24" pos:column="20"/></then><else pos:line="24" pos:column="20">: <expr><name><name pos:line="24" pos:column="22">Config<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">.<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">Timeout<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">.<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">peer_connect<pos:position pos:line="24" pos:column="49"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">ctimeout<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name><name pos:line="26" pos:column="20">Config<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">Timeout<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">connect<pos:position pos:line="26" pos:column="42"/></name></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">request<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">flags<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">spoof_client_ip<pos:position pos:line="29" pos:column="39"/></name></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">fs<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">_peer<pos:position pos:line="30" pos:column="23"/></name></name> <operator pos:line="30" pos:column="24">||<pos:position pos:line="30" pos:column="26"/></operator> <operator pos:line="30" pos:column="27">!<pos:position pos:line="30" pos:column="28"/></operator><name><name pos:line="30" pos:column="28">fs<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">-&gt;<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="32">_peer<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-&gt;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="39">options<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">no_tproxy<pos:position pos:line="30" pos:column="56"/></name></name></expr>)<pos:position pos:line="30" pos:column="57"/></condition><then pos:line="30" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">client_addr<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name><name pos:line="31" pos:column="27">request<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">client_addr<pos:position pos:line="31" pos:column="47"/></name></name></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt></block></then></if>
        <comment type="line" pos:line="32" pos:column="9">// else no tproxy today ...</comment>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">ftimeout<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">&lt;<pos:position pos:line="35" pos:column="22"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="9">ftimeout<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <literal type="number" pos:line="36" pos:column="20">5<pos:position pos:line="36" pos:column="21"/></literal></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">ftimeout<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">&lt;<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="20">ctimeout<pos:position pos:line="38" pos:column="28"/></name></expr>)<pos:position pos:line="38" pos:column="29"/></condition><then pos:line="38" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="9">ctimeout<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">=<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">ftimeout<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">fs<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">_peer<pos:position pos:line="41" pos:column="18"/></name></name> <operator pos:line="41" pos:column="19">&amp;&amp;<pos:position pos:line="41" pos:column="29"/></operator> <name><name pos:line="41" pos:column="22">request<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">flags<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">.<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">sslBumped<pos:position pos:line="41" pos:column="46"/></name></name> <operator pos:line="41" pos:column="47">==<pos:position pos:line="41" pos:column="49"/></operator> <literal type="boolean" pos:line="41" pos:column="50">true<pos:position pos:line="41" pos:column="54"/></literal></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55"> <block pos:line="41" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">50<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">4<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"fwdConnectStart: Ssl bumped connections through parrent proxy are not allowed"<pos:position pos:line="42" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="104"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">ErrorState<pos:position pos:line="43" pos:column="19"/></name> <modifier pos:line="43" pos:column="20">*<pos:position pos:line="43" pos:column="21"/></modifier></type><name pos:line="43" pos:column="21">anErr<pos:position pos:line="43" pos:column="26"/></name> <init pos:line="43" pos:column="27">= <expr><call><name pos:line="43" pos:column="29">errorCon<pos:position pos:line="43" pos:column="37"/></name><argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">ERR_CANNOT_FORWARD<pos:position pos:line="43" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="58">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="43" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="84">request<pos:position pos:line="43" pos:column="91"/></name></expr></argument>)<pos:position pos:line="43" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="93"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">fail<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">anErr<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">self<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name pos:line="45" pos:column="16">NULL<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt> <comment type="line" pos:line="45" pos:column="22">// refcounted</comment>
        <return pos:line="46" pos:column="9">return;<pos:position pos:line="46" pos:column="16"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">request<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">flags<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">.<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">pinned<pos:position pos:line="49" pos:column="26"/></name></name> <operator pos:line="49" pos:column="27">=<pos:position pos:line="49" pos:column="28"/></operator> <literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">fs<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">code<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">==<pos:position pos:line="50" pos:column="20"/></operator> <name pos:line="50" pos:column="21">PINNED<pos:position pos:line="50" pos:column="27"/></name></expr>)<pos:position pos:line="50" pos:column="28"/></condition><then pos:line="50" pos:column="28"> <block pos:line="50" pos:column="29">{
        <decl_stmt><decl><type><name pos:line="51" pos:column="9">ConnStateData<pos:position pos:line="51" pos:column="22"/></name> <modifier pos:line="51" pos:column="23">*<pos:position pos:line="51" pos:column="24"/></modifier></type><name pos:line="51" pos:column="24">pinned_connection<pos:position pos:line="51" pos:column="41"/></name> <init pos:line="51" pos:column="42">= <expr><call><name><name pos:line="51" pos:column="44">request<pos:position pos:line="51" pos:column="51"/></name><operator pos:line="51" pos:column="51">-&gt;<pos:position pos:line="51" pos:column="56"/></operator><name pos:line="51" pos:column="53">pinnedConnection<pos:position pos:line="51" pos:column="69"/></name></name><argument_list pos:line="51" pos:column="69">()<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="72"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">assert<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name pos:line="52" pos:column="16">pinned_connection<pos:position pos:line="52" pos:column="33"/></name></expr></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">fd<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">=<pos:position pos:line="53" pos:column="13"/></operator> <call><name><name pos:line="53" pos:column="14">pinned_connection<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">-&gt;<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="33">validatePinnedConnection<pos:position pos:line="53" pos:column="57"/></name></name><argument_list pos:line="53" pos:column="57">(<argument><expr><name pos:line="53" pos:column="58">request<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="67">fs<pos:position pos:line="53" pos:column="69"/></name><operator pos:line="53" pos:column="69">-&gt;<pos:position pos:line="53" pos:column="74"/></operator><name pos:line="53" pos:column="71">_peer<pos:position pos:line="53" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="78"/></expr_stmt>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">fd<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">&gt;=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21"> <block pos:line="54" pos:column="22">{
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">pinned_connection<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">unpinConnection<pos:position pos:line="55" pos:column="47"/></name></name><argument_list pos:line="55" pos:column="47">()<pos:position pos:line="55" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>
<cpp:if pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">if<pos:position pos:line="56" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="56" pos:column="5">0<pos:position pos:line="56" pos:column="6"/></literal></expr></cpp:if>
            if (!fs-&gt;_peer)
                fs-&gt;code = HIER_DIRECT;
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="60" pos:column="13">server_fd<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <name pos:line="60" pos:column="25">fd<pos:position pos:line="60" pos:column="27"/></name></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="61" pos:column="13">n_tries<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">++<pos:position pos:line="61" pos:column="22"/></operator></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">request<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">flags<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">.<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">pinned<pos:position pos:line="62" pos:column="34"/></name></name> <operator pos:line="62" pos:column="35">=<pos:position pos:line="62" pos:column="36"/></operator> <literal type="number" pos:line="62" pos:column="37">1<pos:position pos:line="62" pos:column="38"/></literal></expr>;<pos:position pos:line="62" pos:column="39"/></expr_stmt>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><call><name><name pos:line="63" pos:column="17">pinned_connection<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">-&gt;<pos:position pos:line="63" pos:column="39"/></operator><name pos:line="63" pos:column="36">pinnedAuth<pos:position pos:line="63" pos:column="46"/></name></name><argument_list pos:line="63" pos:column="46">()<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="17">request<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">flags<pos:position pos:line="64" pos:column="31"/></name><operator pos:line="64" pos:column="31">.<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="32">auth<pos:position pos:line="64" pos:column="36"/></name></name> <operator pos:line="64" pos:column="37">=<pos:position pos:line="64" pos:column="38"/></operator> <literal type="number" pos:line="64" pos:column="39">1<pos:position pos:line="64" pos:column="40"/></literal></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">comm_add_close_handler<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name pos:line="65" pos:column="36">fd<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="40">fwdServerClosedWrapper<pos:position pos:line="65" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="64">this<pos:position pos:line="65" pos:column="68"/></name></expr></argument>)<pos:position pos:line="65" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">updateHierarchyInfo<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">()<pos:position pos:line="66" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">connectDone<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">fd<pos:position pos:line="67" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="29">DnsLookupDetails<pos:position pos:line="67" pos:column="45"/></name><argument_list pos:line="67" pos:column="45">()<pos:position pos:line="67" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="49">COMM_OK<pos:position pos:line="67" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="58">0<pos:position pos:line="67" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="61"/></expr_stmt>
            <return pos:line="68" pos:column="13">return;<pos:position pos:line="68" pos:column="20"/></return>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="70" pos:column="9">/* Failure. Fall back on next path */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">debugs<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><literal type="number" pos:line="71" pos:column="16">17<pos:position pos:line="71" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="71" pos:column="19">2<pos:position pos:line="71" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="71" pos:column="21">HERE<pos:position pos:line="71" pos:column="25"/></name> <operator pos:line="71" pos:column="26">&lt;&lt;<pos:position pos:line="71" pos:column="34"/></operator> <literal type="string" pos:line="71" pos:column="29">" Pinned connection "<pos:position pos:line="71" pos:column="50"/></literal> <operator pos:line="71" pos:column="51">&lt;&lt;<pos:position pos:line="71" pos:column="59"/></operator> <name pos:line="71" pos:column="54">pinned_connection<pos:position pos:line="71" pos:column="71"/></name> <operator pos:line="71" pos:column="72">&lt;&lt;<pos:position pos:line="71" pos:column="80"/></operator> <literal type="string" pos:line="71" pos:column="75">" not valid. Releasing."<pos:position pos:line="71" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="101"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="72" pos:column="9">request<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">releasePinnedConnection<pos:position pos:line="72" pos:column="41"/></name></name><argument_list pos:line="72" pos:column="41">()<pos:position pos:line="72" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="73" pos:column="9">servers<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <name><name pos:line="73" pos:column="19">fs<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">-&gt;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="23">next<pos:position pos:line="73" pos:column="27"/></name></name></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">fwdServerFree<pos:position pos:line="74" pos:column="22"/></name><argument_list pos:line="74" pos:column="22">(<argument><expr><name pos:line="74" pos:column="23">fs<pos:position pos:line="74" pos:column="25"/></name></expr></argument>)<pos:position pos:line="74" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">connectStart<pos:position pos:line="75" pos:column="21"/></name><argument_list pos:line="75" pos:column="21">()<pos:position pos:line="75" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt>
        <return pos:line="76" pos:column="9">return;<pos:position pos:line="76" pos:column="16"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name><name pos:line="79" pos:column="9">fs<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">-&gt;<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="13">_peer<pos:position pos:line="79" pos:column="18"/></name></name></expr>)<pos:position pos:line="79" pos:column="19"/></condition><then pos:line="79" pos:column="19"> <block pos:line="79" pos:column="20">{
        <expr_stmt><expr><name pos:line="80" pos:column="9">host<pos:position pos:line="80" pos:column="13"/></name> <operator pos:line="80" pos:column="14">=<pos:position pos:line="80" pos:column="15"/></operator> <name><name pos:line="80" pos:column="16">fs<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">-&gt;<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="20">_peer<pos:position pos:line="80" pos:column="25"/></name><operator pos:line="80" pos:column="25">-&gt;<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="27">host<pos:position pos:line="80" pos:column="31"/></name></name></expr>;<pos:position pos:line="80" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="81" pos:column="9">port<pos:position pos:line="81" pos:column="13"/></name> <operator pos:line="81" pos:column="14">=<pos:position pos:line="81" pos:column="15"/></operator> <name><name pos:line="81" pos:column="16">fs<pos:position pos:line="81" pos:column="18"/></name><operator pos:line="81" pos:column="18">-&gt;<pos:position pos:line="81" pos:column="23"/></operator><name pos:line="81" pos:column="20">_peer<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">-&gt;<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="27">http_port<pos:position pos:line="81" pos:column="36"/></name></name></expr>;<pos:position pos:line="81" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="82" pos:column="9">fd<pos:position pos:line="82" pos:column="11"/></name> <operator pos:line="82" pos:column="12">=<pos:position pos:line="82" pos:column="13"/></operator> <call><name><name pos:line="82" pos:column="14">fwdPconnPool<pos:position pos:line="82" pos:column="26"/></name><operator pos:line="82" pos:column="26">-&gt;<pos:position pos:line="82" pos:column="31"/></operator><name pos:line="82" pos:column="28">pop<pos:position pos:line="82" pos:column="31"/></name></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name><name pos:line="82" pos:column="32">fs<pos:position pos:line="82" pos:column="34"/></name><operator pos:line="82" pos:column="34">-&gt;<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="36">_peer<pos:position pos:line="82" pos:column="41"/></name><operator pos:line="82" pos:column="41">-&gt;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="43">name<pos:position pos:line="82" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="49">fs<pos:position pos:line="82" pos:column="51"/></name><operator pos:line="82" pos:column="51">-&gt;<pos:position pos:line="82" pos:column="56"/></operator><name pos:line="82" pos:column="53">_peer<pos:position pos:line="82" pos:column="58"/></name><operator pos:line="82" pos:column="58">-&gt;<pos:position pos:line="82" pos:column="63"/></operator><name pos:line="82" pos:column="60">http_port<pos:position pos:line="82" pos:column="69"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="82" pos:column="71">request<pos:position pos:line="82" pos:column="78"/></name><operator pos:line="82" pos:column="78">-&gt;<pos:position pos:line="82" pos:column="83"/></operator><name pos:line="82" pos:column="80">GetHost<pos:position pos:line="82" pos:column="87"/></name></name><argument_list pos:line="82" pos:column="87">()<pos:position pos:line="82" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="82" pos:column="91">client_addr<pos:position pos:line="82" pos:column="102"/></name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="104">checkRetriable<pos:position pos:line="82" pos:column="118"/></name><argument_list pos:line="82" pos:column="118">()<pos:position pos:line="82" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="122"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then> <else pos:line="83" pos:column="7">else <block pos:line="83" pos:column="12">{
        <expr_stmt><expr><name pos:line="84" pos:column="9">host<pos:position pos:line="84" pos:column="13"/></name> <operator pos:line="84" pos:column="14">=<pos:position pos:line="84" pos:column="15"/></operator> <call><name><name pos:line="84" pos:column="16">request<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">-&gt;<pos:position pos:line="84" pos:column="28"/></operator><name pos:line="84" pos:column="25">GetHost<pos:position pos:line="84" pos:column="32"/></name></name><argument_list pos:line="84" pos:column="32">()<pos:position pos:line="84" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="85" pos:column="9">port<pos:position pos:line="85" pos:column="13"/></name> <operator pos:line="85" pos:column="14">=<pos:position pos:line="85" pos:column="15"/></operator> <name><name pos:line="85" pos:column="16">request<pos:position pos:line="85" pos:column="23"/></name><operator pos:line="85" pos:column="23">-&gt;<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="25">port<pos:position pos:line="85" pos:column="29"/></name></name></expr>;<pos:position pos:line="85" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">fd<pos:position pos:line="86" pos:column="11"/></name> <operator pos:line="86" pos:column="12">=<pos:position pos:line="86" pos:column="13"/></operator> <call><name><name pos:line="86" pos:column="14">fwdPconnPool<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">-&gt;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="28">pop<pos:position pos:line="86" pos:column="31"/></name></name><argument_list pos:line="86" pos:column="31">(<argument><expr><name pos:line="86" pos:column="32">host<pos:position pos:line="86" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="38">port<pos:position pos:line="86" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="44">NULL<pos:position pos:line="86" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="50">client_addr<pos:position pos:line="86" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="86" pos:column="63">checkRetriable<pos:position pos:line="86" pos:column="77"/></name><argument_list pos:line="86" pos:column="77">()<pos:position pos:line="86" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></else></if>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><name pos:line="88" pos:column="9">fd<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">&gt;=<pos:position pos:line="88" pos:column="17"/></operator> <literal type="number" pos:line="88" pos:column="15">0<pos:position pos:line="88" pos:column="16"/></literal></expr>)<pos:position pos:line="88" pos:column="17"/></condition><then pos:line="88" pos:column="17"> <block pos:line="88" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">debugs<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><literal type="number" pos:line="89" pos:column="16">17<pos:position pos:line="89" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="20">3<pos:position pos:line="89" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="23">"fwdConnectStart: reusing pconn FD "<pos:position pos:line="89" pos:column="59"/></literal> <operator pos:line="89" pos:column="60">&lt;&lt;<pos:position pos:line="89" pos:column="68"/></operator> <name pos:line="89" pos:column="63">fd<pos:position pos:line="89" pos:column="65"/></name></expr></argument>)<pos:position pos:line="89" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="90" pos:column="9">server_fd<pos:position pos:line="90" pos:column="18"/></name> <operator pos:line="90" pos:column="19">=<pos:position pos:line="90" pos:column="20"/></operator> <name pos:line="90" pos:column="21">fd<pos:position pos:line="90" pos:column="23"/></name></expr>;<pos:position pos:line="90" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">n_tries<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">++<pos:position pos:line="91" pos:column="18"/></operator></expr>;<pos:position pos:line="91" pos:column="19"/></expr_stmt>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><operator pos:line="93" pos:column="13">!<pos:position pos:line="93" pos:column="14"/></operator><name><name pos:line="93" pos:column="14">fs<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">-&gt;<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="18">_peer<pos:position pos:line="93" pos:column="23"/></name></name></expr>)<pos:position pos:line="93" pos:column="24"/></condition><then pos:line="93" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="13">origin_tries<pos:position pos:line="94" pos:column="25"/></name><operator pos:line="94" pos:column="25">++<pos:position pos:line="94" pos:column="27"/></operator></expr>;<pos:position pos:line="94" pos:column="28"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="96" pos:column="9">updateHierarchyInfo<pos:position pos:line="96" pos:column="28"/></name><argument_list pos:line="96" pos:column="28">()<pos:position pos:line="96" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="98" pos:column="9">comm_add_close_handler<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">fd<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="36">fwdServerClosedWrapper<pos:position pos:line="98" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="98" pos:column="60">this<pos:position pos:line="98" pos:column="64"/></name></expr></argument>)<pos:position pos:line="98" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="66"/></expr_stmt>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><call><name pos:line="100" pos:column="13">comm_local_port<pos:position pos:line="100" pos:column="28"/></name><argument_list pos:line="100" pos:column="28">(<argument><expr><name pos:line="100" pos:column="29">fd<pos:position pos:line="100" pos:column="31"/></name></expr></argument>)<pos:position pos:line="100" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="33"/></condition><then pos:line="100" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="13">request<pos:position pos:line="101" pos:column="20"/></name><operator pos:line="101" pos:column="20">-&gt;<pos:position pos:line="101" pos:column="25"/></operator><name pos:line="101" pos:column="22">hier<pos:position pos:line="101" pos:column="26"/></name><operator pos:line="101" pos:column="26">.<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="27">peer_local_addr<pos:position pos:line="101" pos:column="42"/></name></name> <operator pos:line="101" pos:column="43">=<pos:position pos:line="101" pos:column="44"/></operator> <name><name pos:line="101" pos:column="45">fd_table<pos:position pos:line="101" pos:column="53"/></name><index pos:line="101" pos:column="53">[<expr><name pos:line="101" pos:column="54">fd<pos:position pos:line="101" pos:column="56"/></name></expr>]<pos:position pos:line="101" pos:column="57"/></index></name><operator pos:line="101" pos:column="57">.<pos:position pos:line="101" pos:column="58"/></operator><name pos:line="101" pos:column="58">local_addr<pos:position pos:line="101" pos:column="68"/></name></expr>;<pos:position pos:line="101" pos:column="69"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="103" pos:column="9">dispatch<pos:position pos:line="103" pos:column="17"/></name><argument_list pos:line="103" pos:column="17">()<pos:position pos:line="103" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="20"/></expr_stmt>

        <return pos:line="105" pos:column="9">return;<pos:position pos:line="105" pos:column="16"/></return>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

<cpp:if pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">if<pos:position pos:line="108" pos:column="4"/></cpp:directive> <expr><name pos:line="108" pos:column="5">URL_CHECKSUM_DEBUG<pos:position pos:line="108" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="109" pos:column="5">entry<pos:position pos:line="109" pos:column="10"/></name><operator pos:line="109" pos:column="10">-&gt;<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="12">mem_obj<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">-&gt;<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="21">checkUrlChecksum<pos:position pos:line="109" pos:column="37"/></name></name><argument_list pos:line="109" pos:column="37">()<pos:position pos:line="109" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">endif<pos:position pos:line="110" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="112" pos:column="5">outgoing<pos:position pos:line="112" pos:column="13"/></name> <operator pos:line="112" pos:column="14">=<pos:position pos:line="112" pos:column="15"/></operator> <call><name pos:line="112" pos:column="16">getOutgoingAddr<pos:position pos:line="112" pos:column="31"/></name><argument_list pos:line="112" pos:column="31">(<argument><expr><name pos:line="112" pos:column="32">request<pos:position pos:line="112" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="41">fs<pos:position pos:line="112" pos:column="43"/></name><operator pos:line="112" pos:column="43">-&gt;<pos:position pos:line="112" pos:column="48"/></operator><name pos:line="112" pos:column="45">_peer<pos:position pos:line="112" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="52"/></expr_stmt>

    <comment type="line" pos:line="114" pos:column="5">// if IPv6 is disabled try to force IPv4-only outgoing.</comment>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><operator pos:line="115" pos:column="9">!<pos:position pos:line="115" pos:column="10"/></operator><name><name pos:line="115" pos:column="10">Ip<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">::<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">EnableIpv6<pos:position pos:line="115" pos:column="24"/></name></name> <operator pos:line="115" pos:column="25">&amp;&amp;<pos:position pos:line="115" pos:column="35"/></operator> <operator pos:line="115" pos:column="28">!<pos:position pos:line="115" pos:column="29"/></operator><call><name><name pos:line="115" pos:column="29">outgoing<pos:position pos:line="115" pos:column="37"/></name><operator pos:line="115" pos:column="37">.<pos:position pos:line="115" pos:column="38"/></operator><name pos:line="115" pos:column="38">SetIPv4<pos:position pos:line="115" pos:column="45"/></name></name><argument_list pos:line="115" pos:column="45">()<pos:position pos:line="115" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="115" pos:column="48"/></condition><then pos:line="115" pos:column="48"> <block pos:line="115" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="116" pos:column="9">debugs<pos:position pos:line="116" pos:column="15"/></name><argument_list pos:line="116" pos:column="15">(<argument><expr><literal type="number" pos:line="116" pos:column="16">50<pos:position pos:line="116" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="20">4<pos:position pos:line="116" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="23">"fwdConnectStart: IPv6 is Disabled. Cannot connect from "<pos:position pos:line="116" pos:column="80"/></literal> <operator pos:line="116" pos:column="81">&lt;&lt;<pos:position pos:line="116" pos:column="89"/></operator> <name pos:line="116" pos:column="84">outgoing<pos:position pos:line="116" pos:column="92"/></name></expr></argument>)<pos:position pos:line="116" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="94"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="117" pos:column="9">ErrorState<pos:position pos:line="117" pos:column="19"/></name> <modifier pos:line="117" pos:column="20">*<pos:position pos:line="117" pos:column="21"/></modifier></type><name pos:line="117" pos:column="21">anErr<pos:position pos:line="117" pos:column="26"/></name> <init pos:line="117" pos:column="27">= <expr><call><name pos:line="117" pos:column="29">errorCon<pos:position pos:line="117" pos:column="37"/></name><argument_list pos:line="117" pos:column="37">(<argument><expr><name pos:line="117" pos:column="38">ERR_CONNECT_FAIL<pos:position pos:line="117" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="56">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="117" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="82">request<pos:position pos:line="117" pos:column="89"/></name></expr></argument>)<pos:position pos:line="117" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="91"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">anErr<pos:position pos:line="118" pos:column="14"/></name><operator pos:line="118" pos:column="14">-&gt;<pos:position pos:line="118" pos:column="19"/></operator><name pos:line="118" pos:column="16">xerrno<pos:position pos:line="118" pos:column="22"/></name></name> <operator pos:line="118" pos:column="23">=<pos:position pos:line="118" pos:column="24"/></operator> <name pos:line="118" pos:column="25">EAFNOSUPPORT<pos:position pos:line="118" pos:column="37"/></name></expr>;<pos:position pos:line="118" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">fail<pos:position pos:line="119" pos:column="13"/></name><argument_list pos:line="119" pos:column="13">(<argument><expr><name pos:line="119" pos:column="14">anErr<pos:position pos:line="119" pos:column="19"/></name></expr></argument>)<pos:position pos:line="119" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">self<pos:position pos:line="120" pos:column="13"/></name> <operator pos:line="120" pos:column="14">=<pos:position pos:line="120" pos:column="15"/></operator> <name pos:line="120" pos:column="16">NULL<pos:position pos:line="120" pos:column="20"/></name></expr>;<pos:position pos:line="120" pos:column="21"/></expr_stmt>	<comment type="line" pos:line="120" pos:column="25">// refcounted</comment>
        <return pos:line="121" pos:column="9">return;<pos:position pos:line="121" pos:column="16"/></return>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="124" pos:column="5">// if IPv6 is split-stack, prefer IPv4</comment>
    <if pos:line="125" pos:column="5">if <condition pos:line="125" pos:column="8">(<expr><name><name pos:line="125" pos:column="9">Ip<pos:position pos:line="125" pos:column="11"/></name><operator pos:line="125" pos:column="11">::<pos:position pos:line="125" pos:column="13"/></operator><name pos:line="125" pos:column="13">EnableIpv6<pos:position pos:line="125" pos:column="23"/></name></name><operator pos:line="125" pos:column="23">&amp;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="125" pos:column="47"/></name></expr>)<pos:position pos:line="125" pos:column="48"/></condition><then pos:line="125" pos:column="48"> <block pos:line="125" pos:column="49">{
        <comment type="line" pos:line="126" pos:column="9">// NP: This is not a great choice of default,</comment>
        <comment type="line" pos:line="127" pos:column="9">// but with the current Internet being IPv4-majority has a higher success rate.</comment>
        <comment type="line" pos:line="128" pos:column="9">// if setting to IPv4 fails we dont care, that just means to use IPv6 outgoing.</comment>
        <expr_stmt><expr><call><name><name pos:line="129" pos:column="9">outgoing<pos:position pos:line="129" pos:column="17"/></name><operator pos:line="129" pos:column="17">.<pos:position pos:line="129" pos:column="18"/></operator><name pos:line="129" pos:column="18">SetIPv4<pos:position pos:line="129" pos:column="25"/></name></name><argument_list pos:line="129" pos:column="25">()<pos:position pos:line="129" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="130" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="132" pos:column="5">tos<pos:position pos:line="132" pos:column="8"/></name> <operator pos:line="132" pos:column="9">=<pos:position pos:line="132" pos:column="10"/></operator> <call><name pos:line="132" pos:column="11">getOutgoingTOS<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name pos:line="132" pos:column="26">request<pos:position pos:line="132" pos:column="33"/></name></expr></argument>)<pos:position pos:line="132" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="134" pos:column="5">debugs<pos:position pos:line="134" pos:column="11"/></name><argument_list pos:line="134" pos:column="11">(<argument><expr><literal type="number" pos:line="134" pos:column="12">17<pos:position pos:line="134" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="16">3<pos:position pos:line="134" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="19">"fwdConnectStart: got outgoing addr "<pos:position pos:line="134" pos:column="56"/></literal> <operator pos:line="134" pos:column="57">&lt;&lt;<pos:position pos:line="134" pos:column="65"/></operator> <name pos:line="134" pos:column="60">outgoing<pos:position pos:line="134" pos:column="68"/></name> <operator pos:line="134" pos:column="69">&lt;&lt;<pos:position pos:line="134" pos:column="77"/></operator> <literal type="string" pos:line="134" pos:column="72">", tos "<pos:position pos:line="134" pos:column="80"/></literal> <operator pos:line="134" pos:column="81">&lt;&lt;<pos:position pos:line="134" pos:column="89"/></operator> <name pos:line="134" pos:column="84">tos<pos:position pos:line="134" pos:column="87"/></name></expr></argument>)<pos:position pos:line="134" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="89"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="136" pos:column="5">int<pos:position pos:line="136" pos:column="8"/></name></type> <name pos:line="136" pos:column="9">commFlags<pos:position pos:line="136" pos:column="18"/></name> <init pos:line="136" pos:column="19">= <expr><name pos:line="136" pos:column="21">COMM_NONBLOCKING<pos:position pos:line="136" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="136" pos:column="38"/></decl_stmt>
    <if pos:line="137" pos:column="5">if <condition pos:line="137" pos:column="8">(<expr><name><name pos:line="137" pos:column="9">request<pos:position pos:line="137" pos:column="16"/></name><operator pos:line="137" pos:column="16">-&gt;<pos:position pos:line="137" pos:column="21"/></operator><name pos:line="137" pos:column="18">flags<pos:position pos:line="137" pos:column="23"/></name><operator pos:line="137" pos:column="23">.<pos:position pos:line="137" pos:column="24"/></operator><name pos:line="137" pos:column="24">spoof_client_ip<pos:position pos:line="137" pos:column="39"/></name></name></expr>)<pos:position pos:line="137" pos:column="40"/></condition><then pos:line="137" pos:column="40"> <block pos:line="137" pos:column="41">{
        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><operator pos:line="138" pos:column="13">!<pos:position pos:line="138" pos:column="14"/></operator><name><name pos:line="138" pos:column="14">fs<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">-&gt;<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="18">_peer<pos:position pos:line="138" pos:column="23"/></name></name> <operator pos:line="138" pos:column="24">||<pos:position pos:line="138" pos:column="26"/></operator> <operator pos:line="138" pos:column="27">!<pos:position pos:line="138" pos:column="28"/></operator><name><name pos:line="138" pos:column="28">fs<pos:position pos:line="138" pos:column="30"/></name><operator pos:line="138" pos:column="30">-&gt;<pos:position pos:line="138" pos:column="35"/></operator><name pos:line="138" pos:column="32">_peer<pos:position pos:line="138" pos:column="37"/></name><operator pos:line="138" pos:column="37">-&gt;<pos:position pos:line="138" pos:column="42"/></operator><name pos:line="138" pos:column="39">options<pos:position pos:line="138" pos:column="46"/></name><operator pos:line="138" pos:column="46">.<pos:position pos:line="138" pos:column="47"/></operator><name pos:line="138" pos:column="47">no_tproxy<pos:position pos:line="138" pos:column="56"/></name></name></expr>)<pos:position pos:line="138" pos:column="57"/></condition><then pos:line="138" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="13">commFlags<pos:position pos:line="139" pos:column="22"/></name> <operator pos:line="139" pos:column="23">|=<pos:position pos:line="139" pos:column="25"/></operator> <name pos:line="139" pos:column="26">COMM_TRANSPARENT<pos:position pos:line="139" pos:column="42"/></name></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt></block></then></if>
        <comment type="line" pos:line="140" pos:column="9">// else no tproxy today ...</comment>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="143" pos:column="5">fd<pos:position pos:line="143" pos:column="7"/></name> <operator pos:line="143" pos:column="8">=<pos:position pos:line="143" pos:column="9"/></operator> <call><name pos:line="143" pos:column="10">comm_openex<pos:position pos:line="143" pos:column="21"/></name><argument_list pos:line="143" pos:column="21">(<argument><expr><name pos:line="143" pos:column="22">SOCK_STREAM<pos:position pos:line="143" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="35">IPPROTO_TCP<pos:position pos:line="143" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="48">outgoing<pos:position pos:line="143" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="58">commFlags<pos:position pos:line="143" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="69">tos<pos:position pos:line="143" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="74">url<pos:position pos:line="143" pos:column="77"/></name></expr></argument>)<pos:position pos:line="143" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="145" pos:column="5">debugs<pos:position pos:line="145" pos:column="11"/></name><argument_list pos:line="145" pos:column="11">(<argument><expr><literal type="number" pos:line="145" pos:column="12">17<pos:position pos:line="145" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="16">3<pos:position pos:line="145" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="19">"fwdConnectStart: got TCP FD "<pos:position pos:line="145" pos:column="49"/></literal> <operator pos:line="145" pos:column="50">&lt;&lt;<pos:position pos:line="145" pos:column="58"/></operator> <name pos:line="145" pos:column="53">fd<pos:position pos:line="145" pos:column="55"/></name></expr></argument>)<pos:position pos:line="145" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="57"/></expr_stmt>

    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><name pos:line="147" pos:column="9">fd<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">&lt;<pos:position pos:line="147" pos:column="16"/></operator> <literal type="number" pos:line="147" pos:column="14">0<pos:position pos:line="147" pos:column="15"/></literal></expr>)<pos:position pos:line="147" pos:column="16"/></condition><then pos:line="147" pos:column="16"> <block pos:line="147" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="148" pos:column="9">debugs<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><literal type="number" pos:line="148" pos:column="16">50<pos:position pos:line="148" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="20">4<pos:position pos:line="148" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="23">"fwdConnectStart: "<pos:position pos:line="148" pos:column="42"/></literal> <operator pos:line="148" pos:column="43">&lt;&lt;<pos:position pos:line="148" pos:column="51"/></operator> <call><name pos:line="148" pos:column="46">xstrerror<pos:position pos:line="148" pos:column="55"/></name><argument_list pos:line="148" pos:column="55">()<pos:position pos:line="148" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="148" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="59"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="149" pos:column="9">ErrorState<pos:position pos:line="149" pos:column="19"/></name> <modifier pos:line="149" pos:column="20">*<pos:position pos:line="149" pos:column="21"/></modifier></type><name pos:line="149" pos:column="21">anErr<pos:position pos:line="149" pos:column="26"/></name> <init pos:line="149" pos:column="27">= <expr><call><name pos:line="149" pos:column="29">errorCon<pos:position pos:line="149" pos:column="37"/></name><argument_list pos:line="149" pos:column="37">(<argument><expr><name pos:line="149" pos:column="38">ERR_SOCKET_FAILURE<pos:position pos:line="149" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="58">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="149" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="149" pos:column="86">request<pos:position pos:line="149" pos:column="93"/></name></expr></argument>)<pos:position pos:line="149" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="149" pos:column="95"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="150" pos:column="9">anErr<pos:position pos:line="150" pos:column="14"/></name><operator pos:line="150" pos:column="14">-&gt;<pos:position pos:line="150" pos:column="19"/></operator><name pos:line="150" pos:column="16">xerrno<pos:position pos:line="150" pos:column="22"/></name></name> <operator pos:line="150" pos:column="23">=<pos:position pos:line="150" pos:column="24"/></operator> <name pos:line="150" pos:column="25">errno<pos:position pos:line="150" pos:column="30"/></name></expr>;<pos:position pos:line="150" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">fail<pos:position pos:line="151" pos:column="13"/></name><argument_list pos:line="151" pos:column="13">(<argument><expr><name pos:line="151" pos:column="14">anErr<pos:position pos:line="151" pos:column="19"/></name></expr></argument>)<pos:position pos:line="151" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="152" pos:column="9">self<pos:position pos:line="152" pos:column="13"/></name> <operator pos:line="152" pos:column="14">=<pos:position pos:line="152" pos:column="15"/></operator> <name pos:line="152" pos:column="16">NULL<pos:position pos:line="152" pos:column="20"/></name></expr>;<pos:position pos:line="152" pos:column="21"/></expr_stmt>	<comment type="line" pos:line="152" pos:column="25">// refcounted</comment>
        <return pos:line="153" pos:column="9">return;<pos:position pos:line="153" pos:column="16"/></return>
    }<pos:position pos:line="154" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="156" pos:column="5">server_fd<pos:position pos:line="156" pos:column="14"/></name> <operator pos:line="156" pos:column="15">=<pos:position pos:line="156" pos:column="16"/></operator> <name pos:line="156" pos:column="17">fd<pos:position pos:line="156" pos:column="19"/></name></expr>;<pos:position pos:line="156" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="157" pos:column="5">n_tries<pos:position pos:line="157" pos:column="12"/></name><operator pos:line="157" pos:column="12">++<pos:position pos:line="157" pos:column="14"/></operator></expr>;<pos:position pos:line="157" pos:column="15"/></expr_stmt>

    <if pos:line="159" pos:column="5">if <condition pos:line="159" pos:column="8">(<expr><operator pos:line="159" pos:column="9">!<pos:position pos:line="159" pos:column="10"/></operator><name><name pos:line="159" pos:column="10">fs<pos:position pos:line="159" pos:column="12"/></name><operator pos:line="159" pos:column="12">-&gt;<pos:position pos:line="159" pos:column="17"/></operator><name pos:line="159" pos:column="14">_peer<pos:position pos:line="159" pos:column="19"/></name></name></expr>)<pos:position pos:line="159" pos:column="20"/></condition><then pos:line="159" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="9">origin_tries<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">++<pos:position pos:line="160" pos:column="23"/></operator></expr>;<pos:position pos:line="160" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="162" pos:column="5">if <condition pos:line="162" pos:column="8">(<expr><call><name pos:line="162" pos:column="9">comm_local_port<pos:position pos:line="162" pos:column="24"/></name><argument_list pos:line="162" pos:column="24">(<argument><expr><name pos:line="162" pos:column="25">fd<pos:position pos:line="162" pos:column="27"/></name></expr></argument>)<pos:position pos:line="162" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="29"/></condition><then pos:line="162" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="163" pos:column="9">request<pos:position pos:line="163" pos:column="16"/></name><operator pos:line="163" pos:column="16">-&gt;<pos:position pos:line="163" pos:column="21"/></operator><name pos:line="163" pos:column="18">hier<pos:position pos:line="163" pos:column="22"/></name><operator pos:line="163" pos:column="22">.<pos:position pos:line="163" pos:column="23"/></operator><name pos:line="163" pos:column="23">peer_local_addr<pos:position pos:line="163" pos:column="38"/></name></name> <operator pos:line="163" pos:column="39">=<pos:position pos:line="163" pos:column="40"/></operator> <name><name pos:line="163" pos:column="41">fd_table<pos:position pos:line="163" pos:column="49"/></name><index pos:line="163" pos:column="49">[<expr><name pos:line="163" pos:column="50">fd<pos:position pos:line="163" pos:column="52"/></name></expr>]<pos:position pos:line="163" pos:column="53"/></index></name><operator pos:line="163" pos:column="53">.<pos:position pos:line="163" pos:column="54"/></operator><name pos:line="163" pos:column="54">local_addr<pos:position pos:line="163" pos:column="64"/></name></expr>;<pos:position pos:line="163" pos:column="65"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="165" pos:column="5">/*
     * stats.conn_open is used to account for the number of
     * connections that we have open to the peer, so we can limit
     * based on the max-conn option.  We need to increment here,
     * even if the connection may fail.
     */</comment>

    <if pos:line="172" pos:column="5">if <condition pos:line="172" pos:column="8">(<expr><name><name pos:line="172" pos:column="9">fs<pos:position pos:line="172" pos:column="11"/></name><operator pos:line="172" pos:column="11">-&gt;<pos:position pos:line="172" pos:column="16"/></operator><name pos:line="172" pos:column="13">_peer<pos:position pos:line="172" pos:column="18"/></name></name></expr>)<pos:position pos:line="172" pos:column="19"/></condition><then pos:line="172" pos:column="19"> <block pos:line="172" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="173" pos:column="9">fs<pos:position pos:line="173" pos:column="11"/></name><operator pos:line="173" pos:column="11">-&gt;<pos:position pos:line="173" pos:column="16"/></operator><name pos:line="173" pos:column="13">_peer<pos:position pos:line="173" pos:column="18"/></name><operator pos:line="173" pos:column="18">-&gt;<pos:position pos:line="173" pos:column="23"/></operator><name pos:line="173" pos:column="20">stats<pos:position pos:line="173" pos:column="25"/></name><operator pos:line="173" pos:column="25">.<pos:position pos:line="173" pos:column="26"/></operator><name pos:line="173" pos:column="26">conn_open<pos:position pos:line="173" pos:column="35"/></name></name><operator pos:line="173" pos:column="35">++<pos:position pos:line="173" pos:column="37"/></operator></expr>;<pos:position pos:line="173" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">comm_add_close_handler<pos:position pos:line="174" pos:column="31"/></name><argument_list pos:line="174" pos:column="31">(<argument><expr><name pos:line="174" pos:column="32">fd<pos:position pos:line="174" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="36">fwdPeerClosed<pos:position pos:line="174" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="174" pos:column="51">fs<pos:position pos:line="174" pos:column="53"/></name><operator pos:line="174" pos:column="53">-&gt;<pos:position pos:line="174" pos:column="58"/></operator><name pos:line="174" pos:column="55">_peer<pos:position pos:line="174" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="175" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="177" pos:column="5">comm_add_close_handler<pos:position pos:line="177" pos:column="27"/></name><argument_list pos:line="177" pos:column="27">(<argument><expr><name pos:line="177" pos:column="28">fd<pos:position pos:line="177" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="32">fwdServerClosedWrapper<pos:position pos:line="177" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="56">this<pos:position pos:line="177" pos:column="60"/></name></expr></argument>)<pos:position pos:line="177" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="179" pos:column="5">commSetTimeout<pos:position pos:line="179" pos:column="19"/></name><argument_list pos:line="179" pos:column="19">(<argument><expr><name pos:line="179" pos:column="20">fd<pos:position pos:line="179" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="24">ctimeout<pos:position pos:line="179" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="34">fwdConnectTimeoutWrapper<pos:position pos:line="179" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="60">this<pos:position pos:line="179" pos:column="64"/></name></expr></argument>)<pos:position pos:line="179" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="66"/></expr_stmt>

<cpp:if pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">if<pos:position pos:line="181" pos:column="4"/></cpp:directive> <expr><name pos:line="181" pos:column="5">LINUX_TPROXY2<pos:position pos:line="181" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="182" pos:column="5">if <condition pos:line="182" pos:column="8">(<expr><operator pos:line="182" pos:column="9">!<pos:position pos:line="182" pos:column="10"/></operator><name><name pos:line="182" pos:column="10">fs<pos:position pos:line="182" pos:column="12"/></name><operator pos:line="182" pos:column="12">-&gt;<pos:position pos:line="182" pos:column="17"/></operator><name pos:line="182" pos:column="14">_peer<pos:position pos:line="182" pos:column="19"/></name></name> <operator pos:line="182" pos:column="20">&amp;&amp;<pos:position pos:line="182" pos:column="30"/></operator> <name><name pos:line="182" pos:column="23">request<pos:position pos:line="182" pos:column="30"/></name><operator pos:line="182" pos:column="30">-&gt;<pos:position pos:line="182" pos:column="35"/></operator><name pos:line="182" pos:column="32">flags<pos:position pos:line="182" pos:column="37"/></name><operator pos:line="182" pos:column="37">.<pos:position pos:line="182" pos:column="38"/></operator><name pos:line="182" pos:column="38">spoof_client_ip<pos:position pos:line="182" pos:column="53"/></name></name></expr>)<pos:position pos:line="182" pos:column="54"/></condition><then pos:line="182" pos:column="54"> <block pos:line="182" pos:column="55">{
        <comment type="line" pos:line="183" pos:column="9">// try to set the outgoing address using TPROXY v2</comment>
        <comment type="line" pos:line="184" pos:column="9">// if it fails we abort any further TPROXY actions on this connection</comment>
        <if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><call><name><name pos:line="185" pos:column="13">IpInterceptor<pos:position pos:line="185" pos:column="26"/></name><operator pos:line="185" pos:column="26">.<pos:position pos:line="185" pos:column="27"/></operator><name pos:line="185" pos:column="27">SetTproxy2OutgoingAddr<pos:position pos:line="185" pos:column="49"/></name></name><argument_list pos:line="185" pos:column="49">(<argument><expr><name pos:line="185" pos:column="50">fd<pos:position pos:line="185" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="185" pos:column="54">src<pos:position pos:line="185" pos:column="57"/></name></expr></argument>)<pos:position pos:line="185" pos:column="58"/></argument_list></call> <operator pos:line="185" pos:column="59">==<pos:position pos:line="185" pos:column="61"/></operator> <operator pos:line="185" pos:column="62">-<pos:position pos:line="185" pos:column="63"/></operator><literal type="number" pos:line="185" pos:column="63">1<pos:position pos:line="185" pos:column="64"/></literal></expr>)<pos:position pos:line="185" pos:column="65"/></condition><then pos:line="185" pos:column="65"> <block pos:line="185" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="186" pos:column="13">request<pos:position pos:line="186" pos:column="20"/></name><operator pos:line="186" pos:column="20">-&gt;<pos:position pos:line="186" pos:column="25"/></operator><name pos:line="186" pos:column="22">flags<pos:position pos:line="186" pos:column="27"/></name><operator pos:line="186" pos:column="27">.<pos:position pos:line="186" pos:column="28"/></operator><name pos:line="186" pos:column="28">spoof_client_ip<pos:position pos:line="186" pos:column="43"/></name></name> <operator pos:line="186" pos:column="44">=<pos:position pos:line="186" pos:column="45"/></operator> <literal type="number" pos:line="186" pos:column="46">0<pos:position pos:line="186" pos:column="47"/></literal></expr>;<pos:position pos:line="186" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="187" pos:column="10"/></block></then></if>
    }<pos:position pos:line="188" pos:column="6"/></block></then></if>
<cpp:endif pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">endif<pos:position pos:line="189" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="191" pos:column="5">updateHierarchyInfo<pos:position pos:line="191" pos:column="24"/></name><argument_list pos:line="191" pos:column="24">()<pos:position pos:line="191" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="192" pos:column="5">commConnectStart<pos:position pos:line="192" pos:column="21"/></name><argument_list pos:line="192" pos:column="21">(<argument><expr><name pos:line="192" pos:column="22">fd<pos:position pos:line="192" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="26">host<pos:position pos:line="192" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="32">port<pos:position pos:line="192" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="38">fwdConnectDoneWrapper<pos:position pos:line="192" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="61">this<pos:position pos:line="192" pos:column="65"/></name></expr></argument>)<pos:position pos:line="192" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="67"/></expr_stmt>
}<pos:position pos:line="193" pos:column="2"/></block></function></unit>

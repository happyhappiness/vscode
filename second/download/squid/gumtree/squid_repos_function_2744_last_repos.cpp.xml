<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2744_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStoreRr<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">create<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">Config<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">memShared<pos:position pos:line="4" pos:column="26"/></name></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">int64_t<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">entryLimit<pos:position pos:line="7" pos:column="29"/></name> <init pos:line="7" pos:column="30">= <expr><call><name><name pos:line="7" pos:column="32">MemStore<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">::<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">EntryLimit<pos:position pos:line="7" pos:column="52"/></name></name><argument_list pos:line="7" pos:column="52">()<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">entryLimit<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&lt;=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25"> <block pos:line="8" pos:column="26">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">Config<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">memMaxSize<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">&gt;<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="33">0<pos:position pos:line="9" pos:column="34"/></literal></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35"> <block pos:line="9" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debugs<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="number" pos:line="10" pos:column="20">20<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">DBG_IMPORTANT<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="39">"WARNING: mem-cache size is too small ("<pos:position pos:line="10" pos:column="79"/></literal>
                   <operator pos:line="11" pos:column="20">&lt;&lt;<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="23">(<pos:position pos:line="11" pos:column="24"/></operator><name><name pos:line="11" pos:column="24">Config<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">.<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">memMaxSize<pos:position pos:line="11" pos:column="41"/></name></name> <operator pos:line="11" pos:column="42">/<pos:position pos:line="11" pos:column="43"/></operator> <literal type="number" pos:line="11" pos:column="44">1024.0<pos:position pos:line="11" pos:column="50"/></literal><operator pos:line="11" pos:column="50">)<pos:position pos:line="11" pos:column="51"/></operator> <operator pos:line="11" pos:column="52">&lt;&lt;<pos:position pos:line="11" pos:column="60"/></operator> <literal type="string" pos:line="11" pos:column="55">" KB), should be &gt;= "<pos:position pos:line="11" pos:column="79"/></literal> <operator pos:line="11" pos:column="77">&lt;&lt;<pos:position pos:line="11" pos:column="85"/></operator>
                   <operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><call><name><name pos:line="12" pos:column="21">Ipc<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">::<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">Mem<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">::<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">PageSize<pos:position pos:line="12" pos:column="39"/></name></name><argument_list pos:line="12" pos:column="39">()<pos:position pos:line="12" pos:column="41"/></argument_list></call> <operator pos:line="12" pos:column="42">/<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="44">1024.0<pos:position pos:line="12" pos:column="50"/></literal><operator pos:line="12" pos:column="50">)<pos:position pos:line="12" pos:column="51"/></operator> <operator pos:line="12" pos:column="52">&lt;&lt;<pos:position pos:line="12" pos:column="60"/></operator> <literal type="string" pos:line="12" pos:column="55">" KB"<pos:position pos:line="12" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return> <comment type="line" pos:line="14" pos:column="17">// no memory cache configured or a misconfiguration</comment>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">Must<pos:position pos:line="17" pos:column="9"/></name><argument_list pos:line="17" pos:column="9">(<argument><expr><operator pos:line="17" pos:column="10">!<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">spaceOwner<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">spaceOwner<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <call><call><name pos:line="18" pos:column="18">shm_new<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">Ipc<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">::<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">Mem<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">::<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">PageStack<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call><argument_list pos:line="18" pos:column="46">(<argument><expr><name pos:line="18" pos:column="47">SpaceLabel<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">SpacePoolId<pos:position pos:line="18" pos:column="70"/></name></expr></argument>,
                 <argument><expr><name pos:line="19" pos:column="18">entryLimit<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">Must<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><operator pos:line="20" pos:column="10">!<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">mapOwner<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">mapOwner<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <call><name><name pos:line="21" pos:column="16">MemStoreMap<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">::<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">Init<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">MapLabel<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">entryLimit<pos:position pos:line="21" pos:column="54"/></name></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">Must<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><operator pos:line="22" pos:column="10">!<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">extrasOwner<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">extrasOwner<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><call><name pos:line="23" pos:column="19">shm_new<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">MemStoreMapExtras<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call><argument_list pos:line="23" pos:column="45">(<argument><expr><name pos:line="23" pos:column="46">ExtrasLabel<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="59">entryLimit<pos:position pos:line="23" pos:column="69"/></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="71"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

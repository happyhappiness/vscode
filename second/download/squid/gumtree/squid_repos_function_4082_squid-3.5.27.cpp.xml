<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4082_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">useAdapted<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name><name pos:line="2" pos:column="48">libecap<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name><name pos:line="2" pos:column="57">shared_ptr<pos:position pos:line="2" pos:column="67"/></name><argument_list type="generic" pos:line="2" pos:column="67">&lt;<argument><expr><name><name pos:line="2" pos:column="68">libecap<pos:position pos:line="2" pos:column="75"/></name><operator pos:line="2" pos:column="75">::<pos:position pos:line="2" pos:column="77"/></operator><name pos:line="2" pos:column="77">Message<pos:position pos:line="2" pos:column="84"/></name></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="88"/></argument_list></name></name> <modifier pos:line="2" pos:column="86">&amp;<pos:position pos:line="2" pos:column="91"/></modifier></type><name pos:line="2" pos:column="87">m<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <call><name pos:line="4" pos:column="26">status<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">m<pos:position pos:line="5" pos:column="11"/></name></expr></argument>)<pos:position pos:line="5" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">theAnswerRep<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">m<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">proxyingAb<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">==<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">opUndecided<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HttpMsg<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">msg<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><call><name pos:line="9" pos:column="20">answer<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">header<pos:position pos:line="9" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name><name pos:line="10" pos:column="10">theAnswerRep<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">body<pos:position pos:line="10" pos:column="28"/></name></name><argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31"> <block pos:line="10" pos:column="32">{ <comment type="line" pos:line="10" pos:column="34">// final, bodyless answer</comment>
        <expr_stmt><expr><name pos:line="11" pos:column="9">proxyingAb<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">opNever<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">updateHistory<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">msg<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">sendAnswer<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><call><name><name pos:line="13" pos:column="20">Answer<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">::<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">Forward<pos:position pos:line="13" pos:column="35"/></name></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">msg<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{ <comment type="line" pos:line="14" pos:column="14">// got answer headers but need to handle body</comment>
        <expr_stmt><expr><name pos:line="15" pos:column="9">proxyingAb<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">opOn<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">Must<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><operator pos:line="16" pos:column="14">!<pos:position pos:line="16" pos:column="15"/></operator><name><name pos:line="16" pos:column="15">msg<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">body_pipe<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt> <comment type="line" pos:line="16" pos:column="32">// only host can set body pipes</comment>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">MessageRep<pos:position pos:line="17" pos:column="19"/></name> <modifier pos:line="17" pos:column="20">*<pos:position pos:line="17" pos:column="21"/></modifier></type><name pos:line="17" pos:column="21">rep<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><cast type="dynamic" pos:line="17" pos:column="27">dynamic_cast<argument_list type="generic" pos:line="17" pos:column="39">&lt;<argument><expr><name pos:line="17" pos:column="40">MessageRep<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">*<pos:position pos:line="17" pos:column="51"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="55"/></argument_list><argument_list pos:line="17" pos:column="52">(<argument><expr><call><name><name pos:line="17" pos:column="53">theAnswerRep<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">.<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="66">get<pos:position pos:line="17" pos:column="69"/></name></name><argument_list pos:line="17" pos:column="69">()<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="17" pos:column="73"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">Must<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">rep<pos:position pos:line="18" pos:column="17"/></name></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">rep<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">tieBody<pos:position pos:line="19" pos:column="21"/></name></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">this<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt> <comment type="line" pos:line="19" pos:column="29">// sets us as a producer</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">Must<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name><name pos:line="20" pos:column="14">msg<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">body_pipe<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">!=<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">NULL<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt> <comment type="line" pos:line="20" pos:column="39">// check tieBody</comment>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">updateHistory<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">msg<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">sendAnswer<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><call><name><name pos:line="23" pos:column="20">Answer<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">::<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">Forward<pos:position pos:line="23" pos:column="35"/></name></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">msg<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">93<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="25" pos:column="19">4<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="22">HERE<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&lt;&lt;<pos:position pos:line="25" pos:column="35"/></operator> <literal type="string" pos:line="25" pos:column="30">"adapter will produce body"<pos:position pos:line="25" pos:column="57"/></literal> <operator pos:line="25" pos:column="58">&lt;&lt;<pos:position pos:line="25" pos:column="66"/></operator> <call><name pos:line="25" pos:column="61">status<pos:position pos:line="25" pos:column="67"/></name><argument_list pos:line="25" pos:column="67">()<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">theMaster<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">abMake<pos:position pos:line="26" pos:column="26"/></name></name><argument_list pos:line="26" pos:column="26">()<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt> <comment type="line" pos:line="26" pos:column="30">// libecap will produce</comment>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

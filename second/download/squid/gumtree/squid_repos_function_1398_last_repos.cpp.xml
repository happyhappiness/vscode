<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1398_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">helperReturnBuffer<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">helper_server<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">srv<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">helper<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">hlp<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type> <name pos:line="2" pos:column="62">msg<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">size_t<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">msgSize<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="83">char<pos:position pos:line="2" pos:column="87"/></name> <modifier pos:line="2" pos:column="88">*<pos:position pos:line="2" pos:column="89"/></modifier></type> <name pos:line="2" pos:column="90">msgEnd<pos:position pos:line="2" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="97"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<decl><type><name><name pos:line="4" pos:column="9">Helper<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">Xaction<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">r<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name><name pos:line="4" pos:column="30">srv<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">replyXaction<pos:position pos:line="4" pos:column="47"/></name></name></expr></init></decl>)<pos:position pos:line="4" pos:column="48"/></condition><then pos:line="4" pos:column="48"> <block pos:line="4" pos:column="49">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">bool<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">hasSpace<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name><name pos:line="5" pos:column="31">r<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">reply<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">.<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">accumulate<pos:position pos:line="5" pos:column="50"/></name></name><argument_list pos:line="5" pos:column="50">(<argument><expr><name pos:line="5" pos:column="51">msg<pos:position pos:line="5" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">msgSize<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="65"/></decl_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">hasSpace<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">debugs<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">84<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">DBG_IMPORTANT<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="39">"ERROR: Disconnecting from a "<pos:position pos:line="7" pos:column="69"/></literal> <operator pos:line="7" pos:column="70">&lt;&lt;<pos:position pos:line="7" pos:column="78"/></operator>
                   <literal type="string" pos:line="8" pos:column="20">"helper that overflowed "<pos:position pos:line="8" pos:column="45"/></literal> <operator pos:line="8" pos:column="46">&lt;&lt;<pos:position pos:line="8" pos:column="54"/></operator> <name><name pos:line="8" pos:column="49">srv<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">rbuf_sz<pos:position pos:line="8" pos:column="61"/></name></name> <operator pos:line="8" pos:column="62">&lt;&lt;<pos:position pos:line="8" pos:column="70"/></operator> <literal type="string" pos:line="8" pos:column="65">"-byte "<pos:position pos:line="8" pos:column="73"/></literal> <operator pos:line="8" pos:column="74">&lt;&lt;<pos:position pos:line="8" pos:column="82"/></operator>
                   <literal type="string" pos:line="9" pos:column="20">"Squid input buffer: "<pos:position pos:line="9" pos:column="42"/></literal> <operator pos:line="9" pos:column="43">&lt;&lt;<pos:position pos:line="9" pos:column="51"/></operator> <name><name pos:line="9" pos:column="46">hlp<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">id_name<pos:position pos:line="9" pos:column="58"/></name></name> <operator pos:line="9" pos:column="59">&lt;&lt;<pos:position pos:line="9" pos:column="67"/></operator> <literal type="string" pos:line="9" pos:column="62">" #"<pos:position pos:line="9" pos:column="66"/></literal> <operator pos:line="9" pos:column="67">&lt;&lt;<pos:position pos:line="9" pos:column="75"/></operator> <name><name pos:line="9" pos:column="70">srv<pos:position pos:line="9" pos:column="73"/></name><operator pos:line="9" pos:column="73">-&gt;<pos:position pos:line="9" pos:column="78"/></operator><name pos:line="9" pos:column="75">index<pos:position pos:line="9" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">srv<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">closePipesSafely<pos:position pos:line="10" pos:column="34"/></name></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name><name pos:line="10" pos:column="35">hlp<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">id_name<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
            <return pos:line="11" pos:column="13">return;<pos:position pos:line="11" pos:column="20"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">msgEnd<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
            <block type="pseudo"><return pos:line="15" pos:column="13">return;<pos:position pos:line="15" pos:column="20"/></return></block></then></if> <comment type="line" pos:line="15" pos:column="21">// We are waiting for more data.</comment>

        <decl_stmt><decl><type><name pos:line="17" pos:column="9">bool<pos:position pos:line="17" pos:column="13"/></name></type> <name pos:line="17" pos:column="14">retry<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><literal type="boolean" pos:line="17" pos:column="22">false<pos:position pos:line="17" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">cbdataReferenceValid<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">r<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">request<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">data<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="51"/></condition><then pos:line="18" pos:column="51"> <block pos:line="18" pos:column="52">{
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">r<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">reply<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">.<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">finalize<pos:position pos:line="19" pos:column="30"/></name></name><argument_list pos:line="19" pos:column="30">()<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name><name pos:line="20" pos:column="17">r<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">reply<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">.<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">result<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">==<pos:position pos:line="20" pos:column="35"/></operator> <name><name pos:line="20" pos:column="36">Helper<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">::<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">BrokenHelper<pos:position pos:line="20" pos:column="56"/></name></name> <operator pos:line="20" pos:column="57">&amp;&amp;<pos:position pos:line="20" pos:column="67"/></operator> <name><name pos:line="20" pos:column="60">r<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">-&gt;<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="63">request<pos:position pos:line="20" pos:column="70"/></name><operator pos:line="20" pos:column="70">.<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="71">retries<pos:position pos:line="20" pos:column="78"/></name></name> <operator pos:line="20" pos:column="79">&lt;<pos:position pos:line="20" pos:column="83"/></operator> <name pos:line="20" pos:column="81">MAX_RETRIES<pos:position pos:line="20" pos:column="92"/></name></expr>)<pos:position pos:line="20" pos:column="93"/></condition><then pos:line="20" pos:column="93"> <block pos:line="20" pos:column="94">{
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">debugs<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><literal type="number" pos:line="21" pos:column="24">84<pos:position pos:line="21" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="28">DBG_IMPORTANT<pos:position pos:line="21" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="43">"ERROR: helper: "<pos:position pos:line="21" pos:column="60"/></literal> <operator pos:line="21" pos:column="61">&lt;&lt;<pos:position pos:line="21" pos:column="69"/></operator> <name><name pos:line="21" pos:column="64">r<pos:position pos:line="21" pos:column="65"/></name><operator pos:line="21" pos:column="65">-&gt;<pos:position pos:line="21" pos:column="70"/></operator><name pos:line="21" pos:column="67">reply<pos:position pos:line="21" pos:column="72"/></name></name> <operator pos:line="21" pos:column="73">&lt;&lt;<pos:position pos:line="21" pos:column="81"/></operator> <literal type="string" pos:line="21" pos:column="76">", attempt #"<pos:position pos:line="21" pos:column="89"/></literal> <operator pos:line="21" pos:column="90">&lt;&lt;<pos:position pos:line="21" pos:column="98"/></operator> <operator pos:line="21" pos:column="93">(<pos:position pos:line="21" pos:column="94"/></operator><name><name pos:line="21" pos:column="94">r<pos:position pos:line="21" pos:column="95"/></name><operator pos:line="21" pos:column="95">-&gt;<pos:position pos:line="21" pos:column="100"/></operator><name pos:line="21" pos:column="97">request<pos:position pos:line="21" pos:column="104"/></name><operator pos:line="21" pos:column="104">.<pos:position pos:line="21" pos:column="105"/></operator><name pos:line="21" pos:column="105">retries<pos:position pos:line="21" pos:column="112"/></name></name> <operator pos:line="21" pos:column="113">+<pos:position pos:line="21" pos:column="114"/></operator> <literal type="number" pos:line="21" pos:column="115">1<pos:position pos:line="21" pos:column="116"/></literal><operator pos:line="21" pos:column="116">)<pos:position pos:line="21" pos:column="117"/></operator> <operator pos:line="21" pos:column="118">&lt;&lt;<pos:position pos:line="21" pos:column="126"/></operator> <literal type="string" pos:line="21" pos:column="121">" of 2"<pos:position pos:line="21" pos:column="128"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="130"/></expr_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">retry<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="boolean" pos:line="22" pos:column="25">true<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></then> <else pos:line="23" pos:column="15">else <block pos:line="23" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="24" pos:column="17">HLPCB<pos:position pos:line="24" pos:column="22"/></name> <modifier pos:line="24" pos:column="23">*<pos:position pos:line="24" pos:column="24"/></modifier></type><name pos:line="24" pos:column="24">callback<pos:position pos:line="24" pos:column="32"/></name> <init pos:line="24" pos:column="33">= <expr><name><name pos:line="24" pos:column="35">r<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="38">request<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">callback<pos:position pos:line="24" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="55"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">r<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">request<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">callback<pos:position pos:line="25" pos:column="36"/></name></name> <operator pos:line="25" pos:column="37">=<pos:position pos:line="25" pos:column="38"/></operator> <literal type="null" pos:line="25" pos:column="39">nullptr<pos:position pos:line="25" pos:column="46"/></literal></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
                <decl_stmt><decl><type><name pos:line="26" pos:column="17">void<pos:position pos:line="26" pos:column="21"/></name> <modifier pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></modifier></type><name pos:line="26" pos:column="23">cbdata<pos:position pos:line="26" pos:column="29"/></name> <init pos:line="26" pos:column="30">= <expr><literal type="null" pos:line="26" pos:column="32">nullptr<pos:position pos:line="26" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>
                <if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">cbdataReferenceValidDone<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><name><name pos:line="27" pos:column="46">r<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">request<pos:position pos:line="27" pos:column="56"/></name><operator pos:line="27" pos:column="56">.<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="57">data<pos:position pos:line="27" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="63">&amp;<pos:position pos:line="27" pos:column="68"/></operator><name pos:line="27" pos:column="64">cbdata<pos:position pos:line="27" pos:column="70"/></name></expr></argument>)<pos:position pos:line="27" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="72"/></condition><then pos:line="27" pos:column="72">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="21">callback<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">cbdata<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">r<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">reply<pos:position pos:line="28" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt></block></then></if>
            }<pos:position pos:line="29" pos:column="14"/></block></else></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="32" pos:column="9">--<pos:position pos:line="32" pos:column="11"/></operator> <name><name pos:line="32" pos:column="12">srv<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">stats<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">pending<pos:position pos:line="32" pos:column="30"/></name></name></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="33" pos:column="9">++<pos:position pos:line="33" pos:column="11"/></operator> <name><name pos:line="33" pos:column="12">srv<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">stats<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">replies<pos:position pos:line="33" pos:column="30"/></name></name></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="35" pos:column="9">++<pos:position pos:line="35" pos:column="11"/></operator> <name><name pos:line="35" pos:column="12">hlp<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">stats<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">.<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="23">replies<pos:position pos:line="35" pos:column="30"/></name></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="37" pos:column="9">srv<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">-&gt;<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="14">answer_time<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="28">current_time<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="39" pos:column="9">srv<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">dispatch_time<pos:position pos:line="39" pos:column="27"/></name></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <name><name pos:line="39" pos:column="30">r<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">request<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">.<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">dispatch_time<pos:position pos:line="39" pos:column="54"/></name></name></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="41" pos:column="9">hlp<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">stats<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">.<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">avg_svc_time<pos:position pos:line="41" pos:column="32"/></name></name> <operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator>
            <call><name><name pos:line="42" pos:column="13">Math<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">::<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="19">intAverage<pos:position pos:line="42" pos:column="29"/></name></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name><name pos:line="42" pos:column="30">hlp<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">stats<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">.<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="41">avg_svc_time<pos:position pos:line="42" pos:column="53"/></name></name></expr></argument>,
                             <argument><expr><call><name pos:line="43" pos:column="30">tvSubMsec<pos:position pos:line="43" pos:column="39"/></name><argument_list pos:line="43" pos:column="39">(<argument><expr><name><name pos:line="43" pos:column="40">r<pos:position pos:line="43" pos:column="41"/></name><operator pos:line="43" pos:column="41">-&gt;<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="43">request<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">.<pos:position pos:line="43" pos:column="51"/></operator><name pos:line="43" pos:column="51">dispatch_time<pos:position pos:line="43" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="66">current_time<pos:position pos:line="43" pos:column="78"/></name></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr></argument>,
                             <argument><expr><name><name pos:line="44" pos:column="30">hlp<pos:position pos:line="44" pos:column="33"/></name><operator pos:line="44" pos:column="33">-&gt;<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="35">stats<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">.<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">replies<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="50">REDIRECT_AV_FACTOR<pos:position pos:line="44" pos:column="68"/></name></expr></argument>)<pos:position pos:line="44" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="70"/></expr_stmt>

        <comment type="line" pos:line="46" pos:column="9">// release or re-submit parsedRequestXaction object</comment>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">srv<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">replyXaction<pos:position pos:line="47" pos:column="26"/></name></name> <operator pos:line="47" pos:column="27">=<pos:position pos:line="47" pos:column="28"/></operator> <literal type="null" pos:line="47" pos:column="29">nullptr<pos:position pos:line="47" pos:column="36"/></literal></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">retry<pos:position pos:line="48" pos:column="18"/></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19"> <block pos:line="48" pos:column="20">{
            <expr_stmt><expr><operator pos:line="49" pos:column="13">++<pos:position pos:line="49" pos:column="15"/></operator><name><name pos:line="49" pos:column="15">r<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">request<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">.<pos:position pos:line="49" pos:column="26"/></operator><name pos:line="49" pos:column="26">retries<pos:position pos:line="49" pos:column="33"/></name></name></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">hlp<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">submitRequest<pos:position pos:line="50" pos:column="31"/></name></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">r<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then> <else pos:line="51" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="52" pos:column="13">delete<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">r<pos:position pos:line="52" pos:column="21"/></name></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">hlp<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">-&gt;<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="14">timeout<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">&amp;&amp;<pos:position pos:line="55" pos:column="32"/></operator> <name><name pos:line="55" pos:column="25">hlp<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">-&gt;<pos:position pos:line="55" pos:column="33"/></operator><name pos:line="55" pos:column="30">childs<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">.<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">concurrency<pos:position pos:line="55" pos:column="48"/></name></name></expr>)<pos:position pos:line="55" pos:column="49"/></condition><then pos:line="55" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="56" pos:column="9">srv<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">checkForTimedOutRequests<pos:position pos:line="56" pos:column="38"/></name></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name><name pos:line="56" pos:column="39">hlp<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">-&gt;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="44">retryTimedOut<pos:position pos:line="56" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="59"/></expr_stmt></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><operator pos:line="58" pos:column="9">!<pos:position pos:line="58" pos:column="10"/></operator><name><name pos:line="58" pos:column="10">srv<pos:position pos:line="58" pos:column="13"/></name><operator pos:line="58" pos:column="13">-&gt;<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="15">flags<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">.<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">shutdown<pos:position pos:line="58" pos:column="29"/></name></name></expr>)<pos:position pos:line="58" pos:column="30"/></condition><then pos:line="58" pos:column="30"> <block pos:line="58" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">helperKickQueue<pos:position pos:line="59" pos:column="24"/></name><argument_list pos:line="59" pos:column="24">(<argument><expr><name pos:line="59" pos:column="25">hlp<pos:position pos:line="59" pos:column="28"/></name></expr></argument>)<pos:position pos:line="59" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then> <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if <condition pos:line="60" pos:column="15">(<expr><operator pos:line="60" pos:column="16">!<pos:position pos:line="60" pos:column="17"/></operator><name><name pos:line="60" pos:column="17">srv<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">flags<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">.<pos:position pos:line="60" pos:column="28"/></operator><name pos:line="60" pos:column="28">closing<pos:position pos:line="60" pos:column="35"/></name></name> <operator pos:line="60" pos:column="36">&amp;&amp;<pos:position pos:line="60" pos:column="46"/></operator> <operator pos:line="60" pos:column="39">!<pos:position pos:line="60" pos:column="40"/></operator><name><name pos:line="60" pos:column="40">srv<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">stats<pos:position pos:line="60" pos:column="50"/></name><operator pos:line="60" pos:column="50">.<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="51">pending<pos:position pos:line="60" pos:column="58"/></name></name></expr>)<pos:position pos:line="60" pos:column="59"/></condition><then pos:line="60" pos:column="59"> <block pos:line="60" pos:column="60">{
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">srv<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">-&gt;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="14">flags<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">closing<pos:position pos:line="61" pos:column="27"/></name></name><operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator><literal type="boolean" pos:line="61" pos:column="28">true<pos:position pos:line="61" pos:column="32"/></literal></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="62" pos:column="9">srv<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">writePipe<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">close<pos:position pos:line="62" pos:column="30"/></name></name><argument_list pos:line="62" pos:column="30">()<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

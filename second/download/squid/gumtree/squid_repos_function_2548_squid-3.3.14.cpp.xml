<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2548_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">ftpPasvCallback<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name><name pos:line="2" pos:column="37">Comm<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">ConnectionPointer<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">conn<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">comm_err_t<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">status<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="87">int<pos:position pos:line="2" pos:column="90"/></name></type> <name pos:line="2" pos:column="91">xerrno<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="99">void<pos:position pos:line="2" pos:column="103"/></name> <modifier pos:line="2" pos:column="104">*<pos:position pos:line="2" pos:column="105"/></modifier></type><name pos:line="2" pos:column="105">data<pos:position pos:line="2" pos:column="109"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="110"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FtpStateData<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">ftpState<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">FtpStateData<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">data<pos:position pos:line="4" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">9<pos:position pos:line="5" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="15">3<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="18">HERE<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">ftpState<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">data<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">opener<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">status<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">!=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">COMM_OK<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">9<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="19">2<pos:position pos:line="9" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="22">HERE<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">&lt;&lt;<pos:position pos:line="9" pos:column="35"/></operator> <literal type="string" pos:line="9" pos:column="30">"Failed to connect. Retrying via another method."<pos:position pos:line="9" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="81"/></expr_stmt>

        <comment type="line" pos:line="11" pos:column="9">// ABORT on timeouts. server may be waiting on a broken TCP link.</comment>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">COMM_TIMEOUT<pos:position pos:line="12" pos:column="35"/></name></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="13">ftpState<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">writeCommand<pos:position pos:line="13" pos:column="35"/></name></name><argument_list pos:line="13" pos:column="35">(<argument><expr><literal type="string" pos:line="13" pos:column="36">"ABOR"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></then></if>

        <comment type="line" pos:line="15" pos:column="9">// try another connection attempt with some other method</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">ftpSendPassive<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">ftpState<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">ftpState<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">data<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">opened<pos:position pos:line="20" pos:column="26"/></name></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">conn<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="33">ftpState<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">-&gt;<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="43">dataCloser<pos:position pos:line="20" pos:column="53"/></name></name><argument_list pos:line="20" pos:column="53">()<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ftpRestOrList<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">ftpState<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

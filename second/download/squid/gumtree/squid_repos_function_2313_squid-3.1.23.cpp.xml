<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2313_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">accessLogLogTo<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">customlog<pos:position pos:line="2" pos:column="25"/></name><modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">log<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">AccessLogEntry<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">al<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">ACLChecklist<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type> <name pos:line="2" pos:column="68">checklist<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">al<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">url<pos:position pos:line="5" pos:column="16"/></name></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="6" pos:column="9">al<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">url<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">dash_str<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">al<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">http<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">content_type<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">||<pos:position pos:line="8" pos:column="34"/></operator> <operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><name><name pos:line="8" pos:column="36">al<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">http<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">content_type<pos:position pos:line="8" pos:column="57"/></name></name> <operator pos:line="8" pos:column="58">==<pos:position pos:line="8" pos:column="60"/></operator> <literal type="char" pos:line="8" pos:column="61">'\0'<pos:position pos:line="8" pos:column="65"/></literal></expr>)<pos:position pos:line="8" pos:column="66"/></condition><then pos:line="8" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="9">al<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">http<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">content_type<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">=<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">dash_str<pos:position pos:line="9" pos:column="41"/></name></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">al<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">icp<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">opcode<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="9">al<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">_private<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">method_str<pos:position pos:line="12" pos:column="32"/></name></name> <operator pos:line="12" pos:column="33">=<pos:position pos:line="12" pos:column="34"/></operator> <name><name pos:line="12" pos:column="35">icp_opcode_str<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><name><name pos:line="12" pos:column="50">al<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">icp<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">opcode<pos:position pos:line="12" pos:column="64"/></name></name></expr>]<pos:position pos:line="12" pos:column="65"/></index></name></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt></block></then>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><name><name pos:line="13" pos:column="14">al<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">htcp<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">.<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">opcode<pos:position pos:line="13" pos:column="29"/></name></name></expr>)<pos:position pos:line="13" pos:column="30"/></condition><then pos:line="13" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="9">al<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">_private<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">method_str<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <name><name pos:line="14" pos:column="35">al<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">-&gt;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="39">htcp<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">opcode<pos:position pos:line="14" pos:column="50"/></name></name></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt></block></then></if></elseif>
    <else pos:line="15" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="9">al<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">_private<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">method_str<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <call><name pos:line="16" pos:column="35">RequestMethodStr<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><name><name pos:line="16" pos:column="52">al<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">http<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">.<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="61">method<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt></block></else></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">al<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">hier<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">host<pos:position pos:line="18" pos:column="22"/></name><index pos:line="18" pos:column="22">[<expr><literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>]<pos:position pos:line="18" pos:column="25"/></index></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <literal type="char" pos:line="18" pos:column="29">'\0'<pos:position pos:line="18" pos:column="33"/></literal></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">xstrncpy<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">al<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">hier<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">host<pos:position pos:line="19" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="33">dash_str<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">SQUIDHOSTNAMELEN<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt></block></then></if>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init pos:line="21" pos:column="10">;<pos:position pos:line="21" pos:column="11"/></init> <condition><expr><name pos:line="21" pos:column="12">log<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></condition> <incr><expr><name pos:line="21" pos:column="17">log<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name><name pos:line="21" pos:column="23">log<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">next<pos:position pos:line="21" pos:column="32"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="33"/></control> <block pos:line="21" pos:column="34">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">checklist<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&amp;&amp;<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="26">log<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">aclList<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">&amp;&amp;<pos:position pos:line="22" pos:column="49"/></operator> <operator pos:line="22" pos:column="42">!<pos:position pos:line="22" pos:column="43"/></operator><call><name><name pos:line="22" pos:column="43">checklist<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">-&gt;<pos:position pos:line="22" pos:column="57"/></operator><name pos:line="22" pos:column="54">matchAclListFast<pos:position pos:line="22" pos:column="70"/></name></name><argument_list pos:line="22" pos:column="70">(<argument><expr><name><name pos:line="22" pos:column="71">log<pos:position pos:line="22" pos:column="74"/></name><operator pos:line="22" pos:column="74">-&gt;<pos:position pos:line="22" pos:column="79"/></operator><name pos:line="22" pos:column="76">aclList<pos:position pos:line="22" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="85"/></condition><then pos:line="22" pos:column="85">
            <block type="pseudo"><continue pos:line="23" pos:column="13">continue;<pos:position pos:line="23" pos:column="22"/></continue></block></then></if>

        <switch pos:line="25" pos:column="9">switch <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">log<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">type<pos:position pos:line="25" pos:column="26"/></name></name></expr>)<pos:position pos:line="25" pos:column="27"/></condition> <block pos:line="25" pos:column="28">{

        <case pos:line="27" pos:column="9">case <expr><name pos:line="27" pos:column="14">CLF_AUTO<pos:position pos:line="27" pos:column="22"/></name></expr>:<pos:position pos:line="27" pos:column="23"/></case>

            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name><name pos:line="29" pos:column="17">Config<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">onoff<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">common_log<pos:position pos:line="29" pos:column="40"/></name></name></expr>)<pos:position pos:line="29" pos:column="41"/></condition><then pos:line="29" pos:column="41">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">accessLogCommon<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">al<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="37">log<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">logfile<pos:position pos:line="30" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt></block></then>
            <else pos:line="31" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="17">accessLogSquid<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">al<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="36">log<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">logfile<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt></block></else></if>

            <break pos:line="34" pos:column="13">break;<pos:position pos:line="34" pos:column="19"/></break>

        <case pos:line="36" pos:column="9">case <expr><name pos:line="36" pos:column="14">CLF_SQUID<pos:position pos:line="36" pos:column="23"/></name></expr>:<pos:position pos:line="36" pos:column="24"/></case>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">accessLogSquid<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">al<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="32">log<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">logfile<pos:position pos:line="37" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>

            <break pos:line="39" pos:column="13">break;<pos:position pos:line="39" pos:column="19"/></break>

        <case pos:line="41" pos:column="9">case <expr><name pos:line="41" pos:column="14">CLF_COMMON<pos:position pos:line="41" pos:column="24"/></name></expr>:<pos:position pos:line="41" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">accessLogCommon<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">al<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="33">log<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">logfile<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>

            <break pos:line="44" pos:column="13">break;<pos:position pos:line="44" pos:column="19"/></break>

        <case pos:line="46" pos:column="9">case <expr><name pos:line="46" pos:column="14">CLF_CUSTOM<pos:position pos:line="46" pos:column="24"/></name></expr>:<pos:position pos:line="46" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">accessLogCustom<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">al<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">log<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>

            <break pos:line="49" pos:column="13">break;<pos:position pos:line="49" pos:column="19"/></break>

<cpp:if pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">if<pos:position pos:line="51" pos:column="4"/></cpp:directive> <expr><name pos:line="51" pos:column="5">ICAP_CLIENT<pos:position pos:line="51" pos:column="16"/></name></expr></cpp:if>
        <case pos:line="52" pos:column="9">case <expr><name pos:line="52" pos:column="14">CLF_ICAP_SQUID<pos:position pos:line="52" pos:column="28"/></name></expr>:<pos:position pos:line="52" pos:column="29"/></case>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">accessLogICAPSquid<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">al<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">log<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">logfile<pos:position pos:line="53" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>

            <break pos:line="55" pos:column="13">break;<pos:position pos:line="55" pos:column="19"/></break>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

        <case pos:line="58" pos:column="9">case <expr><name pos:line="58" pos:column="14">CLF_NONE<pos:position pos:line="58" pos:column="22"/></name></expr>:<pos:position pos:line="58" pos:column="23"/></case>
            <goto pos:line="59" pos:column="13">goto <name pos:line="59" pos:column="18">last<pos:position pos:line="59" pos:column="22"/></name>;<pos:position pos:line="59" pos:column="23"/></goto>

        <default pos:line="61" pos:column="9">default:<pos:position pos:line="61" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">fatalf<pos:position pos:line="62" pos:column="19"/></name><argument_list pos:line="62" pos:column="19">(<argument><expr><literal type="string" pos:line="62" pos:column="20">"Unknown log format %d\n"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="47">log<pos:position pos:line="62" pos:column="50"/></name><operator pos:line="62" pos:column="50">-&gt;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="52">type<pos:position pos:line="62" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>

            <break pos:line="64" pos:column="13">break;<pos:position pos:line="64" pos:column="19"/></break>
        }<pos:position pos:line="65" pos:column="10"/></block></switch>

        <expr_stmt><expr><call><name pos:line="67" pos:column="9">logfileFlush<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name><name pos:line="67" pos:column="22">log<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">-&gt;<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="27">logfile<pos:position pos:line="67" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>

        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">checklist<pos:position pos:line="69" pos:column="23"/></name></expr>)<pos:position pos:line="69" pos:column="24"/></condition><then pos:line="69" pos:column="24">
            <block type="pseudo"><break pos:line="70" pos:column="13">break;<pos:position pos:line="70" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="71" pos:column="6"/></block></for>

<label><name pos:line="73" pos:column="1">last<pos:position pos:line="73" pos:column="5"/></name>:<pos:position pos:line="73" pos:column="6"/></label>
    <expr_stmt><expr><operator pos:line="74" pos:column="5">(<pos:position pos:line="74" pos:column="6"/></operator><name pos:line="74" pos:column="6">void<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">)<pos:position pos:line="74" pos:column="11"/></operator><literal type="number" pos:line="74" pos:column="11">0<pos:position pos:line="74" pos:column="12"/></literal></expr>;<pos:position pos:line="74" pos:column="13"/></expr_stmt> <comment type="block" pos:line="74" pos:column="14">/* NULL statement for label */</comment>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

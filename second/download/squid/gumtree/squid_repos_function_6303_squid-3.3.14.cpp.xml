<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6303_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Inquirer<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">inquire<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">pos<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <call><name><name pos:line="4" pos:column="16">strands<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">end<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30"> <block pos:line="4" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">Must<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><call><name pos:line="5" pos:column="14">done<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Must<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name><name pos:line="9" pos:column="10">request<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">requestId<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">==<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="32">0<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">AsyncCall<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">Pointer<pos:position pos:line="10" pos:column="23"/></name></name></type> <name pos:line="10" pos:column="24">callback<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><call><name pos:line="10" pos:column="35">asyncCall<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><literal type="number" pos:line="10" pos:column="45">54<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="49">5<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="52">"Mgr::Inquirer::handleRemoteAck"<pos:position pos:line="10" pos:column="84"/></literal></expr></argument>,
                                            <argument><expr><call><name pos:line="11" pos:column="45">HandleAckDialer<pos:position pos:line="11" pos:column="60"/></name><argument_list pos:line="11" pos:column="60">(<argument><expr><name pos:line="11" pos:column="61">this<pos:position pos:line="11" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="67">&amp;<pos:position pos:line="11" pos:column="72"/></operator><name><name pos:line="11" pos:column="68">Inquirer<pos:position pos:line="11" pos:column="76"/></name><operator pos:line="11" pos:column="76">::<pos:position pos:line="11" pos:column="78"/></operator><name pos:line="11" pos:column="78">handleRemoteAck<pos:position pos:line="11" pos:column="93"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="95">NULL<pos:position pos:line="11" pos:column="99"/></name></expr></argument>)<pos:position pos:line="11" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="101"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="102"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">++<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">LastRequestId<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">==<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <comment type="line" pos:line="12" pos:column="31">// don't use zero value as request-&gt;requestId</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="9">++<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">LastRequestId<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">request<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">requestId<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">LastRequestId<pos:position pos:line="14" pos:column="39"/></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">int<pos:position pos:line="15" pos:column="14"/></name></type> <name pos:line="15" pos:column="15">kidId<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name><name pos:line="15" pos:column="23">pos<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">kidId<pos:position pos:line="15" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">54<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">4<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="19">HERE<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&lt;&lt;<pos:position pos:line="16" pos:column="32"/></operator> <literal type="string" pos:line="16" pos:column="27">"inquire kid: "<pos:position pos:line="16" pos:column="42"/></literal> <operator pos:line="16" pos:column="43">&lt;&lt;<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="46">kidId<pos:position pos:line="16" pos:column="51"/></name> <operator pos:line="16" pos:column="52">&lt;&lt;<pos:position pos:line="16" pos:column="60"/></operator> <call><name pos:line="16" pos:column="55">status<pos:position pos:line="16" pos:column="61"/></name><argument_list pos:line="16" pos:column="61">()<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">TheRequestsMap<pos:position pos:line="17" pos:column="19"/></name><index pos:line="17" pos:column="19">[<expr><name><name pos:line="17" pos:column="20">request<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">requestId<pos:position pos:line="17" pos:column="38"/></name></name></expr>]<pos:position pos:line="17" pos:column="39"/></index></name> <operator pos:line="17" pos:column="40">=<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="42">callback<pos:position pos:line="17" pos:column="50"/></name></expr>;<pos:position pos:line="17" pos:column="51"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">TypedMsgHdr<pos:position pos:line="18" pos:column="16"/></name></type> <name pos:line="18" pos:column="17">message<pos:position pos:line="18" pos:column="24"/></name></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">request<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">pack<pos:position pos:line="19" pos:column="18"/></name></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">message<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">SendMessage<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><call><name><name pos:line="20" pos:column="17">Port<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">::<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">MakeAddr<pos:position pos:line="20" pos:column="31"/></name></name><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">strandAddrPfx<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">kidId<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">message<pos:position pos:line="20" pos:column="62"/></name></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">eventAdd<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><literal type="string" pos:line="21" pos:column="14">"Ipc::Inquirer::requestTimedOut"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="48">&amp;<pos:position pos:line="21" pos:column="53"/></operator><name><name pos:line="21" pos:column="49">Inquirer<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">::<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">RequestTimedOut<pos:position pos:line="21" pos:column="74"/></name></name></expr></argument>,
             <argument><expr><name pos:line="22" pos:column="14">this<pos:position pos:line="22" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">timeout<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="22" pos:column="32">false<pos:position pos:line="22" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

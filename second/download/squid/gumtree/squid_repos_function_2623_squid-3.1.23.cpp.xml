<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2623_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">getMyHostname<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">host<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="29">SQUIDHOSTNAMELEN<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">+<pos:position pos:line="4" pos:column="47"/></operator> <literal type="number" pos:line="4" pos:column="48">1<pos:position pos:line="4" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">present<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">addrinfo<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">AI<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">IpAddress<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">sa<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Config<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">visibleHostname<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">!=<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">NULL<pos:position pos:line="9" pos:column="39"/></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name><name pos:line="10" pos:column="16">Config<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">visibleHostname<pos:position pos:line="10" pos:column="38"/></name></name></expr>;<pos:position pos:line="10" pos:column="39"/></return></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">present<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">host<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">host<pos:position pos:line="15" pos:column="9"/></name><index pos:line="15" pos:column="9">[<expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>]<pos:position pos:line="15" pos:column="12"/></index></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="char" pos:line="15" pos:column="15">'\0'<pos:position pos:line="15" pos:column="19"/></literal></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">Config<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">Sockaddr<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">.<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">http<pos:position pos:line="17" pos:column="29"/></name></name> <operator pos:line="17" pos:column="30">&amp;&amp;<pos:position pos:line="17" pos:column="40"/></operator> <call><name><name pos:line="17" pos:column="33">sa<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">IsAnyAddr<pos:position pos:line="17" pos:column="45"/></name></name><argument_list pos:line="17" pos:column="45">()<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">sa<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name><name pos:line="18" pos:column="14">Config<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">.<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">Sockaddr<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">http<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">s<pos:position pos:line="18" pos:column="37"/></name></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt></block></then></if>

<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">USE_SSL<pos:position pos:line="20" pos:column="12"/></name></expr></cpp:if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">Config<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">Sockaddr<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">https<pos:position pos:line="22" pos:column="30"/></name></name> <operator pos:line="22" pos:column="31">&amp;&amp;<pos:position pos:line="22" pos:column="41"/></operator> <call><name><name pos:line="22" pos:column="34">sa<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">.<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">IsAnyAddr<pos:position pos:line="22" pos:column="46"/></name></name><argument_list pos:line="22" pos:column="46">()<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">sa<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">Config<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">Sockaddr<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">https<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">http<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">s<pos:position pos:line="23" pos:column="43"/></name></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt></block></then></if>

<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="27" pos:column="5">/*
     * If the first http_port address has a specific address, try a
     * reverse DNS lookup on it.
     */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">( <expr><operator pos:line="31" pos:column="10">!<pos:position pos:line="31" pos:column="11"/></operator><call><name><name pos:line="31" pos:column="11">sa<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">.<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">IsAnyAddr<pos:position pos:line="31" pos:column="23"/></name></name><argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr> )<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{

        <expr_stmt><expr><call><name><name pos:line="33" pos:column="9">sa<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">.<pos:position pos:line="33" pos:column="12"/></operator><name pos:line="33" pos:column="12">GetAddrInfo<pos:position pos:line="33" pos:column="23"/></name></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">AI<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="34" pos:column="9">/* we are looking for a name. */</comment>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">xgetnameinfo<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name><name pos:line="35" pos:column="26">AI<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">ai_addr<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="39">AI<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">ai_addrlen<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">host<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="61">SQUIDHOSTNAMELEN<pos:position pos:line="35" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="79">NULL<pos:position pos:line="35" pos:column="83"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="85">0<pos:position pos:line="35" pos:column="86"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="88">NI_NAMEREQD<pos:position pos:line="35" pos:column="99"/></name></expr></argument> )<pos:position pos:line="35" pos:column="101"/></argument_list></call> <operator pos:line="35" pos:column="102">==<pos:position pos:line="35" pos:column="104"/></operator> <literal type="number" pos:line="35" pos:column="105">0<pos:position pos:line="35" pos:column="106"/></literal></expr>)<pos:position pos:line="35" pos:column="107"/></condition><then pos:line="35" pos:column="107"> <block pos:line="35" pos:column="108">{
            <comment type="block" pos:line="36" pos:column="13">/* DNS lookup successful */</comment>
            <comment type="block" pos:line="37" pos:column="13">/* use the official name from DNS lookup */</comment>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">50<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="24">4<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"getMyHostname: resolved "<pos:position pos:line="38" pos:column="53"/></literal> <operator pos:line="38" pos:column="54">&lt;&lt;<pos:position pos:line="38" pos:column="62"/></operator> <name pos:line="38" pos:column="57">sa<pos:position pos:line="38" pos:column="59"/></name> <operator pos:line="38" pos:column="60">&lt;&lt;<pos:position pos:line="38" pos:column="68"/></operator> <literal type="string" pos:line="38" pos:column="63">" to '"<pos:position pos:line="38" pos:column="70"/></literal> <operator pos:line="38" pos:column="71">&lt;&lt;<pos:position pos:line="38" pos:column="79"/></operator> <name pos:line="38" pos:column="74">host<pos:position pos:line="38" pos:column="78"/></name> <operator pos:line="38" pos:column="79">&lt;&lt;<pos:position pos:line="38" pos:column="87"/></operator> <literal type="string" pos:line="38" pos:column="82">"'"<pos:position pos:line="38" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="87"/></expr_stmt>

            <expr_stmt><expr><name pos:line="40" pos:column="13">present<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">1<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">sa<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">.<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="16">FreeAddrInfo<pos:position pos:line="42" pos:column="28"/></name></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">AI<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>

            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><call><name pos:line="44" pos:column="17">strchr<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">host<pos:position pos:line="44" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="30">'.'<pos:position pos:line="44" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
                <block type="pseudo"><return pos:line="45" pos:column="17">return <expr><name pos:line="45" pos:column="24">host<pos:position pos:line="45" pos:column="28"/></name></expr>;<pos:position pos:line="45" pos:column="29"/></return></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="48" pos:column="9">sa<pos:position pos:line="48" pos:column="11"/></name><operator pos:line="48" pos:column="11">.<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">FreeAddrInfo<pos:position pos:line="48" pos:column="24"/></name></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">AI<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">debugs<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="number" pos:line="49" pos:column="16">50<pos:position pos:line="49" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="20">2<pos:position pos:line="49" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"WARNING: failed to resolve "<pos:position pos:line="49" pos:column="52"/></literal> <operator pos:line="49" pos:column="53">&lt;&lt;<pos:position pos:line="49" pos:column="61"/></operator> <name pos:line="49" pos:column="56">sa<pos:position pos:line="49" pos:column="58"/></name> <operator pos:line="49" pos:column="59">&lt;&lt;<pos:position pos:line="49" pos:column="67"/></operator> <literal type="string" pos:line="49" pos:column="62">" to a fully qualified hostname"<pos:position pos:line="49" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="96"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="52" pos:column="5">// still no host. fallback to gethostname()</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><call><name pos:line="53" pos:column="9">gethostname<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">host<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">SQUIDHOSTNAMELEN<pos:position pos:line="53" pos:column="43"/></name></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call> <operator pos:line="53" pos:column="45">&lt;<pos:position pos:line="53" pos:column="49"/></operator> <literal type="number" pos:line="53" pos:column="47">0<pos:position pos:line="53" pos:column="48"/></literal></expr>)<pos:position pos:line="53" pos:column="49"/></condition><then pos:line="53" pos:column="49"> <block pos:line="53" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">50<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="20">DBG_IMPORTANT<pos:position pos:line="54" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="35">"WARNING: gethostname failed: "<pos:position pos:line="54" pos:column="66"/></literal> <operator pos:line="54" pos:column="67">&lt;&lt;<pos:position pos:line="54" pos:column="75"/></operator> <call><name pos:line="54" pos:column="70">xstrerror<pos:position pos:line="54" pos:column="79"/></name><argument_list pos:line="54" pos:column="79">()<pos:position pos:line="54" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="83"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then> <else pos:line="55" pos:column="7">else <block pos:line="55" pos:column="12">{
        <comment type="block" pos:line="56" pos:column="9">/* Verify that the hostname given resolves properly */</comment>
        <decl_stmt><decl><type><name><name pos:line="57" pos:column="9">struct<pos:position pos:line="57" pos:column="15"/></name> <name pos:line="57" pos:column="16">addrinfo<pos:position pos:line="57" pos:column="24"/></name></name></type> <name pos:line="57" pos:column="25">hints<pos:position pos:line="57" pos:column="30"/></name></decl>;<pos:position pos:line="57" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">memset<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><operator pos:line="58" pos:column="16">&amp;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="17">hints<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="27">sizeof<argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">addrinfo<pos:position pos:line="58" pos:column="42"/></name></expr></argument>)<pos:position pos:line="58" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">hints<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">ai_flags<pos:position pos:line="59" pos:column="23"/></name></name> <operator pos:line="59" pos:column="24">=<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="26">AI_CANONNAME<pos:position pos:line="59" pos:column="38"/></name></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">xgetaddrinfo<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">host<pos:position pos:line="61" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="32">NULL<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">NULL<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="44">&amp;<pos:position pos:line="61" pos:column="49"/></operator><name pos:line="61" pos:column="45">AI<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call> <operator pos:line="61" pos:column="49">==<pos:position pos:line="61" pos:column="51"/></operator> <literal type="number" pos:line="61" pos:column="52">0<pos:position pos:line="61" pos:column="53"/></literal></expr>)<pos:position pos:line="61" pos:column="54"/></condition><then pos:line="61" pos:column="54"> <block pos:line="61" pos:column="55">{
            <comment type="block" pos:line="62" pos:column="13">/* DNS lookup successful */</comment>
            <comment type="block" pos:line="63" pos:column="13">/* use the official name from DNS lookup */</comment>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">debugs<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><literal type="number" pos:line="64" pos:column="20">50<pos:position pos:line="64" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="24">6<pos:position pos:line="64" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="27">"getMyHostname: '"<pos:position pos:line="64" pos:column="45"/></literal> <operator pos:line="64" pos:column="46">&lt;&lt;<pos:position pos:line="64" pos:column="54"/></operator> <name pos:line="64" pos:column="49">host<pos:position pos:line="64" pos:column="53"/></name> <operator pos:line="64" pos:column="54">&lt;&lt;<pos:position pos:line="64" pos:column="62"/></operator> <literal type="string" pos:line="64" pos:column="57">"' has DNS resolution."<pos:position pos:line="64" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="82"/></expr_stmt>
            <expr_stmt><expr><name pos:line="65" pos:column="13">present<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <literal type="number" pos:line="65" pos:column="23">1<pos:position pos:line="65" pos:column="24"/></literal></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>

            <comment type="block" pos:line="67" pos:column="13">/* AYJ: do we want to flag AI_ALL and cache the result anywhere. ie as our local host IPs? */</comment>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">AI<pos:position pos:line="68" pos:column="19"/></name></expr>)<pos:position pos:line="68" pos:column="20"/></condition><then pos:line="68" pos:column="20"> <block pos:line="68" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">xfreeaddrinfo<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">AI<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name pos:line="70" pos:column="17">AI<pos:position pos:line="70" pos:column="19"/></name> <operator pos:line="70" pos:column="20">=<pos:position pos:line="70" pos:column="21"/></operator> <name pos:line="70" pos:column="22">NULL<pos:position pos:line="70" pos:column="26"/></name></expr>;<pos:position pos:line="70" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>

            <return pos:line="73" pos:column="13">return <expr><name pos:line="73" pos:column="20">host<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></return>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">AI<pos:position pos:line="76" pos:column="15"/></name></expr>)<pos:position pos:line="76" pos:column="16"/></condition><then pos:line="76" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">freeaddrinfo<pos:position pos:line="76" pos:column="29"/></name><argument_list pos:line="76" pos:column="29">(<argument><expr><name pos:line="76" pos:column="30">AI<pos:position pos:line="76" pos:column="32"/></name></expr></argument>)<pos:position pos:line="76" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">debugs<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><literal type="number" pos:line="77" pos:column="16">50<pos:position pos:line="77" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="20">DBG_IMPORTANT<pos:position pos:line="77" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="35">"WARNING: '"<pos:position pos:line="77" pos:column="47"/></literal> <operator pos:line="77" pos:column="48">&lt;&lt;<pos:position pos:line="77" pos:column="56"/></operator> <name pos:line="77" pos:column="51">host<pos:position pos:line="77" pos:column="55"/></name> <operator pos:line="77" pos:column="56">&lt;&lt;<pos:position pos:line="77" pos:column="64"/></operator> <literal type="string" pos:line="77" pos:column="59">"' rDNS test failed: "<pos:position pos:line="77" pos:column="81"/></literal> <operator pos:line="77" pos:column="82">&lt;&lt;<pos:position pos:line="77" pos:column="90"/></operator> <call><name pos:line="77" pos:column="85">xstrerror<pos:position pos:line="77" pos:column="94"/></name><argument_list pos:line="77" pos:column="94">()<pos:position pos:line="77" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="98"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="80" pos:column="5">/* throw a configuration error when the Host/IP given has bad DNS/rDNS. */</comment>
    <expr_stmt><expr><call><name pos:line="81" pos:column="5">debugs<pos:position pos:line="81" pos:column="11"/></name><argument_list pos:line="81" pos:column="11">(<argument><expr><literal type="number" pos:line="81" pos:column="12">50<pos:position pos:line="81" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="16">DBG_CRITICAL<pos:position pos:line="81" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="30">"WARNING: Could not determine this machines public hostname. "<pos:position pos:line="81" pos:column="92"/></literal> <operator pos:line="81" pos:column="93">&lt;&lt;<pos:position pos:line="81" pos:column="101"/></operator>
           <literal type="string" pos:line="82" pos:column="12">"Please configure one or set 'visible_hostname'."<pos:position pos:line="82" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="63"/></expr_stmt>

    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">(<pos:position pos:line="84" pos:column="13"/></operator><literal type="string" pos:line="84" pos:column="13">"localhost"<pos:position pos:line="84" pos:column="24"/></literal><operator pos:line="84" pos:column="24">)<pos:position pos:line="84" pos:column="25"/></operator></expr>;<pos:position pos:line="84" pos:column="26"/></return>
}<pos:position pos:line="85" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4682_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLCertificateStrategy<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">match<pos:position pos:line="2" pos:column="30"/></name></name> <parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name><name pos:line="2" pos:column="32">ACLData<pos:position pos:line="2" pos:column="39"/></name><argument_list type="generic" pos:line="2" pos:column="39">&lt;<argument><expr><name pos:line="2" pos:column="40">MatchType<pos:position pos:line="2" pos:column="49"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="53"/></argument_list></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="54">data<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">ACLFilledChecklist<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">checklist<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">ACLFlags<pos:position pos:line="2" pos:column="99"/></name> <modifier pos:line="2" pos:column="100">&amp;<pos:position pos:line="2" pos:column="105"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="102"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">fd<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name><name pos:line="4" pos:column="20">checklist<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">-&gt;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="31">fd<pos:position pos:line="4" pos:column="33"/></name></name><argument_list pos:line="4" pos:column="33">()<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">bool<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">goodDescriptor<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal> <operator pos:line="5" pos:column="35">&lt;=<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="38">fd<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">&amp;&amp;<pos:position pos:line="5" pos:column="51"/></operator> <name pos:line="5" pos:column="44">fd<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">&lt;=<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="50">Biggest_FD<pos:position pos:line="5" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><ternary><condition><expr><name pos:line="6" pos:column="16">goodDescriptor<pos:position pos:line="6" pos:column="30"/></name></expr> ?<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32"> <expr><name><name pos:line="6" pos:column="33">fd_table<pos:position pos:line="6" pos:column="41"/></name><index pos:line="6" pos:column="41">[<expr><name pos:line="6" pos:column="42">fd<pos:position pos:line="6" pos:column="44"/></name></expr>]<pos:position pos:line="6" pos:column="45"/></index></name><operator pos:line="6" pos:column="45">.<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">ssl<pos:position pos:line="6" pos:column="49"/></name></expr> <pos:position pos:line="6" pos:column="50"/></then><else pos:line="6" pos:column="50">: <expr><literal type="number" pos:line="6" pos:column="52">0<pos:position pos:line="6" pos:column="53"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">X509<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">cert<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><call><name pos:line="7" pos:column="18">SSL_get_peer_certificate<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">ssl<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">bool<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">res<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><call><name><name pos:line="8" pos:column="22">data<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">match<pos:position pos:line="8" pos:column="33"/></name></name> <argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">cert<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">X509_free<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name pos:line="9" pos:column="15">cert<pos:position pos:line="9" pos:column="19"/></name></expr></argument>)<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">res<pos:position pos:line="10" pos:column="15"/></name></expr>;<pos:position pos:line="10" pos:column="16"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

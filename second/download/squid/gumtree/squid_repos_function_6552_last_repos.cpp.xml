<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6552_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">IcmpPacketType<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">uint8_t<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">v<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name><name pos:line="4" pos:column="24">icmpPktStr<pos:position pos:line="4" pos:column="34"/></name><index pos:line="4" pos:column="34">[]<pos:position pos:line="4" pos:column="36"/></index></name> <init pos:line="4" pos:column="37">= <expr><block pos:line="4" pos:column="39">{
        <expr><literal type="string" pos:line="5" pos:column="9">"Echo Reply"<pos:position pos:line="5" pos:column="21"/></literal></expr>,
        <expr><literal type="string" pos:line="6" pos:column="9">"ICMP 1"<pos:position pos:line="6" pos:column="17"/></literal></expr>,
        <expr><literal type="string" pos:line="7" pos:column="9">"ICMP 2"<pos:position pos:line="7" pos:column="17"/></literal></expr>,
        <expr><literal type="string" pos:line="8" pos:column="9">"Destination Unreachable"<pos:position pos:line="8" pos:column="34"/></literal></expr>,
        <expr><literal type="string" pos:line="9" pos:column="9">"Source Quench"<pos:position pos:line="9" pos:column="24"/></literal></expr>,
        <expr><literal type="string" pos:line="10" pos:column="9">"Redirect"<pos:position pos:line="10" pos:column="19"/></literal></expr>,
        <expr><literal type="string" pos:line="11" pos:column="9">"ICMP 6"<pos:position pos:line="11" pos:column="17"/></literal></expr>,
        <expr><literal type="string" pos:line="12" pos:column="9">"ICMP 7"<pos:position pos:line="12" pos:column="17"/></literal></expr>,
        <expr><literal type="string" pos:line="13" pos:column="9">"Echo"<pos:position pos:line="13" pos:column="15"/></literal></expr>,
        <expr><literal type="string" pos:line="14" pos:column="9">"ICMP 9"<pos:position pos:line="14" pos:column="17"/></literal></expr>,
        <expr><literal type="string" pos:line="15" pos:column="9">"ICMP 10"<pos:position pos:line="15" pos:column="18"/></literal></expr>,
        <expr><literal type="string" pos:line="16" pos:column="9">"Time Exceeded"<pos:position pos:line="16" pos:column="24"/></literal></expr>,
        <expr><literal type="string" pos:line="17" pos:column="9">"Parameter Problem"<pos:position pos:line="17" pos:column="28"/></literal></expr>,
        <expr><literal type="string" pos:line="18" pos:column="9">"Timestamp"<pos:position pos:line="18" pos:column="20"/></literal></expr>,
        <expr><literal type="string" pos:line="19" pos:column="9">"Timestamp Reply"<pos:position pos:line="19" pos:column="26"/></literal></expr>,
        <expr><literal type="string" pos:line="20" pos:column="9">"Info Request"<pos:position pos:line="20" pos:column="23"/></literal></expr>,
        <expr><literal type="string" pos:line="21" pos:column="9">"Info Reply"<pos:position pos:line="21" pos:column="21"/></literal></expr>,
        <expr><literal type="string" pos:line="22" pos:column="9">"Out of Range Type"<pos:position pos:line="22" pos:column="28"/></literal></expr>
    }<pos:position pos:line="23" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="23" pos:column="7"/></decl_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">v<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">&gt;<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="13">17<pos:position pos:line="25" pos:column="15"/></literal></expr>)<pos:position pos:line="25" pos:column="16"/></condition><then pos:line="25" pos:column="16"> <block pos:line="25" pos:column="17">{
        <decl_stmt><decl><specifier pos:line="26" pos:column="9">static<pos:position pos:line="26" pos:column="15"/></specifier> <type><name pos:line="26" pos:column="16">char<pos:position pos:line="26" pos:column="20"/></name></type> <name><name pos:line="26" pos:column="21">buf<pos:position pos:line="26" pos:column="24"/></name><index pos:line="26" pos:column="24">[<expr><literal type="number" pos:line="26" pos:column="25">50<pos:position pos:line="26" pos:column="27"/></literal></expr>]<pos:position pos:line="26" pos:column="28"/></index></name></decl>;<pos:position pos:line="26" pos:column="29"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">snprintf<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">buf<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="23">sizeof<argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">buf<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="36">"ICMP %u (invalid)"<pos:position pos:line="27" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="57">v<pos:position pos:line="27" pos:column="58"/></name></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="60"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">buf<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <return pos:line="31" pos:column="5">return <expr><name><name pos:line="31" pos:column="12">icmpPktStr<pos:position pos:line="31" pos:column="22"/></name><index pos:line="31" pos:column="22">[<expr><name pos:line="31" pos:column="23">v<pos:position pos:line="31" pos:column="24"/></name></expr>]<pos:position pos:line="31" pos:column="25"/></index></name></expr>;<pos:position pos:line="31" pos:column="26"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

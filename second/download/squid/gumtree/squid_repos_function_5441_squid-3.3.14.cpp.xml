<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5441_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">logfile_mod_stdio_open<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">Logfile<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">lf<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">path<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">size_t<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">bufsz<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">int<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">fatal_flag<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">lf<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">-&gt;<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="9">f_close<pos:position pos:line="4" pos:column="16"/></name></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">logfile_mod_stdio_close<pos:position pos:line="4" pos:column="42"/></name></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">lf<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">f_linewrite<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">logfile_mod_stdio_writeline<pos:position pos:line="5" pos:column="50"/></name></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">lf<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">f_linestart<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">logfile_mod_stdio_linestart<pos:position pos:line="6" pos:column="50"/></name></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">lf<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">f_lineend<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">logfile_mod_stdio_lineend<pos:position pos:line="7" pos:column="46"/></name></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">lf<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">f_flush<pos:position pos:line="8" pos:column="16"/></name></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">logfile_mod_stdio_flush<pos:position pos:line="8" pos:column="42"/></name></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">lf<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">f_rotate<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">logfile_mod_stdio_rotate<pos:position pos:line="9" pos:column="44"/></name></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">l_stdio_t<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">ll<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><cast type="static" pos:line="11" pos:column="21">static_cast<argument_list type="generic" pos:line="11" pos:column="32">&lt;<argument><expr><name pos:line="11" pos:column="33">l_stdio_t<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">*<pos:position pos:line="11" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="47"/></argument_list><argument_list pos:line="11" pos:column="44">(<argument><expr><call><name pos:line="11" pos:column="45">xcalloc<pos:position pos:line="11" pos:column="52"/></name><argument_list pos:line="11" pos:column="52">(<argument><expr><literal type="number" pos:line="11" pos:column="53">1<pos:position pos:line="11" pos:column="54"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="56">sizeof<argument_list pos:line="11" pos:column="62">(<argument><expr><operator pos:line="11" pos:column="63">*<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="64">ll<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">lf<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">data<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">ll<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ll<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">fd<pos:position pos:line="14" pos:column="11"/></name></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <call><name pos:line="14" pos:column="14">file_open<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">path<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="30">O_WRONLY<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">|<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">O_CREAT<pos:position pos:line="14" pos:column="48"/></name> <operator pos:line="14" pos:column="49">|<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">O_TEXT<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">DISK_ERROR<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">==<pos:position pos:line="16" pos:column="22"/></operator> <name><name pos:line="16" pos:column="23">ll<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">fd<pos:position pos:line="16" pos:column="29"/></name></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30"> <block pos:line="16" pos:column="31">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ENOENT<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">errno<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">&amp;&amp;<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="32">fatal_flag<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">fatalf<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="string" pos:line="18" pos:column="20">"Cannot open '%s' because\n"<pos:position pos:line="18" pos:column="48"/></literal>
                   <literal type="string" pos:line="19" pos:column="20">"\tthe parent directory does not exist.\n"<pos:position pos:line="19" pos:column="62"/></literal>
                   <literal type="string" pos:line="20" pos:column="20">"\tPlease create the directory.\n"<pos:position pos:line="20" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="56">path<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><name pos:line="21" pos:column="20">EACCES<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">==<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">errno<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">&amp;&amp;<pos:position pos:line="21" pos:column="46"/></operator> <name pos:line="21" pos:column="39">fatal_flag<pos:position pos:line="21" pos:column="49"/></name></expr>)<pos:position pos:line="21" pos:column="50"/></condition><then pos:line="21" pos:column="50"> <block pos:line="21" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">fatalf<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="string" pos:line="22" pos:column="20">"Cannot open '%s' for writing.\n"<pos:position pos:line="22" pos:column="53"/></literal>
                   <literal type="string" pos:line="23" pos:column="20">"\tThe parent directory must be writeable by the\n"<pos:position pos:line="23" pos:column="71"/></literal>
                   <literal type="string" pos:line="24" pos:column="20">"\tuser '%s', which is the cache_effective_user\n"<pos:position pos:line="24" pos:column="70"/></literal>
                   <literal type="string" pos:line="25" pos:column="20">"\tset in squid.conf."<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">path<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="50">Config<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">.<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="57">effectiveUser<pos:position pos:line="25" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif> <elseif pos:line="26" pos:column="11">else <if pos:line="26" pos:column="16">if <condition pos:line="26" pos:column="19">(<expr><name pos:line="26" pos:column="20">EISDIR<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">==<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">errno<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">&amp;&amp;<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="39">fatal_flag<pos:position pos:line="26" pos:column="49"/></name></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">fatalf<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="string" pos:line="27" pos:column="20">"Cannot open '%s' because it is a directory, not a file.\n"<pos:position pos:line="27" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="81">path<pos:position pos:line="27" pos:column="85"/></name></expr></argument>)<pos:position pos:line="27" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="87"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">50<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">DBG_IMPORTANT<pos:position pos:line="29" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="39">"ERROR: logfileOpen "<pos:position pos:line="29" pos:column="60"/></literal> <operator pos:line="29" pos:column="61">&lt;&lt;<pos:position pos:line="29" pos:column="69"/></operator> <name><name pos:line="29" pos:column="64">lf<pos:position pos:line="29" pos:column="66"/></name><operator pos:line="29" pos:column="66">-&gt;<pos:position pos:line="29" pos:column="71"/></operator><name pos:line="29" pos:column="68">path<pos:position pos:line="29" pos:column="72"/></name></name> <operator pos:line="29" pos:column="73">&lt;&lt;<pos:position pos:line="29" pos:column="81"/></operator> <literal type="string" pos:line="29" pos:column="76">": "<pos:position pos:line="29" pos:column="80"/></literal> <operator pos:line="29" pos:column="81">&lt;&lt;<pos:position pos:line="29" pos:column="89"/></operator> <call><name pos:line="29" pos:column="84">xstrerror<pos:position pos:line="29" pos:column="93"/></name><argument_list pos:line="29" pos:column="93">()<pos:position pos:line="29" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="97"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><literal type="number" pos:line="30" pos:column="20">0<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">bufsz<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">&gt;<pos:position pos:line="33" pos:column="19"/></operator> <literal type="number" pos:line="33" pos:column="17">0<pos:position pos:line="33" pos:column="18"/></literal></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">ll<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">buf<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <cast type="static" pos:line="34" pos:column="19">static_cast<argument_list type="generic" pos:line="34" pos:column="30">&lt;<argument><expr><name pos:line="34" pos:column="31">char<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">*<pos:position pos:line="34" pos:column="36"/></operator></expr></argument>&gt;<pos:position pos:line="34" pos:column="40"/></argument_list><argument_list pos:line="34" pos:column="37">(<argument><expr><call><name pos:line="34" pos:column="38">xmalloc<pos:position pos:line="34" pos:column="45"/></name><argument_list pos:line="34" pos:column="45">(<argument><expr><name pos:line="34" pos:column="46">bufsz<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></cast></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">ll<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">bufsz<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">bufsz<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <return pos:line="37" pos:column="5">return <expr><literal type="number" pos:line="37" pos:column="12">1<pos:position pos:line="37" pos:column="13"/></literal></expr>;<pos:position pos:line="37" pos:column="14"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

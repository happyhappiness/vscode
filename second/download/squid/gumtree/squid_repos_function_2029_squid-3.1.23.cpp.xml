<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2029_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>

<name pos:line="3" pos:column="1">diskCombineWrites<pos:position pos:line="3" pos:column="18"/></name><parameter_list pos:line="3" pos:column="18">(<parameter><decl><type><name><name pos:line="3" pos:column="19">struct<pos:position pos:line="3" pos:column="25"/></name> <name pos:line="3" pos:column="26">_fde_disk<pos:position pos:line="3" pos:column="35"/></name></name> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">fdd<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">len<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">dwrite_q<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">q<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">dwrite_q<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">wq<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/*
     * We need to combine multiple write requests on an FD's write
     * queue But only if we don't need to seek() in between them, ugh!
     * XXX This currently ignores any seeks (file_offset)
     */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">fdd<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">write_q<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">!=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <name><name pos:line="14" pos:column="33">fdd<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">write_q<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">-&gt;<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="47">next<pos:position pos:line="14" pos:column="51"/></name></name> <operator pos:line="14" pos:column="52">!=<pos:position pos:line="14" pos:column="54"/></operator> <name pos:line="14" pos:column="55">NULL<pos:position pos:line="14" pos:column="59"/></name></expr>)<pos:position pos:line="14" pos:column="60"/></condition><then pos:line="14" pos:column="60"> <block pos:line="14" pos:column="61">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>

        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">q<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">fdd<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">write_q<pos:position pos:line="17" pos:column="30"/></name></name></expr>;<pos:position pos:line="17" pos:column="31"/></init> <condition><expr><name pos:line="17" pos:column="32">q<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">!=<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">NULL<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></condition> <incr><expr><name pos:line="17" pos:column="43">q<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">=<pos:position pos:line="17" pos:column="46"/></operator> <name><name pos:line="17" pos:column="47">q<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">-&gt;<pos:position pos:line="17" pos:column="53"/></operator><name pos:line="17" pos:column="50">next<pos:position pos:line="17" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="55"/></control>
            <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="13">len<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">+=<pos:position pos:line="18" pos:column="19"/></operator> <name><name pos:line="18" pos:column="20">q<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">len<pos:position pos:line="18" pos:column="26"/></name></name> <operator pos:line="18" pos:column="27">-<pos:position pos:line="18" pos:column="28"/></operator> <name><name pos:line="18" pos:column="29">q<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">buf_offset<pos:position pos:line="18" pos:column="42"/></name></name></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt></block></for>

        <expr_stmt><expr><name pos:line="20" pos:column="9">wq<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <operator pos:line="20" pos:column="14">(<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">dwrite_q<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">*<pos:position pos:line="20" pos:column="25"/></operator><operator pos:line="20" pos:column="25">)<pos:position pos:line="20" pos:column="26"/></operator><call><name pos:line="20" pos:column="26">memAllocate<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">MEM_DWRITE_Q<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="22" pos:column="9">wq<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">buf<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <operator pos:line="22" pos:column="19">(<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">char<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">*<pos:position pos:line="22" pos:column="26"/></operator><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator><call><name pos:line="22" pos:column="27">xmalloc<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">len<pos:position pos:line="22" pos:column="38"/></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="24" pos:column="9">wq<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">len<pos:position pos:line="24" pos:column="16"/></name></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="26" pos:column="9">wq<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">buf_offset<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="28" pos:column="9">wq<pos:position pos:line="28" pos:column="11"/></name><operator pos:line="28" pos:column="11">-&gt;<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="13">next<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="30" pos:column="9">wq<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">free_func<pos:position pos:line="30" pos:column="22"/></name></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <name pos:line="30" pos:column="25">xfree<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>

        <do pos:line="32" pos:column="9">do <block pos:line="32" pos:column="12">{
            <expr_stmt><expr><name pos:line="33" pos:column="13">q<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name><name pos:line="33" pos:column="17">fdd<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">write_q<pos:position pos:line="33" pos:column="29"/></name></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">len<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">q<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">len<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">-<pos:position pos:line="34" pos:column="27"/></operator> <name><name pos:line="34" pos:column="28">q<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">buf_offset<pos:position pos:line="34" pos:column="41"/></name></name></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">xmemcpy<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">wq<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">buf<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">+<pos:position pos:line="35" pos:column="30"/></operator> <name><name pos:line="35" pos:column="31">wq<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">len<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="40">q<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">-&gt;<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="43">buf<pos:position pos:line="35" pos:column="46"/></name></name> <operator pos:line="35" pos:column="47">+<pos:position pos:line="35" pos:column="48"/></operator> <name><name pos:line="35" pos:column="49">q<pos:position pos:line="35" pos:column="50"/></name><operator pos:line="35" pos:column="50">-&gt;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="52">buf_offset<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="64">len<pos:position pos:line="35" pos:column="67"/></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">wq<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">len<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">+=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">len<pos:position pos:line="36" pos:column="27"/></name></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">fdd<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">write_q<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <name><name pos:line="37" pos:column="28">q<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">next<pos:position pos:line="37" pos:column="35"/></name></name></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>

            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><name><name pos:line="39" pos:column="17">q<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">free_func<pos:position pos:line="39" pos:column="29"/></name></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition><then pos:line="39" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call pos:line="40" pos:column="17">(<name><name pos:line="40" pos:column="18">q<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">free_func<pos:position pos:line="40" pos:column="30"/></name></name>) <argument_list pos:line="40" pos:column="32">(<argument><expr><name><name pos:line="40" pos:column="33">q<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">buf<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then></if>

            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">q<pos:position pos:line="42" pos:column="18"/></name></expr>)<pos:position pos:line="42" pos:column="19"/></condition><then pos:line="42" pos:column="19"> <block pos:line="42" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">memFree<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">q<pos:position pos:line="43" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="28">MEM_DWRITE_Q<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name pos:line="44" pos:column="17">q<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="21">NULL<pos:position pos:line="44" pos:column="25"/></name></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block> while <condition pos:line="46" pos:column="17">(<expr><name><name pos:line="46" pos:column="18">fdd<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">write_q<pos:position pos:line="46" pos:column="30"/></name></name> <operator pos:line="46" pos:column="31">!=<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="34">NULL<pos:position pos:line="46" pos:column="38"/></name></expr>)<pos:position pos:line="46" pos:column="39"/></condition>;<pos:position pos:line="46" pos:column="40"/></do>

        <expr_stmt><expr><name><name pos:line="48" pos:column="9">fdd<pos:position pos:line="48" pos:column="12"/></name><operator pos:line="48" pos:column="12">-&gt;<pos:position pos:line="48" pos:column="17"/></operator><name pos:line="48" pos:column="14">write_q_tail<pos:position pos:line="48" pos:column="26"/></name></name> <operator pos:line="48" pos:column="27">=<pos:position pos:line="48" pos:column="28"/></operator> <name pos:line="48" pos:column="29">wq<pos:position pos:line="48" pos:column="31"/></name></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="50" pos:column="9">fdd<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">write_q<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">wq<pos:position pos:line="50" pos:column="26"/></name></expr>;<pos:position pos:line="50" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

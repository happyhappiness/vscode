<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5088_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">comm_flush_updates<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">devpoll_update<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">cur<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">==<pos:position pos:line="5" pos:column="30"/></operator> <operator pos:line="5" pos:column="31">-<pos:position pos:line="5" pos:column="32"/></operator><literal type="number" pos:line="5" pos:column="32">1<pos:position pos:line="5" pos:column="33"/></literal></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if> <comment type="block" pos:line="6" pos:column="17">/* array of changes to make is empty */</comment>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(
        <argument><expr><literal type="number" pos:line="9" pos:column="9">5<pos:position pos:line="9" pos:column="10"/></literal></expr></argument>,
        <argument><expr><ternary><condition><expr><name pos:line="10" pos:column="9">DEBUG_DEVPOLL<pos:position pos:line="10" pos:column="22"/></name></expr> ?<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr> <pos:position pos:line="10" pos:column="27"/></then><else pos:line="10" pos:column="27">: <expr><literal type="number" pos:line="10" pos:column="29">8<pos:position pos:line="10" pos:column="30"/></literal></expr></else></ternary></expr></argument>,
        <argument><expr><name pos:line="11" pos:column="9">HERE<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;&lt;<pos:position pos:line="11" pos:column="22"/></operator> <operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="18">devpoll_update<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">cur<pos:position pos:line="11" pos:column="36"/></name></name> <operator pos:line="11" pos:column="37">+<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">1<pos:position pos:line="11" pos:column="40"/></literal><operator pos:line="11" pos:column="40">)<pos:position pos:line="11" pos:column="41"/></operator> <operator pos:line="11" pos:column="42">&lt;&lt;<pos:position pos:line="11" pos:column="50"/></operator> <literal type="string" pos:line="11" pos:column="45">" fds queued"<pos:position pos:line="11" pos:column="58"/></literal></expr></argument>
    )<pos:position pos:line="12" pos:column="6"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="7"/></expr_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">i<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">write<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(
            <argument><expr><name pos:line="15" pos:column="13">devpoll_fd<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <comment type="block" pos:line="15" pos:column="25">/* open handle to /dev/poll */</comment>
            <argument><expr><name><name pos:line="16" pos:column="13">devpoll_update<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">pfds<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>, <comment type="block" pos:line="16" pos:column="34">/* pointer to array of struct pollfd */</comment>
            <argument><expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">devpoll_update<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">cur<pos:position pos:line="17" pos:column="32"/></name></name> <operator pos:line="17" pos:column="33">+<pos:position pos:line="17" pos:column="34"/></operator> <literal type="number" pos:line="17" pos:column="35">1<pos:position pos:line="17" pos:column="36"/></literal><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator> <operator pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></operator> <sizeof pos:line="17" pos:column="40">sizeof<argument_list pos:line="17" pos:column="46">(<argument><expr pos:line="17" pos:column="47">struct <name pos:line="17" pos:column="54">pollfd<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></sizeof></expr></argument> <comment type="block" pos:line="17" pos:column="62">/* bytes to process */</comment>
        )<pos:position pos:line="18" pos:column="10"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">i<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">&gt;<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><cast type="static" pos:line="20" pos:column="12">static_cast<argument_list type="generic" pos:line="20" pos:column="23">&lt;<argument><expr><name pos:line="20" pos:column="24">size_t<pos:position pos:line="20" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="34"/></argument_list><argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">i<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></cast> <operator pos:line="20" pos:column="35">==<pos:position pos:line="20" pos:column="37"/></operator> <operator pos:line="20" pos:column="38">(<pos:position pos:line="20" pos:column="39"/></operator><sizeof pos:line="20" pos:column="39">sizeof<argument_list pos:line="20" pos:column="45">(<argument><expr pos:line="20" pos:column="46">struct <name pos:line="20" pos:column="53">pollfd<pos:position pos:line="20" pos:column="59"/></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></sizeof> <operator pos:line="20" pos:column="61">*<pos:position pos:line="20" pos:column="62"/></operator> <operator pos:line="20" pos:column="63">(<pos:position pos:line="20" pos:column="64"/></operator><name><name pos:line="20" pos:column="64">devpoll_update<pos:position pos:line="20" pos:column="78"/></name><operator pos:line="20" pos:column="78">.<pos:position pos:line="20" pos:column="79"/></operator><name pos:line="20" pos:column="79">cur<pos:position pos:line="20" pos:column="82"/></name></name> <operator pos:line="20" pos:column="83">+<pos:position pos:line="20" pos:column="84"/></operator> <literal type="number" pos:line="20" pos:column="85">1<pos:position pos:line="20" pos:column="86"/></literal><operator pos:line="20" pos:column="86">)<pos:position pos:line="20" pos:column="87"/></operator><operator pos:line="20" pos:column="87">)<pos:position pos:line="20" pos:column="88"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="90"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">devpoll_update<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">cur<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <operator pos:line="21" pos:column="26">-<pos:position pos:line="21" pos:column="27"/></operator><literal type="number" pos:line="21" pos:column="27">1<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt> <comment type="block" pos:line="21" pos:column="30">/* reset size of array, no elements remain */</comment>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

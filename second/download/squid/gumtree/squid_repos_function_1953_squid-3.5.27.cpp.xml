<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1953_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerAllowedToUse<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">CachePeer<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">p<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">HttpRequest<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">request<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">CachePeerDomainList<pos:position pos:line="5" pos:column="30"/></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">d<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">request<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">!=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">neighborType<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">p<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">request<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call> <operator pos:line="8" pos:column="34">==<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">PEER_SIBLING<pos:position pos:line="8" pos:column="49"/></name></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50"> <block pos:line="8" pos:column="51">{
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">PEER_MULTICAST_SIBLINGS<pos:position pos:line="9" pos:column="28"/></name></expr></cpp:if>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">p<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">type<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">PEER_MULTICAST<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">&amp;&amp;<pos:position pos:line="10" pos:column="49"/></operator> <name><name pos:line="10" pos:column="42">p<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">options<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">.<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="53">mcast_siblings<pos:position pos:line="10" pos:column="67"/></name></name> <operator pos:line="10" pos:column="68">&amp;&amp;<pos:position pos:line="10" pos:column="78"/></operator>
                <operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name><name pos:line="11" pos:column="18">request<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">flags<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">noCache<pos:position pos:line="11" pos:column="40"/></name></name> <operator pos:line="11" pos:column="41">||<pos:position pos:line="11" pos:column="43"/></operator> <name><name pos:line="11" pos:column="44">request<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">flags<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">.<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="59">refresh<pos:position pos:line="11" pos:column="66"/></name></name> <operator pos:line="11" pos:column="67">||<pos:position pos:line="11" pos:column="69"/></operator> <name><name pos:line="11" pos:column="70">request<pos:position pos:line="11" pos:column="77"/></name><operator pos:line="11" pos:column="77">-&gt;<pos:position pos:line="11" pos:column="82"/></operator><name pos:line="11" pos:column="79">flags<pos:position pos:line="11" pos:column="84"/></name><operator pos:line="11" pos:column="84">.<pos:position pos:line="11" pos:column="85"/></operator><name pos:line="11" pos:column="85">loopDetected<pos:position pos:line="11" pos:column="97"/></name></name> <operator pos:line="11" pos:column="98">||<pos:position pos:line="11" pos:column="100"/></operator> <name><name pos:line="11" pos:column="101">request<pos:position pos:line="11" pos:column="108"/></name><operator pos:line="11" pos:column="108">-&gt;<pos:position pos:line="11" pos:column="113"/></operator><name pos:line="11" pos:column="110">flags<pos:position pos:line="11" pos:column="115"/></name><operator pos:line="11" pos:column="115">.<pos:position pos:line="11" pos:column="116"/></operator><name pos:line="11" pos:column="116">needValidation<pos:position pos:line="11" pos:column="130"/></name></name><operator pos:line="11" pos:column="130">)<pos:position pos:line="11" pos:column="131"/></operator></expr>)<pos:position pos:line="11" pos:column="132"/></condition><then pos:line="11" pos:column="132">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">15<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">2<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"peerAllowedToUse("<pos:position pos:line="12" pos:column="46"/></literal> <operator pos:line="12" pos:column="47">&lt;&lt;<pos:position pos:line="12" pos:column="55"/></operator> <name><name pos:line="12" pos:column="50">p<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">-&gt;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="53">name<pos:position pos:line="12" pos:column="57"/></name></name> <operator pos:line="12" pos:column="58">&lt;&lt;<pos:position pos:line="12" pos:column="66"/></operator> <literal type="string" pos:line="12" pos:column="61">", "<pos:position pos:line="12" pos:column="65"/></literal> <operator pos:line="12" pos:column="66">&lt;&lt;<pos:position pos:line="12" pos:column="74"/></operator> <call><name><name pos:line="12" pos:column="69">request<pos:position pos:line="12" pos:column="76"/></name><operator pos:line="12" pos:column="76">-&gt;<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="78">GetHost<pos:position pos:line="12" pos:column="85"/></name></name><argument_list pos:line="12" pos:column="85">()<pos:position pos:line="12" pos:column="87"/></argument_list></call> <operator pos:line="12" pos:column="88">&lt;&lt;<pos:position pos:line="12" pos:column="96"/></operator> <literal type="string" pos:line="12" pos:column="91">") : multicast-siblings optimization match"<pos:position pos:line="12" pos:column="134"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="136"/></expr_stmt></block></then></if>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">request<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">flags<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">noCache<pos:position pos:line="14" pos:column="35"/></name></name></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><literal type="boolean" pos:line="15" pos:column="20">false<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">request<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">flags<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">refresh<pos:position pos:line="17" pos:column="35"/></name></name></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36">
            <block type="pseudo"><return pos:line="18" pos:column="13">return <expr><literal type="boolean" pos:line="18" pos:column="20">false<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">request<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">flags<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">loopDetected<pos:position pos:line="20" pos:column="40"/></name></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
            <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><literal type="boolean" pos:line="21" pos:column="20">false<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">request<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">flags<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">needValidation<pos:position pos:line="23" pos:column="42"/></name></name></expr>)<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43">
            <block type="pseudo"><return pos:line="24" pos:column="13">return <expr><literal type="boolean" pos:line="24" pos:column="20">false<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="27" pos:column="5">// CONNECT requests are proxy requests. Not to be forwarded to origin servers.</comment>
    <comment type="line" pos:line="28" pos:column="5">// Unless the destination port matches, in which case we MAY perform a 'DIRECT' to this CachePeer.</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">p<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">options<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">originserver<pos:position pos:line="29" pos:column="32"/></name></name> <operator pos:line="29" pos:column="33">&amp;&amp;<pos:position pos:line="29" pos:column="43"/></operator> <name><name pos:line="29" pos:column="36">request<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">method<pos:position pos:line="29" pos:column="51"/></name></name> <operator pos:line="29" pos:column="52">==<pos:position pos:line="29" pos:column="54"/></operator> <name><name pos:line="29" pos:column="55">Http<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">::<pos:position pos:line="29" pos:column="61"/></operator><name pos:line="29" pos:column="61">METHOD_CONNECT<pos:position pos:line="29" pos:column="75"/></name></name> <operator pos:line="29" pos:column="76">&amp;&amp;<pos:position pos:line="29" pos:column="86"/></operator> <name><name pos:line="29" pos:column="79">request<pos:position pos:line="29" pos:column="86"/></name><operator pos:line="29" pos:column="86">-&gt;<pos:position pos:line="29" pos:column="91"/></operator><name pos:line="29" pos:column="88">port<pos:position pos:line="29" pos:column="92"/></name></name> <operator pos:line="29" pos:column="93">!=<pos:position pos:line="29" pos:column="95"/></operator> <name><name pos:line="29" pos:column="96">p<pos:position pos:line="29" pos:column="97"/></name><operator pos:line="29" pos:column="97">-&gt;<pos:position pos:line="29" pos:column="102"/></operator><name pos:line="29" pos:column="99">http_port<pos:position pos:line="29" pos:column="108"/></name></name></expr>)<pos:position pos:line="29" pos:column="109"/></condition><then pos:line="29" pos:column="109">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><literal type="boolean" pos:line="30" pos:column="16">false<pos:position pos:line="30" pos:column="21"/></literal></expr>;<pos:position pos:line="30" pos:column="22"/></return></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">p<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">peer_domain<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">==<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">&amp;&amp;<pos:position pos:line="32" pos:column="42"/></operator> <name><name pos:line="32" pos:column="35">p<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">access<pos:position pos:line="32" pos:column="44"/></name></name> <operator pos:line="32" pos:column="45">==<pos:position pos:line="32" pos:column="47"/></operator> <name pos:line="32" pos:column="48">NULL<pos:position pos:line="32" pos:column="52"/></name></expr>)<pos:position pos:line="32" pos:column="53"/></condition><then pos:line="32" pos:column="53">
        <block type="pseudo"><return pos:line="33" pos:column="9">return <expr><literal type="boolean" pos:line="33" pos:column="16">true<pos:position pos:line="33" pos:column="20"/></literal></expr>;<pos:position pos:line="33" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="35" pos:column="5">bool<pos:position pos:line="35" pos:column="9"/></name></type> <name pos:line="35" pos:column="10">do_ping<pos:position pos:line="35" pos:column="17"/></name> <init pos:line="35" pos:column="18">= <expr><literal type="boolean" pos:line="35" pos:column="20">false<pos:position pos:line="35" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="26"/></decl_stmt>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><expr><name pos:line="36" pos:column="10">d<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name><name pos:line="36" pos:column="14">p<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">peer_domain<pos:position pos:line="36" pos:column="28"/></name></name></expr>;<pos:position pos:line="36" pos:column="29"/></init> <condition><expr><name pos:line="36" pos:column="30">d<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></condition> <incr><expr><name pos:line="36" pos:column="33">d<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">=<pos:position pos:line="36" pos:column="36"/></operator> <name><name pos:line="36" pos:column="37">d<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">next<pos:position pos:line="36" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="36" pos:column="45"/></control> <block pos:line="36" pos:column="46">{
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><literal type="number" pos:line="37" pos:column="13">0<pos:position pos:line="37" pos:column="14"/></literal> <operator pos:line="37" pos:column="15">==<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">matchDomainName<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><call><name><name pos:line="37" pos:column="34">request<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">GetHost<pos:position pos:line="37" pos:column="50"/></name></name><argument_list pos:line="37" pos:column="50">()<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="54">d<pos:position pos:line="37" pos:column="55"/></name><operator pos:line="37" pos:column="55">-&gt;<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="57">domain<pos:position pos:line="37" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="65"/></condition><then pos:line="37" pos:column="65"> <block pos:line="37" pos:column="66">{
            <expr_stmt><expr><name pos:line="38" pos:column="13">do_ping<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name><name pos:line="38" pos:column="23">d<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">do_ping<pos:position pos:line="38" pos:column="33"/></name></name></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>
            <break pos:line="39" pos:column="13">break;<pos:position pos:line="39" pos:column="19"/></break>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="42" pos:column="9">do_ping<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <operator pos:line="42" pos:column="19">!<pos:position pos:line="42" pos:column="20"/></operator><name><name pos:line="42" pos:column="20">d<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">do_ping<pos:position pos:line="42" pos:column="30"/></name></name></expr>;<pos:position pos:line="42" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">p<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">peer_domain<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">&amp;&amp;<pos:position pos:line="45" pos:column="34"/></operator> <operator pos:line="45" pos:column="27">!<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">do_ping<pos:position pos:line="45" pos:column="35"/></name></expr>)<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36">
        <block type="pseudo"><return pos:line="46" pos:column="9">return <expr><literal type="boolean" pos:line="46" pos:column="16">false<pos:position pos:line="46" pos:column="21"/></literal></expr>;<pos:position pos:line="46" pos:column="22"/></return></block></then></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">p<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">-&gt;<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="12">access<pos:position pos:line="48" pos:column="18"/></name></name> <operator pos:line="48" pos:column="19">==<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">NULL<pos:position pos:line="48" pos:column="26"/></name></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27">
        <block type="pseudo"><return pos:line="49" pos:column="9">return <expr><name pos:line="49" pos:column="16">do_ping<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="51" pos:column="5">ACLFilledChecklist<pos:position pos:line="51" pos:column="23"/></name></type> <name pos:line="51" pos:column="24">checklist<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name><name pos:line="51" pos:column="34">p<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">-&gt;<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="37">access<pos:position pos:line="51" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">request<pos:position pos:line="51" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">NULL<pos:position pos:line="51" pos:column="58"/></name></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></decl>;<pos:position pos:line="51" pos:column="60"/></decl_stmt>

    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><call><name><name pos:line="53" pos:column="13">checklist<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">.<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">fastCheck<pos:position pos:line="53" pos:column="32"/></name></name><argument_list pos:line="53" pos:column="32">()<pos:position pos:line="53" pos:column="34"/></argument_list></call> <operator pos:line="53" pos:column="35">==<pos:position pos:line="53" pos:column="37"/></operator> <name pos:line="53" pos:column="38">ACCESS_ALLOWED<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">)<pos:position pos:line="53" pos:column="53"/></operator></expr>;<pos:position pos:line="53" pos:column="54"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

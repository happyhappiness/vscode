<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_384_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">Check_forfilechange<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">usersfile<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">uf<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">stat<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">ChkBuf<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>		<comment type="block" pos:line="4" pos:column="33">/* Stat data buffer */</comment>

    <comment type="block" pos:line="6" pos:column="5">/* Stat the allowed users file. If it cannot be accessed, return. */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">uf<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">path<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">NULL<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">stat<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name><name pos:line="11" pos:column="14">uf<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">path<pos:position pos:line="11" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="24">&amp;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="25">ChkBuf<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call> <operator pos:line="11" pos:column="33">&lt;<pos:position pos:line="11" pos:column="37"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">errno<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">==<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">ENOENT<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29"> <block pos:line="12" pos:column="30">{
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">uf<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">LMT<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">0<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">free_names<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">uf<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else <block pos:line="15" pos:column="16">{		<comment type="block" pos:line="15" pos:column="33">/* Report error when accessing file */</comment>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">syslog<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">LOG_ERR<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="29">"%s: %s"<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">uf<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">path<pos:position pos:line="16" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="49">strerror<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">errno<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></else></if>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="20" pos:column="5">/* return if no change */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">ChkBuf<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">st_mtime<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">==<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">uf<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">LMT<pos:position pos:line="21" pos:column="35"/></name></name></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36">
        <block type="pseudo"><return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/*
     * The file changed, so re-read it.
     */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">syslog<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">LOG_INFO<pos:position pos:line="27" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="22">"Check_forfilechange: Reloading user list '%s'."<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="72">uf<pos:position pos:line="27" pos:column="74"/></name><operator pos:line="27" pos:column="74">-&gt;<pos:position pos:line="27" pos:column="79"/></operator><name pos:line="27" pos:column="76">path<pos:position pos:line="27" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">Read_usersfile<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="26">uf<pos:position pos:line="28" pos:column="28"/></name></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

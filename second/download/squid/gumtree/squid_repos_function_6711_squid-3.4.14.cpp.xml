<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6711_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">rfc3596BuildPTRQuery6<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name><name pos:line="2" pos:column="29">struct<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">in6_addr<pos:position pos:line="2" pos:column="44"/></name></name></type> <name pos:line="2" pos:column="45">addr<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">buf<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">size_t<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">sz<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">unsigned<pos:position pos:line="2" pos:column="81"/></name> <name pos:line="2" pos:column="82">short<pos:position pos:line="2" pos:column="87"/></name></type> <name pos:line="2" pos:column="88">qid<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="93">rfc1035_query<pos:position pos:line="2" pos:column="106"/></name> <modifier pos:line="2" pos:column="107">*<pos:position pos:line="2" pos:column="108"/></modifier></type> <name pos:line="2" pos:column="109">query<pos:position pos:line="2" pos:column="114"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="116">ssize_t<pos:position pos:line="2" pos:column="123"/></name></type> <name pos:line="2" pos:column="124">edns_sz<pos:position pos:line="2" pos:column="131"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="132"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">rev<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">RFC1035_MAXHOSTNAMESZ<pos:position pos:line="4" pos:column="42"/></name></expr>]<pos:position pos:line="4" pos:column="43"/></index></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">uint8_t<pos:position pos:line="5" pos:column="18"/></name><modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type> <name pos:line="5" pos:column="20">r<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name><name pos:line="5" pos:column="24">addr<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">s6_addr<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type> <name pos:line="6" pos:column="11">p<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">rev<pos:position pos:line="6" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt> <comment type="block" pos:line="7" pos:column="12">/* NP: MUST allow signed for loop termination. */</comment>

    <comment type="block" pos:line="9" pos:column="5">/* work from the raw addr field. anything else may have representation changes. */</comment>
    <comment type="block" pos:line="10" pos:column="5">/* The sin6_port and sin6_addr members shall be in network byte order. */</comment>
    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">15<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></init> <condition><expr><name pos:line="11" pos:column="18">i<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">&gt;=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></condition> <incr><expr><name pos:line="11" pos:column="26">i<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">--<pos:position pos:line="11" pos:column="29"/></operator></expr><operator pos:line="11" pos:column="29">,<pos:position pos:line="11" pos:column="30"/></operator> <expr><name pos:line="11" pos:column="31">p<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">+=<pos:position pos:line="11" pos:column="34"/></operator><literal type="number" pos:line="11" pos:column="34">4<pos:position pos:line="11" pos:column="35"/></literal></expr></incr>)<pos:position pos:line="11" pos:column="36"/></control> <block pos:line="11" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">snprintf<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">p<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="21">5<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="24">"%1x.%1x."<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="36">(<pos:position pos:line="12" pos:column="37"/></operator><operator pos:line="12" pos:column="37">(<pos:position pos:line="12" pos:column="38"/></operator><name><name pos:line="12" pos:column="38">r<pos:position pos:line="12" pos:column="39"/></name><index pos:line="12" pos:column="39">[<expr><name pos:line="12" pos:column="40">i<pos:position pos:line="12" pos:column="41"/></name></expr>]<pos:position pos:line="12" pos:column="42"/></index></name><operator pos:line="12" pos:column="42">)<pos:position pos:line="12" pos:column="43"/></operator><operator pos:line="12" pos:column="43">&amp;<pos:position pos:line="12" pos:column="48"/></operator><literal type="number" pos:line="12" pos:column="44">0xf<pos:position pos:line="12" pos:column="47"/></literal><operator pos:line="12" pos:column="47">)<pos:position pos:line="12" pos:column="48"/></operator></expr></argument>, <argument><expr><operator pos:line="12" pos:column="50">(<pos:position pos:line="12" pos:column="51"/></operator><name><name pos:line="12" pos:column="51">r<pos:position pos:line="12" pos:column="52"/></name><index pos:line="12" pos:column="52">[<expr><name pos:line="12" pos:column="53">i<pos:position pos:line="12" pos:column="54"/></name></expr>]<pos:position pos:line="12" pos:column="55"/></index></name><operator pos:line="12" pos:column="55">&gt;&gt;<pos:position pos:line="12" pos:column="60"/></operator><literal type="number" pos:line="12" pos:column="57">4<pos:position pos:line="12" pos:column="58"/></literal><operator pos:line="12" pos:column="58">)<pos:position pos:line="12" pos:column="59"/></operator><operator pos:line="12" pos:column="59">&amp;<pos:position pos:line="12" pos:column="64"/></operator><literal type="number" pos:line="12" pos:column="60">0xf<pos:position pos:line="12" pos:column="63"/></literal></expr></argument> )<pos:position pos:line="12" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">snprintf<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">p<pos:position pos:line="15" pos:column="15"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="16">10<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="19">"ip6.arpa."<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>

    <return pos:line="17" pos:column="5">return <expr><call><name pos:line="17" pos:column="12">rfc3596BuildHostQuery<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">rev<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">buf<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">sz<pos:position pos:line="17" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">qid<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">query<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="60">RFC1035_TYPE_PTR<pos:position pos:line="17" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="78">edns_sz<pos:position pos:line="17" pos:column="85"/></name></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="87"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

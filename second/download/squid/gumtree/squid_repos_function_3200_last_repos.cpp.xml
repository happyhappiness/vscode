<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3200_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Address<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">applyMask<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">unsigned<pos:position pos:line="2" pos:column="38"/></name> <name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">cidrMask<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">mtype<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uint8_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">clearbits<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint8_t<pos:position pos:line="5" pos:column="12"/></name><modifier pos:line="5" pos:column="12">*<pos:position pos:line="5" pos:column="13"/></modifier></type> <name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

    <comment type="line" pos:line="7" pos:column="5">// validation and short-cuts.</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">cidrMask<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&gt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">128<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">cidrMask<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&gt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">32<pos:position pos:line="11" pos:column="22"/></literal> <operator pos:line="11" pos:column="23">&amp;&amp;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="26">mtype<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">==<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">AF_INET<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="boolean" pos:line="12" pos:column="16">false<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">cidrMask<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">==<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
        <comment type="block" pos:line="15" pos:column="9">/* CIDR /0 is NoAddr regardless of the IPv4/IPv6 protocol */</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">setNoAddr<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><literal type="boolean" pos:line="17" pos:column="16">true<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">clearbits<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call pos:line="20" pos:column="17">(<name pos:line="20" pos:column="18">uint8_t<pos:position pos:line="20" pos:column="25"/></name>)<argument_list pos:line="20" pos:column="26">( <argument><expr><operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><ternary><condition><expr><name pos:line="20" pos:column="29">mtype<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">==<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">AF_INET6<pos:position pos:line="20" pos:column="44"/></name></expr>?<pos:position pos:line="20" pos:column="45"/></condition><then><expr><literal type="number" pos:line="20" pos:column="45">128<pos:position pos:line="20" pos:column="48"/></literal></expr></then><else pos:line="20" pos:column="48">:<expr><literal type="number" pos:line="20" pos:column="49">32<pos:position pos:line="20" pos:column="51"/></literal></expr></else></ternary><operator pos:line="20" pos:column="51">)<pos:position pos:line="20" pos:column="52"/></operator> <operator pos:line="20" pos:column="53">-<pos:position pos:line="20" pos:column="54"/></operator> <name pos:line="20" pos:column="55">cidrMask<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>

    <comment type="line" pos:line="22" pos:column="5">// short-cut</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">clearbits<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">==<pos:position pos:line="23" pos:column="21"/></operator> <literal type="number" pos:line="23" pos:column="22">0<pos:position pos:line="23" pos:column="23"/></literal></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
        <block type="pseudo"><return pos:line="24" pos:column="9">return <expr><literal type="boolean" pos:line="24" pos:column="16">true<pos:position pos:line="24" pos:column="20"/></literal></expr>;<pos:position pos:line="24" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <operator pos:line="26" pos:column="9">(<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">uint8_t<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">*<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">)<pos:position pos:line="26" pos:column="19"/></operator><operator pos:line="26" pos:column="19">(<pos:position pos:line="26" pos:column="20"/></operator><operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator><name><name pos:line="26" pos:column="21">mSocketAddr_<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">.<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">sin6_addr<pos:position pos:line="26" pos:column="43"/></name></name><operator pos:line="26" pos:column="43">)<pos:position pos:line="26" pos:column="44"/></operator> <operator pos:line="26" pos:column="45">+<pos:position pos:line="26" pos:column="46"/></operator> <literal type="number" pos:line="26" pos:column="47">15<pos:position pos:line="26" pos:column="49"/></literal></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>

    <for pos:line="28" pos:column="5">for <control pos:line="28" pos:column="9">(<init pos:line="28" pos:column="10">;<pos:position pos:line="28" pos:column="11"/></init> <condition><expr><name pos:line="28" pos:column="12">clearbits<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">&gt;<pos:position pos:line="28" pos:column="25"/></operator><literal type="number" pos:line="28" pos:column="22">0<pos:position pos:line="28" pos:column="23"/></literal> <operator pos:line="28" pos:column="24">&amp;&amp;<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="27">p<pos:position pos:line="28" pos:column="28"/></name> <operator pos:line="28" pos:column="29">&gt;=<pos:position pos:line="28" pos:column="34"/></operator> <operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">uint8_t<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator><operator pos:line="28" pos:column="41">)<pos:position pos:line="28" pos:column="42"/></operator><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name><name pos:line="28" pos:column="43">mSocketAddr_<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">.<pos:position pos:line="28" pos:column="56"/></operator><name pos:line="28" pos:column="56">sin6_addr<pos:position pos:line="28" pos:column="65"/></name></name></expr> ;<pos:position pos:line="28" pos:column="67"/></condition> <incr><expr><operator pos:line="28" pos:column="68">--<pos:position pos:line="28" pos:column="70"/></operator><name pos:line="28" pos:column="70">p<pos:position pos:line="28" pos:column="71"/></name></expr></incr> )<pos:position pos:line="28" pos:column="73"/></control> <block pos:line="28" pos:column="74">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">clearbits<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="25">8<pos:position pos:line="29" pos:column="26"/></literal></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
            <expr_stmt><expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">p<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">&amp;=<pos:position pos:line="30" pos:column="22"/></operator> <operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><literal type="number" pos:line="30" pos:column="21">0xFF<pos:position pos:line="30" pos:column="25"/></literal> <operator pos:line="30" pos:column="26">&lt;&lt;<pos:position pos:line="30" pos:column="34"/></operator> <name pos:line="30" pos:column="29">clearbits<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">)<pos:position pos:line="30" pos:column="39"/></operator> <operator pos:line="30" pos:column="40">&amp;<pos:position pos:line="30" pos:column="45"/></operator> <literal type="number" pos:line="30" pos:column="42">0xFF<pos:position pos:line="30" pos:column="46"/></literal><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">clearbits<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">0<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
            <expr_stmt><expr><operator pos:line="33" pos:column="13">*<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">p<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&amp;=<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="19">0x00<pos:position pos:line="33" pos:column="23"/></literal></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="34" pos:column="13">clearbits<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">-=<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="26">8<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></else></if>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

    <return pos:line="38" pos:column="5">return <expr><literal type="boolean" pos:line="38" pos:column="12">true<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

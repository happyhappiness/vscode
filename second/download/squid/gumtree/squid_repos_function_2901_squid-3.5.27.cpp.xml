<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2901_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">Private<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">String<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">&amp;<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="28">v<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="2" pos:column="9">setMask<pos:position pos:line="2" pos:column="16"/></name><argument_list pos:line="2" pos:column="16">(<argument><expr><name pos:line="2" pos:column="17">CC_PRIVATE<pos:position pos:line="2" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="boolean" pos:line="2" pos:column="28">true<pos:position pos:line="2" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="34"/></expr_stmt>
        <if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><call><name><name pos:line="3" pos:column="14">v<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">.<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">size<pos:position pos:line="3" pos:column="20"/></name></name><argument_list pos:line="3" pos:column="20">()<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23">
            <block type="pseudo"><return pos:line="4" pos:column="13">return;<pos:position pos:line="4" pos:column="20"/></return></block></then></if>
        <comment type="line" pos:line="5" pos:column="9">// uses append for multi-line headers</comment>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name><name pos:line="6" pos:column="13">private_<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">size<pos:position pos:line="6" pos:column="26"/></name></name><argument_list pos:line="6" pos:column="26">()<pos:position pos:line="6" pos:column="28"/></argument_list></call> <operator pos:line="6" pos:column="29">&gt;<pos:position pos:line="6" pos:column="33"/></operator> <literal type="number" pos:line="6" pos:column="31">0<pos:position pos:line="6" pos:column="32"/></literal></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="13">private_<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">append<pos:position pos:line="7" pos:column="28"/></name></name><argument_list pos:line="7" pos:column="28">(<argument><expr><literal type="string" pos:line="7" pos:column="29">","<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">private_<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">append<pos:position pos:line="8" pos:column="24"/></name></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">v<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></function></unit>

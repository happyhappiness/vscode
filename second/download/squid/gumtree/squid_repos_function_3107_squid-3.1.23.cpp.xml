<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3107_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HttpReply<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">BuildHttpReply<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpReply<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">rep<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">new<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">HttpReply<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">name<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name pos:line="5" pos:column="24">errorPageName<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">page_id<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* no LMT for error pages; error pages expire immediately */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">strchr<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">name<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="22">':'<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
        <comment type="block" pos:line="9" pos:column="9">/* Redirection */</comment>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">request<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">method<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">!=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">METHOD_GET<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">&amp;&amp;<pos:position pos:line="10" pos:column="53"/></operator> <name><name pos:line="10" pos:column="46">request<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">method<pos:position pos:line="10" pos:column="61"/></name></name> <operator pos:line="10" pos:column="62">!=<pos:position pos:line="10" pos:column="64"/></operator> <name pos:line="10" pos:column="65">METHOD_HEAD<pos:position pos:line="10" pos:column="76"/></name> <operator pos:line="10" pos:column="77">&amp;&amp;<pos:position pos:line="10" pos:column="87"/></operator> <name><name pos:line="10" pos:column="80">request<pos:position pos:line="10" pos:column="87"/></name><operator pos:line="10" pos:column="87">-&gt;<pos:position pos:line="10" pos:column="92"/></operator><name pos:line="10" pos:column="89">http_ver<pos:position pos:line="10" pos:column="97"/></name></name> <operator pos:line="10" pos:column="98">&gt;=<pos:position pos:line="10" pos:column="103"/></operator> <call><name pos:line="10" pos:column="101">HttpVersion<pos:position pos:line="10" pos:column="112"/></name><argument_list pos:line="10" pos:column="112">(<argument><expr><literal type="number" pos:line="10" pos:column="113">1<pos:position pos:line="10" pos:column="114"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="115">1<pos:position pos:line="10" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="117"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="118"/></condition><then pos:line="10" pos:column="118">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="11" pos:column="13">rep<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">setHeaders<pos:position pos:line="11" pos:column="28"/></name></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">HTTP_TEMPORARY_REDIRECT<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">NULL<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="60">"text/html"<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="73">0<pos:position pos:line="11" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="76">0<pos:position pos:line="11" pos:column="77"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="79">-<pos:position pos:line="11" pos:column="80"/></operator><literal type="number" pos:line="11" pos:column="80">1<pos:position pos:line="11" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="83"/></expr_stmt></block></then>
        <else pos:line="12" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="13">rep<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">setHeaders<pos:position pos:line="13" pos:column="28"/></name></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">HTTP_MOVED_TEMPORARILY<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">NULL<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="59">"text/html"<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="72">0<pos:position pos:line="13" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="75">0<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="78">-<pos:position pos:line="13" pos:column="79"/></operator><literal type="number" pos:line="13" pos:column="79">1<pos:position pos:line="13" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="82"/></expr_stmt></block></else></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">request<pos:position pos:line="15" pos:column="20"/></name></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21"> <block pos:line="15" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">char<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">quoted_url<pos:position pos:line="16" pos:column="29"/></name> <init pos:line="16" pos:column="30">= <expr><call><name pos:line="16" pos:column="32">rfc1738_escape_part<pos:position pos:line="16" pos:column="51"/></name><argument_list pos:line="16" pos:column="51">(<argument><expr><call><name pos:line="16" pos:column="52">urlCanonical<pos:position pos:line="16" pos:column="64"/></name><argument_list pos:line="16" pos:column="64">(<argument><expr><name pos:line="16" pos:column="65">request<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="75"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">httpHeaderPutStrf<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><operator pos:line="17" pos:column="31">&amp;<pos:position pos:line="17" pos:column="36"/></operator><name><name pos:line="17" pos:column="32">rep<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">header<pos:position pos:line="17" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="45">HDR_LOCATION<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">name<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="65">quoted_url<pos:position pos:line="17" pos:column="75"/></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="20" pos:column="9">httpHeaderPutStrf<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name><name pos:line="20" pos:column="28">rep<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">header<pos:position pos:line="20" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">HDR_X_SQUID_ERROR<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="60">"%d %s"<pos:position pos:line="20" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="69">httpStatus<pos:position pos:line="20" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="81">"Access Denied"<pos:position pos:line="20" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="98"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">MemBuf<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">content<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><call><name pos:line="22" pos:column="27">BuildContent<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">()<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">rep<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">setHeaders<pos:position pos:line="23" pos:column="24"/></name></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name pos:line="23" pos:column="25">httpStatus<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">NULL<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="43">"text/html"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="56">content<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">-&gt;<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="65">contentSize<pos:position pos:line="23" pos:column="76"/></name></name><argument_list pos:line="23" pos:column="76">()<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="80">0<pos:position pos:line="23" pos:column="81"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="83">-<pos:position pos:line="23" pos:column="84"/></operator><literal type="number" pos:line="23" pos:column="84">1<pos:position pos:line="23" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="87"/></expr_stmt>
        <comment type="block" pos:line="24" pos:column="9">/*
         * include some information for downstream caches. Implicit
         * replaceable content. This isn't quite sufficient. xerrno is not
         * necessarily meaningful to another system, so we really should
         * expand it. Additionally, we should identify ourselves. Someone
         * might want to know. Someone _will_ want to know OTOH, the first
         * X-CACHE-MISS entry should tell us who.
         */</comment>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">httpHeaderPutStrf<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><operator pos:line="32" pos:column="27">&amp;<pos:position pos:line="32" pos:column="32"/></operator><name><name pos:line="32" pos:column="28">rep<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">header<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">HDR_X_SQUID_ERROR<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="60">"%s %d"<pos:position pos:line="32" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="69">name<pos:position pos:line="32" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="75">xerrno<pos:position pos:line="32" pos:column="81"/></name></expr></argument>)<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="83"/></expr_stmt>

<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="34" pos:column="20"/></name></expr></cpp:if>
        <comment type="block" pos:line="35" pos:column="9">/*
         * If error page auto-negotiate is enabled in any way, send the Vary.
         * RFC 2616 section 13.6 and 14.44 says MAY and SHOULD do this.
         * We have even better reasons though:
         * see http://wiki.squid-cache.org/KnowledgeBase/VaryNotCaching
         */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name><name pos:line="41" pos:column="14">Config<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">errorDirectory<pos:position pos:line="41" pos:column="35"/></name></name></expr>)<pos:position pos:line="41" pos:column="36"/></condition><then pos:line="41" pos:column="36"> <block pos:line="41" pos:column="37">{
            <comment type="block" pos:line="42" pos:column="13">/* We 'negotiated' this ONLY from the Accept-Language. */</comment>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">rep<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">header<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">.<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">delById<pos:position pos:line="43" pos:column="32"/></name></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">HDR_VARY<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">rep<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">header<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">.<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">putStr<pos:position pos:line="44" pos:column="31"/></name></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">HDR_VARY<pos:position pos:line="44" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="42">"Accept-Language"<pos:position pos:line="44" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="47" pos:column="9">/* add the Content-Language header according to RFC section 14.12 */</comment>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">err_language<pos:position pos:line="48" pos:column="25"/></name></expr>)<pos:position pos:line="48" pos:column="26"/></condition><then pos:line="48" pos:column="26"> <block pos:line="48" pos:column="27">{
            <expr_stmt><expr><call><name><name pos:line="49" pos:column="13">rep<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">header<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">.<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="25">putStr<pos:position pos:line="49" pos:column="31"/></name></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">HDR_CONTENT_LANGUAGE<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">err_language<pos:position pos:line="49" pos:column="66"/></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then> <else pos:line="50" pos:column="11">else
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="51" pos:column="8">/* USE_ERROR_LOCALES */</comment>
        <block pos:line="52" pos:column="9">{
            <comment type="block" pos:line="53" pos:column="13">/* default templates are in English */</comment>
            <comment type="block" pos:line="54" pos:column="13">/* language is known unless error_directory override used */</comment>
            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><operator pos:line="55" pos:column="17">!<pos:position pos:line="55" pos:column="18"/></operator><name><name pos:line="55" pos:column="18">Config<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">.<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">errorDirectory<pos:position pos:line="55" pos:column="39"/></name></name></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="56" pos:column="17">rep<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">header<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">.<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">putStr<pos:position pos:line="56" pos:column="35"/></name></name><argument_list pos:line="56" pos:column="35">(<argument><expr><name pos:line="56" pos:column="36">HDR_CONTENT_LANGUAGE<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="58">"en"<pos:position pos:line="56" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt></block></then></if>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="59" pos:column="9">httpBodySet<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><operator pos:line="59" pos:column="21">&amp;<pos:position pos:line="59" pos:column="26"/></operator><name><name pos:line="59" pos:column="22">rep<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">body<pos:position pos:line="59" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="33">content<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
        <comment type="block" pos:line="60" pos:column="9">/* do not memBufClean() or delete the content, it was absorbed by httpBody */</comment>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>

    <return pos:line="63" pos:column="5">return <expr><name pos:line="63" pos:column="12">rep<pos:position pos:line="63" pos:column="15"/></name></expr>;<pos:position pos:line="63" pos:column="16"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

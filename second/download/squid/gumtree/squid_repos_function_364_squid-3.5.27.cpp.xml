<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_364_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">ldap_set_ssl_defaults<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">main_args<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">margs<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">HAVE_OPENLDAP<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">||<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">HAVE_LDAPSSL_CLIENT_INIT<pos:position pos:line="4" pos:column="46"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_OPENLDAP<pos:position pos:line="7" pos:column="18"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">val<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
<cpp:elif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">elif<pos:position pos:line="9" pos:column="6"/></cpp:directive> <expr><name pos:line="9" pos:column="7">HAVE_LDAPSSL_CLIENT_INIT<pos:position pos:line="9" pos:column="31"/></name></expr></cpp:elif>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">ssl_certdbpath<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">NULL<pos:position pos:line="10" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">HAVE_OPENLDAP<pos:position pos:line="13" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">margs<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">rc_allow<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">ssl_cacertfile<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><name pos:line="15" pos:column="32">NULL<pos:position pos:line="15" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">free_path<pos:position pos:line="16" pos:column="22"/></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debug<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><operator pos:line="17" pos:column="15">(<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">char<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator> <literal type="string" pos:line="17" pos:column="24">"%s| %s: DEBUG: Enable server certificate check for ldap server.\n"<pos:position pos:line="17" pos:column="91"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="93">LogTime<pos:position pos:line="17" pos:column="100"/></name><argument_list pos:line="17" pos:column="100">()<pos:position pos:line="17" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="104">PROGRAM<pos:position pos:line="17" pos:column="111"/></name></expr></argument>)<pos:position pos:line="17" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">val<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">LDAP_OPT_X_TLS_DEMAND<pos:position pos:line="18" pos:column="36"/></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">rc<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">ldap_set_option<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">NULL<pos:position pos:line="19" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="36">LDAP_OPT_X_TLS_REQUIRE_CERT<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="65">&amp;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="66">val<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">rc<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">LDAP_SUCCESS<pos:position pos:line="20" pos:column="31"/></name></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">error<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><operator pos:line="21" pos:column="19">(<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">char<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></operator><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator> <literal type="string" pos:line="21" pos:column="28">"%s| %s: ERROR: Error while setting LDAP_OPT_X_TLS_REQUIRE_CERT DEMAND for ldap server: %s\n"<pos:position pos:line="21" pos:column="121"/></literal></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="123">LogTime<pos:position pos:line="21" pos:column="130"/></name><argument_list pos:line="21" pos:column="130">()<pos:position pos:line="21" pos:column="132"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="134">PROGRAM<pos:position pos:line="21" pos:column="141"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="143">ldap_err2string<pos:position pos:line="21" pos:column="158"/></name><argument_list pos:line="21" pos:column="158">(<argument><expr><name pos:line="21" pos:column="159">rc<pos:position pos:line="21" pos:column="161"/></name></expr></argument>)<pos:position pos:line="21" pos:column="162"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="163"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="164"/></expr_stmt>
            <return pos:line="22" pos:column="13">return <expr><name pos:line="22" pos:column="20">rc<pos:position pos:line="22" pos:column="22"/></name></expr>;<pos:position pos:line="22" pos:column="23"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="24" pos:column="9">ssl_cacertfile<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">getenv<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="string" pos:line="24" pos:column="33">"TLS_CACERTFILE"<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">free_path<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">!<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">ssl_cacertfile<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block pos:line="26" pos:column="30">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">ssl_cacertfile<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">xstrdup<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><literal type="string" pos:line="27" pos:column="38">"/etc/ssl/certs/cert.pem"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">free_path<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debug<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><operator pos:line="30" pos:column="15">(<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">char<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">*<pos:position pos:line="30" pos:column="22"/></operator><operator pos:line="30" pos:column="22">)<pos:position pos:line="30" pos:column="23"/></operator> <literal type="string" pos:line="30" pos:column="24">"%s| %s: DEBUG: Set certificate file for ldap server to %s.(Changeable through setting environment variable TLS_CACERTFILE)\n"<pos:position pos:line="30" pos:column="150"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="152">LogTime<pos:position pos:line="30" pos:column="159"/></name><argument_list pos:line="30" pos:column="159">()<pos:position pos:line="30" pos:column="161"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="163">PROGRAM<pos:position pos:line="30" pos:column="170"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="172">ssl_cacertfile<pos:position pos:line="30" pos:column="186"/></name></expr></argument>)<pos:position pos:line="30" pos:column="187"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="188"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">rc<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">ldap_set_option<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">LDAP_OPT_X_TLS_CACERTFILE<pos:position pos:line="31" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="63">ssl_cacertfile<pos:position pos:line="31" pos:column="77"/></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">ssl_cacertfile<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <name pos:line="32" pos:column="31">free_path<pos:position pos:line="32" pos:column="40"/></name></expr>)<pos:position pos:line="32" pos:column="41"/></condition><then pos:line="32" pos:column="41"> <block pos:line="32" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">xfree<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><name pos:line="33" pos:column="19">ssl_cacertfile<pos:position pos:line="33" pos:column="33"/></name></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">rc<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">LDAP_OPT_SUCCESS<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">error<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><operator pos:line="36" pos:column="19">(<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">char<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><operator pos:line="36" pos:column="26">)<pos:position pos:line="36" pos:column="27"/></operator> <literal type="string" pos:line="36" pos:column="28">"%s| %s: ERROR: Error while setting LDAP_OPT_X_TLS_CACERTFILE for ldap server: %s\n"<pos:position pos:line="36" pos:column="112"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="114">LogTime<pos:position pos:line="36" pos:column="121"/></name><argument_list pos:line="36" pos:column="121">()<pos:position pos:line="36" pos:column="123"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="125">PROGRAM<pos:position pos:line="36" pos:column="132"/></name></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="134">ldap_err2string<pos:position pos:line="36" pos:column="149"/></name><argument_list pos:line="36" pos:column="149">(<argument><expr><name pos:line="36" pos:column="150">rc<pos:position pos:line="36" pos:column="152"/></name></expr></argument>)<pos:position pos:line="36" pos:column="153"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="155"/></expr_stmt>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">rc<pos:position pos:line="37" pos:column="22"/></name></expr>;<pos:position pos:line="37" pos:column="23"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then> <else pos:line="39" pos:column="7">else <block pos:line="39" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debug<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><operator pos:line="40" pos:column="15">(<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">char<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">)<pos:position pos:line="40" pos:column="23"/></operator> <literal type="string" pos:line="40" pos:column="24">"%s| %s: DEBUG: Disable server certificate check for ldap server.\n"<pos:position pos:line="40" pos:column="92"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="94">LogTime<pos:position pos:line="40" pos:column="101"/></name><argument_list pos:line="40" pos:column="101">()<pos:position pos:line="40" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="105">PROGRAM<pos:position pos:line="40" pos:column="112"/></name></expr></argument>)<pos:position pos:line="40" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="114"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">val<pos:position pos:line="41" pos:column="12"/></name> <operator pos:line="41" pos:column="13">=<pos:position pos:line="41" pos:column="14"/></operator> <name pos:line="41" pos:column="15">LDAP_OPT_X_TLS_ALLOW<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">rc<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">ldap_set_option<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">NULL<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">LDAP_OPT_X_TLS_REQUIRE_CERT<pos:position pos:line="42" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="65">&amp;<pos:position pos:line="42" pos:column="70"/></operator><name pos:line="42" pos:column="66">val<pos:position pos:line="42" pos:column="69"/></name></expr></argument>)<pos:position pos:line="42" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="71"/></expr_stmt>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">rc<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">!=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">LDAP_SUCCESS<pos:position pos:line="43" pos:column="31"/></name></expr>)<pos:position pos:line="43" pos:column="32"/></condition><then pos:line="43" pos:column="32"> <block pos:line="43" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">error<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><operator pos:line="44" pos:column="19">(<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">char<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">*<pos:position pos:line="44" pos:column="26"/></operator><operator pos:line="44" pos:column="26">)<pos:position pos:line="44" pos:column="27"/></operator> <literal type="string" pos:line="44" pos:column="28">"%s| %s: ERROR: Error while setting LDAP_OPT_X_TLS_REQUIRE_CERT ALLOW for ldap server: %s\n"<pos:position pos:line="44" pos:column="120"/></literal></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="122">LogTime<pos:position pos:line="44" pos:column="129"/></name><argument_list pos:line="44" pos:column="129">()<pos:position pos:line="44" pos:column="131"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="133">PROGRAM<pos:position pos:line="44" pos:column="140"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="142">ldap_err2string<pos:position pos:line="44" pos:column="157"/></name><argument_list pos:line="44" pos:column="157">(<argument><expr><name pos:line="44" pos:column="158">rc<pos:position pos:line="44" pos:column="160"/></name></expr></argument>)<pos:position pos:line="44" pos:column="161"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="162"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="163"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">rc<pos:position pos:line="45" pos:column="22"/></name></expr>;<pos:position pos:line="45" pos:column="23"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
<cpp:elif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">elif<pos:position pos:line="48" pos:column="6"/></cpp:directive> <expr><name pos:line="48" pos:column="7">HAVE_LDAPSSL_CLIENT_INIT<pos:position pos:line="48" pos:column="31"/></name></expr></cpp:elif>
    <comment type="block" pos:line="49" pos:column="5">/*
     *  Solaris SSL ldap calls require path to certificate database
     */</comment>
    <comment type="block" pos:line="52" pos:column="5">/*
     * rc = ldapssl_client_init( ssl_certdbpath, NULL );
     * rc = ldapssl_advclientauth_init( ssl_certdbpath, NULL , 0 , NULL, NULL, 0, NULL, 2);
     */</comment>
    <expr_stmt><expr><name pos:line="56" pos:column="5">ssl_certdbpath<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <call><name pos:line="56" pos:column="22">getenv<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><literal type="string" pos:line="56" pos:column="29">"SSL_CERTDBPATH"<pos:position pos:line="56" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">ssl_certdbpath<pos:position pos:line="57" pos:column="24"/></name></expr>)<pos:position pos:line="57" pos:column="25"/></condition><then pos:line="57" pos:column="25"> <block pos:line="57" pos:column="26">{
        <expr_stmt><expr><name pos:line="58" pos:column="9">ssl_certdbpath<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <call><name pos:line="58" pos:column="26">xstrdup<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><literal type="string" pos:line="58" pos:column="34">"/etc/certs"<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">debug<pos:position pos:line="60" pos:column="10"/></name><argument_list pos:line="60" pos:column="10">(<argument><expr><operator pos:line="60" pos:column="11">(<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">char<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">*<pos:position pos:line="60" pos:column="18"/></operator><operator pos:line="60" pos:column="18">)<pos:position pos:line="60" pos:column="19"/></operator> <literal type="string" pos:line="60" pos:column="20">"%s| %s: DEBUG: Set certificate database path for ldap server to %s.(Changeable through setting environment variable SSL_CERTDBPATH)\n"<pos:position pos:line="60" pos:column="155"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="157">LogTime<pos:position pos:line="60" pos:column="164"/></name><argument_list pos:line="60" pos:column="164">()<pos:position pos:line="60" pos:column="166"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="60" pos:column="168">PROGRAM<pos:position pos:line="60" pos:column="175"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="177">ssl_certdbpath<pos:position pos:line="60" pos:column="191"/></name></expr></argument>)<pos:position pos:line="60" pos:column="192"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="193"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">!<pos:position pos:line="61" pos:column="10"/></operator><name><name pos:line="61" pos:column="10">margs<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">-&gt;<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="17">rc_allow<pos:position pos:line="61" pos:column="25"/></name></name></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
        <expr_stmt><expr><name pos:line="62" pos:column="9">rc<pos:position pos:line="62" pos:column="11"/></name> <operator pos:line="62" pos:column="12">=<pos:position pos:line="62" pos:column="13"/></operator> <call><name pos:line="62" pos:column="14">ldapssl_advclientauth_init<pos:position pos:line="62" pos:column="40"/></name><argument_list pos:line="62" pos:column="40">(<argument><expr><name pos:line="62" pos:column="41">ssl_certdbpath<pos:position pos:line="62" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="57">NULL<pos:position pos:line="62" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="63">0<pos:position pos:line="62" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="66">NULL<pos:position pos:line="62" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="72">NULL<pos:position pos:line="62" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="78">0<pos:position pos:line="62" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="81">NULL<pos:position pos:line="62" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="87">2<pos:position pos:line="62" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="90"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then> <else pos:line="63" pos:column="7">else <block pos:line="63" pos:column="12">{
        <expr_stmt><expr><name pos:line="64" pos:column="9">rc<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">ldapssl_advclientauth_init<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name pos:line="64" pos:column="41">ssl_certdbpath<pos:position pos:line="64" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="57">NULL<pos:position pos:line="64" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="63">0<pos:position pos:line="64" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="66">NULL<pos:position pos:line="64" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="72">NULL<pos:position pos:line="64" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="78">0<pos:position pos:line="64" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="81">NULL<pos:position pos:line="64" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="87">0<pos:position pos:line="64" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">debug<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><operator pos:line="65" pos:column="15">(<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">char<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">*<pos:position pos:line="65" pos:column="22"/></operator><operator pos:line="65" pos:column="22">)<pos:position pos:line="65" pos:column="23"/></operator> <literal type="string" pos:line="65" pos:column="24">"%s| %s: DEBUG: Disable server certificate check for ldap server.\n"<pos:position pos:line="65" pos:column="92"/></literal></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="94">LogTime<pos:position pos:line="65" pos:column="101"/></name><argument_list pos:line="65" pos:column="101">()<pos:position pos:line="65" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="105">PROGRAM<pos:position pos:line="65" pos:column="112"/></name></expr></argument>)<pos:position pos:line="65" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="114"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">xfree<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><name pos:line="67" pos:column="11">ssl_certdbpath<pos:position pos:line="67" pos:column="25"/></name></expr></argument>)<pos:position pos:line="67" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="27"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">rc<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">!=<pos:position pos:line="68" pos:column="14"/></operator> <name pos:line="68" pos:column="15">LDAP_SUCCESS<pos:position pos:line="68" pos:column="27"/></name></expr>)<pos:position pos:line="68" pos:column="28"/></condition><then pos:line="68" pos:column="28"> <block pos:line="68" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">error<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><operator pos:line="69" pos:column="15">(<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">char<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">*<pos:position pos:line="69" pos:column="22"/></operator><operator pos:line="69" pos:column="22">)<pos:position pos:line="69" pos:column="23"/></operator> <literal type="string" pos:line="69" pos:column="24">"%s| %s: ERROR: Error while setting SSL for ldap server: %s\n"<pos:position pos:line="69" pos:column="86"/></literal></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="88">LogTime<pos:position pos:line="69" pos:column="95"/></name><argument_list pos:line="69" pos:column="95">()<pos:position pos:line="69" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="99">PROGRAM<pos:position pos:line="69" pos:column="106"/></name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="108">ldapssl_err2string<pos:position pos:line="69" pos:column="126"/></name><argument_list pos:line="69" pos:column="126">(<argument><expr><name pos:line="69" pos:column="127">rc<pos:position pos:line="69" pos:column="129"/></name></expr></argument>)<pos:position pos:line="69" pos:column="130"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="132"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">rc<pos:position pos:line="70" pos:column="18"/></name></expr>;<pos:position pos:line="70" pos:column="19"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
<cpp:else pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">else<pos:position pos:line="72" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">error<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><operator pos:line="73" pos:column="11">(<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">char<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></operator><operator pos:line="73" pos:column="18">)<pos:position pos:line="73" pos:column="19"/></operator> <literal type="string" pos:line="73" pos:column="20">"%s| %s: ERROR: SSL not supported by ldap library\n"<pos:position pos:line="73" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="74">LogTime<pos:position pos:line="73" pos:column="81"/></name><argument_list pos:line="73" pos:column="81">()<pos:position pos:line="73" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="73" pos:column="85">PROGRAM<pos:position pos:line="73" pos:column="92"/></name></expr></argument>)<pos:position pos:line="73" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="94"/></expr_stmt>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="75" pos:column="5">return <expr><name pos:line="75" pos:column="12">LDAP_SUCCESS<pos:position pos:line="75" pos:column="24"/></name></expr>;<pos:position pos:line="75" pos:column="25"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

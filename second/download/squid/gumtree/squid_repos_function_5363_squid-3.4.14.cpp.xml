<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5363_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">authenticateDigestNonceSetup<pos:position pos:line="2" pos:column="29"/></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">void<pos:position pos:line="2" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">digest_nonce_pool<pos:position pos:line="4" pos:column="27"/></name></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">digest_nonce_pool<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">=<pos:position pos:line="5" pos:column="28"/></operator> <call><name pos:line="5" pos:column="29">memPoolCreate<pos:position pos:line="5" pos:column="42"/></name><argument_list pos:line="5" pos:column="42">(<argument><expr><literal type="string" pos:line="5" pos:column="43">"Digest Scheme nonce's"<pos:position pos:line="5" pos:column="66"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="68">sizeof<argument_list pos:line="5" pos:column="74">(<argument><expr><name pos:line="5" pos:column="75">digest_nonce_h<pos:position pos:line="5" pos:column="89"/></name></expr></argument>)<pos:position pos:line="5" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="92"/></expr_stmt></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">digest_nonce_cache<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">digest_nonce_cache<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">hash_create<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><operator pos:line="8" pos:column="42">(<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">HASHCMP<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></operator><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator> <name pos:line="8" pos:column="54">strcmp<pos:position pos:line="8" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="62">7921<pos:position pos:line="8" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="68">hash_string<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">digest_nonce_cache<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">eventAdd<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><literal type="string" pos:line="10" pos:column="18">"Digest none cache maintenance"<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">authenticateDigestNonceCacheCleanup<pos:position pos:line="10" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="88">NULL<pos:position pos:line="10" pos:column="92"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="10" pos:column="94">static_cast<argument_list type="generic" pos:line="10" pos:column="105">&lt;<argument><expr><name><name pos:line="10" pos:column="106">Auth<pos:position pos:line="10" pos:column="110"/></name><operator pos:line="10" pos:column="110">::<pos:position pos:line="10" pos:column="112"/></operator><name pos:line="10" pos:column="112">Digest<pos:position pos:line="10" pos:column="118"/></name><operator pos:line="10" pos:column="118">::<pos:position pos:line="10" pos:column="120"/></operator><name pos:line="10" pos:column="120">Config<pos:position pos:line="10" pos:column="126"/></name></name><operator pos:line="10" pos:column="126">*<pos:position pos:line="10" pos:column="127"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="131"/></argument_list><argument_list pos:line="10" pos:column="128">(<argument><expr><call><name><name pos:line="10" pos:column="129">Auth<pos:position pos:line="10" pos:column="133"/></name><operator pos:line="10" pos:column="133">::<pos:position pos:line="10" pos:column="135"/></operator><name pos:line="10" pos:column="135">Config<pos:position pos:line="10" pos:column="141"/></name><operator pos:line="10" pos:column="141">::<pos:position pos:line="10" pos:column="143"/></operator><name pos:line="10" pos:column="143">Find<pos:position pos:line="10" pos:column="147"/></name></name><argument_list pos:line="10" pos:column="147">(<argument><expr><literal type="string" pos:line="10" pos:column="148">"digest"<pos:position pos:line="10" pos:column="156"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="157"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="158"/></argument_list></cast><operator pos:line="10" pos:column="158">-&gt;<pos:position pos:line="10" pos:column="163"/></operator><name pos:line="10" pos:column="160">nonceGCInterval<pos:position pos:line="10" pos:column="175"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="177">1<pos:position pos:line="10" pos:column="178"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="179"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="180"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

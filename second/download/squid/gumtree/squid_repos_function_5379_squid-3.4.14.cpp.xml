<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5379_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Digest<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">Config<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">fixHeader<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name><name pos:line="2" pos:column="33">Auth<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">UserRequest<pos:position pos:line="2" pos:column="50"/></name><operator pos:line="2" pos:column="50">::<pos:position pos:line="2" pos:column="52"/></operator><name pos:line="2" pos:column="52">Pointer<pos:position pos:line="2" pos:column="59"/></name></name></type> <name pos:line="2" pos:column="60">auth_user_request<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">HttpReply<pos:position pos:line="2" pos:column="88"/></name> <modifier pos:line="2" pos:column="89">*<pos:position pos:line="2" pos:column="90"/></modifier></type><name pos:line="2" pos:column="90">rep<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="95">http_hdr_type<pos:position pos:line="2" pos:column="108"/></name></type> <name pos:line="2" pos:column="109">hdrType<pos:position pos:line="2" pos:column="116"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="118">HttpRequest<pos:position pos:line="2" pos:column="129"/></name> <modifier pos:line="2" pos:column="130">*<pos:position pos:line="2" pos:column="131"/></modifier></type> <name pos:line="2" pos:column="132">request<pos:position pos:line="2" pos:column="139"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="140"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">authenticateProgram<pos:position pos:line="4" pos:column="29"/></name></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">stale<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="boolean" pos:line="7" pos:column="18">false<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">digest_nonce_h<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">nonce<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* on a 407 or 401 we always use a new nonce */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">auth_user_request<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">!=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <block pos:line="11" pos:column="36">{
        <decl_stmt><decl><type><name><name pos:line="12" pos:column="9">Auth<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">::<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">Digest<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">::<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">User<pos:position pos:line="12" pos:column="27"/></name></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">digest_user<pos:position pos:line="12" pos:column="40"/></name> <init pos:line="12" pos:column="41">= <expr><cast type="dynamic" pos:line="12" pos:column="43">dynamic_cast<argument_list type="generic" pos:line="12" pos:column="55">&lt;<argument><expr><name><name pos:line="12" pos:column="56">Auth<pos:position pos:line="12" pos:column="60"/></name><operator pos:line="12" pos:column="60">::<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">Digest<pos:position pos:line="12" pos:column="68"/></name><operator pos:line="12" pos:column="68">::<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="70">User<pos:position pos:line="12" pos:column="74"/></name></name> <operator pos:line="12" pos:column="75">*<pos:position pos:line="12" pos:column="76"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="80"/></argument_list><argument_list pos:line="12" pos:column="77">(<argument><expr><call><name><name pos:line="12" pos:column="78">auth_user_request<pos:position pos:line="12" pos:column="95"/></name><operator pos:line="12" pos:column="95">-&gt;<pos:position pos:line="12" pos:column="100"/></operator><name pos:line="12" pos:column="97">user<pos:position pos:line="12" pos:column="101"/></name></name><argument_list pos:line="12" pos:column="101">()<pos:position pos:line="12" pos:column="103"/></argument_list></call><operator pos:line="12" pos:column="103">.<pos:position pos:line="12" pos:column="104"/></operator><call><name pos:line="12" pos:column="104">getRaw<pos:position pos:line="12" pos:column="110"/></name><argument_list pos:line="12" pos:column="110">()<pos:position pos:line="12" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="113"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="12" pos:column="114"/></decl_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">digest_user<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">stale<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name><name pos:line="15" pos:column="21">digest_user<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">credentials<pos:position pos:line="15" pos:column="45"/></name></name><argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call> <operator pos:line="15" pos:column="48">==<pos:position pos:line="15" pos:column="50"/></operator> <name><name pos:line="15" pos:column="51">Auth<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">::<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="57">Handshake<pos:position pos:line="15" pos:column="66"/></name></name></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">stale<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
                <expr_stmt><expr><name pos:line="17" pos:column="17">nonce<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <call><name><name pos:line="17" pos:column="25">digest_user<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">currentNonce<pos:position pos:line="17" pos:column="50"/></name></name><argument_list pos:line="17" pos:column="50">()<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">nonce<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">nonce<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">authenticateDigestNonceNew<pos:position pos:line="22" pos:column="43"/></name><argument_list pos:line="22" pos:column="43">()<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">debugs<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">29<pos:position pos:line="25" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="16">9<pos:position pos:line="25" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="19">HERE<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">&lt;&lt;<pos:position pos:line="25" pos:column="32"/></operator> <literal type="string" pos:line="25" pos:column="27">"Sending type:"<pos:position pos:line="25" pos:column="42"/></literal> <operator pos:line="25" pos:column="43">&lt;&lt;<pos:position pos:line="25" pos:column="51"/></operator> <name pos:line="25" pos:column="46">hdrType<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">&lt;&lt;<pos:position pos:line="25" pos:column="62"/></operator>
           <literal type="string" pos:line="26" pos:column="12">" header: 'Digest realm=\""<pos:position pos:line="26" pos:column="39"/></literal> <operator pos:line="26" pos:column="40">&lt;&lt;<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="43">digestAuthRealm<pos:position pos:line="26" pos:column="58"/></name> <operator pos:line="26" pos:column="59">&lt;&lt;<pos:position pos:line="26" pos:column="67"/></operator> <literal type="string" pos:line="26" pos:column="62">"\", nonce=\""<pos:position pos:line="26" pos:column="76"/></literal> <operator pos:line="26" pos:column="77">&lt;&lt;<pos:position pos:line="26" pos:column="85"/></operator>
           <call><name pos:line="27" pos:column="12">authenticateDigestNonceNonceb64<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">nonce<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call> <operator pos:line="27" pos:column="51">&lt;&lt;<pos:position pos:line="27" pos:column="59"/></operator> <literal type="string" pos:line="27" pos:column="54">"\", qop=\""<pos:position pos:line="27" pos:column="66"/></literal> <operator pos:line="27" pos:column="67">&lt;&lt;<pos:position pos:line="27" pos:column="75"/></operator> <name pos:line="27" pos:column="70">QOP_AUTH<pos:position pos:line="27" pos:column="78"/></name> <operator pos:line="27" pos:column="79">&lt;&lt;<pos:position pos:line="27" pos:column="87"/></operator>
           <literal type="string" pos:line="28" pos:column="12">"\", stale="<pos:position pos:line="28" pos:column="24"/></literal> <operator pos:line="28" pos:column="25">&lt;&lt;<pos:position pos:line="28" pos:column="33"/></operator> <operator pos:line="28" pos:column="28">(<pos:position pos:line="28" pos:column="29"/></operator><ternary><condition><expr><name pos:line="28" pos:column="29">stale<pos:position pos:line="28" pos:column="34"/></name></expr> ?<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <expr><literal type="string" pos:line="28" pos:column="37">"true"<pos:position pos:line="28" pos:column="43"/></literal></expr> <pos:position pos:line="28" pos:column="44"/></then><else pos:line="28" pos:column="44">: <expr><literal type="string" pos:line="28" pos:column="46">"false"<pos:position pos:line="28" pos:column="53"/></literal></expr></else></ternary><operator pos:line="28" pos:column="53">)<pos:position pos:line="28" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* in the future, for WWW auth we may want to support the domain entry */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">httpHeaderPutStrf<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><operator pos:line="31" pos:column="23">&amp;<pos:position pos:line="31" pos:column="28"/></operator><name><name pos:line="31" pos:column="24">rep<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">header<pos:position pos:line="31" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="37">hdrType<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="46">"Digest realm=\"%s\", nonce=\"%s\", qop=\"%s\", stale=%s"<pos:position pos:line="31" pos:column="103"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="105">digestAuthRealm<pos:position pos:line="31" pos:column="120"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="122">authenticateDigestNonceNonceb64<pos:position pos:line="31" pos:column="153"/></name><argument_list pos:line="31" pos:column="153">(<argument><expr><name pos:line="31" pos:column="154">nonce<pos:position pos:line="31" pos:column="159"/></name></expr></argument>)<pos:position pos:line="31" pos:column="160"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="162">QOP_AUTH<pos:position pos:line="31" pos:column="170"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="172">stale<pos:position pos:line="31" pos:column="177"/></name></expr> ?<pos:position pos:line="31" pos:column="179"/></condition><then pos:line="31" pos:column="179"> <expr><literal type="string" pos:line="31" pos:column="180">"true"<pos:position pos:line="31" pos:column="186"/></literal></expr> <pos:position pos:line="31" pos:column="187"/></then><else pos:line="31" pos:column="187">: <expr><literal type="string" pos:line="31" pos:column="189">"false"<pos:position pos:line="31" pos:column="196"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="197"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="198"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

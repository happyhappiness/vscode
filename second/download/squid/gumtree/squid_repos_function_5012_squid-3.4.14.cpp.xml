<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5012_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">maintain<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* We can't delete objects while rebuilding swap */</comment>

    <comment type="block" pos:line="6" pos:column="5">/* XXX FIXME each store should start maintaining as it comes online. */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">StoreController<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">::<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">store_dirs_rebuilding<pos:position pos:line="8" pos:column="47"/></name></name></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">StoreEntry<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">e<pos:position pos:line="11" pos:column="18"/></name> <init pos:line="11" pos:column="19">= <expr><name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">removed<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">RemovalPurgeWalker<pos:position pos:line="15" pos:column="23"/></name> <modifier pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></modifier></type><name pos:line="15" pos:column="25">walker<pos:position pos:line="15" pos:column="31"/></name></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">double<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">f<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><call pos:line="17" pos:column="16">(<name pos:line="17" pos:column="17">double<pos:position pos:line="17" pos:column="23"/></name>) <argument_list pos:line="17" pos:column="25">(<argument><expr><call><name pos:line="17" pos:column="26">currentSize<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">()<pos:position pos:line="17" pos:column="39"/></argument_list></call> <operator pos:line="17" pos:column="40">-<pos:position pos:line="17" pos:column="41"/></operator> <call><name pos:line="17" pos:column="42">minSize<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">()<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call> <operator pos:line="17" pos:column="53">/<pos:position pos:line="17" pos:column="54"/></operator> <operator pos:line="17" pos:column="55">(<pos:position pos:line="17" pos:column="56"/></operator><call><name pos:line="17" pos:column="56">maxSize<pos:position pos:line="17" pos:column="63"/></name><argument_list pos:line="17" pos:column="63">()<pos:position pos:line="17" pos:column="65"/></argument_list></call> <operator pos:line="17" pos:column="66">-<pos:position pos:line="17" pos:column="67"/></operator> <call><name pos:line="17" pos:column="68">minSize<pos:position pos:line="17" pos:column="75"/></name><argument_list pos:line="17" pos:column="75">()<pos:position pos:line="17" pos:column="77"/></argument_list></call><operator pos:line="17" pos:column="77">)<pos:position pos:line="17" pos:column="78"/></operator></expr></init></decl>;<pos:position pos:line="17" pos:column="79"/></decl_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">f<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="9">f<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">&lt;<pos:position pos:line="19" pos:column="15"/></operator> <literal type="number" pos:line="19" pos:column="13">0.0<pos:position pos:line="19" pos:column="16"/></literal></expr> ?<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18"> <expr><literal type="number" pos:line="19" pos:column="19">0.0<pos:position pos:line="19" pos:column="22"/></literal></expr> <pos:position pos:line="19" pos:column="23"/></then><else pos:line="19" pos:column="23">: <expr><ternary><condition><expr><name pos:line="19" pos:column="25">f<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&gt;<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="29">1.0<pos:position pos:line="19" pos:column="32"/></literal></expr> ?<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <expr><literal type="number" pos:line="19" pos:column="35">1.0<pos:position pos:line="19" pos:column="38"/></literal></expr> <pos:position pos:line="19" pos:column="39"/></then><else pos:line="19" pos:column="39">: <expr><name pos:line="19" pos:column="41">f<pos:position pos:line="19" pos:column="42"/></name></expr></else></ternary></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">max_scan<pos:position pos:line="21" pos:column="17"/></name> <init pos:line="21" pos:column="18">= <expr><call pos:line="21" pos:column="20">(<name pos:line="21" pos:column="21">int<pos:position pos:line="21" pos:column="24"/></name>) <argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">f<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">*<pos:position pos:line="21" pos:column="30"/></operator> <literal type="number" pos:line="21" pos:column="31">400.0<pos:position pos:line="21" pos:column="36"/></literal> <operator pos:line="21" pos:column="37">+<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">100.0<pos:position pos:line="21" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">max_remove<pos:position pos:line="23" pos:column="19"/></name> <init pos:line="23" pos:column="20">= <expr><call pos:line="23" pos:column="22">(<name pos:line="23" pos:column="23">int<pos:position pos:line="23" pos:column="26"/></name>) <argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">f<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">*<pos:position pos:line="23" pos:column="32"/></operator> <literal type="number" pos:line="23" pos:column="33">70.0<pos:position pos:line="23" pos:column="37"/></literal> <operator pos:line="23" pos:column="38">+<pos:position pos:line="23" pos:column="39"/></operator> <literal type="number" pos:line="23" pos:column="40">10.0<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>

    <comment type="block" pos:line="25" pos:column="5">/*
     * This is kinda cheap, but so we need this priority hack?
     */</comment>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">47<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="16">3<pos:position pos:line="29" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="19">HERE<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&lt;&lt;<pos:position pos:line="29" pos:column="32"/></operator> <literal type="string" pos:line="29" pos:column="27">"f="<pos:position pos:line="29" pos:column="31"/></literal> <operator pos:line="29" pos:column="32">&lt;&lt;<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="35">f<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">&lt;&lt;<pos:position pos:line="29" pos:column="45"/></operator> <literal type="string" pos:line="29" pos:column="40">", max_scan="<pos:position pos:line="29" pos:column="53"/></literal> <operator pos:line="29" pos:column="54">&lt;&lt;<pos:position pos:line="29" pos:column="62"/></operator> <name pos:line="29" pos:column="57">max_scan<pos:position pos:line="29" pos:column="65"/></name> <operator pos:line="29" pos:column="66">&lt;&lt;<pos:position pos:line="29" pos:column="74"/></operator> <literal type="string" pos:line="29" pos:column="69">", max_remove="<pos:position pos:line="29" pos:column="84"/></literal> <operator pos:line="29" pos:column="85">&lt;&lt;<pos:position pos:line="29" pos:column="93"/></operator> <name pos:line="29" pos:column="88">max_remove<pos:position pos:line="29" pos:column="98"/></name></expr></argument>  )<pos:position pos:line="29" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="102"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">walker<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name><name pos:line="31" pos:column="14">repl<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">PurgeInit<pos:position pos:line="31" pos:column="29"/></name></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">repl<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">max_scan<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>

    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><literal type="number" pos:line="33" pos:column="12">1<pos:position pos:line="33" pos:column="13"/></literal></expr>)<pos:position pos:line="33" pos:column="14"/></condition> <block pos:line="33" pos:column="15">{
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><call><name pos:line="34" pos:column="13">currentSize<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">()<pos:position pos:line="34" pos:column="26"/></argument_list></call> <operator pos:line="34" pos:column="27">&lt;<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="29">minSize<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">()<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="39"/></condition><then pos:line="34" pos:column="39">
            <block type="pseudo"><break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break></block></then></if>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">removed<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">&gt;=<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="24">max_remove<pos:position pos:line="37" pos:column="34"/></name></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35">
            <block type="pseudo"><break pos:line="38" pos:column="13">break;<pos:position pos:line="38" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><name pos:line="40" pos:column="9">e<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <call><name><name pos:line="40" pos:column="13">walker<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">Next<pos:position pos:line="40" pos:column="25"/></name></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">walker<pos:position pos:line="40" pos:column="32"/></name></expr></argument>)<pos:position pos:line="40" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">e<pos:position pos:line="42" pos:column="15"/></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
            <block type="pseudo"><break pos:line="43" pos:column="13">break;<pos:position pos:line="43" pos:column="19"/></break></block></then></if>      <comment type="block" pos:line="43" pos:column="25">/* no more objects */</comment>

        <expr_stmt><expr><operator pos:line="45" pos:column="9">++<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">removed<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="47" pos:column="9">e<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">-&gt;<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="12">release<pos:position pos:line="47" pos:column="19"/></name></name><argument_list pos:line="47" pos:column="19">()<pos:position pos:line="47" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="50" pos:column="5">walker<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">Done<pos:position pos:line="50" pos:column="17"/></name></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">walker<pos:position pos:line="50" pos:column="24"/></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">debugs<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><literal type="number" pos:line="51" pos:column="12">47<pos:position pos:line="51" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="16">(<pos:position pos:line="51" pos:column="17"/></operator><ternary><condition><expr><name pos:line="51" pos:column="17">removed<pos:position pos:line="51" pos:column="24"/></name></expr> ?<pos:position pos:line="51" pos:column="26"/></condition><then pos:line="51" pos:column="26"> <expr><literal type="number" pos:line="51" pos:column="27">2<pos:position pos:line="51" pos:column="28"/></literal></expr> <pos:position pos:line="51" pos:column="29"/></then><else pos:line="51" pos:column="29">: <expr><literal type="number" pos:line="51" pos:column="31">3<pos:position pos:line="51" pos:column="32"/></literal></expr></else></ternary><operator pos:line="51" pos:column="32">)<pos:position pos:line="51" pos:column="33"/></operator></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">HERE<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">&lt;&lt;<pos:position pos:line="51" pos:column="48"/></operator> <name pos:line="51" pos:column="43">path<pos:position pos:line="51" pos:column="47"/></name> <operator pos:line="51" pos:column="48">&lt;&lt;<pos:position pos:line="51" pos:column="56"/></operator>
           <literal type="string" pos:line="52" pos:column="12">" removed "<pos:position pos:line="52" pos:column="23"/></literal> <operator pos:line="52" pos:column="24">&lt;&lt;<pos:position pos:line="52" pos:column="32"/></operator> <name pos:line="52" pos:column="27">removed<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">&lt;&lt;<pos:position pos:line="52" pos:column="43"/></operator> <literal type="string" pos:line="52" pos:column="38">"/"<pos:position pos:line="52" pos:column="41"/></literal> <operator pos:line="52" pos:column="42">&lt;&lt;<pos:position pos:line="52" pos:column="50"/></operator> <name pos:line="52" pos:column="45">max_remove<pos:position pos:line="52" pos:column="55"/></name> <operator pos:line="52" pos:column="56">&lt;&lt;<pos:position pos:line="52" pos:column="64"/></operator> <literal type="string" pos:line="52" pos:column="59">" f="<pos:position pos:line="52" pos:column="64"/></literal> <operator pos:line="52" pos:column="65">&lt;&lt;<pos:position pos:line="52" pos:column="73"/></operator>
           <call><name><name pos:line="53" pos:column="12">std<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">::<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">setprecision<pos:position pos:line="53" pos:column="29"/></name></name><argument_list pos:line="53" pos:column="29">(<argument><expr><literal type="number" pos:line="53" pos:column="30">4<pos:position pos:line="53" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="32"/></argument_list></call> <operator pos:line="53" pos:column="33">&lt;&lt;<pos:position pos:line="53" pos:column="41"/></operator> <name pos:line="53" pos:column="36">f<pos:position pos:line="53" pos:column="37"/></name> <operator pos:line="53" pos:column="38">&lt;&lt;<pos:position pos:line="53" pos:column="46"/></operator> <literal type="string" pos:line="53" pos:column="41">" max_scan="<pos:position pos:line="53" pos:column="53"/></literal> <operator pos:line="53" pos:column="54">&lt;&lt;<pos:position pos:line="53" pos:column="62"/></operator> <name pos:line="53" pos:column="57">max_scan<pos:position pos:line="53" pos:column="65"/></name></expr></argument>)<pos:position pos:line="53" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="67"/></expr_stmt>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_253.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">snmpConnectionOpen<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">addrinfo<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">xaddr<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">x<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">49<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">5<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"snmpConnectionOpen: Called"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">Config<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">Port<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">snmp<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">&gt;<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <block pos:line="9" pos:column="31">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">Config<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">Addrs<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">snmp_incoming<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">.<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">SetPort<pos:position pos:line="10" pos:column="43"/></name></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name><name pos:line="10" pos:column="44">Config<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">.<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">Port<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">.<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">snmp<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">Ip<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">::<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">EnableIpv6<pos:position pos:line="12" pos:column="28"/></name></name> <operator pos:line="12" pos:column="29">&amp;&amp;<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="32">!<pos:position pos:line="12" pos:column="33"/></operator><call><name><name pos:line="12" pos:column="33">Config<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">Addrs<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">snmp_incoming<pos:position pos:line="12" pos:column="59"/></name><operator pos:line="12" pos:column="59">.<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="60">SetIPv4<pos:position pos:line="12" pos:column="67"/></name></name><argument_list pos:line="12" pos:column="67">()<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="70"/></condition><then pos:line="12" pos:column="70"> <block pos:line="12" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">49<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">DBG_CRITICAL<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="38">"ERROR: IPv6 is disabled. "<pos:position pos:line="13" pos:column="65"/></literal> <operator pos:line="13" pos:column="66">&lt;&lt;<pos:position pos:line="13" pos:column="74"/></operator> <name><name pos:line="13" pos:column="69">Config<pos:position pos:line="13" pos:column="75"/></name><operator pos:line="13" pos:column="75">.<pos:position pos:line="13" pos:column="76"/></operator><name pos:line="13" pos:column="76">Addrs<pos:position pos:line="13" pos:column="81"/></name><operator pos:line="13" pos:column="81">.<pos:position pos:line="13" pos:column="82"/></operator><name pos:line="13" pos:column="82">snmp_incoming<pos:position pos:line="13" pos:column="95"/></name></name> <operator pos:line="13" pos:column="96">&lt;&lt;<pos:position pos:line="13" pos:column="104"/></operator> <literal type="string" pos:line="13" pos:column="99">" is not an IPv4 address."<pos:position pos:line="13" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="127"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">fatal<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><literal type="string" pos:line="14" pos:column="19">"SNMP port cannot be opened."<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="17" pos:column="9">/* split-stack for now requires IPv4-only SNMP */</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">Ip<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">::<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">EnableIpv6<pos:position pos:line="18" pos:column="27"/></name></name><operator pos:line="18" pos:column="27">&amp;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="28">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">&amp;&amp;<pos:position pos:line="18" pos:column="62"/></operator> <call><name><name pos:line="18" pos:column="55">Config<pos:position pos:line="18" pos:column="61"/></name><operator pos:line="18" pos:column="61">.<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="62">Addrs<pos:position pos:line="18" pos:column="67"/></name><operator pos:line="18" pos:column="67">.<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="68">snmp_incoming<pos:position pos:line="18" pos:column="81"/></name><operator pos:line="18" pos:column="81">.<pos:position pos:line="18" pos:column="82"/></operator><name pos:line="18" pos:column="82">IsAnyAddr<pos:position pos:line="18" pos:column="91"/></name></name><argument_list pos:line="18" pos:column="91">()<pos:position pos:line="18" pos:column="93"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="94"/></condition><then pos:line="18" pos:column="94"> <block pos:line="18" pos:column="95">{
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">Config<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">Addrs<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">snmp_incoming<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">SetIPv4<pos:position pos:line="19" pos:column="47"/></name></name><argument_list pos:line="19" pos:column="47">()<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">enter_suid<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">()<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">theInSnmpConnection<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">comm_open_listener<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">SOCK_DGRAM<pos:position pos:line="23" pos:column="60"/></name></expr></argument>,
                              <argument><expr><name pos:line="24" pos:column="31">IPPROTO_UDP<pos:position pos:line="24" pos:column="42"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="25" pos:column="31">Config<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">Addrs<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">snmp_incoming<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="26" pos:column="31">COMM_NONBLOCKING<pos:position pos:line="26" pos:column="47"/></name></expr></argument>,
                              <argument><expr><literal type="string" pos:line="27" pos:column="31">"SNMP Port"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">leave_suid<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">()<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">theInSnmpConnection<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">&lt;<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr>)<pos:position pos:line="30" pos:column="37"/></condition><then pos:line="30" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">fatal<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><literal type="string" pos:line="31" pos:column="19">"Cannot open SNMP Port"<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">commSetSelect<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">theInSnmpConnection<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">COMM_SELECT_READ<pos:position pos:line="33" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="62">snmpHandleUdp<pos:position pos:line="33" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="77">NULL<pos:position pos:line="33" pos:column="81"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="83">0<pos:position pos:line="33" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="86"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">1<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="19">1<pos:position pos:line="35" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="22">"Accepting SNMP messages on "<pos:position pos:line="35" pos:column="51"/></literal> <operator pos:line="35" pos:column="52">&lt;&lt;<pos:position pos:line="35" pos:column="60"/></operator> <name><name pos:line="35" pos:column="55">Config<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">.<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="62">Addrs<pos:position pos:line="35" pos:column="67"/></name><operator pos:line="35" pos:column="67">.<pos:position pos:line="35" pos:column="68"/></operator><name pos:line="35" pos:column="68">snmp_incoming<pos:position pos:line="35" pos:column="81"/></name></name> <operator pos:line="35" pos:column="82">&lt;&lt;<pos:position pos:line="35" pos:column="90"/></operator> <literal type="string" pos:line="35" pos:column="85">", FD "<pos:position pos:line="35" pos:column="92"/></literal> <operator pos:line="35" pos:column="93">&lt;&lt;<pos:position pos:line="35" pos:column="101"/></operator> <name pos:line="35" pos:column="96">theInSnmpConnection<pos:position pos:line="35" pos:column="115"/></name> <operator pos:line="35" pos:column="116">&lt;&lt;<pos:position pos:line="35" pos:column="124"/></operator> <literal type="string" pos:line="35" pos:column="119">"."<pos:position pos:line="35" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="124"/></expr_stmt>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">!<pos:position pos:line="37" pos:column="14"/></operator><call><name><name pos:line="37" pos:column="14">Config<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">Addrs<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">.<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">snmp_outgoing<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">.<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">IsNoAddr<pos:position pos:line="37" pos:column="49"/></name></name><argument_list pos:line="37" pos:column="49">()<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52"> <block pos:line="37" pos:column="53">{
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">Config<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">Addrs<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">.<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">snmp_outgoing<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">.<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">SetPort<pos:position pos:line="38" pos:column="47"/></name></name><argument_list pos:line="38" pos:column="47">(<argument><expr><name><name pos:line="38" pos:column="48">Config<pos:position pos:line="38" pos:column="54"/></name><operator pos:line="38" pos:column="54">.<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="55">Port<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">snmp<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>

            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><operator pos:line="40" pos:column="17">!<pos:position pos:line="40" pos:column="18"/></operator><name><name pos:line="40" pos:column="18">Ip<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">::<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">EnableIpv6<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">&amp;&amp;<pos:position pos:line="40" pos:column="43"/></operator> <operator pos:line="40" pos:column="36">!<pos:position pos:line="40" pos:column="37"/></operator><call><name><name pos:line="40" pos:column="37">Config<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">.<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">Addrs<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">.<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="50">snmp_outgoing<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">.<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="64">SetIPv4<pos:position pos:line="40" pos:column="71"/></name></name><argument_list pos:line="40" pos:column="71">()<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="74"/></condition><then pos:line="40" pos:column="74"> <block pos:line="40" pos:column="75">{
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">debugs<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><literal type="number" pos:line="41" pos:column="24">49<pos:position pos:line="41" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="28">DBG_CRITICAL<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="42">"ERROR: IPv6 is disabled. "<pos:position pos:line="41" pos:column="69"/></literal> <operator pos:line="41" pos:column="70">&lt;&lt;<pos:position pos:line="41" pos:column="78"/></operator> <name><name pos:line="41" pos:column="73">Config<pos:position pos:line="41" pos:column="79"/></name><operator pos:line="41" pos:column="79">.<pos:position pos:line="41" pos:column="80"/></operator><name pos:line="41" pos:column="80">Addrs<pos:position pos:line="41" pos:column="85"/></name><operator pos:line="41" pos:column="85">.<pos:position pos:line="41" pos:column="86"/></operator><name pos:line="41" pos:column="86">snmp_outgoing<pos:position pos:line="41" pos:column="99"/></name></name> <operator pos:line="41" pos:column="100">&lt;&lt;<pos:position pos:line="41" pos:column="108"/></operator> <literal type="string" pos:line="41" pos:column="103">" is not an IPv4 address."<pos:position pos:line="41" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="131"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">fatal<pos:position pos:line="42" pos:column="22"/></name><argument_list pos:line="42" pos:column="22">(<argument><expr><literal type="string" pos:line="42" pos:column="23">"SNMP port cannot be opened."<pos:position pos:line="42" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="45" pos:column="13">/* split-stack for now requires IPv4-only SNMP */</comment>
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name><name pos:line="46" pos:column="17">Ip<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">::<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">EnableIpv6<pos:position pos:line="46" pos:column="31"/></name></name><operator pos:line="46" pos:column="31">&amp;<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="32">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="46" pos:column="55"/></name> <operator pos:line="46" pos:column="56">&amp;&amp;<pos:position pos:line="46" pos:column="66"/></operator> <call><name><name pos:line="46" pos:column="59">Config<pos:position pos:line="46" pos:column="65"/></name><operator pos:line="46" pos:column="65">.<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="66">Addrs<pos:position pos:line="46" pos:column="71"/></name><operator pos:line="46" pos:column="71">.<pos:position pos:line="46" pos:column="72"/></operator><name pos:line="46" pos:column="72">snmp_outgoing<pos:position pos:line="46" pos:column="85"/></name><operator pos:line="46" pos:column="85">.<pos:position pos:line="46" pos:column="86"/></operator><name pos:line="46" pos:column="86">IsAnyAddr<pos:position pos:line="46" pos:column="95"/></name></name><argument_list pos:line="46" pos:column="95">()<pos:position pos:line="46" pos:column="97"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="98"/></condition><then pos:line="46" pos:column="98"> <block pos:line="46" pos:column="99">{
                <expr_stmt><expr><call><name><name pos:line="47" pos:column="17">Config<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">Addrs<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">snmp_outgoing<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">.<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">SetIPv4<pos:position pos:line="47" pos:column="51"/></name></name><argument_list pos:line="47" pos:column="51">()<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="50" pos:column="13">enter_suid<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">()<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="51" pos:column="13">theOutSnmpConnection<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">=<pos:position pos:line="51" pos:column="35"/></operator> <call><name pos:line="51" pos:column="36">comm_open_listener<pos:position pos:line="51" pos:column="54"/></name><argument_list pos:line="51" pos:column="54">(<argument><expr><name pos:line="51" pos:column="55">SOCK_DGRAM<pos:position pos:line="51" pos:column="65"/></name></expr></argument>,
                                   <argument><expr><name pos:line="52" pos:column="36">IPPROTO_UDP<pos:position pos:line="52" pos:column="47"/></name></expr></argument>,
                                   <argument><expr><name><name pos:line="53" pos:column="36">Config<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">.<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="43">Addrs<pos:position pos:line="53" pos:column="48"/></name><operator pos:line="53" pos:column="48">.<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">snmp_outgoing<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>,
                                   <argument><expr><name pos:line="54" pos:column="36">COMM_NONBLOCKING<pos:position pos:line="54" pos:column="52"/></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="55" pos:column="36">"SNMP Port"<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">leave_suid<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">()<pos:position pos:line="56" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="26"/></expr_stmt>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">theOutSnmpConnection<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">&lt;<pos:position pos:line="58" pos:column="42"/></operator> <literal type="number" pos:line="58" pos:column="40">0<pos:position pos:line="58" pos:column="41"/></literal></expr>)<pos:position pos:line="58" pos:column="42"/></condition><then pos:line="58" pos:column="42">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="17">fatal<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><literal type="string" pos:line="59" pos:column="23">"Cannot open Outgoing SNMP Port"<pos:position pos:line="59" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="57"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="61" pos:column="13">commSetSelect<pos:position pos:line="61" pos:column="26"/></name><argument_list pos:line="61" pos:column="26">(<argument><expr><name pos:line="61" pos:column="27">theOutSnmpConnection<pos:position pos:line="61" pos:column="47"/></name></expr></argument>,
                          <argument><expr><name pos:line="62" pos:column="27">COMM_SELECT_READ<pos:position pos:line="62" pos:column="43"/></name></expr></argument>,
                          <argument><expr><name pos:line="63" pos:column="27">snmpHandleUdp<pos:position pos:line="63" pos:column="40"/></name></expr></argument>,
                          <argument><expr><name pos:line="64" pos:column="27">NULL<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="33">0<pos:position pos:line="64" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="66" pos:column="13">debugs<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="number" pos:line="66" pos:column="20">1<pos:position pos:line="66" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="23">1<pos:position pos:line="66" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="26">"Outgoing SNMP messages on "<pos:position pos:line="66" pos:column="54"/></literal> <operator pos:line="66" pos:column="55">&lt;&lt;<pos:position pos:line="66" pos:column="63"/></operator> <name><name pos:line="66" pos:column="58">Config<pos:position pos:line="66" pos:column="64"/></name><operator pos:line="66" pos:column="64">.<pos:position pos:line="66" pos:column="65"/></operator><name pos:line="66" pos:column="65">Addrs<pos:position pos:line="66" pos:column="70"/></name><operator pos:line="66" pos:column="70">.<pos:position pos:line="66" pos:column="71"/></operator><name pos:line="66" pos:column="71">snmp_outgoing<pos:position pos:line="66" pos:column="84"/></name></name> <operator pos:line="66" pos:column="85">&lt;&lt;<pos:position pos:line="66" pos:column="93"/></operator> <literal type="string" pos:line="66" pos:column="88">", FD "<pos:position pos:line="66" pos:column="95"/></literal> <operator pos:line="66" pos:column="96">&lt;&lt;<pos:position pos:line="66" pos:column="104"/></operator> <name pos:line="66" pos:column="99">theOutSnmpConnection<pos:position pos:line="66" pos:column="119"/></name> <operator pos:line="66" pos:column="120">&lt;&lt;<pos:position pos:line="66" pos:column="128"/></operator> <literal type="string" pos:line="66" pos:column="123">"."<pos:position pos:line="66" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="128"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="68" pos:column="13">fd_note<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><name pos:line="68" pos:column="21">theOutSnmpConnection<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="43">"Outgoing SNMP socket"<pos:position pos:line="68" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="70" pos:column="13">fd_note<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name pos:line="70" pos:column="21">theInSnmpConnection<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="42">"Incoming SNMP socket"<pos:position pos:line="70" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then> <else pos:line="71" pos:column="11">else <block pos:line="71" pos:column="16">{
            <expr_stmt><expr><name pos:line="72" pos:column="13">theOutSnmpConnection<pos:position pos:line="72" pos:column="33"/></name> <operator pos:line="72" pos:column="34">=<pos:position pos:line="72" pos:column="35"/></operator> <name pos:line="72" pos:column="36">theInSnmpConnection<pos:position pos:line="72" pos:column="55"/></name></expr>;<pos:position pos:line="72" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">theOutSNMPAddr<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">.<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">SetEmpty<pos:position pos:line="75" pos:column="32"/></name></name><argument_list pos:line="75" pos:column="32">()<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="77" pos:column="9">theOutSNMPAddr<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">.<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="24">InitAddrInfo<pos:position pos:line="77" pos:column="36"/></name></name><argument_list pos:line="77" pos:column="36">(<argument><expr><name pos:line="77" pos:column="37">xaddr<pos:position pos:line="77" pos:column="42"/></name></expr></argument>)<pos:position pos:line="77" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt>

        <expr_stmt><expr><name pos:line="79" pos:column="9">x<pos:position pos:line="79" pos:column="10"/></name> <operator pos:line="79" pos:column="11">=<pos:position pos:line="79" pos:column="12"/></operator> <call><name pos:line="79" pos:column="13">getsockname<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><name pos:line="79" pos:column="25">theOutSnmpConnection<pos:position pos:line="79" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="47">xaddr<pos:position pos:line="79" pos:column="52"/></name><operator pos:line="79" pos:column="52">-&gt;<pos:position pos:line="79" pos:column="57"/></operator><name pos:line="79" pos:column="54">ai_addr<pos:position pos:line="79" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="63">&amp;<pos:position pos:line="79" pos:column="68"/></operator><name><name pos:line="79" pos:column="64">xaddr<pos:position pos:line="79" pos:column="69"/></name><operator pos:line="79" pos:column="69">-&gt;<pos:position pos:line="79" pos:column="74"/></operator><name pos:line="79" pos:column="71">ai_addrlen<pos:position pos:line="79" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="83"/></expr_stmt>

        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">x<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">&lt;<pos:position pos:line="81" pos:column="19"/></operator> <literal type="number" pos:line="81" pos:column="17">0<pos:position pos:line="81" pos:column="18"/></literal></expr>)<pos:position pos:line="81" pos:column="19"/></condition><then pos:line="81" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="82" pos:column="13">debugs<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><literal type="number" pos:line="82" pos:column="20">51<pos:position pos:line="82" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="24">1<pos:position pos:line="82" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="27">"theOutSnmpConnection FD "<pos:position pos:line="82" pos:column="53"/></literal> <operator pos:line="82" pos:column="54">&lt;&lt;<pos:position pos:line="82" pos:column="62"/></operator> <name pos:line="82" pos:column="57">theOutSnmpConnection<pos:position pos:line="82" pos:column="77"/></name> <operator pos:line="82" pos:column="78">&lt;&lt;<pos:position pos:line="82" pos:column="86"/></operator> <literal type="string" pos:line="82" pos:column="81">": getsockname: "<pos:position pos:line="82" pos:column="98"/></literal> <operator pos:line="82" pos:column="99">&lt;&lt;<pos:position pos:line="82" pos:column="107"/></operator> <call><name pos:line="82" pos:column="102">xstrerror<pos:position pos:line="82" pos:column="111"/></name><argument_list pos:line="82" pos:column="111">()<pos:position pos:line="82" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="115"/></expr_stmt></block></then>
        <else pos:line="83" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="13">theOutSNMPAddr<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">=<pos:position pos:line="84" pos:column="29"/></operator> <operator pos:line="84" pos:column="30">*<pos:position pos:line="84" pos:column="31"/></operator><name pos:line="84" pos:column="31">xaddr<pos:position pos:line="84" pos:column="36"/></name></expr>;<pos:position pos:line="84" pos:column="37"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="86" pos:column="9">theOutSNMPAddr<pos:position pos:line="86" pos:column="23"/></name><operator pos:line="86" pos:column="23">.<pos:position pos:line="86" pos:column="24"/></operator><name pos:line="86" pos:column="24">FreeAddrInfo<pos:position pos:line="86" pos:column="36"/></name></name><argument_list pos:line="86" pos:column="36">(<argument><expr><name pos:line="86" pos:column="37">xaddr<pos:position pos:line="86" pos:column="42"/></name></expr></argument>)<pos:position pos:line="86" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1187_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">memStringStats<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">std<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">ostream<pos:position pos:line="2" pos:column="28"/></name></name> <modifier pos:line="2" pos:column="29">&amp;<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="30">stream<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">pooled_count<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">pooled_volume<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* heading */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">stream<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&lt;&lt;<pos:position pos:line="8" pos:column="20"/></operator> <literal type="string" pos:line="8" pos:column="15">"String Pool\t Impact\t\t\n \t (%strings)\t (%volume)\n"<pos:position pos:line="8" pos:column="71"/></literal></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* table body */</comment>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">i<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="21">mem_str_pool_count<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></condition> <incr><expr><name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">++<pos:position pos:line="11" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="45"/></control> <block pos:line="11" pos:column="46">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">MemAllocator<pos:position pos:line="12" pos:column="27"/></name> <modifier pos:line="12" pos:column="28">*<pos:position pos:line="12" pos:column="29"/></modifier></type><name pos:line="12" pos:column="29">pool<pos:position pos:line="12" pos:column="33"/></name> <init pos:line="12" pos:column="34">= <expr><name><name pos:line="12" pos:column="36">StrPools<pos:position pos:line="12" pos:column="44"/></name><index pos:line="12" pos:column="44">[<expr><name pos:line="12" pos:column="45">i<pos:position pos:line="12" pos:column="46"/></name></expr>]<pos:position pos:line="12" pos:column="47"/></index></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">pool<pos:position pos:line="12" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="53"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">int<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">plevel<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><call><name><name pos:line="13" pos:column="28">pool<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">getMeter<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name><name pos:line="13" pos:column="45">inuse<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">.<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">level<pos:position pos:line="13" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">stream<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&lt;&lt;<pos:position pos:line="14" pos:column="24"/></operator> <call><name><name pos:line="14" pos:column="19">std<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">::<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">setw<pos:position pos:line="14" pos:column="28"/></name></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="number" pos:line="14" pos:column="29">20<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call> <operator pos:line="14" pos:column="33">&lt;&lt;<pos:position pos:line="14" pos:column="41"/></operator> <name><name pos:line="14" pos:column="36">std<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">::<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">left<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">&lt;&lt;<pos:position pos:line="14" pos:column="54"/></operator> <call><name><name pos:line="14" pos:column="49">pool<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">-&gt;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="55">objectType<pos:position pos:line="14" pos:column="65"/></name></name><argument_list pos:line="14" pos:column="65">()<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">stream<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&lt;&lt;<pos:position pos:line="15" pos:column="24"/></operator> <name><name pos:line="15" pos:column="19">std<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">::<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">right<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">&lt;&lt;<pos:position pos:line="15" pos:column="38"/></operator> <literal type="string" pos:line="15" pos:column="33">"\t "<pos:position pos:line="15" pos:column="38"/></literal> <operator pos:line="15" pos:column="39">&lt;&lt;<pos:position pos:line="15" pos:column="47"/></operator> <call><name pos:line="15" pos:column="42">xpercentInt<pos:position pos:line="15" pos:column="53"/></name><argument_list pos:line="15" pos:column="53">(<argument><expr><name pos:line="15" pos:column="54">plevel<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="62">StrCountMeter<pos:position pos:line="15" pos:column="75"/></name><operator pos:line="15" pos:column="75">.<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="76">level<pos:position pos:line="15" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">stream<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&lt;&lt;<pos:position pos:line="16" pos:column="24"/></operator> <literal type="string" pos:line="16" pos:column="19">"\t "<pos:position pos:line="16" pos:column="24"/></literal> <operator pos:line="16" pos:column="25">&lt;&lt;<pos:position pos:line="16" pos:column="33"/></operator> <call><name pos:line="16" pos:column="28">xpercentInt<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">plevel<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">*<pos:position pos:line="16" pos:column="48"/></operator> <call><name><name pos:line="16" pos:column="49">pool<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">objectSize<pos:position pos:line="16" pos:column="65"/></name></name><argument_list pos:line="16" pos:column="65">()<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="69">StrVolumeMeter<pos:position pos:line="16" pos:column="83"/></name><operator pos:line="16" pos:column="83">.<pos:position pos:line="16" pos:column="84"/></operator><name pos:line="16" pos:column="84">level<pos:position pos:line="16" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="90"/></argument_list></call> <operator pos:line="16" pos:column="91">&lt;&lt;<pos:position pos:line="16" pos:column="99"/></operator> <literal type="string" pos:line="16" pos:column="94">"\n"<pos:position pos:line="16" pos:column="98"/></literal></expr>;<pos:position pos:line="16" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">pooled_count<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">+=<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">plevel<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">pooled_volume<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">+=<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">plevel<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">*<pos:position pos:line="18" pos:column="34"/></operator> <call><name><name pos:line="18" pos:column="35">pool<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">objectSize<pos:position pos:line="18" pos:column="51"/></name></name><argument_list pos:line="18" pos:column="51">()<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <comment type="block" pos:line="21" pos:column="5">/* malloc strings */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">stream<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">&lt;&lt;<pos:position pos:line="22" pos:column="20"/></operator> <call><name><name pos:line="22" pos:column="15">std<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">::<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">setw<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">(<argument><expr><literal type="number" pos:line="22" pos:column="25">20<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call> <operator pos:line="22" pos:column="29">&lt;&lt;<pos:position pos:line="22" pos:column="37"/></operator> <name><name pos:line="22" pos:column="32">std<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">::<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="37">left<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">&lt;&lt;<pos:position pos:line="22" pos:column="50"/></operator> <literal type="string" pos:line="22" pos:column="45">"Other Strings"<pos:position pos:line="22" pos:column="60"/></literal></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">stream<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">&lt;&lt;<pos:position pos:line="24" pos:column="20"/></operator> <name><name pos:line="24" pos:column="15">std<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">::<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">right<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">&lt;&lt;<pos:position pos:line="24" pos:column="34"/></operator> <literal type="string" pos:line="24" pos:column="29">"\t "<pos:position pos:line="24" pos:column="34"/></literal></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">stream<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">&lt;&lt;<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="15">xpercentInt<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">StrCountMeter<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">.<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="41">level<pos:position pos:line="26" pos:column="46"/></name></name> <operator pos:line="26" pos:column="47">-<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">pooled_count<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="63">StrCountMeter<pos:position pos:line="26" pos:column="76"/></name><operator pos:line="26" pos:column="76">.<pos:position pos:line="26" pos:column="77"/></operator><name pos:line="26" pos:column="77">level<pos:position pos:line="26" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></call> <operator pos:line="26" pos:column="84">&lt;&lt;<pos:position pos:line="26" pos:column="92"/></operator> <literal type="string" pos:line="26" pos:column="87">"\t "<pos:position pos:line="26" pos:column="92"/></literal></expr>;<pos:position pos:line="26" pos:column="93"/></expr_stmt>

    <expr_stmt><expr><name pos:line="28" pos:column="5">stream<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">&lt;&lt;<pos:position pos:line="28" pos:column="20"/></operator> <call><name pos:line="28" pos:column="15">xpercentInt<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name><name pos:line="28" pos:column="27">StrVolumeMeter<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">.<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">level<pos:position pos:line="28" pos:column="47"/></name></name> <operator pos:line="28" pos:column="48">-<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="50">pooled_volume<pos:position pos:line="28" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="65">StrVolumeMeter<pos:position pos:line="28" pos:column="79"/></name><operator pos:line="28" pos:column="79">.<pos:position pos:line="28" pos:column="80"/></operator><name pos:line="28" pos:column="80">level<pos:position pos:line="28" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="86"/></argument_list></call> <operator pos:line="28" pos:column="87">&lt;&lt;<pos:position pos:line="28" pos:column="95"/></operator> <literal type="string" pos:line="28" pos:column="90">"\n\n"<pos:position pos:line="28" pos:column="96"/></literal></expr>;<pos:position pos:line="28" pos:column="97"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

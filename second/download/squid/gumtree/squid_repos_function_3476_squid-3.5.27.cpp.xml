<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3476_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">purgeEntriesByUrl<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">HttpRequest<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">req<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">url<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_HTCP<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">bool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">get_or_head_sent<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="boolean" pos:line="5" pos:column="29">false<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name pos:line="8" pos:column="10">HttpRequestMethod<pos:position pos:line="8" pos:column="27"/></name></type> <name pos:line="8" pos:column="28">m<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">Http<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">::<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">METHOD_NONE<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></decl>;<pos:position pos:line="8" pos:column="49"/></init> <condition><expr><name pos:line="8" pos:column="50">m<pos:position pos:line="8" pos:column="51"/></name> <operator pos:line="8" pos:column="52">!=<pos:position pos:line="8" pos:column="54"/></operator> <name><name pos:line="8" pos:column="55">Http<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">::<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="61">METHOD_ENUM_END<pos:position pos:line="8" pos:column="76"/></name></name></expr>;<pos:position pos:line="8" pos:column="77"/></condition> <incr><expr><operator pos:line="8" pos:column="78">++<pos:position pos:line="8" pos:column="80"/></operator><name pos:line="8" pos:column="80">m<pos:position pos:line="8" pos:column="81"/></name></expr></incr>)<pos:position pos:line="8" pos:column="82"/></control> <block pos:line="8" pos:column="83">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name><name pos:line="9" pos:column="13">m<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">respMaybeCacheable<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">()<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block pos:line="9" pos:column="37">{
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<decl><type><name pos:line="10" pos:column="17">StoreEntry<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">entry<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><call><name pos:line="10" pos:column="37">storeGetPublic<pos:position pos:line="10" pos:column="51"/></name><argument_list pos:line="10" pos:column="51">(<argument><expr><name pos:line="10" pos:column="52">url<pos:position pos:line="10" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">m<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr></init></decl>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <block pos:line="10" pos:column="61">{
                <expr_stmt><expr><call><name pos:line="11" pos:column="17">debugs<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="number" pos:line="11" pos:column="24">88<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="28">5<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"purging "<pos:position pos:line="11" pos:column="41"/></literal> <operator pos:line="11" pos:column="42">&lt;&lt;<pos:position pos:line="11" pos:column="50"/></operator> <operator pos:line="11" pos:column="45">*<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">entry<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">&lt;&lt;<pos:position pos:line="11" pos:column="60"/></operator> <literal type="char" pos:line="11" pos:column="55">' '<pos:position pos:line="11" pos:column="58"/></literal> <operator pos:line="11" pos:column="59">&lt;&lt;<pos:position pos:line="11" pos:column="67"/></operator> <name pos:line="11" pos:column="62">m<pos:position pos:line="11" pos:column="63"/></name> <operator pos:line="11" pos:column="64">&lt;&lt;<pos:position pos:line="11" pos:column="72"/></operator> <literal type="char" pos:line="11" pos:column="67">' '<pos:position pos:line="11" pos:column="70"/></literal> <operator pos:line="11" pos:column="71">&lt;&lt;<pos:position pos:line="11" pos:column="79"/></operator> <name pos:line="11" pos:column="74">url<pos:position pos:line="11" pos:column="77"/></name></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="79"/></expr_stmt>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">USE_HTCP<pos:position pos:line="12" pos:column="13"/></name></expr></cpp:if>
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">neighborsHtcpClear<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">entry<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">url<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">req<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">m<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">HTCP_CLR_INVALIDATION<pos:position pos:line="13" pos:column="77"/></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
                <if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">m<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">==<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="26">Http<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">::<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">METHOD_GET<pos:position pos:line="14" pos:column="42"/></name></name> <operator pos:line="14" pos:column="43">||<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">m<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">==<pos:position pos:line="14" pos:column="50"/></operator> <name><name pos:line="14" pos:column="51">Http<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">::<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="57">METHOD_HEAD<pos:position pos:line="14" pos:column="68"/></name></name></expr>)<pos:position pos:line="14" pos:column="69"/></condition><then pos:line="14" pos:column="69"> <block pos:line="14" pos:column="70">{
                    <expr_stmt><expr><name pos:line="15" pos:column="21">get_or_head_sent<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="boolean" pos:line="15" pos:column="40">true<pos:position pos:line="15" pos:column="44"/></literal></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="16" pos:column="18"/></block></then></if>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><call><name><name pos:line="18" pos:column="17">entry<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">release<pos:position pos:line="18" pos:column="31"/></name></name><argument_list pos:line="18" pos:column="31">()<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></for>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">USE_HTCP<pos:position pos:line="23" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">get_or_head_sent<pos:position pos:line="24" pos:column="26"/></name></expr>)<pos:position pos:line="24" pos:column="27"/></condition><then pos:line="24" pos:column="27"> <block pos:line="24" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">neighborsHtcpClear<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">url<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">req<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="44">HttpRequestMethod<pos:position pos:line="25" pos:column="61"/></name><argument_list pos:line="25" pos:column="61">(<argument><expr><name><name pos:line="25" pos:column="62">Http<pos:position pos:line="25" pos:column="66"/></name><operator pos:line="25" pos:column="66">::<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="68">METHOD_GET<pos:position pos:line="25" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="81">HTCP_CLR_INVALIDATION<pos:position pos:line="25" pos:column="102"/></name></expr></argument>)<pos:position pos:line="25" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="104"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

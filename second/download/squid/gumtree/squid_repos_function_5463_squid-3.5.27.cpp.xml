<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5463_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">parseControlReply<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">bytesUsed<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">s<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">sbuf<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">end<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">usable<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">complete<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">wordlist<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">head<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">wordlist<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">list<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">wordlist<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier><modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">tail<pos:position pos:line="11" pos:column="20"/></name> <init pos:line="11" pos:column="21">= <expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">head<pos:position pos:line="11" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">linelen<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">9<pos:position pos:line="13" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="15">3<pos:position pos:line="13" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="18">status<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">()<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="14" pos:column="5">/*
     * We need a NULL-terminated buffer for scanning, ick
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">size_t<pos:position pos:line="17" pos:column="17"/></name></type> <name pos:line="17" pos:column="18">len<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><name><name pos:line="17" pos:column="24">ctrl<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">offset<pos:position pos:line="17" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="17" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">sbuf<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></operator><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator><call><name pos:line="18" pos:column="20">xmalloc<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">len<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">+<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="34">1<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">xstrncpy<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">sbuf<pos:position pos:line="19" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="20">ctrl<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">buf<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="30">len<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">+<pos:position pos:line="19" pos:column="35"/></operator> <literal type="number" pos:line="19" pos:column="36">1<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">end<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name pos:line="20" pos:column="11">sbuf<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">+<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">len<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">-<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">*<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">end<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">!=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="char" pos:line="22" pos:column="20">'\r'<pos:position pos:line="22" pos:column="24"/></literal> <operator pos:line="22" pos:column="25">&amp;&amp;<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="28">*<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">end<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">!=<pos:position pos:line="22" pos:column="35"/></operator> <literal type="char" pos:line="22" pos:column="36">'\n'<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&amp;&amp;<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="44">end<pos:position pos:line="22" pos:column="47"/></name> <operator pos:line="22" pos:column="48">&gt;<pos:position pos:line="22" pos:column="52"/></operator> <name pos:line="22" pos:column="50">sbuf<pos:position pos:line="22" pos:column="54"/></name></expr>)<pos:position pos:line="22" pos:column="55"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="23" pos:column="9">--<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">end<pos:position pos:line="23" pos:column="14"/></name></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt></block></while>

    <expr_stmt><expr><name pos:line="25" pos:column="5">usable<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">end<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">-<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">sbuf<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">debugs<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">9<pos:position pos:line="27" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="15">3<pos:position pos:line="27" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="18">"usable = "<pos:position pos:line="27" pos:column="29"/></literal> <operator pos:line="27" pos:column="30">&lt;&lt;<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="33">usable<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">usable<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">==<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21"> <block pos:line="29" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">9<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="19">3<pos:position pos:line="30" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="22">"didn't find end of line"<pos:position pos:line="30" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">safe_free<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">sbuf<pos:position pos:line="31" pos:column="23"/></name></expr></argument>)<pos:position pos:line="31" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="25"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><literal type="boolean" pos:line="32" pos:column="16">false<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debugs<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="number" pos:line="35" pos:column="12">9<pos:position pos:line="35" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="15">3<pos:position pos:line="35" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="18">len<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">&lt;&lt;<pos:position pos:line="35" pos:column="30"/></operator> <literal type="string" pos:line="35" pos:column="25">" bytes to play with"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="36" pos:column="5">++<pos:position pos:line="36" pos:column="7"/></operator><name pos:line="36" pos:column="7">end<pos:position pos:line="36" pos:column="10"/></name></expr>;<pos:position pos:line="36" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">s<pos:position pos:line="37" pos:column="6"/></name> <operator pos:line="37" pos:column="7">=<pos:position pos:line="37" pos:column="8"/></operator> <name pos:line="37" pos:column="9">sbuf<pos:position pos:line="37" pos:column="13"/></name></expr>;<pos:position pos:line="37" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">s<pos:position pos:line="38" pos:column="6"/></name> <operator pos:line="38" pos:column="7">+=<pos:position pos:line="38" pos:column="9"/></operator> <call><name pos:line="38" pos:column="10">strspn<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">s<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="20">crlf<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>

    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init pos:line="40" pos:column="10">;<pos:position pos:line="40" pos:column="11"/></init> <condition><expr><name pos:line="40" pos:column="12">s<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">&lt;<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="16">end<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></condition> <incr><expr><name pos:line="40" pos:column="21">s<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">+=<pos:position pos:line="40" pos:column="25"/></operator> <call><name pos:line="40" pos:column="26">strcspn<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">s<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">crlf<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr><operator pos:line="40" pos:column="42">,<pos:position pos:line="40" pos:column="43"/></operator> <expr><name pos:line="40" pos:column="44">s<pos:position pos:line="40" pos:column="45"/></name> <operator pos:line="40" pos:column="46">+=<pos:position pos:line="40" pos:column="48"/></operator> <call><name pos:line="40" pos:column="49">strspn<pos:position pos:line="40" pos:column="55"/></name><argument_list pos:line="40" pos:column="55">(<argument><expr><name pos:line="40" pos:column="56">s<pos:position pos:line="40" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="59">crlf<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr></incr>)<pos:position pos:line="40" pos:column="65"/></control> <block pos:line="40" pos:column="66">{
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">complete<pos:position pos:line="41" pos:column="21"/></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22">
            <block type="pseudo"><break pos:line="42" pos:column="13">break;<pos:position pos:line="42" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">9<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="19">5<pos:position pos:line="44" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="22">"s = {"<pos:position pos:line="44" pos:column="29"/></literal> <operator pos:line="44" pos:column="30">&lt;&lt;<pos:position pos:line="44" pos:column="38"/></operator> <name pos:line="44" pos:column="33">s<pos:position pos:line="44" pos:column="34"/></name> <operator pos:line="44" pos:column="35">&lt;&lt;<pos:position pos:line="44" pos:column="43"/></operator> <literal type="string" pos:line="44" pos:column="38">"}"<pos:position pos:line="44" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><name pos:line="46" pos:column="9">linelen<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">=<pos:position pos:line="46" pos:column="18"/></operator> <call><name pos:line="46" pos:column="19">strcspn<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">s<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="30">crlf<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call> <operator pos:line="46" pos:column="36">+<pos:position pos:line="46" pos:column="37"/></operator> <literal type="number" pos:line="46" pos:column="38">1<pos:position pos:line="46" pos:column="39"/></literal></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>

        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">linelen<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">&lt;<pos:position pos:line="48" pos:column="25"/></operator> <literal type="number" pos:line="48" pos:column="23">2<pos:position pos:line="48" pos:column="24"/></literal></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
            <block type="pseudo"><break pos:line="49" pos:column="13">break;<pos:position pos:line="49" pos:column="19"/></break></block></then></if>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">linelen<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">&gt;<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="23">3<pos:position pos:line="51" pos:column="24"/></literal></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="13">complete<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">*<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">s<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">&gt;=<pos:position pos:line="52" pos:column="33"/></operator> <literal type="char" pos:line="52" pos:column="31">'0'<pos:position pos:line="52" pos:column="34"/></literal> <operator pos:line="52" pos:column="35">&amp;&amp;<pos:position pos:line="52" pos:column="45"/></operator> <operator pos:line="52" pos:column="38">*<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="39">s<pos:position pos:line="52" pos:column="40"/></name> <operator pos:line="52" pos:column="41">&lt;=<pos:position pos:line="52" pos:column="46"/></operator> <literal type="char" pos:line="52" pos:column="44">'9'<pos:position pos:line="52" pos:column="47"/></literal> <operator pos:line="52" pos:column="48">&amp;&amp;<pos:position pos:line="52" pos:column="58"/></operator> <operator pos:line="52" pos:column="51">*<pos:position pos:line="52" pos:column="52"/></operator><operator pos:line="52" pos:column="52">(<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="53">s<pos:position pos:line="52" pos:column="54"/></name> <operator pos:line="52" pos:column="55">+<pos:position pos:line="52" pos:column="56"/></operator> <literal type="number" pos:line="52" pos:column="57">3<pos:position pos:line="52" pos:column="58"/></literal><operator pos:line="52" pos:column="58">)<pos:position pos:line="52" pos:column="59"/></operator> <operator pos:line="52" pos:column="60">==<pos:position pos:line="52" pos:column="62"/></operator> <literal type="char" pos:line="52" pos:column="63">' '<pos:position pos:line="52" pos:column="66"/></literal><operator pos:line="52" pos:column="66">)<pos:position pos:line="52" pos:column="67"/></operator></expr>;<pos:position pos:line="52" pos:column="68"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="54" pos:column="9">list<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <operator pos:line="54" pos:column="16">new<pos:position pos:line="54" pos:column="19"/></operator> <call><name pos:line="54" pos:column="20">wordlist<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">()<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="56" pos:column="9">list<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">key<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">char<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">*<pos:position pos:line="56" pos:column="28"/></operator><operator pos:line="56" pos:column="28">)<pos:position pos:line="56" pos:column="29"/></operator><call><name pos:line="56" pos:column="29">xmalloc<pos:position pos:line="56" pos:column="36"/></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">linelen<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="58" pos:column="9">xstrncpy<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name><name pos:line="58" pos:column="18">list<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">-&gt;<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="24">key<pos:position pos:line="58" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="29">s<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">linelen<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>

        <comment type="block" pos:line="60" pos:column="9">/* trace the FTP communication chat at level 2 */</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">debugs<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><literal type="number" pos:line="61" pos:column="16">9<pos:position pos:line="61" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="19">2<pos:position pos:line="61" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="22">"ftp&gt;&gt; "<pos:position pos:line="61" pos:column="36"/></literal> <operator pos:line="61" pos:column="31">&lt;&lt;<pos:position pos:line="61" pos:column="39"/></operator> <name><name pos:line="61" pos:column="34">list<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">key<pos:position pos:line="61" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="45"/></expr_stmt>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">complete<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
            <comment type="line" pos:line="64" pos:column="13">// use list-&gt;key for last_reply because s contains the new line</comment>
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">ctrl<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">.<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">last_reply<pos:position pos:line="65" pos:column="28"/></name></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <call><name pos:line="65" pos:column="31">xstrdup<pos:position pos:line="65" pos:column="38"/></name><argument_list pos:line="65" pos:column="38">(<argument><expr><name><name pos:line="65" pos:column="39">list<pos:position pos:line="65" pos:column="43"/></name><operator pos:line="65" pos:column="43">-&gt;<pos:position pos:line="65" pos:column="48"/></operator><name pos:line="65" pos:column="45">key<pos:position pos:line="65" pos:column="48"/></name></name> <operator pos:line="65" pos:column="49">+<pos:position pos:line="65" pos:column="50"/></operator> <literal type="number" pos:line="65" pos:column="51">4<pos:position pos:line="65" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="66" pos:column="13">ctrl<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">.<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">replycode<pos:position pos:line="66" pos:column="27"/></name></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <call><name pos:line="66" pos:column="30">atoi<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name><name pos:line="66" pos:column="35">list<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">-&gt;<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="41">key<pos:position pos:line="66" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="69" pos:column="9">*<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">tail<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <name pos:line="69" pos:column="17">list<pos:position pos:line="69" pos:column="21"/></name></expr>;<pos:position pos:line="69" pos:column="22"/></expr_stmt>

        <expr_stmt><expr><name pos:line="71" pos:column="9">tail<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <operator pos:line="71" pos:column="16">&amp;<pos:position pos:line="71" pos:column="21"/></operator><name><name pos:line="71" pos:column="17">list<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">-&gt;<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="23">next<pos:position pos:line="71" pos:column="27"/></name></name></expr>;<pos:position pos:line="71" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="74" pos:column="5">bytesUsed<pos:position pos:line="74" pos:column="14"/></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <cast type="static" pos:line="74" pos:column="17">static_cast<argument_list type="generic" pos:line="74" pos:column="28">&lt;<argument><expr><name pos:line="74" pos:column="29">size_t<pos:position pos:line="74" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="74" pos:column="39"/></argument_list><argument_list pos:line="74" pos:column="36">(<argument><expr><name pos:line="74" pos:column="37">s<pos:position pos:line="74" pos:column="38"/></name> <operator pos:line="74" pos:column="39">-<pos:position pos:line="74" pos:column="40"/></operator> <name pos:line="74" pos:column="41">sbuf<pos:position pos:line="74" pos:column="45"/></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></cast></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">safe_free<pos:position pos:line="75" pos:column="14"/></name><argument_list pos:line="75" pos:column="14">(<argument><expr><name pos:line="75" pos:column="15">sbuf<pos:position pos:line="75" pos:column="19"/></name></expr></argument>)<pos:position pos:line="75" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="21"/></expr_stmt>

    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">!<pos:position pos:line="77" pos:column="10"/></operator><name pos:line="77" pos:column="10">complete<pos:position pos:line="77" pos:column="18"/></name></expr>)<pos:position pos:line="77" pos:column="19"/></condition><then pos:line="77" pos:column="19"> <block pos:line="77" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">wordlistDestroy<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><operator pos:line="78" pos:column="25">&amp;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="26">head<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
        <return pos:line="79" pos:column="9">return <expr><literal type="boolean" pos:line="79" pos:column="16">false<pos:position pos:line="79" pos:column="21"/></literal></expr>;<pos:position pos:line="79" pos:column="22"/></return>
    }<pos:position pos:line="80" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="82" pos:column="5">ctrl<pos:position pos:line="82" pos:column="9"/></name><operator pos:line="82" pos:column="9">.<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">message<pos:position pos:line="82" pos:column="17"/></name></name> <operator pos:line="82" pos:column="18">=<pos:position pos:line="82" pos:column="19"/></operator> <name pos:line="82" pos:column="20">head<pos:position pos:line="82" pos:column="24"/></name></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">assert<pos:position pos:line="83" pos:column="11"/></name><argument_list pos:line="83" pos:column="11">(<argument><expr><name><name pos:line="83" pos:column="12">ctrl<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">.<pos:position pos:line="83" pos:column="17"/></operator><name pos:line="83" pos:column="17">replycode<pos:position pos:line="83" pos:column="26"/></name></name> <operator pos:line="83" pos:column="27">&gt;=<pos:position pos:line="83" pos:column="32"/></operator> <literal type="number" pos:line="83" pos:column="30">0<pos:position pos:line="83" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">assert<pos:position pos:line="84" pos:column="11"/></name><argument_list pos:line="84" pos:column="11">(<argument><expr><name><name pos:line="84" pos:column="12">ctrl<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">.<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="17">last_reply<pos:position pos:line="84" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">assert<pos:position pos:line="85" pos:column="11"/></name><argument_list pos:line="85" pos:column="11">(<argument><expr><name><name pos:line="85" pos:column="12">ctrl<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">.<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="17">message<pos:position pos:line="85" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
    <return pos:line="86" pos:column="5">return <expr><literal type="boolean" pos:line="86" pos:column="12">true<pos:position pos:line="86" pos:column="16"/></literal></expr>;<pos:position pos:line="86" pos:column="17"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5164_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">TcpAcceptor<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">setListen<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">errcode<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">=<pos:position pos:line="4" pos:column="14"/></operator> <literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt> <comment type="line" pos:line="4" pos:column="18">// reset local errno copy.</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">listen<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name><name pos:line="5" pos:column="16">conn<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">fd<pos:position pos:line="5" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">Squid_MaxFD<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">&gt;&gt;<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="41">2<pos:position pos:line="5" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call> <operator pos:line="5" pos:column="44">&lt;<pos:position pos:line="5" pos:column="48"/></operator> <literal type="number" pos:line="5" pos:column="46">0<pos:position pos:line="5" pos:column="47"/></literal></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block pos:line="5" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">50<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="20">DBG_CRITICAL<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"ERROR: listen("<pos:position pos:line="6" pos:column="50"/></literal> <operator pos:line="6" pos:column="51">&lt;&lt;<pos:position pos:line="6" pos:column="59"/></operator> <call><name pos:line="6" pos:column="54">status<pos:position pos:line="6" pos:column="60"/></name><argument_list pos:line="6" pos:column="60">()<pos:position pos:line="6" pos:column="62"/></argument_list></call> <operator pos:line="6" pos:column="63">&lt;&lt;<pos:position pos:line="6" pos:column="71"/></operator> <literal type="string" pos:line="6" pos:column="66">", "<pos:position pos:line="6" pos:column="70"/></literal> <operator pos:line="6" pos:column="71">&lt;&lt;<pos:position pos:line="6" pos:column="79"/></operator> <operator pos:line="6" pos:column="74">(<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">Squid_MaxFD<pos:position pos:line="6" pos:column="86"/></name> <operator pos:line="6" pos:column="87">&gt;&gt;<pos:position pos:line="6" pos:column="92"/></operator> <literal type="number" pos:line="6" pos:column="90">2<pos:position pos:line="6" pos:column="91"/></literal><operator pos:line="6" pos:column="91">)<pos:position pos:line="6" pos:column="92"/></operator> <operator pos:line="6" pos:column="93">&lt;&lt;<pos:position pos:line="6" pos:column="101"/></operator> <literal type="string" pos:line="6" pos:column="96">"): "<pos:position pos:line="6" pos:column="101"/></literal> <operator pos:line="6" pos:column="102">&lt;&lt;<pos:position pos:line="6" pos:column="110"/></operator> <call><name pos:line="6" pos:column="105">xstrerror<pos:position pos:line="6" pos:column="114"/></name><argument_list pos:line="6" pos:column="114">()<pos:position pos:line="6" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="118"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">errcode<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">errno<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">Config<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">accept_filter<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <call><name pos:line="11" pos:column="33">strcmp<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name><name pos:line="11" pos:column="40">Config<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">accept_filter<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="62">"none"<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call> <operator pos:line="11" pos:column="70">!=<pos:position pos:line="11" pos:column="72"/></operator> <literal type="number" pos:line="11" pos:column="73">0<pos:position pos:line="11" pos:column="74"/></literal></expr>)<pos:position pos:line="11" pos:column="75"/></condition><then pos:line="11" pos:column="75"> <block pos:line="11" pos:column="76">{
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">SO_ACCEPTFILTER<pos:position pos:line="12" pos:column="23"/></name></cpp:ifdef>
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">accept_filter_arg<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">afa<pos:position pos:line="13" pos:column="37"/></name></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">bzero<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">&amp;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="16">afa<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="21">sizeof<argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">afa<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">5<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">DBG_IMPORTANT<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"Installing accept filter '"<pos:position pos:line="15" pos:column="62"/></literal> <operator pos:line="15" pos:column="63">&lt;&lt;<pos:position pos:line="15" pos:column="71"/></operator> <name><name pos:line="15" pos:column="66">Config<pos:position pos:line="15" pos:column="72"/></name><operator pos:line="15" pos:column="72">.<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="73">accept_filter<pos:position pos:line="15" pos:column="86"/></name></name> <operator pos:line="15" pos:column="87">&lt;&lt;<pos:position pos:line="15" pos:column="95"/></operator> <literal type="string" pos:line="15" pos:column="90">"' on "<pos:position pos:line="15" pos:column="97"/></literal> <operator pos:line="15" pos:column="98">&lt;&lt;<pos:position pos:line="15" pos:column="106"/></operator> <name pos:line="15" pos:column="101">conn<pos:position pos:line="15" pos:column="105"/></name></expr></argument>)<pos:position pos:line="15" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="107"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">xstrncpy<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name><name pos:line="16" pos:column="18">afa<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">af_name<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="31">Config<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">accept_filter<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="53">sizeof<argument_list pos:line="16" pos:column="59">(<argument><expr><name><name pos:line="16" pos:column="60">afa<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">.<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">af_name<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">setsockopt<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">conn<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">fd<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">SOL_SOCKET<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">SO_ACCEPTFILTER<pos:position pos:line="17" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="63">&amp;<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="64">afa<pos:position pos:line="17" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="69">sizeof<argument_list pos:line="17" pos:column="75">(<argument><expr><name pos:line="17" pos:column="76">afa<pos:position pos:line="17" pos:column="79"/></name></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="81"/></argument_list></call> <operator pos:line="17" pos:column="82">&lt;<pos:position pos:line="17" pos:column="86"/></operator> <literal type="number" pos:line="17" pos:column="84">0<pos:position pos:line="17" pos:column="85"/></literal></expr>)<pos:position pos:line="17" pos:column="86"/></condition><then pos:line="17" pos:column="86">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">5<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">DBG_CRITICAL<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="37">"WARNING: SO_ACCEPTFILTER '"<pos:position pos:line="18" pos:column="65"/></literal> <operator pos:line="18" pos:column="66">&lt;&lt;<pos:position pos:line="18" pos:column="74"/></operator> <name><name pos:line="18" pos:column="69">Config<pos:position pos:line="18" pos:column="75"/></name><operator pos:line="18" pos:column="75">.<pos:position pos:line="18" pos:column="76"/></operator><name pos:line="18" pos:column="76">accept_filter<pos:position pos:line="18" pos:column="89"/></name></name> <operator pos:line="18" pos:column="90">&lt;&lt;<pos:position pos:line="18" pos:column="98"/></operator> <literal type="string" pos:line="18" pos:column="93">"': '"<pos:position pos:line="18" pos:column="99"/></literal> <operator pos:line="18" pos:column="100">&lt;&lt;<pos:position pos:line="18" pos:column="108"/></operator> <call><name pos:line="18" pos:column="103">xstrerror<pos:position pos:line="18" pos:column="112"/></name><argument_list pos:line="18" pos:column="112">()<pos:position pos:line="18" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="116"/></expr_stmt></block></then></if>
<cpp:elif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">elif<pos:position pos:line="19" pos:column="6"/></cpp:directive> <expr><call><name pos:line="19" pos:column="7">defined<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">TCP_DEFER_ACCEPT<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr></cpp:elif>
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">seconds<pos:position pos:line="20" pos:column="20"/></name> <init pos:line="20" pos:column="21">= <expr><literal type="number" pos:line="20" pos:column="23">30<pos:position pos:line="20" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="26"/></decl_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">strncmp<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name><name pos:line="21" pos:column="21">Config<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">accept_filter<pos:position pos:line="21" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="43">"data="<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="52">5<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></call> <operator pos:line="21" pos:column="55">==<pos:position pos:line="21" pos:column="57"/></operator> <literal type="number" pos:line="21" pos:column="58">0<pos:position pos:line="21" pos:column="59"/></literal></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="13">seconds<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">atoi<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><name><name pos:line="22" pos:column="28">Config<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">.<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="35">accept_filter<pos:position pos:line="22" pos:column="48"/></name></name> <operator pos:line="22" pos:column="49">+<pos:position pos:line="22" pos:column="50"/></operator> <literal type="number" pos:line="22" pos:column="51">5<pos:position pos:line="22" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt></block></then></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">setsockopt<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">conn<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">fd<pos:position pos:line="23" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">IPPROTO_TCP<pos:position pos:line="23" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="47">TCP_DEFER_ACCEPT<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="65">&amp;<pos:position pos:line="23" pos:column="70"/></operator><name pos:line="23" pos:column="66">seconds<pos:position pos:line="23" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="75">sizeof<argument_list pos:line="23" pos:column="81">(<argument><expr><name pos:line="23" pos:column="82">seconds<pos:position pos:line="23" pos:column="89"/></name></expr></argument>)<pos:position pos:line="23" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="91"/></argument_list></call> <operator pos:line="23" pos:column="92">&lt;<pos:position pos:line="23" pos:column="96"/></operator> <literal type="number" pos:line="23" pos:column="94">0<pos:position pos:line="23" pos:column="95"/></literal></expr>)<pos:position pos:line="23" pos:column="96"/></condition><then pos:line="23" pos:column="96">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="13">debugs<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="number" pos:line="24" pos:column="20">5<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">DBG_CRITICAL<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="37">"WARNING: TCP_DEFER_ACCEPT '"<pos:position pos:line="24" pos:column="66"/></literal> <operator pos:line="24" pos:column="67">&lt;&lt;<pos:position pos:line="24" pos:column="75"/></operator> <name><name pos:line="24" pos:column="70">Config<pos:position pos:line="24" pos:column="76"/></name><operator pos:line="24" pos:column="76">.<pos:position pos:line="24" pos:column="77"/></operator><name pos:line="24" pos:column="77">accept_filter<pos:position pos:line="24" pos:column="90"/></name></name> <operator pos:line="24" pos:column="91">&lt;&lt;<pos:position pos:line="24" pos:column="99"/></operator> <literal type="string" pos:line="24" pos:column="94">"': '"<pos:position pos:line="24" pos:column="100"/></literal> <operator pos:line="24" pos:column="101">&lt;&lt;<pos:position pos:line="24" pos:column="109"/></operator> <call><name pos:line="24" pos:column="104">xstrerror<pos:position pos:line="24" pos:column="113"/></name><argument_list pos:line="24" pos:column="113">()<pos:position pos:line="24" pos:column="115"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="117"/></expr_stmt></block></then></if>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">5<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">DBG_CRITICAL<pos:position pos:line="26" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="33">"WARNING: accept_filter not supported on your OS"<pos:position pos:line="26" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <typedef pos:line="30" pos:column="5">typedef <type><name><name pos:line="30" pos:column="13">CommCbMemFunT<pos:position pos:line="30" pos:column="26"/></name><argument_list type="generic" pos:line="30" pos:column="26">&lt;<argument><expr><name><name pos:line="30" pos:column="27">Comm<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">::<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">TcpAcceptor<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">CommCloseCbParams<pos:position pos:line="30" pos:column="63"/></name></expr></argument>&gt;<pos:position pos:line="30" pos:column="67"/></argument_list></name></type> <name pos:line="30" pos:column="65">Dialer<pos:position pos:line="30" pos:column="71"/></name>;<pos:position pos:line="30" pos:column="72"/></typedef>
    <expr_stmt><expr><name pos:line="31" pos:column="5">closer_<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">JobCallback<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><literal type="number" pos:line="31" pos:column="27">5<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="30">4<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">Dialer<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">this<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="47">Comm<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">::<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="53">TcpAcceptor<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">::<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="66">handleClosure<pos:position pos:line="31" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">comm_add_close_handler<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">conn<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">fd<pos:position pos:line="32" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="38">closer_<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="47"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3692_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">detach<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">()<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="15">3<pos:position pos:line="3" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="18">HERE<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&lt;&lt;<pos:position pos:line="3" pos:column="31"/></operator> <literal type="string" pos:line="3" pos:column="26">"detaching ICAP service: "<pos:position pos:line="3" pos:column="52"/></literal> <operator pos:line="3" pos:column="53">&lt;&lt;<pos:position pos:line="3" pos:column="61"/></operator> <call><name pos:line="3" pos:column="56">cfg<pos:position pos:line="3" pos:column="59"/></name><argument_list pos:line="3" pos:column="59">()<pos:position pos:line="3" pos:column="61"/></argument_list></call><operator pos:line="3" pos:column="61">.<pos:position pos:line="3" pos:column="62"/></operator><name pos:line="3" pos:column="62">uri<pos:position pos:line="3" pos:column="65"/></name> <operator pos:line="3" pos:column="66">&lt;&lt;<pos:position pos:line="3" pos:column="74"/></operator>
           <literal type="char" pos:line="4" pos:column="12">' '<pos:position pos:line="4" pos:column="15"/></literal> <operator pos:line="4" pos:column="16">&lt;&lt;<pos:position pos:line="4" pos:column="24"/></operator> <call><name pos:line="4" pos:column="19">status<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">isDetached<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="boolean" pos:line="5" pos:column="18">true<pos:position pos:line="5" pos:column="22"/></literal></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4247_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLFilledChecklist<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">syncAle<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// make sure the ALE fields used by Format::assemble to</comment>
    <comment type="line" pos:line="5" pos:column="5">// fill the old external_acl_type codes are set if any</comment>
    <comment type="line" pos:line="6" pos:column="5">// data on them exists in the Checklist</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">al<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">cache<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">port<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&amp;&amp;<pos:position pos:line="8" pos:column="35"/></operator> <call><name pos:line="8" pos:column="28">conn<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">()<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35"> <block pos:line="8" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">showDebugWarning<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"listening port"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">al<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">cache<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">port<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <call><name pos:line="10" pos:column="26">conn<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">()<pos:position pos:line="10" pos:column="32"/></argument_list></call><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">port<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">request<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block pos:line="13" pos:column="18">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name><name pos:line="14" pos:column="14">al<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">request<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26"> <block pos:line="14" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">showDebugWarning<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="string" pos:line="15" pos:column="30">"HttpRequest object"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">al<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">request<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">request<pos:position pos:line="16" pos:column="34"/></name></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">HTTPMSGLOCK<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">al<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">request<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">al<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">adapted_request<pos:position pos:line="20" pos:column="33"/></name></name></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34"> <block pos:line="20" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">showDebugWarning<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><literal type="string" pos:line="21" pos:column="30">"adapted HttpRequest object"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">al<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">adapted_request<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">request<pos:position pos:line="22" pos:column="42"/></name></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">HTTPMSGLOCK<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><name><name pos:line="23" pos:column="25">al<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">adapted_request<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name><name pos:line="26" pos:column="13">al<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">url<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">isEmpty<pos:position pos:line="26" pos:column="28"/></name></name><argument_list pos:line="26" pos:column="28">()<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31"> <block pos:line="26" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">showDebugWarning<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><literal type="string" pos:line="27" pos:column="30">"URL"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">al<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">url<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <call><name><name pos:line="28" pos:column="23">request<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">url<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">.<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="36">absolute<pos:position pos:line="28" pos:column="44"/></name></name><argument_list pos:line="28" pos:column="44">()<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">reply<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">&amp;&amp;<pos:position pos:line="32" pos:column="25"/></operator> <operator pos:line="32" pos:column="18">!<pos:position pos:line="32" pos:column="19"/></operator><name><name pos:line="32" pos:column="19">al<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">reply<pos:position pos:line="32" pos:column="28"/></name></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29"> <block pos:line="32" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">showDebugWarning<pos:position pos:line="33" pos:column="25"/></name><argument_list pos:line="33" pos:column="25">(<argument><expr><literal type="string" pos:line="33" pos:column="26">"HttpReply object"<pos:position pos:line="33" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">al<pos:position pos:line="34" pos:column="11"/></name><operator pos:line="34" pos:column="11">-&gt;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="13">reply<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">reply<pos:position pos:line="34" pos:column="26"/></name></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">HTTPMSGLOCK<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">al<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">reply<pos:position pos:line="35" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

<cpp:if pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">if<pos:position pos:line="38" pos:column="4"/></cpp:directive> <expr><name pos:line="38" pos:column="5">USE_IDENT<pos:position pos:line="38" pos:column="14"/></name></expr></cpp:if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">*<pos:position pos:line="39" pos:column="10"/></operator><name pos:line="39" pos:column="10">rfc931<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&amp;&amp;<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="20">!<pos:position pos:line="39" pos:column="21"/></operator><name><name pos:line="39" pos:column="21">al<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">cache<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">.<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">rfc931<pos:position pos:line="39" pos:column="37"/></name></name></expr>)<pos:position pos:line="39" pos:column="38"/></condition><then pos:line="39" pos:column="38"> <block pos:line="39" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">showDebugWarning<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><literal type="string" pos:line="40" pos:column="26">"IDENT"<pos:position pos:line="40" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">al<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">cache<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">rfc931<pos:position pos:line="41" pos:column="25"/></name></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <call><name pos:line="41" pos:column="28">xstrdup<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">rfc931<pos:position pos:line="41" pos:column="42"/></name></expr></argument>)<pos:position pos:line="41" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

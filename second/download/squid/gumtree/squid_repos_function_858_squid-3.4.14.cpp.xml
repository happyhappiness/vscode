<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_858_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">whoisTimeout<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">CommTimeoutCbParams<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">io<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">WhoisState<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><cast type="static" pos:line="4" pos:column="21">static_cast<argument_list type="generic" pos:line="4" pos:column="32">&lt;<argument><expr><name pos:line="4" pos:column="33">WhoisState<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="49"/></argument_list><argument_list pos:line="4" pos:column="46">(<argument><expr><name><name pos:line="4" pos:column="47">io<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">.<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="50">data<pos:position pos:line="4" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">75<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <name><name pos:line="5" pos:column="27">io<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name></name> <operator pos:line="5" pos:column="35">&lt;&lt;<pos:position pos:line="5" pos:column="43"/></operator> <literal type="string" pos:line="5" pos:column="38">", URL "<pos:position pos:line="5" pos:column="46"/></literal> <operator pos:line="5" pos:column="47">&lt;&lt;<pos:position pos:line="5" pos:column="55"/></operator> <call><name><name pos:line="5" pos:column="50">p<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">-&gt;<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="53">entry<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">url<pos:position pos:line="5" pos:column="63"/></name></name><argument_list pos:line="5" pos:column="63">()<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">io<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">.<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">conn<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">close<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">()<pos:position pos:line="6" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

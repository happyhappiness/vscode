<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2032_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">file_write_mbuf<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">fd<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">off_t<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">off<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">MemBuf<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">mb<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">DWCB<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">handler<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">void<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">handler_data<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">file_write<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">fd<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="20">off<pos:position pos:line="4" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="25">mb<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">.<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">buf<pos:position pos:line="4" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="33">mb<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">.<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">size<pos:position pos:line="4" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="42">handler<pos:position pos:line="4" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="51">handler_data<pos:position pos:line="4" pos:column="63"/></name></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="65">mb<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">.<pos:position pos:line="4" pos:column="68"/></operator><name pos:line="4" pos:column="68">freeFunc<pos:position pos:line="4" pos:column="76"/></name></name><argument_list pos:line="4" pos:column="76">()<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="80"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7472_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<cpp:endif pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">endif<pos:position pos:line="2" pos:column="7"/></cpp:directive></cpp:endif>
<type><name><name pos:line="3" pos:column="1">struct<pos:position pos:line="3" pos:column="7"/></name> <name pos:line="3" pos:column="8">snmp_mib_tree<pos:position pos:line="3" pos:column="21"/></name></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type>
<name pos:line="4" pos:column="1">build_tree<pos:position pos:line="4" pos:column="11"/></name><parameter_list pos:line="4" pos:column="11">(<parameter><decl><type><name><name pos:line="4" pos:column="12">struct<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">node<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">nodes<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="31"/></parameter_list> <block pos:line="4" pos:column="32">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">node<pos:position pos:line="5" pos:column="16"/></name></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">np<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">snmp_mib_tree<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">tp<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">bucket<pos:position pos:line="7" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="17">nodes_left<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* build root node */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">tp<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator>struct <name pos:line="10" pos:column="18">snmp_mib_tree<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator> <call><name pos:line="10" pos:column="35">xmalloc<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><sizeof pos:line="10" pos:column="43">sizeof<argument_list pos:line="10" pos:column="49">(<argument><expr pos:line="10" pos:column="50">struct <name pos:line="10" pos:column="57">snmp_mib_tree<pos:position pos:line="10" pos:column="70"/></name></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">tp<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">parent<pos:position pos:line="11" pos:column="15"/></name></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">tp<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">next_peer<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">tp<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">child_list<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">tp<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">enums<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">NULL<pos:position pos:line="14" pos:column="21"/></name></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">strcpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name><name pos:line="15" pos:column="12">tp<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">label<pos:position pos:line="15" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"iso"<pos:position pos:line="15" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">tp<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">subid<pos:position pos:line="16" pos:column="14"/></name></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">1<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">tp<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">type<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">build_translation_table<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">()<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* grow tree from this root node */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">init_node_hash<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">nodes<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="21" pos:column="5">/* XXX nodes isn't needed in do_subtree() ??? */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">do_subtree<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">tp<pos:position pos:line="22" pos:column="18"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="21">nodes<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">TEST<pos:position pos:line="23" pos:column="9"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">print_subtree<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">tp<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="23">0<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="25" pos:column="8">/* TEST */</comment>
    <comment type="block" pos:line="26" pos:column="5">/* If any nodes are left, the tree is probably inconsistent */</comment>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">bucket<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></init> <condition><expr><name pos:line="27" pos:column="22">bucket<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&lt;<pos:position pos:line="27" pos:column="33"/></operator> <name pos:line="27" pos:column="31">NHASHSIZE<pos:position pos:line="27" pos:column="40"/></name></expr>;<pos:position pos:line="27" pos:column="41"/></condition> <incr><expr><name pos:line="27" pos:column="42">bucket<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">++<pos:position pos:line="27" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="51"/></control> <block pos:line="27" pos:column="52">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">nbuckets<pos:position pos:line="28" pos:column="21"/></name><index pos:line="28" pos:column="21">[<expr><name pos:line="28" pos:column="22">bucket<pos:position pos:line="28" pos:column="28"/></name></expr>]<pos:position pos:line="28" pos:column="29"/></index></name></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">nodes_left<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></for>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">nodes_left<pos:position pos:line="33" pos:column="19"/></name></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20"> <block pos:line="33" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">snmplib_debug<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="26">"The mib description doesn't seem to be consistent.\n"<pos:position pos:line="34" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">snmplib_debug<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><literal type="number" pos:line="35" pos:column="23">0<pos:position pos:line="35" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="26">"Some nodes couldn't be linked under the \"iso\" tree.\n"<pos:position pos:line="35" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">snmplib_debug<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="26">"these nodes are left:\n"<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="53"/></expr_stmt>
        <for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><name pos:line="37" pos:column="14">bucket<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr>;<pos:position pos:line="37" pos:column="25"/></init> <condition><expr><name pos:line="37" pos:column="26">bucket<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">&lt;<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="35">NHASHSIZE<pos:position pos:line="37" pos:column="44"/></name></expr>;<pos:position pos:line="37" pos:column="45"/></condition> <incr><expr><name pos:line="37" pos:column="46">bucket<pos:position pos:line="37" pos:column="52"/></name><operator pos:line="37" pos:column="52">++<pos:position pos:line="37" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="55"/></control> <block pos:line="37" pos:column="56">{
            <for pos:line="38" pos:column="13">for <control pos:line="38" pos:column="17">(<init><expr><name pos:line="38" pos:column="18">np<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name><name pos:line="38" pos:column="23">nbuckets<pos:position pos:line="38" pos:column="31"/></name><index pos:line="38" pos:column="31">[<expr><name pos:line="38" pos:column="32">bucket<pos:position pos:line="38" pos:column="38"/></name></expr>]<pos:position pos:line="38" pos:column="39"/></index></name></expr>;<pos:position pos:line="38" pos:column="40"/></init> <condition><expr><name pos:line="38" pos:column="41">np<pos:position pos:line="38" pos:column="43"/></name></expr>;<pos:position pos:line="38" pos:column="44"/></condition> <incr><expr><name pos:line="38" pos:column="45">np<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">=<pos:position pos:line="38" pos:column="49"/></operator> <name><name pos:line="38" pos:column="50">np<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">next<pos:position pos:line="38" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="38" pos:column="59"/></control>
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">snmplib_debug<pos:position pos:line="39" pos:column="30"/></name><argument_list pos:line="39" pos:column="30">(<argument><expr><literal type="number" pos:line="39" pos:column="31">5<pos:position pos:line="39" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="34">"%s ::= { %s %d } (%d)\n"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="61">np<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">-&gt;<pos:position pos:line="39" pos:column="68"/></operator><name pos:line="39" pos:column="65">label<pos:position pos:line="39" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="72">np<pos:position pos:line="39" pos:column="74"/></name><operator pos:line="39" pos:column="74">-&gt;<pos:position pos:line="39" pos:column="79"/></operator><name pos:line="39" pos:column="76">parent<pos:position pos:line="39" pos:column="82"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="84">np<pos:position pos:line="39" pos:column="86"/></name><operator pos:line="39" pos:column="86">-&gt;<pos:position pos:line="39" pos:column="91"/></operator><name pos:line="39" pos:column="88">subid<pos:position pos:line="39" pos:column="93"/></name></name></expr></argument>,
                              <argument><expr><name><name pos:line="40" pos:column="31">np<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">type<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></for>
        }<pos:position pos:line="41" pos:column="10"/></block></for>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
    <return pos:line="43" pos:column="5">return <expr><name pos:line="43" pos:column="12">tp<pos:position pos:line="43" pos:column="14"/></name></expr>;<pos:position pos:line="43" pos:column="15"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1521_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerHasConnAvailable<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">CachePeer<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">p<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Standby connections can be used without opening new connections.</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">standbys<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><ternary><condition><expr><name><name pos:line="5" pos:column="26">p<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">-&gt;<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="29">standby<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">.<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">pool<pos:position pos:line="5" pos:column="41"/></name></name></expr> ?<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <expr><call><name><name pos:line="5" pos:column="44">p<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">standby<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">.<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="55">pool<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">-&gt;<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="61">count<pos:position pos:line="5" pos:column="66"/></name></name><argument_list pos:line="5" pos:column="66">()<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="69"/></then><else pos:line="5" pos:column="69">: <expr><literal type="number" pos:line="5" pos:column="71">0<pos:position pos:line="5" pos:column="72"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="73"/></decl_stmt>

    <comment type="line" pos:line="7" pos:column="5">// XXX: Some idle pconns can be used without opening new connections.</comment>
    <comment type="line" pos:line="8" pos:column="5">// Complication: Idle pconns cannot be reused for some requests.</comment>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">int<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">usableIdles<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">available<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name pos:line="11" pos:column="27">standbys<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">+<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">usableIdles<pos:position pos:line="11" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">15<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">7<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">available<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&lt;&lt;<pos:position pos:line="12" pos:column="37"/></operator> <literal type="char" pos:line="12" pos:column="32">'='<pos:position pos:line="12" pos:column="35"/></literal> <operator pos:line="12" pos:column="36">&lt;&lt;<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="39">standbys<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">&lt;&lt;<pos:position pos:line="12" pos:column="56"/></operator> <literal type="char" pos:line="12" pos:column="51">'+'<pos:position pos:line="12" pos:column="54"/></literal> <operator pos:line="12" pos:column="55">&lt;&lt;<pos:position pos:line="12" pos:column="63"/></operator> <name pos:line="12" pos:column="58">usableIdles<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="71"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">available<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&gt;<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

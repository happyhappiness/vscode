<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5502_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">syslog_ntoa<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">s<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">syslog_symbol<pos:position pos:line="4" pos:column="22"/></name><parameter_list pos:line="4" pos:column="22">(<parameter><type><name pos:line="4" pos:column="23">a<pos:position pos:line="4" pos:column="24"/></name></type></parameter>)<pos:position pos:line="4" pos:column="25"/></parameter_list></cpp:macro> <cpp:value pos:line="4" pos:column="26">#a, a<pos:position pos:line="4" pos:column="31"/></cpp:value></cpp:define>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">syslog_symbol_t<pos:position pos:line="5" pos:column="27"/></name></type> <name><name pos:line="5" pos:column="28">symbols<pos:position pos:line="5" pos:column="35"/></name><index pos:line="5" pos:column="35">[]<pos:position pos:line="5" pos:column="37"/></index></name> <init pos:line="5" pos:column="38">= <expr><block pos:line="5" pos:column="40">{
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">LOG_AUTHPRIV<pos:position pos:line="6" pos:column="20"/></name></cpp:ifdef>
        <expr><block pos:line="7" pos:column="9">{<macro><name pos:line="7" pos:column="10">syslog_symbol<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument pos:line="7" pos:column="24">LOG_AUTHPRIV<pos:position pos:line="7" pos:column="36"/></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></macro>}<pos:position pos:line="7" pos:column="38"/></block></expr>,
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">LOG_DAEMON<pos:position pos:line="9" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="10" pos:column="9">{<macro><name pos:line="10" pos:column="10">syslog_symbol<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument pos:line="10" pos:column="24">LOG_DAEMON<pos:position pos:line="10" pos:column="34"/></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></macro>}<pos:position pos:line="10" pos:column="36"/></block></expr>,
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">LOG_LOCAL0<pos:position pos:line="12" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="13" pos:column="9">{<macro><name pos:line="13" pos:column="10">syslog_symbol<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument pos:line="13" pos:column="24">LOG_LOCAL0<pos:position pos:line="13" pos:column="34"/></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></macro>}<pos:position pos:line="13" pos:column="36"/></block></expr>,
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">LOG_LOCAL1<pos:position pos:line="15" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="16" pos:column="9">{<macro><name pos:line="16" pos:column="10">syslog_symbol<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument pos:line="16" pos:column="24">LOG_LOCAL1<pos:position pos:line="16" pos:column="34"/></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></macro>}<pos:position pos:line="16" pos:column="36"/></block></expr>,
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">LOG_LOCAL2<pos:position pos:line="18" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="19" pos:column="9">{<macro><name pos:line="19" pos:column="10">syslog_symbol<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument pos:line="19" pos:column="24">LOG_LOCAL2<pos:position pos:line="19" pos:column="34"/></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></macro>}<pos:position pos:line="19" pos:column="36"/></block></expr>,
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifdef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">LOG_LOCAL3<pos:position pos:line="21" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="22" pos:column="9">{<macro><name pos:line="22" pos:column="10">syslog_symbol<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument pos:line="22" pos:column="24">LOG_LOCAL3<pos:position pos:line="22" pos:column="34"/></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></macro>}<pos:position pos:line="22" pos:column="36"/></block></expr>,
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">ifdef<pos:position pos:line="24" pos:column="7"/></cpp:directive> <name pos:line="24" pos:column="8">LOG_LOCAL4<pos:position pos:line="24" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="25" pos:column="9">{<macro><name pos:line="25" pos:column="10">syslog_symbol<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument pos:line="25" pos:column="24">LOG_LOCAL4<pos:position pos:line="25" pos:column="34"/></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></macro>}<pos:position pos:line="25" pos:column="36"/></block></expr>,
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">LOG_LOCAL5<pos:position pos:line="27" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="28" pos:column="9">{<macro><name pos:line="28" pos:column="10">syslog_symbol<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument pos:line="28" pos:column="24">LOG_LOCAL5<pos:position pos:line="28" pos:column="34"/></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></macro>}<pos:position pos:line="28" pos:column="36"/></block></expr>,
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef<pos:position pos:line="30" pos:column="7"/></cpp:directive> <name pos:line="30" pos:column="8">LOG_LOCAL6<pos:position pos:line="30" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="31" pos:column="9">{<macro><name pos:line="31" pos:column="10">syslog_symbol<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument pos:line="31" pos:column="24">LOG_LOCAL6<pos:position pos:line="31" pos:column="34"/></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></macro>}<pos:position pos:line="31" pos:column="36"/></block></expr>,
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifdef<pos:position pos:line="33" pos:column="7"/></cpp:directive> <name pos:line="33" pos:column="8">LOG_LOCAL7<pos:position pos:line="33" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="34" pos:column="9">{<macro><name pos:line="34" pos:column="10">syslog_symbol<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument pos:line="34" pos:column="24">LOG_LOCAL7<pos:position pos:line="34" pos:column="34"/></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></macro>}<pos:position pos:line="34" pos:column="36"/></block></expr>,
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">LOG_USER<pos:position pos:line="36" pos:column="16"/></name></cpp:ifdef>
        <expr><block pos:line="37" pos:column="9">{<macro><name pos:line="37" pos:column="10">syslog_symbol<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument pos:line="37" pos:column="24">LOG_USER<pos:position pos:line="37" pos:column="32"/></argument>)<pos:position pos:line="37" pos:column="33"/></argument_list></macro>}<pos:position pos:line="37" pos:column="34"/></block></expr>,
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">ifdef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">LOG_ERR<pos:position pos:line="39" pos:column="15"/></name></cpp:ifdef>
        <expr><block pos:line="40" pos:column="9">{<macro><name pos:line="40" pos:column="10">syslog_symbol<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument pos:line="40" pos:column="24">LOG_ERR<pos:position pos:line="40" pos:column="31"/></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></macro>}<pos:position pos:line="40" pos:column="33"/></block></expr>,
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">LOG_WARNING<pos:position pos:line="42" pos:column="19"/></name></cpp:ifdef>
        <expr><block pos:line="43" pos:column="9">{<macro><name pos:line="43" pos:column="10">syslog_symbol<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument pos:line="43" pos:column="24">LOG_WARNING<pos:position pos:line="43" pos:column="35"/></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></macro>}<pos:position pos:line="43" pos:column="37"/></block></expr>,
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifdef<pos:position pos:line="45" pos:column="7"/></cpp:directive> <name pos:line="45" pos:column="8">LOG_NOTICE<pos:position pos:line="45" pos:column="18"/></name></cpp:ifdef>
        <expr><block pos:line="46" pos:column="9">{<macro><name pos:line="46" pos:column="10">syslog_symbol<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument pos:line="46" pos:column="24">LOG_NOTICE<pos:position pos:line="46" pos:column="34"/></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></macro>}<pos:position pos:line="46" pos:column="36"/></block></expr>,
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifdef<pos:position pos:line="48" pos:column="7"/></cpp:directive> <name pos:line="48" pos:column="8">LOG_INFO<pos:position pos:line="48" pos:column="16"/></name></cpp:ifdef>
        <expr><block pos:line="49" pos:column="9">{<macro><name pos:line="49" pos:column="10">syslog_symbol<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument pos:line="49" pos:column="24">LOG_INFO<pos:position pos:line="49" pos:column="32"/></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></macro>}<pos:position pos:line="49" pos:column="34"/></block></expr>,
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">LOG_DEBUG<pos:position pos:line="51" pos:column="17"/></name></cpp:ifdef>
        <expr><block pos:line="52" pos:column="9">{<macro><name pos:line="52" pos:column="10">syslog_symbol<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument pos:line="52" pos:column="24">LOG_DEBUG<pos:position pos:line="52" pos:column="33"/></argument>)<pos:position pos:line="52" pos:column="34"/></argument_list></macro>}<pos:position pos:line="52" pos:column="35"/></block></expr>,
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
        <expr><block pos:line="54" pos:column="9">{<expr><name pos:line="54" pos:column="10">NULL<pos:position pos:line="54" pos:column="14"/></name></expr>, <expr><literal type="number" pos:line="54" pos:column="16">0<pos:position pos:line="54" pos:column="17"/></literal></expr>}<pos:position pos:line="54" pos:column="18"/></block></expr>
    }<pos:position pos:line="55" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="55" pos:column="7"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">syslog_symbol_t<pos:position pos:line="56" pos:column="20"/></name> <modifier pos:line="56" pos:column="21">*<pos:position pos:line="56" pos:column="22"/></modifier></type><name pos:line="56" pos:column="22">p<pos:position pos:line="56" pos:column="23"/></name></decl>;<pos:position pos:line="56" pos:column="24"/></decl_stmt>

    <for pos:line="58" pos:column="5">for <control pos:line="58" pos:column="9">(<init><expr><name pos:line="58" pos:column="10">p<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">symbols<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></init> <condition><expr><name><name pos:line="58" pos:column="23">p<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">name<pos:position pos:line="58" pos:column="30"/></name></name> <operator pos:line="58" pos:column="31">!=<pos:position pos:line="58" pos:column="33"/></operator> <name pos:line="58" pos:column="34">NULL<pos:position pos:line="58" pos:column="38"/></name></expr>;<pos:position pos:line="58" pos:column="39"/></condition> <incr><expr><operator pos:line="58" pos:column="40">++<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">p<pos:position pos:line="58" pos:column="43"/></name></expr></incr>)<pos:position pos:line="58" pos:column="44"/></control>
        <block type="pseudo"><if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><call><name pos:line="59" pos:column="14">strcmp<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">s<pos:position pos:line="59" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="24">p<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">name<pos:position pos:line="59" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="32"/></argument_list></call> <operator pos:line="59" pos:column="33">||<pos:position pos:line="59" pos:column="35"/></operator> <operator pos:line="59" pos:column="36">!<pos:position pos:line="59" pos:column="37"/></operator><call><name pos:line="59" pos:column="37">strcasecmp<pos:position pos:line="59" pos:column="47"/></name><argument_list pos:line="59" pos:column="47">(<argument><expr><name pos:line="59" pos:column="48">s<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="51">p<pos:position pos:line="59" pos:column="52"/></name><operator pos:line="59" pos:column="52">-&gt;<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="54">name<pos:position pos:line="59" pos:column="58"/></name></name> <operator pos:line="59" pos:column="59">+<pos:position pos:line="59" pos:column="60"/></operator> <literal type="number" pos:line="59" pos:column="61">4<pos:position pos:line="59" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="64"/></condition><then pos:line="59" pos:column="64">
            <block type="pseudo"><return pos:line="60" pos:column="13">return <expr><name><name pos:line="60" pos:column="20">p<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">value<pos:position pos:line="60" pos:column="28"/></name></name></expr>;<pos:position pos:line="60" pos:column="29"/></return></block></then></if></block></for>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">debugs<pos:position pos:line="62" pos:column="11"/></name><argument_list pos:line="62" pos:column="11">(<argument><expr><literal type="number" pos:line="62" pos:column="12">1<pos:position pos:line="62" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="15">DBG_IMPORTANT<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="30">"Unknown syslog facility/priority '"<pos:position pos:line="62" pos:column="66"/></literal> <operator pos:line="62" pos:column="67">&lt;&lt;<pos:position pos:line="62" pos:column="75"/></operator> <name pos:line="62" pos:column="70">s<pos:position pos:line="62" pos:column="71"/></name> <operator pos:line="62" pos:column="72">&lt;&lt;<pos:position pos:line="62" pos:column="80"/></operator> <literal type="string" pos:line="62" pos:column="75">"'"<pos:position pos:line="62" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="80"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><literal type="number" pos:line="63" pos:column="12">0<pos:position pos:line="63" pos:column="13"/></literal></expr>;<pos:position pos:line="63" pos:column="14"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

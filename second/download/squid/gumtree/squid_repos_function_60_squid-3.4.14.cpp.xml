<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_60_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">setSocketBuffers<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">( <parameter><decl><type><name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">sockfd<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">size<pos:position pos:line="2" pos:column="39"/></name></decl></parameter> )<pos:position pos:line="2" pos:column="41"/></parameter_list>
<comment type="line" pos:line="3" pos:column="1">// purpose: set socket buffers for both directions to the specified size</comment>
<comment type="line" pos:line="4" pos:column="1">// paramtr: sockfd (IN): socket file descriptor</comment>
<comment type="line" pos:line="5" pos:column="1">//          size (IN): new socket buffer size</comment>
<comment type="line" pos:line="6" pos:column="1">// returns: -1 on setsockopt() errors, 0 otherwise</comment>
<comment type="line" pos:line="7" pos:column="1">// warning: prints error message on stderr, errno will be changed</comment>
<block pos:line="8" pos:column="1">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">( <expr><call><name pos:line="9" pos:column="10">setsockopt<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">( <argument><expr><name pos:line="9" pos:column="22">sockfd<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="30">SOL_SOCKET<pos:position pos:line="9" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="42">SO_RCVBUF<pos:position pos:line="9" pos:column="51"/></name></expr></argument>,
                     <argument><expr><operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">)<pos:position pos:line="10" pos:column="29"/></operator> <operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="31">size<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="37">sizeof<argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">size<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="10" pos:column="51"/></argument_list></call> <operator pos:line="10" pos:column="52">==<pos:position pos:line="10" pos:column="54"/></operator> <operator pos:line="10" pos:column="55">-<pos:position pos:line="10" pos:column="56"/></operator><literal type="number" pos:line="10" pos:column="56">1<pos:position pos:line="10" pos:column="57"/></literal></expr> )<pos:position pos:line="10" pos:column="59"/></condition><then pos:line="10" pos:column="59"> <block pos:line="10" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">perror<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">( <argument><expr><literal type="string" pos:line="11" pos:column="17">"setsockopt( SO_RCVBUF )"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument> )<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">-<pos:position pos:line="12" pos:column="17"/></operator><literal type="number" pos:line="12" pos:column="17">1<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">( <expr><call><name pos:line="15" pos:column="10">setsockopt<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">( <argument><expr><name pos:line="15" pos:column="22">sockfd<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">SOL_SOCKET<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">SO_SNDBUF<pos:position pos:line="15" pos:column="51"/></name></expr></argument>,
                     <argument><expr><operator pos:line="16" pos:column="22">(<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">char<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></operator><operator pos:line="16" pos:column="28">)<pos:position pos:line="16" pos:column="29"/></operator> <operator pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="31">size<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="37">sizeof<argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">size<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="16" pos:column="51"/></argument_list></call> <operator pos:line="16" pos:column="52">==<pos:position pos:line="16" pos:column="54"/></operator> <operator pos:line="16" pos:column="55">-<pos:position pos:line="16" pos:column="56"/></operator><literal type="number" pos:line="16" pos:column="56">1<pos:position pos:line="16" pos:column="57"/></literal></expr> )<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59"> <block pos:line="16" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">perror<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">( <argument><expr><literal type="string" pos:line="17" pos:column="17">"setsockopt( SO_SNDBUF )"<pos:position pos:line="17" pos:column="42"/></literal></expr></argument> )<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><operator pos:line="18" pos:column="16">-<pos:position pos:line="18" pos:column="17"/></operator><literal type="number" pos:line="18" pos:column="17">1<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

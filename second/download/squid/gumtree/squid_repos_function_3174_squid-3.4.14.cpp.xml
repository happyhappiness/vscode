<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3174_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">errorClean<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">error_text<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

        <for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">ERR_NONE<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">+<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="29">1<pos:position pos:line="7" pos:column="30"/></literal></expr>;<pos:position pos:line="7" pos:column="31"/></init> <condition><expr><name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">&lt;<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="36">error_page_count<pos:position pos:line="7" pos:column="52"/></name></expr>;<pos:position pos:line="7" pos:column="53"/></condition> <incr><expr><operator pos:line="7" pos:column="54">++<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">i<pos:position pos:line="7" pos:column="57"/></name></expr></incr>)<pos:position pos:line="7" pos:column="58"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="13">safe_free<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name><name pos:line="8" pos:column="23">error_text<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">i<pos:position pos:line="8" pos:column="35"/></name></expr>]<pos:position pos:line="8" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt></block></for>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">safe_free<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">error_text<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><call><name><name pos:line="13" pos:column="12">ErrorDynamicPages<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">size<pos:position pos:line="13" pos:column="34"/></name></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="37"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">errorDynamicPageInfoDestroy<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><call><name><name pos:line="14" pos:column="37">ErrorDynamicPages<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">.<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="55">pop_back<pos:position pos:line="14" pos:column="63"/></name></name><argument_list pos:line="14" pos:column="63">()<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt></block></while>

    <expr_stmt><expr><name pos:line="16" pos:column="5">error_page_count<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">USE_SSL<pos:position pos:line="18" pos:column="12"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">Ssl<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">::<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">errorDetailClean<pos:position pos:line="19" pos:column="26"/></name></name><argument_list pos:line="19" pos:column="26">()<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

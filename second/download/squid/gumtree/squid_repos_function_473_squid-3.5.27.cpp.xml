<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_473_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">1024<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">user<pos:position pos:line="5" pos:column="15"/></name></decl>, <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">passwd<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">ldapServer<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">LDAP<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ld<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">tryagain<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">port<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">LDAP_PORT<pos:position pos:line="9" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">setbuf<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">stdout<pos:position pos:line="11" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">argc<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&gt;<pos:position pos:line="13" pos:column="21"/></operator> <literal type="number" pos:line="13" pos:column="19">1<pos:position pos:line="13" pos:column="20"/></literal> <operator pos:line="13" pos:column="21">&amp;&amp;<pos:position pos:line="13" pos:column="31"/></operator> <name><name pos:line="13" pos:column="24">argv<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><literal type="number" pos:line="13" pos:column="29">1<pos:position pos:line="13" pos:column="30"/></literal></expr>]<pos:position pos:line="13" pos:column="31"/></index><index pos:line="13" pos:column="31">[<expr><literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>]<pos:position pos:line="13" pos:column="34"/></index></name> <operator pos:line="13" pos:column="35">==<pos:position pos:line="13" pos:column="37"/></operator> <literal type="char" pos:line="13" pos:column="38">'-'<pos:position pos:line="13" pos:column="41"/></literal></expr>)<pos:position pos:line="13" pos:column="42"/></condition> <block pos:line="13" pos:column="43">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">value<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><literal type="string" pos:line="14" pos:column="29">""<pos:position pos:line="14" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">option<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name><name pos:line="15" pos:column="23">argv<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><literal type="number" pos:line="15" pos:column="28">1<pos:position pos:line="15" pos:column="29"/></literal></expr>]<pos:position pos:line="15" pos:column="30"/></index><index pos:line="15" pos:column="30">[<expr><literal type="number" pos:line="15" pos:column="31">1<pos:position pos:line="15" pos:column="32"/></literal></expr>]<pos:position pos:line="15" pos:column="33"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
        <switch pos:line="16" pos:column="9">switch <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">option<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition> <block pos:line="16" pos:column="25">{
        <case pos:line="17" pos:column="9">case <expr><literal type="char" pos:line="17" pos:column="14">'P'<pos:position pos:line="17" pos:column="17"/></literal></expr>:<pos:position pos:line="17" pos:column="18"/></case>
        <case pos:line="18" pos:column="9">case <expr><literal type="char" pos:line="18" pos:column="14">'R'<pos:position pos:line="18" pos:column="17"/></literal></expr>:<pos:position pos:line="18" pos:column="18"/></case>
        <case pos:line="19" pos:column="9">case <expr><literal type="char" pos:line="19" pos:column="14">'z'<pos:position pos:line="19" pos:column="17"/></literal></expr>:<pos:position pos:line="19" pos:column="18"/></case>
        <case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'Z'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
        <case pos:line="21" pos:column="9">case <expr><literal type="char" pos:line="21" pos:column="14">'d'<pos:position pos:line="21" pos:column="17"/></literal></expr>:<pos:position pos:line="21" pos:column="18"/></case>
        <case pos:line="22" pos:column="9">case <expr><literal type="char" pos:line="22" pos:column="14">'O'<pos:position pos:line="22" pos:column="17"/></literal></expr>:<pos:position pos:line="22" pos:column="18"/></case>
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
        <default pos:line="24" pos:column="9">default:<pos:position pos:line="24" pos:column="17"/></default>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><call><name pos:line="25" pos:column="17">strlen<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><name><name pos:line="25" pos:column="24">argv<pos:position pos:line="25" pos:column="28"/></name><index pos:line="25" pos:column="28">[<expr><literal type="number" pos:line="25" pos:column="29">1<pos:position pos:line="25" pos:column="30"/></literal></expr>]<pos:position pos:line="25" pos:column="31"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call> <operator pos:line="25" pos:column="33">&gt;<pos:position pos:line="25" pos:column="37"/></operator> <literal type="number" pos:line="25" pos:column="35">2<pos:position pos:line="25" pos:column="36"/></literal></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37"> <block pos:line="25" pos:column="38">{
                <expr_stmt><expr><name pos:line="26" pos:column="17">value<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">argv<pos:position pos:line="26" pos:column="29"/></name><index pos:line="26" pos:column="29">[<expr><literal type="number" pos:line="26" pos:column="30">1<pos:position pos:line="26" pos:column="31"/></literal></expr>]<pos:position pos:line="26" pos:column="32"/></index></name> <operator pos:line="26" pos:column="33">+<pos:position pos:line="26" pos:column="34"/></operator> <literal type="number" pos:line="26" pos:column="35">2<pos:position pos:line="26" pos:column="36"/></literal></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then> <elseif pos:line="27" pos:column="15">else <if pos:line="27" pos:column="20">if <condition pos:line="27" pos:column="23">(<expr><name pos:line="27" pos:column="24">argc<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">&gt;<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="31">2<pos:position pos:line="27" pos:column="32"/></literal></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <block pos:line="27" pos:column="34">{
                <expr_stmt><expr><name pos:line="28" pos:column="17">value<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name><name pos:line="28" pos:column="25">argv<pos:position pos:line="28" pos:column="29"/></name><index pos:line="28" pos:column="29">[<expr><literal type="number" pos:line="28" pos:column="30">2<pos:position pos:line="28" pos:column="31"/></literal></expr>]<pos:position pos:line="28" pos:column="32"/></index></name></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="29" pos:column="17">++<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">argv<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="30" pos:column="17">--<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">argc<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if></elseif> <else pos:line="31" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="17">value<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <literal type="string" pos:line="32" pos:column="25">""<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt></block></else></if>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        }<pos:position pos:line="34" pos:column="10"/></block></switch>
        <expr_stmt><expr><operator pos:line="35" pos:column="9">++<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">argv<pos:position pos:line="35" pos:column="15"/></name></expr>;<pos:position pos:line="35" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="36" pos:column="9">--<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="11">argc<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></expr_stmt>
        <switch pos:line="37" pos:column="9">switch <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">option<pos:position pos:line="37" pos:column="23"/></name></expr>)<pos:position pos:line="37" pos:column="24"/></condition> <block pos:line="37" pos:column="25">{
        <case pos:line="38" pos:column="9">case <expr><literal type="char" pos:line="38" pos:column="14">'H'<pos:position pos:line="38" pos:column="17"/></literal></expr>:<pos:position pos:line="38" pos:column="18"/></case>
<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><operator pos:line="39" pos:column="5">!<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">HAS_URI_SUPPORT<pos:position pos:line="39" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">fprintf<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">stderr<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"ERROR: Your LDAP library does not have URI support\n"<pos:position pos:line="40" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="85"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">exit<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="number" pos:line="41" pos:column="18">1<pos:position pos:line="41" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
        <comment type="block" pos:line="43" pos:column="9">/* Fall thru to -h */</comment>
        <case pos:line="44" pos:column="9">case <expr><literal type="char" pos:line="44" pos:column="14">'h'<pos:position pos:line="44" pos:column="17"/></literal></expr>:<pos:position pos:line="44" pos:column="18"/></case>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">ldapServer<pos:position pos:line="45" pos:column="27"/></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28"> <block pos:line="45" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">len<pos:position pos:line="46" pos:column="24"/></name> <init pos:line="46" pos:column="25">= <expr><call><name pos:line="46" pos:column="27">strlen<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">ldapServer<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call> <operator pos:line="46" pos:column="46">+<pos:position pos:line="46" pos:column="47"/></operator> <literal type="number" pos:line="46" pos:column="48">1<pos:position pos:line="46" pos:column="49"/></literal> <operator pos:line="46" pos:column="50">+<pos:position pos:line="46" pos:column="51"/></operator> <call><name pos:line="46" pos:column="52">strlen<pos:position pos:line="46" pos:column="58"/></name><argument_list pos:line="46" pos:column="58">(<argument><expr><name pos:line="46" pos:column="59">value<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call> <operator pos:line="46" pos:column="66">+<pos:position pos:line="46" pos:column="67"/></operator> <literal type="number" pos:line="46" pos:column="68">1<pos:position pos:line="46" pos:column="69"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="70"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name> <modifier pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></modifier></type><name pos:line="47" pos:column="23">newhost<pos:position pos:line="47" pos:column="30"/></name> <init pos:line="47" pos:column="31">= <expr><cast type="static" pos:line="47" pos:column="33">static_cast<argument_list type="generic" pos:line="47" pos:column="44">&lt;<argument><expr><name pos:line="47" pos:column="45">char<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">*<pos:position pos:line="47" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="47" pos:column="54"/></argument_list><argument_list pos:line="47" pos:column="51">(<argument><expr><call><name pos:line="47" pos:column="52">xmalloc<pos:position pos:line="47" pos:column="59"/></name><argument_list pos:line="47" pos:column="59">(<argument><expr><name pos:line="47" pos:column="60">len<pos:position pos:line="47" pos:column="63"/></name></expr></argument>)<pos:position pos:line="47" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="47" pos:column="66"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">snprintf<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">newhost<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="35">len<pos:position pos:line="48" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="40">"%s %s"<pos:position pos:line="48" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="49">ldapServer<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="61">value<pos:position pos:line="48" pos:column="66"/></name></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">free<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">ldapServer<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="50" pos:column="17">ldapServer<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">newhost<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then> <else pos:line="51" pos:column="15">else <block pos:line="51" pos:column="20">{
                <expr_stmt><expr><name pos:line="52" pos:column="17">ldapServer<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <call><name pos:line="52" pos:column="30">xstrdup<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">value<pos:position pos:line="52" pos:column="43"/></name></expr></argument>)<pos:position pos:line="52" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></else></if>
            <break pos:line="54" pos:column="13">break;<pos:position pos:line="54" pos:column="19"/></break>
        <case pos:line="55" pos:column="9">case <expr><literal type="char" pos:line="55" pos:column="14">'b'<pos:position pos:line="55" pos:column="17"/></literal></expr>:<pos:position pos:line="55" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="56" pos:column="13">basedn<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">value<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>
        <case pos:line="58" pos:column="9">case <expr><literal type="char" pos:line="58" pos:column="14">'f'<pos:position pos:line="58" pos:column="17"/></literal></expr>:<pos:position pos:line="58" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="59" pos:column="13">searchfilter<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">=<pos:position pos:line="59" pos:column="27"/></operator> <name pos:line="59" pos:column="28">value<pos:position pos:line="59" pos:column="33"/></name></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
            <break pos:line="60" pos:column="13">break;<pos:position pos:line="60" pos:column="19"/></break>
        <case pos:line="61" pos:column="9">case <expr><literal type="char" pos:line="61" pos:column="14">'u'<pos:position pos:line="61" pos:column="17"/></literal></expr>:<pos:position pos:line="61" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="62" pos:column="13">userattr<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">value<pos:position pos:line="62" pos:column="29"/></name></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
            <break pos:line="63" pos:column="13">break;<pos:position pos:line="63" pos:column="19"/></break>
        <case pos:line="64" pos:column="9">case <expr><literal type="char" pos:line="64" pos:column="14">'U'<pos:position pos:line="64" pos:column="17"/></literal></expr>:<pos:position pos:line="64" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="65" pos:column="13">passwdattr<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <name pos:line="65" pos:column="26">value<pos:position pos:line="65" pos:column="31"/></name></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
            <break pos:line="66" pos:column="13">break;<pos:position pos:line="66" pos:column="19"/></break>
        <case pos:line="67" pos:column="9">case <expr><literal type="char" pos:line="67" pos:column="14">'s'<pos:position pos:line="67" pos:column="17"/></literal></expr>:<pos:position pos:line="67" pos:column="18"/></case>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><call><name pos:line="68" pos:column="17">strcmp<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><name pos:line="68" pos:column="24">value<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="31">"base"<pos:position pos:line="68" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call> <operator pos:line="68" pos:column="39">==<pos:position pos:line="68" pos:column="41"/></operator> <literal type="number" pos:line="68" pos:column="42">0<pos:position pos:line="68" pos:column="43"/></literal></expr>)<pos:position pos:line="68" pos:column="44"/></condition><then pos:line="68" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="17">searchscope<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <name pos:line="69" pos:column="31">LDAP_SCOPE_BASE<pos:position pos:line="69" pos:column="46"/></name></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt></block></then>
            <elseif pos:line="70" pos:column="13">else <if pos:line="70" pos:column="18">if <condition pos:line="70" pos:column="21">(<expr><call><name pos:line="70" pos:column="22">strcmp<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">value<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="36">"one"<pos:position pos:line="70" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call> <operator pos:line="70" pos:column="43">==<pos:position pos:line="70" pos:column="45"/></operator> <literal type="number" pos:line="70" pos:column="46">0<pos:position pos:line="70" pos:column="47"/></literal></expr>)<pos:position pos:line="70" pos:column="48"/></condition><then pos:line="70" pos:column="48">
                <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="17">searchscope<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">=<pos:position pos:line="71" pos:column="30"/></operator> <name pos:line="71" pos:column="31">LDAP_SCOPE_ONELEVEL<pos:position pos:line="71" pos:column="50"/></name></expr>;<pos:position pos:line="71" pos:column="51"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="72" pos:column="13">else <if pos:line="72" pos:column="18">if <condition pos:line="72" pos:column="21">(<expr><call><name pos:line="72" pos:column="22">strcmp<pos:position pos:line="72" pos:column="28"/></name><argument_list pos:line="72" pos:column="28">(<argument><expr><name pos:line="72" pos:column="29">value<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="36">"sub"<pos:position pos:line="72" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call> <operator pos:line="72" pos:column="43">==<pos:position pos:line="72" pos:column="45"/></operator> <literal type="number" pos:line="72" pos:column="46">0<pos:position pos:line="72" pos:column="47"/></literal></expr>)<pos:position pos:line="72" pos:column="48"/></condition><then pos:line="72" pos:column="48">
                <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="17">searchscope<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="31">LDAP_SCOPE_SUBTREE<pos:position pos:line="73" pos:column="49"/></name></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt></block></then></if></elseif>
            <else pos:line="74" pos:column="13">else <block pos:line="74" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">fprintf<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">stderr<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="33">PROGRAM_NAME<pos:position pos:line="75" pos:column="45"/></name> <literal type="string" pos:line="75" pos:column="46">": ERROR: Unknown search scope '%s'\n"<pos:position pos:line="75" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="86">value<pos:position pos:line="75" pos:column="91"/></name></expr></argument>)<pos:position pos:line="75" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="93"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">exit<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><literal type="number" pos:line="76" pos:column="22">1<pos:position pos:line="76" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="77" pos:column="14"/></block></else></if>
            <break pos:line="78" pos:column="13">break;<pos:position pos:line="78" pos:column="19"/></break>
        <case pos:line="79" pos:column="9">case <expr><literal type="char" pos:line="79" pos:column="14">'E'<pos:position pos:line="79" pos:column="17"/></literal></expr>:<pos:position pos:line="79" pos:column="18"/></case>
<cpp:if pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">if<pos:position pos:line="80" pos:column="4"/></cpp:directive> <expr><call><name pos:line="80" pos:column="5">defined<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><name pos:line="80" pos:column="13">NETSCAPE_SSL<pos:position pos:line="80" pos:column="25"/></name></expr></argument>)<pos:position pos:line="80" pos:column="26"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><name pos:line="81" pos:column="13">sslpath<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">=<pos:position pos:line="81" pos:column="22"/></operator> <name pos:line="81" pos:column="23">value<pos:position pos:line="81" pos:column="28"/></name></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><name pos:line="82" pos:column="17">port<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">==<pos:position pos:line="82" pos:column="24"/></operator> <name pos:line="82" pos:column="25">LDAP_PORT<pos:position pos:line="82" pos:column="34"/></name></expr>)<pos:position pos:line="82" pos:column="35"/></condition><then pos:line="82" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="17">port<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">=<pos:position pos:line="83" pos:column="23"/></operator> <name pos:line="83" pos:column="24">LDAPS_PORT<pos:position pos:line="83" pos:column="34"/></name></expr>;<pos:position pos:line="83" pos:column="35"/></expr_stmt></block></then></if>
<cpp:else pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">else<pos:position pos:line="84" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">fprintf<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><name pos:line="85" pos:column="21">stderr<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="29">PROGRAM_NAME<pos:position pos:line="85" pos:column="41"/></name> <literal type="string" pos:line="85" pos:column="42">" ERROR: -E unsupported with this LDAP library\n"<pos:position pos:line="85" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="93"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">exit<pos:position pos:line="86" pos:column="17"/></name><argument_list pos:line="86" pos:column="17">(<argument><expr><literal type="number" pos:line="86" pos:column="18">1<pos:position pos:line="86" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="88" pos:column="13">break;<pos:position pos:line="88" pos:column="19"/></break>
        <case pos:line="89" pos:column="9">case <expr><literal type="char" pos:line="89" pos:column="14">'c'<pos:position pos:line="89" pos:column="17"/></literal></expr>:<pos:position pos:line="89" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="90" pos:column="13">connect_timeout<pos:position pos:line="90" pos:column="28"/></name> <operator pos:line="90" pos:column="29">=<pos:position pos:line="90" pos:column="30"/></operator> <call><name pos:line="90" pos:column="31">atoi<pos:position pos:line="90" pos:column="35"/></name><argument_list pos:line="90" pos:column="35">(<argument><expr><name pos:line="90" pos:column="36">value<pos:position pos:line="90" pos:column="41"/></name></expr></argument>)<pos:position pos:line="90" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="43"/></expr_stmt>
            <break pos:line="91" pos:column="13">break;<pos:position pos:line="91" pos:column="19"/></break>
        <case pos:line="92" pos:column="9">case <expr><literal type="char" pos:line="92" pos:column="14">'t'<pos:position pos:line="92" pos:column="17"/></literal></expr>:<pos:position pos:line="92" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="93" pos:column="13">timelimit<pos:position pos:line="93" pos:column="22"/></name> <operator pos:line="93" pos:column="23">=<pos:position pos:line="93" pos:column="24"/></operator> <call><name pos:line="93" pos:column="25">atoi<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">value<pos:position pos:line="93" pos:column="35"/></name></expr></argument>)<pos:position pos:line="93" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="37"/></expr_stmt>
            <break pos:line="94" pos:column="13">break;<pos:position pos:line="94" pos:column="19"/></break>
        <case pos:line="95" pos:column="9">case <expr><literal type="char" pos:line="95" pos:column="14">'a'<pos:position pos:line="95" pos:column="17"/></literal></expr>:<pos:position pos:line="95" pos:column="18"/></case>
            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><call><name pos:line="96" pos:column="17">strcmp<pos:position pos:line="96" pos:column="23"/></name><argument_list pos:line="96" pos:column="23">(<argument><expr><name pos:line="96" pos:column="24">value<pos:position pos:line="96" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="31">"never"<pos:position pos:line="96" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="39"/></argument_list></call> <operator pos:line="96" pos:column="40">==<pos:position pos:line="96" pos:column="42"/></operator> <literal type="number" pos:line="96" pos:column="43">0<pos:position pos:line="96" pos:column="44"/></literal></expr>)<pos:position pos:line="96" pos:column="45"/></condition><then pos:line="96" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="17">aliasderef<pos:position pos:line="97" pos:column="27"/></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <name pos:line="97" pos:column="30">LDAP_DEREF_NEVER<pos:position pos:line="97" pos:column="46"/></name></expr>;<pos:position pos:line="97" pos:column="47"/></expr_stmt></block></then>
            <elseif pos:line="98" pos:column="13">else <if pos:line="98" pos:column="18">if <condition pos:line="98" pos:column="21">(<expr><call><name pos:line="98" pos:column="22">strcmp<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><name pos:line="98" pos:column="29">value<pos:position pos:line="98" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="36">"always"<pos:position pos:line="98" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="45"/></argument_list></call> <operator pos:line="98" pos:column="46">==<pos:position pos:line="98" pos:column="48"/></operator> <literal type="number" pos:line="98" pos:column="49">0<pos:position pos:line="98" pos:column="50"/></literal></expr>)<pos:position pos:line="98" pos:column="51"/></condition><then pos:line="98" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="17">aliasderef<pos:position pos:line="99" pos:column="27"/></name> <operator pos:line="99" pos:column="28">=<pos:position pos:line="99" pos:column="29"/></operator> <name pos:line="99" pos:column="30">LDAP_DEREF_ALWAYS<pos:position pos:line="99" pos:column="47"/></name></expr>;<pos:position pos:line="99" pos:column="48"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="100" pos:column="13">else <if pos:line="100" pos:column="18">if <condition pos:line="100" pos:column="21">(<expr><call><name pos:line="100" pos:column="22">strcmp<pos:position pos:line="100" pos:column="28"/></name><argument_list pos:line="100" pos:column="28">(<argument><expr><name pos:line="100" pos:column="29">value<pos:position pos:line="100" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="36">"search"<pos:position pos:line="100" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="45"/></argument_list></call> <operator pos:line="100" pos:column="46">==<pos:position pos:line="100" pos:column="48"/></operator> <literal type="number" pos:line="100" pos:column="49">0<pos:position pos:line="100" pos:column="50"/></literal></expr>)<pos:position pos:line="100" pos:column="51"/></condition><then pos:line="100" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="17">aliasderef<pos:position pos:line="101" pos:column="27"/></name> <operator pos:line="101" pos:column="28">=<pos:position pos:line="101" pos:column="29"/></operator> <name pos:line="101" pos:column="30">LDAP_DEREF_SEARCHING<pos:position pos:line="101" pos:column="50"/></name></expr>;<pos:position pos:line="101" pos:column="51"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="102" pos:column="13">else <if pos:line="102" pos:column="18">if <condition pos:line="102" pos:column="21">(<expr><call><name pos:line="102" pos:column="22">strcmp<pos:position pos:line="102" pos:column="28"/></name><argument_list pos:line="102" pos:column="28">(<argument><expr><name pos:line="102" pos:column="29">value<pos:position pos:line="102" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="36">"find"<pos:position pos:line="102" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call> <operator pos:line="102" pos:column="44">==<pos:position pos:line="102" pos:column="46"/></operator> <literal type="number" pos:line="102" pos:column="47">0<pos:position pos:line="102" pos:column="48"/></literal></expr>)<pos:position pos:line="102" pos:column="49"/></condition><then pos:line="102" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="17">aliasderef<pos:position pos:line="103" pos:column="27"/></name> <operator pos:line="103" pos:column="28">=<pos:position pos:line="103" pos:column="29"/></operator> <name pos:line="103" pos:column="30">LDAP_DEREF_FINDING<pos:position pos:line="103" pos:column="48"/></name></expr>;<pos:position pos:line="103" pos:column="49"/></expr_stmt></block></then></if></elseif>
            <else pos:line="104" pos:column="13">else <block pos:line="104" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">fprintf<pos:position pos:line="105" pos:column="24"/></name><argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">stderr<pos:position pos:line="105" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="33">PROGRAM_NAME<pos:position pos:line="105" pos:column="45"/></name> <literal type="string" pos:line="105" pos:column="46">": ERROR: Unknown alias dereference method '%s'\n"<pos:position pos:line="105" pos:column="96"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="98">value<pos:position pos:line="105" pos:column="103"/></name></expr></argument>)<pos:position pos:line="105" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="105"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="106" pos:column="17">exit<pos:position pos:line="106" pos:column="21"/></name><argument_list pos:line="106" pos:column="21">(<argument><expr><literal type="number" pos:line="106" pos:column="22">1<pos:position pos:line="106" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="107" pos:column="14"/></block></else></if>
            <break pos:line="108" pos:column="13">break;<pos:position pos:line="108" pos:column="19"/></break>
        <case pos:line="109" pos:column="9">case <expr><literal type="char" pos:line="109" pos:column="14">'D'<pos:position pos:line="109" pos:column="17"/></literal></expr>:<pos:position pos:line="109" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="110" pos:column="13">binddn<pos:position pos:line="110" pos:column="19"/></name> <operator pos:line="110" pos:column="20">=<pos:position pos:line="110" pos:column="21"/></operator> <name pos:line="110" pos:column="22">value<pos:position pos:line="110" pos:column="27"/></name></expr>;<pos:position pos:line="110" pos:column="28"/></expr_stmt>
            <break pos:line="111" pos:column="13">break;<pos:position pos:line="111" pos:column="19"/></break>
        <case pos:line="112" pos:column="9">case <expr><literal type="char" pos:line="112" pos:column="14">'w'<pos:position pos:line="112" pos:column="17"/></literal></expr>:<pos:position pos:line="112" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="113" pos:column="13">bindpasswd<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">=<pos:position pos:line="113" pos:column="25"/></operator> <name pos:line="113" pos:column="26">value<pos:position pos:line="113" pos:column="31"/></name></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>
            <break pos:line="114" pos:column="13">break;<pos:position pos:line="114" pos:column="19"/></break>
        <case pos:line="115" pos:column="9">case <expr><literal type="char" pos:line="115" pos:column="14">'W'<pos:position pos:line="115" pos:column="17"/></literal></expr>:<pos:position pos:line="115" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">readSecret<pos:position pos:line="116" pos:column="23"/></name><argument_list pos:line="116" pos:column="23">(<argument><expr><name pos:line="116" pos:column="24">value<pos:position pos:line="116" pos:column="29"/></name></expr></argument>)<pos:position pos:line="116" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="31"/></expr_stmt>
            <break pos:line="117" pos:column="13">break;<pos:position pos:line="117" pos:column="19"/></break>
        <case pos:line="118" pos:column="9">case <expr><literal type="char" pos:line="118" pos:column="14">'P'<pos:position pos:line="118" pos:column="17"/></literal></expr>:<pos:position pos:line="118" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="119" pos:column="13">persistent<pos:position pos:line="119" pos:column="23"/></name> <operator pos:line="119" pos:column="24">=<pos:position pos:line="119" pos:column="25"/></operator> <operator pos:line="119" pos:column="26">!<pos:position pos:line="119" pos:column="27"/></operator><name pos:line="119" pos:column="27">persistent<pos:position pos:line="119" pos:column="37"/></name></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
            <break pos:line="120" pos:column="13">break;<pos:position pos:line="120" pos:column="19"/></break>
        <case pos:line="121" pos:column="9">case <expr><literal type="char" pos:line="121" pos:column="14">'O'<pos:position pos:line="121" pos:column="17"/></literal></expr>:<pos:position pos:line="121" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="122" pos:column="13">bind_once<pos:position pos:line="122" pos:column="22"/></name> <operator pos:line="122" pos:column="23">=<pos:position pos:line="122" pos:column="24"/></operator> <operator pos:line="122" pos:column="25">!<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="26">bind_once<pos:position pos:line="122" pos:column="35"/></name></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>
            <break pos:line="123" pos:column="13">break;<pos:position pos:line="123" pos:column="19"/></break>
        <case pos:line="124" pos:column="9">case <expr><literal type="char" pos:line="124" pos:column="14">'p'<pos:position pos:line="124" pos:column="17"/></literal></expr>:<pos:position pos:line="124" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="125" pos:column="13">port<pos:position pos:line="125" pos:column="17"/></name> <operator pos:line="125" pos:column="18">=<pos:position pos:line="125" pos:column="19"/></operator> <call><name pos:line="125" pos:column="20">atoi<pos:position pos:line="125" pos:column="24"/></name><argument_list pos:line="125" pos:column="24">(<argument><expr><name pos:line="125" pos:column="25">value<pos:position pos:line="125" pos:column="30"/></name></expr></argument>)<pos:position pos:line="125" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="32"/></expr_stmt>
            <break pos:line="126" pos:column="13">break;<pos:position pos:line="126" pos:column="19"/></break>
        <case pos:line="127" pos:column="9">case <expr><literal type="char" pos:line="127" pos:column="14">'R'<pos:position pos:line="127" pos:column="17"/></literal></expr>:<pos:position pos:line="127" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="128" pos:column="13">noreferrals<pos:position pos:line="128" pos:column="24"/></name> <operator pos:line="128" pos:column="25">=<pos:position pos:line="128" pos:column="26"/></operator> <operator pos:line="128" pos:column="27">!<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="28">noreferrals<pos:position pos:line="128" pos:column="39"/></name></expr>;<pos:position pos:line="128" pos:column="40"/></expr_stmt>
            <break pos:line="129" pos:column="13">break;<pos:position pos:line="129" pos:column="19"/></break>
<cpp:ifdef pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">ifdef<pos:position pos:line="130" pos:column="7"/></cpp:directive> <name pos:line="130" pos:column="8">LDAP_VERSION3<pos:position pos:line="130" pos:column="21"/></name></cpp:ifdef>
        <case pos:line="131" pos:column="9">case <expr><literal type="char" pos:line="131" pos:column="14">'v'<pos:position pos:line="131" pos:column="17"/></literal></expr>:<pos:position pos:line="131" pos:column="18"/></case>
            <switch pos:line="132" pos:column="13">switch <condition pos:line="132" pos:column="20">(<expr><call><name pos:line="132" pos:column="21">atoi<pos:position pos:line="132" pos:column="25"/></name><argument_list pos:line="132" pos:column="25">(<argument><expr><name pos:line="132" pos:column="26">value<pos:position pos:line="132" pos:column="31"/></name></expr></argument>)<pos:position pos:line="132" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="33"/></condition> <block pos:line="132" pos:column="34">{
            <case pos:line="133" pos:column="13">case <expr><literal type="number" pos:line="133" pos:column="18">2<pos:position pos:line="133" pos:column="19"/></literal></expr>:<pos:position pos:line="133" pos:column="20"/></case>
                <expr_stmt><expr><name pos:line="134" pos:column="17">version<pos:position pos:line="134" pos:column="24"/></name> <operator pos:line="134" pos:column="25">=<pos:position pos:line="134" pos:column="26"/></operator> <name pos:line="134" pos:column="27">LDAP_VERSION2<pos:position pos:line="134" pos:column="40"/></name></expr>;<pos:position pos:line="134" pos:column="41"/></expr_stmt>
                <break pos:line="135" pos:column="17">break;<pos:position pos:line="135" pos:column="23"/></break>
            <case pos:line="136" pos:column="13">case <expr><literal type="number" pos:line="136" pos:column="18">3<pos:position pos:line="136" pos:column="19"/></literal></expr>:<pos:position pos:line="136" pos:column="20"/></case>
                <expr_stmt><expr><name pos:line="137" pos:column="17">version<pos:position pos:line="137" pos:column="24"/></name> <operator pos:line="137" pos:column="25">=<pos:position pos:line="137" pos:column="26"/></operator> <name pos:line="137" pos:column="27">LDAP_VERSION3<pos:position pos:line="137" pos:column="40"/></name></expr>;<pos:position pos:line="137" pos:column="41"/></expr_stmt>
                <break pos:line="138" pos:column="17">break;<pos:position pos:line="138" pos:column="23"/></break>
            <default pos:line="139" pos:column="13">default:<pos:position pos:line="139" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="140" pos:column="17">fprintf<pos:position pos:line="140" pos:column="24"/></name><argument_list pos:line="140" pos:column="24">(<argument><expr><name pos:line="140" pos:column="25">stderr<pos:position pos:line="140" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="33">"Protocol version should be 2 or 3\n"<pos:position pos:line="140" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">exit<pos:position pos:line="141" pos:column="21"/></name><argument_list pos:line="141" pos:column="21">(<argument><expr><literal type="number" pos:line="141" pos:column="22">1<pos:position pos:line="141" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="142" pos:column="14"/></block></switch>
            <break pos:line="143" pos:column="13">break;<pos:position pos:line="143" pos:column="19"/></break>
        <case pos:line="144" pos:column="9">case <expr><literal type="char" pos:line="144" pos:column="14">'Z'<pos:position pos:line="144" pos:column="17"/></literal></expr>:<pos:position pos:line="144" pos:column="18"/></case>
            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><name pos:line="145" pos:column="17">version<pos:position pos:line="145" pos:column="24"/></name> <operator pos:line="145" pos:column="25">==<pos:position pos:line="145" pos:column="27"/></operator> <name pos:line="145" pos:column="28">LDAP_VERSION2<pos:position pos:line="145" pos:column="41"/></name></expr>)<pos:position pos:line="145" pos:column="42"/></condition><then pos:line="145" pos:column="42"> <block pos:line="145" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">fprintf<pos:position pos:line="146" pos:column="24"/></name><argument_list pos:line="146" pos:column="24">(<argument><expr><name pos:line="146" pos:column="25">stderr<pos:position pos:line="146" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="33">"TLS (-Z) is incompatible with version %d\n"<pos:position pos:line="146" pos:column="77"/></literal></expr></argument>,
                        <argument><expr><name pos:line="147" pos:column="25">version<pos:position pos:line="147" pos:column="32"/></name></expr></argument>)<pos:position pos:line="147" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="148" pos:column="17">exit<pos:position pos:line="148" pos:column="21"/></name><argument_list pos:line="148" pos:column="21">(<argument><expr><literal type="number" pos:line="148" pos:column="22">1<pos:position pos:line="148" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="150" pos:column="13">version<pos:position pos:line="150" pos:column="20"/></name> <operator pos:line="150" pos:column="21">=<pos:position pos:line="150" pos:column="22"/></operator> <name pos:line="150" pos:column="23">LDAP_VERSION3<pos:position pos:line="150" pos:column="36"/></name></expr>;<pos:position pos:line="150" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name pos:line="151" pos:column="13">use_tls<pos:position pos:line="151" pos:column="20"/></name> <operator pos:line="151" pos:column="21">=<pos:position pos:line="151" pos:column="22"/></operator> <literal type="number" pos:line="151" pos:column="23">1<pos:position pos:line="151" pos:column="24"/></literal></expr>;<pos:position pos:line="151" pos:column="25"/></expr_stmt>
            <break pos:line="152" pos:column="13">break;<pos:position pos:line="152" pos:column="19"/></break>
<cpp:endif pos:line="153" pos:column="1">#<cpp:directive pos:line="153" pos:column="2">endif<pos:position pos:line="153" pos:column="7"/></cpp:directive></cpp:endif>
        <case pos:line="154" pos:column="9">case <expr><literal type="char" pos:line="154" pos:column="14">'d'<pos:position pos:line="154" pos:column="17"/></literal></expr>:<pos:position pos:line="154" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="155" pos:column="13">debug_enabled<pos:position pos:line="155" pos:column="26"/></name> <operator pos:line="155" pos:column="27">=<pos:position pos:line="155" pos:column="28"/></operator> <literal type="number" pos:line="155" pos:column="29">1<pos:position pos:line="155" pos:column="30"/></literal></expr>;<pos:position pos:line="155" pos:column="31"/></expr_stmt>
            <break pos:line="156" pos:column="13">break;<pos:position pos:line="156" pos:column="19"/></break>
        <default pos:line="157" pos:column="9">default:<pos:position pos:line="157" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="158" pos:column="13">fprintf<pos:position pos:line="158" pos:column="20"/></name><argument_list pos:line="158" pos:column="20">(<argument><expr><name pos:line="158" pos:column="21">stderr<pos:position pos:line="158" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="29">PROGRAM_NAME<pos:position pos:line="158" pos:column="41"/></name> <literal type="string" pos:line="158" pos:column="42">": ERROR: Unknown command line option '%c'\n"<pos:position pos:line="158" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="89">option<pos:position pos:line="158" pos:column="95"/></name></expr></argument>)<pos:position pos:line="158" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="159" pos:column="13">exit<pos:position pos:line="159" pos:column="17"/></name><argument_list pos:line="159" pos:column="17">(<argument><expr><literal type="number" pos:line="159" pos:column="18">1<pos:position pos:line="159" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="160" pos:column="10"/></block></switch>
    }<pos:position pos:line="161" pos:column="6"/></block></while>

    <while pos:line="163" pos:column="5">while <condition pos:line="163" pos:column="11">(<expr><name pos:line="163" pos:column="12">argc<pos:position pos:line="163" pos:column="16"/></name> <operator pos:line="163" pos:column="17">&gt;<pos:position pos:line="163" pos:column="21"/></operator> <literal type="number" pos:line="163" pos:column="19">1<pos:position pos:line="163" pos:column="20"/></literal></expr>)<pos:position pos:line="163" pos:column="21"/></condition> <block pos:line="163" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="164" pos:column="9">char<pos:position pos:line="164" pos:column="13"/></name> <modifier pos:line="164" pos:column="14">*<pos:position pos:line="164" pos:column="15"/></modifier></type><name pos:line="164" pos:column="15">value<pos:position pos:line="164" pos:column="20"/></name> <init pos:line="164" pos:column="21">= <expr><name><name pos:line="164" pos:column="23">argv<pos:position pos:line="164" pos:column="27"/></name><index pos:line="164" pos:column="27">[<expr><literal type="number" pos:line="164" pos:column="28">1<pos:position pos:line="164" pos:column="29"/></literal></expr>]<pos:position pos:line="164" pos:column="30"/></index></name></expr></init></decl>;<pos:position pos:line="164" pos:column="31"/></decl_stmt>
        <if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name pos:line="165" pos:column="13">ldapServer<pos:position pos:line="165" pos:column="23"/></name></expr>)<pos:position pos:line="165" pos:column="24"/></condition><then pos:line="165" pos:column="24"> <block pos:line="165" pos:column="25">{
            <decl_stmt><decl><type><name pos:line="166" pos:column="13">int<pos:position pos:line="166" pos:column="16"/></name></type> <name pos:line="166" pos:column="17">len<pos:position pos:line="166" pos:column="20"/></name> <init pos:line="166" pos:column="21">= <expr><call><name pos:line="166" pos:column="23">strlen<pos:position pos:line="166" pos:column="29"/></name><argument_list pos:line="166" pos:column="29">(<argument><expr><name pos:line="166" pos:column="30">ldapServer<pos:position pos:line="166" pos:column="40"/></name></expr></argument>)<pos:position pos:line="166" pos:column="41"/></argument_list></call> <operator pos:line="166" pos:column="42">+<pos:position pos:line="166" pos:column="43"/></operator> <literal type="number" pos:line="166" pos:column="44">1<pos:position pos:line="166" pos:column="45"/></literal> <operator pos:line="166" pos:column="46">+<pos:position pos:line="166" pos:column="47"/></operator> <call><name pos:line="166" pos:column="48">strlen<pos:position pos:line="166" pos:column="54"/></name><argument_list pos:line="166" pos:column="54">(<argument><expr><name pos:line="166" pos:column="55">value<pos:position pos:line="166" pos:column="60"/></name></expr></argument>)<pos:position pos:line="166" pos:column="61"/></argument_list></call> <operator pos:line="166" pos:column="62">+<pos:position pos:line="166" pos:column="63"/></operator> <literal type="number" pos:line="166" pos:column="64">1<pos:position pos:line="166" pos:column="65"/></literal></expr></init></decl>;<pos:position pos:line="166" pos:column="66"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="167" pos:column="13">char<pos:position pos:line="167" pos:column="17"/></name> <modifier pos:line="167" pos:column="18">*<pos:position pos:line="167" pos:column="19"/></modifier></type><name pos:line="167" pos:column="19">newhost<pos:position pos:line="167" pos:column="26"/></name> <init pos:line="167" pos:column="27">= <expr><cast type="static" pos:line="167" pos:column="29">static_cast<argument_list type="generic" pos:line="167" pos:column="40">&lt;<argument><expr><name pos:line="167" pos:column="41">char<pos:position pos:line="167" pos:column="45"/></name><operator pos:line="167" pos:column="45">*<pos:position pos:line="167" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="167" pos:column="50"/></argument_list><argument_list pos:line="167" pos:column="47">(<argument><expr><call><name pos:line="167" pos:column="48">xmalloc<pos:position pos:line="167" pos:column="55"/></name><argument_list pos:line="167" pos:column="55">(<argument><expr><name pos:line="167" pos:column="56">len<pos:position pos:line="167" pos:column="59"/></name></expr></argument>)<pos:position pos:line="167" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="167" pos:column="61"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="167" pos:column="62"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="168" pos:column="13">snprintf<pos:position pos:line="168" pos:column="21"/></name><argument_list pos:line="168" pos:column="21">(<argument><expr><name pos:line="168" pos:column="22">newhost<pos:position pos:line="168" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="31">len<pos:position pos:line="168" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="36">"%s %s"<pos:position pos:line="168" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="168" pos:column="45">ldapServer<pos:position pos:line="168" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="57">value<pos:position pos:line="168" pos:column="62"/></name></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="169" pos:column="13">free<pos:position pos:line="169" pos:column="17"/></name><argument_list pos:line="169" pos:column="17">(<argument><expr><name pos:line="169" pos:column="18">ldapServer<pos:position pos:line="169" pos:column="28"/></name></expr></argument>)<pos:position pos:line="169" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="170" pos:column="13">ldapServer<pos:position pos:line="170" pos:column="23"/></name> <operator pos:line="170" pos:column="24">=<pos:position pos:line="170" pos:column="25"/></operator> <name pos:line="170" pos:column="26">newhost<pos:position pos:line="170" pos:column="33"/></name></expr>;<pos:position pos:line="170" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="171" pos:column="10"/></block></then> <else pos:line="171" pos:column="11">else <block pos:line="171" pos:column="16">{
            <expr_stmt><expr><name pos:line="172" pos:column="13">ldapServer<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">=<pos:position pos:line="172" pos:column="25"/></operator> <call><name pos:line="172" pos:column="26">xstrdup<pos:position pos:line="172" pos:column="33"/></name><argument_list pos:line="172" pos:column="33">(<argument><expr><name pos:line="172" pos:column="34">value<pos:position pos:line="172" pos:column="39"/></name></expr></argument>)<pos:position pos:line="172" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="173" pos:column="10"/></block></else></if>
        <expr_stmt><expr><operator pos:line="174" pos:column="9">--<pos:position pos:line="174" pos:column="11"/></operator><name pos:line="174" pos:column="11">argc<pos:position pos:line="174" pos:column="15"/></name></expr>;<pos:position pos:line="174" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="175" pos:column="9">++<pos:position pos:line="175" pos:column="11"/></operator><name pos:line="175" pos:column="11">argv<pos:position pos:line="175" pos:column="15"/></name></expr>;<pos:position pos:line="175" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="176" pos:column="6"/></block></while>
    <if pos:line="177" pos:column="5">if <condition pos:line="177" pos:column="8">(<expr><operator pos:line="177" pos:column="9">!<pos:position pos:line="177" pos:column="10"/></operator><name pos:line="177" pos:column="10">ldapServer<pos:position pos:line="177" pos:column="20"/></name></expr>)<pos:position pos:line="177" pos:column="21"/></condition><then pos:line="177" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name pos:line="178" pos:column="9">ldapServer<pos:position pos:line="178" pos:column="19"/></name> <operator pos:line="178" pos:column="20">=<pos:position pos:line="178" pos:column="21"/></operator> <call><name pos:line="178" pos:column="22">xstrdup<pos:position pos:line="178" pos:column="29"/></name><argument_list pos:line="178" pos:column="29">(<argument><expr><literal type="string" pos:line="178" pos:column="30">"localhost"<pos:position pos:line="178" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="43"/></expr_stmt></block></then></if>

    <if pos:line="180" pos:column="5">if <condition pos:line="180" pos:column="8">(<expr><operator pos:line="180" pos:column="9">!<pos:position pos:line="180" pos:column="10"/></operator><name pos:line="180" pos:column="10">basedn<pos:position pos:line="180" pos:column="16"/></name></expr>)<pos:position pos:line="180" pos:column="17"/></condition><then pos:line="180" pos:column="17"> <block pos:line="180" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="181" pos:column="9">fprintf<pos:position pos:line="181" pos:column="16"/></name><argument_list pos:line="181" pos:column="16">(<argument><expr><name pos:line="181" pos:column="17">stderr<pos:position pos:line="181" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="25">"Usage: "<pos:position pos:line="181" pos:column="34"/></literal> <name pos:line="181" pos:column="35">PROGRAM_NAME<pos:position pos:line="181" pos:column="47"/></name> <literal type="string" pos:line="181" pos:column="48">" -b basedn [options] [ldap_server_name[:port]]...\n\n"<pos:position pos:line="181" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="105"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="182" pos:column="9">fprintf<pos:position pos:line="182" pos:column="16"/></name><argument_list pos:line="182" pos:column="16">(<argument><expr><name pos:line="182" pos:column="17">stderr<pos:position pos:line="182" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="25">"\t-b basedn (REQUIRED)\tbase dn under which to search\n"<pos:position pos:line="182" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="183" pos:column="9">fprintf<pos:position pos:line="183" pos:column="16"/></name><argument_list pos:line="183" pos:column="16">(<argument><expr><name pos:line="183" pos:column="17">stderr<pos:position pos:line="183" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="183" pos:column="25">"\t-f filter\t\tsearch filter to locate user DN\n"<pos:position pos:line="183" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="184" pos:column="9">fprintf<pos:position pos:line="184" pos:column="16"/></name><argument_list pos:line="184" pos:column="16">(<argument><expr><name pos:line="184" pos:column="17">stderr<pos:position pos:line="184" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="25">"\t-u userattr\t\tusername DN attribute\n"<pos:position pos:line="184" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">fprintf<pos:position pos:line="185" pos:column="16"/></name><argument_list pos:line="185" pos:column="16">(<argument><expr><name pos:line="185" pos:column="17">stderr<pos:position pos:line="185" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="25">"\t-s base|one|sub\t\tsearch scope\n"<pos:position pos:line="185" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">fprintf<pos:position pos:line="186" pos:column="16"/></name><argument_list pos:line="186" pos:column="16">(<argument><expr><name pos:line="186" pos:column="17">stderr<pos:position pos:line="186" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="25">"\t-D binddn\t\tDN to bind as to perform searches\n"<pos:position pos:line="186" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="186" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="187" pos:column="9">fprintf<pos:position pos:line="187" pos:column="16"/></name><argument_list pos:line="187" pos:column="16">(<argument><expr><name pos:line="187" pos:column="17">stderr<pos:position pos:line="187" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="25">"\t-w bindpasswd\t\tpassword for binddn\n"<pos:position pos:line="187" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">fprintf<pos:position pos:line="188" pos:column="16"/></name><argument_list pos:line="188" pos:column="16">(<argument><expr><name pos:line="188" pos:column="17">stderr<pos:position pos:line="188" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="25">"\t-W secretfile\t\tread password for binddn from file secretfile\n"<pos:position pos:line="188" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="95"/></expr_stmt>
<cpp:if pos:line="189" pos:column="1">#<cpp:directive pos:line="189" pos:column="2">if<pos:position pos:line="189" pos:column="4"/></cpp:directive> <expr><name pos:line="189" pos:column="5">HAS_URI_SUPPORT<pos:position pos:line="189" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="190" pos:column="9">fprintf<pos:position pos:line="190" pos:column="16"/></name><argument_list pos:line="190" pos:column="16">(<argument><expr><name pos:line="190" pos:column="17">stderr<pos:position pos:line="190" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="190" pos:column="25">"\t-H URI\t\t\tLDAPURI (defaults to ldap://localhost)\n"<pos:position pos:line="190" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="83"/></expr_stmt>
<cpp:endif pos:line="191" pos:column="1">#<cpp:directive pos:line="191" pos:column="2">endif<pos:position pos:line="191" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="192" pos:column="9">fprintf<pos:position pos:line="192" pos:column="16"/></name><argument_list pos:line="192" pos:column="16">(<argument><expr><name pos:line="192" pos:column="17">stderr<pos:position pos:line="192" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="25">"\t-h server\t\tLDAP server (defaults to localhost)\n"<pos:position pos:line="192" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">fprintf<pos:position pos:line="193" pos:column="16"/></name><argument_list pos:line="193" pos:column="16">(<argument><expr><name pos:line="193" pos:column="17">stderr<pos:position pos:line="193" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="25">"\t-p port\t\t\tLDAP server port\n"<pos:position pos:line="193" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="194" pos:column="9">fprintf<pos:position pos:line="194" pos:column="16"/></name><argument_list pos:line="194" pos:column="16">(<argument><expr><name pos:line="194" pos:column="17">stderr<pos:position pos:line="194" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="25">"\t-P\t\t\tpersistent LDAP connection\n"<pos:position pos:line="194" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="67"/></expr_stmt>
<cpp:if pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">if<pos:position pos:line="195" pos:column="4"/></cpp:directive> <expr><call><name pos:line="195" pos:column="5">defined<pos:position pos:line="195" pos:column="12"/></name><argument_list pos:line="195" pos:column="12">(<argument><expr><name pos:line="195" pos:column="13">NETSCAPE_SSL<pos:position pos:line="195" pos:column="25"/></name></expr></argument>)<pos:position pos:line="195" pos:column="26"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="196" pos:column="9">fprintf<pos:position pos:line="196" pos:column="16"/></name><argument_list pos:line="196" pos:column="16">(<argument><expr><name pos:line="196" pos:column="17">stderr<pos:position pos:line="196" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="25">"\t-E sslcertpath\t\tenable LDAP over SSL\n"<pos:position pos:line="196" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="198" pos:column="9">fprintf<pos:position pos:line="198" pos:column="16"/></name><argument_list pos:line="198" pos:column="16">(<argument><expr><name pos:line="198" pos:column="17">stderr<pos:position pos:line="198" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="25">"\t-c timeout\t\tconnect timeout\n"<pos:position pos:line="198" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="199" pos:column="9">fprintf<pos:position pos:line="199" pos:column="16"/></name><argument_list pos:line="199" pos:column="16">(<argument><expr><name pos:line="199" pos:column="17">stderr<pos:position pos:line="199" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="25">"\t-t timelimit\t\tsearch time limit\n"<pos:position pos:line="199" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">fprintf<pos:position pos:line="200" pos:column="16"/></name><argument_list pos:line="200" pos:column="16">(<argument><expr><name pos:line="200" pos:column="17">stderr<pos:position pos:line="200" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="25">"\t-R\t\t\tdo not follow referrals\n"<pos:position pos:line="200" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="201" pos:column="9">fprintf<pos:position pos:line="201" pos:column="16"/></name><argument_list pos:line="201" pos:column="16">(<argument><expr><name pos:line="201" pos:column="17">stderr<pos:position pos:line="201" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="25">"\t-a never|always|search|find\n\t\t\t\twhen to dereference aliases\n"<pos:position pos:line="201" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="97"/></expr_stmt>
<cpp:ifdef pos:line="202" pos:column="1">#<cpp:directive pos:line="202" pos:column="2">ifdef<pos:position pos:line="202" pos:column="7"/></cpp:directive> <name pos:line="202" pos:column="8">LDAP_VERSION3<pos:position pos:line="202" pos:column="21"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">fprintf<pos:position pos:line="203" pos:column="16"/></name><argument_list pos:line="203" pos:column="16">(<argument><expr><name pos:line="203" pos:column="17">stderr<pos:position pos:line="203" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="25">"\t-v 2|3\t\t\tLDAP version\n"<pos:position pos:line="203" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="204" pos:column="9">fprintf<pos:position pos:line="204" pos:column="16"/></name><argument_list pos:line="204" pos:column="16">(<argument><expr><name pos:line="204" pos:column="17">stderr<pos:position pos:line="204" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="25">"\t-Z\t\t\tTLS encrypt the LDAP connection, requires LDAP version 3\n"<pos:position pos:line="204" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="97"/></expr_stmt>
<cpp:endif pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">endif<pos:position pos:line="205" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="206" pos:column="9">fprintf<pos:position pos:line="206" pos:column="16"/></name><argument_list pos:line="206" pos:column="16">(<argument><expr><name pos:line="206" pos:column="17">stderr<pos:position pos:line="206" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="25">"\t-d\t\t\tenable debug mode\n"<pos:position pos:line="206" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">fprintf<pos:position pos:line="207" pos:column="16"/></name><argument_list pos:line="207" pos:column="16">(<argument><expr><name pos:line="207" pos:column="17">stderr<pos:position pos:line="207" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="25">"\n"<pos:position pos:line="207" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="208" pos:column="9">fprintf<pos:position pos:line="208" pos:column="16"/></name><argument_list pos:line="208" pos:column="16">(<argument><expr><name pos:line="208" pos:column="17">stderr<pos:position pos:line="208" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="25">"\tIf no search filter is specified, then the dn &lt;userattr&gt;=user,basedn\n\twill be used (same as specifying a search filter of '&lt;userattr&gt;=',\n\tbut quicker as as there is no need to search for the user DN)\n\n"<pos:position pos:line="208" pos:column="248"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="237"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="238"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">fprintf<pos:position pos:line="209" pos:column="16"/></name><argument_list pos:line="209" pos:column="16">(<argument><expr><name pos:line="209" pos:column="17">stderr<pos:position pos:line="209" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="25">"\tIf you need to bind as a user to perform searches then use the\n\t-D binddn -w bindpasswd or -D binddn -W secretfile options\n\n"<pos:position pos:line="209" pos:column="157"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="158"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="159"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="210" pos:column="9">exit<pos:position pos:line="210" pos:column="13"/></name><argument_list pos:line="210" pos:column="13">(<argument><expr><literal type="number" pos:line="210" pos:column="14">1<pos:position pos:line="210" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="211" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="212" pos:column="5">/* On Windows ldap_start_tls_s is available starting from Windows XP,
     * so we need to bind at run-time with the function entry point
     */</comment>
<cpp:if pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">if<pos:position pos:line="215" pos:column="4"/></cpp:directive> <expr><name pos:line="215" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="215" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><name pos:line="216" pos:column="9">use_tls<pos:position pos:line="216" pos:column="16"/></name></expr>)<pos:position pos:line="216" pos:column="17"/></condition><then pos:line="216" pos:column="17"> <block pos:line="216" pos:column="18">{

        <decl_stmt><decl><type><name pos:line="218" pos:column="9">HMODULE<pos:position pos:line="218" pos:column="16"/></name></type> <name pos:line="218" pos:column="17">WLDAP32Handle<pos:position pos:line="218" pos:column="30"/></name></decl>;<pos:position pos:line="218" pos:column="31"/></decl_stmt>

        <expr_stmt><expr><name pos:line="220" pos:column="9">WLDAP32Handle<pos:position pos:line="220" pos:column="22"/></name> <operator pos:line="220" pos:column="23">=<pos:position pos:line="220" pos:column="24"/></operator> <call><name pos:line="220" pos:column="25">GetModuleHandle<pos:position pos:line="220" pos:column="40"/></name><argument_list pos:line="220" pos:column="40">(<argument><expr><literal type="string" pos:line="220" pos:column="41">"wldap32"<pos:position pos:line="220" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="52"/></expr_stmt>
        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><operator pos:line="221" pos:column="13">(<pos:position pos:line="221" pos:column="14"/></operator><name pos:line="221" pos:column="14">Win32_ldap_start_tls_s<pos:position pos:line="221" pos:column="36"/></name> <operator pos:line="221" pos:column="37">=<pos:position pos:line="221" pos:column="38"/></operator> <operator pos:line="221" pos:column="39">(<pos:position pos:line="221" pos:column="40"/></operator><name pos:line="221" pos:column="40">PFldap_start_tls_s<pos:position pos:line="221" pos:column="58"/></name><operator pos:line="221" pos:column="58">)<pos:position pos:line="221" pos:column="59"/></operator> <call><name pos:line="221" pos:column="60">GetProcAddress<pos:position pos:line="221" pos:column="74"/></name><argument_list pos:line="221" pos:column="74">(<argument><expr><name pos:line="221" pos:column="75">WLDAP32Handle<pos:position pos:line="221" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="90">LDAP_START_TLS_S<pos:position pos:line="221" pos:column="106"/></name></expr></argument>)<pos:position pos:line="221" pos:column="107"/></argument_list></call><operator pos:line="221" pos:column="107">)<pos:position pos:line="221" pos:column="108"/></operator> <operator pos:line="221" pos:column="109">==<pos:position pos:line="221" pos:column="111"/></operator> <name pos:line="221" pos:column="112">NULL<pos:position pos:line="221" pos:column="116"/></name></expr>)<pos:position pos:line="221" pos:column="117"/></condition><then pos:line="221" pos:column="117"> <block pos:line="221" pos:column="118">{
            <expr_stmt><expr><call><name pos:line="222" pos:column="13">fprintf<pos:position pos:line="222" pos:column="20"/></name><argument_list pos:line="222" pos:column="20">(<argument><expr><name pos:line="222" pos:column="21">stderr<pos:position pos:line="222" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="222" pos:column="29">PROGRAM_NAME<pos:position pos:line="222" pos:column="41"/></name> <literal type="string" pos:line="222" pos:column="42">": ERROR: TLS (-Z) not supported on this platform.\n"<pos:position pos:line="222" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="223" pos:column="13">exit<pos:position pos:line="223" pos:column="17"/></name><argument_list pos:line="223" pos:column="17">(<argument><expr><literal type="number" pos:line="223" pos:column="18">1<pos:position pos:line="223" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="223" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="224" pos:column="10"/></block></then></if>
    }<pos:position pos:line="225" pos:column="6"/></block></then></if>
<cpp:endif pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">endif<pos:position pos:line="226" pos:column="7"/></cpp:directive></cpp:endif>

    <while pos:line="228" pos:column="5">while <condition pos:line="228" pos:column="11">(<expr><call><name pos:line="228" pos:column="12">fgets<pos:position pos:line="228" pos:column="17"/></name><argument_list pos:line="228" pos:column="17">(<argument><expr><name pos:line="228" pos:column="18">buf<pos:position pos:line="228" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="228" pos:column="23">sizeof<argument_list pos:line="228" pos:column="29">(<argument><expr><name pos:line="228" pos:column="30">buf<pos:position pos:line="228" pos:column="33"/></name></expr></argument>)<pos:position pos:line="228" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="228" pos:column="36">stdin<pos:position pos:line="228" pos:column="41"/></name></expr></argument>)<pos:position pos:line="228" pos:column="42"/></argument_list></call> <operator pos:line="228" pos:column="43">!=<pos:position pos:line="228" pos:column="45"/></operator> <name pos:line="228" pos:column="46">NULL<pos:position pos:line="228" pos:column="50"/></name></expr>)<pos:position pos:line="228" pos:column="51"/></condition> <block pos:line="228" pos:column="52">{
        <expr_stmt><expr><name pos:line="229" pos:column="9">user<pos:position pos:line="229" pos:column="13"/></name> <operator pos:line="229" pos:column="14">=<pos:position pos:line="229" pos:column="15"/></operator> <call><name pos:line="229" pos:column="16">strtok<pos:position pos:line="229" pos:column="22"/></name><argument_list pos:line="229" pos:column="22">(<argument><expr><name pos:line="229" pos:column="23">buf<pos:position pos:line="229" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="28">" \r\n"<pos:position pos:line="229" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="230" pos:column="9">passwd<pos:position pos:line="230" pos:column="15"/></name> <operator pos:line="230" pos:column="16">=<pos:position pos:line="230" pos:column="17"/></operator> <call><name pos:line="230" pos:column="18">strtok<pos:position pos:line="230" pos:column="24"/></name><argument_list pos:line="230" pos:column="24">(<argument><expr><name pos:line="230" pos:column="25">NULL<pos:position pos:line="230" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="31">"\r\n"<pos:position pos:line="230" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="39"/></expr_stmt>

        <if pos:line="232" pos:column="9">if <condition pos:line="232" pos:column="12">(<expr><operator pos:line="232" pos:column="13">!<pos:position pos:line="232" pos:column="14"/></operator><name pos:line="232" pos:column="14">user<pos:position pos:line="232" pos:column="18"/></name></expr>)<pos:position pos:line="232" pos:column="19"/></condition><then pos:line="232" pos:column="19"> <block pos:line="232" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="233" pos:column="13">printf<pos:position pos:line="233" pos:column="19"/></name><argument_list pos:line="233" pos:column="19">(<argument><expr><literal type="string" pos:line="233" pos:column="20">"ERR Missing username\n"<pos:position pos:line="233" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="46"/></expr_stmt>
            <continue pos:line="234" pos:column="13">continue;<pos:position pos:line="234" pos:column="22"/></continue>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if>
        <if pos:line="236" pos:column="9">if <condition pos:line="236" pos:column="12">(<expr><operator pos:line="236" pos:column="13">!<pos:position pos:line="236" pos:column="14"/></operator><name pos:line="236" pos:column="14">passwd<pos:position pos:line="236" pos:column="20"/></name> <operator pos:line="236" pos:column="21">||<pos:position pos:line="236" pos:column="23"/></operator> <operator pos:line="236" pos:column="24">!<pos:position pos:line="236" pos:column="25"/></operator><name><name pos:line="236" pos:column="25">passwd<pos:position pos:line="236" pos:column="31"/></name><index pos:line="236" pos:column="31">[<expr><literal type="number" pos:line="236" pos:column="32">0<pos:position pos:line="236" pos:column="33"/></literal></expr>]<pos:position pos:line="236" pos:column="34"/></index></name></expr>)<pos:position pos:line="236" pos:column="35"/></condition><then pos:line="236" pos:column="35"> <block pos:line="236" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="237" pos:column="13">printf<pos:position pos:line="237" pos:column="19"/></name><argument_list pos:line="237" pos:column="19">(<argument><expr><literal type="string" pos:line="237" pos:column="20">"ERR Missing password '%s'\n"<pos:position pos:line="237" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="51">user<pos:position pos:line="237" pos:column="55"/></name></expr></argument>)<pos:position pos:line="237" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="57"/></expr_stmt>
            <continue pos:line="238" pos:column="13">continue;<pos:position pos:line="238" pos:column="22"/></continue>
        }<pos:position pos:line="239" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="240" pos:column="9">rfc1738_unescape<pos:position pos:line="240" pos:column="25"/></name><argument_list pos:line="240" pos:column="25">(<argument><expr><name pos:line="240" pos:column="26">user<pos:position pos:line="240" pos:column="30"/></name></expr></argument>)<pos:position pos:line="240" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="241" pos:column="9">rfc1738_unescape<pos:position pos:line="241" pos:column="25"/></name><argument_list pos:line="241" pos:column="25">(<argument><expr><name pos:line="241" pos:column="26">passwd<pos:position pos:line="241" pos:column="32"/></name></expr></argument>)<pos:position pos:line="241" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="34"/></expr_stmt>
        <if pos:line="242" pos:column="9">if <condition pos:line="242" pos:column="12">(<expr><operator pos:line="242" pos:column="13">!<pos:position pos:line="242" pos:column="14"/></operator><call><name pos:line="242" pos:column="14">validUsername<pos:position pos:line="242" pos:column="27"/></name><argument_list pos:line="242" pos:column="27">(<argument><expr><name pos:line="242" pos:column="28">user<pos:position pos:line="242" pos:column="32"/></name></expr></argument>)<pos:position pos:line="242" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="242" pos:column="34"/></condition><then pos:line="242" pos:column="34"> <block pos:line="242" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="243" pos:column="13">printf<pos:position pos:line="243" pos:column="19"/></name><argument_list pos:line="243" pos:column="19">(<argument><expr><literal type="string" pos:line="243" pos:column="20">"ERR No such user '%s':'%s'\n"<pos:position pos:line="243" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="243" pos:column="51">user<pos:position pos:line="243" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="57">passwd<pos:position pos:line="243" pos:column="63"/></name></expr></argument>)<pos:position pos:line="243" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="65"/></expr_stmt>
            <continue pos:line="244" pos:column="13">continue;<pos:position pos:line="244" pos:column="22"/></continue>
        }<pos:position pos:line="245" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="246" pos:column="9">tryagain<pos:position pos:line="246" pos:column="17"/></name> <operator pos:line="246" pos:column="18">=<pos:position pos:line="246" pos:column="19"/></operator> <operator pos:line="246" pos:column="20">(<pos:position pos:line="246" pos:column="21"/></operator><name pos:line="246" pos:column="21">ld<pos:position pos:line="246" pos:column="23"/></name> <operator pos:line="246" pos:column="24">!=<pos:position pos:line="246" pos:column="26"/></operator> <name pos:line="246" pos:column="27">NULL<pos:position pos:line="246" pos:column="31"/></name><operator pos:line="246" pos:column="31">)<pos:position pos:line="246" pos:column="32"/></operator></expr>;<pos:position pos:line="246" pos:column="33"/></expr_stmt>
<label><name pos:line="247" pos:column="1">recover<pos:position pos:line="247" pos:column="8"/></name>:<pos:position pos:line="247" pos:column="9"/></label>
        <if pos:line="248" pos:column="9">if <condition pos:line="248" pos:column="12">(<expr><name pos:line="248" pos:column="13">ld<pos:position pos:line="248" pos:column="15"/></name> <operator pos:line="248" pos:column="16">==<pos:position pos:line="248" pos:column="18"/></operator> <name pos:line="248" pos:column="19">NULL<pos:position pos:line="248" pos:column="23"/></name> <operator pos:line="248" pos:column="24">&amp;&amp;<pos:position pos:line="248" pos:column="34"/></operator> <name pos:line="248" pos:column="27">persistent<pos:position pos:line="248" pos:column="37"/></name></expr>)<pos:position pos:line="248" pos:column="38"/></condition><then pos:line="248" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><name pos:line="249" pos:column="13">ld<pos:position pos:line="249" pos:column="15"/></name> <operator pos:line="249" pos:column="16">=<pos:position pos:line="249" pos:column="17"/></operator> <call><name pos:line="249" pos:column="18">open_ldap_connection<pos:position pos:line="249" pos:column="38"/></name><argument_list pos:line="249" pos:column="38">(<argument><expr><name pos:line="249" pos:column="39">ldapServer<pos:position pos:line="249" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="51">port<pos:position pos:line="249" pos:column="55"/></name></expr></argument>)<pos:position pos:line="249" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="57"/></expr_stmt></block></then></if>
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><call><name pos:line="250" pos:column="13">checkLDAP<pos:position pos:line="250" pos:column="22"/></name><argument_list pos:line="250" pos:column="22">(<argument><expr><name pos:line="250" pos:column="23">ld<pos:position pos:line="250" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="27">user<pos:position pos:line="250" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="33">passwd<pos:position pos:line="250" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="41">ldapServer<pos:position pos:line="250" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="53">port<pos:position pos:line="250" pos:column="57"/></name></expr></argument>)<pos:position pos:line="250" pos:column="58"/></argument_list></call> <operator pos:line="250" pos:column="59">!=<pos:position pos:line="250" pos:column="61"/></operator> <literal type="number" pos:line="250" pos:column="62">0<pos:position pos:line="250" pos:column="63"/></literal></expr>)<pos:position pos:line="250" pos:column="64"/></condition><then pos:line="250" pos:column="64"> <block pos:line="250" pos:column="65">{
            <if pos:line="251" pos:column="13">if <condition pos:line="251" pos:column="16">(<expr><name pos:line="251" pos:column="17">tryagain<pos:position pos:line="251" pos:column="25"/></name> <operator pos:line="251" pos:column="26">&amp;&amp;<pos:position pos:line="251" pos:column="36"/></operator> <call><name pos:line="251" pos:column="29">squid_ldap_errno<pos:position pos:line="251" pos:column="45"/></name><argument_list pos:line="251" pos:column="45">(<argument><expr><name pos:line="251" pos:column="46">ld<pos:position pos:line="251" pos:column="48"/></name></expr></argument>)<pos:position pos:line="251" pos:column="49"/></argument_list></call> <operator pos:line="251" pos:column="50">!=<pos:position pos:line="251" pos:column="52"/></operator> <name pos:line="251" pos:column="53">LDAP_INVALID_CREDENTIALS<pos:position pos:line="251" pos:column="77"/></name></expr>)<pos:position pos:line="251" pos:column="78"/></condition><then pos:line="251" pos:column="78"> <block pos:line="251" pos:column="79">{
                <expr_stmt><expr><name pos:line="252" pos:column="17">tryagain<pos:position pos:line="252" pos:column="25"/></name> <operator pos:line="252" pos:column="26">=<pos:position pos:line="252" pos:column="27"/></operator> <literal type="number" pos:line="252" pos:column="28">0<pos:position pos:line="252" pos:column="29"/></literal></expr>;<pos:position pos:line="252" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="253" pos:column="17">ldap_unbind<pos:position pos:line="253" pos:column="28"/></name><argument_list pos:line="253" pos:column="28">(<argument><expr><name pos:line="253" pos:column="29">ld<pos:position pos:line="253" pos:column="31"/></name></expr></argument>)<pos:position pos:line="253" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="254" pos:column="17">ld<pos:position pos:line="254" pos:column="19"/></name> <operator pos:line="254" pos:column="20">=<pos:position pos:line="254" pos:column="21"/></operator> <name pos:line="254" pos:column="22">NULL<pos:position pos:line="254" pos:column="26"/></name></expr>;<pos:position pos:line="254" pos:column="27"/></expr_stmt>
                <goto pos:line="255" pos:column="17">goto <name pos:line="255" pos:column="22">recover<pos:position pos:line="255" pos:column="29"/></name>;<pos:position pos:line="255" pos:column="30"/></goto>
            }<pos:position pos:line="256" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="257" pos:column="13">printf<pos:position pos:line="257" pos:column="19"/></name><argument_list pos:line="257" pos:column="19">(<argument><expr><literal type="string" pos:line="257" pos:column="20">"ERR %s\n"<pos:position pos:line="257" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="257" pos:column="32">ldap_err2string<pos:position pos:line="257" pos:column="47"/></name><argument_list pos:line="257" pos:column="47">(<argument><expr><call><name pos:line="257" pos:column="48">squid_ldap_errno<pos:position pos:line="257" pos:column="64"/></name><argument_list pos:line="257" pos:column="64">(<argument><expr><name pos:line="257" pos:column="65">ld<pos:position pos:line="257" pos:column="67"/></name></expr></argument>)<pos:position pos:line="257" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="257" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="257" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="258" pos:column="10"/></block></then> <else pos:line="258" pos:column="11">else <block pos:line="258" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="259" pos:column="13">printf<pos:position pos:line="259" pos:column="19"/></name><argument_list pos:line="259" pos:column="19">(<argument><expr><literal type="string" pos:line="259" pos:column="20">"OK\n"<pos:position pos:line="259" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="259" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="260" pos:column="10"/></block></else></if>
        <if pos:line="261" pos:column="9">if <condition pos:line="261" pos:column="12">(<expr><name pos:line="261" pos:column="13">ld<pos:position pos:line="261" pos:column="15"/></name> <operator pos:line="261" pos:column="16">&amp;&amp;<pos:position pos:line="261" pos:column="26"/></operator> <operator pos:line="261" pos:column="19">(<pos:position pos:line="261" pos:column="20"/></operator><call><name pos:line="261" pos:column="20">squid_ldap_errno<pos:position pos:line="261" pos:column="36"/></name><argument_list pos:line="261" pos:column="36">(<argument><expr><name pos:line="261" pos:column="37">ld<pos:position pos:line="261" pos:column="39"/></name></expr></argument>)<pos:position pos:line="261" pos:column="40"/></argument_list></call> <operator pos:line="261" pos:column="41">!=<pos:position pos:line="261" pos:column="43"/></operator> <name pos:line="261" pos:column="44">LDAP_SUCCESS<pos:position pos:line="261" pos:column="56"/></name> <operator pos:line="261" pos:column="57">&amp;&amp;<pos:position pos:line="261" pos:column="67"/></operator> <call><name pos:line="261" pos:column="60">squid_ldap_errno<pos:position pos:line="261" pos:column="76"/></name><argument_list pos:line="261" pos:column="76">(<argument><expr><name pos:line="261" pos:column="77">ld<pos:position pos:line="261" pos:column="79"/></name></expr></argument>)<pos:position pos:line="261" pos:column="80"/></argument_list></call> <operator pos:line="261" pos:column="81">!=<pos:position pos:line="261" pos:column="83"/></operator> <name pos:line="261" pos:column="84">LDAP_INVALID_CREDENTIALS<pos:position pos:line="261" pos:column="108"/></name><operator pos:line="261" pos:column="108">)<pos:position pos:line="261" pos:column="109"/></operator></expr>)<pos:position pos:line="261" pos:column="110"/></condition><then pos:line="261" pos:column="110"> <block pos:line="261" pos:column="111">{
            <expr_stmt><expr><call><name pos:line="262" pos:column="13">ldap_unbind<pos:position pos:line="262" pos:column="24"/></name><argument_list pos:line="262" pos:column="24">(<argument><expr><name pos:line="262" pos:column="25">ld<pos:position pos:line="262" pos:column="27"/></name></expr></argument>)<pos:position pos:line="262" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="263" pos:column="13">ld<pos:position pos:line="263" pos:column="15"/></name> <operator pos:line="263" pos:column="16">=<pos:position pos:line="263" pos:column="17"/></operator> <name pos:line="263" pos:column="18">NULL<pos:position pos:line="263" pos:column="22"/></name></expr>;<pos:position pos:line="263" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="264" pos:column="10"/></block></then></if>
    }<pos:position pos:line="265" pos:column="6"/></block></while>
    <if pos:line="266" pos:column="5">if <condition pos:line="266" pos:column="8">(<expr><name pos:line="266" pos:column="9">ld<pos:position pos:line="266" pos:column="11"/></name></expr>)<pos:position pos:line="266" pos:column="12"/></condition><then pos:line="266" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="267" pos:column="9">ldap_unbind<pos:position pos:line="267" pos:column="20"/></name><argument_list pos:line="267" pos:column="20">(<argument><expr><name pos:line="267" pos:column="21">ld<pos:position pos:line="267" pos:column="23"/></name></expr></argument>)<pos:position pos:line="267" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="25"/></expr_stmt></block></then></if>
    <return pos:line="268" pos:column="5">return <expr><literal type="number" pos:line="268" pos:column="12">0<pos:position pos:line="268" pos:column="13"/></literal></expr>;<pos:position pos:line="268" pos:column="14"/></return>
}<pos:position pos:line="269" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5677_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Comm<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Flag<pos:position pos:line="1" pos:column="11"/></name></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">DoSelect<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">msec<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">pollfd<pos:position pos:line="4" pos:column="18"/></name></name></type> <name><name pos:line="4" pos:column="19">pfds<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><name pos:line="4" pos:column="24">SQUID_MAXFD<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">PF<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">hdl<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">fd<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">maxfd<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">long<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">nfds<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">long<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">npending<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">num<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">calldns<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="22">calludp<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="35">calltcp<pos:position pos:line="12" pos:column="42"/></name> <init pos:line="12" pos:column="43">= <expr><literal type="number" pos:line="12" pos:column="45">0<pos:position pos:line="12" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">double<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">timeout<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><name pos:line="13" pos:column="22">current_dtime<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">+<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="38">(<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">msec<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">/<pos:position pos:line="13" pos:column="45"/></operator> <literal type="number" pos:line="13" pos:column="46">1000.0<pos:position pos:line="13" pos:column="52"/></literal><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="13" pos:column="54"/></decl_stmt>

    <do pos:line="15" pos:column="5">do <block pos:line="15" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">double<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">start<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">getCurrentTime<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">()<pos:position pos:line="17" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">start<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">current_dtime<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">commCheckUdpIncoming<pos:position pos:line="20" pos:column="33"/></name></expr>)<pos:position pos:line="20" pos:column="34"/></condition><then pos:line="20" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">comm_poll_udp_incoming<pos:position pos:line="21" pos:column="35"/></name><argument_list pos:line="21" pos:column="35">()<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">commCheckDnsIncoming<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="13">comm_poll_dns_incoming<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">()<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></then></if>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">commCheckTcpIncoming<pos:position pos:line="26" pos:column="33"/></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="13">comm_poll_tcp_incoming<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">()<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">PROF_start<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">comm_poll_prep_pfds<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name pos:line="31" pos:column="9">calldns<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">calludp<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">calltcp<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">=<pos:position pos:line="31" pos:column="38"/></operator> <literal type="number" pos:line="31" pos:column="39">0<pos:position pos:line="31" pos:column="40"/></literal></expr>;<pos:position pos:line="31" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name pos:line="33" pos:column="9">nfds<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></expr_stmt>

        <expr_stmt><expr><name pos:line="35" pos:column="9">npending<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>

        <expr_stmt><expr><name pos:line="37" pos:column="9">maxfd<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">Biggest_FD<pos:position pos:line="37" pos:column="27"/></name> <operator pos:line="37" pos:column="28">+<pos:position pos:line="37" pos:column="29"/></operator> <literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>

        <for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><decl><type><name pos:line="39" pos:column="14">int<pos:position pos:line="39" pos:column="17"/></name></type> <name pos:line="39" pos:column="18">i<pos:position pos:line="39" pos:column="19"/></name> <init pos:line="39" pos:column="20">= <expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="24"/></init> <condition><expr><name pos:line="39" pos:column="25">i<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&lt;<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="29">maxfd<pos:position pos:line="39" pos:column="34"/></name></expr>;<pos:position pos:line="39" pos:column="35"/></condition> <incr><expr><operator pos:line="39" pos:column="36">++<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">i<pos:position pos:line="39" pos:column="39"/></name></expr></incr>)<pos:position pos:line="39" pos:column="40"/></control> <block pos:line="39" pos:column="41">{
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">int<pos:position pos:line="40" pos:column="16"/></name></type> <name pos:line="40" pos:column="17">events<pos:position pos:line="40" pos:column="23"/></name></decl>;<pos:position pos:line="40" pos:column="24"/></decl_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">events<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <literal type="number" pos:line="41" pos:column="22">0<pos:position pos:line="41" pos:column="23"/></literal></expr>;<pos:position pos:line="41" pos:column="24"/></expr_stmt>
            <comment type="block" pos:line="42" pos:column="13">/* Check each open socket for a handler. */</comment>

            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">fd_table<pos:position pos:line="44" pos:column="25"/></name><index pos:line="44" pos:column="25">[<expr><name pos:line="44" pos:column="26">i<pos:position pos:line="44" pos:column="27"/></name></expr>]<pos:position pos:line="44" pos:column="28"/></index></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">read_handler<pos:position pos:line="44" pos:column="41"/></name></expr>)<pos:position pos:line="44" pos:column="42"/></condition><then pos:line="44" pos:column="42">
                <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="17">events<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">|=<pos:position pos:line="45" pos:column="26"/></operator> <name pos:line="45" pos:column="27">POLLRDNORM<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt></block></then></if>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name><name pos:line="47" pos:column="17">fd_table<pos:position pos:line="47" pos:column="25"/></name><index pos:line="47" pos:column="25">[<expr><name pos:line="47" pos:column="26">i<pos:position pos:line="47" pos:column="27"/></name></expr>]<pos:position pos:line="47" pos:column="28"/></index></name><operator pos:line="47" pos:column="28">.<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="29">write_handler<pos:position pos:line="47" pos:column="42"/></name></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43">
                <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="17">events<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">|=<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">POLLWRNORM<pos:position pos:line="48" pos:column="37"/></name></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt></block></then></if>

            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><name pos:line="50" pos:column="17">events<pos:position pos:line="50" pos:column="23"/></name></expr>)<pos:position pos:line="50" pos:column="24"/></condition><then pos:line="50" pos:column="24"> <block pos:line="50" pos:column="25">{
                <expr_stmt><expr><name><name pos:line="51" pos:column="17">pfds<pos:position pos:line="51" pos:column="21"/></name><index pos:line="51" pos:column="21">[<expr><name pos:line="51" pos:column="22">nfds<pos:position pos:line="51" pos:column="26"/></name></expr>]<pos:position pos:line="51" pos:column="27"/></index></name><operator pos:line="51" pos:column="27">.<pos:position pos:line="51" pos:column="28"/></operator><name pos:line="51" pos:column="28">fd<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">=<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="33">i<pos:position pos:line="51" pos:column="34"/></name></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="52" pos:column="17">pfds<pos:position pos:line="52" pos:column="21"/></name><index pos:line="52" pos:column="21">[<expr><name pos:line="52" pos:column="22">nfds<pos:position pos:line="52" pos:column="26"/></name></expr>]<pos:position pos:line="52" pos:column="27"/></index></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">events<pos:position pos:line="52" pos:column="34"/></name> <operator pos:line="52" pos:column="35">=<pos:position pos:line="52" pos:column="36"/></operator> <name pos:line="52" pos:column="37">events<pos:position pos:line="52" pos:column="43"/></name></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">pfds<pos:position pos:line="53" pos:column="21"/></name><index pos:line="53" pos:column="21">[<expr><name pos:line="53" pos:column="22">nfds<pos:position pos:line="53" pos:column="26"/></name></expr>]<pos:position pos:line="53" pos:column="27"/></index></name><operator pos:line="53" pos:column="27">.<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">revents<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">=<pos:position pos:line="53" pos:column="37"/></operator> <literal type="number" pos:line="53" pos:column="38">0<pos:position pos:line="53" pos:column="39"/></literal></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="54" pos:column="17">++<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">nfds<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>

                <if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><operator pos:line="56" pos:column="21">(<pos:position pos:line="56" pos:column="22"/></operator><name pos:line="56" pos:column="22">events<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">&amp;<pos:position pos:line="56" pos:column="34"/></operator> <name pos:line="56" pos:column="31">POLLRDNORM<pos:position pos:line="56" pos:column="41"/></name><operator pos:line="56" pos:column="41">)<pos:position pos:line="56" pos:column="42"/></operator> <operator pos:line="56" pos:column="43">&amp;&amp;<pos:position pos:line="56" pos:column="53"/></operator> <name><name pos:line="56" pos:column="46">fd_table<pos:position pos:line="56" pos:column="54"/></name><index pos:line="56" pos:column="54">[<expr><name pos:line="56" pos:column="55">i<pos:position pos:line="56" pos:column="56"/></name></expr>]<pos:position pos:line="56" pos:column="57"/></index></name><operator pos:line="56" pos:column="57">.<pos:position pos:line="56" pos:column="58"/></operator><name><name pos:line="56" pos:column="58">flags<pos:position pos:line="56" pos:column="63"/></name><operator pos:line="56" pos:column="63">.<pos:position pos:line="56" pos:column="64"/></operator><name pos:line="56" pos:column="64">read_pending<pos:position pos:line="56" pos:column="76"/></name></name></expr>)<pos:position pos:line="56" pos:column="77"/></condition><then pos:line="56" pos:column="77">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="57" pos:column="21">++<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">npending<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt></block></then></if>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>
        }<pos:position pos:line="59" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="61" pos:column="9">PROF_stop<pos:position pos:line="61" pos:column="18"/></name><argument_list pos:line="61" pos:column="18">(<argument><expr><name pos:line="61" pos:column="19">comm_poll_prep_pfds<pos:position pos:line="61" pos:column="38"/></name></expr></argument>)<pos:position pos:line="61" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">npending<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="13">msec<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <literal type="number" pos:line="64" pos:column="20">0<pos:position pos:line="64" pos:column="21"/></literal></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">msec<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">&gt;<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="20">MAX_POLL_TIME<pos:position pos:line="66" pos:column="33"/></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="13">msec<pos:position pos:line="67" pos:column="17"/></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <name pos:line="67" pos:column="20">MAX_POLL_TIME<pos:position pos:line="67" pos:column="33"/></name></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="69" pos:column="9">/* nothing to do
         *
         * Note that this will only ever trigger when there are no log files
         * and stdout/err/in are all closed too.
         */</comment>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">nfds<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">==<pos:position pos:line="74" pos:column="20"/></operator> <literal type="number" pos:line="74" pos:column="21">0<pos:position pos:line="74" pos:column="22"/></literal> <operator pos:line="74" pos:column="23">&amp;&amp;<pos:position pos:line="74" pos:column="33"/></operator> <name pos:line="74" pos:column="26">npending<pos:position pos:line="74" pos:column="34"/></name> <operator pos:line="74" pos:column="35">==<pos:position pos:line="74" pos:column="37"/></operator> <literal type="number" pos:line="74" pos:column="38">0<pos:position pos:line="74" pos:column="39"/></literal></expr>)<pos:position pos:line="74" pos:column="40"/></condition><then pos:line="74" pos:column="40"> <block pos:line="74" pos:column="41">{
            <if pos:line="75" pos:column="13">if <condition pos:line="75" pos:column="16">(<expr><name pos:line="75" pos:column="17">shutting_down<pos:position pos:line="75" pos:column="30"/></name></expr>)<pos:position pos:line="75" pos:column="31"/></condition><then pos:line="75" pos:column="31">
                <block type="pseudo"><return pos:line="76" pos:column="17">return <expr><name><name pos:line="76" pos:column="24">Comm<pos:position pos:line="76" pos:column="28"/></name><operator pos:line="76" pos:column="28">::<pos:position pos:line="76" pos:column="30"/></operator><name pos:line="76" pos:column="30">SHUTDOWN<pos:position pos:line="76" pos:column="38"/></name></name></expr>;<pos:position pos:line="76" pos:column="39"/></return></block></then>
            <else pos:line="77" pos:column="13">else
                <block type="pseudo"><return pos:line="78" pos:column="17">return <expr><name><name pos:line="78" pos:column="24">Comm<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">::<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="30">IDLE<pos:position pos:line="78" pos:column="34"/></name></name></expr>;<pos:position pos:line="78" pos:column="35"/></return></block></else></if>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if>

        <for pos:line="81" pos:column="9">for <control pos:line="81" pos:column="13">(<init pos:line="81" pos:column="14">;<pos:position pos:line="81" pos:column="15"/></init><condition pos:line="81" pos:column="15">;<pos:position pos:line="81" pos:column="16"/></condition><incr/>)<pos:position pos:line="81" pos:column="17"/></control> <block pos:line="81" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">PROF_start<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><name pos:line="82" pos:column="24">comm_poll_normal<pos:position pos:line="82" pos:column="40"/></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="83" pos:column="13">++<pos:position pos:line="83" pos:column="15"/></operator> <name><name pos:line="83" pos:column="16">statCounter<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">.<pos:position pos:line="83" pos:column="28"/></operator><name pos:line="83" pos:column="28">syscalls<pos:position pos:line="83" pos:column="36"/></name><operator pos:line="83" pos:column="36">.<pos:position pos:line="83" pos:column="37"/></operator><name pos:line="83" pos:column="37">selects<pos:position pos:line="83" pos:column="44"/></name></name></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="84" pos:column="13">num<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">=<pos:position pos:line="84" pos:column="18"/></operator> <call><name pos:line="84" pos:column="19">poll<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><name pos:line="84" pos:column="24">pfds<pos:position pos:line="84" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="30">nfds<pos:position pos:line="84" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="36">msec<pos:position pos:line="84" pos:column="40"/></name></expr></argument>)<pos:position pos:line="84" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="85" pos:column="13">++<pos:position pos:line="85" pos:column="15"/></operator> <name><name pos:line="85" pos:column="16">statCounter<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">.<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="28">select_loops<pos:position pos:line="85" pos:column="40"/></name></name></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">PROF_stop<pos:position pos:line="86" pos:column="22"/></name><argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">comm_poll_normal<pos:position pos:line="86" pos:column="39"/></name></expr></argument>)<pos:position pos:line="86" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="41"/></expr_stmt>

            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><name pos:line="88" pos:column="17">num<pos:position pos:line="88" pos:column="20"/></name> <operator pos:line="88" pos:column="21">&gt;=<pos:position pos:line="88" pos:column="26"/></operator> <literal type="number" pos:line="88" pos:column="24">0<pos:position pos:line="88" pos:column="25"/></literal> <operator pos:line="88" pos:column="26">||<pos:position pos:line="88" pos:column="28"/></operator> <name pos:line="88" pos:column="29">npending<pos:position pos:line="88" pos:column="37"/></name> <operator pos:line="88" pos:column="38">&gt;<pos:position pos:line="88" pos:column="42"/></operator> <literal type="number" pos:line="88" pos:column="40">0<pos:position pos:line="88" pos:column="41"/></literal></expr>)<pos:position pos:line="88" pos:column="42"/></condition><then pos:line="88" pos:column="42">
                <block type="pseudo"><break pos:line="89" pos:column="17">break;<pos:position pos:line="89" pos:column="23"/></break></block></then></if>

            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><call><name pos:line="91" pos:column="17">ignoreErrno<pos:position pos:line="91" pos:column="28"/></name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">errno<pos:position pos:line="91" pos:column="34"/></name></expr></argument>)<pos:position pos:line="91" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="36"/></condition><then pos:line="91" pos:column="36">
                <block type="pseudo"><continue pos:line="92" pos:column="17">continue;<pos:position pos:line="92" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="94" pos:column="13">debugs<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><literal type="number" pos:line="94" pos:column="20">5<pos:position pos:line="94" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="23">DBG_CRITICAL<pos:position pos:line="94" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="37">"comm_poll: poll failure: "<pos:position pos:line="94" pos:column="64"/></literal> <operator pos:line="94" pos:column="65">&lt;&lt;<pos:position pos:line="94" pos:column="73"/></operator> <call><name pos:line="94" pos:column="68">xstrerror<pos:position pos:line="94" pos:column="77"/></name><argument_list pos:line="94" pos:column="77">()<pos:position pos:line="94" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="81"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="96" pos:column="13">assert<pos:position pos:line="96" pos:column="19"/></name><argument_list pos:line="96" pos:column="19">(<argument><expr><name pos:line="96" pos:column="20">errno<pos:position pos:line="96" pos:column="25"/></name> <operator pos:line="96" pos:column="26">!=<pos:position pos:line="96" pos:column="28"/></operator> <name pos:line="96" pos:column="29">EINVAL<pos:position pos:line="96" pos:column="35"/></name></expr></argument>)<pos:position pos:line="96" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="37"/></expr_stmt>

            <return pos:line="98" pos:column="13">return <expr><name><name pos:line="98" pos:column="20">Comm<pos:position pos:line="98" pos:column="24"/></name><operator pos:line="98" pos:column="24">::<pos:position pos:line="98" pos:column="26"/></operator><name pos:line="98" pos:column="26">COMM_ERROR<pos:position pos:line="98" pos:column="36"/></name></name></expr>;<pos:position pos:line="98" pos:column="37"/></return>

            <comment type="block" pos:line="100" pos:column="13">/* NOTREACHED */</comment>
        }<pos:position pos:line="101" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="103" pos:column="9">getCurrentTime<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">()<pos:position pos:line="103" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="105" pos:column="9">debugs<pos:position pos:line="105" pos:column="15"/></name><argument_list pos:line="105" pos:column="15">(<argument><expr><literal type="number" pos:line="105" pos:column="16">5<pos:position pos:line="105" pos:column="17"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="105" pos:column="19">num<pos:position pos:line="105" pos:column="22"/></name></expr> ?<pos:position pos:line="105" pos:column="24"/></condition><then pos:line="105" pos:column="24"> <expr><literal type="number" pos:line="105" pos:column="25">5<pos:position pos:line="105" pos:column="26"/></literal></expr> <pos:position pos:line="105" pos:column="27"/></then><else pos:line="105" pos:column="27">: <expr><literal type="number" pos:line="105" pos:column="29">8<pos:position pos:line="105" pos:column="30"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="32">"comm_poll: "<pos:position pos:line="105" pos:column="45"/></literal> <operator pos:line="105" pos:column="46">&lt;&lt;<pos:position pos:line="105" pos:column="54"/></operator> <name pos:line="105" pos:column="49">num<pos:position pos:line="105" pos:column="52"/></name> <operator pos:line="105" pos:column="53">&lt;&lt;<pos:position pos:line="105" pos:column="61"/></operator> <literal type="string" pos:line="105" pos:column="56">"+"<pos:position pos:line="105" pos:column="59"/></literal> <operator pos:line="105" pos:column="60">&lt;&lt;<pos:position pos:line="105" pos:column="68"/></operator> <name pos:line="105" pos:column="63">npending<pos:position pos:line="105" pos:column="71"/></name> <operator pos:line="105" pos:column="72">&lt;&lt;<pos:position pos:line="105" pos:column="80"/></operator> <literal type="string" pos:line="105" pos:column="75">" FDs ready"<pos:position pos:line="105" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="106" pos:column="9">statCounter<pos:position pos:line="106" pos:column="20"/></name><operator pos:line="106" pos:column="20">.<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">select_fds_hist<pos:position pos:line="106" pos:column="36"/></name><operator pos:line="106" pos:column="36">.<pos:position pos:line="106" pos:column="37"/></operator><name pos:line="106" pos:column="37">count<pos:position pos:line="106" pos:column="42"/></name></name><argument_list pos:line="106" pos:column="42">(<argument><expr><name pos:line="106" pos:column="43">num<pos:position pos:line="106" pos:column="46"/></name></expr></argument>)<pos:position pos:line="106" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>

        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">num<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">==<pos:position pos:line="108" pos:column="19"/></operator> <literal type="number" pos:line="108" pos:column="20">0<pos:position pos:line="108" pos:column="21"/></literal> <operator pos:line="108" pos:column="22">&amp;&amp;<pos:position pos:line="108" pos:column="32"/></operator> <name pos:line="108" pos:column="25">npending<pos:position pos:line="108" pos:column="33"/></name> <operator pos:line="108" pos:column="34">==<pos:position pos:line="108" pos:column="36"/></operator> <literal type="number" pos:line="108" pos:column="37">0<pos:position pos:line="108" pos:column="38"/></literal></expr>)<pos:position pos:line="108" pos:column="39"/></condition><then pos:line="108" pos:column="39">
            <block type="pseudo"><continue pos:line="109" pos:column="13">continue;<pos:position pos:line="109" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="111" pos:column="9">/* scan each socket but the accept socket. Poll this
         * more frequently to minimize losses due to the 5 connect
         * limit in SunOS */</comment>
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">PROF_start<pos:position pos:line="114" pos:column="19"/></name><argument_list pos:line="114" pos:column="19">(<argument><expr><name pos:line="114" pos:column="20">comm_handle_ready_fd<pos:position pos:line="114" pos:column="40"/></name></expr></argument>)<pos:position pos:line="114" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="42"/></expr_stmt>

        <for pos:line="116" pos:column="9">for <control pos:line="116" pos:column="13">(<init><decl><type><name pos:line="116" pos:column="14">size_t<pos:position pos:line="116" pos:column="20"/></name></type> <name pos:line="116" pos:column="21">loopIndex<pos:position pos:line="116" pos:column="30"/></name> <init pos:line="116" pos:column="31">= <expr><literal type="number" pos:line="116" pos:column="33">0<pos:position pos:line="116" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="116" pos:column="35"/></init> <condition><expr><name pos:line="116" pos:column="36">loopIndex<pos:position pos:line="116" pos:column="45"/></name> <operator pos:line="116" pos:column="46">&lt;<pos:position pos:line="116" pos:column="50"/></operator> <name pos:line="116" pos:column="48">nfds<pos:position pos:line="116" pos:column="52"/></name></expr>;<pos:position pos:line="116" pos:column="53"/></condition> <incr><expr><operator pos:line="116" pos:column="54">++<pos:position pos:line="116" pos:column="56"/></operator><name pos:line="116" pos:column="56">loopIndex<pos:position pos:line="116" pos:column="65"/></name></expr></incr>)<pos:position pos:line="116" pos:column="66"/></control> <block pos:line="116" pos:column="67">{
            <decl_stmt><decl><type><name pos:line="117" pos:column="13">fde<pos:position pos:line="117" pos:column="16"/></name> <modifier pos:line="117" pos:column="17">*<pos:position pos:line="117" pos:column="18"/></modifier></type><name pos:line="117" pos:column="18">F<pos:position pos:line="117" pos:column="19"/></name></decl>;<pos:position pos:line="117" pos:column="20"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="118" pos:column="13">int<pos:position pos:line="118" pos:column="16"/></name></type> <name pos:line="118" pos:column="17">revents<pos:position pos:line="118" pos:column="24"/></name> <init pos:line="118" pos:column="25">= <expr><name><name pos:line="118" pos:column="27">pfds<pos:position pos:line="118" pos:column="31"/></name><index pos:line="118" pos:column="31">[<expr><name pos:line="118" pos:column="32">loopIndex<pos:position pos:line="118" pos:column="41"/></name></expr>]<pos:position pos:line="118" pos:column="42"/></index></name><operator pos:line="118" pos:column="42">.<pos:position pos:line="118" pos:column="43"/></operator><name pos:line="118" pos:column="43">revents<pos:position pos:line="118" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="118" pos:column="51"/></decl_stmt>
            <expr_stmt><expr><name pos:line="119" pos:column="13">fd<pos:position pos:line="119" pos:column="15"/></name> <operator pos:line="119" pos:column="16">=<pos:position pos:line="119" pos:column="17"/></operator> <name><name pos:line="119" pos:column="18">pfds<pos:position pos:line="119" pos:column="22"/></name><index pos:line="119" pos:column="22">[<expr><name pos:line="119" pos:column="23">loopIndex<pos:position pos:line="119" pos:column="32"/></name></expr>]<pos:position pos:line="119" pos:column="33"/></index></name><operator pos:line="119" pos:column="33">.<pos:position pos:line="119" pos:column="34"/></operator><name pos:line="119" pos:column="34">fd<pos:position pos:line="119" pos:column="36"/></name></expr>;<pos:position pos:line="119" pos:column="37"/></expr_stmt>

            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><name pos:line="121" pos:column="17">fd<pos:position pos:line="121" pos:column="19"/></name> <operator pos:line="121" pos:column="20">==<pos:position pos:line="121" pos:column="22"/></operator> <operator pos:line="121" pos:column="23">-<pos:position pos:line="121" pos:column="24"/></operator><literal type="number" pos:line="121" pos:column="24">1<pos:position pos:line="121" pos:column="25"/></literal></expr>)<pos:position pos:line="121" pos:column="26"/></condition><then pos:line="121" pos:column="26">
                <block type="pseudo"><continue pos:line="122" pos:column="17">continue;<pos:position pos:line="122" pos:column="26"/></continue></block></then></if>

            <if pos:line="124" pos:column="13">if <condition pos:line="124" pos:column="16">(<expr><name><name pos:line="124" pos:column="17">fd_table<pos:position pos:line="124" pos:column="25"/></name><index pos:line="124" pos:column="25">[<expr><name pos:line="124" pos:column="26">fd<pos:position pos:line="124" pos:column="28"/></name></expr>]<pos:position pos:line="124" pos:column="29"/></index></name><operator pos:line="124" pos:column="29">.<pos:position pos:line="124" pos:column="30"/></operator><name><name pos:line="124" pos:column="30">flags<pos:position pos:line="124" pos:column="35"/></name><operator pos:line="124" pos:column="35">.<pos:position pos:line="124" pos:column="36"/></operator><name pos:line="124" pos:column="36">read_pending<pos:position pos:line="124" pos:column="48"/></name></name></expr>)<pos:position pos:line="124" pos:column="49"/></condition><then pos:line="124" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><name pos:line="125" pos:column="17">revents<pos:position pos:line="125" pos:column="24"/></name> <operator pos:line="125" pos:column="25">|=<pos:position pos:line="125" pos:column="27"/></operator> <name pos:line="125" pos:column="28">POLLIN<pos:position pos:line="125" pos:column="34"/></name></expr>;<pos:position pos:line="125" pos:column="35"/></expr_stmt></block></then></if>

            <if pos:line="127" pos:column="13">if <condition pos:line="127" pos:column="16">(<expr><name pos:line="127" pos:column="17">revents<pos:position pos:line="127" pos:column="24"/></name> <operator pos:line="127" pos:column="25">==<pos:position pos:line="127" pos:column="27"/></operator> <literal type="number" pos:line="127" pos:column="28">0<pos:position pos:line="127" pos:column="29"/></literal></expr>)<pos:position pos:line="127" pos:column="30"/></condition><then pos:line="127" pos:column="30">
                <block type="pseudo"><continue pos:line="128" pos:column="17">continue;<pos:position pos:line="128" pos:column="26"/></continue></block></then></if>

            <if pos:line="130" pos:column="13">if <condition pos:line="130" pos:column="16">(<expr><call><name pos:line="130" pos:column="17">fdIsUdpListen<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">fd<pos:position pos:line="130" pos:column="33"/></name></expr></argument>)<pos:position pos:line="130" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="35"/></condition><then pos:line="130" pos:column="35"> <block pos:line="130" pos:column="36">{
                <expr_stmt><expr><name pos:line="131" pos:column="17">calludp<pos:position pos:line="131" pos:column="24"/></name> <operator pos:line="131" pos:column="25">=<pos:position pos:line="131" pos:column="26"/></operator> <literal type="number" pos:line="131" pos:column="27">1<pos:position pos:line="131" pos:column="28"/></literal></expr>;<pos:position pos:line="131" pos:column="29"/></expr_stmt>
                <continue pos:line="132" pos:column="17">continue;<pos:position pos:line="132" pos:column="26"/></continue>
            }<pos:position pos:line="133" pos:column="14"/></block></then></if>

            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><call><name pos:line="135" pos:column="17">fdIsDns<pos:position pos:line="135" pos:column="24"/></name><argument_list pos:line="135" pos:column="24">(<argument><expr><name pos:line="135" pos:column="25">fd<pos:position pos:line="135" pos:column="27"/></name></expr></argument>)<pos:position pos:line="135" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="29"/></condition><then pos:line="135" pos:column="29"> <block pos:line="135" pos:column="30">{
                <expr_stmt><expr><name pos:line="136" pos:column="17">calldns<pos:position pos:line="136" pos:column="24"/></name> <operator pos:line="136" pos:column="25">=<pos:position pos:line="136" pos:column="26"/></operator> <literal type="number" pos:line="136" pos:column="27">1<pos:position pos:line="136" pos:column="28"/></literal></expr>;<pos:position pos:line="136" pos:column="29"/></expr_stmt>
                <continue pos:line="137" pos:column="17">continue;<pos:position pos:line="137" pos:column="26"/></continue>
            }<pos:position pos:line="138" pos:column="14"/></block></then></if>

            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><call><name pos:line="140" pos:column="17">fdIsTcpListen<pos:position pos:line="140" pos:column="30"/></name><argument_list pos:line="140" pos:column="30">(<argument><expr><name pos:line="140" pos:column="31">fd<pos:position pos:line="140" pos:column="33"/></name></expr></argument>)<pos:position pos:line="140" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="35"/></condition><then pos:line="140" pos:column="35"> <block pos:line="140" pos:column="36">{
                <expr_stmt><expr><name pos:line="141" pos:column="17">calltcp<pos:position pos:line="141" pos:column="24"/></name> <operator pos:line="141" pos:column="25">=<pos:position pos:line="141" pos:column="26"/></operator> <literal type="number" pos:line="141" pos:column="27">1<pos:position pos:line="141" pos:column="28"/></literal></expr>;<pos:position pos:line="141" pos:column="29"/></expr_stmt>
                <continue pos:line="142" pos:column="17">continue;<pos:position pos:line="142" pos:column="26"/></continue>
            }<pos:position pos:line="143" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="145" pos:column="13">F<pos:position pos:line="145" pos:column="14"/></name> <operator pos:line="145" pos:column="15">=<pos:position pos:line="145" pos:column="16"/></operator> <operator pos:line="145" pos:column="17">&amp;<pos:position pos:line="145" pos:column="22"/></operator><name><name pos:line="145" pos:column="18">fd_table<pos:position pos:line="145" pos:column="26"/></name><index pos:line="145" pos:column="26">[<expr><name pos:line="145" pos:column="27">fd<pos:position pos:line="145" pos:column="29"/></name></expr>]<pos:position pos:line="145" pos:column="30"/></index></name></expr>;<pos:position pos:line="145" pos:column="31"/></expr_stmt>

            <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><name pos:line="147" pos:column="17">revents<pos:position pos:line="147" pos:column="24"/></name> <operator pos:line="147" pos:column="25">&amp;<pos:position pos:line="147" pos:column="30"/></operator> <operator pos:line="147" pos:column="27">(<pos:position pos:line="147" pos:column="28"/></operator><name pos:line="147" pos:column="28">POLLRDNORM<pos:position pos:line="147" pos:column="38"/></name> <operator pos:line="147" pos:column="39">|<pos:position pos:line="147" pos:column="40"/></operator> <name pos:line="147" pos:column="41">POLLIN<pos:position pos:line="147" pos:column="47"/></name> <operator pos:line="147" pos:column="48">|<pos:position pos:line="147" pos:column="49"/></operator> <name pos:line="147" pos:column="50">POLLHUP<pos:position pos:line="147" pos:column="57"/></name> <operator pos:line="147" pos:column="58">|<pos:position pos:line="147" pos:column="59"/></operator> <name pos:line="147" pos:column="60">POLLERR<pos:position pos:line="147" pos:column="67"/></name><operator pos:line="147" pos:column="67">)<pos:position pos:line="147" pos:column="68"/></operator></expr>)<pos:position pos:line="147" pos:column="69"/></condition><then pos:line="147" pos:column="69"> <block pos:line="147" pos:column="70">{
                <expr_stmt><expr><call><name pos:line="148" pos:column="17">debugs<pos:position pos:line="148" pos:column="23"/></name><argument_list pos:line="148" pos:column="23">(<argument><expr><literal type="number" pos:line="148" pos:column="24">5<pos:position pos:line="148" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="148" pos:column="27">6<pos:position pos:line="148" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="30">"comm_poll: FD "<pos:position pos:line="148" pos:column="46"/></literal> <operator pos:line="148" pos:column="47">&lt;&lt;<pos:position pos:line="148" pos:column="55"/></operator> <name pos:line="148" pos:column="50">fd<pos:position pos:line="148" pos:column="52"/></name> <operator pos:line="148" pos:column="53">&lt;&lt;<pos:position pos:line="148" pos:column="61"/></operator> <literal type="string" pos:line="148" pos:column="56">" ready for reading"<pos:position pos:line="148" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="78"/></expr_stmt>

                <if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><operator pos:line="150" pos:column="21">(<pos:position pos:line="150" pos:column="22"/></operator><name pos:line="150" pos:column="22">hdl<pos:position pos:line="150" pos:column="25"/></name> <operator pos:line="150" pos:column="26">=<pos:position pos:line="150" pos:column="27"/></operator> <name><name pos:line="150" pos:column="28">F<pos:position pos:line="150" pos:column="29"/></name><operator pos:line="150" pos:column="29">-&gt;<pos:position pos:line="150" pos:column="34"/></operator><name pos:line="150" pos:column="31">read_handler<pos:position pos:line="150" pos:column="43"/></name></name><operator pos:line="150" pos:column="43">)<pos:position pos:line="150" pos:column="44"/></operator></expr>)<pos:position pos:line="150" pos:column="45"/></condition><then pos:line="150" pos:column="45"> <block pos:line="150" pos:column="46">{
                    <expr_stmt><expr><call><name pos:line="151" pos:column="21">PROF_start<pos:position pos:line="151" pos:column="31"/></name><argument_list pos:line="151" pos:column="31">(<argument><expr><name pos:line="151" pos:column="32">comm_read_handler<pos:position pos:line="151" pos:column="49"/></name></expr></argument>)<pos:position pos:line="151" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="152" pos:column="21">F<pos:position pos:line="152" pos:column="22"/></name><operator pos:line="152" pos:column="22">-&gt;<pos:position pos:line="152" pos:column="27"/></operator><name pos:line="152" pos:column="24">read_handler<pos:position pos:line="152" pos:column="36"/></name></name> <operator pos:line="152" pos:column="37">=<pos:position pos:line="152" pos:column="38"/></operator> <name pos:line="152" pos:column="39">NULL<pos:position pos:line="152" pos:column="43"/></name></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="153" pos:column="21">F<pos:position pos:line="153" pos:column="22"/></name><operator pos:line="153" pos:column="22">-&gt;<pos:position pos:line="153" pos:column="27"/></operator><name pos:line="153" pos:column="24">flags<pos:position pos:line="153" pos:column="29"/></name><operator pos:line="153" pos:column="29">.<pos:position pos:line="153" pos:column="30"/></operator><name pos:line="153" pos:column="30">read_pending<pos:position pos:line="153" pos:column="42"/></name></name> <operator pos:line="153" pos:column="43">=<pos:position pos:line="153" pos:column="44"/></operator> <literal type="boolean" pos:line="153" pos:column="45">false<pos:position pos:line="153" pos:column="50"/></literal></expr>;<pos:position pos:line="153" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="154" pos:column="21">hdl<pos:position pos:line="154" pos:column="24"/></name><argument_list pos:line="154" pos:column="24">(<argument><expr><name pos:line="154" pos:column="25">fd<pos:position pos:line="154" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="29">F<pos:position pos:line="154" pos:column="30"/></name><operator pos:line="154" pos:column="30">-&gt;<pos:position pos:line="154" pos:column="35"/></operator><name pos:line="154" pos:column="32">read_data<pos:position pos:line="154" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="43"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="155" pos:column="21">PROF_stop<pos:position pos:line="155" pos:column="30"/></name><argument_list pos:line="155" pos:column="30">(<argument><expr><name pos:line="155" pos:column="31">comm_read_handler<pos:position pos:line="155" pos:column="48"/></name></expr></argument>)<pos:position pos:line="155" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="156" pos:column="21">++<pos:position pos:line="156" pos:column="23"/></operator> <name><name pos:line="156" pos:column="24">statCounter<pos:position pos:line="156" pos:column="35"/></name><operator pos:line="156" pos:column="35">.<pos:position pos:line="156" pos:column="36"/></operator><name pos:line="156" pos:column="36">select_fds<pos:position pos:line="156" pos:column="46"/></name></name></expr>;<pos:position pos:line="156" pos:column="47"/></expr_stmt>

                    <if pos:line="158" pos:column="21">if <condition pos:line="158" pos:column="24">(<expr><name pos:line="158" pos:column="25">commCheckUdpIncoming<pos:position pos:line="158" pos:column="45"/></name></expr>)<pos:position pos:line="158" pos:column="46"/></condition><then pos:line="158" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="159" pos:column="25">comm_poll_udp_incoming<pos:position pos:line="159" pos:column="47"/></name><argument_list pos:line="159" pos:column="47">()<pos:position pos:line="159" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="50"/></expr_stmt></block></then></if>

                    <if pos:line="161" pos:column="21">if <condition pos:line="161" pos:column="24">(<expr><name pos:line="161" pos:column="25">commCheckDnsIncoming<pos:position pos:line="161" pos:column="45"/></name></expr>)<pos:position pos:line="161" pos:column="46"/></condition><then pos:line="161" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="162" pos:column="25">comm_poll_dns_incoming<pos:position pos:line="162" pos:column="47"/></name><argument_list pos:line="162" pos:column="47">()<pos:position pos:line="162" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="50"/></expr_stmt></block></then></if>

                    <if pos:line="164" pos:column="21">if <condition pos:line="164" pos:column="24">(<expr><name pos:line="164" pos:column="25">commCheckTcpIncoming<pos:position pos:line="164" pos:column="45"/></name></expr>)<pos:position pos:line="164" pos:column="46"/></condition><then pos:line="164" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="165" pos:column="25">comm_poll_tcp_incoming<pos:position pos:line="165" pos:column="47"/></name><argument_list pos:line="165" pos:column="47">()<pos:position pos:line="165" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="50"/></expr_stmt></block></then></if>
                }<pos:position pos:line="166" pos:column="18"/></block></then></if>
            }<pos:position pos:line="167" pos:column="14"/></block></then></if>

            <if pos:line="169" pos:column="13">if <condition pos:line="169" pos:column="16">(<expr><name pos:line="169" pos:column="17">revents<pos:position pos:line="169" pos:column="24"/></name> <operator pos:line="169" pos:column="25">&amp;<pos:position pos:line="169" pos:column="30"/></operator> <operator pos:line="169" pos:column="27">(<pos:position pos:line="169" pos:column="28"/></operator><name pos:line="169" pos:column="28">POLLWRNORM<pos:position pos:line="169" pos:column="38"/></name> <operator pos:line="169" pos:column="39">|<pos:position pos:line="169" pos:column="40"/></operator> <name pos:line="169" pos:column="41">POLLOUT<pos:position pos:line="169" pos:column="48"/></name> <operator pos:line="169" pos:column="49">|<pos:position pos:line="169" pos:column="50"/></operator> <name pos:line="169" pos:column="51">POLLHUP<pos:position pos:line="169" pos:column="58"/></name> <operator pos:line="169" pos:column="59">|<pos:position pos:line="169" pos:column="60"/></operator> <name pos:line="169" pos:column="61">POLLERR<pos:position pos:line="169" pos:column="68"/></name><operator pos:line="169" pos:column="68">)<pos:position pos:line="169" pos:column="69"/></operator></expr>)<pos:position pos:line="169" pos:column="70"/></condition><then pos:line="169" pos:column="70"> <block pos:line="169" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="170" pos:column="17">debugs<pos:position pos:line="170" pos:column="23"/></name><argument_list pos:line="170" pos:column="23">(<argument><expr><literal type="number" pos:line="170" pos:column="24">5<pos:position pos:line="170" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="170" pos:column="27">6<pos:position pos:line="170" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="170" pos:column="30">"comm_poll: FD "<pos:position pos:line="170" pos:column="46"/></literal> <operator pos:line="170" pos:column="47">&lt;&lt;<pos:position pos:line="170" pos:column="55"/></operator> <name pos:line="170" pos:column="50">fd<pos:position pos:line="170" pos:column="52"/></name> <operator pos:line="170" pos:column="53">&lt;&lt;<pos:position pos:line="170" pos:column="61"/></operator> <literal type="string" pos:line="170" pos:column="56">" ready for writing"<pos:position pos:line="170" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="78"/></expr_stmt>

                <if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><operator pos:line="172" pos:column="21">(<pos:position pos:line="172" pos:column="22"/></operator><name pos:line="172" pos:column="22">hdl<pos:position pos:line="172" pos:column="25"/></name> <operator pos:line="172" pos:column="26">=<pos:position pos:line="172" pos:column="27"/></operator> <name><name pos:line="172" pos:column="28">F<pos:position pos:line="172" pos:column="29"/></name><operator pos:line="172" pos:column="29">-&gt;<pos:position pos:line="172" pos:column="34"/></operator><name pos:line="172" pos:column="31">write_handler<pos:position pos:line="172" pos:column="44"/></name></name><operator pos:line="172" pos:column="44">)<pos:position pos:line="172" pos:column="45"/></operator></expr>)<pos:position pos:line="172" pos:column="46"/></condition><then pos:line="172" pos:column="46"> <block pos:line="172" pos:column="47">{
                    <expr_stmt><expr><call><name pos:line="173" pos:column="21">PROF_start<pos:position pos:line="173" pos:column="31"/></name><argument_list pos:line="173" pos:column="31">(<argument><expr><name pos:line="173" pos:column="32">comm_write_handler<pos:position pos:line="173" pos:column="50"/></name></expr></argument>)<pos:position pos:line="173" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="174" pos:column="21">F<pos:position pos:line="174" pos:column="22"/></name><operator pos:line="174" pos:column="22">-&gt;<pos:position pos:line="174" pos:column="27"/></operator><name pos:line="174" pos:column="24">write_handler<pos:position pos:line="174" pos:column="37"/></name></name> <operator pos:line="174" pos:column="38">=<pos:position pos:line="174" pos:column="39"/></operator> <name pos:line="174" pos:column="40">NULL<pos:position pos:line="174" pos:column="44"/></name></expr>;<pos:position pos:line="174" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="175" pos:column="21">hdl<pos:position pos:line="175" pos:column="24"/></name><argument_list pos:line="175" pos:column="24">(<argument><expr><name pos:line="175" pos:column="25">fd<pos:position pos:line="175" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="175" pos:column="29">F<pos:position pos:line="175" pos:column="30"/></name><operator pos:line="175" pos:column="30">-&gt;<pos:position pos:line="175" pos:column="35"/></operator><name pos:line="175" pos:column="32">write_data<pos:position pos:line="175" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="176" pos:column="21">PROF_stop<pos:position pos:line="176" pos:column="30"/></name><argument_list pos:line="176" pos:column="30">(<argument><expr><name pos:line="176" pos:column="31">comm_write_handler<pos:position pos:line="176" pos:column="49"/></name></expr></argument>)<pos:position pos:line="176" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="177" pos:column="21">++<pos:position pos:line="177" pos:column="23"/></operator> <name><name pos:line="177" pos:column="24">statCounter<pos:position pos:line="177" pos:column="35"/></name><operator pos:line="177" pos:column="35">.<pos:position pos:line="177" pos:column="36"/></operator><name pos:line="177" pos:column="36">select_fds<pos:position pos:line="177" pos:column="46"/></name></name></expr>;<pos:position pos:line="177" pos:column="47"/></expr_stmt>

                    <if pos:line="179" pos:column="21">if <condition pos:line="179" pos:column="24">(<expr><name pos:line="179" pos:column="25">commCheckUdpIncoming<pos:position pos:line="179" pos:column="45"/></name></expr>)<pos:position pos:line="179" pos:column="46"/></condition><then pos:line="179" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="25">comm_poll_udp_incoming<pos:position pos:line="180" pos:column="47"/></name><argument_list pos:line="180" pos:column="47">()<pos:position pos:line="180" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="50"/></expr_stmt></block></then></if>

                    <if pos:line="182" pos:column="21">if <condition pos:line="182" pos:column="24">(<expr><name pos:line="182" pos:column="25">commCheckDnsIncoming<pos:position pos:line="182" pos:column="45"/></name></expr>)<pos:position pos:line="182" pos:column="46"/></condition><then pos:line="182" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="183" pos:column="25">comm_poll_dns_incoming<pos:position pos:line="183" pos:column="47"/></name><argument_list pos:line="183" pos:column="47">()<pos:position pos:line="183" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="50"/></expr_stmt></block></then></if>

                    <if pos:line="185" pos:column="21">if <condition pos:line="185" pos:column="24">(<expr><name pos:line="185" pos:column="25">commCheckTcpIncoming<pos:position pos:line="185" pos:column="45"/></name></expr>)<pos:position pos:line="185" pos:column="46"/></condition><then pos:line="185" pos:column="46">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="25">comm_poll_tcp_incoming<pos:position pos:line="186" pos:column="47"/></name><argument_list pos:line="186" pos:column="47">()<pos:position pos:line="186" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="50"/></expr_stmt></block></then></if>
                }<pos:position pos:line="187" pos:column="18"/></block></then></if>
            }<pos:position pos:line="188" pos:column="14"/></block></then></if>

            <if pos:line="190" pos:column="13">if <condition pos:line="190" pos:column="16">(<expr><name pos:line="190" pos:column="17">revents<pos:position pos:line="190" pos:column="24"/></name> <operator pos:line="190" pos:column="25">&amp;<pos:position pos:line="190" pos:column="30"/></operator> <name pos:line="190" pos:column="27">POLLNVAL<pos:position pos:line="190" pos:column="35"/></name></expr>)<pos:position pos:line="190" pos:column="36"/></condition><then pos:line="190" pos:column="36"> <block pos:line="190" pos:column="37">{
                <decl_stmt><decl><type><name><name pos:line="191" pos:column="17">AsyncCall<pos:position pos:line="191" pos:column="26"/></name><operator pos:line="191" pos:column="26">::<pos:position pos:line="191" pos:column="28"/></operator><name pos:line="191" pos:column="28">Pointer<pos:position pos:line="191" pos:column="35"/></name></name></type> <name pos:line="191" pos:column="36">ch<pos:position pos:line="191" pos:column="38"/></name></decl>;<pos:position pos:line="191" pos:column="39"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="192" pos:column="17">debugs<pos:position pos:line="192" pos:column="23"/></name><argument_list pos:line="192" pos:column="23">(<argument><expr><literal type="number" pos:line="192" pos:column="24">5<pos:position pos:line="192" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="192" pos:column="27">DBG_CRITICAL<pos:position pos:line="192" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="41">"WARNING: FD "<pos:position pos:line="192" pos:column="55"/></literal> <operator pos:line="192" pos:column="56">&lt;&lt;<pos:position pos:line="192" pos:column="64"/></operator> <name pos:line="192" pos:column="59">fd<pos:position pos:line="192" pos:column="61"/></name> <operator pos:line="192" pos:column="62">&lt;&lt;<pos:position pos:line="192" pos:column="70"/></operator> <literal type="string" pos:line="192" pos:column="65">" has handlers, but it's invalid."<pos:position pos:line="192" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="101"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="193" pos:column="17">debugs<pos:position pos:line="193" pos:column="23"/></name><argument_list pos:line="193" pos:column="23">(<argument><expr><literal type="number" pos:line="193" pos:column="24">5<pos:position pos:line="193" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="27">DBG_CRITICAL<pos:position pos:line="193" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="41">"FD "<pos:position pos:line="193" pos:column="46"/></literal> <operator pos:line="193" pos:column="47">&lt;&lt;<pos:position pos:line="193" pos:column="55"/></operator> <name pos:line="193" pos:column="50">fd<pos:position pos:line="193" pos:column="52"/></name> <operator pos:line="193" pos:column="53">&lt;&lt;<pos:position pos:line="193" pos:column="61"/></operator> <literal type="string" pos:line="193" pos:column="56">" is a "<pos:position pos:line="193" pos:column="64"/></literal> <operator pos:line="193" pos:column="65">&lt;&lt;<pos:position pos:line="193" pos:column="73"/></operator> <name><name pos:line="193" pos:column="68">fdTypeStr<pos:position pos:line="193" pos:column="77"/></name><index pos:line="193" pos:column="77">[<expr><name><name pos:line="193" pos:column="78">F<pos:position pos:line="193" pos:column="79"/></name><operator pos:line="193" pos:column="79">-&gt;<pos:position pos:line="193" pos:column="84"/></operator><name pos:line="193" pos:column="81">type<pos:position pos:line="193" pos:column="85"/></name></name></expr>]<pos:position pos:line="193" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="193" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="88"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="194" pos:column="17">debugs<pos:position pos:line="194" pos:column="23"/></name><argument_list pos:line="194" pos:column="23">(<argument><expr><literal type="number" pos:line="194" pos:column="24">5<pos:position pos:line="194" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="194" pos:column="27">DBG_CRITICAL<pos:position pos:line="194" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="41">"--&gt; "<pos:position pos:line="194" pos:column="50"/></literal> <operator pos:line="194" pos:column="48">&lt;&lt;<pos:position pos:line="194" pos:column="56"/></operator> <name><name pos:line="194" pos:column="51">F<pos:position pos:line="194" pos:column="52"/></name><operator pos:line="194" pos:column="52">-&gt;<pos:position pos:line="194" pos:column="57"/></operator><name pos:line="194" pos:column="54">desc<pos:position pos:line="194" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="194" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="195" pos:column="17">debugs<pos:position pos:line="195" pos:column="23"/></name><argument_list pos:line="195" pos:column="23">(<argument><expr><literal type="number" pos:line="195" pos:column="24">5<pos:position pos:line="195" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="195" pos:column="27">DBG_CRITICAL<pos:position pos:line="195" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="41">"tmout:"<pos:position pos:line="195" pos:column="49"/></literal> <operator pos:line="195" pos:column="50">&lt;&lt;<pos:position pos:line="195" pos:column="58"/></operator> <name><name pos:line="195" pos:column="53">F<pos:position pos:line="195" pos:column="54"/></name><operator pos:line="195" pos:column="54">-&gt;<pos:position pos:line="195" pos:column="59"/></operator><name pos:line="195" pos:column="56">timeoutHandler<pos:position pos:line="195" pos:column="70"/></name></name> <operator pos:line="195" pos:column="71">&lt;&lt;<pos:position pos:line="195" pos:column="79"/></operator> <literal type="string" pos:line="195" pos:column="74">"read:"<pos:position pos:line="195" pos:column="81"/></literal> <operator pos:line="195" pos:column="82">&lt;&lt;<pos:position pos:line="195" pos:column="90"/></operator>
                       <name><name pos:line="196" pos:column="24">F<pos:position pos:line="196" pos:column="25"/></name><operator pos:line="196" pos:column="25">-&gt;<pos:position pos:line="196" pos:column="30"/></operator><name pos:line="196" pos:column="27">read_handler<pos:position pos:line="196" pos:column="39"/></name></name> <operator pos:line="196" pos:column="40">&lt;&lt;<pos:position pos:line="196" pos:column="48"/></operator> <literal type="string" pos:line="196" pos:column="43">" write:"<pos:position pos:line="196" pos:column="52"/></literal> <operator pos:line="196" pos:column="53">&lt;&lt;<pos:position pos:line="196" pos:column="61"/></operator> <name><name pos:line="196" pos:column="56">F<pos:position pos:line="196" pos:column="57"/></name><operator pos:line="196" pos:column="57">-&gt;<pos:position pos:line="196" pos:column="62"/></operator><name pos:line="196" pos:column="59">write_handler<pos:position pos:line="196" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="196" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="74"/></expr_stmt>

                <for pos:line="198" pos:column="17">for <control pos:line="198" pos:column="21">(<init><expr><name pos:line="198" pos:column="22">ch<pos:position pos:line="198" pos:column="24"/></name> <operator pos:line="198" pos:column="25">=<pos:position pos:line="198" pos:column="26"/></operator> <name><name pos:line="198" pos:column="27">F<pos:position pos:line="198" pos:column="28"/></name><operator pos:line="198" pos:column="28">-&gt;<pos:position pos:line="198" pos:column="33"/></operator><name pos:line="198" pos:column="30">closeHandler<pos:position pos:line="198" pos:column="42"/></name></name></expr>;<pos:position pos:line="198" pos:column="43"/></init> <condition><expr><name pos:line="198" pos:column="44">ch<pos:position pos:line="198" pos:column="46"/></name> <operator pos:line="198" pos:column="47">!=<pos:position pos:line="198" pos:column="49"/></operator> <name pos:line="198" pos:column="50">NULL<pos:position pos:line="198" pos:column="54"/></name></expr>;<pos:position pos:line="198" pos:column="55"/></condition> <incr><expr><name pos:line="198" pos:column="56">ch<pos:position pos:line="198" pos:column="58"/></name> <operator pos:line="198" pos:column="59">=<pos:position pos:line="198" pos:column="60"/></operator> <call><name><name pos:line="198" pos:column="61">ch<pos:position pos:line="198" pos:column="63"/></name><operator pos:line="198" pos:column="63">-&gt;<pos:position pos:line="198" pos:column="68"/></operator><name pos:line="198" pos:column="65">Next<pos:position pos:line="198" pos:column="69"/></name></name><argument_list pos:line="198" pos:column="69">()<pos:position pos:line="198" pos:column="71"/></argument_list></call></expr></incr>)<pos:position pos:line="198" pos:column="72"/></control>
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="199" pos:column="21">debugs<pos:position pos:line="199" pos:column="27"/></name><argument_list pos:line="199" pos:column="27">(<argument><expr><literal type="number" pos:line="199" pos:column="28">5<pos:position pos:line="199" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="31">DBG_CRITICAL<pos:position pos:line="199" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="45">" close handler: "<pos:position pos:line="199" pos:column="63"/></literal> <operator pos:line="199" pos:column="64">&lt;&lt;<pos:position pos:line="199" pos:column="72"/></operator> <name pos:line="199" pos:column="67">ch<pos:position pos:line="199" pos:column="69"/></name></expr></argument>)<pos:position pos:line="199" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="71"/></expr_stmt></block></for>

                <if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><name><name pos:line="201" pos:column="21">F<pos:position pos:line="201" pos:column="22"/></name><operator pos:line="201" pos:column="22">-&gt;<pos:position pos:line="201" pos:column="27"/></operator><name pos:line="201" pos:column="24">closeHandler<pos:position pos:line="201" pos:column="36"/></name></name> <operator pos:line="201" pos:column="37">!=<pos:position pos:line="201" pos:column="39"/></operator> <name pos:line="201" pos:column="40">NULL<pos:position pos:line="201" pos:column="44"/></name></expr>)<pos:position pos:line="201" pos:column="45"/></condition><then pos:line="201" pos:column="45"> <block pos:line="201" pos:column="46">{
                    <expr_stmt><expr><call><name pos:line="202" pos:column="21">commCallCloseHandlers<pos:position pos:line="202" pos:column="42"/></name><argument_list pos:line="202" pos:column="42">(<argument><expr><name pos:line="202" pos:column="43">fd<pos:position pos:line="202" pos:column="45"/></name></expr></argument>)<pos:position pos:line="202" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="203" pos:column="18"/></block></then> <elseif pos:line="203" pos:column="19">else <if pos:line="203" pos:column="24">if <condition pos:line="203" pos:column="27">(<expr><name><name pos:line="203" pos:column="28">F<pos:position pos:line="203" pos:column="29"/></name><operator pos:line="203" pos:column="29">-&gt;<pos:position pos:line="203" pos:column="34"/></operator><name pos:line="203" pos:column="31">timeoutHandler<pos:position pos:line="203" pos:column="45"/></name></name> <operator pos:line="203" pos:column="46">!=<pos:position pos:line="203" pos:column="48"/></operator> <name pos:line="203" pos:column="49">NULL<pos:position pos:line="203" pos:column="53"/></name></expr>)<pos:position pos:line="203" pos:column="54"/></condition><then pos:line="203" pos:column="54"> <block pos:line="203" pos:column="55">{
                    <expr_stmt><expr><call><name pos:line="204" pos:column="21">debugs<pos:position pos:line="204" pos:column="27"/></name><argument_list pos:line="204" pos:column="27">(<argument><expr><literal type="number" pos:line="204" pos:column="28">5<pos:position pos:line="204" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="204" pos:column="31">DBG_CRITICAL<pos:position pos:line="204" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="45">"comm_poll: Calling Timeout Handler"<pos:position pos:line="204" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="83"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="205" pos:column="21">ScheduleCallHere<pos:position pos:line="205" pos:column="37"/></name><argument_list pos:line="205" pos:column="37">(<argument><expr><name><name pos:line="205" pos:column="38">F<pos:position pos:line="205" pos:column="39"/></name><operator pos:line="205" pos:column="39">-&gt;<pos:position pos:line="205" pos:column="44"/></operator><name pos:line="205" pos:column="41">timeoutHandler<pos:position pos:line="205" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="205" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="206" pos:column="18"/></block></then></if></elseif></if>

                <expr_stmt><expr><name><name pos:line="208" pos:column="17">F<pos:position pos:line="208" pos:column="18"/></name><operator pos:line="208" pos:column="18">-&gt;<pos:position pos:line="208" pos:column="23"/></operator><name pos:line="208" pos:column="20">closeHandler<pos:position pos:line="208" pos:column="32"/></name></name> <operator pos:line="208" pos:column="33">=<pos:position pos:line="208" pos:column="34"/></operator> <name pos:line="208" pos:column="35">NULL<pos:position pos:line="208" pos:column="39"/></name></expr>;<pos:position pos:line="208" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="209" pos:column="17">F<pos:position pos:line="209" pos:column="18"/></name><operator pos:line="209" pos:column="18">-&gt;<pos:position pos:line="209" pos:column="23"/></operator><name pos:line="209" pos:column="20">timeoutHandler<pos:position pos:line="209" pos:column="34"/></name></name> <operator pos:line="209" pos:column="35">=<pos:position pos:line="209" pos:column="36"/></operator> <name pos:line="209" pos:column="37">NULL<pos:position pos:line="209" pos:column="41"/></name></expr>;<pos:position pos:line="209" pos:column="42"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="210" pos:column="17">F<pos:position pos:line="210" pos:column="18"/></name><operator pos:line="210" pos:column="18">-&gt;<pos:position pos:line="210" pos:column="23"/></operator><name pos:line="210" pos:column="20">read_handler<pos:position pos:line="210" pos:column="32"/></name></name> <operator pos:line="210" pos:column="33">=<pos:position pos:line="210" pos:column="34"/></operator> <name pos:line="210" pos:column="35">NULL<pos:position pos:line="210" pos:column="39"/></name></expr>;<pos:position pos:line="210" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="211" pos:column="17">F<pos:position pos:line="211" pos:column="18"/></name><operator pos:line="211" pos:column="18">-&gt;<pos:position pos:line="211" pos:column="23"/></operator><name pos:line="211" pos:column="20">write_handler<pos:position pos:line="211" pos:column="33"/></name></name> <operator pos:line="211" pos:column="34">=<pos:position pos:line="211" pos:column="35"/></operator> <name pos:line="211" pos:column="36">NULL<pos:position pos:line="211" pos:column="40"/></name></expr>;<pos:position pos:line="211" pos:column="41"/></expr_stmt>

                <if pos:line="213" pos:column="17">if <condition pos:line="213" pos:column="20">(<expr><name><name pos:line="213" pos:column="21">F<pos:position pos:line="213" pos:column="22"/></name><operator pos:line="213" pos:column="22">-&gt;<pos:position pos:line="213" pos:column="27"/></operator><name pos:line="213" pos:column="24">flags<pos:position pos:line="213" pos:column="29"/></name><operator pos:line="213" pos:column="29">.<pos:position pos:line="213" pos:column="30"/></operator><name pos:line="213" pos:column="30">open<pos:position pos:line="213" pos:column="34"/></name></name></expr>)<pos:position pos:line="213" pos:column="35"/></condition><then pos:line="213" pos:column="35">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="214" pos:column="21">fd_close<pos:position pos:line="214" pos:column="29"/></name><argument_list pos:line="214" pos:column="29">(<argument><expr><name pos:line="214" pos:column="30">fd<pos:position pos:line="214" pos:column="32"/></name></expr></argument>)<pos:position pos:line="214" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="34"/></expr_stmt></block></then></if>
            }<pos:position pos:line="215" pos:column="14"/></block></then></if>
        }<pos:position pos:line="216" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="218" pos:column="9">PROF_stop<pos:position pos:line="218" pos:column="18"/></name><argument_list pos:line="218" pos:column="18">(<argument><expr><name pos:line="218" pos:column="19">comm_handle_ready_fd<pos:position pos:line="218" pos:column="39"/></name></expr></argument>)<pos:position pos:line="218" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="41"/></expr_stmt>

        <if pos:line="220" pos:column="9">if <condition pos:line="220" pos:column="12">(<expr><name pos:line="220" pos:column="13">calludp<pos:position pos:line="220" pos:column="20"/></name></expr>)<pos:position pos:line="220" pos:column="21"/></condition><then pos:line="220" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="221" pos:column="13">comm_poll_udp_incoming<pos:position pos:line="221" pos:column="35"/></name><argument_list pos:line="221" pos:column="35">()<pos:position pos:line="221" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="38"/></expr_stmt></block></then></if>

        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name pos:line="223" pos:column="13">calldns<pos:position pos:line="223" pos:column="20"/></name></expr>)<pos:position pos:line="223" pos:column="21"/></condition><then pos:line="223" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="224" pos:column="13">comm_poll_dns_incoming<pos:position pos:line="224" pos:column="35"/></name><argument_list pos:line="224" pos:column="35">()<pos:position pos:line="224" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="38"/></expr_stmt></block></then></if>

        <if pos:line="226" pos:column="9">if <condition pos:line="226" pos:column="12">(<expr><name pos:line="226" pos:column="13">calltcp<pos:position pos:line="226" pos:column="20"/></name></expr>)<pos:position pos:line="226" pos:column="21"/></condition><then pos:line="226" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="227" pos:column="13">comm_poll_tcp_incoming<pos:position pos:line="227" pos:column="35"/></name><argument_list pos:line="227" pos:column="35">()<pos:position pos:line="227" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="38"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="229" pos:column="9">getCurrentTime<pos:position pos:line="229" pos:column="23"/></name><argument_list pos:line="229" pos:column="23">()<pos:position pos:line="229" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="231" pos:column="9">statCounter<pos:position pos:line="231" pos:column="20"/></name><operator pos:line="231" pos:column="20">.<pos:position pos:line="231" pos:column="21"/></operator><name pos:line="231" pos:column="21">select_time<pos:position pos:line="231" pos:column="32"/></name></name> <operator pos:line="231" pos:column="33">+=<pos:position pos:line="231" pos:column="35"/></operator> <operator pos:line="231" pos:column="36">(<pos:position pos:line="231" pos:column="37"/></operator><name pos:line="231" pos:column="37">current_dtime<pos:position pos:line="231" pos:column="50"/></name> <operator pos:line="231" pos:column="51">-<pos:position pos:line="231" pos:column="52"/></operator> <name pos:line="231" pos:column="53">start<pos:position pos:line="231" pos:column="58"/></name><operator pos:line="231" pos:column="58">)<pos:position pos:line="231" pos:column="59"/></operator></expr>;<pos:position pos:line="231" pos:column="60"/></expr_stmt>

        <return pos:line="233" pos:column="9">return <expr><name><name pos:line="233" pos:column="16">Comm<pos:position pos:line="233" pos:column="20"/></name><operator pos:line="233" pos:column="20">::<pos:position pos:line="233" pos:column="22"/></operator><name pos:line="233" pos:column="22">OK<pos:position pos:line="233" pos:column="24"/></name></name></expr>;<pos:position pos:line="233" pos:column="25"/></return>
    }<pos:position pos:line="234" pos:column="6"/></block> while <condition pos:line="234" pos:column="13">(<expr><name pos:line="234" pos:column="14">timeout<pos:position pos:line="234" pos:column="21"/></name> <operator pos:line="234" pos:column="22">&gt;<pos:position pos:line="234" pos:column="26"/></operator> <name pos:line="234" pos:column="24">current_dtime<pos:position pos:line="234" pos:column="37"/></name></expr>)<pos:position pos:line="234" pos:column="38"/></condition>;<pos:position pos:line="234" pos:column="39"/></do>

    <expr_stmt><expr><call><name pos:line="236" pos:column="5">debugs<pos:position pos:line="236" pos:column="11"/></name><argument_list pos:line="236" pos:column="11">(<argument><expr><literal type="number" pos:line="236" pos:column="12">5<pos:position pos:line="236" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="236" pos:column="15">8<pos:position pos:line="236" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="18">"comm_poll: time out: "<pos:position pos:line="236" pos:column="41"/></literal> <operator pos:line="236" pos:column="42">&lt;&lt;<pos:position pos:line="236" pos:column="50"/></operator> <name pos:line="236" pos:column="45">squid_curtime<pos:position pos:line="236" pos:column="58"/></name> <operator pos:line="236" pos:column="59">&lt;&lt;<pos:position pos:line="236" pos:column="67"/></operator> <literal type="string" pos:line="236" pos:column="62">"."<pos:position pos:line="236" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="67"/></expr_stmt>

    <return pos:line="238" pos:column="5">return <expr><name><name pos:line="238" pos:column="12">Comm<pos:position pos:line="238" pos:column="16"/></name><operator pos:line="238" pos:column="16">::<pos:position pos:line="238" pos:column="18"/></operator><name pos:line="238" pos:column="18">TIMEOUT<pos:position pos:line="238" pos:column="25"/></name></name></expr>;<pos:position pos:line="238" pos:column="26"/></return>
}<pos:position pos:line="239" pos:column="2"/></block></function></unit>

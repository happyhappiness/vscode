<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6048_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AsyncCallQueue<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">fire<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">bool<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">made<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">theHead<pos:position pos:line="4" pos:column="30"/></name> <operator pos:line="4" pos:column="31">!=<pos:position pos:line="4" pos:column="33"/></operator> <name pos:line="4" pos:column="34">NULL<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><name pos:line="5" pos:column="12">theHead<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">fireNext<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">()<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt></block></while>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">made<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

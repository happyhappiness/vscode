<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3092_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">startPinnedConnectionMonitoring<pos:position pos:line="2" pos:column="47"/></name></name><parameter_list pos:line="2" pos:column="47">()<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">pinning<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">readHandler<pos:position pos:line="4" pos:column="28"/></name></name> <operator pos:line="4" pos:column="29">!=<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="5" pos:column="17">// already monitoring</comment>

    <typedef pos:line="7" pos:column="5">typedef <type><name><name pos:line="7" pos:column="13">CommCbMemFunT<pos:position pos:line="7" pos:column="26"/></name><argument_list type="generic" pos:line="7" pos:column="26">&lt;<argument><expr><name pos:line="7" pos:column="27">ConnStateData<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">CommIoCbParams<pos:position pos:line="7" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="60"/></argument_list></name></type> <name pos:line="7" pos:column="58">Dialer<pos:position pos:line="7" pos:column="64"/></name>;<pos:position pos:line="7" pos:column="65"/></typedef>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">pinning<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">readHandler<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <call><name pos:line="8" pos:column="27">JobCallback<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="number" pos:line="8" pos:column="39">33<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="43">3<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="9" pos:column="39">Dialer<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">this<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="53">ConnStateData<pos:position pos:line="9" pos:column="66"/></name><operator pos:line="9" pos:column="66">::<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="68">clientPinnedConnectionRead<pos:position pos:line="9" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">Comm<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">::<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">Read<pos:position pos:line="10" pos:column="15"/></name></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name><name pos:line="10" pos:column="16">pinning<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">serverConnection<pos:position pos:line="10" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="42">pinning<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">.<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">readHandler<pos:position pos:line="10" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

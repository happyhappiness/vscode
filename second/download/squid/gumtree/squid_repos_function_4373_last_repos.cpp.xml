<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4373_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">Valid_Global_Groups<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">UserName<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">Groups<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">result<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">WCHAR<pos:position pos:line="5" pos:column="10"/></name></type> <name><name pos:line="5" pos:column="11">wszUserName<pos:position pos:line="5" pos:column="22"/></name><index pos:line="5" pos:column="22">[<expr><name pos:line="5" pos:column="23">UNLEN<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">+<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="31">1<pos:position pos:line="5" pos:column="32"/></literal></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>   <comment type="line" pos:line="5" pos:column="37">// Unicode user name</comment>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">WCHAR<pos:position pos:line="7" pos:column="10"/></name></type> <name><name pos:line="7" pos:column="11">wszLocalDomain<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><name pos:line="7" pos:column="26">DNLEN<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">1<pos:position pos:line="7" pos:column="35"/></literal></expr>]<pos:position pos:line="7" pos:column="36"/></index></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>    <comment type="line" pos:line="7" pos:column="41">// Unicode Local Domain</comment>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">WCHAR<pos:position pos:line="9" pos:column="10"/></name></type> <name><name pos:line="9" pos:column="11">wszUserDomain<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><name pos:line="9" pos:column="25">DNLEN<pos:position pos:line="9" pos:column="30"/></name> <operator pos:line="9" pos:column="31">+<pos:position pos:line="9" pos:column="32"/></operator> <literal type="number" pos:line="9" pos:column="33">1<pos:position pos:line="9" pos:column="34"/></literal></expr>]<pos:position pos:line="9" pos:column="35"/></index></name></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt> <comment type="line" pos:line="9" pos:column="37">// Unicode User Domain</comment>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">NTDomain<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><name pos:line="11" pos:column="19">DNLEN<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">+<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">UNLEN<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">+<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="35">2<pos:position pos:line="11" pos:column="36"/></literal></expr>]<pos:position pos:line="11" pos:column="37"/></index></name></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">domain_qualify<pos:position pos:line="12" pos:column="25"/></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">User<pos:position pos:line="13" pos:column="14"/></name><index pos:line="13" pos:column="14">[<expr><name pos:line="13" pos:column="15">UNLEN<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">+<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr>]<pos:position pos:line="13" pos:column="25"/></index></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">size_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">j<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">LPWSTR<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">LclDCptr<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">LPWSTR<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">UsrDCptr<pos:position pos:line="17" pos:column="20"/></name> <init pos:line="17" pos:column="21">= <expr><name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">LPGROUP_USERS_INFO_0<pos:position pos:line="18" pos:column="25"/></name></type> <name pos:line="18" pos:column="26">pUsrBuf<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><name pos:line="18" pos:column="36">NULL<pos:position pos:line="18" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">LPGROUP_USERS_INFO_0<pos:position pos:line="19" pos:column="25"/></name></type> <name pos:line="19" pos:column="26">pTmpBuf<pos:position pos:line="19" pos:column="33"/></name></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">LPSERVER_INFO_101<pos:position pos:line="20" pos:column="22"/></name></type> <name pos:line="20" pos:column="23">pSrvBuf<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><name pos:line="20" pos:column="33">NULL<pos:position pos:line="20" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">DWORD<pos:position pos:line="21" pos:column="10"/></name></type> <name pos:line="21" pos:column="11">dwLevel<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><literal type="number" pos:line="21" pos:column="21">0<pos:position pos:line="21" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">DWORD<pos:position pos:line="22" pos:column="10"/></name></type> <name pos:line="22" pos:column="11">dwPrefMaxLen<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><operator pos:line="22" pos:column="26">-<pos:position pos:line="22" pos:column="27"/></operator><literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">DWORD<pos:position pos:line="23" pos:column="10"/></name></type> <name pos:line="23" pos:column="11">dwEntriesRead<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">DWORD<pos:position pos:line="24" pos:column="10"/></name></type> <name pos:line="24" pos:column="11">dwTotalEntries<pos:position pos:line="24" pos:column="25"/></name> <init pos:line="24" pos:column="26">= <expr><literal type="number" pos:line="24" pos:column="28">0<pos:position pos:line="24" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">NET_API_STATUS<pos:position pos:line="25" pos:column="19"/></name></type> <name pos:line="25" pos:column="20">nStatus<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">DWORD<pos:position pos:line="26" pos:column="10"/></name></type> <name pos:line="26" pos:column="11">i<pos:position pos:line="26" pos:column="12"/></name></decl>;<pos:position pos:line="26" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">DWORD<pos:position pos:line="27" pos:column="10"/></name></type> <name pos:line="27" pos:column="11">dwTotalCount<pos:position pos:line="27" pos:column="23"/></name> <init pos:line="27" pos:column="24">= <expr><literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">strncpy<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">NTDomain<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">UserName<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="33">sizeof<argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">NTDomain<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>

    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init><expr><name pos:line="31" pos:column="10">j<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></init> <condition><expr><name pos:line="31" pos:column="17">j<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&lt;<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="21">strlen<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">NTV_VALID_DOMAIN_SEPARATOR<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></condition> <incr><expr><operator pos:line="31" pos:column="57">++<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">j<pos:position pos:line="31" pos:column="60"/></name></expr></incr>)<pos:position pos:line="31" pos:column="61"/></control> <block pos:line="31" pos:column="62">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">domain_qualify<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">=<pos:position pos:line="32" pos:column="30"/></operator> <call><name pos:line="32" pos:column="31">strchr<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">NTDomain<pos:position pos:line="32" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="48">NTV_VALID_DOMAIN_SEPARATOR<pos:position pos:line="32" pos:column="74"/></name><index pos:line="32" pos:column="74">[<expr><name pos:line="32" pos:column="75">j<pos:position pos:line="32" pos:column="76"/></name></expr>]<pos:position pos:line="32" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call><operator pos:line="32" pos:column="78">)<pos:position pos:line="32" pos:column="79"/></operator> <operator pos:line="32" pos:column="80">!=<pos:position pos:line="32" pos:column="82"/></operator> <name pos:line="32" pos:column="83">NULL<pos:position pos:line="32" pos:column="87"/></name></expr>)<pos:position pos:line="32" pos:column="88"/></condition><then pos:line="32" pos:column="88">
            <block type="pseudo"><break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></for>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">domain_qualify<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">==<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="27">NULL<pos:position pos:line="35" pos:column="31"/></name></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32"> <block pos:line="35" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">strcpy<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">User<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="22">NTDomain<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">strcpy<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name pos:line="37" pos:column="16">NTDomain<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="26">DefaultDomain<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then> <else pos:line="38" pos:column="7">else <block pos:line="38" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">strcpy<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">User<pos:position pos:line="39" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="22">domain_qualify<pos:position pos:line="39" pos:column="36"/></name> <operator pos:line="39" pos:column="37">+<pos:position pos:line="39" pos:column="38"/></operator> <literal type="number" pos:line="39" pos:column="39">1<pos:position pos:line="39" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">domain_qualify<pos:position pos:line="40" pos:column="23"/></name><index pos:line="40" pos:column="23">[<expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr>]<pos:position pos:line="40" pos:column="26"/></index></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <literal type="char" pos:line="40" pos:column="29">'\0'<pos:position pos:line="40" pos:column="33"/></literal></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">strlwr<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">NTDomain<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">debug<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><literal type="string" pos:line="44" pos:column="11">"Valid_Global_Groups: checking group membership of '%s\\%s'.\n"<pos:position pos:line="44" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="76">NTDomain<pos:position pos:line="44" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="86">User<pos:position pos:line="44" pos:column="90"/></name></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>

    <comment type="block" pos:line="46" pos:column="5">/* Convert ANSI User Name and Group to Unicode */</comment>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">MultiByteToWideChar<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">CP_ACP<pos:position pos:line="48" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="33">0<pos:position pos:line="48" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="36">User<pos:position pos:line="48" pos:column="40"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="49" pos:column="25">strlen<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">User<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call> <operator pos:line="49" pos:column="38">+<pos:position pos:line="49" pos:column="39"/></operator> <literal type="number" pos:line="49" pos:column="40">1<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">wszUserName<pos:position pos:line="49" pos:column="54"/></name></expr></argument>,
                        <argument><expr><sizeof pos:line="50" pos:column="25">sizeof<argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">wszUserName<pos:position pos:line="50" pos:column="43"/></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></sizeof> <operator pos:line="50" pos:column="45">/<pos:position pos:line="50" pos:column="46"/></operator> <sizeof pos:line="50" pos:column="47">sizeof<argument_list pos:line="50" pos:column="53">(<argument><expr><name><name pos:line="50" pos:column="54">wszUserName<pos:position pos:line="50" pos:column="65"/></name><index pos:line="50" pos:column="65">[<expr><literal type="number" pos:line="50" pos:column="66">0<pos:position pos:line="50" pos:column="67"/></literal></expr>]<pos:position pos:line="50" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">MultiByteToWideChar<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">CP_ACP<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="33">0<pos:position pos:line="51" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="36">machinedomain<pos:position pos:line="51" pos:column="49"/></name></expr></argument>,
                        <argument><expr><call><name pos:line="52" pos:column="25">strlen<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">machinedomain<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call> <operator pos:line="52" pos:column="47">+<pos:position pos:line="52" pos:column="48"/></operator> <literal type="number" pos:line="52" pos:column="49">1<pos:position pos:line="52" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="52">wszLocalDomain<pos:position pos:line="52" pos:column="66"/></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="68">sizeof<argument_list pos:line="52" pos:column="74">(<argument><expr><name pos:line="52" pos:column="75">wszLocalDomain<pos:position pos:line="52" pos:column="89"/></name></expr></argument>)<pos:position pos:line="52" pos:column="90"/></argument_list></sizeof> <operator pos:line="52" pos:column="91">/<pos:position pos:line="52" pos:column="92"/></operator> <sizeof pos:line="52" pos:column="93">sizeof<argument_list pos:line="52" pos:column="99">(<argument><expr><name><name pos:line="52" pos:column="100">wszLocalDomain<pos:position pos:line="52" pos:column="114"/></name><index pos:line="52" pos:column="114">[<expr><literal type="number" pos:line="52" pos:column="115">0<pos:position pos:line="52" pos:column="116"/></literal></expr>]<pos:position pos:line="52" pos:column="117"/></index></name></expr></argument>)<pos:position pos:line="52" pos:column="118"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="120"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* Call the NetServerGetInfo function for local computer, specifying level 101. */</comment>
    <expr_stmt><expr><name pos:line="55" pos:column="5">dwLevel<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <literal type="number" pos:line="55" pos:column="15">101<pos:position pos:line="55" pos:column="18"/></literal></expr>;<pos:position pos:line="55" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">nStatus<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">NetServerGetInfo<pos:position pos:line="56" pos:column="31"/></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">NULL<pos:position pos:line="56" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="38">dwLevel<pos:position pos:line="56" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="47">(<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="48">LPBYTE<pos:position pos:line="56" pos:column="54"/></name> <operator pos:line="56" pos:column="55">*<pos:position pos:line="56" pos:column="56"/></operator><operator pos:line="56" pos:column="56">)<pos:position pos:line="56" pos:column="57"/></operator> <operator pos:line="56" pos:column="58">&amp;<pos:position pos:line="56" pos:column="63"/></operator> <name pos:line="56" pos:column="60">pSrvBuf<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">nStatus<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">==<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">NERR_Success<pos:position pos:line="58" pos:column="32"/></name></expr>)<pos:position pos:line="58" pos:column="33"/></condition><then pos:line="58" pos:column="33"> <block pos:line="58" pos:column="34">{
        <comment type="block" pos:line="59" pos:column="9">/* Check if we are running on a Domain Controller */</comment>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name><name pos:line="60" pos:column="14">pSrvBuf<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">-&gt;<pos:position pos:line="60" pos:column="26"/></operator><name pos:line="60" pos:column="23">sv101_type<pos:position pos:line="60" pos:column="33"/></name></name> <operator pos:line="60" pos:column="34">&amp;<pos:position pos:line="60" pos:column="39"/></operator> <name pos:line="60" pos:column="36">SV_TYPE_DOMAIN_CTRL<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">)<pos:position pos:line="60" pos:column="56"/></operator> <operator pos:line="60" pos:column="57">||<pos:position pos:line="60" pos:column="59"/></operator>
                <operator pos:line="61" pos:column="17">(<pos:position pos:line="61" pos:column="18"/></operator><name><name pos:line="61" pos:column="18">pSrvBuf<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">sv101_type<pos:position pos:line="61" pos:column="37"/></name></name> <operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator> <name pos:line="61" pos:column="40">SV_TYPE_DOMAIN_BAKCTRL<pos:position pos:line="61" pos:column="62"/></name><operator pos:line="61" pos:column="62">)<pos:position pos:line="61" pos:column="63"/></operator></expr>)<pos:position pos:line="61" pos:column="64"/></condition><then pos:line="61" pos:column="64"> <block pos:line="61" pos:column="65">{
            <expr_stmt><expr><name pos:line="62" pos:column="13">LclDCptr<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">NULL<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">debug<pos:position pos:line="63" pos:column="18"/></name><argument_list pos:line="63" pos:column="18">(<argument><expr><literal type="string" pos:line="63" pos:column="19">"Running on a DC.\n"<pos:position pos:line="63" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then> <else pos:line="64" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="13">nStatus<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <operator pos:line="65" pos:column="23">(<pos:position pos:line="65" pos:column="24"/></operator><ternary><condition><expr><name pos:line="65" pos:column="24">use_PDC_only<pos:position pos:line="65" pos:column="36"/></name></expr> ?<pos:position pos:line="65" pos:column="38"/></condition><then pos:line="65" pos:column="38"> <expr><call><name pos:line="65" pos:column="39">NetGetDCName<pos:position pos:line="65" pos:column="51"/></name><argument_list pos:line="65" pos:column="51">(<argument><expr><name pos:line="65" pos:column="52">NULL<pos:position pos:line="65" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">wszLocalDomain<pos:position pos:line="65" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="74">(<pos:position pos:line="65" pos:column="75"/></operator><name pos:line="65" pos:column="75">LPBYTE<pos:position pos:line="65" pos:column="81"/></name> <operator pos:line="65" pos:column="82">*<pos:position pos:line="65" pos:column="83"/></operator><operator pos:line="65" pos:column="83">)<pos:position pos:line="65" pos:column="84"/></operator> <operator pos:line="65" pos:column="85">&amp;<pos:position pos:line="65" pos:column="90"/></operator> <name pos:line="65" pos:column="87">LclDCptr<pos:position pos:line="65" pos:column="95"/></name></expr></argument>)<pos:position pos:line="65" pos:column="96"/></argument_list></call></expr> <pos:position pos:line="65" pos:column="97"/></then><else pos:line="65" pos:column="97">: <expr><call><name pos:line="65" pos:column="99">NetGetAnyDCName<pos:position pos:line="65" pos:column="114"/></name><argument_list pos:line="65" pos:column="114">(<argument><expr><name pos:line="65" pos:column="115">NULL<pos:position pos:line="65" pos:column="119"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="121">wszLocalDomain<pos:position pos:line="65" pos:column="135"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="137">(<pos:position pos:line="65" pos:column="138"/></operator><name pos:line="65" pos:column="138">LPBYTE<pos:position pos:line="65" pos:column="144"/></name> <operator pos:line="65" pos:column="145">*<pos:position pos:line="65" pos:column="146"/></operator><operator pos:line="65" pos:column="146">)<pos:position pos:line="65" pos:column="147"/></operator> <operator pos:line="65" pos:column="148">&amp;<pos:position pos:line="65" pos:column="153"/></operator> <name pos:line="65" pos:column="150">LclDCptr<pos:position pos:line="65" pos:column="158"/></name></expr></argument>)<pos:position pos:line="65" pos:column="159"/></argument_list></call></expr></else></ternary><operator pos:line="65" pos:column="159">)<pos:position pos:line="65" pos:column="160"/></operator></expr>;<pos:position pos:line="65" pos:column="161"/></expr_stmt></block></else></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then> <else pos:line="66" pos:column="7">else <block pos:line="66" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">fprintf<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">stderr<pos:position pos:line="67" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="25">"%s: ERROR: NetServerGetInfo() failed.'\n"<pos:position pos:line="67" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="69">program_name<pos:position pos:line="67" pos:column="81"/></name></expr></argument>)<pos:position pos:line="67" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="83"/></expr_stmt>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name pos:line="68" pos:column="13">pSrvBuf<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">!=<pos:position pos:line="68" pos:column="23"/></operator> <name pos:line="68" pos:column="24">NULL<pos:position pos:line="68" pos:column="28"/></name></expr>)<pos:position pos:line="68" pos:column="29"/></condition><then pos:line="68" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="13">NetApiBufferFree<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">pSrvBuf<pos:position pos:line="69" pos:column="37"/></name></expr></argument>)<pos:position pos:line="69" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="39"/></expr_stmt></block></then></if>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">result<pos:position pos:line="70" pos:column="22"/></name></expr>;<pos:position pos:line="70" pos:column="23"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></else></if>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">nStatus<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">==<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">NERR_Success<pos:position pos:line="73" pos:column="32"/></name></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33"> <block pos:line="73" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">debug<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><literal type="string" pos:line="74" pos:column="15">"Using '%S' as DC for '%S' local domain.\n"<pos:position pos:line="74" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="60">LclDCptr<pos:position pos:line="74" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="70">wszLocalDomain<pos:position pos:line="74" pos:column="84"/></name></expr></argument>)<pos:position pos:line="74" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="86"/></expr_stmt>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><call><name pos:line="76" pos:column="13">strcmp<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><name pos:line="76" pos:column="20">NTDomain<pos:position pos:line="76" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="30">machinedomain<pos:position pos:line="76" pos:column="43"/></name></expr></argument>)<pos:position pos:line="76" pos:column="44"/></argument_list></call> <operator pos:line="76" pos:column="45">!=<pos:position pos:line="76" pos:column="47"/></operator> <literal type="number" pos:line="76" pos:column="48">0<pos:position pos:line="76" pos:column="49"/></literal></expr>)<pos:position pos:line="76" pos:column="50"/></condition><then pos:line="76" pos:column="50"> <block pos:line="76" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">MultiByteToWideChar<pos:position pos:line="77" pos:column="32"/></name><argument_list pos:line="77" pos:column="32">(<argument><expr><name pos:line="77" pos:column="33">CP_ACP<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="41">0<pos:position pos:line="77" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="44">NTDomain<pos:position pos:line="77" pos:column="52"/></name></expr></argument>,
                                <argument><expr><call><name pos:line="78" pos:column="33">strlen<pos:position pos:line="78" pos:column="39"/></name><argument_list pos:line="78" pos:column="39">(<argument><expr><name pos:line="78" pos:column="40">NTDomain<pos:position pos:line="78" pos:column="48"/></name></expr></argument>)<pos:position pos:line="78" pos:column="49"/></argument_list></call> <operator pos:line="78" pos:column="50">+<pos:position pos:line="78" pos:column="51"/></operator> <literal type="number" pos:line="78" pos:column="52">1<pos:position pos:line="78" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="55">wszUserDomain<pos:position pos:line="78" pos:column="68"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="70">sizeof<argument_list pos:line="78" pos:column="76">(<argument><expr><name pos:line="78" pos:column="77">wszUserDomain<pos:position pos:line="78" pos:column="90"/></name></expr></argument>)<pos:position pos:line="78" pos:column="91"/></argument_list></sizeof> <operator pos:line="78" pos:column="92">/<pos:position pos:line="78" pos:column="93"/></operator> <sizeof pos:line="78" pos:column="94">sizeof<argument_list pos:line="78" pos:column="100">(<argument><expr><name><name pos:line="78" pos:column="101">wszUserDomain<pos:position pos:line="78" pos:column="114"/></name><index pos:line="78" pos:column="114">[<expr><literal type="number" pos:line="78" pos:column="115">0<pos:position pos:line="78" pos:column="116"/></literal></expr>]<pos:position pos:line="78" pos:column="117"/></index></name></expr></argument>)<pos:position pos:line="78" pos:column="118"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="120"/></expr_stmt>
            <expr_stmt><expr><name pos:line="79" pos:column="13">nStatus<pos:position pos:line="79" pos:column="20"/></name> <operator pos:line="79" pos:column="21">=<pos:position pos:line="79" pos:column="22"/></operator> <operator pos:line="79" pos:column="23">(<pos:position pos:line="79" pos:column="24"/></operator><ternary><condition><expr><name pos:line="79" pos:column="24">use_PDC_only<pos:position pos:line="79" pos:column="36"/></name></expr> ?<pos:position pos:line="79" pos:column="38"/></condition><then pos:line="79" pos:column="38"> <expr><call><name pos:line="79" pos:column="39">NetGetDCName<pos:position pos:line="79" pos:column="51"/></name><argument_list pos:line="79" pos:column="51">(<argument><expr><name pos:line="79" pos:column="52">LclDCptr<pos:position pos:line="79" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="62">wszUserDomain<pos:position pos:line="79" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="77">(<pos:position pos:line="79" pos:column="78"/></operator><name pos:line="79" pos:column="78">LPBYTE<pos:position pos:line="79" pos:column="84"/></name> <operator pos:line="79" pos:column="85">*<pos:position pos:line="79" pos:column="86"/></operator><operator pos:line="79" pos:column="86">)<pos:position pos:line="79" pos:column="87"/></operator> <operator pos:line="79" pos:column="88">&amp;<pos:position pos:line="79" pos:column="93"/></operator> <name pos:line="79" pos:column="90">UsrDCptr<pos:position pos:line="79" pos:column="98"/></name></expr></argument>)<pos:position pos:line="79" pos:column="99"/></argument_list></call></expr> <pos:position pos:line="79" pos:column="100"/></then><else pos:line="79" pos:column="100">: <expr><call><name pos:line="79" pos:column="102">NetGetAnyDCName<pos:position pos:line="79" pos:column="117"/></name><argument_list pos:line="79" pos:column="117">(<argument><expr><name pos:line="79" pos:column="118">LclDCptr<pos:position pos:line="79" pos:column="126"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="128">wszUserDomain<pos:position pos:line="79" pos:column="141"/></name></expr></argument>, <argument><expr><operator pos:line="79" pos:column="143">(<pos:position pos:line="79" pos:column="144"/></operator><name pos:line="79" pos:column="144">LPBYTE<pos:position pos:line="79" pos:column="150"/></name> <operator pos:line="79" pos:column="151">*<pos:position pos:line="79" pos:column="152"/></operator><operator pos:line="79" pos:column="152">)<pos:position pos:line="79" pos:column="153"/></operator> <operator pos:line="79" pos:column="154">&amp;<pos:position pos:line="79" pos:column="159"/></operator> <name pos:line="79" pos:column="156">UsrDCptr<pos:position pos:line="79" pos:column="164"/></name></expr></argument>)<pos:position pos:line="79" pos:column="165"/></argument_list></call></expr></else></ternary><operator pos:line="79" pos:column="165">)<pos:position pos:line="79" pos:column="166"/></operator></expr>;<pos:position pos:line="79" pos:column="167"/></expr_stmt>
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><name pos:line="80" pos:column="17">nStatus<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">!=<pos:position pos:line="80" pos:column="27"/></operator> <name pos:line="80" pos:column="28">NERR_Success<pos:position pos:line="80" pos:column="40"/></name></expr>)<pos:position pos:line="80" pos:column="41"/></condition><then pos:line="80" pos:column="41"> <block pos:line="80" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="81" pos:column="17">fprintf<pos:position pos:line="81" pos:column="24"/></name><argument_list pos:line="81" pos:column="24">(<argument><expr><name pos:line="81" pos:column="25">stderr<pos:position pos:line="81" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="33">"%s: ERROR: Can't find DC for user's domain '%s'\n"<pos:position pos:line="81" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="86">program_name<pos:position pos:line="81" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="100">NTDomain<pos:position pos:line="81" pos:column="108"/></name></expr></argument>)<pos:position pos:line="81" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="110"/></expr_stmt>
                <if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">pSrvBuf<pos:position pos:line="82" pos:column="28"/></name> <operator pos:line="82" pos:column="29">!=<pos:position pos:line="82" pos:column="31"/></operator> <name pos:line="82" pos:column="32">NULL<pos:position pos:line="82" pos:column="36"/></name></expr>)<pos:position pos:line="82" pos:column="37"/></condition><then pos:line="82" pos:column="37">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="21">NetApiBufferFree<pos:position pos:line="83" pos:column="37"/></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">pSrvBuf<pos:position pos:line="83" pos:column="45"/></name></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt></block></then></if>
                <if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><name pos:line="84" pos:column="21">LclDCptr<pos:position pos:line="84" pos:column="29"/></name> <operator pos:line="84" pos:column="30">!=<pos:position pos:line="84" pos:column="32"/></operator> <name pos:line="84" pos:column="33">NULL<pos:position pos:line="84" pos:column="37"/></name></expr>)<pos:position pos:line="84" pos:column="38"/></condition><then pos:line="84" pos:column="38">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="21">NetApiBufferFree<pos:position pos:line="85" pos:column="37"/></name><argument_list pos:line="85" pos:column="37">(<argument><expr><operator pos:line="85" pos:column="38">(<pos:position pos:line="85" pos:column="39"/></operator><name pos:line="85" pos:column="39">LPVOID<pos:position pos:line="85" pos:column="45"/></name><operator pos:line="85" pos:column="45">)<pos:position pos:line="85" pos:column="46"/></operator> <name pos:line="85" pos:column="47">LclDCptr<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="57"/></expr_stmt></block></then></if>
                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">UsrDCptr<pos:position pos:line="86" pos:column="29"/></name> <operator pos:line="86" pos:column="30">!=<pos:position pos:line="86" pos:column="32"/></operator> <name pos:line="86" pos:column="33">NULL<pos:position pos:line="86" pos:column="37"/></name></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="21">NetApiBufferFree<pos:position pos:line="87" pos:column="37"/></name><argument_list pos:line="87" pos:column="37">(<argument><expr><operator pos:line="87" pos:column="38">(<pos:position pos:line="87" pos:column="39"/></operator><name pos:line="87" pos:column="39">LPVOID<pos:position pos:line="87" pos:column="45"/></name><operator pos:line="87" pos:column="45">)<pos:position pos:line="87" pos:column="46"/></operator> <name pos:line="87" pos:column="47">UsrDCptr<pos:position pos:line="87" pos:column="55"/></name></expr></argument>)<pos:position pos:line="87" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="57"/></expr_stmt></block></then></if>
                <return pos:line="88" pos:column="17">return <expr><name pos:line="88" pos:column="24">result<pos:position pos:line="88" pos:column="30"/></name></expr>;<pos:position pos:line="88" pos:column="31"/></return>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
        }<pos:position pos:line="90" pos:column="10"/></block></then> <else pos:line="90" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="13">UsrDCptr<pos:position pos:line="91" pos:column="21"/></name> <operator pos:line="91" pos:column="22">=<pos:position pos:line="91" pos:column="23"/></operator> <name pos:line="91" pos:column="24">LclDCptr<pos:position pos:line="91" pos:column="32"/></name></expr>;<pos:position pos:line="91" pos:column="33"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="93" pos:column="9">debug<pos:position pos:line="93" pos:column="14"/></name><argument_list pos:line="93" pos:column="14">(<argument><expr><literal type="string" pos:line="93" pos:column="15">"Using '%S' as DC for '%s' user's domain.\n"<pos:position pos:line="93" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="61">UsrDCptr<pos:position pos:line="93" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="71">NTDomain<pos:position pos:line="93" pos:column="79"/></name></expr></argument>)<pos:position pos:line="93" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="81"/></expr_stmt>
        <comment type="block" pos:line="94" pos:column="9">/*
         * Call the NetUserGetGroups function
         * specifying information level 0.
         */</comment>
        <expr_stmt><expr><name pos:line="98" pos:column="9">dwLevel<pos:position pos:line="98" pos:column="16"/></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <literal type="number" pos:line="98" pos:column="19">0<pos:position pos:line="98" pos:column="20"/></literal></expr>;<pos:position pos:line="98" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="99" pos:column="9">nStatus<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <call><name pos:line="99" pos:column="19">NetUserGetGroups<pos:position pos:line="99" pos:column="35"/></name><argument_list pos:line="99" pos:column="35">(<argument><expr><name pos:line="99" pos:column="36">UsrDCptr<pos:position pos:line="99" pos:column="44"/></name></expr></argument>,
                                   <argument><expr><name pos:line="100" pos:column="36">wszUserName<pos:position pos:line="100" pos:column="47"/></name></expr></argument>,
                                   <argument><expr><name pos:line="101" pos:column="36">dwLevel<pos:position pos:line="101" pos:column="43"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="102" pos:column="36">(<pos:position pos:line="102" pos:column="37"/></operator><name pos:line="102" pos:column="37">LPBYTE<pos:position pos:line="102" pos:column="43"/></name> <operator pos:line="102" pos:column="44">*<pos:position pos:line="102" pos:column="45"/></operator><operator pos:line="102" pos:column="45">)<pos:position pos:line="102" pos:column="46"/></operator> <operator pos:line="102" pos:column="47">&amp;<pos:position pos:line="102" pos:column="52"/></operator> <name pos:line="102" pos:column="49">pUsrBuf<pos:position pos:line="102" pos:column="56"/></name></expr></argument>,
                                   <argument><expr><name pos:line="103" pos:column="36">dwPrefMaxLen<pos:position pos:line="103" pos:column="48"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="104" pos:column="36">&amp;<pos:position pos:line="104" pos:column="41"/></operator><name pos:line="104" pos:column="37">dwEntriesRead<pos:position pos:line="104" pos:column="50"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="105" pos:column="36">&amp;<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="37">dwTotalEntries<pos:position pos:line="105" pos:column="51"/></name></expr></argument>)<pos:position pos:line="105" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="53"/></expr_stmt>
        <comment type="block" pos:line="106" pos:column="9">/*
         * If the call succeeds,
         */</comment>
        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">nStatus<pos:position pos:line="109" pos:column="20"/></name> <operator pos:line="109" pos:column="21">==<pos:position pos:line="109" pos:column="23"/></operator> <name pos:line="109" pos:column="24">NERR_Success<pos:position pos:line="109" pos:column="36"/></name></expr>)<pos:position pos:line="109" pos:column="37"/></condition><then pos:line="109" pos:column="37"> <block pos:line="109" pos:column="38">{
            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><operator pos:line="110" pos:column="17">(<pos:position pos:line="110" pos:column="18"/></operator><name pos:line="110" pos:column="18">pTmpBuf<pos:position pos:line="110" pos:column="25"/></name> <operator pos:line="110" pos:column="26">=<pos:position pos:line="110" pos:column="27"/></operator> <name pos:line="110" pos:column="28">pUsrBuf<pos:position pos:line="110" pos:column="35"/></name><operator pos:line="110" pos:column="35">)<pos:position pos:line="110" pos:column="36"/></operator> <operator pos:line="110" pos:column="37">!=<pos:position pos:line="110" pos:column="39"/></operator> <name pos:line="110" pos:column="40">NULL<pos:position pos:line="110" pos:column="44"/></name></expr>)<pos:position pos:line="110" pos:column="45"/></condition><then pos:line="110" pos:column="45"> <block pos:line="110" pos:column="46">{
                <for pos:line="111" pos:column="17">for <control pos:line="111" pos:column="21">(<init><expr><name pos:line="111" pos:column="22">i<pos:position pos:line="111" pos:column="23"/></name> <operator pos:line="111" pos:column="24">=<pos:position pos:line="111" pos:column="25"/></operator> <literal type="number" pos:line="111" pos:column="26">0<pos:position pos:line="111" pos:column="27"/></literal></expr>;<pos:position pos:line="111" pos:column="28"/></init> <condition><expr><name pos:line="111" pos:column="29">i<pos:position pos:line="111" pos:column="30"/></name> <operator pos:line="111" pos:column="31">&lt;<pos:position pos:line="111" pos:column="35"/></operator> <name pos:line="111" pos:column="33">dwEntriesRead<pos:position pos:line="111" pos:column="46"/></name></expr>;<pos:position pos:line="111" pos:column="47"/></condition> <incr><expr><operator pos:line="111" pos:column="48">++<pos:position pos:line="111" pos:column="50"/></operator><name pos:line="111" pos:column="50">i<pos:position pos:line="111" pos:column="51"/></name></expr></incr>)<pos:position pos:line="111" pos:column="52"/></control> <block pos:line="111" pos:column="53">{
                    <expr_stmt><expr><call><name pos:line="112" pos:column="21">assert<pos:position pos:line="112" pos:column="27"/></name><argument_list pos:line="112" pos:column="27">(<argument><expr><name pos:line="112" pos:column="28">pTmpBuf<pos:position pos:line="112" pos:column="35"/></name> <operator pos:line="112" pos:column="36">!=<pos:position pos:line="112" pos:column="38"/></operator> <name pos:line="112" pos:column="39">NULL<pos:position pos:line="112" pos:column="43"/></name></expr></argument>)<pos:position pos:line="112" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt>
                    <if pos:line="113" pos:column="21">if <condition pos:line="113" pos:column="24">(<expr><name pos:line="113" pos:column="25">pTmpBuf<pos:position pos:line="113" pos:column="32"/></name> <operator pos:line="113" pos:column="33">==<pos:position pos:line="113" pos:column="35"/></operator> <name pos:line="113" pos:column="36">NULL<pos:position pos:line="113" pos:column="40"/></name></expr>)<pos:position pos:line="113" pos:column="41"/></condition><then pos:line="113" pos:column="41"> <block pos:line="113" pos:column="42">{
                        <expr_stmt><expr><name pos:line="114" pos:column="25">result<pos:position pos:line="114" pos:column="31"/></name> <operator pos:line="114" pos:column="32">=<pos:position pos:line="114" pos:column="33"/></operator> <literal type="number" pos:line="114" pos:column="34">0<pos:position pos:line="114" pos:column="35"/></literal></expr>;<pos:position pos:line="114" pos:column="36"/></expr_stmt>
                        <break pos:line="115" pos:column="25">break;<pos:position pos:line="115" pos:column="31"/></break>
                    }<pos:position pos:line="116" pos:column="22"/></block></then></if>
                    <if pos:line="117" pos:column="21">if <condition pos:line="117" pos:column="24">(<expr><call><name pos:line="117" pos:column="25">wcstrcmparray<pos:position pos:line="117" pos:column="38"/></name><argument_list pos:line="117" pos:column="38">(<argument><expr><name><name pos:line="117" pos:column="39">pTmpBuf<pos:position pos:line="117" pos:column="46"/></name><operator pos:line="117" pos:column="46">-&gt;<pos:position pos:line="117" pos:column="51"/></operator><name pos:line="117" pos:column="48">grui0_name<pos:position pos:line="117" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="60">Groups<pos:position pos:line="117" pos:column="66"/></name></expr></argument>)<pos:position pos:line="117" pos:column="67"/></argument_list></call> <operator pos:line="117" pos:column="68">==<pos:position pos:line="117" pos:column="70"/></operator> <literal type="number" pos:line="117" pos:column="71">0<pos:position pos:line="117" pos:column="72"/></literal></expr>)<pos:position pos:line="117" pos:column="73"/></condition><then pos:line="117" pos:column="73"> <block pos:line="117" pos:column="74">{
                        <expr_stmt><expr><name pos:line="118" pos:column="25">result<pos:position pos:line="118" pos:column="31"/></name> <operator pos:line="118" pos:column="32">=<pos:position pos:line="118" pos:column="33"/></operator> <literal type="number" pos:line="118" pos:column="34">1<pos:position pos:line="118" pos:column="35"/></literal></expr>;<pos:position pos:line="118" pos:column="36"/></expr_stmt>
                        <break pos:line="119" pos:column="25">break;<pos:position pos:line="119" pos:column="31"/></break>
                    }<pos:position pos:line="120" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><operator pos:line="121" pos:column="21">++<pos:position pos:line="121" pos:column="23"/></operator><name pos:line="121" pos:column="23">pTmpBuf<pos:position pos:line="121" pos:column="30"/></name></expr>;<pos:position pos:line="121" pos:column="31"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="122" pos:column="21">++<pos:position pos:line="122" pos:column="23"/></operator><name pos:line="122" pos:column="23">dwTotalCount<pos:position pos:line="122" pos:column="35"/></name></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>
                }<pos:position pos:line="123" pos:column="18"/></block></for>
            }<pos:position pos:line="124" pos:column="14"/></block></then></if>
        }<pos:position pos:line="125" pos:column="10"/></block></then> <else pos:line="125" pos:column="11">else <block pos:line="125" pos:column="16">{
            <expr_stmt><expr><name pos:line="126" pos:column="13">result<pos:position pos:line="126" pos:column="19"/></name> <operator pos:line="126" pos:column="20">=<pos:position pos:line="126" pos:column="21"/></operator> <literal type="number" pos:line="126" pos:column="22">0<pos:position pos:line="126" pos:column="23"/></literal></expr>;<pos:position pos:line="126" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="127" pos:column="13">fprintf<pos:position pos:line="127" pos:column="20"/></name><argument_list pos:line="127" pos:column="20">(<argument><expr><name pos:line="127" pos:column="21">stderr<pos:position pos:line="127" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="29">"%s: ERROR: NetUserGetGroups() failed.'\n"<pos:position pos:line="127" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="73">program_name<pos:position pos:line="127" pos:column="85"/></name></expr></argument>)<pos:position pos:line="127" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="87"/></expr_stmt>
        }<pos:position pos:line="128" pos:column="10"/></block></else></if>
    }<pos:position pos:line="129" pos:column="6"/></block></then> <else pos:line="129" pos:column="7">else <block pos:line="129" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">fprintf<pos:position pos:line="130" pos:column="16"/></name><argument_list pos:line="130" pos:column="16">(<argument><expr><name pos:line="130" pos:column="17">stderr<pos:position pos:line="130" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="25">"%s: ERROR: Can't find DC for local domain '%s'\n"<pos:position pos:line="130" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="77">program_name<pos:position pos:line="130" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="91">machinedomain<pos:position pos:line="130" pos:column="104"/></name></expr></argument>)<pos:position pos:line="130" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="106"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></else></if>
    <comment type="block" pos:line="132" pos:column="5">/*
     * Free the allocated memory.
     */</comment>
    <if pos:line="135" pos:column="5">if <condition pos:line="135" pos:column="8">(<expr><name pos:line="135" pos:column="9">pSrvBuf<pos:position pos:line="135" pos:column="16"/></name> <operator pos:line="135" pos:column="17">!=<pos:position pos:line="135" pos:column="19"/></operator> <name pos:line="135" pos:column="20">NULL<pos:position pos:line="135" pos:column="24"/></name></expr>)<pos:position pos:line="135" pos:column="25"/></condition><then pos:line="135" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="9">NetApiBufferFree<pos:position pos:line="136" pos:column="25"/></name><argument_list pos:line="136" pos:column="25">(<argument><expr><name pos:line="136" pos:column="26">pSrvBuf<pos:position pos:line="136" pos:column="33"/></name></expr></argument>)<pos:position pos:line="136" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="35"/></expr_stmt></block></then></if>
    <if pos:line="137" pos:column="5">if <condition pos:line="137" pos:column="8">(<expr><name pos:line="137" pos:column="9">pUsrBuf<pos:position pos:line="137" pos:column="16"/></name> <operator pos:line="137" pos:column="17">!=<pos:position pos:line="137" pos:column="19"/></operator> <name pos:line="137" pos:column="20">NULL<pos:position pos:line="137" pos:column="24"/></name></expr>)<pos:position pos:line="137" pos:column="25"/></condition><then pos:line="137" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="9">NetApiBufferFree<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><name pos:line="138" pos:column="26">pUsrBuf<pos:position pos:line="138" pos:column="33"/></name></expr></argument>)<pos:position pos:line="138" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="35"/></expr_stmt></block></then></if>
    <if pos:line="139" pos:column="5">if <condition pos:line="139" pos:column="8">(<expr><operator pos:line="139" pos:column="9">(<pos:position pos:line="139" pos:column="10"/></operator><name pos:line="139" pos:column="10">UsrDCptr<pos:position pos:line="139" pos:column="18"/></name> <operator pos:line="139" pos:column="19">!=<pos:position pos:line="139" pos:column="21"/></operator> <name pos:line="139" pos:column="22">NULL<pos:position pos:line="139" pos:column="26"/></name><operator pos:line="139" pos:column="26">)<pos:position pos:line="139" pos:column="27"/></operator> <operator pos:line="139" pos:column="28">&amp;&amp;<pos:position pos:line="139" pos:column="38"/></operator> <operator pos:line="139" pos:column="31">(<pos:position pos:line="139" pos:column="32"/></operator><name pos:line="139" pos:column="32">UsrDCptr<pos:position pos:line="139" pos:column="40"/></name> <operator pos:line="139" pos:column="41">!=<pos:position pos:line="139" pos:column="43"/></operator> <name pos:line="139" pos:column="44">LclDCptr<pos:position pos:line="139" pos:column="52"/></name><operator pos:line="139" pos:column="52">)<pos:position pos:line="139" pos:column="53"/></operator></expr>)<pos:position pos:line="139" pos:column="54"/></condition><then pos:line="139" pos:column="54">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="9">NetApiBufferFree<pos:position pos:line="140" pos:column="25"/></name><argument_list pos:line="140" pos:column="25">(<argument><expr><operator pos:line="140" pos:column="26">(<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="27">LPVOID<pos:position pos:line="140" pos:column="33"/></name><operator pos:line="140" pos:column="33">)<pos:position pos:line="140" pos:column="34"/></operator> <name pos:line="140" pos:column="35">UsrDCptr<pos:position pos:line="140" pos:column="43"/></name></expr></argument>)<pos:position pos:line="140" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="45"/></expr_stmt></block></then></if>
    <if pos:line="141" pos:column="5">if <condition pos:line="141" pos:column="8">(<expr><name pos:line="141" pos:column="9">LclDCptr<pos:position pos:line="141" pos:column="17"/></name> <operator pos:line="141" pos:column="18">!=<pos:position pos:line="141" pos:column="20"/></operator> <name pos:line="141" pos:column="21">NULL<pos:position pos:line="141" pos:column="25"/></name></expr>)<pos:position pos:line="141" pos:column="26"/></condition><then pos:line="141" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="9">NetApiBufferFree<pos:position pos:line="142" pos:column="25"/></name><argument_list pos:line="142" pos:column="25">(<argument><expr><operator pos:line="142" pos:column="26">(<pos:position pos:line="142" pos:column="27"/></operator><name pos:line="142" pos:column="27">LPVOID<pos:position pos:line="142" pos:column="33"/></name><operator pos:line="142" pos:column="33">)<pos:position pos:line="142" pos:column="34"/></operator> <name pos:line="142" pos:column="35">LclDCptr<pos:position pos:line="142" pos:column="43"/></name></expr></argument>)<pos:position pos:line="142" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="45"/></expr_stmt></block></then></if>
    <return pos:line="143" pos:column="5">return <expr><name pos:line="143" pos:column="12">result<pos:position pos:line="143" pos:column="18"/></name></expr>;<pos:position pos:line="143" pos:column="19"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1959_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">neighborsCount<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">HttpRequest<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">request<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">p<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">count<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">p<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">Config<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">peers<pos:position pos:line="7" pos:column="26"/></name></name></expr>;<pos:position pos:line="7" pos:column="27"/></init> <condition><expr><name pos:line="7" pos:column="28">p<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></condition> <incr><expr><name pos:line="7" pos:column="31">p<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">=<pos:position pos:line="7" pos:column="34"/></operator> <name><name pos:line="7" pos:column="35">p<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">next<pos:position pos:line="7" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="43"/></control>
        <block type="pseudo"><if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">peerWouldBePinged<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">p<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">request<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="13">++<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">count<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt></block></then></if></block></for>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">15<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">3<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"neighborsCount: "<pos:position pos:line="11" pos:column="37"/></literal> <operator pos:line="11" pos:column="38">&lt;&lt;<pos:position pos:line="11" pos:column="46"/></operator> <name pos:line="11" pos:column="41">count<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>

    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">count<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

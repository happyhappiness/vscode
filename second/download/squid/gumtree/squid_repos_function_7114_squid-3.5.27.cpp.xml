<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7114_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreToCommWriter<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">noteCommWrote<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">CommIoCbParams<pos:position pos:line="2" pos:column="59"/></name><modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type> <name pos:line="2" pos:column="61">params<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">16<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">6<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name><name pos:line="5" pos:column="10">params<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">flag<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">==<pos:position pos:line="5" pos:column="24"/></operator> <name><name pos:line="5" pos:column="25">Comm<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">::<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">OK<pos:position pos:line="5" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">clientConnection<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">!=<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">&amp;&amp;<pos:position pos:line="6" pos:column="45"/></operator> <name><name pos:line="6" pos:column="38">params<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">.<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">fd<pos:position pos:line="6" pos:column="47"/></name></name> <operator pos:line="6" pos:column="48">==<pos:position pos:line="6" pos:column="50"/></operator> <name><name pos:line="6" pos:column="51">clientConnection<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">-&gt;<pos:position pos:line="6" pos:column="72"/></operator><name pos:line="6" pos:column="69">fd<pos:position pos:line="6" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name><name pos:line="7" pos:column="10">params<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">size<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">!=<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">writeOffset<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">+=<pos:position pos:line="8" pos:column="19"/></operator> <name><name pos:line="8" pos:column="20">params<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">size<pos:position pos:line="8" pos:column="31"/></name></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">doneAll<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">()<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">scheduleStoreCopy<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">()<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then></if> <comment type="line" pos:line="10" pos:column="30">// retrieve the next data portion</comment>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

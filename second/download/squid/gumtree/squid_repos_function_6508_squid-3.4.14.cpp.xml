<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6508_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">IntParam<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">pack<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name><name pos:line="2" pos:column="21">Ipc<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">TypedMsgHdr<pos:position pos:line="2" pos:column="37"/></name></name><modifier pos:line="2" pos:column="37">&amp;<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="39">msg<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list> <specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">msg<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">.<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">putPod<pos:position pos:line="4" pos:column="15"/></name></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">type<pos:position pos:line="4" pos:column="20"/></name></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">msg<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">putInt<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">(<argument><expr><call><name><name pos:line="5" pos:column="16">array<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">size<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
    <typedef pos:line="6" pos:column="5">typedef <type><name><name pos:line="6" pos:column="13">std<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">::<pos:position pos:line="6" pos:column="18"/></operator><name><name pos:line="6" pos:column="18">vector<pos:position pos:line="6" pos:column="24"/></name><argument_list type="generic" pos:line="6" pos:column="24">&lt;<argument><expr><name pos:line="6" pos:column="25">int<pos:position pos:line="6" pos:column="28"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="32"/></argument_list></name><operator pos:line="6" pos:column="29">::<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">const_iterator<pos:position pos:line="6" pos:column="45"/></name></name></type> <name pos:line="6" pos:column="46">Iterator<pos:position pos:line="6" pos:column="54"/></name>;<pos:position pos:line="6" pos:column="55"/></typedef>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">Iterator<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">iter<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><call><name><name pos:line="7" pos:column="26">array<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">begin<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="40"/></init> <condition><expr><name pos:line="7" pos:column="41">iter<pos:position pos:line="7" pos:column="45"/></name> <operator pos:line="7" pos:column="46">!=<pos:position pos:line="7" pos:column="48"/></operator> <call><name><name pos:line="7" pos:column="49">array<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">end<pos:position pos:line="7" pos:column="58"/></name></name><argument_list pos:line="7" pos:column="58">()<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></condition> <incr><expr><operator pos:line="7" pos:column="62">++<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="64">iter<pos:position pos:line="7" pos:column="68"/></name></expr></incr>)<pos:position pos:line="7" pos:column="69"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">msg<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">.<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">putInt<pos:position pos:line="8" pos:column="19"/></name></name><argument_list pos:line="8" pos:column="19">(<argument><expr><operator pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">iter<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4801_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">uint32_t<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">Parser<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">BinaryTokenizer<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">octet<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// While char may be signed, we view data characters as unsigned,</comment>
    <comment type="line" pos:line="5" pos:column="5">// which helps to arrive at the right 32-bit return value.</comment>
    <return pos:line="6" pos:column="5">return <expr><cast type="static" pos:line="6" pos:column="12">static_cast<argument_list type="generic" pos:line="6" pos:column="23">&lt;<argument><expr><name pos:line="6" pos:column="24">uint8_t<pos:position pos:line="6" pos:column="31"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="35"/></argument_list><argument_list pos:line="6" pos:column="32">(<argument><expr><name><name pos:line="6" pos:column="33">data_<pos:position pos:line="6" pos:column="38"/></name><index pos:line="6" pos:column="38">[<expr><name pos:line="6" pos:column="39">parsed_<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">++<pos:position pos:line="6" pos:column="48"/></operator></expr>]<pos:position pos:line="6" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="51"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

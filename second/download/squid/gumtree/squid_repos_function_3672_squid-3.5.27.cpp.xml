<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3672_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">fakeAConnectRequest<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">reason<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">SBuf<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">&amp;<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="68">payload<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// fake a CONNECT request to force connState to tunnel</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SBuf<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">connectHost<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_OPENSSL<pos:position pos:line="6" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">serverBump<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call> <operator pos:line="7" pos:column="22">&amp;&amp;<pos:position pos:line="7" pos:column="32"/></operator> <operator pos:line="7" pos:column="25">!<pos:position pos:line="7" pos:column="26"/></operator><call><name pos:line="7" pos:column="26">serverBump<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call><operator pos:line="7" pos:column="38">-&gt;<pos:position pos:line="7" pos:column="43"/></operator><call><name><name pos:line="7" pos:column="40">clientSni<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">.<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">isEmpty<pos:position pos:line="7" pos:column="57"/></name></name><argument_list pos:line="7" pos:column="57">()<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60"> <block pos:line="7" pos:column="61">{
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">connectHost<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">assign<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><call><name pos:line="8" pos:column="28">serverBump<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">()<pos:position pos:line="8" pos:column="40"/></argument_list></call><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">clientSni<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name><name pos:line="9" pos:column="13">clientConnection<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">local<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">port<pos:position pos:line="9" pos:column="41"/></name></name><argument_list pos:line="9" pos:column="41">()<pos:position pos:line="9" pos:column="43"/></argument_list></call> <operator pos:line="9" pos:column="44">&gt;<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="46">0<pos:position pos:line="9" pos:column="47"/></literal></expr>)<pos:position pos:line="9" pos:column="48"/></condition><then pos:line="9" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="13">connectHost<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">appendf<pos:position pos:line="10" pos:column="32"/></name></name><argument_list pos:line="10" pos:column="32">(<argument><expr><literal type="string" pos:line="10" pos:column="33">":%d"<pos:position pos:line="10" pos:column="38"/></literal></expr></argument>,<argument><expr><call><name><name pos:line="10" pos:column="39">clientConnection<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">local<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">.<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">port<pos:position pos:line="10" pos:column="67"/></name></name><argument_list pos:line="10" pos:column="67">()<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="71"/></expr_stmt></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <block pos:line="13" pos:column="5">{
        <decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">char<pos:position pos:line="14" pos:column="20"/></name></type> <name><name pos:line="14" pos:column="21">ip<pos:position pos:line="14" pos:column="23"/></name><index pos:line="14" pos:column="23">[<expr><name pos:line="14" pos:column="24">MAX_IPSTRLEN<pos:position pos:line="14" pos:column="36"/></name></expr>]<pos:position pos:line="14" pos:column="37"/></index></name></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">connectHost<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">.<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">assign<pos:position pos:line="15" pos:column="27"/></name></name><argument_list pos:line="15" pos:column="27">(<argument><expr><call><name><name pos:line="15" pos:column="28">clientConnection<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">local<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">.<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="52">toUrl<pos:position pos:line="15" pos:column="57"/></name></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">ip<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="62">sizeof<argument_list pos:line="15" pos:column="68">(<argument><expr><name pos:line="15" pos:column="69">ip<pos:position pos:line="15" pos:column="71"/></name></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>
    <comment type="line" pos:line="17" pos:column="5">// Pre-pend this fake request to the TLS bits already in the buffer</comment>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">SBuf<pos:position pos:line="18" pos:column="9"/></name></type> <name pos:line="18" pos:column="10">retStr<pos:position pos:line="18" pos:column="16"/></name></decl>;<pos:position pos:line="18" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">retStr<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">append<pos:position pos:line="19" pos:column="18"/></name></name><argument_list pos:line="19" pos:column="18">(<argument><expr><literal type="string" pos:line="19" pos:column="19">"CONNECT "<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">retStr<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">append<pos:position pos:line="20" pos:column="18"/></name></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">connectHost<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">retStr<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">append<pos:position pos:line="21" pos:column="18"/></name></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">" HTTP/1.1\r\nHost: "<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">retStr<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">append<pos:position pos:line="22" pos:column="18"/></name></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">connectHost<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">retStr<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">append<pos:position pos:line="23" pos:column="18"/></name></name><argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="string" pos:line="23" pos:column="19">"\r\n\r\n"<pos:position pos:line="23" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">retStr<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">append<pos:position pos:line="24" pos:column="18"/></name></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name pos:line="24" pos:column="19">payload<pos:position pos:line="24" pos:column="26"/></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">in<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">.<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">buf<pos:position pos:line="25" pos:column="11"/></name></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name pos:line="25" pos:column="14">retStr<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">bool<pos:position pos:line="26" pos:column="9"/></name></type> <name pos:line="26" pos:column="10">ret<pos:position pos:line="26" pos:column="13"/></name> <init pos:line="26" pos:column="14">= <expr><call><name pos:line="26" pos:column="16">handleReadData<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">()<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="33"/></decl_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">ret<pos:position pos:line="27" pos:column="12"/></name></expr>)<pos:position pos:line="27" pos:column="13"/></condition><then pos:line="27" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">ret<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">clientParseRequests<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">()<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">ret<pos:position pos:line="30" pos:column="13"/></name></expr>)<pos:position pos:line="30" pos:column="14"/></condition><then pos:line="30" pos:column="14"> <block pos:line="30" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">33<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">2<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"Failed to start fake CONNECT request for "<pos:position pos:line="31" pos:column="66"/></literal> <operator pos:line="31" pos:column="67">&lt;&lt;<pos:position pos:line="31" pos:column="75"/></operator> <name pos:line="31" pos:column="70">reason<pos:position pos:line="31" pos:column="76"/></name> <operator pos:line="31" pos:column="77">&lt;&lt;<pos:position pos:line="31" pos:column="85"/></operator> <literal type="string" pos:line="31" pos:column="80">" connection: "<pos:position pos:line="31" pos:column="95"/></literal> <operator pos:line="31" pos:column="96">&lt;&lt;<pos:position pos:line="31" pos:column="104"/></operator> <name pos:line="31" pos:column="99">clientConnection<pos:position pos:line="31" pos:column="115"/></name></expr></argument>)<pos:position pos:line="31" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="117"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">clientConnection<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">close<pos:position pos:line="32" pos:column="32"/></name></name><argument_list pos:line="32" pos:column="32">()<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

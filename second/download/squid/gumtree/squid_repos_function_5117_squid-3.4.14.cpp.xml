<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5117_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">IoCallback<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">setCallback<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name><name pos:line="2" pos:column="31">Comm<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">iocb_type<pos:position pos:line="2" pos:column="46"/></name></name></type> <name pos:line="2" pos:column="47">t<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="50">AsyncCall<pos:position pos:line="2" pos:column="59"/></name><operator pos:line="2" pos:column="59">::<pos:position pos:line="2" pos:column="61"/></operator><name pos:line="2" pos:column="61">Pointer<pos:position pos:line="2" pos:column="68"/></name></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">cb<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">char<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">b<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="83">FREE<pos:position pos:line="2" pos:column="87"/></name> <modifier pos:line="2" pos:column="88">*<pos:position pos:line="2" pos:column="89"/></modifier></type><name pos:line="2" pos:column="89">f<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="92">int<pos:position pos:line="2" pos:column="95"/></name></type> <name pos:line="2" pos:column="96">sz<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="99"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name pos:line="4" pos:column="13">active<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">()<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">type<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">t<pos:position pos:line="5" pos:column="21"/></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">cb<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">!=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">callback<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">cb<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">buf<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <name pos:line="9" pos:column="11">b<pos:position pos:line="9" pos:column="12"/></name></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">freefunc<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">f<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">size<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">sz<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">offset<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

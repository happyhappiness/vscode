<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2583_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MimeIcon<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">created<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">newEntry<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* if the icon is already in the store, do nothing */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">newEntry<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">isNull<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>
    <comment type="line" pos:line="7" pos:column="5">// XXX: if a 204 is cached due to earlier load 'failure' we should try to reload.</comment>

    <comment type="line" pos:line="9" pos:column="5">// default is a 200 object with image data.</comment>
    <comment type="line" pos:line="10" pos:column="5">// set to the backup value of 204 on image loading errors</comment>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">Http<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">::<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">StatusCode<pos:position pos:line="11" pos:column="21"/></name></name></type> <name pos:line="11" pos:column="22">status<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><name><name pos:line="11" pos:column="31">Http<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">::<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">scOkay<pos:position pos:line="11" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>

    <decl_stmt><decl><specifier pos:line="13" pos:column="5">static<pos:position pos:line="13" pos:column="11"/></specifier> <type><name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name></type> <name><name pos:line="13" pos:column="17">path<pos:position pos:line="13" pos:column="21"/></name><index pos:line="13" pos:column="21">[<expr><name pos:line="13" pos:column="22">MAXPATHLEN<pos:position pos:line="13" pos:column="32"/></name></expr>]<pos:position pos:line="13" pos:column="33"/></index></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">path<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">snprintf<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">path<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="24">sizeof<argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">path<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof><operator pos:line="15" pos:column="36">-<pos:position pos:line="15" pos:column="37"/></operator><literal type="number" pos:line="15" pos:column="37">1<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"%s/"<pos:position pos:line="15" pos:column="45"/></literal> <name pos:line="15" pos:column="46">SQUIDSBUFPH<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="59">Config<pos:position pos:line="15" pos:column="65"/></name><operator pos:line="15" pos:column="65">.<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="66">icons<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">.<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="72">directory<pos:position pos:line="15" pos:column="81"/></name></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="83">SQUIDSBUFPRINT<pos:position pos:line="15" pos:column="97"/></name><argument_list pos:line="15" pos:column="97">(<argument><expr><name pos:line="15" pos:column="98">icon_<pos:position pos:line="15" pos:column="103"/></name></expr></argument>)<pos:position pos:line="15" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="105"/></argument_list></call> <operator pos:line="15" pos:column="106">&lt;<pos:position pos:line="15" pos:column="110"/></operator> <literal type="number" pos:line="15" pos:column="108">0<pos:position pos:line="15" pos:column="109"/></literal></expr>)<pos:position pos:line="15" pos:column="110"/></condition><then pos:line="15" pos:column="110"> <block pos:line="15" pos:column="111">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">25<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_CRITICAL<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"ERROR: icon file '"<pos:position pos:line="16" pos:column="54"/></literal> <operator pos:line="16" pos:column="55">&lt;&lt;<pos:position pos:line="16" pos:column="63"/></operator> <name><name pos:line="16" pos:column="58">Config<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">.<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="65">icons<pos:position pos:line="16" pos:column="70"/></name><operator pos:line="16" pos:column="70">.<pos:position pos:line="16" pos:column="71"/></operator><name pos:line="16" pos:column="71">directory<pos:position pos:line="16" pos:column="80"/></name></name> <operator pos:line="16" pos:column="81">&lt;&lt;<pos:position pos:line="16" pos:column="89"/></operator> <literal type="string" pos:line="16" pos:column="84">"/"<pos:position pos:line="16" pos:column="87"/></literal> <operator pos:line="16" pos:column="88">&lt;&lt;<pos:position pos:line="16" pos:column="96"/></operator> <name pos:line="16" pos:column="91">icon_<pos:position pos:line="16" pos:column="96"/></name> <operator pos:line="16" pos:column="97">&lt;&lt;<pos:position pos:line="16" pos:column="105"/></operator> <literal type="string" pos:line="16" pos:column="100">"' path is longer than "<pos:position pos:line="16" pos:column="124"/></literal> <operator pos:line="16" pos:column="125">&lt;&lt;<pos:position pos:line="16" pos:column="133"/></operator> <name pos:line="16" pos:column="128">MAXPATHLEN<pos:position pos:line="16" pos:column="138"/></name> <operator pos:line="16" pos:column="139">&lt;&lt;<pos:position pos:line="16" pos:column="147"/></operator> <literal type="string" pos:line="16" pos:column="142">" bytes"<pos:position pos:line="16" pos:column="150"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="152"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">Http<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">::<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">scNoContent<pos:position pos:line="17" pos:column="35"/></name></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">fd<pos:position pos:line="20" pos:column="11"/></name> <init pos:line="20" pos:column="12">= <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">errno<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">==<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">Http<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">::<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">scOkay<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">&amp;&amp;<pos:position pos:line="22" pos:column="42"/></operator> <operator pos:line="22" pos:column="35">(<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">fd<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">=<pos:position pos:line="22" pos:column="40"/></operator> <call><name pos:line="22" pos:column="41">file_open<pos:position pos:line="22" pos:column="50"/></name><argument_list pos:line="22" pos:column="50">(<argument><expr><name pos:line="22" pos:column="51">path<pos:position pos:line="22" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="57">O_RDONLY<pos:position pos:line="22" pos:column="65"/></name> <operator pos:line="22" pos:column="66">|<pos:position pos:line="22" pos:column="67"/></operator> <name pos:line="22" pos:column="68">O_BINARY<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call><operator pos:line="22" pos:column="77">)<pos:position pos:line="22" pos:column="78"/></operator> <operator pos:line="22" pos:column="79">&lt;<pos:position pos:line="22" pos:column="83"/></operator> <literal type="number" pos:line="22" pos:column="81">0<pos:position pos:line="22" pos:column="82"/></literal></expr>)<pos:position pos:line="22" pos:column="83"/></condition><then pos:line="22" pos:column="83"> <block pos:line="22" pos:column="84">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">xerrno<pos:position pos:line="23" pos:column="19"/></name> <init pos:line="23" pos:column="20">= <expr><name pos:line="23" pos:column="22">errno<pos:position pos:line="23" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">25<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">DBG_CRITICAL<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="34">"ERROR: opening icon file "<pos:position pos:line="24" pos:column="61"/></literal> <operator pos:line="24" pos:column="62">&lt;&lt;<pos:position pos:line="24" pos:column="70"/></operator> <name pos:line="24" pos:column="65">path<pos:position pos:line="24" pos:column="69"/></name> <operator pos:line="24" pos:column="70">&lt;&lt;<pos:position pos:line="24" pos:column="78"/></operator> <literal type="string" pos:line="24" pos:column="73">": "<pos:position pos:line="24" pos:column="77"/></literal> <operator pos:line="24" pos:column="78">&lt;&lt;<pos:position pos:line="24" pos:column="86"/></operator> <call><name pos:line="24" pos:column="81">xstrerr<pos:position pos:line="24" pos:column="88"/></name><argument_list pos:line="24" pos:column="88">(<argument><expr><name pos:line="24" pos:column="89">xerrno<pos:position pos:line="24" pos:column="95"/></name></expr></argument>)<pos:position pos:line="24" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="98"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name><name pos:line="25" pos:column="18">Http<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">::<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">scNoContent<pos:position pos:line="25" pos:column="35"/></name></name></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="28" pos:column="5">struct<pos:position pos:line="28" pos:column="11"/></name> <name pos:line="28" pos:column="12">stat<pos:position pos:line="28" pos:column="16"/></name></name></type> <name pos:line="28" pos:column="17">sb<pos:position pos:line="28" pos:column="19"/></name></decl>;<pos:position pos:line="28" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">errno<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <literal type="number" pos:line="29" pos:column="13">0<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">==<pos:position pos:line="30" pos:column="18"/></operator> <name><name pos:line="30" pos:column="19">Http<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">::<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">scOkay<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">&amp;&amp;<pos:position pos:line="30" pos:column="42"/></operator> <call><name pos:line="30" pos:column="35">fstat<pos:position pos:line="30" pos:column="40"/></name><argument_list pos:line="30" pos:column="40">(<argument><expr><name pos:line="30" pos:column="41">fd<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="45">&amp;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="46">sb<pos:position pos:line="30" pos:column="48"/></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call> <operator pos:line="30" pos:column="50">&lt;<pos:position pos:line="30" pos:column="54"/></operator> <literal type="number" pos:line="30" pos:column="52">0<pos:position pos:line="30" pos:column="53"/></literal></expr>)<pos:position pos:line="30" pos:column="54"/></condition><then pos:line="30" pos:column="54"> <block pos:line="30" pos:column="55">{
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">int<pos:position pos:line="31" pos:column="12"/></name></type> <name pos:line="31" pos:column="13">xerrno<pos:position pos:line="31" pos:column="19"/></name> <init pos:line="31" pos:column="20">= <expr><name pos:line="31" pos:column="22">errno<pos:position pos:line="31" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">25<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="20">DBG_CRITICAL<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="34">"ERROR: opening icon file "<pos:position pos:line="32" pos:column="61"/></literal> <operator pos:line="32" pos:column="62">&lt;&lt;<pos:position pos:line="32" pos:column="70"/></operator> <name pos:line="32" pos:column="65">path<pos:position pos:line="32" pos:column="69"/></name> <operator pos:line="32" pos:column="70">&lt;&lt;<pos:position pos:line="32" pos:column="78"/></operator> <literal type="string" pos:line="32" pos:column="73">" FD "<pos:position pos:line="32" pos:column="79"/></literal> <operator pos:line="32" pos:column="80">&lt;&lt;<pos:position pos:line="32" pos:column="88"/></operator> <name pos:line="32" pos:column="83">fd<pos:position pos:line="32" pos:column="85"/></name> <operator pos:line="32" pos:column="86">&lt;&lt;<pos:position pos:line="32" pos:column="94"/></operator> <literal type="string" pos:line="32" pos:column="89">", fstat error "<pos:position pos:line="32" pos:column="105"/></literal> <operator pos:line="32" pos:column="106">&lt;&lt;<pos:position pos:line="32" pos:column="114"/></operator> <call><name pos:line="32" pos:column="109">xstrerr<pos:position pos:line="32" pos:column="116"/></name><argument_list pos:line="32" pos:column="116">(<argument><expr><name pos:line="32" pos:column="117">xerrno<pos:position pos:line="32" pos:column="123"/></name></expr></argument>)<pos:position pos:line="32" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="126"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">file_close<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">fd<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">status<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <name><name pos:line="34" pos:column="18">Http<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">::<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">scNoContent<pos:position pos:line="34" pos:column="35"/></name></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="37" pos:column="5">// fill newEntry with a canned 2xx response object</comment>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">RequestFlags<pos:position pos:line="38" pos:column="17"/></name></type> <name pos:line="38" pos:column="18">flags<pos:position pos:line="38" pos:column="23"/></name></decl>;<pos:position pos:line="38" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">flags<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">.<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">cachable<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <literal type="boolean" pos:line="39" pos:column="22">true<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">StoreEntry<pos:position pos:line="40" pos:column="15"/></name> <modifier pos:line="40" pos:column="16">*<pos:position pos:line="40" pos:column="17"/></modifier></type><name pos:line="40" pos:column="17">e<pos:position pos:line="40" pos:column="18"/></name> <init pos:line="40" pos:column="19">= <expr><call><name pos:line="40" pos:column="21">storeCreateEntry<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">url_<pos:position pos:line="40" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="40" pos:column="43">url_<pos:position pos:line="40" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="40" pos:column="48">flags<pos:position pos:line="40" pos:column="53"/></name></expr></argument>,<argument><expr><name><name pos:line="40" pos:column="54">Http<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">::<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="60">METHOD_GET<pos:position pos:line="40" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">assert<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">e<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">!=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">NULL<pos:position pos:line="41" pos:column="21"/></name></expr></argument>)<pos:position pos:line="41" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">EBIT_SET<pos:position pos:line="42" pos:column="13"/></name><argument_list pos:line="42" pos:column="13">(<argument><expr><name><name pos:line="42" pos:column="14">e<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">-&gt;<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="17">flags<pos:position pos:line="42" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="24">ENTRY_SPECIAL<pos:position pos:line="42" pos:column="37"/></name></expr></argument>)<pos:position pos:line="42" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="43" pos:column="5">e<pos:position pos:line="43" pos:column="6"/></name><operator pos:line="43" pos:column="6">-&gt;<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="8">setPublicKey<pos:position pos:line="43" pos:column="20"/></name></name><argument_list pos:line="43" pos:column="20">()<pos:position pos:line="43" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">e<pos:position pos:line="44" pos:column="6"/></name><operator pos:line="44" pos:column="6">-&gt;<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="8">buffer<pos:position pos:line="44" pos:column="14"/></name></name><argument_list pos:line="44" pos:column="14">()<pos:position pos:line="44" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="45" pos:column="5">const<pos:position pos:line="45" pos:column="10"/></specifier> <name><name pos:line="45" pos:column="11">MasterXaction<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">::<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">Pointer<pos:position pos:line="45" pos:column="33"/></name></name></type> <name pos:line="45" pos:column="34">mx<pos:position pos:line="45" pos:column="36"/></name> <init pos:line="45" pos:column="37">= <expr><operator pos:line="45" pos:column="39">new<pos:position pos:line="45" pos:column="42"/></operator> <call><name pos:line="45" pos:column="43">MasterXaction<pos:position pos:line="45" pos:column="56"/></name><argument_list pos:line="45" pos:column="56">(<argument><expr><name><name pos:line="45" pos:column="57">XactionInitiator<pos:position pos:line="45" pos:column="73"/></name><operator pos:line="45" pos:column="73">::<pos:position pos:line="45" pos:column="75"/></operator><name pos:line="45" pos:column="75">initIcon<pos:position pos:line="45" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="85"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">HttpRequest<pos:position pos:line="46" pos:column="16"/></name> <modifier pos:line="46" pos:column="17">*<pos:position pos:line="46" pos:column="18"/></modifier></type><name pos:line="46" pos:column="18">r<pos:position pos:line="46" pos:column="19"/></name> <init pos:line="46" pos:column="20">= <expr><call><name><name pos:line="46" pos:column="22">HttpRequest<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">::<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">FromUrl<pos:position pos:line="46" pos:column="42"/></name></name><argument_list pos:line="46" pos:column="42">(<argument><expr><name pos:line="46" pos:column="43">url_<pos:position pos:line="46" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="49">mx<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="53"/></decl_stmt>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">NULL<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">==<pos:position pos:line="48" pos:column="16"/></operator> <name pos:line="48" pos:column="17">r<pos:position pos:line="48" pos:column="18"/></name></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="9">fatalf<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="string" pos:line="49" pos:column="16">"mimeLoadIcon: cannot parse internal URL: %s"<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="63">url_<pos:position pos:line="49" pos:column="67"/></name></expr></argument>)<pos:position pos:line="49" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="69"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">e<pos:position pos:line="51" pos:column="6"/></name><operator pos:line="51" pos:column="6">-&gt;<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="8">mem_obj<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">request<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="27">r<pos:position pos:line="51" pos:column="28"/></name></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">HTTPMSGLOCK<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name><name pos:line="52" pos:column="17">e<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">-&gt;<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="20">mem_obj<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">request<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="54" pos:column="5">HttpReply<pos:position pos:line="54" pos:column="14"/></name> <modifier pos:line="54" pos:column="15">*<pos:position pos:line="54" pos:column="16"/></modifier></type><name pos:line="54" pos:column="16">reply<pos:position pos:line="54" pos:column="21"/></name> <init pos:line="54" pos:column="22">= <expr><operator pos:line="54" pos:column="24">new<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">HttpReply<pos:position pos:line="54" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="54" pos:column="38"/></decl_stmt>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">status<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">==<pos:position pos:line="56" pos:column="18"/></operator> <name><name pos:line="56" pos:column="19">Http<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">::<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">scNoContent<pos:position pos:line="56" pos:column="36"/></name></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="57" pos:column="9">reply<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">setHeaders<pos:position pos:line="57" pos:column="26"/></name></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">status<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="35">NULL<pos:position pos:line="57" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">NULL<pos:position pos:line="57" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="47">0<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="50">-<pos:position pos:line="57" pos:column="51"/></operator><literal type="number" pos:line="57" pos:column="51">1<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="54">-<pos:position pos:line="57" pos:column="55"/></operator><literal type="number" pos:line="57" pos:column="55">1<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="58" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="59" pos:column="9">reply<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">setHeaders<pos:position pos:line="59" pos:column="26"/></name></name><argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">status<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">NULL<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="41">mimeGetContentType<pos:position pos:line="59" pos:column="59"/></name><argument_list pos:line="59" pos:column="59">(<argument><expr><call><name><name pos:line="59" pos:column="60">icon_<pos:position pos:line="59" pos:column="65"/></name><operator pos:line="59" pos:column="65">.<pos:position pos:line="59" pos:column="66"/></operator><name pos:line="59" pos:column="66">c_str<pos:position pos:line="59" pos:column="71"/></name></name><argument_list pos:line="59" pos:column="71">()<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="76">sb<pos:position pos:line="59" pos:column="78"/></name><operator pos:line="59" pos:column="78">.<pos:position pos:line="59" pos:column="79"/></operator><name pos:line="59" pos:column="79">st_size<pos:position pos:line="59" pos:column="86"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="88">sb<pos:position pos:line="59" pos:column="90"/></name><operator pos:line="59" pos:column="90">.<pos:position pos:line="59" pos:column="91"/></operator><name pos:line="59" pos:column="91">st_mtime<pos:position pos:line="59" pos:column="99"/></name></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="101">-<pos:position pos:line="59" pos:column="102"/></operator><literal type="number" pos:line="59" pos:column="102">1<pos:position pos:line="59" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="105"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">reply<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">cache_control<pos:position pos:line="60" pos:column="25"/></name></name> <operator pos:line="60" pos:column="26">=<pos:position pos:line="60" pos:column="27"/></operator> <operator pos:line="60" pos:column="28">new<pos:position pos:line="60" pos:column="31"/></operator> <call><name pos:line="60" pos:column="32">HttpHdrCc<pos:position pos:line="60" pos:column="41"/></name><argument_list pos:line="60" pos:column="41">()<pos:position pos:line="60" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="61" pos:column="5">reply<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">cache_control<pos:position pos:line="61" pos:column="25"/></name><operator pos:line="61" pos:column="25">-&gt;<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="27">maxAge<pos:position pos:line="61" pos:column="33"/></name></name><argument_list pos:line="61" pos:column="33">(<argument><expr><literal type="number" pos:line="61" pos:column="34">86400<pos:position pos:line="61" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="62" pos:column="5">reply<pos:position pos:line="62" pos:column="10"/></name><operator pos:line="62" pos:column="10">-&gt;<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="12">header<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">.<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="19">putCc<pos:position pos:line="62" pos:column="24"/></name></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name><name pos:line="62" pos:column="25">reply<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">cache_control<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="63" pos:column="5">e<pos:position pos:line="63" pos:column="6"/></name><operator pos:line="63" pos:column="6">-&gt;<pos:position pos:line="63" pos:column="11"/></operator><name pos:line="63" pos:column="8">replaceHttpReply<pos:position pos:line="63" pos:column="24"/></name></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name pos:line="63" pos:column="25">reply<pos:position pos:line="63" pos:column="30"/></name></expr></argument>)<pos:position pos:line="63" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="32"/></expr_stmt>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">status<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">==<pos:position pos:line="65" pos:column="18"/></operator> <name><name pos:line="65" pos:column="19">Http<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">::<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="25">scOkay<pos:position pos:line="65" pos:column="31"/></name></name></expr>)<pos:position pos:line="65" pos:column="32"/></condition><then pos:line="65" pos:column="32"> <block pos:line="65" pos:column="33">{
        <comment type="block" pos:line="66" pos:column="9">/* read the file into the buffer and append it to store */</comment>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">int<pos:position pos:line="67" pos:column="12"/></name></type> <name pos:line="67" pos:column="13">n<pos:position pos:line="67" pos:column="14"/></name></decl>;<pos:position pos:line="67" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="68" pos:column="9">std<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">::<pos:position pos:line="68" pos:column="14"/></operator><name><name pos:line="68" pos:column="14">array<pos:position pos:line="68" pos:column="19"/></name><argument_list type="generic" pos:line="68" pos:column="19">&lt;<argument><expr><name pos:line="68" pos:column="20">char<pos:position pos:line="68" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="26">4096<pos:position pos:line="68" pos:column="30"/></literal></expr></argument>&gt;<pos:position pos:line="68" pos:column="34"/></argument_list></name></name></type> <name pos:line="68" pos:column="32">buf<pos:position pos:line="68" pos:column="35"/></name></decl>;<pos:position pos:line="68" pos:column="36"/></decl_stmt>
        <while pos:line="69" pos:column="9">while <condition pos:line="69" pos:column="15">(<expr><operator pos:line="69" pos:column="16">(<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="17">n<pos:position pos:line="69" pos:column="18"/></name> <operator pos:line="69" pos:column="19">=<pos:position pos:line="69" pos:column="20"/></operator> <call><name pos:line="69" pos:column="21">FD_READ_METHOD<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">fd<pos:position pos:line="69" pos:column="38"/></name></expr></argument>, <argument><expr><call><name><name pos:line="69" pos:column="40">buf<pos:position pos:line="69" pos:column="43"/></name><operator pos:line="69" pos:column="43">.<pos:position pos:line="69" pos:column="44"/></operator><name pos:line="69" pos:column="44">data<pos:position pos:line="69" pos:column="48"/></name></name><argument_list pos:line="69" pos:column="48">()<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="69" pos:column="52">buf<pos:position pos:line="69" pos:column="55"/></name><operator pos:line="69" pos:column="55">.<pos:position pos:line="69" pos:column="56"/></operator><name pos:line="69" pos:column="56">size<pos:position pos:line="69" pos:column="60"/></name></name><argument_list pos:line="69" pos:column="60">()<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call><operator pos:line="69" pos:column="63">)<pos:position pos:line="69" pos:column="64"/></operator> <operator pos:line="69" pos:column="65">&gt;<pos:position pos:line="69" pos:column="69"/></operator> <literal type="number" pos:line="69" pos:column="67">0<pos:position pos:line="69" pos:column="68"/></literal></expr>)<pos:position pos:line="69" pos:column="69"/></condition>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="70" pos:column="13">e<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">append<pos:position pos:line="70" pos:column="22"/></name></name><argument_list pos:line="70" pos:column="22">(<argument><expr><call><name><name pos:line="70" pos:column="23">buf<pos:position pos:line="70" pos:column="26"/></name><operator pos:line="70" pos:column="26">.<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">data<pos:position pos:line="70" pos:column="31"/></name></name><argument_list pos:line="70" pos:column="31">()<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="70" pos:column="35">n<pos:position pos:line="70" pos:column="36"/></name></expr></argument>)<pos:position pos:line="70" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="38"/></expr_stmt></block></while>

        <expr_stmt><expr><call><name pos:line="72" pos:column="9">file_close<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">fd<pos:position pos:line="72" pos:column="22"/></name></expr></argument>)<pos:position pos:line="72" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="75" pos:column="5">e<pos:position pos:line="75" pos:column="6"/></name><operator pos:line="75" pos:column="6">-&gt;<pos:position pos:line="75" pos:column="11"/></operator><name pos:line="75" pos:column="8">flush<pos:position pos:line="75" pos:column="13"/></name></name><argument_list pos:line="75" pos:column="13">()<pos:position pos:line="75" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="76" pos:column="5">e<pos:position pos:line="76" pos:column="6"/></name><operator pos:line="76" pos:column="6">-&gt;<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="8">complete<pos:position pos:line="76" pos:column="16"/></name></name><argument_list pos:line="76" pos:column="16">()<pos:position pos:line="76" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="77" pos:column="5">e<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">timestampsSet<pos:position pos:line="77" pos:column="21"/></name></name><argument_list pos:line="77" pos:column="21">()<pos:position pos:line="77" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="78" pos:column="5">e<pos:position pos:line="78" pos:column="6"/></name><operator pos:line="78" pos:column="6">-&gt;<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="8">unlock<pos:position pos:line="78" pos:column="14"/></name></name><argument_list pos:line="78" pos:column="14">(<argument><expr><literal type="string" pos:line="78" pos:column="15">"MimeIcon::created"<pos:position pos:line="78" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">debugs<pos:position pos:line="79" pos:column="11"/></name><argument_list pos:line="79" pos:column="11">(<argument><expr><literal type="number" pos:line="79" pos:column="12">25<pos:position pos:line="79" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="16">3<pos:position pos:line="79" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="19">"Loaded icon "<pos:position pos:line="79" pos:column="33"/></literal> <operator pos:line="79" pos:column="34">&lt;&lt;<pos:position pos:line="79" pos:column="42"/></operator> <name pos:line="79" pos:column="37">url_<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

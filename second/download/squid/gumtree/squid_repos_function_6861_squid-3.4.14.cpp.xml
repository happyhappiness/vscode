<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6861_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">compare_heap_keys<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">void<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">a<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">void<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">b<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">heap_node<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier><modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">an<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">heap_node<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></operator><operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="37">a<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">heap_node<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">bn<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">heap_node<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></operator><operator pos:line="5" pos:column="35">)<pos:position pos:line="5" pos:column="36"/></operator> <name pos:line="5" pos:column="37">b<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">float<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">cmp<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name><operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><operator pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">an<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">)<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">key<pos:position pos:line="6" pos:column="27"/></name></name> <operator pos:line="6" pos:column="28">-<pos:position pos:line="6" pos:column="29"/></operator> <name><operator pos:line="6" pos:column="30">(<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">bn<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">)<pos:position pos:line="6" pos:column="35"/></operator><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">key<pos:position pos:line="6" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">cmp<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">&lt;<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">-<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr>;<pos:position pos:line="8" pos:column="19"/></return></block></then>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

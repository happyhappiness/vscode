<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_37_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">decode_pub_auth<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">cachemgr_request<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">req<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">buf<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">host_name<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">time_str<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">user_name<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">passwd<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debug<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"cmgr: decoding pub: '%s'\n"<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="41">safe_str<pos:position pos:line="10" pos:column="49"/></name><argument_list pos:line="10" pos:column="49">(<argument><expr><name><name pos:line="10" pos:column="50">req<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">pub_auth<pos:position pos:line="10" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">safe_free<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">req<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">passwd<pos:position pos:line="11" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">req<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">pub_auth<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">||<pos:position pos:line="13" pos:column="26"/></operator> <call><name pos:line="13" pos:column="27">strlen<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name><name pos:line="13" pos:column="34">req<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">-&gt;<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="39">pub_auth<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call> <operator pos:line="13" pos:column="49">&lt;<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="51">4<pos:position pos:line="13" pos:column="52"/></literal> <operator pos:line="13" pos:column="53">+<pos:position pos:line="13" pos:column="54"/></operator> <call><name pos:line="13" pos:column="55">strlen<pos:position pos:line="13" pos:column="61"/></name><argument_list pos:line="13" pos:column="61">(<argument><expr><call><name pos:line="13" pos:column="62">safe_str<pos:position pos:line="13" pos:column="70"/></name><argument_list pos:line="13" pos:column="70">(<argument><expr><name><name pos:line="13" pos:column="71">req<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">-&gt;<pos:position pos:line="13" pos:column="79"/></operator><name pos:line="13" pos:column="76">hostname<pos:position pos:line="13" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="87"/></condition><then pos:line="13" pos:column="87">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">int<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">decodedLen<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><call><name pos:line="16" pos:column="28">base64_decode_len<pos:position pos:line="16" pos:column="45"/></name><argument_list pos:line="16" pos:column="45">(<argument><expr><name><name pos:line="16" pos:column="46">req<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">pub_auth<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">buf<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">char<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><operator pos:line="17" pos:column="17">)<pos:position pos:line="17" pos:column="18"/></operator><call><name pos:line="17" pos:column="18">xmalloc<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">decodedLen<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">base64_decode<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">buf<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">decodedLen<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="36">req<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">pub_auth<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debug<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"cmgr: length ok\n"<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* parse ( a lot of memory leaks, but that is cachemgr style :) */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">host_name<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">strtok<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">buf<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"|"<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call><operator pos:line="23" pos:column="38">)<pos:position pos:line="23" pos:column="39"/></operator> <operator pos:line="23" pos:column="40">==<pos:position pos:line="23" pos:column="42"/></operator> <name pos:line="23" pos:column="43">NULL<pos:position pos:line="23" pos:column="47"/></name></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48"> <block pos:line="23" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">xfree<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">buf<pos:position pos:line="24" pos:column="18"/></name></expr></argument>)<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">debug<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"cmgr: decoded host: '%s'\n"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="41">host_name<pos:position pos:line="28" pos:column="50"/></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">time_str<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">strtok<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">NULL<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="34">"|"<pos:position pos:line="30" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call><operator pos:line="30" pos:column="38">)<pos:position pos:line="30" pos:column="39"/></operator> <operator pos:line="30" pos:column="40">==<pos:position pos:line="30" pos:column="42"/></operator> <name pos:line="30" pos:column="43">NULL<pos:position pos:line="30" pos:column="47"/></name></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">xfree<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">buf<pos:position pos:line="31" pos:column="18"/></name></expr></argument>)<pos:position pos:line="31" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="20"/></expr_stmt>
        <return pos:line="32" pos:column="9">return;<pos:position pos:line="32" pos:column="16"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debug<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><literal type="string" pos:line="35" pos:column="11">"cmgr: decoded time: '%s' (now: %d)\n"<pos:position pos:line="35" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">time_str<pos:position pos:line="35" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="61">(<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="62">int<pos:position pos:line="35" pos:column="65"/></name><operator pos:line="35" pos:column="65">)<pos:position pos:line="35" pos:column="66"/></operator> <name pos:line="35" pos:column="67">now<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="72"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">(<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">user_name<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">strtok<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">NULL<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">"|"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call><operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator> <operator pos:line="37" pos:column="41">==<pos:position pos:line="37" pos:column="43"/></operator> <name pos:line="37" pos:column="44">NULL<pos:position pos:line="37" pos:column="48"/></name></expr>)<pos:position pos:line="37" pos:column="49"/></condition><then pos:line="37" pos:column="49"> <block pos:line="37" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">xfree<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">buf<pos:position pos:line="38" pos:column="18"/></name></expr></argument>)<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">debug<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><literal type="string" pos:line="42" pos:column="11">"cmgr: decoded uname: '%s'\n"<pos:position pos:line="42" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">user_name<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">passwd<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">strtok<pos:position pos:line="44" pos:column="25"/></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">NULL<pos:position pos:line="44" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="32">"|"<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call><operator pos:line="44" pos:column="36">)<pos:position pos:line="44" pos:column="37"/></operator> <operator pos:line="44" pos:column="38">==<pos:position pos:line="44" pos:column="40"/></operator> <name pos:line="44" pos:column="41">NULL<pos:position pos:line="44" pos:column="45"/></name></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46"> <block pos:line="44" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">xfree<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">buf<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
        <return pos:line="46" pos:column="9">return;<pos:position pos:line="46" pos:column="16"/></return>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">debug<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><literal type="string" pos:line="49" pos:column="11">"cmgr: decoded passwd: '%s'\n"<pos:position pos:line="49" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="43">passwd<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="51" pos:column="5">/* verify freshness and validity */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">atoi<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">time_str<pos:position pos:line="52" pos:column="22"/></name></expr></argument>)<pos:position pos:line="52" pos:column="23"/></argument_list></call> <operator pos:line="52" pos:column="24">+<pos:position pos:line="52" pos:column="25"/></operator> <name pos:line="52" pos:column="26">passwd_ttl<pos:position pos:line="52" pos:column="36"/></name> <operator pos:line="52" pos:column="37">&lt;<pos:position pos:line="52" pos:column="41"/></operator> <name pos:line="52" pos:column="39">now<pos:position pos:line="52" pos:column="42"/></name></expr>)<pos:position pos:line="52" pos:column="43"/></condition><then pos:line="52" pos:column="43"> <block pos:line="52" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">xfree<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">buf<pos:position pos:line="53" pos:column="18"/></name></expr></argument>)<pos:position pos:line="53" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="20"/></expr_stmt>
        <return pos:line="54" pos:column="9">return;<pos:position pos:line="54" pos:column="16"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><call><name pos:line="57" pos:column="9">strcasecmp<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">host_name<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="31">req<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">hostname<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="46"/></condition><then pos:line="57" pos:column="46"> <block pos:line="57" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">xfree<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">buf<pos:position pos:line="58" pos:column="18"/></name></expr></argument>)<pos:position pos:line="58" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
        <return pos:line="59" pos:column="9">return;<pos:position pos:line="59" pos:column="16"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">debug<pos:position pos:line="62" pos:column="10"/></name><argument_list pos:line="62" pos:column="10">(<argument><expr><literal type="string" pos:line="62" pos:column="11">"cmgr: verified auth. info.\n"<pos:position pos:line="62" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* ok, accept */</comment>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">safe_free<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><name><name pos:line="65" pos:column="15">req<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">-&gt;<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="20">user_name<pos:position pos:line="65" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="67" pos:column="5">req<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">user_name<pos:position pos:line="67" pos:column="19"/></name></name> <operator pos:line="67" pos:column="20">=<pos:position pos:line="67" pos:column="21"/></operator> <call><name pos:line="67" pos:column="22">xstrdup<pos:position pos:line="67" pos:column="29"/></name><argument_list pos:line="67" pos:column="29">(<argument><expr><name pos:line="67" pos:column="30">user_name<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="69" pos:column="5">req<pos:position pos:line="69" pos:column="8"/></name><operator pos:line="69" pos:column="8">-&gt;<pos:position pos:line="69" pos:column="13"/></operator><name pos:line="69" pos:column="10">passwd<pos:position pos:line="69" pos:column="16"/></name></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">xstrdup<pos:position pos:line="69" pos:column="26"/></name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">passwd<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="71" pos:column="5">xfree<pos:position pos:line="71" pos:column="10"/></name><argument_list pos:line="71" pos:column="10">(<argument><expr><name pos:line="71" pos:column="11">buf<pos:position pos:line="71" pos:column="14"/></name></expr></argument>)<pos:position pos:line="71" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="16"/></expr_stmt>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1312_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">statStoreEntry<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">MemBuf<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">mb<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">StoreEntry<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">e<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemObject<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">mem<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">e<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">mem_obj<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">mb<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">-&gt;<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="9">appendf<pos:position pos:line="5" pos:column="16"/></name></name><argument_list pos:line="5" pos:column="16">(<argument><expr><literal type="string" pos:line="5" pos:column="17">"KEY %s\n"<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="29">e<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">getMD5Text<pos:position pos:line="5" pos:column="42"/></name></name><argument_list pos:line="5" pos:column="42">()<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">mb<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">appendf<pos:position pos:line="6" pos:column="16"/></name></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="string" pos:line="6" pos:column="17">"\t%s\n"<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="27">describeStatuses<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">e<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">mb<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">appendf<pos:position pos:line="7" pos:column="16"/></name></name><argument_list pos:line="7" pos:column="16">(<argument><expr><literal type="string" pos:line="7" pos:column="17">"\t%s\n"<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="27">storeEntryFlags<pos:position pos:line="7" pos:column="42"/></name><argument_list pos:line="7" pos:column="42">(<argument><expr><name pos:line="7" pos:column="43">e<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">mb<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">appendf<pos:position pos:line="8" pos:column="16"/></name></name><argument_list pos:line="8" pos:column="16">(<argument><expr><literal type="string" pos:line="8" pos:column="17">"\t%s\n"<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="27">e<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">describeTimestamps<pos:position pos:line="8" pos:column="48"/></name></name><argument_list pos:line="8" pos:column="48">()<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">mb<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">appendf<pos:position pos:line="9" pos:column="16"/></name></name><argument_list pos:line="9" pos:column="16">(<argument><expr><literal type="string" pos:line="9" pos:column="17">"\t%d locks, %d clients, %d refs\n"<pos:position pos:line="9" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="54">(<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="55">int<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator> <call><name><name pos:line="9" pos:column="60">e<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">-&gt;<pos:position pos:line="9" pos:column="66"/></operator><name pos:line="9" pos:column="63">locks<pos:position pos:line="9" pos:column="68"/></name></name><argument_list pos:line="9" pos:column="68">()<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="72">storePendingNClients<pos:position pos:line="9" pos:column="92"/></name><argument_list pos:line="9" pos:column="92">(<argument><expr><name pos:line="9" pos:column="93">e<pos:position pos:line="9" pos:column="94"/></name></expr></argument>)<pos:position pos:line="9" pos:column="95"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="9" pos:column="97">(<pos:position pos:line="9" pos:column="98"/></operator><name pos:line="9" pos:column="98">int<pos:position pos:line="9" pos:column="101"/></name><operator pos:line="9" pos:column="101">)<pos:position pos:line="9" pos:column="102"/></operator> <name><name pos:line="9" pos:column="103">e<pos:position pos:line="9" pos:column="104"/></name><operator pos:line="9" pos:column="104">-&gt;<pos:position pos:line="9" pos:column="109"/></operator><name pos:line="9" pos:column="106">refcount<pos:position pos:line="9" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="116"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">mb<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">appendf<pos:position pos:line="10" pos:column="16"/></name></name><argument_list pos:line="10" pos:column="16">(<argument><expr><literal type="string" pos:line="10" pos:column="17">"\tSwap Dir %d, File %#08X\n"<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="48">e<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">swap_dirn<pos:position pos:line="10" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="62">e<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">-&gt;<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="65">swap_filen<pos:position pos:line="10" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">mem<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">!=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="9">mem<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">stat<pos:position pos:line="13" pos:column="18"/></name></name> <argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">mb<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">mb<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">-&gt;<pos:position pos:line="15" pos:column="12"/></operator><name pos:line="15" pos:column="9">append<pos:position pos:line="15" pos:column="15"/></name></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"\n"<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

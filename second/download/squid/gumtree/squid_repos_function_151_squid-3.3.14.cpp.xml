<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_151_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">CheckSyntheticWorks<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><call><name><name pos:line="4" pos:column="13">HasExplicit<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">Instances<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call> <operator pos:line="4" pos:column="38">==<pos:position pos:line="4" pos:column="40"/></operator> <literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><call><name><name pos:line="5" pos:column="13">HasExplicit<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">::<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">Assignments<pos:position pos:line="5" pos:column="37"/></name></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call> <operator pos:line="5" pos:column="40">==<pos:position pos:line="5" pos:column="42"/></operator> <literal type="number" pos:line="5" pos:column="43">0<pos:position pos:line="5" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SyntheticOwnsExplicit<pos:position pos:line="6" pos:column="26"/></name> <modifier pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></modifier></type><name pos:line="6" pos:column="28">one<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><operator pos:line="6" pos:column="34">new<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">SyntheticOwnsExplicit<pos:position pos:line="6" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><call><name><name pos:line="7" pos:column="13">HasExplicit<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">::<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">Instances<pos:position pos:line="7" pos:column="35"/></name></name><argument_list pos:line="7" pos:column="35">()<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">1<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SyntheticOwnsExplicit<pos:position pos:line="8" pos:column="26"/></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">two<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><operator pos:line="8" pos:column="34">new<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">SyntheticOwnsExplicit<pos:position pos:line="8" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><call><name><name pos:line="9" pos:column="13">HasExplicit<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">::<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">Instances<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">()<pos:position pos:line="9" pos:column="37"/></argument_list></call> <operator pos:line="9" pos:column="38">==<pos:position pos:line="9" pos:column="40"/></operator> <literal type="number" pos:line="9" pos:column="41">2<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">*<pos:position pos:line="10" pos:column="6"/></operator><name pos:line="10" pos:column="6">two<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <operator pos:line="10" pos:column="12">*<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">one<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><call><name><name pos:line="11" pos:column="13">HasExplicit<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">::<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">Instances<pos:position pos:line="11" pos:column="35"/></name></name><argument_list pos:line="11" pos:column="35">()<pos:position pos:line="11" pos:column="37"/></argument_list></call> <operator pos:line="11" pos:column="38">==<pos:position pos:line="11" pos:column="40"/></operator> <literal type="number" pos:line="11" pos:column="41">2<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><call><name><name pos:line="12" pos:column="13">HasExplicit<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">::<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">Assignments<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">()<pos:position pos:line="12" pos:column="39"/></argument_list></call> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="43">1<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">two<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">one<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><call><name><name pos:line="14" pos:column="13">HasExplicit<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">::<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">Instances<pos:position pos:line="14" pos:column="35"/></name></name><argument_list pos:line="14" pos:column="35">()<pos:position pos:line="14" pos:column="37"/></argument_list></call> <operator pos:line="14" pos:column="38">==<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">2<pos:position pos:line="14" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><call><name><name pos:line="15" pos:column="13">HasExplicit<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">::<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">Assignments<pos:position pos:line="15" pos:column="37"/></name></name><argument_list pos:line="15" pos:column="37">()<pos:position pos:line="15" pos:column="39"/></argument_list></call> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="43">2<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">SyntheticOwnsExplicit<pos:position pos:line="16" pos:column="26"/></name> <modifier pos:line="16" pos:column="27">*<pos:position pos:line="16" pos:column="28"/></modifier></type><name pos:line="16" pos:column="28">three<pos:position pos:line="16" pos:column="33"/></name> <init pos:line="16" pos:column="34">= <expr><operator pos:line="16" pos:column="36">new<pos:position pos:line="16" pos:column="39"/></operator> <call><name pos:line="16" pos:column="40">SyntheticOwnsExplicit<pos:position pos:line="16" pos:column="61"/></name><argument_list pos:line="16" pos:column="61">(<argument><expr><operator pos:line="16" pos:column="62">*<pos:position pos:line="16" pos:column="63"/></operator><name pos:line="16" pos:column="63">two<pos:position pos:line="16" pos:column="66"/></name></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="68"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><call><name><name pos:line="17" pos:column="13">HasExplicit<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">::<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">Instances<pos:position pos:line="17" pos:column="35"/></name></name><argument_list pos:line="17" pos:column="35">()<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">3<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">delete<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">three<pos:position pos:line="18" pos:column="17"/></name></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><call><name><name pos:line="19" pos:column="13">HasExplicit<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">::<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">Instances<pos:position pos:line="19" pos:column="35"/></name></name><argument_list pos:line="19" pos:column="35">()<pos:position pos:line="19" pos:column="37"/></argument_list></call> <operator pos:line="19" pos:column="38">==<pos:position pos:line="19" pos:column="40"/></operator> <literal type="number" pos:line="19" pos:column="41">2<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">delete<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">one<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name> <argument_list pos:line="21" pos:column="12">(<argument><expr><call><name><name pos:line="21" pos:column="13">HasExplicit<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">::<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">Instances<pos:position pos:line="21" pos:column="35"/></name></name><argument_list pos:line="21" pos:column="35">()<pos:position pos:line="21" pos:column="37"/></argument_list></call> <operator pos:line="21" pos:column="38">==<pos:position pos:line="21" pos:column="40"/></operator> <literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="22" pos:column="5">delete<pos:position pos:line="22" pos:column="11"/></operator> <name pos:line="22" pos:column="12">two<pos:position pos:line="22" pos:column="15"/></name></expr>;<pos:position pos:line="22" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><call><name><name pos:line="23" pos:column="13">HasExplicit<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">::<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">Instances<pos:position pos:line="23" pos:column="35"/></name></name><argument_list pos:line="23" pos:column="35">()<pos:position pos:line="23" pos:column="37"/></argument_list></call> <operator pos:line="23" pos:column="38">==<pos:position pos:line="23" pos:column="40"/></operator> <literal type="number" pos:line="23" pos:column="41">0<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">HasExplicit<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">::<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">Assignments<pos:position pos:line="24" pos:column="29"/></name></name><argument_list pos:line="24" pos:column="29">(<argument><expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name> <argument_list pos:line="25" pos:column="12">(<argument><expr><call><name><name pos:line="25" pos:column="13">HasExplicit<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">::<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">Assignments<pos:position pos:line="25" pos:column="37"/></name></name><argument_list pos:line="25" pos:column="37">()<pos:position pos:line="25" pos:column="39"/></argument_list></call> <operator pos:line="25" pos:column="40">==<pos:position pos:line="25" pos:column="42"/></operator> <literal type="number" pos:line="25" pos:column="43">0<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4660_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">UFSSwapDir<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">openLog<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">logPath<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">logPath<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name pos:line="5" pos:column="15">logFile<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">swaplog_fd<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">file_open<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">logPath<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="37">O_WRONLY<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">|<pos:position pos:line="6" pos:column="47"/></operator> <name pos:line="6" pos:column="48">O_CREAT<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">|<pos:position pos:line="6" pos:column="57"/></operator> <name pos:line="6" pos:column="58">O_BINARY<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">swaplog_fd<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&lt;<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">50<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">""<pos:position pos:line="9" pos:column="25"/></literal> <operator pos:line="9" pos:column="26">&lt;&lt;<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="29">logPath<pos:position pos:line="9" pos:column="36"/></name> <operator pos:line="9" pos:column="37">&lt;&lt;<pos:position pos:line="9" pos:column="45"/></operator> <literal type="string" pos:line="9" pos:column="40">": "<pos:position pos:line="9" pos:column="44"/></literal> <operator pos:line="9" pos:column="45">&lt;&lt;<pos:position pos:line="9" pos:column="53"/></operator> <call><name pos:line="9" pos:column="48">xstrerror<pos:position pos:line="9" pos:column="57"/></name><argument_list pos:line="9" pos:column="57">()<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">fatal<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="string" pos:line="10" pos:column="15">"commonUfsDirOpenSwapLog: Failed to open swap log."<pos:position pos:line="10" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">50<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">3<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"Cache Dir #"<pos:position pos:line="13" pos:column="32"/></literal> <operator pos:line="13" pos:column="33">&lt;&lt;<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="36">index<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">&lt;&lt;<pos:position pos:line="13" pos:column="50"/></operator> <literal type="string" pos:line="13" pos:column="45">" log opened on FD "<pos:position pos:line="13" pos:column="65"/></literal> <operator pos:line="13" pos:column="66">&lt;&lt;<pos:position pos:line="13" pos:column="74"/></operator> <name pos:line="13" pos:column="69">swaplog_fd<pos:position pos:line="13" pos:column="79"/></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><literal type="number" pos:line="15" pos:column="9">0<pos:position pos:line="15" pos:column="10"/></literal> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NumberOfUFSDirs<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">assert<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">UFSDirToGlobalDirMapping<pos:position pos:line="16" pos:column="48"/></name></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="18" pos:column="5">++<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">NumberOfUFSDirs<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">NumberOfUFSDirs<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&lt;=<pos:position pos:line="20" pos:column="33"/></operator> <name><name pos:line="20" pos:column="31">Config<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">.<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">cacheSwap<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">.<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="48">n_configured<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1722_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">statHistIntInit<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">StatHist<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">H<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">n<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">statHistInit<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">H<pos:position pos:line="4" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="21">n<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="24">Null<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="30">Null<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">double<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator> <literal type="number" pos:line="4" pos:column="45">0<pos:position pos:line="4" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="4" pos:column="48">(<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">double<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">)<pos:position pos:line="4" pos:column="56"/></operator> <name pos:line="4" pos:column="57">n<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">-<pos:position pos:line="4" pos:column="60"/></operator> <literal type="number" pos:line="4" pos:column="61">1<pos:position pos:line="4" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="64"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

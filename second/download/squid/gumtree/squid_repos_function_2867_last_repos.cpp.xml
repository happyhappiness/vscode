<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2867_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oid_ParseFn<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">snmpTreeGet<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">oid<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type> <name pos:line="2" pos:column="19">Current<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">snint<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">CurrentLen<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">oid_ParseFn<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">Fn<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">mib_tree_entry<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">mibTreeEntry<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">count<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">49<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">5<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="19">"snmpTreeGet: Called"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">MemBuf<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">tmp<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">49<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">6<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"snmpTreeGet: Current : "<pos:position pos:line="11" pos:column="44"/></literal> <operator pos:line="11" pos:column="45">&lt;&lt;<pos:position pos:line="11" pos:column="53"/></operator> <call><name pos:line="11" pos:column="48">snmpDebugOid<pos:position pos:line="11" pos:column="60"/></name><argument_list pos:line="11" pos:column="60">(<argument><expr><name pos:line="11" pos:column="61">Current<pos:position pos:line="11" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="70">CurrentLen<pos:position pos:line="11" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="82">tmp<pos:position pos:line="11" pos:column="85"/></name></expr></argument>)<pos:position pos:line="11" pos:column="86"/></argument_list></call></expr></argument> )<pos:position pos:line="11" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="89"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">mibTreeEntry<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">mib_tree_head<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">Current<pos:position pos:line="15" pos:column="16"/></name><index pos:line="15" pos:column="16">[<expr><name pos:line="15" pos:column="17">count<pos:position pos:line="15" pos:column="22"/></name></expr>]<pos:position pos:line="15" pos:column="23"/></index></name> <operator pos:line="15" pos:column="24">==<pos:position pos:line="15" pos:column="26"/></operator> <name><name pos:line="15" pos:column="27">mibTreeEntry<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">-&gt;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="41">name<pos:position pos:line="15" pos:column="45"/></name><index pos:line="15" pos:column="45">[<expr><name pos:line="15" pos:column="46">count<pos:position pos:line="15" pos:column="51"/></name></expr>]<pos:position pos:line="15" pos:column="52"/></index></name></expr>)<pos:position pos:line="15" pos:column="53"/></condition><then pos:line="15" pos:column="53"> <block pos:line="15" pos:column="54">{
        <expr_stmt><expr><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">count<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>

        <while pos:line="18" pos:column="9">while <condition pos:line="18" pos:column="15">(<expr><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">mibTreeEntry<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="31">&amp;&amp;<pos:position pos:line="18" pos:column="41"/></operator> <operator pos:line="18" pos:column="34">(<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">count<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">&lt;<pos:position pos:line="18" pos:column="45"/></operator> <name pos:line="18" pos:column="43">CurrentLen<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">)<pos:position pos:line="18" pos:column="54"/></operator> <operator pos:line="18" pos:column="55">&amp;&amp;<pos:position pos:line="18" pos:column="65"/></operator> <operator pos:line="18" pos:column="58">(<pos:position pos:line="18" pos:column="59"/></operator><operator pos:line="18" pos:column="59">!<pos:position pos:line="18" pos:column="60"/></operator><name><name pos:line="18" pos:column="60">mibTreeEntry<pos:position pos:line="18" pos:column="72"/></name><operator pos:line="18" pos:column="72">-&gt;<pos:position pos:line="18" pos:column="77"/></operator><name pos:line="18" pos:column="74">parsefunction<pos:position pos:line="18" pos:column="87"/></name></name><operator pos:line="18" pos:column="87">)<pos:position pos:line="18" pos:column="88"/></operator></expr>)<pos:position pos:line="18" pos:column="89"/></condition> <block pos:line="18" pos:column="90">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">mibTreeEntry<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">snmpTreeEntry<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">Current<pos:position pos:line="19" pos:column="49"/></name><index pos:line="19" pos:column="49">[<expr><name pos:line="19" pos:column="50">count<pos:position pos:line="19" pos:column="55"/></name></expr>]<pos:position pos:line="19" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">count<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="65">mibTreeEntry<pos:position pos:line="19" pos:column="77"/></name></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">count<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></while>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">mibTreeEntry<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">&amp;&amp;<pos:position pos:line="24" pos:column="32"/></operator> <name><name pos:line="24" pos:column="25">mibTreeEntry<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">parsefunction<pos:position pos:line="24" pos:column="52"/></name></name></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">Fn<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name><name pos:line="25" pos:column="14">mibTreeEntry<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">parsefunction<pos:position pos:line="25" pos:column="41"/></name></name></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">debugs<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">49<pos:position pos:line="27" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="16">5<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="19">"snmpTreeGet: return"<pos:position pos:line="27" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt>

    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">Fn<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">)<pos:position pos:line="29" pos:column="16"/></operator></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_542_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Transients<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">unlink<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">&amp;<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="32">e<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">e<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">.<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">mem_obj<pos:position pos:line="4" pos:column="18"/></name></name> <operator pos:line="4" pos:column="19">&amp;&amp;<pos:position pos:line="4" pos:column="29"/></operator> <name><name pos:line="4" pos:column="22">e<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">mem_obj<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">xitTable<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">io<pos:position pos:line="4" pos:column="44"/></name></name> <operator pos:line="4" pos:column="45">==<pos:position pos:line="4" pos:column="47"/></operator> <name><name pos:line="4" pos:column="48">MemObject<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">::<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="59">ioWriting<pos:position pos:line="4" pos:column="68"/></name></name></expr>)<pos:position pos:line="4" pos:column="69"/></condition><then pos:line="4" pos:column="69">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">abandon<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt></block></then></if>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4427_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">strup<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><name pos:line="2" pos:column="7">char<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">s<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="15"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">s<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition> <block pos:line="4" pos:column="16">{
        <expr_stmt><expr><operator pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">s<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <operator pos:line="5" pos:column="14">(<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">)<pos:position pos:line="5" pos:column="20"/></operator><call><name pos:line="5" pos:column="20">toupper<pos:position pos:line="5" pos:column="27"/></name><argument_list pos:line="5" pos:column="27">(<argument><expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">unsigned<pos:position pos:line="5" pos:column="37"/></name> <name pos:line="5" pos:column="38">char<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">s<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="6" pos:column="9">++<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">s<pos:position pos:line="6" pos:column="12"/></name></expr>;<pos:position pos:line="6" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></while>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

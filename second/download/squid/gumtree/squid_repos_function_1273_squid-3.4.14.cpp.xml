<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1273_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreMeta<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">validType<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">type<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* VOID is reserved, and new types have to be added as classes */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">type<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">&lt;=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="17">STORE_META_VOID<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">||<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">type<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">&gt;=<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="44">STORE_META_END<pos:position pos:line="5" pos:column="58"/></name> <operator pos:line="5" pos:column="59">+<pos:position pos:line="5" pos:column="60"/></operator> <literal type="number" pos:line="5" pos:column="61">10<pos:position pos:line="5" pos:column="63"/></literal></expr>)<pos:position pos:line="5" pos:column="64"/></condition><then pos:line="5" pos:column="64"> <block pos:line="5" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">20<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="20">DBG_CRITICAL<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"storeSwapMetaUnpack: bad type ("<pos:position pos:line="6" pos:column="67"/></literal> <operator pos:line="6" pos:column="68">&lt;&lt;<pos:position pos:line="6" pos:column="76"/></operator> <name pos:line="6" pos:column="71">type<pos:position pos:line="6" pos:column="75"/></name> <operator pos:line="6" pos:column="76">&lt;&lt;<pos:position pos:line="6" pos:column="84"/></operator> <literal type="string" pos:line="6" pos:column="79">")!"<pos:position pos:line="6" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="85"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">false<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* Not yet implemented */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">type<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&gt;=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="17">STORE_META_END<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">||<pos:position pos:line="11" pos:column="34"/></operator>
            <name pos:line="12" pos:column="13">type<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">STORE_META_STOREURL<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">||<pos:position pos:line="12" pos:column="43"/></operator>
            <name pos:line="13" pos:column="13">type<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">STORE_META_VARY_ID<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <block pos:line="13" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">20<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">3<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"storeSwapMetaUnpack: Not yet implemented ("<pos:position pos:line="14" pos:column="67"/></literal> <operator pos:line="14" pos:column="68">&lt;&lt;<pos:position pos:line="14" pos:column="76"/></operator> <name pos:line="14" pos:column="71">type<pos:position pos:line="14" pos:column="75"/></name> <operator pos:line="14" pos:column="76">&lt;&lt;<pos:position pos:line="14" pos:column="84"/></operator> <literal type="string" pos:line="14" pos:column="79">") in disk metadata"<pos:position pos:line="14" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="101"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">false<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* Unused in any current squid code */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">type<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">STORE_META_KEY_URL<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">||<pos:position pos:line="19" pos:column="38"/></operator>
            <name pos:line="20" pos:column="13">type<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">STORE_META_KEY_SHA<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">||<pos:position pos:line="20" pos:column="42"/></operator>
            <name pos:line="21" pos:column="13">type<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">==<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">STORE_META_HITMETERING<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">||<pos:position pos:line="21" pos:column="46"/></operator>
            <name pos:line="22" pos:column="13">type<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">STORE_META_VALID<pos:position pos:line="22" pos:column="37"/></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38"> <block pos:line="22" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">20<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">DBG_CRITICAL<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"Obsolete and unused type ("<pos:position pos:line="23" pos:column="62"/></literal> <operator pos:line="23" pos:column="63">&lt;&lt;<pos:position pos:line="23" pos:column="71"/></operator> <name pos:line="23" pos:column="66">type<pos:position pos:line="23" pos:column="70"/></name> <operator pos:line="23" pos:column="71">&lt;&lt;<pos:position pos:line="23" pos:column="79"/></operator> <literal type="string" pos:line="23" pos:column="74">") in disk metadata"<pos:position pos:line="23" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="96"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><literal type="boolean" pos:line="24" pos:column="16">false<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <return pos:line="27" pos:column="5">return <expr><literal type="boolean" pos:line="27" pos:column="12">true<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

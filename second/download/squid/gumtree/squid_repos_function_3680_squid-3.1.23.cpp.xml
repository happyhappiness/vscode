<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3680_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">IpAddress<pos:position pos:line="1" pos:column="15"/></name><operator pos:line="1" pos:column="15">::<pos:position pos:line="1" pos:column="17"/></operator><name pos:line="1" pos:column="17">GetSockAddr<pos:position pos:line="1" pos:column="28"/></name></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">sockaddr_in<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">&amp;<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="49">buf<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">( <expr><call><name pos:line="3" pos:column="10">IsIPv4<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">()<pos:position pos:line="3" pos:column="18"/></argument_list></call></expr> )<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20"> <block pos:line="3" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">.<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">sin_family<pos:position pos:line="4" pos:column="23"/></name></name> <operator pos:line="4" pos:column="24">=<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">AF_INET<pos:position pos:line="4" pos:column="33"/></name></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">buf<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">.<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">sin_port<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <name><name pos:line="5" pos:column="24">m_SocketAddr<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">.<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">sin6_port<pos:position pos:line="5" pos:column="46"/></name></name></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">Map6to4<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">( <argument><expr><name><name pos:line="6" pos:column="18">m_SocketAddr<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">.<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">sin6_addr<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="42">buf<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">.<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="46">sin_addr<pos:position pos:line="6" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <else pos:line="7" pos:column="7">else <block pos:line="7" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">14<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">HERE<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">&lt;&lt;<pos:position pos:line="8" pos:column="47"/></operator> <literal type="string" pos:line="8" pos:column="42">"IpAddress::GetSockAddr : Cannot convert non-IPv4 to IPv4. from "<pos:position pos:line="8" pos:column="107"/></literal> <operator pos:line="8" pos:column="108">&lt;&lt;<pos:position pos:line="8" pos:column="116"/></operator> <operator pos:line="8" pos:column="111">*<pos:position pos:line="8" pos:column="112"/></operator><name pos:line="8" pos:column="112">this<pos:position pos:line="8" pos:column="116"/></name></expr></argument> )<pos:position pos:line="8" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="119"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="17">buf<pos:position pos:line="10" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="21">0xFFFFFFFF<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>,<argument><expr><sizeof pos:line="10" pos:column="32">sizeof<argument_list pos:line="10" pos:column="38">(<argument><expr pos:line="10" pos:column="39">struct <name pos:line="10" pos:column="46">sockaddr_in<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">HAVE_SIN_LEN_IN_SAI<pos:position pos:line="14" pos:column="24"/></name></expr></cpp:if>
    <comment type="block" pos:line="15" pos:column="5">/* not all OS have this field, BUT when they do it can be a problem if set wrong */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">buf<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">.<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">sin_len<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <sizeof pos:line="16" pos:column="19">sizeof<argument_list pos:line="16" pos:column="25">(<argument><expr pos:line="16" pos:column="26">struct <name pos:line="16" pos:column="33">sockaddr_in<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

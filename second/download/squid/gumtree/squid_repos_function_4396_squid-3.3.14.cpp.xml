<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4396_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CrtdMessage<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">parseRequest<pos:position pos:line="1" pos:column="36"/></name></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name><name pos:line="1" pos:column="37">Ssl<pos:position pos:line="1" pos:column="40"/></name><operator pos:line="1" pos:column="40">::<pos:position pos:line="1" pos:column="42"/></operator><name pos:line="1" pos:column="42">CertificateProperties<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">&amp;<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="65">certProperties<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="81">std<pos:position pos:line="1" pos:column="84"/></name><operator pos:line="1" pos:column="84">::<pos:position pos:line="1" pos:column="86"/></operator><name pos:line="1" pos:column="86">string<pos:position pos:line="1" pos:column="92"/></name></name> <modifier pos:line="1" pos:column="93">&amp;<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="94">error<pos:position pos:line="1" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="100"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">Ssl<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">CrtdMessage<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">::<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">BodyParams<pos:position pos:line="3" pos:column="33"/></name></name></type> <name pos:line="3" pos:column="34">map<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">string<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">certs_part<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">parseBody<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">map<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">certs_part<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Ssl<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">::<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">CrtdMessage<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">::<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">BodyParams<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">::<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="35">iterator<pos:position pos:line="6" pos:column="43"/></name></name></type> <name pos:line="6" pos:column="44">i<pos:position pos:line="6" pos:column="45"/></name> <init pos:line="6" pos:column="46">= <expr><call><name><name pos:line="6" pos:column="48">map<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">.<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="52">find<pos:position pos:line="6" pos:column="56"/></name></name><argument_list pos:line="6" pos:column="56">(<argument><expr><name><name pos:line="6" pos:column="57">Ssl<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">::<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="62">CrtdMessage<pos:position pos:line="6" pos:column="73"/></name><operator pos:line="6" pos:column="73">::<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">param_host<pos:position pos:line="6" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="87"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">i<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <call><name><name pos:line="7" pos:column="14">map<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">end<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24"> <block pos:line="7" pos:column="25">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">error<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="string" pos:line="8" pos:column="17">"Cannot find \"host\" parameter in request message"<pos:position pos:line="8" pos:column="68"/></literal></expr>;<pos:position pos:line="8" pos:column="69"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">certProperties<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">commonName<pos:position pos:line="11" pos:column="30"/></name></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">i<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">second<pos:position pos:line="11" pos:column="42"/></name></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">i<pos:position pos:line="13" pos:column="6"/></name> <operator pos:line="13" pos:column="7">=<pos:position pos:line="13" pos:column="8"/></operator> <call><name><name pos:line="13" pos:column="9">map<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">find<pos:position pos:line="13" pos:column="17"/></name></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name><name pos:line="13" pos:column="18">Ssl<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">::<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">CrtdMessage<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">::<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">param_SetValidAfter<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">!=<pos:position pos:line="14" pos:column="13"/></operator> <call><name><name pos:line="14" pos:column="14">map<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">end<pos:position pos:line="14" pos:column="21"/></name></name><argument_list pos:line="14" pos:column="21">()<pos:position pos:line="14" pos:column="23"/></argument_list></call> <operator pos:line="14" pos:column="24">&amp;&amp;<pos:position pos:line="14" pos:column="34"/></operator> <call><name pos:line="14" pos:column="27">strcasecmp<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><call><name><name pos:line="14" pos:column="38">i<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">second<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">.<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="48">c_str<pos:position pos:line="14" pos:column="53"/></name></name><argument_list pos:line="14" pos:column="53">()<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="57">"on"<pos:position pos:line="14" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call> <operator pos:line="14" pos:column="63">==<pos:position pos:line="14" pos:column="65"/></operator> <literal type="number" pos:line="14" pos:column="66">0<pos:position pos:line="14" pos:column="67"/></literal></expr>)<pos:position pos:line="14" pos:column="68"/></condition><then pos:line="14" pos:column="68">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="9">certProperties<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">setValidAfter<pos:position pos:line="15" pos:column="37"/></name></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="boolean" pos:line="15" pos:column="40">true<pos:position pos:line="15" pos:column="44"/></literal></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">i<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name><name pos:line="17" pos:column="9">map<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">find<pos:position pos:line="17" pos:column="17"/></name></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name><name pos:line="17" pos:column="18">Ssl<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">::<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">CrtdMessage<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">::<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">param_SetValidBefore<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">!=<pos:position pos:line="18" pos:column="13"/></operator> <call><name><name pos:line="18" pos:column="14">map<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">end<pos:position pos:line="18" pos:column="21"/></name></name><argument_list pos:line="18" pos:column="21">()<pos:position pos:line="18" pos:column="23"/></argument_list></call> <operator pos:line="18" pos:column="24">&amp;&amp;<pos:position pos:line="18" pos:column="34"/></operator> <call><name pos:line="18" pos:column="27">strcasecmp<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><call><name><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">second<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">.<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="48">c_str<pos:position pos:line="18" pos:column="53"/></name></name><argument_list pos:line="18" pos:column="53">()<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="57">"on"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call> <operator pos:line="18" pos:column="63">==<pos:position pos:line="18" pos:column="65"/></operator> <literal type="number" pos:line="18" pos:column="66">0<pos:position pos:line="18" pos:column="67"/></literal></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="9">certProperties<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">setValidBefore<pos:position pos:line="19" pos:column="38"/></name></name> <operator pos:line="19" pos:column="39">=<pos:position pos:line="19" pos:column="40"/></operator> <literal type="boolean" pos:line="19" pos:column="41">true<pos:position pos:line="19" pos:column="45"/></literal></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">i<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name><name pos:line="21" pos:column="9">map<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">find<pos:position pos:line="21" pos:column="17"/></name></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">Ssl<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">::<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="23">CrtdMessage<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">::<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">param_SetCommonName<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">i<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">!=<pos:position pos:line="22" pos:column="13"/></operator> <call><name><name pos:line="22" pos:column="14">map<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">.<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">end<pos:position pos:line="22" pos:column="21"/></name></name><argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="24"/></condition><then pos:line="22" pos:column="24"> <block pos:line="22" pos:column="25">{
        <comment type="line" pos:line="23" pos:column="9">// use this as Common Name  instead of the hostname</comment>
        <comment type="line" pos:line="24" pos:column="9">// defined with host or Common Name from mimic cert</comment>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">certProperties<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">commonName<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <name><name pos:line="25" pos:column="37">i<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">second<pos:position pos:line="25" pos:column="46"/></name></name></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">certProperties<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">.<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">setCommonName<pos:position pos:line="26" pos:column="37"/></name></name> <operator pos:line="26" pos:column="38">=<pos:position pos:line="26" pos:column="39"/></operator> <literal type="boolean" pos:line="26" pos:column="40">true<pos:position pos:line="26" pos:column="44"/></literal></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">i<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <call><name><name pos:line="29" pos:column="9">map<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">find<pos:position pos:line="29" pos:column="17"/></name></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name><name pos:line="29" pos:column="18">Ssl<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">::<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">CrtdMessage<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">::<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="36">param_Sign<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">!=<pos:position pos:line="30" pos:column="13"/></operator> <call><name><name pos:line="30" pos:column="14">map<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">end<pos:position pos:line="30" pos:column="21"/></name></name><argument_list pos:line="30" pos:column="21">()<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24"> <block pos:line="30" pos:column="25">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">certProperties<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">.<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="29">signAlgorithm<pos:position pos:line="31" pos:column="42"/></name></name> <operator pos:line="31" pos:column="43">=<pos:position pos:line="31" pos:column="44"/></operator> <call><name><name pos:line="31" pos:column="45">Ssl<pos:position pos:line="31" pos:column="48"/></name><operator pos:line="31" pos:column="48">::<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="50">certSignAlgorithmId<pos:position pos:line="31" pos:column="69"/></name></name><argument_list pos:line="31" pos:column="69">(<argument><expr><call><name><name pos:line="31" pos:column="70">i<pos:position pos:line="31" pos:column="71"/></name><operator pos:line="31" pos:column="71">-&gt;<pos:position pos:line="31" pos:column="76"/></operator><name pos:line="31" pos:column="73">second<pos:position pos:line="31" pos:column="79"/></name><operator pos:line="31" pos:column="79">.<pos:position pos:line="31" pos:column="80"/></operator><name pos:line="31" pos:column="80">c_str<pos:position pos:line="31" pos:column="85"/></name></name><argument_list pos:line="31" pos:column="85">()<pos:position pos:line="31" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="88"/></argument_list></call><operator pos:line="31" pos:column="88">)<pos:position pos:line="31" pos:column="89"/></operator> <operator pos:line="31" pos:column="90">==<pos:position pos:line="31" pos:column="92"/></operator> <name><name pos:line="31" pos:column="93">Ssl<pos:position pos:line="31" pos:column="96"/></name><operator pos:line="31" pos:column="96">::<pos:position pos:line="31" pos:column="98"/></operator><name pos:line="31" pos:column="98">algSignEnd<pos:position pos:line="31" pos:column="108"/></name></name></expr>)<pos:position pos:line="31" pos:column="109"/></condition><then pos:line="31" pos:column="109"> <block pos:line="31" pos:column="110">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">error<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <literal type="string" pos:line="32" pos:column="21">"Wrong signing algoritm: "<pos:position pos:line="32" pos:column="47"/></literal> <operator pos:line="32" pos:column="48">+<pos:position pos:line="32" pos:column="49"/></operator> <name><name pos:line="32" pos:column="50">i<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">-&gt;<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="53">second<pos:position pos:line="32" pos:column="59"/></name></name></expr>;<pos:position pos:line="32" pos:column="60"/></expr_stmt>
            <return pos:line="33" pos:column="13">return <expr><literal type="boolean" pos:line="33" pos:column="20">false<pos:position pos:line="33" pos:column="25"/></literal></expr>;<pos:position pos:line="33" pos:column="26"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <else pos:line="35" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="9">certProperties<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">signAlgorithm<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">=<pos:position pos:line="36" pos:column="39"/></operator> <name><name pos:line="36" pos:column="40">Ssl<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">::<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">algSignTrusted<pos:position pos:line="36" pos:column="59"/></name></name></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt></block></else></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><call><name><name pos:line="38" pos:column="10">Ssl<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">::<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">readCertAndPrivateKeyFromMemory<pos:position pos:line="38" pos:column="46"/></name></name><argument_list pos:line="38" pos:column="46">(<argument><expr><name><name pos:line="38" pos:column="47">certProperties<pos:position pos:line="38" pos:column="61"/></name><operator pos:line="38" pos:column="61">.<pos:position pos:line="38" pos:column="62"/></operator><name pos:line="38" pos:column="62">signWithX509<pos:position pos:line="38" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="76">certProperties<pos:position pos:line="38" pos:column="90"/></name><operator pos:line="38" pos:column="90">.<pos:position pos:line="38" pos:column="91"/></operator><name pos:line="38" pos:column="91">signWithPkey<pos:position pos:line="38" pos:column="103"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="38" pos:column="105">certs_part<pos:position pos:line="38" pos:column="115"/></name><operator pos:line="38" pos:column="115">.<pos:position pos:line="38" pos:column="116"/></operator><name pos:line="38" pos:column="116">c_str<pos:position pos:line="38" pos:column="121"/></name></name><argument_list pos:line="38" pos:column="121">()<pos:position pos:line="38" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="124"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="125"/></condition><then pos:line="38" pos:column="125"> <block pos:line="38" pos:column="126">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">error<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <literal type="string" pos:line="39" pos:column="17">"Broken signing certificate!"<pos:position pos:line="39" pos:column="46"/></literal></expr>;<pos:position pos:line="39" pos:column="47"/></expr_stmt>
        <return pos:line="40" pos:column="9">return <expr><literal type="boolean" pos:line="40" pos:column="16">false<pos:position pos:line="40" pos:column="21"/></literal></expr>;<pos:position pos:line="40" pos:column="22"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <decl_stmt><decl><specifier pos:line="43" pos:column="5">static<pos:position pos:line="43" pos:column="11"/></specifier> <type><specifier pos:line="43" pos:column="12">const<pos:position pos:line="43" pos:column="17"/></specifier> <name><name pos:line="43" pos:column="18">std<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">::<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">string<pos:position pos:line="43" pos:column="29"/></name></name></type> <name pos:line="43" pos:column="30">CERT_BEGIN_STR<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><literal type="string" pos:line="43" pos:column="45">"-----BEGIN CERTIFICATE"<pos:position pos:line="43" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></decl>;<pos:position pos:line="43" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">size_t<pos:position pos:line="44" pos:column="11"/></name></type> <name pos:line="44" pos:column="12">pos<pos:position pos:line="44" pos:column="15"/></name></decl>;<pos:position pos:line="44" pos:column="16"/></decl_stmt>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">(<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">pos<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <call><name><name pos:line="45" pos:column="16">certs_part<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">find<pos:position pos:line="45" pos:column="31"/></name></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">CERT_BEGIN_STR<pos:position pos:line="45" pos:column="46"/></name></expr></argument>)<pos:position pos:line="45" pos:column="47"/></argument_list></call><operator pos:line="45" pos:column="47">)<pos:position pos:line="45" pos:column="48"/></operator> <operator pos:line="45" pos:column="49">!=<pos:position pos:line="45" pos:column="51"/></operator> <name><name pos:line="45" pos:column="52">std<pos:position pos:line="45" pos:column="55"/></name><operator pos:line="45" pos:column="55">::<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="57">string<pos:position pos:line="45" pos:column="63"/></name><operator pos:line="45" pos:column="63">::<pos:position pos:line="45" pos:column="65"/></operator><name pos:line="45" pos:column="65">npos<pos:position pos:line="45" pos:column="69"/></name></name></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70"> <block pos:line="45" pos:column="71">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">pos<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">+=<pos:position pos:line="46" pos:column="15"/></operator> <call><name><name pos:line="46" pos:column="16">CERT_BEGIN_STR<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">.<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">length<pos:position pos:line="46" pos:column="37"/></name></name><argument_list pos:line="46" pos:column="37">()<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">pos<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name><name pos:line="47" pos:column="19">certs_part<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">find<pos:position pos:line="47" pos:column="34"/></name></name><argument_list pos:line="47" pos:column="34">(<argument><expr><name pos:line="47" pos:column="35">CERT_BEGIN_STR<pos:position pos:line="47" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">pos<pos:position pos:line="47" pos:column="54"/></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call><operator pos:line="47" pos:column="55">)<pos:position pos:line="47" pos:column="56"/></operator> <operator pos:line="47" pos:column="57">!=<pos:position pos:line="47" pos:column="59"/></operator> <name><name pos:line="47" pos:column="60">std<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">::<pos:position pos:line="47" pos:column="65"/></operator><name pos:line="47" pos:column="65">string<pos:position pos:line="47" pos:column="71"/></name><operator pos:line="47" pos:column="71">::<pos:position pos:line="47" pos:column="73"/></operator><name pos:line="47" pos:column="73">npos<pos:position pos:line="47" pos:column="77"/></name></name></expr>)<pos:position pos:line="47" pos:column="78"/></condition><then pos:line="47" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="48" pos:column="13">Ssl<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">::<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">readCertFromMemory<pos:position pos:line="48" pos:column="36"/></name></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name><name pos:line="48" pos:column="37">certProperties<pos:position pos:line="48" pos:column="51"/></name><operator pos:line="48" pos:column="51">.<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="52">mimicCert<pos:position pos:line="48" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="48" pos:column="63">certs_part<pos:position pos:line="48" pos:column="73"/></name><operator pos:line="48" pos:column="73">.<pos:position pos:line="48" pos:column="74"/></operator><name pos:line="48" pos:column="74">c_str<pos:position pos:line="48" pos:column="79"/></name></name><argument_list pos:line="48" pos:column="79">()<pos:position pos:line="48" pos:column="81"/></argument_list></call> <operator pos:line="48" pos:column="82">+<pos:position pos:line="48" pos:column="83"/></operator> <name pos:line="48" pos:column="84">pos<pos:position pos:line="48" pos:column="87"/></name></expr></argument>)<pos:position pos:line="48" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="89"/></expr_stmt></block></then></if>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <return pos:line="50" pos:column="5">return <expr><literal type="boolean" pos:line="50" pos:column="12">true<pos:position pos:line="50" pos:column="16"/></literal></expr>;<pos:position pos:line="50" pos:column="17"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

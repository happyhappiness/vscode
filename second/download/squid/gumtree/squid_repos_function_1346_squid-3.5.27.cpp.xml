<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1346_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerGetSomeNeighbor<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">ps_state<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">ps<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">entry<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name><name pos:line="4" pos:column="25">ps<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">entry<pos:position pos:line="4" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpRequest<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">request<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">ps<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">request<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CachePeer<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">p<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">hier_code<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">code<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">HIER_NONE<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">entry<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">ping_status<pos:position pos:line="8" pos:column="30"/></name></name> <operator pos:line="8" pos:column="31">==<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">PING_NONE<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">ps<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">direct<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">DIRECT_YES<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">entry<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">ping_status<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">PING_DONE<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="15" pos:column="22"/></name></expr></cpp:if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">p<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">neighborsDigestSelect<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">request<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call><operator pos:line="16" pos:column="44">)<pos:position pos:line="16" pos:column="45"/></operator></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">neighborType<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">p<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">request<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <name pos:line="17" pos:column="41">PEER_PARENT<pos:position pos:line="17" pos:column="52"/></name></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="13">code<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">CD_PARENT_HIT<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt></block></then>
        <else pos:line="19" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">code<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">CD_SIBLING_HIT<pos:position pos:line="20" pos:column="34"/></name></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt></block></else></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <elseif pos:line="21" pos:column="7">else
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">p<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <call><name pos:line="23" pos:column="18">netdbClosestParent<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">request<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call><operator pos:line="23" pos:column="45">)<pos:position pos:line="23" pos:column="46"/></operator></expr>)<pos:position pos:line="23" pos:column="47"/></condition><then pos:line="23" pos:column="47"> <block pos:line="23" pos:column="48">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">code<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">CLOSEST_PARENT<pos:position pos:line="24" pos:column="34"/></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif> <elseif pos:line="25" pos:column="11">else <if pos:line="25" pos:column="16">if <condition pos:line="25" pos:column="19">(<expr><call><name pos:line="25" pos:column="20">peerSelectIcpPing<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">request<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="47">ps<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">direct<pos:position pos:line="25" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">entry<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <block pos:line="25" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">44<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">3<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">"peerSelect: Doing ICP pings"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">ps<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">ping<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">start<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <name pos:line="27" pos:column="30">current_time<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">ps<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">ping<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">n_sent<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <call><name pos:line="28" pos:column="31">neighborsUdpPing<pos:position pos:line="28" pos:column="47"/></name><argument_list pos:line="28" pos:column="47">(<argument><expr><name pos:line="28" pos:column="48">request<pos:position pos:line="28" pos:column="55"/></name></expr></argument>,
                                               <argument><expr><name pos:line="29" pos:column="48">entry<pos:position pos:line="29" pos:column="53"/></name></expr></argument>,
                                               <argument><expr><name pos:line="30" pos:column="48">peerHandlePingReply<pos:position pos:line="30" pos:column="67"/></name></expr></argument>,
                                               <argument><expr><name pos:line="31" pos:column="48">ps<pos:position pos:line="31" pos:column="50"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="32" pos:column="48">&amp;<pos:position pos:line="32" pos:column="53"/></operator><name><name pos:line="32" pos:column="49">ps<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">-&gt;<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="53">ping<pos:position pos:line="32" pos:column="57"/></name><operator pos:line="32" pos:column="57">.<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">n_replies_expected<pos:position pos:line="32" pos:column="76"/></name></name></expr></argument>,
                                               <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name><name pos:line="33" pos:column="49">ps<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">ping<pos:position pos:line="33" pos:column="57"/></name><operator pos:line="33" pos:column="57">.<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="58">timeout<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>

            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name><name pos:line="35" pos:column="17">ps<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">ping<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">.<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">n_sent<pos:position pos:line="35" pos:column="32"/></name></name> <operator pos:line="35" pos:column="33">==<pos:position pos:line="35" pos:column="35"/></operator> <literal type="number" pos:line="35" pos:column="36">0<pos:position pos:line="35" pos:column="37"/></literal></expr>)<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">debugs<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><literal type="number" pos:line="36" pos:column="24">44<pos:position pos:line="36" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="28">DBG_CRITICAL<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="42">"WARNING: neighborsUdpPing returned 0"<pos:position pos:line="36" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="82"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugs<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="number" pos:line="37" pos:column="20">44<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="24">3<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="27">"peerSelect: "<pos:position pos:line="37" pos:column="41"/></literal> <operator pos:line="37" pos:column="42">&lt;&lt;<pos:position pos:line="37" pos:column="50"/></operator> <name><name pos:line="37" pos:column="45">ps<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">ping<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">.<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">n_replies_expected<pos:position pos:line="37" pos:column="72"/></name></name> <operator pos:line="37" pos:column="73">&lt;&lt;<pos:position pos:line="37" pos:column="81"/></operator>
                   <literal type="string" pos:line="38" pos:column="20">" ICP replies expected, RTT "<pos:position pos:line="38" pos:column="49"/></literal> <operator pos:line="38" pos:column="50">&lt;&lt;<pos:position pos:line="38" pos:column="58"/></operator> <name><name pos:line="38" pos:column="53">ps<pos:position pos:line="38" pos:column="55"/></name><operator pos:line="38" pos:column="55">-&gt;<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="57">ping<pos:position pos:line="38" pos:column="61"/></name><operator pos:line="38" pos:column="61">.<pos:position pos:line="38" pos:column="62"/></operator><name pos:line="38" pos:column="62">timeout<pos:position pos:line="38" pos:column="69"/></name></name> <operator pos:line="38" pos:column="70">&lt;&lt;<pos:position pos:line="38" pos:column="78"/></operator>
                   <literal type="string" pos:line="39" pos:column="20">" msec"<pos:position pos:line="39" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>

            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">ps<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">ping<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">.<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">n_replies_expected<pos:position pos:line="41" pos:column="44"/></name></name> <operator pos:line="41" pos:column="45">&gt;<pos:position pos:line="41" pos:column="49"/></operator> <literal type="number" pos:line="41" pos:column="47">0<pos:position pos:line="41" pos:column="48"/></literal></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49"> <block pos:line="41" pos:column="50">{
                <expr_stmt><expr><name><name pos:line="42" pos:column="17">entry<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">-&gt;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="24">ping_status<pos:position pos:line="42" pos:column="35"/></name></name> <operator pos:line="42" pos:column="36">=<pos:position pos:line="42" pos:column="37"/></operator> <name pos:line="42" pos:column="38">PING_WAITING<pos:position pos:line="42" pos:column="50"/></name></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="43" pos:column="17">eventAdd<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><literal type="string" pos:line="43" pos:column="26">"peerPingTimeout"<pos:position pos:line="43" pos:column="43"/></literal></expr></argument>,
                         <argument><expr><name pos:line="44" pos:column="26">peerPingTimeout<pos:position pos:line="44" pos:column="41"/></name></expr></argument>,
                         <argument><expr><name pos:line="45" pos:column="26">ps<pos:position pos:line="45" pos:column="28"/></name></expr></argument>,
                         <argument><expr><literal type="number" pos:line="46" pos:column="26">0.001<pos:position pos:line="46" pos:column="31"/></literal> <operator pos:line="46" pos:column="32">*<pos:position pos:line="46" pos:column="33"/></operator> <name><name pos:line="46" pos:column="34">ps<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">ping<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">.<pos:position pos:line="46" pos:column="43"/></operator><name pos:line="46" pos:column="43">timeout<pos:position pos:line="46" pos:column="50"/></name></name></expr></argument>,
                         <argument><expr><literal type="number" pos:line="47" pos:column="26">0<pos:position pos:line="47" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
                <return pos:line="48" pos:column="17">return;<pos:position pos:line="48" pos:column="24"/></return>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">code<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">!=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">HIER_NONE<pos:position pos:line="52" pos:column="26"/></name></expr>)<pos:position pos:line="52" pos:column="27"/></condition><then pos:line="52" pos:column="27"> <block pos:line="52" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">assert<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">p<pos:position pos:line="53" pos:column="17"/></name></expr></argument>)<pos:position pos:line="53" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">44<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="20">3<pos:position pos:line="54" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"peerSelect: "<pos:position pos:line="54" pos:column="37"/></literal> <operator pos:line="54" pos:column="38">&lt;&lt;<pos:position pos:line="54" pos:column="46"/></operator> <name><name pos:line="54" pos:column="41">hier_code_str<pos:position pos:line="54" pos:column="54"/></name><index pos:line="54" pos:column="54">[<expr><name pos:line="54" pos:column="55">code<pos:position pos:line="54" pos:column="59"/></name></expr>]<pos:position pos:line="54" pos:column="60"/></index></name> <operator pos:line="54" pos:column="61">&lt;&lt;<pos:position pos:line="54" pos:column="69"/></operator> <literal type="string" pos:line="54" pos:column="64">"/"<pos:position pos:line="54" pos:column="67"/></literal> <operator pos:line="54" pos:column="68">&lt;&lt;<pos:position pos:line="54" pos:column="76"/></operator> <name><name pos:line="54" pos:column="71">p<pos:position pos:line="54" pos:column="72"/></name><operator pos:line="54" pos:column="72">-&gt;<pos:position pos:line="54" pos:column="77"/></operator><name pos:line="54" pos:column="74">host<pos:position pos:line="54" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">peerAddFwdServer<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><operator pos:line="55" pos:column="26">&amp;<pos:position pos:line="55" pos:column="31"/></operator><name><name pos:line="55" pos:column="27">ps<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">servers<pos:position pos:line="55" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">p<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">code<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="58" pos:column="5">entry<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">ping_status<pos:position pos:line="58" pos:column="23"/></name></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="26">PING_DONE<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6493_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Pdu<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">setSystemOid<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">Range<pos:position pos:line="2" pos:column="36"/></name><argument_list type="generic" pos:line="2" pos:column="36">&lt;<argument><expr><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">oid<pos:position pos:line="2" pos:column="46"/></name><modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></expr></argument>&gt;<pos:position pos:line="2" pos:column="51"/></argument_list></name><modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="50">systemOid<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">clearSystemOid<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">()<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">systemOid<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">start<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">!=<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&amp;&amp;<pos:position pos:line="5" pos:column="43"/></operator> <call><name><name pos:line="5" pos:column="36">systemOid<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">size<pos:position pos:line="5" pos:column="50"/></name></name><argument_list pos:line="5" pos:column="50">()<pos:position pos:line="5" pos:column="52"/></argument_list></call> <operator pos:line="5" pos:column="53">!=<pos:position pos:line="5" pos:column="55"/></operator> <literal type="number" pos:line="5" pos:column="56">0<pos:position pos:line="5" pos:column="57"/></literal></expr>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58"> <block pos:line="5" pos:column="59">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">enterprise_length<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <call><name><name pos:line="6" pos:column="29">systemOid<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">size<pos:position pos:line="6" pos:column="43"/></name></name><argument_list pos:line="6" pos:column="43">()<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">enterprise<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <cast type="static" pos:line="7" pos:column="22">static_cast<argument_list type="generic" pos:line="7" pos:column="33">&lt;<argument><expr><name pos:line="7" pos:column="34">oid<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="42"/></argument_list><argument_list pos:line="7" pos:column="39">(<argument><expr><call><name pos:line="7" pos:column="40">xmalloc<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><name pos:line="7" pos:column="48">enterprise_length<pos:position pos:line="7" pos:column="65"/></name> <operator pos:line="7" pos:column="66">*<pos:position pos:line="7" pos:column="67"/></operator> <sizeof pos:line="7" pos:column="68">sizeof<argument_list pos:line="7" pos:column="74">(<argument><expr><name pos:line="7" pos:column="75">oid<pos:position pos:line="7" pos:column="78"/></name></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></cast></expr>;<pos:position pos:line="7" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">std<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">copy<pos:position pos:line="8" pos:column="18"/></name></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name><name pos:line="8" pos:column="19">systemOid<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">.<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">start<pos:position pos:line="8" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="36">systemOid<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">.<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">end<pos:position pos:line="8" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">enterprise<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

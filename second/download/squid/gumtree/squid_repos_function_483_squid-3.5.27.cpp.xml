<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_483_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">random_vector<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">aVector<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">randno<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">srand<pos:position pos:line="7" pos:column="10"/></name><argument_list pos:line="7" pos:column="10">(<argument><expr><operator pos:line="7" pos:column="11">(<pos:position pos:line="7" pos:column="12"/></operator><call><name pos:line="7" pos:column="12">time<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="19"/></argument_list></call> <operator pos:line="7" pos:column="20">^<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">rand<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">()<pos:position pos:line="7" pos:column="28"/></argument_list></call><operator pos:line="7" pos:column="28">)<pos:position pos:line="7" pos:column="29"/></operator> <operator pos:line="7" pos:column="30">+<pos:position pos:line="7" pos:column="31"/></operator> <call><name pos:line="7" pos:column="32">rand<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">AUTH_VECTOR_LEN<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></condition><incr/>)<pos:position pos:line="8" pos:column="38"/></control> <block pos:line="8" pos:column="39">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">randno<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">rand<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">()<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">memcpy<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">aVector<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="25">&amp;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="26">randno<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="34">sizeof<argument_list pos:line="10" pos:column="40">(<argument><expr><name pos:line="10" pos:column="41">int<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">aVector<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">+=<pos:position pos:line="11" pos:column="19"/></operator> <sizeof pos:line="11" pos:column="20">sizeof<argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">int<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">+=<pos:position pos:line="12" pos:column="13"/></operator> <sizeof pos:line="12" pos:column="14">sizeof<argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">int<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

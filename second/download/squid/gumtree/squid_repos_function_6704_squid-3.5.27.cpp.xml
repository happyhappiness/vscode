<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6704_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">addmember<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">stackmember<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">stack<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">stackdepth<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">stackmember<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type> <name pos:line="2" pos:column="63">candidate<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">candidate<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">valuetype<pos:position pos:line="4" pos:column="29"/></name></name> <operator pos:line="4" pos:column="30">!=<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">ESI_EXPR_LITERAL<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">&amp;&amp;<pos:position pos:line="4" pos:column="60"/></operator> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">stackdepth<pos:position pos:line="4" pos:column="64"/></name> <operator pos:line="4" pos:column="65">&gt;<pos:position pos:line="4" pos:column="69"/></operator> <literal type="number" pos:line="4" pos:column="67">1<pos:position pos:line="4" pos:column="68"/></literal></expr>)<pos:position pos:line="4" pos:column="69"/></condition><then pos:line="4" pos:column="69"> <block pos:line="4" pos:column="70">{
        <comment type="block" pos:line="5" pos:column="9">/* !(!(a==b))) is why thats safe */</comment>
        <comment type="block" pos:line="6" pos:column="9">/* strictly less than until we unwind */</comment>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">candidate<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">precedence<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">&lt;<pos:position pos:line="8" pos:column="39"/></operator> <name><name pos:line="8" pos:column="37">stack<pos:position pos:line="8" pos:column="42"/></name><index pos:line="8" pos:column="42">[<expr><operator pos:line="8" pos:column="43">*<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">stackdepth<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">-<pos:position pos:line="8" pos:column="56"/></operator> <literal type="number" pos:line="8" pos:column="57">1<pos:position pos:line="8" pos:column="58"/></literal></expr>]<pos:position pos:line="8" pos:column="59"/></index></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">precedence<pos:position pos:line="8" pos:column="70"/></name> <operator pos:line="8" pos:column="71">||<pos:position pos:line="8" pos:column="73"/></operator>
                <name><name pos:line="9" pos:column="17">candidate<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">precedence<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">&lt;<pos:position pos:line="9" pos:column="43"/></operator> <name><name pos:line="9" pos:column="41">stack<pos:position pos:line="9" pos:column="46"/></name><index pos:line="9" pos:column="46">[<expr><operator pos:line="9" pos:column="47">*<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">stackdepth<pos:position pos:line="9" pos:column="58"/></name> <operator pos:line="9" pos:column="59">-<pos:position pos:line="9" pos:column="60"/></operator> <literal type="number" pos:line="9" pos:column="61">2<pos:position pos:line="9" pos:column="62"/></literal></expr>]<pos:position pos:line="9" pos:column="63"/></index></name><operator pos:line="9" pos:column="63">.<pos:position pos:line="9" pos:column="64"/></operator><name pos:line="9" pos:column="64">precedence<pos:position pos:line="9" pos:column="74"/></name></expr>)<pos:position pos:line="9" pos:column="75"/></condition><then pos:line="9" pos:column="75"> <block pos:line="9" pos:column="76">{
            <comment type="block" pos:line="10" pos:column="13">/* must be an operator */</comment>

            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name><name pos:line="12" pos:column="17">stack<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><operator pos:line="12" pos:column="23">*<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">stackdepth<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">-<pos:position pos:line="12" pos:column="36"/></operator> <literal type="number" pos:line="12" pos:column="37">2<pos:position pos:line="12" pos:column="38"/></literal></expr>]<pos:position pos:line="12" pos:column="39"/></index></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">valuetype<pos:position pos:line="12" pos:column="49"/></name> <operator pos:line="12" pos:column="50">==<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">ESI_EXPR_LITERAL<pos:position pos:line="12" pos:column="69"/></name> <operator pos:line="12" pos:column="70">||<pos:position pos:line="12" pos:column="72"/></operator>
                    <name><name pos:line="13" pos:column="21">stack<pos:position pos:line="13" pos:column="26"/></name><index pos:line="13" pos:column="26">[<expr><operator pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">stackdepth<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">-<pos:position pos:line="13" pos:column="40"/></operator> <literal type="number" pos:line="13" pos:column="41">2<pos:position pos:line="13" pos:column="42"/></literal></expr>]<pos:position pos:line="13" pos:column="43"/></index></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">valuetype<pos:position pos:line="13" pos:column="53"/></name> <operator pos:line="13" pos:column="54">==<pos:position pos:line="13" pos:column="56"/></operator> <name pos:line="13" pos:column="57">ESI_EXPR_INVALID<pos:position pos:line="13" pos:column="73"/></name> <operator pos:line="13" pos:column="74">||<pos:position pos:line="13" pos:column="76"/></operator>
                    <name><name pos:line="14" pos:column="21">stack<pos:position pos:line="14" pos:column="26"/></name><index pos:line="14" pos:column="26">[<expr><operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">stackdepth<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">-<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">2<pos:position pos:line="14" pos:column="42"/></literal></expr>]<pos:position pos:line="14" pos:column="43"/></index></name><operator pos:line="14" pos:column="43">.<pos:position pos:line="14" pos:column="44"/></operator><call><name pos:line="14" pos:column="44">eval<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><name pos:line="14" pos:column="49">stack<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">stackdepth<pos:position pos:line="14" pos:column="66"/></name></expr></argument>,
                                                <argument><expr><operator pos:line="15" pos:column="49">*<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">stackdepth<pos:position pos:line="15" pos:column="60"/></name> <operator pos:line="15" pos:column="61">-<pos:position pos:line="15" pos:column="62"/></operator> <literal type="number" pos:line="15" pos:column="63">2<pos:position pos:line="15" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="66">candidate<pos:position pos:line="15" pos:column="75"/></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77"> <block pos:line="15" pos:column="78">{
                <comment type="block" pos:line="16" pos:column="17">/* cleanup candidate and stack */</comment>
                <expr_stmt><expr><call><name pos:line="17" pos:column="17">dumpstack<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">stack<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">*<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">stackdepth<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="18" pos:column="17">cleanmember<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">candidate<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="19" pos:column="17">debugs<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="number" pos:line="19" pos:column="24">86<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">DBG_IMPORTANT<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="43">"invalid expression"<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
                <return pos:line="20" pos:column="17">return <expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></return>
            }<pos:position pos:line="21" pos:column="14"/></block></then></if>
        }<pos:position pos:line="22" pos:column="10"/></block></then> <else pos:line="22" pos:column="11">else <block pos:line="22" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">stack<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><operator pos:line="23" pos:column="19">(<pos:position pos:line="23" pos:column="20"/></operator><operator pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">stackdepth<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">)<pos:position pos:line="23" pos:column="32"/></operator><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator></expr>]<pos:position pos:line="23" pos:column="35"/></index></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <operator pos:line="23" pos:column="38">*<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">candidate<pos:position pos:line="23" pos:column="48"/></name></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></else></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if <condition pos:line="25" pos:column="15">(<expr><name><name pos:line="25" pos:column="16">candidate<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">-&gt;<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="27">valuetype<pos:position pos:line="25" pos:column="36"/></name></name> <operator pos:line="25" pos:column="37">!=<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="40">ESI_EXPR_INVALID<pos:position pos:line="25" pos:column="56"/></name></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="9">stack<pos:position pos:line="26" pos:column="14"/></name><index pos:line="26" pos:column="14">[<expr><operator pos:line="26" pos:column="15">(<pos:position pos:line="26" pos:column="16"/></operator><operator pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">stackdepth<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator><operator pos:line="26" pos:column="28">++<pos:position pos:line="26" pos:column="30"/></operator></expr>]<pos:position pos:line="26" pos:column="31"/></index></name> <operator pos:line="26" pos:column="32">=<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="34">*<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">candidate<pos:position pos:line="26" pos:column="44"/></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

    <return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">1<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

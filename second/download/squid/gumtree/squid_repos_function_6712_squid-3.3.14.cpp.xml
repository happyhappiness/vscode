<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6712_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">GenServerContext<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">PAUTH_SEQ<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">pAS<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">PVOID<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">pIn<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">DWORD<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">cbIn<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">PVOID<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">pOut<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>,
                      <parameter><decl><type><name pos:line="2" pos:column="23">PDWORD<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">pcbOut<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">PBOOL<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">pfDone<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type> <name pos:line="2" pos:column="59">credentials<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     *   Routine Description:
     *
     *   Takes an input buffer coming from the client and returns a buffer
     *   to be sent to the client.  Also returns an indication of whether or
     *   not the context is complete.
     *
     *   Return Value:
     *
     *   Returns TRUE if successful; otherwise FALSE.
     */</comment>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">SecBufferDesc<pos:position pos:line="16" pos:column="18"/></name></type>   <name pos:line="16" pos:column="21">sbdOut<pos:position pos:line="16" pos:column="27"/></name></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">SecBuffer<pos:position pos:line="17" pos:column="14"/></name></type>       <name pos:line="17" pos:column="21">sbOut<pos:position pos:line="17" pos:column="26"/></name></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">SecBufferDesc<pos:position pos:line="18" pos:column="18"/></name></type>   <name pos:line="18" pos:column="21">sbdIn<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">SecBuffer<pos:position pos:line="19" pos:column="14"/></name></type>       <name pos:line="19" pos:column="21">sbIn<pos:position pos:line="19" pos:column="25"/></name></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">ULONG<pos:position pos:line="20" pos:column="10"/></name></type>           <name pos:line="20" pos:column="21">fContextAttr<pos:position pos:line="20" pos:column="33"/></name></decl>;<pos:position pos:line="20" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">SecPkgContext_Names<pos:position pos:line="21" pos:column="24"/></name></type> <name pos:line="21" pos:column="25">namebuffer<pos:position pos:line="21" pos:column="35"/></name></decl>;<pos:position pos:line="21" pos:column="36"/></decl_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">pAS<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">-&gt;<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="15">fInitialized<pos:position pos:line="23" pos:column="27"/></name></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">  <block pos:line="23" pos:column="30">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">SecurityStatus<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">_AcquireCredentialsHandle<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">NULL<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="58">(<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="59">SEC_CHAR<pos:position pos:line="24" pos:column="67"/></name><operator pos:line="24" pos:column="67">*<pos:position pos:line="24" pos:column="68"/></operator><operator pos:line="24" pos:column="68">)<pos:position pos:line="24" pos:column="69"/></operator> <call><name pos:line="24" pos:column="70">_T<pos:position pos:line="24" pos:column="72"/></name><argument_list pos:line="24" pos:column="72">(<argument><expr><name pos:line="24" pos:column="73">SSP_Package_InUse<pos:position pos:line="24" pos:column="90"/></name></expr></argument>)<pos:position pos:line="24" pos:column="91"/></argument_list></call></expr></argument>,
                         <argument><expr><name pos:line="25" pos:column="26">SECPKG_CRED_INBOUND<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">NULL<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">NULL<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">NULL<pos:position pos:line="25" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="65">NULL<pos:position pos:line="25" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="71">&amp;<pos:position pos:line="25" pos:column="76"/></operator><name><name pos:line="25" pos:column="72">pAS<pos:position pos:line="25" pos:column="75"/></name><operator pos:line="25" pos:column="75">-&gt;<pos:position pos:line="25" pos:column="80"/></operator><name pos:line="25" pos:column="77">hcred<pos:position pos:line="25" pos:column="82"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name><name pos:line="26" pos:column="27">pAS<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">hcredLifeTime<pos:position pos:line="26" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">SSP_DEBUG<pos:position pos:line="27" pos:column="14"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">fprintf<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">stderr<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"AcquireCredentialsHandle returned: %x\n"<pos:position pos:line="28" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="68">SecurityStatus<pos:position pos:line="28" pos:column="82"/></name></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">SecurityStatus<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">&lt;<pos:position pos:line="30" pos:column="32"/></operator> <literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32"> <block pos:line="30" pos:column="33">{
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">SSP_DEBUG<pos:position pos:line="31" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">fprintf<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">stderr<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="29">"AcquireCredentialsHandle failed: %x\n"<pos:position pos:line="32" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="70">SecurityStatus<pos:position pos:line="32" pos:column="84"/></name></expr></argument>)<pos:position pos:line="32" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="86"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">FALSE<pos:position pos:line="34" pos:column="25"/></name></expr>;<pos:position pos:line="34" pos:column="26"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">pAS<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">fHaveCredHandle<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <name pos:line="36" pos:column="32">TRUE<pos:position pos:line="36" pos:column="36"/></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* Prepare output buffer */</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">sbdOut<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">.<pos:position pos:line="40" pos:column="12"/></operator><name pos:line="40" pos:column="12">ulVersion<pos:position pos:line="40" pos:column="21"/></name></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">sbdOut<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">cBuffers<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="23">1<pos:position pos:line="41" pos:column="24"/></literal></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">sbdOut<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">pBuffers<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <operator pos:line="42" pos:column="23">&amp;<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="24">sbOut<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">sbOut<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">.<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">cbBuffer<pos:position pos:line="43" pos:column="19"/></name></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <operator pos:line="43" pos:column="22">*<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">pcbOut<pos:position pos:line="43" pos:column="29"/></name></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">sbOut<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">.<pos:position pos:line="44" pos:column="11"/></operator><name pos:line="44" pos:column="11">BufferType<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">SECBUFFER_TOKEN<pos:position pos:line="44" pos:column="39"/></name></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">sbOut<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">.<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">pvBuffer<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">pOut<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Prepare input buffer */</comment>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">sbdIn<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">.<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">ulVersion<pos:position pos:line="48" pos:column="20"/></name></name> <operator pos:line="48" pos:column="21">=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">sbdIn<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">.<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">cBuffers<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <literal type="number" pos:line="49" pos:column="22">1<pos:position pos:line="49" pos:column="23"/></literal></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">sbdIn<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">pBuffers<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <operator pos:line="50" pos:column="22">&amp;<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="23">sbIn<pos:position pos:line="50" pos:column="27"/></name></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">sbIn<pos:position pos:line="51" pos:column="9"/></name><operator pos:line="51" pos:column="9">.<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">cbBuffer<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">cbIn<pos:position pos:line="51" pos:column="25"/></name></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">sbIn<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">.<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">BufferType<pos:position pos:line="52" pos:column="20"/></name></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">SECBUFFER_TOKEN<pos:position pos:line="52" pos:column="38"/></name></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">sbIn<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">.<pos:position pos:line="53" pos:column="10"/></operator><name pos:line="53" pos:column="10">pvBuffer<pos:position pos:line="53" pos:column="18"/></name></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">pIn<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">SecurityStatus<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <call><name pos:line="54" pos:column="22">_AcceptSecurityContext<pos:position pos:line="54" pos:column="44"/></name><argument_list pos:line="54" pos:column="44">(<argument><expr><operator pos:line="54" pos:column="45">&amp;<pos:position pos:line="54" pos:column="50"/></operator><name><name pos:line="54" pos:column="46">pAS<pos:position pos:line="54" pos:column="49"/></name><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><name pos:line="54" pos:column="51">hcred<pos:position pos:line="54" pos:column="56"/></name></name></expr></argument>,
                                            <argument><expr><ternary><condition><expr><name><name pos:line="55" pos:column="45">pAS<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">-&gt;<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="50">fInitialized<pos:position pos:line="55" pos:column="62"/></name></name></expr> ?<pos:position pos:line="55" pos:column="64"/></condition><then pos:line="55" pos:column="64"> <expr><operator pos:line="55" pos:column="65">&amp;<pos:position pos:line="55" pos:column="70"/></operator><name><name pos:line="55" pos:column="66">pAS<pos:position pos:line="55" pos:column="69"/></name><operator pos:line="55" pos:column="69">-&gt;<pos:position pos:line="55" pos:column="74"/></operator><name pos:line="55" pos:column="71">hctxt<pos:position pos:line="55" pos:column="76"/></name></name></expr> <pos:position pos:line="55" pos:column="77"/></then><else pos:line="55" pos:column="77">: <expr><name pos:line="55" pos:column="79">NULL<pos:position pos:line="55" pos:column="83"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="55" pos:column="85">&amp;<pos:position pos:line="55" pos:column="90"/></operator><name pos:line="55" pos:column="86">sbdIn<pos:position pos:line="55" pos:column="91"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="55" pos:column="93">(<pos:position pos:line="55" pos:column="94"/></operator><name pos:line="55" pos:column="94">NTLM_mode<pos:position pos:line="55" pos:column="103"/></name> <operator pos:line="55" pos:column="104">==<pos:position pos:line="55" pos:column="106"/></operator> <name pos:line="55" pos:column="107">SSP_NTLM<pos:position pos:line="55" pos:column="115"/></name><operator pos:line="55" pos:column="115">)<pos:position pos:line="55" pos:column="116"/></operator></expr> ?<pos:position pos:line="55" pos:column="118"/></condition><then pos:line="55" pos:column="118"> <expr><name pos:line="55" pos:column="119">ASC_REQ_DELEGATE<pos:position pos:line="55" pos:column="135"/></name></expr> <pos:position pos:line="55" pos:column="136"/></then><else pos:line="55" pos:column="136">: <expr><literal type="number" pos:line="55" pos:column="138">0<pos:position pos:line="55" pos:column="139"/></literal></expr></else></ternary></expr></argument>,
                                            <argument><expr><name pos:line="56" pos:column="45">SECURITY_NATIVE_DREP<pos:position pos:line="56" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="67">&amp;<pos:position pos:line="56" pos:column="72"/></operator><name><name pos:line="56" pos:column="68">pAS<pos:position pos:line="56" pos:column="71"/></name><operator pos:line="56" pos:column="71">-&gt;<pos:position pos:line="56" pos:column="76"/></operator><name pos:line="56" pos:column="73">hctxt<pos:position pos:line="56" pos:column="78"/></name></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="80">&amp;<pos:position pos:line="56" pos:column="85"/></operator><name pos:line="56" pos:column="81">sbdOut<pos:position pos:line="56" pos:column="87"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="89">&amp;<pos:position pos:line="56" pos:column="94"/></operator><name pos:line="56" pos:column="90">fContextAttr<pos:position pos:line="56" pos:column="102"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="57" pos:column="45">&amp;<pos:position pos:line="57" pos:column="50"/></operator><name><name pos:line="57" pos:column="46">pAS<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">hctxtLifeTime<pos:position pos:line="57" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="66"/></expr_stmt>
<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">SSP_DEBUG<pos:position pos:line="58" pos:column="14"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">fprintf<pos:position pos:line="59" pos:column="12"/></name><argument_list pos:line="59" pos:column="12">(<argument><expr><name pos:line="59" pos:column="13">stderr<pos:position pos:line="59" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="21">"AcceptSecurityContext returned: %x\n"<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">SecurityStatus<pos:position pos:line="59" pos:column="75"/></name></expr></argument>)<pos:position pos:line="59" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="77"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">SecurityStatus<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">&lt;<pos:position pos:line="61" pos:column="28"/></operator> <literal type="number" pos:line="61" pos:column="26">0<pos:position pos:line="61" pos:column="27"/></literal></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><name pos:line="62" pos:column="5">SSP_DEBUG<pos:position pos:line="62" pos:column="14"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">fprintf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">stderr<pos:position pos:line="63" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="25">"AcceptSecurityContext failed: %x\n"<pos:position pos:line="63" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="63">SecurityStatus<pos:position pos:line="63" pos:column="77"/></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="65" pos:column="9">return <expr><name pos:line="65" pos:column="16">FALSE<pos:position pos:line="65" pos:column="21"/></name></expr>;<pos:position pos:line="65" pos:column="22"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">pAS<pos:position pos:line="67" pos:column="8"/></name><operator pos:line="67" pos:column="8">-&gt;<pos:position pos:line="67" pos:column="13"/></operator><name pos:line="67" pos:column="10">fHaveCtxtHandle<pos:position pos:line="67" pos:column="25"/></name></name> <operator pos:line="67" pos:column="26">=<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="28">TRUE<pos:position pos:line="67" pos:column="32"/></name></expr>;<pos:position pos:line="67" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="69" pos:column="5">/* If necessary, complete token */</comment>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">SecurityStatus<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">==<pos:position pos:line="70" pos:column="26"/></operator> <name pos:line="70" pos:column="27">SEC_I_COMPLETE_NEEDED<pos:position pos:line="70" pos:column="48"/></name> <operator pos:line="70" pos:column="49">||<pos:position pos:line="70" pos:column="51"/></operator> <name pos:line="70" pos:column="52">SecurityStatus<pos:position pos:line="70" pos:column="66"/></name> <operator pos:line="70" pos:column="67">==<pos:position pos:line="70" pos:column="69"/></operator> <name pos:line="70" pos:column="70">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="70" pos:column="97"/></name></expr>)<pos:position pos:line="70" pos:column="98"/></condition><then pos:line="70" pos:column="98"> <block pos:line="70" pos:column="99">{
        <expr_stmt><expr><name pos:line="71" pos:column="9">SecurityStatus<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <call><name pos:line="71" pos:column="26">_CompleteAuthToken<pos:position pos:line="71" pos:column="44"/></name><argument_list pos:line="71" pos:column="44">(<argument><expr><operator pos:line="71" pos:column="45">&amp;<pos:position pos:line="71" pos:column="50"/></operator><name><name pos:line="71" pos:column="46">pAS<pos:position pos:line="71" pos:column="49"/></name><operator pos:line="71" pos:column="49">-&gt;<pos:position pos:line="71" pos:column="54"/></operator><name pos:line="71" pos:column="51">hctxt<pos:position pos:line="71" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="58">&amp;<pos:position pos:line="71" pos:column="63"/></operator><name pos:line="71" pos:column="59">sbdOut<pos:position pos:line="71" pos:column="65"/></name></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
<cpp:if pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">if<pos:position pos:line="72" pos:column="4"/></cpp:directive> <expr><name pos:line="72" pos:column="5">SSP_DEBUG<pos:position pos:line="72" pos:column="14"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">fprintf<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><name pos:line="73" pos:column="17">stderr<pos:position pos:line="73" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="25">"CompleteAuthToken returned: %x\n"<pos:position pos:line="73" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="61">SecurityStatus<pos:position pos:line="73" pos:column="75"/></name></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="77"/></expr_stmt>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">SecurityStatus<pos:position pos:line="75" pos:column="27"/></name> <operator pos:line="75" pos:column="28">&lt;<pos:position pos:line="75" pos:column="32"/></operator> <literal type="number" pos:line="75" pos:column="30">0<pos:position pos:line="75" pos:column="31"/></literal></expr>)<pos:position pos:line="75" pos:column="32"/></condition><then pos:line="75" pos:column="32"> <block pos:line="75" pos:column="33">{
<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if<pos:position pos:line="76" pos:column="4"/></cpp:directive> <expr><name pos:line="76" pos:column="5">SSP_DEBUG<pos:position pos:line="76" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">fprintf<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">stderr<pos:position pos:line="77" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="29">"CompleteAuthToken failed: %x\n"<pos:position pos:line="77" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="63">SecurityStatus<pos:position pos:line="77" pos:column="77"/></name></expr></argument>)<pos:position pos:line="77" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="79"/></expr_stmt>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="79" pos:column="13">return <expr><name pos:line="79" pos:column="20">FALSE<pos:position pos:line="79" pos:column="25"/></name></expr>;<pos:position pos:line="79" pos:column="26"/></return>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><operator pos:line="83" pos:column="9">(<pos:position pos:line="83" pos:column="10"/></operator><name pos:line="83" pos:column="10">credentials<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">!=<pos:position pos:line="83" pos:column="24"/></operator> <name pos:line="83" pos:column="25">NULL<pos:position pos:line="83" pos:column="29"/></name><operator pos:line="83" pos:column="29">)<pos:position pos:line="83" pos:column="30"/></operator> <operator pos:line="83" pos:column="31">&amp;&amp;<pos:position pos:line="83" pos:column="41"/></operator>
            <operator pos:line="84" pos:column="13">!<pos:position pos:line="84" pos:column="14"/></operator><operator pos:line="84" pos:column="14">(<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">SecurityStatus<pos:position pos:line="84" pos:column="29"/></name> <operator pos:line="84" pos:column="30">==<pos:position pos:line="84" pos:column="32"/></operator> <name pos:line="84" pos:column="33">SEC_I_CONTINUE_NEEDED<pos:position pos:line="84" pos:column="54"/></name> <operator pos:line="84" pos:column="55">||<pos:position pos:line="84" pos:column="57"/></operator> <name pos:line="84" pos:column="58">SecurityStatus<pos:position pos:line="84" pos:column="72"/></name> <operator pos:line="84" pos:column="73">==<pos:position pos:line="84" pos:column="75"/></operator> <name pos:line="84" pos:column="76">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="84" pos:column="103"/></name><operator pos:line="84" pos:column="103">)<pos:position pos:line="84" pos:column="104"/></operator></expr>)<pos:position pos:line="84" pos:column="105"/></condition><then pos:line="84" pos:column="105"> <block pos:line="84" pos:column="106">{
        <expr_stmt><expr><name pos:line="85" pos:column="9">SecurityStatus<pos:position pos:line="85" pos:column="23"/></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <call><name pos:line="85" pos:column="26">_QueryContextAttributes<pos:position pos:line="85" pos:column="49"/></name><argument_list pos:line="85" pos:column="49">(<argument><expr><operator pos:line="85" pos:column="50">&amp;<pos:position pos:line="85" pos:column="55"/></operator><name><name pos:line="85" pos:column="51">pAS<pos:position pos:line="85" pos:column="54"/></name><operator pos:line="85" pos:column="54">-&gt;<pos:position pos:line="85" pos:column="59"/></operator><name pos:line="85" pos:column="56">hctxt<pos:position pos:line="85" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="63">SECPKG_ATTR_NAMES<pos:position pos:line="85" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="82">&amp;<pos:position pos:line="85" pos:column="87"/></operator><name pos:line="85" pos:column="83">namebuffer<pos:position pos:line="85" pos:column="93"/></name></expr></argument>)<pos:position pos:line="85" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="95"/></expr_stmt>
<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if<pos:position pos:line="86" pos:column="4"/></cpp:directive> <expr><name pos:line="86" pos:column="5">SSP_DEBUG<pos:position pos:line="86" pos:column="14"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">fprintf<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><name pos:line="87" pos:column="17">stderr<pos:position pos:line="87" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="25">"QueryContextAttributes returned: %x\n"<pos:position pos:line="87" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="66">SecurityStatus<pos:position pos:line="87" pos:column="80"/></name></expr></argument>)<pos:position pos:line="87" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="82"/></expr_stmt>
<cpp:endif pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">endif<pos:position pos:line="88" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">SecurityStatus<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">&lt;<pos:position pos:line="89" pos:column="32"/></operator> <literal type="number" pos:line="89" pos:column="30">0<pos:position pos:line="89" pos:column="31"/></literal></expr>)<pos:position pos:line="89" pos:column="32"/></condition><then pos:line="89" pos:column="32"> <block pos:line="89" pos:column="33">{
<cpp:if pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">if<pos:position pos:line="90" pos:column="4"/></cpp:directive> <expr><name pos:line="90" pos:column="5">SSP_DEBUG<pos:position pos:line="90" pos:column="14"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">fprintf<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">stderr<pos:position pos:line="91" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="29">"QueryContextAttributes failed: %x\n"<pos:position pos:line="91" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="91" pos:column="68">SecurityStatus<pos:position pos:line="91" pos:column="82"/></name></expr></argument>)<pos:position pos:line="91" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="93" pos:column="13">return <expr><name pos:line="93" pos:column="20">FALSE<pos:position pos:line="93" pos:column="25"/></name></expr>;<pos:position pos:line="93" pos:column="26"/></return>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">strncpy<pos:position pos:line="95" pos:column="16"/></name><argument_list pos:line="95" pos:column="16">(<argument><expr><name pos:line="95" pos:column="17">credentials<pos:position pos:line="95" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="30">namebuffer<pos:position pos:line="95" pos:column="40"/></name><operator pos:line="95" pos:column="40">.<pos:position pos:line="95" pos:column="41"/></operator><name pos:line="95" pos:column="41">sUserName<pos:position pos:line="95" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="52">SSP_MAX_CRED_LEN<pos:position pos:line="95" pos:column="68"/></name></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="96" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="98" pos:column="5">*<pos:position pos:line="98" pos:column="6"/></operator><name pos:line="98" pos:column="6">pcbOut<pos:position pos:line="98" pos:column="12"/></name> <operator pos:line="98" pos:column="13">=<pos:position pos:line="98" pos:column="14"/></operator> <name><name pos:line="98" pos:column="15">sbOut<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">.<pos:position pos:line="98" pos:column="21"/></operator><name pos:line="98" pos:column="21">cbBuffer<pos:position pos:line="98" pos:column="29"/></name></name></expr>;<pos:position pos:line="98" pos:column="30"/></expr_stmt>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><name><name pos:line="99" pos:column="10">pAS<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">-&gt;<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="15">fInitialized<pos:position pos:line="99" pos:column="27"/></name></name></expr>)<pos:position pos:line="99" pos:column="28"/></condition><then pos:line="99" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="100" pos:column="9">pAS<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">-&gt;<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="14">fInitialized<pos:position pos:line="100" pos:column="26"/></name></name> <operator pos:line="100" pos:column="27">=<pos:position pos:line="100" pos:column="28"/></operator> <name pos:line="100" pos:column="29">TRUE<pos:position pos:line="100" pos:column="33"/></name></expr>;<pos:position pos:line="100" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="101" pos:column="5">*<pos:position pos:line="101" pos:column="6"/></operator><name pos:line="101" pos:column="6">pfDone<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">=<pos:position pos:line="101" pos:column="14"/></operator> <operator pos:line="101" pos:column="15">!<pos:position pos:line="101" pos:column="16"/></operator><operator pos:line="101" pos:column="16">(<pos:position pos:line="101" pos:column="17"/></operator><name pos:line="101" pos:column="17">SecurityStatus<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">==<pos:position pos:line="101" pos:column="34"/></operator> <name pos:line="101" pos:column="35">SEC_I_CONTINUE_NEEDED<pos:position pos:line="101" pos:column="56"/></name>
                <operator pos:line="102" pos:column="17">||<pos:position pos:line="102" pos:column="19"/></operator> <name pos:line="102" pos:column="20">SecurityStatus<pos:position pos:line="102" pos:column="34"/></name> <operator pos:line="102" pos:column="35">==<pos:position pos:line="102" pos:column="37"/></operator> <name pos:line="102" pos:column="38">SEC_I_COMPLETE_AND_CONTINUE<pos:position pos:line="102" pos:column="65"/></name><operator pos:line="102" pos:column="65">)<pos:position pos:line="102" pos:column="66"/></operator></expr>;<pos:position pos:line="102" pos:column="67"/></expr_stmt>
    <return pos:line="103" pos:column="5">return <expr><name pos:line="103" pos:column="12">TRUE<pos:position pos:line="103" pos:column="16"/></name></expr>;<pos:position pos:line="103" pos:column="17"/></return>
}<pos:position pos:line="104" pos:column="2"/></block></function></unit>

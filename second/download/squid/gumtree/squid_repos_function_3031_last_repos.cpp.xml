<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3031_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">proxyProtocolError<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">msg<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">msg<pos:position pos:line="4" pos:column="12"/></name></expr>)<pos:position pos:line="4" pos:column="13"/></condition><then pos:line="4" pos:column="13"> <block pos:line="4" pos:column="14">{
        <comment type="line" pos:line="5" pos:column="9">// This is important to know, but maybe not so much that flooding the log is okay.</comment>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">QUIET_PROXY_PROTOCOL<pos:position pos:line="6" pos:column="25"/></name></expr></cpp:if>
        <comment type="line" pos:line="7" pos:column="9">// display the first of every 32 occurances at level 1, the others at level 2.</comment>
        <decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">uint8_t<pos:position pos:line="8" pos:column="23"/></name></type> <name pos:line="8" pos:column="24">hide<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><literal type="number" pos:line="8" pos:column="31">0<pos:position pos:line="8" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">33<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><ternary><condition><expr><name pos:line="9" pos:column="21">hide<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">++<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">%<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">32<pos:position pos:line="9" pos:column="32"/></literal> <operator pos:line="9" pos:column="33">==<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr> ?<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <expr><name pos:line="9" pos:column="40">DBG_IMPORTANT<pos:position pos:line="9" pos:column="53"/></name></expr> <pos:position pos:line="9" pos:column="54"/></then><else pos:line="9" pos:column="54">: <expr><literal type="number" pos:line="9" pos:column="56">2<pos:position pos:line="9" pos:column="57"/></literal></expr></else></ternary><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator></expr></argument>, <argument><expr><name pos:line="9" pos:column="60">msg<pos:position pos:line="9" pos:column="63"/></name> <operator pos:line="9" pos:column="64">&lt;&lt;<pos:position pos:line="9" pos:column="72"/></operator> <literal type="string" pos:line="9" pos:column="67">" from "<pos:position pos:line="9" pos:column="75"/></literal> <operator pos:line="9" pos:column="76">&lt;&lt;<pos:position pos:line="9" pos:column="84"/></operator> <name pos:line="9" pos:column="79">clientConnection<pos:position pos:line="9" pos:column="95"/></name></expr></argument>)<pos:position pos:line="9" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="97"/></expr_stmt>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">33<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">msg<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">&lt;&lt;<pos:position pos:line="11" pos:column="47"/></operator> <literal type="string" pos:line="11" pos:column="42">" from "<pos:position pos:line="11" pos:column="50"/></literal> <operator pos:line="11" pos:column="51">&lt;&lt;<pos:position pos:line="11" pos:column="59"/></operator> <name pos:line="11" pos:column="54">clientConnection<pos:position pos:line="11" pos:column="70"/></name></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">mustStop<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">msg<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <return pos:line="15" pos:column="5">return <expr><literal type="boolean" pos:line="15" pos:column="12">false<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2215_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">complete<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">17<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <call><name><name pos:line="4" pos:column="27">entry<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">url<pos:position pos:line="4" pos:column="37"/></name></name><argument_list pos:line="4" pos:column="37">()<pos:position pos:line="4" pos:column="39"/></argument_list></call> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <literal type="string" pos:line="4" pos:column="43">"\n\tstatus "<pos:position pos:line="4" pos:column="56"/></literal> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <call><name><name pos:line="4" pos:column="60">entry<pos:position pos:line="4" pos:column="65"/></name><operator pos:line="4" pos:column="65">-&gt;<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="67">getReply<pos:position pos:line="4" pos:column="75"/></name></name><argument_list pos:line="4" pos:column="75">()<pos:position pos:line="4" pos:column="77"/></argument_list></call><operator pos:line="4" pos:column="77">-&gt;<pos:position pos:line="4" pos:column="82"/></operator><call><name><name pos:line="4" pos:column="79">sline<pos:position pos:line="4" pos:column="84"/></name><operator pos:line="4" pos:column="84">.<pos:position pos:line="4" pos:column="85"/></operator><name pos:line="4" pos:column="85">status<pos:position pos:line="4" pos:column="91"/></name></name><argument_list pos:line="4" pos:column="91">()<pos:position pos:line="4" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="95"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">URL_CHECKSUM_DEBUG<pos:position pos:line="5" pos:column="23"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">entry<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">mem_obj<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">checkUrlChecksum<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">logReplyStatus<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">n_tries<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="29">entry<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">getReply<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><call><name><name pos:line="10" pos:column="48">sline<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">status<pos:position pos:line="10" pos:column="60"/></name></name><argument_list pos:line="10" pos:column="60">()<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">reforward<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">()<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">17<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">3<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">HERE<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&lt;&lt;<pos:position pos:line="13" pos:column="36"/></operator> <literal type="string" pos:line="13" pos:column="31">"re-forwarding "<pos:position pos:line="13" pos:column="47"/></literal> <operator pos:line="13" pos:column="48">&lt;&lt;<pos:position pos:line="13" pos:column="56"/></operator> <call><name><name pos:line="13" pos:column="51">entry<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">-&gt;<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="58">getReply<pos:position pos:line="13" pos:column="66"/></name></name><argument_list pos:line="13" pos:column="66">()<pos:position pos:line="13" pos:column="68"/></argument_list></call><operator pos:line="13" pos:column="68">-&gt;<pos:position pos:line="13" pos:column="73"/></operator><call><name><name pos:line="13" pos:column="70">sline<pos:position pos:line="13" pos:column="75"/></name><operator pos:line="13" pos:column="75">.<pos:position pos:line="13" pos:column="76"/></operator><name pos:line="13" pos:column="76">status<pos:position pos:line="13" pos:column="82"/></name></name><argument_list pos:line="13" pos:column="82">()<pos:position pos:line="13" pos:column="84"/></argument_list></call> <operator pos:line="13" pos:column="85">&lt;&lt;<pos:position pos:line="13" pos:column="93"/></operator> <literal type="string" pos:line="13" pos:column="88">" "<pos:position pos:line="13" pos:column="91"/></literal> <operator pos:line="13" pos:column="92">&lt;&lt;<pos:position pos:line="13" pos:column="100"/></operator> <call><name><name pos:line="13" pos:column="95">entry<pos:position pos:line="13" pos:column="100"/></name><operator pos:line="13" pos:column="100">-&gt;<pos:position pos:line="13" pos:column="105"/></operator><name pos:line="13" pos:column="102">url<pos:position pos:line="13" pos:column="105"/></name></name><argument_list pos:line="13" pos:column="105">()<pos:position pos:line="13" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="109"/></expr_stmt>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name><name pos:line="15" pos:column="13">Comm<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">::<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">IsConnOpen<pos:position pos:line="15" pos:column="29"/></name></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">serverConn<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="13">unregister<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">serverConn<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">entry<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">reset<pos:position pos:line="18" pos:column="21"/></name></name><argument_list pos:line="18" pos:column="21">()<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>

        <comment type="line" pos:line="20" pos:column="9">// drop the last path off the selection list. try the next one.</comment>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">serverDestinations<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">shift<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">()<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">startConnectionOrFail<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">()<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>

    }<pos:position pos:line="24" pos:column="6"/></block></then> <else pos:line="24" pos:column="7">else <block pos:line="24" pos:column="12">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name><name pos:line="25" pos:column="13">Comm<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">::<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">IsConnOpen<pos:position pos:line="25" pos:column="29"/></name></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">serverConn<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">17<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">3<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">HERE<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&lt;&lt;<pos:position pos:line="26" pos:column="40"/></operator> <literal type="string" pos:line="26" pos:column="35">"server FD "<pos:position pos:line="26" pos:column="47"/></literal> <operator pos:line="26" pos:column="48">&lt;&lt;<pos:position pos:line="26" pos:column="56"/></operator> <call><name pos:line="26" pos:column="51">serverConnection<pos:position pos:line="26" pos:column="67"/></name><argument_list pos:line="26" pos:column="67">()<pos:position pos:line="26" pos:column="69"/></argument_list></call><operator pos:line="26" pos:column="69">-&gt;<pos:position pos:line="26" pos:column="74"/></operator><name pos:line="26" pos:column="71">fd<pos:position pos:line="26" pos:column="73"/></name> <operator pos:line="26" pos:column="74">&lt;&lt;<pos:position pos:line="26" pos:column="82"/></operator> <literal type="string" pos:line="26" pos:column="77">" not re-forwarding status "<pos:position pos:line="26" pos:column="105"/></literal> <operator pos:line="26" pos:column="106">&lt;&lt;<pos:position pos:line="26" pos:column="114"/></operator> <call><name><name pos:line="26" pos:column="109">entry<pos:position pos:line="26" pos:column="114"/></name><operator pos:line="26" pos:column="114">-&gt;<pos:position pos:line="26" pos:column="119"/></operator><name pos:line="26" pos:column="116">getReply<pos:position pos:line="26" pos:column="124"/></name></name><argument_list pos:line="26" pos:column="124">()<pos:position pos:line="26" pos:column="126"/></argument_list></call><operator pos:line="26" pos:column="126">-&gt;<pos:position pos:line="26" pos:column="131"/></operator><call><name><name pos:line="26" pos:column="128">sline<pos:position pos:line="26" pos:column="133"/></name><operator pos:line="26" pos:column="133">.<pos:position pos:line="26" pos:column="134"/></operator><name pos:line="26" pos:column="134">status<pos:position pos:line="26" pos:column="140"/></name></name><argument_list pos:line="26" pos:column="140">()<pos:position pos:line="26" pos:column="142"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="143"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="144"/></expr_stmt></block></then>
        <else pos:line="27" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">debugs<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="number" pos:line="28" pos:column="20">17<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="24">3<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">HERE<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">&lt;&lt;<pos:position pos:line="28" pos:column="40"/></operator> <literal type="string" pos:line="28" pos:column="35">"server (FD closed) not re-forwarding status "<pos:position pos:line="28" pos:column="81"/></literal> <operator pos:line="28" pos:column="82">&lt;&lt;<pos:position pos:line="28" pos:column="90"/></operator> <call><name><name pos:line="28" pos:column="85">entry<pos:position pos:line="28" pos:column="90"/></name><operator pos:line="28" pos:column="90">-&gt;<pos:position pos:line="28" pos:column="95"/></operator><name pos:line="28" pos:column="92">getReply<pos:position pos:line="28" pos:column="100"/></name></name><argument_list pos:line="28" pos:column="100">()<pos:position pos:line="28" pos:column="102"/></argument_list></call><operator pos:line="28" pos:column="102">-&gt;<pos:position pos:line="28" pos:column="107"/></operator><call><name><name pos:line="28" pos:column="104">sline<pos:position pos:line="28" pos:column="109"/></name><operator pos:line="28" pos:column="109">.<pos:position pos:line="28" pos:column="110"/></operator><name pos:line="28" pos:column="110">status<pos:position pos:line="28" pos:column="116"/></name></name><argument_list pos:line="28" pos:column="116">()<pos:position pos:line="28" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="120"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">EBIT_CLR<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name><name pos:line="29" pos:column="18">entry<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">flags<pos:position pos:line="29" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">ENTRY_FWD_HDR_WAIT<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="30" pos:column="9">entry<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">complete<pos:position pos:line="30" pos:column="24"/></name></name><argument_list pos:line="30" pos:column="24">()<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name><name pos:line="32" pos:column="14">Comm<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">::<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">IsConnOpen<pos:position pos:line="32" pos:column="30"/></name></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">serverConn<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="13">completed<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">()<pos:position pos:line="33" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="35" pos:column="9">self<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">NULL<pos:position pos:line="35" pos:column="20"/></name></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt> <comment type="line" pos:line="35" pos:column="22">// refcounted</comment>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

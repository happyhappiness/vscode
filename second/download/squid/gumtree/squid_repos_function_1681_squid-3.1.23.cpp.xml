<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1681_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDigestPDFinish<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">DigestFetchState<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">fetch<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">pcb_valid<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">int<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">err<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">PeerDigest<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pd<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">fetch<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">pd<pos:position pos:line="4" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">host<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name><name pos:line="5" pos:column="24">pd<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">host<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">termedBuf<pos:position pos:line="5" pos:column="42"/></name></name><argument_list pos:line="5" pos:column="42">()<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="7" pos:column="5">pd<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">-&gt;<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="9">times<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">received<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">squid_curtime<pos:position pos:line="7" pos:column="39"/></name></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">pd<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">times<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">req_delay<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <name><name pos:line="8" pos:column="27">fetch<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-&gt;<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="34">resp_time<pos:position pos:line="8" pos:column="43"/></name></name></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">kb_incr<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><operator pos:line="9" pos:column="13">&amp;<pos:position pos:line="9" pos:column="18"/></operator><name><name pos:line="9" pos:column="14">pd<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">stats<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">sent<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">.<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">kbytes<pos:position pos:line="9" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="37">(<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">size_t<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator> <name><name pos:line="9" pos:column="46">fetch<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">sent<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">.<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">bytes<pos:position pos:line="9" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">kb_incr<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><operator pos:line="10" pos:column="13">&amp;<pos:position pos:line="10" pos:column="18"/></operator><name><name pos:line="10" pos:column="14">pd<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">stats<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">recv<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">kbytes<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="37">(<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">size_t<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <name><name pos:line="10" pos:column="46">fetch<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">-&gt;<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="53">recv<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">.<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">bytes<pos:position pos:line="10" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">pd<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">stats<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">sent<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">msgs<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">+=<pos:position pos:line="11" pos:column="27"/></operator> <name><name pos:line="11" pos:column="28">fetch<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">sent<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">.<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">msg<pos:position pos:line="11" pos:column="43"/></name></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">pd<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">stats<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">recv<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">msgs<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">+=<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="28">fetch<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">-&gt;<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="35">recv<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">msg<pos:position pos:line="12" pos:column="43"/></name></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">err<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13"> <block pos:line="14" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">72<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">""<pos:position pos:line="15" pos:column="25"/></literal> <operator pos:line="15" pos:column="26">&lt;&lt;<pos:position pos:line="15" pos:column="34"/></operator> <operator pos:line="15" pos:column="29">(<pos:position pos:line="15" pos:column="30"/></operator><ternary><condition><expr><name pos:line="15" pos:column="30">pcb_valid<pos:position pos:line="15" pos:column="39"/></name></expr> ?<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <expr><literal type="string" pos:line="15" pos:column="42">"temporary "<pos:position pos:line="15" pos:column="54"/></literal></expr> <pos:position pos:line="15" pos:column="55"/></then><else pos:line="15" pos:column="55">: <expr><literal type="string" pos:line="15" pos:column="57">""<pos:position pos:line="15" pos:column="59"/></literal></expr></else></ternary> <operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator> <operator pos:line="15" pos:column="62">&lt;&lt;<pos:position pos:line="15" pos:column="70"/></operator> <literal type="string" pos:line="15" pos:column="65">"disabling ("<pos:position pos:line="15" pos:column="78"/></literal> <operator pos:line="15" pos:column="79">&lt;&lt;<pos:position pos:line="15" pos:column="87"/></operator> <name><name pos:line="15" pos:column="82">pd<pos:position pos:line="15" pos:column="84"/></name><operator pos:line="15" pos:column="84">-&gt;<pos:position pos:line="15" pos:column="89"/></operator><name pos:line="15" pos:column="86">req_result<pos:position pos:line="15" pos:column="96"/></name></name> <operator pos:line="15" pos:column="97">&lt;&lt;<pos:position pos:line="15" pos:column="105"/></operator> <literal type="string" pos:line="15" pos:column="100">") digest from "<pos:position pos:line="15" pos:column="116"/></literal> <operator pos:line="15" pos:column="117">&lt;&lt;<pos:position pos:line="15" pos:column="125"/></operator> <name pos:line="15" pos:column="120">host<pos:position pos:line="15" pos:column="124"/></name></expr></argument>)<pos:position pos:line="15" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="126"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">pd<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">cd<pos:position pos:line="17" pos:column="19"/></name></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20"> <block pos:line="17" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">cacheDigestDestroy<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name><name pos:line="18" pos:column="32">pd<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">cd<pos:position pos:line="18" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">pd<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">cd<pos:position pos:line="19" pos:column="19"/></name></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="22" pos:column="9">pd<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">flags<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">usable<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">pcb_valid<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">peerDigestNotePeerGone<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">pd<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then> <else pos:line="26" pos:column="7">else <block pos:line="26" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">assert<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">pcb_valid<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="29" pos:column="9">pd<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">flags<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">usable<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="28">1<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>

        <comment type="block" pos:line="31" pos:column="9">/* XXX: ugly condition, but how? */</comment>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">fetch<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">entry<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">-&gt;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="27">store_status<pos:position pos:line="33" pos:column="39"/></name></name> <operator pos:line="33" pos:column="40">==<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="43">STORE_OK<pos:position pos:line="33" pos:column="51"/></name></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">72<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="24">2<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="27">"re-used old digest from "<pos:position pos:line="34" pos:column="53"/></literal> <operator pos:line="34" pos:column="54">&lt;&lt;<pos:position pos:line="34" pos:column="62"/></operator> <name pos:line="34" pos:column="57">host<pos:position pos:line="34" pos:column="61"/></name></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt></block></then>
        <else pos:line="35" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">72<pos:position pos:line="36" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">2<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"received valid digest from "<pos:position pos:line="36" pos:column="56"/></literal> <operator pos:line="36" pos:column="57">&lt;&lt;<pos:position pos:line="36" pos:column="65"/></operator> <name pos:line="36" pos:column="60">host<pos:position pos:line="36" pos:column="64"/></name></expr></argument>)<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="66"/></expr_stmt></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">cbdataReferenceDone<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name><name pos:line="39" pos:column="25">fetch<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">pd<pos:position pos:line="39" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3451_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">virtual<pos:position pos:line="1" pos:column="8"/></specifier> <type><name pos:line="1" pos:column="9">void<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">visit<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">Name<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">&amp;<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="32">name<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">Area<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">&amp;<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="50">value<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
        <expr_stmt><expr><call><name><name pos:line="2" pos:column="9">meta<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">.<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">putExt<pos:position pos:line="2" pos:column="20"/></name></name><argument_list pos:line="2" pos:column="20">(<argument><expr><call><name><name pos:line="2" pos:column="21">name<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">.<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">image<pos:position pos:line="2" pos:column="31"/></name></name><argument_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></argument_list></call><operator pos:line="2" pos:column="33">.<pos:position pos:line="2" pos:column="34"/></operator><call><name pos:line="2" pos:column="34">c_str<pos:position pos:line="2" pos:column="39"/></name><argument_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2" pos:column="43">value<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">.<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">toString<pos:position pos:line="2" pos:column="57"/></name></name><argument_list pos:line="2" pos:column="57">()<pos:position pos:line="2" pos:column="59"/></argument_list></call><operator pos:line="2" pos:column="59">.<pos:position pos:line="2" pos:column="60"/></operator><call><name pos:line="2" pos:column="60">c_str<pos:position pos:line="2" pos:column="65"/></name><argument_list pos:line="2" pos:column="65">()<pos:position pos:line="2" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="2" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="3" pos:column="6"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4087_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">swanSong<pos:position pos:line="1" pos:column="41"/></name></name><parameter_list pos:line="1" pos:column="41">()<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">5<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">HERE<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&lt;&lt;<pos:position pos:line="3" pos:column="32"/></operator> <literal type="string" pos:line="3" pos:column="27">"swan sings"<pos:position pos:line="3" pos:column="39"/></literal> <operator pos:line="3" pos:column="40">&lt;&lt;<pos:position pos:line="3" pos:column="48"/></operator> <call><name pos:line="3" pos:column="43">status<pos:position pos:line="3" pos:column="49"/></name><argument_list pos:line="3" pos:column="49">()<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">stopWriting<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><literal type="boolean" pos:line="5" pos:column="17">false<pos:position pos:line="5" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">stopSending<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="boolean" pos:line="6" pos:column="17">false<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">theInitiator<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">set<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">()<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <comment type="line" pos:line="8" pos:column="29">// we have not sent the answer to the initiator</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">detailError<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">ERR_DETAIL_ICAP_XACT_OTHER<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="11" pos:column="5">// update adaptation history if start was called and we reserved a slot</comment>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">Adaptation<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">History<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">::<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">Pointer<pos:position pos:line="12" pos:column="33"/></name></name></type> <name pos:line="12" pos:column="34">ah<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><call><name pos:line="12" pos:column="39">virginRequest<pos:position pos:line="12" pos:column="52"/></name><argument_list pos:line="12" pos:column="52">()<pos:position pos:line="12" pos:column="54"/></argument_list></call><operator pos:line="12" pos:column="54">.<pos:position pos:line="12" pos:column="55"/></operator><call><name pos:line="12" pos:column="55">adaptLogHistory<pos:position pos:line="12" pos:column="70"/></name><argument_list pos:line="12" pos:column="70">()<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="73"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">ah<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">!=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">NULL<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&amp;&amp;<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="23">adaptHistoryId<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">&gt;=<pos:position pos:line="13" pos:column="43"/></operator> <literal type="number" pos:line="13" pos:column="41">0<pos:position pos:line="13" pos:column="42"/></literal></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="9">ah<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">recordXactFinish<pos:position pos:line="14" pos:column="29"/></name></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">adaptHistoryId<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">Adaptation<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">::<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">Icap<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">::<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">Xaction<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">::<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">swanSong<pos:position pos:line="16" pos:column="40"/></name></name><argument_list pos:line="16" pos:column="40">()<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

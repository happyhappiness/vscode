<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_938_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">void<pos:position pos:line="2" pos:column="5"/></name></type>
<name pos:line="3" pos:column="1">commHalfClosedCheck<pos:position pos:line="3" pos:column="20"/></name><parameter_list pos:line="3" pos:column="20">(<parameter><decl><type><name pos:line="3" pos:column="21">void<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type></decl></parameter>)<pos:position pos:line="3" pos:column="28"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">5<pos:position pos:line="5" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="15">5<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="18">HERE<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;&lt;<pos:position pos:line="5" pos:column="31"/></operator> <literal type="string" pos:line="5" pos:column="26">"checking "<pos:position pos:line="5" pos:column="37"/></literal> <operator pos:line="5" pos:column="38">&lt;&lt;<pos:position pos:line="5" pos:column="46"/></operator> <operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">TheHalfClosed<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt>

    <typedef pos:line="7" pos:column="5">typedef <type><name><name pos:line="7" pos:column="13">DescriptorSet<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">::<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">const_iterator<pos:position pos:line="7" pos:column="42"/></name></name></type> <name pos:line="7" pos:column="43">DSCI<pos:position pos:line="7" pos:column="47"/></name>;<pos:position pos:line="7" pos:column="48"/></typedef>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">DSCI<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">end<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><call><name><name pos:line="8" pos:column="22">TheHalfClosed<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">end<pos:position pos:line="8" pos:column="40"/></name></name><argument_list pos:line="8" pos:column="40">()<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><decl><type><name pos:line="9" pos:column="10">DSCI<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><call><name><name pos:line="9" pos:column="19">TheHalfClosed<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">begin<pos:position pos:line="9" pos:column="39"/></name></name><argument_list pos:line="9" pos:column="39">()<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="42"/></init> <condition><expr><name pos:line="9" pos:column="43">i<pos:position pos:line="9" pos:column="44"/></name> <operator pos:line="9" pos:column="45">!=<pos:position pos:line="9" pos:column="47"/></operator> <name pos:line="9" pos:column="48">end<pos:position pos:line="9" pos:column="51"/></name></expr>;<pos:position pos:line="9" pos:column="52"/></condition> <incr><expr><operator pos:line="9" pos:column="53">++<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="55">i<pos:position pos:line="9" pos:column="56"/></name></expr></incr>)<pos:position pos:line="9" pos:column="57"/></control> <block pos:line="9" pos:column="58">{
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">Comm<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">::<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">ConnectionPointer<pos:position pos:line="10" pos:column="32"/></name></name></type> <name pos:line="10" pos:column="33">c<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><operator pos:line="10" pos:column="37">new<pos:position pos:line="10" pos:column="40"/></operator> <name><name pos:line="10" pos:column="41">Comm<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">::<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">Connection<pos:position pos:line="10" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="58"/></decl_stmt> <comment type="line" pos:line="10" pos:column="59">// XXX: temporary. make HalfClosed a list of these.</comment>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">c<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">fd<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">i<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">fd_table<pos:position pos:line="12" pos:column="22"/></name><index pos:line="12" pos:column="22">[<expr><name><name pos:line="12" pos:column="23">c<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">fd<pos:position pos:line="12" pos:column="28"/></name></name></expr>]<pos:position pos:line="12" pos:column="29"/></index></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">halfClosedReader<pos:position pos:line="12" pos:column="46"/></name></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47"> <block pos:line="12" pos:column="48">{ <comment type="line" pos:line="12" pos:column="50">// not reading already</comment>
            <decl_stmt><decl><type><name><name pos:line="13" pos:column="13">AsyncCall<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">::<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">Pointer<pos:position pos:line="13" pos:column="31"/></name></name></type> <name pos:line="13" pos:column="32">call<pos:position pos:line="13" pos:column="36"/></name> <init pos:line="13" pos:column="37">= <expr><call><name pos:line="13" pos:column="39">commCbCall<pos:position pos:line="13" pos:column="49"/></name><argument_list pos:line="13" pos:column="49">(<argument><expr><literal type="number" pos:line="13" pos:column="50">5<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="52">4<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="55">"commHalfClosedReader"<pos:position pos:line="13" pos:column="77"/></literal></expr></argument>,
                                                 <argument><expr><call><name pos:line="14" pos:column="50">CommIoCbPtrFun<pos:position pos:line="14" pos:column="64"/></name><argument_list pos:line="14" pos:column="64">(<argument><expr><operator pos:line="14" pos:column="65">&amp;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="66">commHalfClosedReader<pos:position pos:line="14" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="88">NULL<pos:position pos:line="14" pos:column="92"/></name></expr></argument>)<pos:position pos:line="14" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="95"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">comm_read<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">c<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">NULL<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">call<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">fd_table<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><name><name pos:line="16" pos:column="22">c<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">fd<pos:position pos:line="16" pos:column="27"/></name></name></expr>]<pos:position pos:line="16" pos:column="28"/></index></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">halfClosedReader<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">=<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">call<pos:position pos:line="16" pos:column="52"/></name></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="13">c<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">fd<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">-<pos:position pos:line="18" pos:column="22"/></operator><literal type="number" pos:line="18" pos:column="22">1<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt></block></else></if> <comment type="line" pos:line="18" pos:column="25">// XXX: temporary. prevent c replacement erase closing listed FD</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="21" pos:column="5">WillCheckHalfClosed<pos:position pos:line="21" pos:column="24"/></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <literal type="boolean" pos:line="21" pos:column="27">false<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt> <comment type="line" pos:line="21" pos:column="34">// as far as we know</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">commPlanHalfClosedCheck<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">()<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt> <comment type="line" pos:line="22" pos:column="32">// may need to check again</comment>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

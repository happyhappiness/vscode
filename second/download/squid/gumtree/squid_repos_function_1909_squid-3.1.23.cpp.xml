<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1909_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">BodyConsumer<pos:position pos:line="1" pos:column="18"/></name><operator pos:line="1" pos:column="18">::<pos:position pos:line="1" pos:column="20"/></operator><name pos:line="1" pos:column="20">stopConsumingFrom<pos:position pos:line="1" pos:column="37"/></name></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name><name pos:line="1" pos:column="38">RefCount<pos:position pos:line="1" pos:column="46"/></name><argument_list type="generic" pos:line="1" pos:column="46">&lt;<argument><expr><name pos:line="1" pos:column="47">BodyPipe<pos:position pos:line="1" pos:column="55"/></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="59"/></argument_list></name> <modifier pos:line="1" pos:column="57">&amp;<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="58">pipe<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">91<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="15">7<pos:position pos:line="3" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="18">HERE<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&lt;&lt;<pos:position pos:line="3" pos:column="31"/></operator> <name pos:line="3" pos:column="26">this<pos:position pos:line="3" pos:column="30"/></name> <operator pos:line="3" pos:column="31">&lt;&lt;<pos:position pos:line="3" pos:column="39"/></operator> <literal type="string" pos:line="3" pos:column="34">" will not consume from "<pos:position pos:line="3" pos:column="59"/></literal> <operator pos:line="3" pos:column="60">&lt;&lt;<pos:position pos:line="3" pos:column="68"/></operator> <name pos:line="3" pos:column="63">pipe<pos:position pos:line="3" pos:column="67"/></name></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">pipe<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">!=<pos:position pos:line="4" pos:column="19"/></operator> <name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt> <comment type="line" pos:line="4" pos:column="27">// be strict: the caller state may depend on this</comment>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">pipe<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">clearConsumer<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">pipe<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">NULL<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

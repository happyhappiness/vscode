<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4151_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ssl<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">CrtdMessage<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">ParseResult<pos:position pos:line="1" pos:column="30"/></name></name></type> <name><name pos:line="1" pos:column="31">Ssl<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">CrtdMessage<pos:position pos:line="1" pos:column="47"/></name><operator pos:line="1" pos:column="47">::<pos:position pos:line="1" pos:column="49"/></operator><name pos:line="1" pos:column="49">parse<pos:position pos:line="1" pos:column="54"/></name></name><parameter_list pos:line="1" pos:column="54">(<parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type> <name pos:line="1" pos:column="68">buffer<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">size_t<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">len<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <specifier pos:line="3" pos:column="10">const<pos:position pos:line="3" pos:column="15"/></specifier> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">current_pos<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name pos:line="3" pos:column="31">buffer<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><name pos:line="4" pos:column="12">current_pos<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">!=<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">buffer<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">+<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="36">len<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">&amp;&amp;<pos:position pos:line="4" pos:column="50"/></operator> <name pos:line="4" pos:column="43">state<pos:position pos:line="4" pos:column="48"/></name> <operator pos:line="4" pos:column="49">!=<pos:position pos:line="4" pos:column="51"/></operator> <name pos:line="4" pos:column="52">END<pos:position pos:line="4" pos:column="55"/></name></expr>)<pos:position pos:line="4" pos:column="56"/></condition> <block pos:line="4" pos:column="57">{
        <switch pos:line="5" pos:column="9">switch <condition pos:line="5" pos:column="16">(<expr><name pos:line="5" pos:column="17">state<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition> <block pos:line="5" pos:column="24">{
        <case pos:line="6" pos:column="9">case <expr><name pos:line="6" pos:column="14">BEFORE_CODE<pos:position pos:line="6" pos:column="25"/></name></expr>:<pos:position pos:line="6" pos:column="26"/></case> <block pos:line="6" pos:column="27">{
            <if pos:line="7" pos:column="13">if <condition pos:line="7" pos:column="16">(<expr><call><name pos:line="7" pos:column="17">xisspace<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">current_pos<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40"> <block pos:line="7" pos:column="41">{
                <expr_stmt><expr><name pos:line="8" pos:column="17">current_pos<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
                <break pos:line="9" pos:column="17">break;<pos:position pos:line="9" pos:column="23"/></break>
            }<pos:position pos:line="10" pos:column="14"/></block></then></if>
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><call><name pos:line="11" pos:column="17">xisalpha<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><operator pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">current_pos<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <block pos:line="11" pos:column="41">{
                <expr_stmt><expr><name pos:line="12" pos:column="17">state<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">CODE<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
                <break pos:line="13" pos:column="17">break;<pos:position pos:line="13" pos:column="23"/></break>
            }<pos:position pos:line="14" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">clear<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">()<pos:position pos:line="15" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="21"/></expr_stmt>
            <return pos:line="16" pos:column="13">return <expr><name pos:line="16" pos:column="20">ERROR<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></return>
        }<pos:position pos:line="17" pos:column="10"/></block>
        <case pos:line="18" pos:column="9">case <expr><name pos:line="18" pos:column="14">CODE<pos:position pos:line="18" pos:column="18"/></name></expr>:<pos:position pos:line="18" pos:column="19"/></case> <block pos:line="18" pos:column="20">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">xisalnum<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><operator pos:line="19" pos:column="26">*<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">current_pos<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call> <operator pos:line="19" pos:column="40">||<pos:position pos:line="19" pos:column="42"/></operator> <operator pos:line="19" pos:column="43">*<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">current_pos<pos:position pos:line="19" pos:column="55"/></name> <operator pos:line="19" pos:column="56">==<pos:position pos:line="19" pos:column="58"/></operator> <literal type="char" pos:line="19" pos:column="59">'_'<pos:position pos:line="19" pos:column="62"/></literal></expr>)<pos:position pos:line="19" pos:column="63"/></condition><then pos:line="19" pos:column="63"> <block pos:line="19" pos:column="64">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">current_block<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">+=<pos:position pos:line="20" pos:column="33"/></operator> <operator pos:line="20" pos:column="34">*<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">current_pos<pos:position pos:line="20" pos:column="46"/></name></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="21" pos:column="17">current_pos<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">++<pos:position pos:line="21" pos:column="30"/></operator></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
                <break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
            }<pos:position pos:line="23" pos:column="14"/></block></then></if>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><call><name pos:line="24" pos:column="17">xisspace<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><operator pos:line="24" pos:column="26">*<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">current_pos<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40"> <block pos:line="24" pos:column="41">{
                <expr_stmt><expr><name pos:line="25" pos:column="17">code<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">current_block<pos:position pos:line="25" pos:column="37"/></name></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="26" pos:column="17">current_block<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">.<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">clear<pos:position pos:line="26" pos:column="36"/></name></name><argument_list pos:line="26" pos:column="36">()<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="27" pos:column="17">state<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">BEFORE_LENGTH<pos:position pos:line="27" pos:column="38"/></name></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
                <break pos:line="28" pos:column="17">break;<pos:position pos:line="28" pos:column="23"/></break>
            }<pos:position pos:line="29" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">clear<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">()<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
            <return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">ERROR<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block>
        <case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">BEFORE_LENGTH<pos:position pos:line="33" pos:column="27"/></name></expr>:<pos:position pos:line="33" pos:column="28"/></case> <block pos:line="33" pos:column="29">{
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><call><name pos:line="34" pos:column="17">xisspace<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><operator pos:line="34" pos:column="26">*<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">current_pos<pos:position pos:line="34" pos:column="38"/></name></expr></argument>)<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="40"/></condition><then pos:line="34" pos:column="40"> <block pos:line="34" pos:column="41">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">current_pos<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">++<pos:position pos:line="35" pos:column="30"/></operator></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><call><name pos:line="38" pos:column="17">xisdigit<pos:position pos:line="38" pos:column="25"/></name><argument_list pos:line="38" pos:column="25">(<argument><expr><operator pos:line="38" pos:column="26">*<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">current_pos<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="40"/></condition><then pos:line="38" pos:column="40"> <block pos:line="38" pos:column="41">{
                <expr_stmt><expr><name pos:line="39" pos:column="17">state<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="25">LENGTH<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
                <break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">clear<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">()<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
            <return pos:line="43" pos:column="13">return <expr><name pos:line="43" pos:column="20">ERROR<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block>
        <case pos:line="45" pos:column="9">case <expr><name pos:line="45" pos:column="14">LENGTH<pos:position pos:line="45" pos:column="20"/></name></expr>:<pos:position pos:line="45" pos:column="21"/></case> <block pos:line="45" pos:column="22">{
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><call><name pos:line="46" pos:column="17">xisdigit<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">*<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">current_pos<pos:position pos:line="46" pos:column="38"/></name></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40"> <block pos:line="46" pos:column="41">{
                <expr_stmt><expr><name pos:line="47" pos:column="17">current_block<pos:position pos:line="47" pos:column="30"/></name> <operator pos:line="47" pos:column="31">+=<pos:position pos:line="47" pos:column="33"/></operator> <operator pos:line="47" pos:column="34">*<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="35">current_pos<pos:position pos:line="47" pos:column="46"/></name></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="48" pos:column="17">current_pos<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">++<pos:position pos:line="48" pos:column="30"/></operator></expr>;<pos:position pos:line="48" pos:column="31"/></expr_stmt>
                <break pos:line="49" pos:column="17">break;<pos:position pos:line="49" pos:column="23"/></break>
            }<pos:position pos:line="50" pos:column="14"/></block></then></if>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><call><name pos:line="51" pos:column="17">xisspace<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><operator pos:line="51" pos:column="26">*<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">current_pos<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40"> <block pos:line="51" pos:column="41">{
                <expr_stmt><expr><name pos:line="52" pos:column="17">body_size<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <call><name pos:line="52" pos:column="29">atoi<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><call><name><name pos:line="52" pos:column="34">current_block<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">.<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">c_str<pos:position pos:line="52" pos:column="53"/></name></name><argument_list pos:line="52" pos:column="53">()<pos:position pos:line="52" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="53" pos:column="17">current_block<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">clear<pos:position pos:line="53" pos:column="36"/></name></name><argument_list pos:line="53" pos:column="36">()<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="54" pos:column="17">state<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="25">BEFORE_BODY<pos:position pos:line="54" pos:column="36"/></name></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>
                <break pos:line="55" pos:column="17">break;<pos:position pos:line="55" pos:column="23"/></break>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">clear<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">()<pos:position pos:line="57" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
            <return pos:line="58" pos:column="13">return <expr><name pos:line="58" pos:column="20">ERROR<pos:position pos:line="58" pos:column="25"/></name></expr>;<pos:position pos:line="58" pos:column="26"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block>
        <case pos:line="60" pos:column="9">case <expr><name pos:line="60" pos:column="14">BEFORE_BODY<pos:position pos:line="60" pos:column="25"/></name></expr>:<pos:position pos:line="60" pos:column="26"/></case> <block pos:line="60" pos:column="27">{
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><name pos:line="61" pos:column="17">body_size<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">==<pos:position pos:line="61" pos:column="29"/></operator> <literal type="number" pos:line="61" pos:column="30">0<pos:position pos:line="61" pos:column="31"/></literal></expr>)<pos:position pos:line="61" pos:column="32"/></condition><then pos:line="61" pos:column="32"> <block pos:line="61" pos:column="33">{
                <expr_stmt><expr><name pos:line="62" pos:column="17">state<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <name pos:line="62" pos:column="25">END<pos:position pos:line="62" pos:column="28"/></name></expr>;<pos:position pos:line="62" pos:column="29"/></expr_stmt>
                <break pos:line="63" pos:column="17">break;<pos:position pos:line="63" pos:column="23"/></break>
            }<pos:position pos:line="64" pos:column="14"/></block></then></if>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><call><name pos:line="65" pos:column="17">xisspace<pos:position pos:line="65" pos:column="25"/></name><argument_list pos:line="65" pos:column="25">(<argument><expr><operator pos:line="65" pos:column="26">*<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">current_pos<pos:position pos:line="65" pos:column="38"/></name></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="40"/></condition><then pos:line="65" pos:column="40"> <block pos:line="65" pos:column="41">{
                <expr_stmt><expr><name pos:line="66" pos:column="17">current_pos<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">++<pos:position pos:line="66" pos:column="30"/></operator></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
                <break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break>
            }<pos:position pos:line="68" pos:column="14"/></block></then> <else pos:line="68" pos:column="15">else <block pos:line="68" pos:column="20">{
                <expr_stmt><expr><name pos:line="69" pos:column="17">state<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="25">BODY<pos:position pos:line="69" pos:column="29"/></name></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
                <break pos:line="70" pos:column="17">break;<pos:position pos:line="70" pos:column="23"/></break>
            }<pos:position pos:line="71" pos:column="14"/></block></else></if>
        }<pos:position pos:line="72" pos:column="10"/></block>
        <case pos:line="73" pos:column="9">case <expr><name pos:line="73" pos:column="14">BODY<pos:position pos:line="73" pos:column="18"/></name></expr>:<pos:position pos:line="73" pos:column="19"/></case> <block pos:line="73" pos:column="20">{
            <decl_stmt><decl><type><name pos:line="74" pos:column="13">size_t<pos:position pos:line="74" pos:column="19"/></name></type> <name pos:line="74" pos:column="20">body_len<pos:position pos:line="74" pos:column="28"/></name> <init pos:line="74" pos:column="29">= <expr><ternary><condition><expr><operator pos:line="74" pos:column="31">(<pos:position pos:line="74" pos:column="32"/></operator><cast type="static" pos:line="74" pos:column="32">static_cast<argument_list type="generic" pos:line="74" pos:column="43">&lt;<argument><expr><name pos:line="74" pos:column="44">size_t<pos:position pos:line="74" pos:column="50"/></name></expr></argument>&gt;<pos:position pos:line="74" pos:column="54"/></argument_list><argument_list pos:line="74" pos:column="51">(<argument><expr><name pos:line="74" pos:column="52">buffer<pos:position pos:line="74" pos:column="58"/></name> <operator pos:line="74" pos:column="59">+<pos:position pos:line="74" pos:column="60"/></operator> <name pos:line="74" pos:column="61">len<pos:position pos:line="74" pos:column="64"/></name> <operator pos:line="74" pos:column="65">-<pos:position pos:line="74" pos:column="66"/></operator> <name pos:line="74" pos:column="67">current_pos<pos:position pos:line="74" pos:column="78"/></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></cast> <operator pos:line="74" pos:column="80">&gt;=<pos:position pos:line="74" pos:column="85"/></operator> <name pos:line="74" pos:column="83">body_size<pos:position pos:line="74" pos:column="92"/></name> <operator pos:line="74" pos:column="93">-<pos:position pos:line="74" pos:column="94"/></operator> <call><name><name pos:line="74" pos:column="95">current_block<pos:position pos:line="74" pos:column="108"/></name><operator pos:line="74" pos:column="108">.<pos:position pos:line="74" pos:column="109"/></operator><name pos:line="74" pos:column="109">length<pos:position pos:line="74" pos:column="115"/></name></name><argument_list pos:line="74" pos:column="115">()<pos:position pos:line="74" pos:column="117"/></argument_list></call><operator pos:line="74" pos:column="117">)<pos:position pos:line="74" pos:column="118"/></operator></expr>
                              ?<pos:position pos:line="75" pos:column="32"/></condition><then pos:line="75" pos:column="32"> <expr><name pos:line="75" pos:column="33">body_size<pos:position pos:line="75" pos:column="42"/></name> <operator pos:line="75" pos:column="43">-<pos:position pos:line="75" pos:column="44"/></operator> <call><name><name pos:line="75" pos:column="45">current_block<pos:position pos:line="75" pos:column="58"/></name><operator pos:line="75" pos:column="58">.<pos:position pos:line="75" pos:column="59"/></operator><name pos:line="75" pos:column="59">length<pos:position pos:line="75" pos:column="65"/></name></name><argument_list pos:line="75" pos:column="65">()<pos:position pos:line="75" pos:column="67"/></argument_list></call></expr>
                              <pos:position pos:line="76" pos:column="31"/></then><else pos:line="76" pos:column="31">: <expr><cast type="static" pos:line="76" pos:column="33">static_cast<argument_list type="generic" pos:line="76" pos:column="44">&lt;<argument><expr><name pos:line="76" pos:column="45">size_t<pos:position pos:line="76" pos:column="51"/></name></expr></argument>&gt;<pos:position pos:line="76" pos:column="55"/></argument_list><argument_list pos:line="76" pos:column="52">(<argument><expr><name pos:line="76" pos:column="53">buffer<pos:position pos:line="76" pos:column="59"/></name> <operator pos:line="76" pos:column="60">+<pos:position pos:line="76" pos:column="61"/></operator> <name pos:line="76" pos:column="62">len<pos:position pos:line="76" pos:column="65"/></name> <operator pos:line="76" pos:column="66">-<pos:position pos:line="76" pos:column="67"/></operator> <name pos:line="76" pos:column="68">current_pos<pos:position pos:line="76" pos:column="79"/></name></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></cast></expr></else></ternary></expr></init></decl>;<pos:position pos:line="76" pos:column="81"/></decl_stmt>
            <expr_stmt><expr><name pos:line="77" pos:column="13">current_block<pos:position pos:line="77" pos:column="26"/></name> <operator pos:line="77" pos:column="27">+=<pos:position pos:line="77" pos:column="29"/></operator> <call><name><name pos:line="77" pos:column="30">std<pos:position pos:line="77" pos:column="33"/></name><operator pos:line="77" pos:column="33">::<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="35">string<pos:position pos:line="77" pos:column="41"/></name></name><argument_list pos:line="77" pos:column="41">(<argument><expr><name pos:line="77" pos:column="42">current_pos<pos:position pos:line="77" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="55">body_len<pos:position pos:line="77" pos:column="63"/></name></expr></argument>)<pos:position pos:line="77" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="78" pos:column="13">current_pos<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">+=<pos:position pos:line="78" pos:column="27"/></operator> <name pos:line="78" pos:column="28">body_len<pos:position pos:line="78" pos:column="36"/></name></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><call><name><name pos:line="79" pos:column="17">current_block<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">.<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="31">length<pos:position pos:line="79" pos:column="37"/></name></name><argument_list pos:line="79" pos:column="37">()<pos:position pos:line="79" pos:column="39"/></argument_list></call> <operator pos:line="79" pos:column="40">==<pos:position pos:line="79" pos:column="42"/></operator> <name pos:line="79" pos:column="43">body_size<pos:position pos:line="79" pos:column="52"/></name></expr>)<pos:position pos:line="79" pos:column="53"/></condition><then pos:line="79" pos:column="53"> <block pos:line="79" pos:column="54">{
                <expr_stmt><expr><name pos:line="80" pos:column="17">body<pos:position pos:line="80" pos:column="21"/></name> <operator pos:line="80" pos:column="22">=<pos:position pos:line="80" pos:column="23"/></operator> <name pos:line="80" pos:column="24">current_block<pos:position pos:line="80" pos:column="37"/></name></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><name pos:line="81" pos:column="17">state<pos:position pos:line="81" pos:column="22"/></name> <operator pos:line="81" pos:column="23">=<pos:position pos:line="81" pos:column="24"/></operator> <name pos:line="81" pos:column="25">END<pos:position pos:line="81" pos:column="28"/></name></expr>;<pos:position pos:line="81" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="82" pos:column="14"/></block></then></if>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><call><name><name pos:line="83" pos:column="17">current_block<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">.<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">length<pos:position pos:line="83" pos:column="37"/></name></name><argument_list pos:line="83" pos:column="37">()<pos:position pos:line="83" pos:column="39"/></argument_list></call> <operator pos:line="83" pos:column="40">&gt;<pos:position pos:line="83" pos:column="44"/></operator> <name pos:line="83" pos:column="42">body_size<pos:position pos:line="83" pos:column="51"/></name></expr>)<pos:position pos:line="83" pos:column="52"/></condition><then pos:line="83" pos:column="52"> <block pos:line="83" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="84" pos:column="17">clear<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">()<pos:position pos:line="84" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
                <return pos:line="85" pos:column="17">return <expr><name pos:line="85" pos:column="24">ERROR<pos:position pos:line="85" pos:column="29"/></name></expr>;<pos:position pos:line="85" pos:column="30"/></return>
            }<pos:position pos:line="86" pos:column="14"/></block></then></if>
            <break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break>
        }<pos:position pos:line="88" pos:column="10"/></block>
        <case pos:line="89" pos:column="9">case <expr><name pos:line="89" pos:column="14">END<pos:position pos:line="89" pos:column="17"/></name></expr>:<pos:position pos:line="89" pos:column="18"/></case> <block pos:line="89" pos:column="19">{
            <return pos:line="90" pos:column="13">return <expr><name pos:line="90" pos:column="20">OK<pos:position pos:line="90" pos:column="22"/></name></expr>;<pos:position pos:line="90" pos:column="23"/></return>
        }<pos:position pos:line="91" pos:column="10"/></block>
        }<pos:position pos:line="92" pos:column="10"/></block></switch>
    }<pos:position pos:line="93" pos:column="6"/></block></while>
    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><name pos:line="94" pos:column="9">state<pos:position pos:line="94" pos:column="14"/></name> <operator pos:line="94" pos:column="15">!=<pos:position pos:line="94" pos:column="17"/></operator> <name pos:line="94" pos:column="18">END<pos:position pos:line="94" pos:column="21"/></name></expr>)<pos:position pos:line="94" pos:column="22"/></condition><then pos:line="94" pos:column="22"> <block type="pseudo"><return pos:line="94" pos:column="23">return <expr><name pos:line="94" pos:column="30">INCOMPLETE<pos:position pos:line="94" pos:column="40"/></name></expr>;<pos:position pos:line="94" pos:column="41"/></return></block></then></if>
    <return pos:line="95" pos:column="5">return <expr><name pos:line="95" pos:column="12">OK<pos:position pos:line="95" pos:column="14"/></name></expr>;<pos:position pos:line="95" pos:column="15"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

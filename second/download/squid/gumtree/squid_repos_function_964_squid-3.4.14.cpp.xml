<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_964_squid-3.4.14.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">HttpMsgParseState<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">&amp;<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="20">operator<name pos:line="1" pos:column="28">++<pos:position pos:line="1" pos:column="30"/></name></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">HttpMsgParseState<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">&amp;<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="51">aState<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">tmp<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">)<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">aState<pos:position pos:line="3" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name pos:line="4" pos:column="5">aState<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">=<pos:position pos:line="4" pos:column="13"/></operator> <call pos:line="4" pos:column="14">(<name pos:line="4" pos:column="15">HttpMsgParseState<pos:position pos:line="4" pos:column="32"/></name>)<argument_list pos:line="4" pos:column="33">(<argument><expr><operator pos:line="4" pos:column="34">++<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">tmp<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">aState<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2446_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsAddNameserver<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">buf<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">A<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">A<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">buf<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">)<pos:position pos:line="6" pos:column="19"/></operator></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">78<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_CRITICAL<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"WARNING: rejecting '"<pos:position pos:line="7" pos:column="56"/></literal> <operator pos:line="7" pos:column="57">&lt;&lt;<pos:position pos:line="7" pos:column="65"/></operator> <name pos:line="7" pos:column="60">buf<pos:position pos:line="7" pos:column="63"/></name> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator> <literal type="string" pos:line="7" pos:column="67">"' as a name server, because it is not a numeric IP address"<pos:position pos:line="7" pos:column="127"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="129"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name><name pos:line="11" pos:column="9">A<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">isAnyAddr<pos:position pos:line="11" pos:column="20"/></name></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">78<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">DBG_CRITICAL<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"WARNING: Squid does not accept "<pos:position pos:line="12" pos:column="67"/></literal> <operator pos:line="12" pos:column="68">&lt;&lt;<pos:position pos:line="12" pos:column="76"/></operator> <name pos:line="12" pos:column="71">A<pos:position pos:line="12" pos:column="72"/></name> <operator pos:line="12" pos:column="73">&lt;&lt;<pos:position pos:line="12" pos:column="81"/></operator> <literal type="string" pos:line="12" pos:column="76">" in DNS server specifications."<pos:position pos:line="12" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="110"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">A<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">.<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">setLocalhost<pos:position pos:line="13" pos:column="23"/></name></name><argument_list pos:line="13" pos:column="23">()<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">78<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">DBG_CRITICAL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"Will be using "<pos:position pos:line="14" pos:column="50"/></literal> <operator pos:line="14" pos:column="51">&lt;&lt;<pos:position pos:line="14" pos:column="59"/></operator> <name pos:line="14" pos:column="54">A<pos:position pos:line="14" pos:column="55"/></name> <operator pos:line="14" pos:column="56">&lt;&lt;<pos:position pos:line="14" pos:column="64"/></operator> <literal type="string" pos:line="14" pos:column="59">" instead, assuming you meant that DNS is running on the same machine"<pos:position pos:line="14" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="131"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">Ip<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">::<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">EnableIpv6<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">&amp;&amp;<pos:position pos:line="17" pos:column="35"/></operator> <operator pos:line="17" pos:column="28">!<pos:position pos:line="17" pos:column="29"/></operator><call><name><name pos:line="17" pos:column="29">A<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">setIPv4<pos:position pos:line="17" pos:column="38"/></name></name><argument_list pos:line="17" pos:column="38">()<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">78<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">DBG_IMPORTANT<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"WARNING: IPv6 is disabled. Discarding "<pos:position pos:line="18" pos:column="75"/></literal> <operator pos:line="18" pos:column="76">&lt;&lt;<pos:position pos:line="18" pos:column="84"/></operator> <name pos:line="18" pos:column="79">A<pos:position pos:line="18" pos:column="80"/></name> <operator pos:line="18" pos:column="81">&lt;&lt;<pos:position pos:line="18" pos:column="89"/></operator> <literal type="string" pos:line="18" pos:column="84">" in DNS server specifications."<pos:position pos:line="18" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="118"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">nns<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">==<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">nns_alloc<pos:position pos:line="22" pos:column="25"/></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26"> <block pos:line="22" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">oldalloc<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><name pos:line="23" pos:column="24">nns_alloc<pos:position pos:line="23" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">ns<pos:position pos:line="24" pos:column="11"/></name> <modifier pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></modifier></type><name pos:line="24" pos:column="13">oldptr<pos:position pos:line="24" pos:column="19"/></name> <init pos:line="24" pos:column="20">= <expr><name pos:line="24" pos:column="22">nameservers<pos:position pos:line="24" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="34"/></decl_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">nns_alloc<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">==<pos:position pos:line="26" pos:column="25"/></operator> <literal type="number" pos:line="26" pos:column="26">0<pos:position pos:line="26" pos:column="27"/></literal></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="13">nns_alloc<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <literal type="number" pos:line="27" pos:column="25">2<pos:position pos:line="27" pos:column="26"/></literal></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt></block></then>
        <else pos:line="28" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">nns_alloc<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;&lt;=<pos:position pos:line="29" pos:column="32"/></operator> <literal type="number" pos:line="29" pos:column="27">1<pos:position pos:line="29" pos:column="28"/></literal></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name pos:line="31" pos:column="9">nameservers<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <operator pos:line="31" pos:column="23">(<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">ns<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></operator><operator pos:line="31" pos:column="28">)<pos:position pos:line="31" pos:column="29"/></operator><call><name pos:line="31" pos:column="29">xcalloc<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">nns_alloc<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="48">sizeof<argument_list pos:line="31" pos:column="54">(<argument><expr><operator pos:line="31" pos:column="55">*<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="56">nameservers<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">oldptr<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&amp;&amp;<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="23">oldalloc<pos:position pos:line="33" pos:column="31"/></name></expr>)<pos:position pos:line="33" pos:column="32"/></condition><then pos:line="33" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">memcpy<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">nameservers<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">oldptr<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">oldalloc<pos:position pos:line="34" pos:column="49"/></name> <operator pos:line="34" pos:column="50">*<pos:position pos:line="34" pos:column="51"/></operator> <sizeof pos:line="34" pos:column="52">sizeof<argument_list pos:line="34" pos:column="58">(<argument><expr><operator pos:line="34" pos:column="59">*<pos:position pos:line="34" pos:column="60"/></operator><name pos:line="34" pos:column="60">nameservers<pos:position pos:line="34" pos:column="71"/></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt></block></then></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">oldptr<pos:position pos:line="36" pos:column="19"/></name></expr>)<pos:position pos:line="36" pos:column="20"/></condition><then pos:line="36" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">safe_free<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">oldptr<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">assert<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">nns<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">&lt;<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="18">nns_alloc<pos:position pos:line="40" pos:column="27"/></name></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">A<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">.<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">port<pos:position pos:line="41" pos:column="11"/></name></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">NS_DEFAULTPORT<pos:position pos:line="41" pos:column="26"/></name></expr></argument>)<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">nameservers<pos:position pos:line="42" pos:column="16"/></name><index pos:line="42" pos:column="16">[<expr><name pos:line="42" pos:column="17">nns<pos:position pos:line="42" pos:column="20"/></name></expr>]<pos:position pos:line="42" pos:column="21"/></index></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">S<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">=<pos:position pos:line="42" pos:column="25"/></operator> <name pos:line="42" pos:column="26">A<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">WHEN_EDNS_RESPONSES_ARE_PARSED<pos:position pos:line="43" pos:column="35"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">nameservers<pos:position pos:line="44" pos:column="16"/></name><index pos:line="44" pos:column="16">[<expr><name pos:line="44" pos:column="17">nns<pos:position pos:line="44" pos:column="20"/></name></expr>]<pos:position pos:line="44" pos:column="21"/></index></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">last_seen_edns<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <name pos:line="44" pos:column="39">RFC1035_DEFAULT_PACKET_SZ<pos:position pos:line="44" pos:column="64"/></name></expr>;<pos:position pos:line="44" pos:column="65"/></expr_stmt>
    <comment type="line" pos:line="45" pos:column="5">// TODO generate a test packet to probe this NS from EDNS size and ability.</comment>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">debugs<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><literal type="number" pos:line="47" pos:column="12">78<pos:position pos:line="47" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="16">3<pos:position pos:line="47" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="19">"idnsAddNameserver: Added nameserver #"<pos:position pos:line="47" pos:column="58"/></literal> <operator pos:line="47" pos:column="59">&lt;&lt;<pos:position pos:line="47" pos:column="67"/></operator> <name pos:line="47" pos:column="62">nns<pos:position pos:line="47" pos:column="65"/></name> <operator pos:line="47" pos:column="66">&lt;&lt;<pos:position pos:line="47" pos:column="74"/></operator> <literal type="string" pos:line="47" pos:column="69">" ("<pos:position pos:line="47" pos:column="73"/></literal> <operator pos:line="47" pos:column="74">&lt;&lt;<pos:position pos:line="47" pos:column="82"/></operator> <name pos:line="47" pos:column="77">A<pos:position pos:line="47" pos:column="78"/></name> <operator pos:line="47" pos:column="79">&lt;&lt;<pos:position pos:line="47" pos:column="87"/></operator> <literal type="string" pos:line="47" pos:column="82">")"<pos:position pos:line="47" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="48" pos:column="5">++<pos:position pos:line="48" pos:column="7"/></operator><name pos:line="48" pos:column="7">nns<pos:position pos:line="48" pos:column="10"/></name></expr>;<pos:position pos:line="48" pos:column="11"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_520_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">free_node<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name><name pos:line="2" pos:column="11">struct<pos:position pos:line="2" pos:column="17"/></name> <name pos:line="2" pos:column="18">node<pos:position pos:line="2" pos:column="22"/></name></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">np<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">enum_list<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">ep<pos:position pos:line="4" pos:column="25"/></name></decl>, <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="28">tep<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">ep<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <name><name pos:line="6" pos:column="10">np<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">enums<pos:position pos:line="6" pos:column="19"/></name></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">ep<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition> <block pos:line="7" pos:column="16">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">tep<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">ep<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">ep<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name><name pos:line="9" pos:column="14">ep<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">next<pos:position pos:line="9" pos:column="22"/></name></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">xfree<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><operator pos:line="10" pos:column="15">(<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">char<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">)<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">tep<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">xfree<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">char<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><operator pos:line="12" pos:column="18">)<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">np<pos:position pos:line="12" pos:column="22"/></name></expr></argument>)<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

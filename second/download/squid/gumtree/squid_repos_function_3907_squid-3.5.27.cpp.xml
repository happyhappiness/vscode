<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3907_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">ServiceGroupPointer<pos:position pos:line="1" pos:column="32"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">FindGroup<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name><name pos:line="2" pos:column="29">ServiceGroup<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">Id<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">id<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">Groups<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">::<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">iterator<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">GI<pos:position pos:line="4" pos:column="32"/></name>;<pos:position pos:line="4" pos:column="33"/></typedef>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">GI<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><call><name pos:line="5" pos:column="17">AllGroups<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><call><name pos:line="5" pos:column="29">begin<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">()<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></init> <condition><expr><name pos:line="5" pos:column="38">i<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">!=<pos:position pos:line="5" pos:column="42"/></operator> <call><name pos:line="5" pos:column="43">AllGroups<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">()<pos:position pos:line="5" pos:column="54"/></argument_list></call><operator pos:line="5" pos:column="54">.<pos:position pos:line="5" pos:column="55"/></operator><call><name pos:line="5" pos:column="55">end<pos:position pos:line="5" pos:column="58"/></name><argument_list pos:line="5" pos:column="58">()<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></condition> <incr><expr><operator pos:line="5" pos:column="62">++<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">i<pos:position pos:line="5" pos:column="65"/></name></expr></incr>)<pos:position pos:line="5" pos:column="66"/></control> <block pos:line="5" pos:column="67">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">)<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">id<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">==<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">id<pos:position pos:line="6" pos:column="27"/></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
            <block type="pseudo"><return pos:line="7" pos:column="13">return <expr><operator pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name></expr>;<pos:position pos:line="7" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="8" pos:column="6"/></block></for>

    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

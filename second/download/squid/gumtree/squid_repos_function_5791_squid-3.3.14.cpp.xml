<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5791_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ip<pos:position pos:line="1" pos:column="3"/></name><operator pos:line="1" pos:column="3">::<pos:position pos:line="1" pos:column="5"/></operator><name pos:line="1" pos:column="5">Address<pos:position pos:line="1" pos:column="12"/></name></name></type>
<name pos:line="2" pos:column="1">networkFromInaddr<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">Ip<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">Address<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">&amp;<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="38">in<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">out<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">out<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">=<pos:position pos:line="6" pos:column="10"/></operator> <name pos:line="6" pos:column="11">in<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* in IPv6 the 'network' should be the routing section. */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">( <expr><call><name><name pos:line="9" pos:column="10">in<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">.<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">IsIPv6<pos:position pos:line="9" pos:column="19"/></name></name><argument_list pos:line="9" pos:column="19">()<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr> )<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">out<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">ApplyMask<pos:position pos:line="10" pos:column="22"/></name></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="number" pos:line="10" pos:column="23">64<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">AF_INET6<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">14<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">5<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"networkFromInaddr : Masked IPv6 Address to "<pos:position pos:line="11" pos:column="68"/></literal> <operator pos:line="11" pos:column="69">&lt;&lt;<pos:position pos:line="11" pos:column="77"/></operator> <name pos:line="11" pos:column="72">in<pos:position pos:line="11" pos:column="74"/></name> <operator pos:line="11" pos:column="75">&lt;&lt;<pos:position pos:line="11" pos:column="83"/></operator> <literal type="string" pos:line="11" pos:column="78">"/64 routing part."<pos:position pos:line="11" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="99"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">out<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_CLASSFUL<pos:position pos:line="15" pos:column="17"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">in_addr<pos:position pos:line="16" pos:column="19"/></name></name></type> <name pos:line="16" pos:column="20">b<pos:position pos:line="16" pos:column="21"/></name></decl>;<pos:position pos:line="16" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">in<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">.<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">GetInAddr<pos:position pos:line="18" pos:column="17"/></name></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">b<pos:position pos:line="18" pos:column="19"/></name></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">IN_CLASSC<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name><name pos:line="20" pos:column="19">b<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">.<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">s_addr<pos:position pos:line="20" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="9">b<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">.<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">s_addr<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">&amp;=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="21">IN_CLASSC_NET<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></then>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><call><name pos:line="22" pos:column="14">IN_CLASSB<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name><name pos:line="22" pos:column="24">b<pos:position pos:line="22" pos:column="25"/></name><operator pos:line="22" pos:column="25">.<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">s_addr<pos:position pos:line="22" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="9">b<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">.<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">s_addr<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">&amp;=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="21">IN_CLASSB_NET<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><call><name pos:line="24" pos:column="14">IN_CLASSA<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name><name pos:line="24" pos:column="24">b<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">.<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">s_addr<pos:position pos:line="24" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="25" pos:column="9">b<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">.<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">s_addr<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">&amp;=<pos:position pos:line="25" pos:column="24"/></operator> <name pos:line="25" pos:column="21">IN_CLASSA_NET<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">out<pos:position pos:line="27" pos:column="8"/></name> <operator pos:line="27" pos:column="9">=<pos:position pos:line="27" pos:column="10"/></operator> <name pos:line="27" pos:column="11">b<pos:position pos:line="27" pos:column="12"/></name></expr>;<pos:position pos:line="27" pos:column="13"/></expr_stmt>

<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">debugs<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="number" pos:line="31" pos:column="12">14<pos:position pos:line="31" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="16">5<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="19">"networkFromInaddr : Masked IPv4 Address to "<pos:position pos:line="31" pos:column="64"/></literal> <operator pos:line="31" pos:column="65">&lt;&lt;<pos:position pos:line="31" pos:column="73"/></operator> <name pos:line="31" pos:column="68">out<pos:position pos:line="31" pos:column="71"/></name> <operator pos:line="31" pos:column="72">&lt;&lt;<pos:position pos:line="31" pos:column="80"/></operator> <literal type="string" pos:line="31" pos:column="75">"/24."<pos:position pos:line="31" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="83"/></expr_stmt>

    <comment type="block" pos:line="33" pos:column="5">/* use /24 for everything under IPv4 */</comment>
    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">out<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">.<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">ApplyMask<pos:position pos:line="34" pos:column="18"/></name></name><argument_list pos:line="34" pos:column="18">(<argument><expr><literal type="number" pos:line="34" pos:column="19">24<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">AF_INET<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debugs<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="number" pos:line="35" pos:column="12">14<pos:position pos:line="35" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">5<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"networkFromInaddr : Masked IPv4 Address to "<pos:position pos:line="35" pos:column="64"/></literal> <operator pos:line="35" pos:column="65">&lt;&lt;<pos:position pos:line="35" pos:column="73"/></operator> <name pos:line="35" pos:column="68">in<pos:position pos:line="35" pos:column="70"/></name> <operator pos:line="35" pos:column="71">&lt;&lt;<pos:position pos:line="35" pos:column="79"/></operator> <literal type="string" pos:line="35" pos:column="74">"/24."<pos:position pos:line="35" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="82"/></expr_stmt>

    <return pos:line="37" pos:column="5">return <expr><name pos:line="37" pos:column="12">out<pos:position pos:line="37" pos:column="15"/></name></expr>;<pos:position pos:line="37" pos:column="16"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

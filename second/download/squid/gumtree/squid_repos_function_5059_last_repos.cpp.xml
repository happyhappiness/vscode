<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5059_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">HeaderUpdater<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">noteDoneWriting<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">errflag<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">errflag<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">&lt;&lt;<pos:position pos:line="4" pos:column="35"/></operator> <literal type="string" pos:line="4" pos:column="30">" reader="<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="44">reader<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><operator pos:line="5" pos:column="10">!<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">errflag<pos:position pos:line="5" pos:column="18"/></name></expr></argument>)<pos:position pos:line="5" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><operator pos:line="6" pos:column="10">!<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">reader<pos:position pos:line="6" pos:column="17"/></name></expr></argument>)<pos:position pos:line="6" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt> <comment type="line" pos:line="6" pos:column="20">// if we wrote everything, then we must have read everything</comment>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">writer<pos:position pos:line="8" pos:column="16"/></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">IoState<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">&amp;<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="14">rockWriter<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><cast type="dynamic" pos:line="9" pos:column="27">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="39">&lt;<argument><expr><name pos:line="9" pos:column="40">IoState<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">&amp;<pos:position pos:line="9" pos:column="52"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="52"/></argument_list><argument_list pos:line="9" pos:column="49">(<argument><expr><operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="51">writer<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">update<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">fresh<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">splicingPoint<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="34">rockWriter<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">.<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">splicingPoint<pos:position pos:line="10" pos:column="58"/></name></name></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">47<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"fresh chain ends at "<pos:position pos:line="11" pos:column="41"/></literal> <operator pos:line="11" pos:column="42">&lt;&lt;<pos:position pos:line="11" pos:column="50"/></operator> <name><name pos:line="11" pos:column="45">update<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">.<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="52">fresh<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">.<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="58">splicingPoint<pos:position pos:line="11" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">store<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">map<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">closeForUpdating<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">update<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">rockWriter<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">writeableAnchor_<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">=<pos:position pos:line="13" pos:column="34"/></operator> <literal type="null" pos:line="13" pos:column="35">nullptr<pos:position pos:line="13" pos:column="42"/></literal></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">writer<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="null" pos:line="14" pos:column="14">nullptr<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt> <comment type="line" pos:line="14" pos:column="23">// we are done writing</comment>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">Must<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><call><name pos:line="16" pos:column="10">doneAll<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">()<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

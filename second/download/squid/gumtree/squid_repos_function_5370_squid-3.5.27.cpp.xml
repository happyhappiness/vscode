<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5370_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Client<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">resumeBodyStorage<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">abortOnBadEntry<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><literal type="string" pos:line="4" pos:column="25">"store entry aborted while kick producer callback"<pos:position pos:line="4" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="77"/></condition><then pos:line="4" pos:column="77">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">adaptedBodySource<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">handleMoreAdaptedBodyAvailable<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">()<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">adaptedBodySource<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">&amp;&amp;<pos:position pos:line="12" pos:column="45"/></operator> <call><name><name pos:line="12" pos:column="38">adaptedBodySource<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">exhausted<pos:position pos:line="12" pos:column="66"/></name></name><argument_list pos:line="12" pos:column="66">()<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="69"/></condition><then pos:line="12" pos:column="69">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">endAdaptedBodyConsumption<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt></block></then></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2412_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">negotiateSSL<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">fd<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FwdServer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">fs<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">servers<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ssl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name><name pos:line="5" pos:column="16">fd_table<pos:position pos:line="5" pos:column="24"/></name><index pos:line="5" pos:column="24">[<expr><name pos:line="5" pos:column="25">fd<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">ssl<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">ret<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">SSL_connect<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">ssl<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="34">&lt;=<pos:position pos:line="8" pos:column="39"/></operator> <literal type="number" pos:line="8" pos:column="37">0<pos:position pos:line="8" pos:column="38"/></literal></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">ssl_error<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><call><name pos:line="9" pos:column="25">SSL_get_error<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">ssl<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">ret<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>

        <switch pos:line="11" pos:column="9">switch <condition pos:line="11" pos:column="16">(<expr><name pos:line="11" pos:column="17">ssl_error<pos:position pos:line="11" pos:column="26"/></name></expr>)<pos:position pos:line="11" pos:column="27"/></condition> <block pos:line="11" pos:column="28">{

        <case pos:line="13" pos:column="9">case <expr><name pos:line="13" pos:column="14">SSL_ERROR_WANT_READ<pos:position pos:line="13" pos:column="33"/></name></expr>:<pos:position pos:line="13" pos:column="34"/></case>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">commSetSelect<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">fd<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">COMM_SELECT_READ<pos:position pos:line="14" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="49">fwdNegotiateSSLWrapper<pos:position pos:line="14" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="73">this<pos:position pos:line="14" pos:column="77"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="79">0<pos:position pos:line="14" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="82"/></expr_stmt>
            <return pos:line="15" pos:column="13">return;<pos:position pos:line="15" pos:column="20"/></return>

        <case pos:line="17" pos:column="9">case <expr><name pos:line="17" pos:column="14">SSL_ERROR_WANT_WRITE<pos:position pos:line="17" pos:column="34"/></name></expr>:<pos:position pos:line="17" pos:column="35"/></case>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">commSetSelect<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">fd<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">COMM_SELECT_WRITE<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">fwdNegotiateSSLWrapper<pos:position pos:line="18" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="74">this<pos:position pos:line="18" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="80">0<pos:position pos:line="18" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="83"/></expr_stmt>
            <return pos:line="19" pos:column="13">return;<pos:position pos:line="19" pos:column="20"/></return>

        <default pos:line="21" pos:column="9">default:<pos:position pos:line="21" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">81<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"fwdNegotiateSSL: Error negotiating SSL connection on FD "<pos:position pos:line="22" pos:column="85"/></literal> <operator pos:line="22" pos:column="86">&lt;&lt;<pos:position pos:line="22" pos:column="94"/></operator> <name pos:line="22" pos:column="89">fd<pos:position pos:line="22" pos:column="91"/></name> <operator pos:line="22" pos:column="92">&lt;&lt;<pos:position pos:line="22" pos:column="100"/></operator>
                   <literal type="string" pos:line="23" pos:column="20">": "<pos:position pos:line="23" pos:column="24"/></literal> <operator pos:line="23" pos:column="25">&lt;&lt;<pos:position pos:line="23" pos:column="33"/></operator> <call><name pos:line="23" pos:column="28">ERR_error_string<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><call><name pos:line="23" pos:column="45">ERR_get_error<pos:position pos:line="23" pos:column="58"/></name><argument_list pos:line="23" pos:column="58">()<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="23" pos:column="62">NULL<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call> <operator pos:line="23" pos:column="68">&lt;&lt;<pos:position pos:line="23" pos:column="76"/></operator> <literal type="string" pos:line="23" pos:column="71">" ("<pos:position pos:line="23" pos:column="75"/></literal> <operator pos:line="23" pos:column="76">&lt;&lt;<pos:position pos:line="23" pos:column="84"/></operator> <name pos:line="23" pos:column="79">ssl_error<pos:position pos:line="23" pos:column="88"/></name> <operator pos:line="23" pos:column="89">&lt;&lt;<pos:position pos:line="23" pos:column="97"/></operator>
                   <literal type="string" pos:line="24" pos:column="20">"/"<pos:position pos:line="24" pos:column="23"/></literal> <operator pos:line="24" pos:column="24">&lt;&lt;<pos:position pos:line="24" pos:column="32"/></operator> <name pos:line="24" pos:column="27">ret<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">&lt;&lt;<pos:position pos:line="24" pos:column="39"/></operator> <literal type="string" pos:line="24" pos:column="34">"/"<pos:position pos:line="24" pos:column="37"/></literal> <operator pos:line="24" pos:column="38">&lt;&lt;<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="41">errno<pos:position pos:line="24" pos:column="46"/></name> <operator pos:line="24" pos:column="47">&lt;&lt;<pos:position pos:line="24" pos:column="55"/></operator> <literal type="string" pos:line="24" pos:column="50">")"<pos:position pos:line="24" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">ErrorState<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier><specifier pos:line="25" pos:column="25">const<pos:position pos:line="25" pos:column="30"/></specifier></type> <name pos:line="25" pos:column="31">anErr<pos:position pos:line="25" pos:column="36"/></name> <init pos:line="25" pos:column="37">= <expr><call><name pos:line="25" pos:column="39">makeConnectingError<pos:position pos:line="25" pos:column="58"/></name><argument_list pos:line="25" pos:column="58">(<argument><expr><name pos:line="25" pos:column="59">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="25" pos:column="82"/></name></expr></argument>)<pos:position pos:line="25" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="84"/></decl_stmt>
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">EPROTO<pos:position pos:line="26" pos:column="14"/></name></cpp:ifdef>

            <expr_stmt><expr><name><name pos:line="28" pos:column="13">anErr<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">xerrno<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">EPROTO<pos:position pos:line="28" pos:column="35"/></name></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>

            <expr_stmt><expr><name><name pos:line="31" pos:column="13">anErr<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">xerrno<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">=<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">EACCES<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>

            <decl_stmt><decl><type><name><name pos:line="34" pos:column="13">Ssl<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">::<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">ErrorDetail<pos:position pos:line="34" pos:column="29"/></name></name> <modifier pos:line="34" pos:column="30">*<pos:position pos:line="34" pos:column="31"/></modifier></type><name pos:line="34" pos:column="31">errFromFailure<pos:position pos:line="34" pos:column="45"/></name> <init pos:line="34" pos:column="46">= <expr><operator pos:line="34" pos:column="48">(<pos:position pos:line="34" pos:column="49"/></operator><name><name pos:line="34" pos:column="49">Ssl<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">::<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="54">ErrorDetail<pos:position pos:line="34" pos:column="65"/></name></name> <operator pos:line="34" pos:column="66">*<pos:position pos:line="34" pos:column="67"/></operator><operator pos:line="34" pos:column="67">)<pos:position pos:line="34" pos:column="68"/></operator><call><name pos:line="34" pos:column="68">SSL_get_ex_data<pos:position pos:line="34" pos:column="83"/></name><argument_list pos:line="34" pos:column="83">(<argument><expr><name pos:line="34" pos:column="84">ssl<pos:position pos:line="34" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="89">ssl_ex_index_ssl_error_detail<pos:position pos:line="34" pos:column="118"/></name></expr></argument>)<pos:position pos:line="34" pos:column="119"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="120"/></decl_stmt>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">errFromFailure<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">!=<pos:position pos:line="35" pos:column="34"/></operator> <name pos:line="35" pos:column="35">NULL<pos:position pos:line="35" pos:column="39"/></name></expr>)<pos:position pos:line="35" pos:column="40"/></condition><then pos:line="35" pos:column="40"> <block pos:line="35" pos:column="41">{
                <comment type="line" pos:line="36" pos:column="17">// The errFromFailure is attached to the ssl object</comment>
                <comment type="line" pos:line="37" pos:column="17">// and will be released when ssl object destroyed.</comment>
                <comment type="line" pos:line="38" pos:column="17">// Copy errFromFailure to a new Ssl::ErrorDetail object</comment>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">anErr<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">detail<pos:position pos:line="39" pos:column="30"/></name></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <operator pos:line="39" pos:column="33">new<pos:position pos:line="39" pos:column="36"/></operator> <call><name><name pos:line="39" pos:column="37">Ssl<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">::<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">ErrorDetail<pos:position pos:line="39" pos:column="53"/></name></name><argument_list pos:line="39" pos:column="53">(<argument><expr><operator pos:line="39" pos:column="54">*<pos:position pos:line="39" pos:column="55"/></operator><name pos:line="39" pos:column="55">errFromFailure<pos:position pos:line="39" pos:column="69"/></name></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="42" pos:column="13">fail<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">anErr<pos:position pos:line="42" pos:column="23"/></name></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>

            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">fs<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">_peer<pos:position pos:line="44" pos:column="26"/></name></name></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27"> <block pos:line="44" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">peerConnectFailed<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name><name pos:line="45" pos:column="35">fs<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">_peer<pos:position pos:line="45" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="46" pos:column="17">fs<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">_peer<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">-&gt;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="28">stats<pos:position pos:line="46" pos:column="33"/></name><operator pos:line="46" pos:column="33">.<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="34">conn_open<pos:position pos:line="46" pos:column="43"/></name></name><operator pos:line="46" pos:column="43">--<pos:position pos:line="46" pos:column="45"/></operator></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="49" pos:column="13">comm_close<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">fd<pos:position pos:line="49" pos:column="26"/></name></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
            <return pos:line="50" pos:column="13">return;<pos:position pos:line="50" pos:column="20"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></switch>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name><name pos:line="54" pos:column="9">fs<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">_peer<pos:position pos:line="54" pos:column="18"/></name></name> <operator pos:line="54" pos:column="19">&amp;&amp;<pos:position pos:line="54" pos:column="29"/></operator> <operator pos:line="54" pos:column="22">!<pos:position pos:line="54" pos:column="23"/></operator><call><name pos:line="54" pos:column="23">SSL_session_reused<pos:position pos:line="54" pos:column="41"/></name><argument_list pos:line="54" pos:column="41">(<argument><expr><name pos:line="54" pos:column="42">ssl<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="54" pos:column="47"/></condition><then pos:line="54" pos:column="47"> <block pos:line="54" pos:column="48">{
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">fs<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">-&gt;<pos:position pos:line="55" pos:column="20"/></operator><name pos:line="55" pos:column="17">_peer<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">sslSession<pos:position pos:line="55" pos:column="34"/></name></name></expr>)<pos:position pos:line="55" pos:column="35"/></condition><then pos:line="55" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="13">SSL_SESSION_free<pos:position pos:line="56" pos:column="29"/></name><argument_list pos:line="56" pos:column="29">(<argument><expr><name><name pos:line="56" pos:column="30">fs<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">-&gt;<pos:position pos:line="56" pos:column="37"/></operator><name pos:line="56" pos:column="34">_peer<pos:position pos:line="56" pos:column="39"/></name><operator pos:line="56" pos:column="39">-&gt;<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="41">sslSession<pos:position pos:line="56" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="58" pos:column="9">fs<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">-&gt;<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="13">_peer<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">sslSession<pos:position pos:line="58" pos:column="30"/></name></name> <operator pos:line="58" pos:column="31">=<pos:position pos:line="58" pos:column="32"/></operator> <call><name pos:line="58" pos:column="33">SSL_get1_session<pos:position pos:line="58" pos:column="49"/></name><argument_list pos:line="58" pos:column="49">(<argument><expr><name pos:line="58" pos:column="50">ssl<pos:position pos:line="58" pos:column="53"/></name></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">dispatch<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">()<pos:position pos:line="61" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="16"/></expr_stmt>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

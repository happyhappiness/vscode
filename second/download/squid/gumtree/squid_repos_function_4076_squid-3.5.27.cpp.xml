<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4076_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">terminateMaster<pos:position pos:line="2" pos:column="46"/></name></name><parameter_list pos:line="2" pos:column="46">()<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">theMaster<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">AdapterXaction<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">x<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">theMaster<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">theMaster<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">reset<pos:position pos:line="6" pos:column="24"/></name></name><argument_list pos:line="6" pos:column="24">()<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">x<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">stop<pos:position pos:line="7" pos:column="16"/></name></name><argument_list pos:line="7" pos:column="16">()<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

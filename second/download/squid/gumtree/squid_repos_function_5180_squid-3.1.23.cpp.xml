<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5180_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DiskdFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">writeDone<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">diomsg<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">M<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">statCounter<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">syscalls<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">disk<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">writes<pos:position pos:line="4" pos:column="37"/></name></name><operator pos:line="4" pos:column="37">++<pos:position pos:line="4" pos:column="39"/></operator></expr>;<pos:position pos:line="4" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">79<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"storeDiskdWriteDone: status "<pos:position pos:line="5" pos:column="49"/></literal> <operator pos:line="5" pos:column="50">&lt;&lt;<pos:position pos:line="5" pos:column="58"/></operator> <name><name pos:line="5" pos:column="53">M<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">-&gt;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="56">status<pos:position pos:line="5" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><name><name pos:line="6" pos:column="13">M<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">requestor<pos:position pos:line="6" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">WriteRequest<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">::<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">Pointer<pos:position pos:line="7" pos:column="26"/></name></name></type> <name pos:line="7" pos:column="27">writeRequest<pos:position pos:line="7" pos:column="39"/></name> <init pos:line="7" pos:column="40">= <expr><cast type="dynamic" pos:line="7" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="7" pos:column="54">&lt;<argument><expr><name pos:line="7" pos:column="55">WriteRequest<pos:position pos:line="7" pos:column="67"/></name> <operator pos:line="7" pos:column="68">*<pos:position pos:line="7" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="73"/></argument_list><argument_list pos:line="7" pos:column="70">(<argument><expr><name><name pos:line="7" pos:column="71">M<pos:position pos:line="7" pos:column="72"/></name><operator pos:line="7" pos:column="72">-&gt;<pos:position pos:line="7" pos:column="77"/></operator><name pos:line="7" pos:column="74">requestor<pos:position pos:line="7" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="85"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* remove the free protection */</comment>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">writeRequest<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">RefCountDereference<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">M<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">status<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">&lt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">errorOccured<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">=<pos:position pos:line="12" pos:column="23"/></operator> <literal type="boolean" pos:line="12" pos:column="24">true<pos:position pos:line="12" pos:column="28"/></literal></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">diskd_stats<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">write<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">fail<pos:position pos:line="13" pos:column="31"/></name></name><operator pos:line="13" pos:column="31">++<pos:position pos:line="13" pos:column="33"/></operator></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">ioCompleted<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">()<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">ioRequestor<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">writeCompleted<pos:position pos:line="15" pos:column="36"/></name></name> <argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">DISK_ERROR<pos:position pos:line="15" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">writeRequest<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">diskd_stats<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">.<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">write<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">success<pos:position pos:line="19" pos:column="30"/></name></name><operator pos:line="19" pos:column="30">++<pos:position pos:line="19" pos:column="32"/></operator></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ioCompleted<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">()<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">ioRequestor<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">writeCompleted<pos:position pos:line="21" pos:column="32"/></name></name> <argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">DISK_OK<pos:position pos:line="21" pos:column="41"/></name></expr></argument>,<argument><expr><name><name pos:line="21" pos:column="42">M<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">status<pos:position pos:line="21" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">writeRequest<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1894_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StatHist<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">count<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">double<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">v<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">bins<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <comment type="line" pos:line="4" pos:column="21">//do not count before initialization or after destruction</comment>
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">unsigned<pos:position pos:line="6" pos:column="19"/></name> <name pos:line="6" pos:column="20">int<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">bin<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><call><name pos:line="6" pos:column="30">findBin<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">v<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="7" pos:column="5">++<pos:position pos:line="7" pos:column="7"/></operator><name><name pos:line="7" pos:column="7">bins<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">bin<pos:position pos:line="7" pos:column="15"/></name></expr>]<pos:position pos:line="7" pos:column="16"/></index></name></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4628_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">aclDestroyRegexList<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">RegexList<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">data<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RegexList<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">next<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init pos:line="6" pos:column="10">;<pos:position pos:line="6" pos:column="11"/></init> <condition><expr><name pos:line="6" pos:column="12">data<pos:position pos:line="6" pos:column="16"/></name></expr>;<pos:position pos:line="6" pos:column="17"/></condition> <incr><expr><name pos:line="6" pos:column="18">data<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">next<pos:position pos:line="6" pos:column="29"/></name></expr></incr>)<pos:position pos:line="6" pos:column="30"/></control> <block pos:line="6" pos:column="31">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">next<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <name><name pos:line="7" pos:column="16">data<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">next<pos:position pos:line="7" pos:column="26"/></name></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">regfree<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><operator pos:line="8" pos:column="17">&amp;<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="18">data<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">regex<pos:position pos:line="8" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">safe_free<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name><name pos:line="9" pos:column="19">data<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">pattern<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">memFree<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">data<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">MEM_RELIST<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4928_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">dumpEntry<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">StoreEntry<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">&amp;<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="44">e<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list> <specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="16">DBG_CRITICAL<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="30">HERE<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">&lt;&lt;<pos:position pos:line="4" pos:column="43"/></operator> <literal type="string" pos:line="4" pos:column="38">"FILENO "<pos:position pos:line="4" pos:column="47"/></literal><operator pos:line="4" pos:column="47">&lt;&lt;<pos:position pos:line="4" pos:column="55"/></operator> <call><name><name pos:line="4" pos:column="50">std<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">::<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">setfill<pos:position pos:line="4" pos:column="62"/></name></name><argument_list pos:line="4" pos:column="62">(<argument><expr><literal type="char" pos:line="4" pos:column="63">'0'<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call> <operator pos:line="4" pos:column="68">&lt;&lt;<pos:position pos:line="4" pos:column="76"/></operator> <name><name pos:line="4" pos:column="71">std<pos:position pos:line="4" pos:column="74"/></name><operator pos:line="4" pos:column="74">::<pos:position pos:line="4" pos:column="76"/></operator><name pos:line="4" pos:column="76">hex<pos:position pos:line="4" pos:column="79"/></name></name> <operator pos:line="4" pos:column="80">&lt;&lt;<pos:position pos:line="4" pos:column="88"/></operator> <name><name pos:line="4" pos:column="83">std<pos:position pos:line="4" pos:column="86"/></name><operator pos:line="4" pos:column="86">::<pos:position pos:line="4" pos:column="88"/></operator><name pos:line="4" pos:column="88">uppercase<pos:position pos:line="4" pos:column="97"/></name></name> <operator pos:line="4" pos:column="98">&lt;&lt;<pos:position pos:line="4" pos:column="106"/></operator> <call><name><name pos:line="4" pos:column="101">std<pos:position pos:line="4" pos:column="104"/></name><operator pos:line="4" pos:column="104">::<pos:position pos:line="4" pos:column="106"/></operator><name pos:line="4" pos:column="106">setw<pos:position pos:line="4" pos:column="110"/></name></name><argument_list pos:line="4" pos:column="110">(<argument><expr><literal type="number" pos:line="4" pos:column="111">8<pos:position pos:line="4" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="113"/></argument_list></call> <operator pos:line="4" pos:column="114">&lt;&lt;<pos:position pos:line="4" pos:column="122"/></operator> <name><name pos:line="4" pos:column="117">e<pos:position pos:line="4" pos:column="118"/></name><operator pos:line="4" pos:column="118">.<pos:position pos:line="4" pos:column="119"/></operator><name pos:line="4" pos:column="119">swap_filen<pos:position pos:line="4" pos:column="129"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="131"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">47<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="16">DBG_CRITICAL<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">HERE<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">&lt;&lt;<pos:position pos:line="5" pos:column="43"/></operator> <literal type="string" pos:line="5" pos:column="38">"PATH "<pos:position pos:line="5" pos:column="45"/></literal> <operator pos:line="5" pos:column="46">&lt;&lt;<pos:position pos:line="5" pos:column="54"/></operator> <call><name pos:line="5" pos:column="49">fullPath<pos:position pos:line="5" pos:column="57"/></name><argument_list pos:line="5" pos:column="57">(<argument><expr><name><name pos:line="5" pos:column="58">e<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">.<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="60">swap_filen<pos:position pos:line="5" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="72">NULL<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr></argument>   )<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">e<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">.<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">dump<pos:position pos:line="6" pos:column="11"/></name></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3040_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">StoreEntry<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">storeCreateEntry<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">url<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">log_url<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">RequestFlags<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">&amp;<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="76">flags<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="83">const<pos:position pos:line="2" pos:column="88"/></specifier> <name pos:line="2" pos:column="89">HttpRequestMethod<pos:position pos:line="2" pos:column="106"/></name><modifier pos:line="2" pos:column="106">&amp;<pos:position pos:line="2" pos:column="111"/></modifier></type> <name pos:line="2" pos:column="108">method<pos:position pos:line="2" pos:column="114"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="115"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">MemObject<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">mem<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">20<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"storeCreateEntry: '"<pos:position pos:line="6" pos:column="40"/></literal> <operator pos:line="6" pos:column="41">&lt;&lt;<pos:position pos:line="6" pos:column="49"/></operator> <name pos:line="6" pos:column="44">url<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">&lt;&lt;<pos:position pos:line="6" pos:column="56"/></operator> <literal type="string" pos:line="6" pos:column="51">"'"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">e<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <operator pos:line="8" pos:column="9">new<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">StoreEntry<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">url<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="29">log_url<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">e<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">lock_count<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">1<pos:position pos:line="9" pos:column="22"/></literal></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>          <comment type="block" pos:line="9" pos:column="33">/* Note lock here w/o calling storeLock() */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">mem<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <name><name pos:line="10" pos:column="11">e<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">mem_obj<pos:position pos:line="10" pos:column="21"/></name></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">mem<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">-&gt;<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="10">method<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">method<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">neighbors_do_private_keys<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">||<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="38">!<pos:position pos:line="13" pos:column="39"/></operator><name><name pos:line="13" pos:column="39">flags<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">hierarchical<pos:position pos:line="13" pos:column="57"/></name></name></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="9">e<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">setPrivateKey<pos:position pos:line="14" pos:column="25"/></name></name><argument_list pos:line="14" pos:column="25">()<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt></block></then>
    <else pos:line="15" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="16" pos:column="9">e<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">setPublicKey<pos:position pos:line="16" pos:column="24"/></name></name><argument_list pos:line="16" pos:column="24">()<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt></block></else></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">flags<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">cachable<pos:position pos:line="18" pos:column="23"/></name></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24"> <block pos:line="18" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">EBIT_SET<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">e<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">flags<pos:position pos:line="19" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">ENTRY_CACHABLE<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">EBIT_CLR<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name><name pos:line="20" pos:column="18">e<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">flags<pos:position pos:line="20" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="28">RELEASE_REQUEST<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
        <comment type="block" pos:line="22" pos:column="9">/* StoreEntry::releaseRequest() clears ENTRY_CACHABLE */</comment>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">e<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">releaseRequest<pos:position pos:line="23" pos:column="26"/></name></name><argument_list pos:line="23" pos:column="26">()<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">e<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">store_status<pos:position pos:line="26" pos:column="20"/></name></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name pos:line="26" pos:column="23">STORE_PENDING<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">e<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">setMemStatus<pos:position pos:line="27" pos:column="20"/></name></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">NOT_IN_MEMORY<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">e<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">refcount<pos:position pos:line="28" pos:column="16"/></name></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">e<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">lastref<pos:position pos:line="29" pos:column="15"/></name></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">squid_curtime<pos:position pos:line="29" pos:column="31"/></name></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">e<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">timestamp<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <operator pos:line="30" pos:column="20">-<pos:position pos:line="30" pos:column="21"/></operator><literal type="number" pos:line="30" pos:column="21">1<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>          <comment type="block" pos:line="30" pos:column="33">/* set in StoreEntry::timestampsSet() */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">e<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">ping_status<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">PING_NONE<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">EBIT_SET<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name><name pos:line="32" pos:column="14">e<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">flags<pos:position pos:line="32" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">ENTRY_VALIDATED<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">e<pos:position pos:line="33" pos:column="13"/></name></expr>;<pos:position pos:line="33" pos:column="14"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4680_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write<pos:position pos:line="1" pos:column="11"/></name><parameter_list pos:line="1" pos:column="11">(<parameter><decl><type><name pos:line="1" pos:column="12">MemBuf<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">mb<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list> <block pos:line="1" pos:column="24">{
        <typedef pos:line="2" pos:column="9">typedef <type><name><name pos:line="2" pos:column="17">CommCbMemFunT<pos:position pos:line="2" pos:column="30"/></name><argument_list type="generic" pos:line="2" pos:column="30">&lt;<argument><expr><name pos:line="2" pos:column="31">Server<pos:position pos:line="2" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="39">CommIoCbParams<pos:position pos:line="2" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="57"/></argument_list></name></type> <name pos:line="2" pos:column="55">Dialer<pos:position pos:line="2" pos:column="61"/></name>;<pos:position pos:line="2" pos:column="62"/></typedef>
        <expr_stmt><expr><name pos:line="3" pos:column="9">writer<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">=<pos:position pos:line="3" pos:column="17"/></operator> <call><name pos:line="3" pos:column="18">JobCallback<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><literal type="number" pos:line="3" pos:column="30">33<pos:position pos:line="3" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="34">5<pos:position pos:line="3" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="37">Dialer<pos:position pos:line="3" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="45">this<pos:position pos:line="3" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="3" pos:column="51">Server<pos:position pos:line="3" pos:column="57"/></name><operator pos:line="3" pos:column="57">::<pos:position pos:line="3" pos:column="59"/></operator><name pos:line="3" pos:column="59">clientWriteDone<pos:position pos:line="3" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="4" pos:column="9">Comm<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">Write<pos:position pos:line="4" pos:column="20"/></name></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">clientConnection<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">mb<pos:position pos:line="4" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="43">writer<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="5" pos:column="6"/></block></function></unit>

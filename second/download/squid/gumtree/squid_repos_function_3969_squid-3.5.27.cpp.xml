<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3969_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">finalize<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">onoff<pos:position pos:line="4" pos:column="15"/></name></expr>)<pos:position pos:line="4" pos:column="16"/></condition><then pos:line="4" pos:column="16"> <block pos:line="4" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">clear<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">()<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// create service reps from service configs</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">created<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>

    <typedef pos:line="12" pos:column="5">typedef <type><name><name pos:line="12" pos:column="13">ServiceConfigs<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">::<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">const_iterator<pos:position pos:line="12" pos:column="43"/></name></name></type> <name pos:line="12" pos:column="44">VISCI<pos:position pos:line="12" pos:column="49"/></name>;<pos:position pos:line="12" pos:column="50"/></typedef>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">ServiceConfigs<pos:position pos:line="13" pos:column="25"/></name> <modifier pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></modifier></type><name pos:line="13" pos:column="27">configs<pos:position pos:line="13" pos:column="34"/></name> <init pos:line="13" pos:column="35">= <expr><name pos:line="13" pos:column="37">serviceConfigs<pos:position pos:line="13" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="52"/></decl_stmt>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><decl><type><name pos:line="14" pos:column="10">VISCI<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">i<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><call><name><name pos:line="14" pos:column="20">configs<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">.<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">begin<pos:position pos:line="14" pos:column="33"/></name></name><argument_list pos:line="14" pos:column="33">()<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></init> <condition><expr><name pos:line="14" pos:column="37">i<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">!=<pos:position pos:line="14" pos:column="41"/></operator> <call><name><name pos:line="14" pos:column="42">configs<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">.<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">end<pos:position pos:line="14" pos:column="53"/></name></name><argument_list pos:line="14" pos:column="53">()<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></condition> <incr><expr><operator pos:line="14" pos:column="57">++<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">i<pos:position pos:line="14" pos:column="60"/></name></expr></incr>)<pos:position pos:line="14" pos:column="61"/></control> <block pos:line="14" pos:column="62">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">ServiceConfigPointer<pos:position pos:line="15" pos:column="35"/></name></type> <name pos:line="15" pos:column="36">cfg<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">= <expr><operator pos:line="15" pos:column="42">*<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">i<pos:position pos:line="15" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="45"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">FindService<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">cfg<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">key<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call> <operator pos:line="16" pos:column="35">!=<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">NULL<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">93<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">DBG_CRITICAL<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="38">"ERROR: Duplicate adaptation service name: "<pos:position pos:line="17" pos:column="82"/></literal> <operator pos:line="17" pos:column="83">&lt;&lt;<pos:position pos:line="17" pos:column="91"/></operator>
                   <name><name pos:line="18" pos:column="20">cfg<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">key<pos:position pos:line="18" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
            <continue pos:line="19" pos:column="13">continue;<pos:position pos:line="19" pos:column="22"/></continue> <comment type="line" pos:line="19" pos:column="23">// TODO: make fatal</comment>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">ServicePointer<pos:position pos:line="21" pos:column="23"/></name></type> <name pos:line="21" pos:column="24">s<pos:position pos:line="21" pos:column="25"/></name> <init pos:line="21" pos:column="26">= <expr><call><name pos:line="21" pos:column="28">createService<pos:position pos:line="21" pos:column="41"/></name><argument_list pos:line="21" pos:column="41">(<argument><expr><name pos:line="21" pos:column="42">cfg<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="47"/></decl_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">s<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">!=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">NULL<pos:position pos:line="22" pos:column="22"/></name></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23"> <block pos:line="22" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">AllServices<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">()<pos:position pos:line="23" pos:column="26"/></argument_list></call><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><call><name pos:line="23" pos:column="27">push_back<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">s<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">created<pos:position pos:line="24" pos:column="22"/></name></expr>;<pos:position pos:line="24" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">debugs<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="number" pos:line="28" pos:column="12">93<pos:position pos:line="28" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="28" pos:column="15">3<pos:position pos:line="28" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="18">HERE<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;&lt;<pos:position pos:line="28" pos:column="31"/></operator> <literal type="string" pos:line="28" pos:column="26">"Created "<pos:position pos:line="28" pos:column="36"/></literal> <operator pos:line="28" pos:column="37">&lt;&lt;<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="40">created<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">&lt;&lt;<pos:position pos:line="28" pos:column="56"/></operator> <literal type="string" pos:line="28" pos:column="51">" adaptation services"<pos:position pos:line="28" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>

    <comment type="line" pos:line="30" pos:column="5">// services remember their configs; we do not have to</comment>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">serviceConfigs<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">clear<pos:position pos:line="31" pos:column="25"/></name></name><argument_list pos:line="31" pos:column="25">()<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="boolean" pos:line="32" pos:column="12">true<pos:position pos:line="32" pos:column="16"/></literal></expr>;<pos:position pos:line="32" pos:column="17"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

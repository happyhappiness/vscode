<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2044_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreMetaUnpacker<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">checkBuffer<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">buf<pos:position pos:line="4" pos:column="15"/></name></expr></argument>)<pos:position pos:line="4" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt> <comment type="line" pos:line="4" pos:column="18">// paranoid; already checked in the constructor</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">buf<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr>]<pos:position pos:line="5" pos:column="15"/></index></name> <operator pos:line="5" pos:column="16">!=<pos:position pos:line="5" pos:column="18"/></operator> <cast type="static" pos:line="5" pos:column="19">static_cast<argument_list type="generic" pos:line="5" pos:column="30">&lt;<argument><expr><name pos:line="5" pos:column="31">char<pos:position pos:line="5" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="39"/></argument_list><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">STORE_META_OK<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></cast></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52">
        <block type="pseudo"><throw pos:line="6" pos:column="9">throw <expr><call><name pos:line="6" pos:column="15">TexcHere<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><literal type="string" pos:line="6" pos:column="24">"store entry metadata is corrupted"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></throw></block></then></if>
    <comment type="block" pos:line="7" pos:column="5">/*
     * sanity check on 'buflen' value.  It should be at least big
     * enough to hold one type and one length.
     */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">getBufferLength<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">hdr_len<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="20">MinimumBufferLength<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
        <block type="pseudo"><throw pos:line="13" pos:column="9">throw <expr><call><name pos:line="13" pos:column="15">TexcHere<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"store entry metadata is too small"<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></throw></block></then></if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">hdr_len<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&gt;<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="20">buflen<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
        <block type="pseudo"><throw pos:line="15" pos:column="9">throw <expr><call><name pos:line="15" pos:column="15">TexcHere<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"store entry metadata is too big"<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="59"/></throw></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6006_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">esiStreamRead<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">clientStreamNode<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">thisNode<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">ClientHttpRequest<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">http<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">clientStreamNode<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">next<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* Test preconditions */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">thisNode<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">!=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">NULL<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><call><name pos:line="7" pos:column="13">cbdataReferenceValid<pos:position pos:line="7" pos:column="33"/></name> <argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">thisNode<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* we are not in the chain until ESI is detected on a data callback */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name><name pos:line="9" pos:column="13">thisNode<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">node<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">prev<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">!=<pos:position pos:line="9" pos:column="35"/></operator> <name pos:line="9" pos:column="36">NULL<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name><name pos:line="10" pos:column="13">thisNode<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">node<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">next<pos:position pos:line="10" pos:column="32"/></name></name> <operator pos:line="10" pos:column="33">!=<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="36">NULL<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">ESIContext<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">Pointer<pos:position pos:line="12" pos:column="24"/></name></name></type> <name pos:line="12" pos:column="25">context<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><cast type="dynamic" pos:line="12" pos:column="35">dynamic_cast<argument_list type="generic" pos:line="12" pos:column="47">&lt;<argument><expr><name pos:line="12" pos:column="48">ESIContext<pos:position pos:line="12" pos:column="58"/></name> <operator pos:line="12" pos:column="59">*<pos:position pos:line="12" pos:column="60"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="64"/></argument_list><argument_list pos:line="12" pos:column="61">(<argument><expr><call><name><name pos:line="12" pos:column="62">thisNode<pos:position pos:line="12" pos:column="70"/></name><operator pos:line="12" pos:column="70">-&gt;<pos:position pos:line="12" pos:column="75"/></operator><name pos:line="12" pos:column="72">data<pos:position pos:line="12" pos:column="76"/></name><operator pos:line="12" pos:column="76">.<pos:position pos:line="12" pos:column="77"/></operator><name pos:line="12" pos:column="77">getRaw<pos:position pos:line="12" pos:column="83"/></name></name><argument_list pos:line="12" pos:column="83">()<pos:position pos:line="12" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="86"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="12" pos:column="87"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name> <argument_list pos:line="13" pos:column="12">(<argument><expr><call><name><name pos:line="13" pos:column="13">context<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">getRaw<pos:position pos:line="13" pos:column="27"/></name></name><argument_list pos:line="13" pos:column="27">()<pos:position pos:line="13" pos:column="29"/></argument_list></call> <operator pos:line="13" pos:column="30">!=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">context<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">flags<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">passthrough<pos:position pos:line="15" pos:column="35"/></name></name></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <block pos:line="15" pos:column="37">{
        <comment type="block" pos:line="16" pos:column="9">/* passthru mode - read into supplied buffers */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">next<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <call><name><name pos:line="17" pos:column="16">thisNode<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">next<pos:position pos:line="17" pos:column="30"/></name></name><argument_list pos:line="17" pos:column="30">()<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">clientStreamRead<pos:position pos:line="18" pos:column="25"/></name> <argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">thisNode<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="37">http<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="43">next<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">readBuffer<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">context<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">flags<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">clientwantsdata<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <literal type="number" pos:line="22" pos:column="38">1<pos:position pos:line="22" pos:column="39"/></literal></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">86<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">5<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="19">"esiStreamRead: Client now wants data"<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* Ok, not passing through */</comment>

    <switch pos:line="27" pos:column="5">switch <condition pos:line="27" pos:column="12">(<expr><call><name><name pos:line="27" pos:column="13">context<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">kick<pos:position pos:line="27" pos:column="26"/></name></name> <argument_list pos:line="27" pos:column="27">()<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="30"/></condition> <block pos:line="27" pos:column="31">{

    <case pos:line="29" pos:column="5">case <expr><name><name pos:line="29" pos:column="10">ESIContext<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">::<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">ESI_KICK_FAILED<pos:position pos:line="29" pos:column="37"/></name></name></expr>:<pos:position pos:line="29" pos:column="38"/></case>
        <comment type="block" pos:line="30" pos:column="9">/* this can not happen - processing can't fail until we have data,
         * and when we come here we have sent data to the client
         */</comment>

    <case pos:line="34" pos:column="5">case <expr><name><name pos:line="34" pos:column="10">ESIContext<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">::<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">ESI_KICK_SENT<pos:position pos:line="34" pos:column="35"/></name></name></expr>:<pos:position pos:line="34" pos:column="36"/></case>

    <case pos:line="36" pos:column="5">case <expr><name><name pos:line="36" pos:column="10">ESIContext<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">::<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">ESI_KICK_INPROGRESS<pos:position pos:line="36" pos:column="41"/></name></name></expr>:<pos:position pos:line="36" pos:column="42"/></case>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>

    <case pos:line="39" pos:column="5">case <expr><name><name pos:line="39" pos:column="10">ESIContext<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">::<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">ESI_KICK_PENDING<pos:position pos:line="39" pos:column="38"/></name></name></expr>:<pos:position pos:line="39" pos:column="39"/></case>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>
    }<pos:position pos:line="41" pos:column="6"/></block></switch>

    <comment type="block" pos:line="43" pos:column="5">/* Nothing to send */</comment>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">context<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">flags<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">oktosend<pos:position pos:line="45" pos:column="32"/></name></name> <operator pos:line="45" pos:column="33">&amp;&amp;<pos:position pos:line="45" pos:column="43"/></operator> <operator pos:line="45" pos:column="36">(<pos:position pos:line="45" pos:column="37"/></operator><name><name pos:line="45" pos:column="37">context<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">-&gt;<pos:position pos:line="45" pos:column="49"/></operator><name pos:line="45" pos:column="46">flags<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">.<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="52">finishedtemplate<pos:position pos:line="45" pos:column="68"/></name></name>
                                    <operator pos:line="46" pos:column="37">||<pos:position pos:line="46" pos:column="39"/></operator> <name><name pos:line="46" pos:column="40">context<pos:position pos:line="46" pos:column="47"/></name><operator pos:line="46" pos:column="47">-&gt;<pos:position pos:line="46" pos:column="52"/></operator><name pos:line="46" pos:column="49">cachedASTInUse<pos:position pos:line="46" pos:column="63"/></name></name><operator pos:line="46" pos:column="63">)<pos:position pos:line="46" pos:column="64"/></operator> <operator pos:line="46" pos:column="65">&amp;&amp;<pos:position pos:line="46" pos:column="75"/></operator>
            <operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator> <name><name pos:line="47" pos:column="15">context<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">flags<pos:position pos:line="47" pos:column="29"/></name><operator pos:line="47" pos:column="29">.<pos:position pos:line="47" pos:column="30"/></operator><name pos:line="47" pos:column="30">finished<pos:position pos:line="47" pos:column="38"/></name></name></expr>)<pos:position pos:line="47" pos:column="39"/></condition><then pos:line="47" pos:column="39"> <block pos:line="47" pos:column="40">{
        <comment type="block" pos:line="48" pos:column="9">/* we've started sending, finished reading, but not finished
         * processing. stop here, a callback will resume the stream
         * flow
         */</comment>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="number" pos:line="52" pos:column="16">86<pos:position pos:line="52" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="20">5<pos:position pos:line="52" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">"esiStreamRead: Waiting for async resume of esi processing"<pos:position pos:line="52" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="84"/></expr_stmt>
        <return pos:line="53" pos:column="9">return;<pos:position pos:line="53" pos:column="16"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">context<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">flags<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">.<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="24">oktosend<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">&amp;&amp;<pos:position pos:line="56" pos:column="43"/></operator> <name><name pos:line="56" pos:column="36">context<pos:position pos:line="56" pos:column="43"/></name><operator pos:line="56" pos:column="43">-&gt;<pos:position pos:line="56" pos:column="48"/></operator><name pos:line="56" pos:column="45">flags<pos:position pos:line="56" pos:column="50"/></name><operator pos:line="56" pos:column="50">.<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="51">finished<pos:position pos:line="56" pos:column="59"/></name></name> <operator pos:line="56" pos:column="60">&amp;&amp;<pos:position pos:line="56" pos:column="70"/></operator> <call><name><name pos:line="56" pos:column="63">context<pos:position pos:line="56" pos:column="70"/></name><operator pos:line="56" pos:column="70">-&gt;<pos:position pos:line="56" pos:column="75"/></operator><name pos:line="56" pos:column="72">outbound<pos:position pos:line="56" pos:column="80"/></name><operator pos:line="56" pos:column="80">.<pos:position pos:line="56" pos:column="81"/></operator><name pos:line="56" pos:column="81">getRaw<pos:position pos:line="56" pos:column="87"/></name></name><argument_list pos:line="56" pos:column="87">()<pos:position pos:line="56" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="90"/></condition><then pos:line="56" pos:column="90"> <block pos:line="56" pos:column="91">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">debugs<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="number" pos:line="57" pos:column="16">86<pos:position pos:line="57" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="20">5<pos:position pos:line="57" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="23">"all processing complete, but outbound data still buffered"<pos:position pos:line="57" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">assert<pos:position pos:line="58" pos:column="15"/></name> <argument_list pos:line="58" pos:column="16">(<argument><expr><operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><name><name pos:line="58" pos:column="18">context<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">flags<pos:position pos:line="58" pos:column="32"/></name><operator pos:line="58" pos:column="32">.<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="33">clientwantsdata<pos:position pos:line="58" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
        <comment type="block" pos:line="59" pos:column="9">/* client MUST be processing the last reply */</comment>
        <return pos:line="60" pos:column="9">return;<pos:position pos:line="60" pos:column="16"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name><name pos:line="63" pos:column="9">context<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">flags<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">.<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">oktosend<pos:position pos:line="63" pos:column="32"/></name></name> <operator pos:line="63" pos:column="33">&amp;&amp;<pos:position pos:line="63" pos:column="43"/></operator> <name><name pos:line="63" pos:column="36">context<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">-&gt;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="45">flags<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">.<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">finished<pos:position pos:line="63" pos:column="59"/></name></name></expr>)<pos:position pos:line="63" pos:column="60"/></condition><then pos:line="63" pos:column="60"> <block pos:line="63" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">StoreIOBuffer<pos:position pos:line="64" pos:column="22"/></name></type> <name pos:line="64" pos:column="23">tempBuffer<pos:position pos:line="64" pos:column="33"/></name></decl>;<pos:position pos:line="64" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">assert<pos:position pos:line="65" pos:column="15"/></name> <argument_list pos:line="65" pos:column="16">(<argument><expr><operator pos:line="65" pos:column="17">!<pos:position pos:line="65" pos:column="18"/></operator><call><name><name pos:line="65" pos:column="18">context<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">-&gt;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="27">outbound<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">.<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="36">getRaw<pos:position pos:line="65" pos:column="42"/></name></name><argument_list pos:line="65" pos:column="42">()<pos:position pos:line="65" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="66" pos:column="9">/* We've finished processing, and there is no more data buffered */</comment>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">debugs<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><literal type="number" pos:line="67" pos:column="16">86<pos:position pos:line="67" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="20">5<pos:position pos:line="67" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="23">"Telling recipient EOF on READ"<pos:position pos:line="67" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">clientStreamCallback<pos:position pos:line="68" pos:column="29"/></name> <argument_list pos:line="68" pos:column="30">(<argument><expr><name pos:line="68" pos:column="31">thisNode<pos:position pos:line="68" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="41">http<pos:position pos:line="68" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="47">NULL<pos:position pos:line="68" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="53">tempBuffer<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="65"/></expr_stmt>
        <return pos:line="69" pos:column="9">return;<pos:position pos:line="69" pos:column="16"/></return>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><call><name><name pos:line="72" pos:column="9">context<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">-&gt;<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="18">reading<pos:position pos:line="72" pos:column="25"/></name></name><argument_list pos:line="72" pos:column="25">()<pos:position pos:line="72" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="28"/></condition><then pos:line="72" pos:column="28">
        <block type="pseudo"><return pos:line="73" pos:column="9">return;<pos:position pos:line="73" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* no data that is ready to send, and still reading? well, lets get some */</comment>
    <comment type="block" pos:line="76" pos:column="5">/* secure a buffer */</comment>
    <if pos:line="77" pos:column="5">if <condition pos:line="77" pos:column="8">(<expr><operator pos:line="77" pos:column="9">!<pos:position pos:line="77" pos:column="10"/></operator><call><name><name pos:line="77" pos:column="10">context<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">-&gt;<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="19">incoming<pos:position pos:line="77" pos:column="27"/></name><operator pos:line="77" pos:column="27">.<pos:position pos:line="77" pos:column="28"/></operator><name pos:line="77" pos:column="28">getRaw<pos:position pos:line="77" pos:column="34"/></name></name><argument_list pos:line="77" pos:column="34">()<pos:position pos:line="77" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="37"/></condition><then pos:line="77" pos:column="37"> <block pos:line="77" pos:column="38">{
        <comment type="block" pos:line="78" pos:column="9">/* create a new buffer segment */</comment>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">context<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">buffered<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <operator pos:line="79" pos:column="29">new<pos:position pos:line="79" pos:column="32"/></operator> <name pos:line="79" pos:column="33">ESISegment<pos:position pos:line="79" pos:column="43"/></name></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">context<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">incoming<pos:position pos:line="80" pos:column="26"/></name></name> <operator pos:line="80" pos:column="27">=<pos:position pos:line="80" pos:column="28"/></operator> <name><name pos:line="80" pos:column="29">context<pos:position pos:line="80" pos:column="36"/></name><operator pos:line="80" pos:column="36">-&gt;<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="38">buffered<pos:position pos:line="80" pos:column="46"/></name></name></expr>;<pos:position pos:line="80" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">assert<pos:position pos:line="83" pos:column="11"/></name> <argument_list pos:line="83" pos:column="12">(<argument><expr><call><name><name pos:line="83" pos:column="13">context<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">incoming<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">.<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">getRaw<pos:position pos:line="83" pos:column="37"/></name></name><argument_list pos:line="83" pos:column="37">()<pos:position pos:line="83" pos:column="39"/></argument_list></call> <operator pos:line="83" pos:column="40">&amp;&amp;<pos:position pos:line="83" pos:column="50"/></operator> <name><name pos:line="83" pos:column="43">context<pos:position pos:line="83" pos:column="50"/></name><operator pos:line="83" pos:column="50">-&gt;<pos:position pos:line="83" pos:column="55"/></operator><name pos:line="83" pos:column="52">incoming<pos:position pos:line="83" pos:column="60"/></name><operator pos:line="83" pos:column="60">-&gt;<pos:position pos:line="83" pos:column="65"/></operator><name pos:line="83" pos:column="62">len<pos:position pos:line="83" pos:column="65"/></name></name> <operator pos:line="83" pos:column="66">!=<pos:position pos:line="83" pos:column="68"/></operator> <name pos:line="83" pos:column="69">HTTP_REQBUF_SZ<pos:position pos:line="83" pos:column="83"/></name></expr></argument>)<pos:position pos:line="83" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="85"/></expr_stmt>
    <block pos:line="84" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="85" pos:column="9">StoreIOBuffer<pos:position pos:line="85" pos:column="22"/></name></type> <name pos:line="85" pos:column="23">tempBuffer<pos:position pos:line="85" pos:column="33"/></name></decl>;<pos:position pos:line="85" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">tempBuffer<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">offset<pos:position pos:line="86" pos:column="26"/></name></name> <operator pos:line="86" pos:column="27">=<pos:position pos:line="86" pos:column="28"/></operator>  <name><name pos:line="86" pos:column="30">context<pos:position pos:line="86" pos:column="37"/></name><operator pos:line="86" pos:column="37">-&gt;<pos:position pos:line="86" pos:column="42"/></operator><name pos:line="86" pos:column="39">readpos<pos:position pos:line="86" pos:column="46"/></name></name></expr>;<pos:position pos:line="86" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="87" pos:column="9">tempBuffer<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">.<pos:position pos:line="87" pos:column="20"/></operator><name pos:line="87" pos:column="20">length<pos:position pos:line="87" pos:column="26"/></name></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <name><name pos:line="87" pos:column="29">context<pos:position pos:line="87" pos:column="36"/></name><operator pos:line="87" pos:column="36">-&gt;<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="38">incoming<pos:position pos:line="87" pos:column="46"/></name><operator pos:line="87" pos:column="46">-&gt;<pos:position pos:line="87" pos:column="51"/></operator><name pos:line="87" pos:column="48">len<pos:position pos:line="87" pos:column="51"/></name></name> <operator pos:line="87" pos:column="52">-<pos:position pos:line="87" pos:column="53"/></operator> <name pos:line="87" pos:column="54">HTTP_REQBUF_SZ<pos:position pos:line="87" pos:column="68"/></name></expr>;<pos:position pos:line="87" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="88" pos:column="9">tempBuffer<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">.<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="20">data<pos:position pos:line="88" pos:column="24"/></name></name> <operator pos:line="88" pos:column="25">=<pos:position pos:line="88" pos:column="26"/></operator> <operator pos:line="88" pos:column="27">&amp;<pos:position pos:line="88" pos:column="32"/></operator><name><name pos:line="88" pos:column="28">context<pos:position pos:line="88" pos:column="35"/></name><operator pos:line="88" pos:column="35">-&gt;<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="37">incoming<pos:position pos:line="88" pos:column="45"/></name><operator pos:line="88" pos:column="45">-&gt;<pos:position pos:line="88" pos:column="50"/></operator><name pos:line="88" pos:column="47">buf<pos:position pos:line="88" pos:column="50"/></name><index pos:line="88" pos:column="50">[<expr><name><name pos:line="88" pos:column="51">context<pos:position pos:line="88" pos:column="58"/></name><operator pos:line="88" pos:column="58">-&gt;<pos:position pos:line="88" pos:column="63"/></operator><name pos:line="88" pos:column="60">incoming<pos:position pos:line="88" pos:column="68"/></name><operator pos:line="88" pos:column="68">-&gt;<pos:position pos:line="88" pos:column="73"/></operator><name pos:line="88" pos:column="70">len<pos:position pos:line="88" pos:column="73"/></name></name></expr>]<pos:position pos:line="88" pos:column="74"/></index></name></expr>;<pos:position pos:line="88" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="89" pos:column="9">context<pos:position pos:line="89" pos:column="16"/></name><operator pos:line="89" pos:column="16">-&gt;<pos:position pos:line="89" pos:column="21"/></operator><name pos:line="89" pos:column="18">startRead<pos:position pos:line="89" pos:column="27"/></name></name><argument_list pos:line="89" pos:column="27">()<pos:position pos:line="89" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">clientStreamRead<pos:position pos:line="90" pos:column="25"/></name> <argument_list pos:line="90" pos:column="26">(<argument><expr><name pos:line="90" pos:column="27">thisNode<pos:position pos:line="90" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="37">http<pos:position pos:line="90" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="43">tempBuffer<pos:position pos:line="90" pos:column="53"/></name></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="91" pos:column="6"/></block>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_326_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">RFCNB_Print_Hex<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">FILE<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">RFCNB_Pkt<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">pkt<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">Offset<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">int<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">Len<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">c1<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">c2<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="18">outbuf1<pos:position pos:line="4" pos:column="25"/></name><index pos:line="4" pos:column="25">[<expr><literal type="number" pos:line="4" pos:column="26">33<pos:position pos:line="4" pos:column="28"/></literal></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">c<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="12">j<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">RFCNB_Pkt<pos:position pos:line="7" pos:column="21"/></name></name> <modifier pos:line="7" pos:column="22">*<pos:position pos:line="7" pos:column="23"/></modifier></type><name pos:line="7" pos:column="23">pkt_ptr<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name pos:line="7" pos:column="33">pkt<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="8" pos:column="5">static<pos:position pos:line="8" pos:column="11"/></specifier> <type><name pos:line="8" pos:column="12">char<pos:position pos:line="8" pos:column="16"/></name></type> <name><name pos:line="8" pos:column="17">Hex_List<pos:position pos:line="8" pos:column="25"/></name><index pos:line="8" pos:column="25">[<expr><literal type="number" pos:line="8" pos:column="26">17<pos:position pos:line="8" pos:column="28"/></literal></expr>]<pos:position pos:line="8" pos:column="29"/></index></name> <init pos:line="8" pos:column="30">= <expr><literal type="string" pos:line="8" pos:column="32">"0123456789ABCDEF"<pos:position pos:line="8" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">j<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <literal type="number" pos:line="10" pos:column="9">0<pos:position pos:line="10" pos:column="10"/></literal></expr>;<pos:position pos:line="10" pos:column="11"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* We only want to print as much as sepcified in Len */</comment>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">pkt_ptr<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">!=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">NULL<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition> <block pos:line="14" pos:column="29">{

        <for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">i<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></init>
                <condition><expr><name pos:line="17" pos:column="17">i<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&lt;<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><ternary><condition><expr><name pos:line="17" pos:column="23">Len<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&gt;<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><name><name pos:line="17" pos:column="30">pkt_ptr<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">-&gt;<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">len<pos:position pos:line="17" pos:column="42"/></name></name><operator pos:line="17" pos:column="42">)<pos:position pos:line="17" pos:column="43"/></operator></expr> ?<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <expr><name><name pos:line="17" pos:column="46">pkt_ptr<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">len<pos:position pos:line="17" pos:column="58"/></name></name></expr> <pos:position pos:line="17" pos:column="59"/></then><else pos:line="17" pos:column="59">: <expr><name pos:line="17" pos:column="61">Len<pos:position pos:line="17" pos:column="64"/></name></expr></else></ternary><operator pos:line="17" pos:column="64">)<pos:position pos:line="17" pos:column="65"/></operator> <operator pos:line="17" pos:column="66">-<pos:position pos:line="17" pos:column="67"/></operator> <name pos:line="17" pos:column="68">Offset<pos:position pos:line="17" pos:column="74"/></name><operator pos:line="17" pos:column="74">)<pos:position pos:line="17" pos:column="75"/></operator></expr>;<pos:position pos:line="17" pos:column="76"/></condition>
                <incr><expr><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">++<pos:position pos:line="18" pos:column="20"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="21"/></control> <block pos:line="18" pos:column="22">{

            <expr_stmt><expr><name pos:line="20" pos:column="13">c<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name><name pos:line="20" pos:column="17">pkt_ptr<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">data<pos:position pos:line="20" pos:column="30"/></name><index pos:line="20" pos:column="30">[<expr><name pos:line="20" pos:column="31">i<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">+<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="35">Offset<pos:position pos:line="20" pos:column="41"/></name></expr>]<pos:position pos:line="20" pos:column="42"/></index></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">c1<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name><name pos:line="21" pos:column="18">Hex_List<pos:position pos:line="21" pos:column="26"/></name><index pos:line="21" pos:column="26">[<expr><name pos:line="21" pos:column="27">c<pos:position pos:line="21" pos:column="28"/></name> <operator pos:line="21" pos:column="29">&gt;&gt;<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="32">4<pos:position pos:line="21" pos:column="33"/></literal></expr>]<pos:position pos:line="21" pos:column="34"/></index></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">c2<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name><name pos:line="22" pos:column="18">Hex_List<pos:position pos:line="22" pos:column="26"/></name><index pos:line="22" pos:column="26">[<expr><name pos:line="22" pos:column="27">c<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">&amp;<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="31">0xF<pos:position pos:line="22" pos:column="34"/></literal></expr>]<pos:position pos:line="22" pos:column="35"/></index></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="24" pos:column="13">outbuf1<pos:position pos:line="24" pos:column="20"/></name><index pos:line="24" pos:column="20">[<expr><name pos:line="24" pos:column="21">j<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">++<pos:position pos:line="24" pos:column="24"/></operator></expr>]<pos:position pos:line="24" pos:column="25"/></index></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">c1<pos:position pos:line="24" pos:column="30"/></name></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">outbuf1<pos:position pos:line="25" pos:column="20"/></name><index pos:line="25" pos:column="20">[<expr><name pos:line="25" pos:column="21">j<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">++<pos:position pos:line="25" pos:column="24"/></operator></expr>]<pos:position pos:line="25" pos:column="25"/></index></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">c2<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>

            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">j<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">==<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="22">32<pos:position pos:line="27" pos:column="24"/></literal></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25"> <block pos:line="27" pos:column="26">{	<comment type="block" pos:line="27" pos:column="33">/* Print and reset */</comment>
                <expr_stmt><expr><name><name pos:line="28" pos:column="17">outbuf1<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><name pos:line="28" pos:column="25">j<pos:position pos:line="28" pos:column="26"/></name></expr>]<pos:position pos:line="28" pos:column="27"/></index></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <literal type="number" pos:line="28" pos:column="30">0<pos:position pos:line="28" pos:column="31"/></literal></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">fprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">fd<pos:position pos:line="29" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="29">"    %s\n"<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="41">outbuf1<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name pos:line="30" pos:column="17">j<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="34" pos:column="9">Offset<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">0<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">Len<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <name pos:line="35" pos:column="15">Len<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">-<pos:position pos:line="35" pos:column="20"/></operator> <name><name pos:line="35" pos:column="21">pkt_ptr<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">len<pos:position pos:line="35" pos:column="33"/></name></name></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>	<comment type="block" pos:line="35" pos:column="41">/* Reduce amount by this much */</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">pkt_ptr<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name><name pos:line="36" pos:column="19">pkt_ptr<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">next<pos:position pos:line="36" pos:column="32"/></name></name></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>

    }<pos:position pos:line="38" pos:column="6"/></block></while>

    <comment type="block" pos:line="40" pos:column="5">/* Print last lot in the buffer ... */</comment>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">j<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">&gt;<pos:position pos:line="42" pos:column="15"/></operator> <literal type="number" pos:line="42" pos:column="13">0<pos:position pos:line="42" pos:column="14"/></literal></expr>)<pos:position pos:line="42" pos:column="15"/></condition><then pos:line="42" pos:column="15"> <block pos:line="42" pos:column="16">{

        <expr_stmt><expr><name><name pos:line="44" pos:column="9">outbuf1<pos:position pos:line="44" pos:column="16"/></name><index pos:line="44" pos:column="16">[<expr><name pos:line="44" pos:column="17">j<pos:position pos:line="44" pos:column="18"/></name></expr>]<pos:position pos:line="44" pos:column="19"/></index></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <literal type="number" pos:line="44" pos:column="22">0<pos:position pos:line="44" pos:column="23"/></literal></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">fprintf<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">fd<pos:position pos:line="45" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="21">"    %s\n"<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="33">outbuf1<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>

    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">fprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">fd<pos:position pos:line="48" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="17">"\n"<pos:position pos:line="48" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>

}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

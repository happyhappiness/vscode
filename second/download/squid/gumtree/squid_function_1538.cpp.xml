<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1538.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">handleFeatReply<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">HttpReply<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">reply<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">StoreIOBuffer<pos:position pos:line="2" pos:column="67"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">getCurrentContext<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">()<pos:position pos:line="4" pos:column="28"/></argument_list></call><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name><name pos:line="4" pos:column="30">http<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">-&gt;<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="36">request<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">errType<pos:position pos:line="4" pos:column="52"/></name></name> <operator pos:line="4" pos:column="53">!=<pos:position pos:line="4" pos:column="55"/></operator> <name pos:line="4" pos:column="56">ERR_NONE<pos:position pos:line="4" pos:column="64"/></name></expr>)<pos:position pos:line="4" pos:column="65"/></condition><then pos:line="4" pos:column="65"> <block pos:line="4" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">writeCustomReply<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><literal type="number" pos:line="5" pos:column="26">502<pos:position pos:line="5" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="31">"Server does not support FEAT"<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="63">reply<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Must<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">reply<pos:position pos:line="9" pos:column="15"/></name></expr></argument>)<pos:position pos:line="9" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">HttpReply<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">Pointer<pos:position pos:line="10" pos:column="23"/></name></name></type> <name pos:line="10" pos:column="24">featReply<pos:position pos:line="10" pos:column="33"/></name> <init pos:line="10" pos:column="34">= <expr><call><name><name pos:line="10" pos:column="36">Ftp<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">::<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">HttpReplyWrapper<pos:position pos:line="10" pos:column="57"/></name></name><argument_list pos:line="10" pos:column="57">(<argument><expr><literal type="number" pos:line="10" pos:column="58">211<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="63">"End"<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="70">Http<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">::<pos:position pos:line="10" pos:column="76"/></operator><name pos:line="10" pos:column="76">scNoContent<pos:position pos:line="10" pos:column="87"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="89">0<pos:position pos:line="10" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="92"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">HttpHeader<pos:position pos:line="11" pos:column="15"/></name> <specifier pos:line="11" pos:column="16">const<pos:position pos:line="11" pos:column="21"/></specifier> <modifier pos:line="11" pos:column="22">&amp;<pos:position pos:line="11" pos:column="27"/></modifier></type><name pos:line="11" pos:column="23">serverReplyHeader<pos:position pos:line="11" pos:column="40"/></name> <init pos:line="11" pos:column="41">= <expr><name><name pos:line="11" pos:column="43">reply<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">header<pos:position pos:line="11" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">HttpHeaderPos<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">pos<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><name pos:line="13" pos:column="25">HttpHeaderInitPos<pos:position pos:line="13" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">bool<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">hasEPRT<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><literal type="boolean" pos:line="14" pos:column="20">false<pos:position pos:line="14" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">bool<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">hasEPSV<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><literal type="boolean" pos:line="15" pos:column="20">false<pos:position pos:line="15" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">prependSpaces<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">featReply<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">header<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">putStr<pos:position pos:line="18" pos:column="29"/></name></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">HDR_FTP_PRE<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="43">"\"211-Features:\""<pos:position pos:line="18" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">int<pos:position pos:line="19" pos:column="14"/></name></type> <name pos:line="19" pos:column="15">scode<pos:position pos:line="19" pos:column="20"/></name> <init pos:line="19" pos:column="21">= <expr><call><name><name pos:line="19" pos:column="23">serverReplyHeader<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">getInt<pos:position pos:line="19" pos:column="47"/></name></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">HDR_FTP_STATUS<pos:position pos:line="19" pos:column="62"/></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="64"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">scode<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">==<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">211<pos:position pos:line="20" pos:column="21"/></literal></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
        <while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<decl><type><specifier pos:line="21" pos:column="16">const<pos:position pos:line="21" pos:column="21"/></specifier> <name pos:line="21" pos:column="22">HttpHeaderEntry<pos:position pos:line="21" pos:column="37"/></name> <modifier pos:line="21" pos:column="38">*<pos:position pos:line="21" pos:column="39"/></modifier></type><name pos:line="21" pos:column="39">e<pos:position pos:line="21" pos:column="40"/></name> <init pos:line="21" pos:column="41">= <expr><call><name><name pos:line="21" pos:column="43">serverReplyHeader<pos:position pos:line="21" pos:column="60"/></name><operator pos:line="21" pos:column="60">.<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">getEntry<pos:position pos:line="21" pos:column="69"/></name></name><argument_list pos:line="21" pos:column="69">(<argument><expr><operator pos:line="21" pos:column="70">&amp;<pos:position pos:line="21" pos:column="75"/></operator><name pos:line="21" pos:column="71">pos<pos:position pos:line="21" pos:column="74"/></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></init></decl>)<pos:position pos:line="21" pos:column="76"/></condition> <block pos:line="21" pos:column="77">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">e<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">id<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">==<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">HDR_FTP_PRE<pos:position pos:line="22" pos:column="37"/></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38"> <block pos:line="22" pos:column="39">{
                <comment type="line" pos:line="23" pos:column="17">// assume RFC 2389 FEAT response format, quoted by Squid:</comment>
                <comment type="line" pos:line="24" pos:column="17">// &lt;"&gt; SP NAME [SP PARAMS] &lt;"&gt;</comment>
                <comment type="line" pos:line="25" pos:column="17">// but accommodate MS servers sending four SPs before NAME</comment>

                <comment type="line" pos:line="27" pos:column="17">// command name ends with (SP parameter) or quote</comment>
                <decl_stmt><decl><specifier pos:line="28" pos:column="17">static<pos:position pos:line="28" pos:column="23"/></specifier> <type><specifier pos:line="28" pos:column="24">const<pos:position pos:line="28" pos:column="29"/></specifier> <name pos:line="28" pos:column="30">CharacterSet<pos:position pos:line="28" pos:column="42"/></name></type> <name pos:line="28" pos:column="43">AfterFeatNameChars<pos:position pos:line="28" pos:column="61"/></name><argument_list pos:line="28" pos:column="61">(<argument><expr><literal type="string" pos:line="28" pos:column="62">"AfterFeatName"<pos:position pos:line="28" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="79">" \""<pos:position pos:line="28" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="85"/></argument_list></decl>;<pos:position pos:line="28" pos:column="86"/></decl_stmt>
                <decl_stmt><decl><specifier pos:line="29" pos:column="17">static<pos:position pos:line="29" pos:column="23"/></specifier> <type><specifier pos:line="29" pos:column="24">const<pos:position pos:line="29" pos:column="29"/></specifier> <name pos:line="29" pos:column="30">CharacterSet<pos:position pos:line="29" pos:column="42"/></name></type> <name pos:line="29" pos:column="43">FeatNameChars<pos:position pos:line="29" pos:column="56"/></name> <init pos:line="29" pos:column="57">= <expr><call><name><name pos:line="29" pos:column="59">AfterFeatNameChars<pos:position pos:line="29" pos:column="77"/></name><operator pos:line="29" pos:column="77">.<pos:position pos:line="29" pos:column="78"/></operator><name pos:line="29" pos:column="78">complement<pos:position pos:line="29" pos:column="88"/></name></name><argument_list pos:line="29" pos:column="88">(<argument><expr><literal type="string" pos:line="29" pos:column="89">"FeatName"<pos:position pos:line="29" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="101"/></decl_stmt>

                <decl_stmt><decl><type><name><name pos:line="31" pos:column="17">Parser<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">::<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">Tokenizer<pos:position pos:line="31" pos:column="34"/></name></name></type> <name pos:line="31" pos:column="35">tok<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><call><name pos:line="31" pos:column="39">SBuf<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><call><name><name pos:line="31" pos:column="44">e<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">value<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">.<pos:position pos:line="31" pos:column="53"/></operator><name pos:line="31" pos:column="53">termedBuf<pos:position pos:line="31" pos:column="62"/></name></name><argument_list pos:line="31" pos:column="62">()<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></decl>;<pos:position pos:line="31" pos:column="67"/></decl_stmt>
                <if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">!<pos:position pos:line="32" pos:column="22"/></operator><call><name><name pos:line="32" pos:column="22">tok<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">.<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">skip<pos:position pos:line="32" pos:column="30"/></name></name><argument_list pos:line="32" pos:column="30">(<argument><expr><literal type="char" pos:line="32" pos:column="31">'"'<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call> <operator pos:line="32" pos:column="36">||<pos:position pos:line="32" pos:column="38"/></operator> <operator pos:line="32" pos:column="39">!<pos:position pos:line="32" pos:column="40"/></operator><call><name><name pos:line="32" pos:column="40">tok<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">.<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">skip<pos:position pos:line="32" pos:column="48"/></name></name><argument_list pos:line="32" pos:column="48">(<argument><expr><literal type="char" pos:line="32" pos:column="49">' '<pos:position pos:line="32" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54">
                    <block type="pseudo"><continue pos:line="33" pos:column="21">continue;<pos:position pos:line="33" pos:column="30"/></continue></block></then></if>

                <comment type="line" pos:line="35" pos:column="17">// optional spaces; remember their number to accomodate MS servers</comment>
                <expr_stmt><expr><name pos:line="36" pos:column="17">prependSpaces<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">=<pos:position pos:line="36" pos:column="32"/></operator> <literal type="number" pos:line="36" pos:column="33">1<pos:position pos:line="36" pos:column="34"/></literal> <operator pos:line="36" pos:column="35">+<pos:position pos:line="36" pos:column="36"/></operator> <call><name><name pos:line="36" pos:column="37">tok<pos:position pos:line="36" pos:column="40"/></name><operator pos:line="36" pos:column="40">.<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">skipAll<pos:position pos:line="36" pos:column="48"/></name></name><argument_list pos:line="36" pos:column="48">(<argument><expr><name><name pos:line="36" pos:column="49">CharacterSet<pos:position pos:line="36" pos:column="61"/></name><operator pos:line="36" pos:column="61">::<pos:position pos:line="36" pos:column="63"/></operator><name pos:line="36" pos:column="63">SP<pos:position pos:line="36" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>

                <decl_stmt><decl><type><name pos:line="38" pos:column="17">SBuf<pos:position pos:line="38" pos:column="21"/></name></type> <name pos:line="38" pos:column="22">cmd<pos:position pos:line="38" pos:column="25"/></name></decl>;<pos:position pos:line="38" pos:column="26"/></decl_stmt>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">!<pos:position pos:line="39" pos:column="22"/></operator><call><name><name pos:line="39" pos:column="22">tok<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">prefix<pos:position pos:line="39" pos:column="32"/></name></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">cmd<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="38">FeatNameChars<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53">
                    <block type="pseudo"><continue pos:line="40" pos:column="21">continue;<pos:position pos:line="40" pos:column="30"/></continue></block></then></if>
                <expr_stmt><expr><call><name><name pos:line="41" pos:column="17">cmd<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">.<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">toUpper<pos:position pos:line="41" pos:column="28"/></name></name><argument_list pos:line="41" pos:column="28">()<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>

                <if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><call><name><name pos:line="43" pos:column="21">Ftp<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">::<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">SupportedCommand<pos:position pos:line="43" pos:column="42"/></name></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">cmd<pos:position pos:line="43" pos:column="46"/></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48"> <block pos:line="43" pos:column="49">{
                    <expr_stmt><expr><call><name><name pos:line="44" pos:column="21">featReply<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">header<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">.<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="39">addEntry<pos:position pos:line="44" pos:column="47"/></name></name><argument_list pos:line="44" pos:column="47">(<argument><expr><call><name><name pos:line="44" pos:column="48">e<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">-&gt;<pos:position pos:line="44" pos:column="54"/></operator><name pos:line="44" pos:column="51">clone<pos:position pos:line="44" pos:column="56"/></name></name><argument_list pos:line="44" pos:column="56">()<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
                }<pos:position pos:line="45" pos:column="18"/></block></then></if>

                <if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">cmd<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">==<pos:position pos:line="47" pos:column="27"/></operator> <call><name pos:line="47" pos:column="28">cmdEprt<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">()<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="38"/></condition><then pos:line="47" pos:column="38">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="21">hasEPRT<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <literal type="boolean" pos:line="48" pos:column="31">true<pos:position pos:line="48" pos:column="35"/></literal></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt></block></then>
                <elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><name pos:line="49" pos:column="26">cmd<pos:position pos:line="49" pos:column="29"/></name> <operator pos:line="49" pos:column="30">==<pos:position pos:line="49" pos:column="32"/></operator> <call><name pos:line="49" pos:column="33">cmdEpsv<pos:position pos:line="49" pos:column="40"/></name><argument_list pos:line="49" pos:column="40">()<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="21">hasEPSV<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">=<pos:position pos:line="50" pos:column="30"/></operator> <literal type="boolean" pos:line="50" pos:column="31">true<pos:position pos:line="50" pos:column="35"/></literal></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt></block></then></if></elseif></if>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></while>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if> <comment type="line" pos:line="53" pos:column="7">// else we got a FEAT error and will only report Squid-supported features</comment>

    <decl_stmt><decl><type><name pos:line="55" pos:column="5">char<pos:position pos:line="55" pos:column="9"/></name></type> <name><name pos:line="55" pos:column="10">buf<pos:position pos:line="55" pos:column="13"/></name><index pos:line="55" pos:column="13">[<expr><literal type="number" pos:line="55" pos:column="14">256<pos:position pos:line="55" pos:column="17"/></literal></expr>]<pos:position pos:line="55" pos:column="18"/></index></name></decl>;<pos:position pos:line="55" pos:column="19"/></decl_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><operator pos:line="56" pos:column="9">!<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">hasEPRT<pos:position pos:line="56" pos:column="17"/></name></expr>)<pos:position pos:line="56" pos:column="18"/></condition><then pos:line="56" pos:column="18"> <block pos:line="56" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">snprintf<pos:position pos:line="57" pos:column="17"/></name><argument_list pos:line="57" pos:column="17">(<argument><expr><name pos:line="57" pos:column="18">buf<pos:position pos:line="57" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="23">sizeof<argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">buf<pos:position pos:line="57" pos:column="33"/></name></expr></argument>)<pos:position pos:line="57" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="36">"\"%*s\""<pos:position pos:line="57" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="47">prependSpaces<pos:position pos:line="57" pos:column="60"/></name> <operator pos:line="57" pos:column="61">+<pos:position pos:line="57" pos:column="62"/></operator> <literal type="number" pos:line="57" pos:column="63">4<pos:position pos:line="57" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="66">"EPRT"<pos:position pos:line="57" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">featReply<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">-&gt;<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="20">header<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">.<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="27">putStr<pos:position pos:line="58" pos:column="33"/></name></name><argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">HDR_FTP_PRE<pos:position pos:line="58" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="47">buf<pos:position pos:line="58" pos:column="50"/></name></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><operator pos:line="60" pos:column="9">!<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">hasEPSV<pos:position pos:line="60" pos:column="17"/></name></expr>)<pos:position pos:line="60" pos:column="18"/></condition><then pos:line="60" pos:column="18"> <block pos:line="60" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">snprintf<pos:position pos:line="61" pos:column="17"/></name><argument_list pos:line="61" pos:column="17">(<argument><expr><name pos:line="61" pos:column="18">buf<pos:position pos:line="61" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="23">sizeof<argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">buf<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="36">"\"%*s\""<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="47">prependSpaces<pos:position pos:line="61" pos:column="60"/></name> <operator pos:line="61" pos:column="61">+<pos:position pos:line="61" pos:column="62"/></operator> <literal type="number" pos:line="61" pos:column="63">4<pos:position pos:line="61" pos:column="64"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="66">"EPSV"<pos:position pos:line="61" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="62" pos:column="9">featReply<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">-&gt;<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="20">header<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">putStr<pos:position pos:line="62" pos:column="33"/></name></name><argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">HDR_FTP_PRE<pos:position pos:line="62" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="47">buf<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="65" pos:column="5">featReply<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">header<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">.<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="23">refreshMask<pos:position pos:line="65" pos:column="34"/></name></name><argument_list pos:line="65" pos:column="34">()<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">writeForwardedReply<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><call><name><name pos:line="67" pos:column="25">featReply<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">getRaw<pos:position pos:line="67" pos:column="41"/></name></name><argument_list pos:line="67" pos:column="41">()<pos:position pos:line="67" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="45"/></expr_stmt>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

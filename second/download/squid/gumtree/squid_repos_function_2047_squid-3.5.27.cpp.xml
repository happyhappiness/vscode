<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2047_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SwapDir<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">&amp;<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name><name pos:line="2" pos:column="1">StoreHashIndex<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">dir<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">i<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list> <specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SwapDir<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">sd<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><cast type="dynamic" pos:line="4" pos:column="19">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="31">&lt;<argument><expr><name pos:line="4" pos:column="32">SwapDir<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="44"/></argument_list><argument_list pos:line="4" pos:column="41">(<argument><expr><call><name pos:line="4" pos:column="42">INDEXSD<pos:position pos:line="4" pos:column="49"/></name><argument_list pos:line="4" pos:column="49">(<argument><expr><name pos:line="4" pos:column="50">i<pos:position pos:line="4" pos:column="51"/></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">sd<pos:position pos:line="5" pos:column="14"/></name></expr></argument>)<pos:position pos:line="5" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">sd<pos:position pos:line="6" pos:column="15"/></name></expr>;<pos:position pos:line="6" pos:column="16"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2212_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">wroteLast<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">CommIoCbParams<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">io<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">11<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="27">serverConnection<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <literal type="string" pos:line="4" pos:column="47">": size "<pos:position pos:line="4" pos:column="56"/></literal> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <name><name pos:line="4" pos:column="60">io<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">.<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="63">size<pos:position pos:line="4" pos:column="67"/></name></name> <operator pos:line="4" pos:column="68">&lt;&lt;<pos:position pos:line="4" pos:column="76"/></operator> <literal type="string" pos:line="4" pos:column="71">": errflag "<pos:position pos:line="4" pos:column="83"/></literal> <operator pos:line="4" pos:column="84">&lt;&lt;<pos:position pos:line="4" pos:column="92"/></operator> <name><name pos:line="4" pos:column="87">io<pos:position pos:line="4" pos:column="89"/></name><operator pos:line="4" pos:column="89">.<pos:position pos:line="4" pos:column="90"/></operator><name pos:line="4" pos:column="90">flag<pos:position pos:line="4" pos:column="94"/></name></name> <operator pos:line="4" pos:column="95">&lt;&lt;<pos:position pos:line="4" pos:column="103"/></operator> <literal type="string" pos:line="4" pos:column="98">"."<pos:position pos:line="4" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="103"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">URL_CHECKSUM_DEBUG<pos:position pos:line="5" pos:column="23"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">entry<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">mem_obj<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">checkUrlChecksum<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">io<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">size<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">&gt;<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="19">0<pos:position pos:line="10" pos:column="20"/></literal></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fd_bytes<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name><name pos:line="11" pos:column="18">io<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">.<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">fd<pos:position pos:line="11" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="25">io<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">size<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">FD_WRITE<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">kb_incr<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><operator pos:line="12" pos:column="17">&amp;<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="18">(<pos:position pos:line="12" pos:column="19"/></operator><name><name pos:line="12" pos:column="19">statCounter<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">server<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">all<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">kbytes_out<pos:position pos:line="12" pos:column="52"/></name></name><operator pos:line="12" pos:column="52">)<pos:position pos:line="12" pos:column="53"/></operator></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="55">io<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">.<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">size<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">kb_incr<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="19">statCounter<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">server<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">http<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">kbytes_out<pos:position pos:line="13" pos:column="53"/></name></name><operator pos:line="13" pos:column="53">)<pos:position pos:line="13" pos:column="54"/></operator></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="56">io<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">.<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">size<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">io<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">flag<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">==<pos:position pos:line="16" pos:column="19"/></operator> <name><name pos:line="16" pos:column="20">Comm<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">::<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">ERR_CLOSING<pos:position pos:line="16" pos:column="37"/></name></name></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38">
        <block type="pseudo"><return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">io<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">flag<pos:position pos:line="19" pos:column="16"/></name></name></expr>)<pos:position pos:line="19" pos:column="17"/></condition><then pos:line="19" pos:column="17"> <block pos:line="19" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">ErrorState<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">err<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><operator pos:line="20" pos:column="27">new<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">ErrorState<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">ERR_WRITE_ERROR<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="59">Http<pos:position pos:line="20" pos:column="63"/></name><operator pos:line="20" pos:column="63">::<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="65">scBadGateway<pos:position pos:line="20" pos:column="77"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="79">fwd<pos:position pos:line="20" pos:column="82"/></name><operator pos:line="20" pos:column="82">-&gt;<pos:position pos:line="20" pos:column="87"/></operator><name pos:line="20" pos:column="84">request<pos:position pos:line="20" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="93"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">err<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">xerrno<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name><name pos:line="21" pos:column="23">io<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">xerrno<pos:position pos:line="21" pos:column="32"/></name></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">fwd<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">fail<pos:position pos:line="22" pos:column="18"/></name></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">err<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">closeServer<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">()<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">mustStop<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><literal type="string" pos:line="24" pos:column="18">"HttpStateData::wroteLast"<pos:position pos:line="24" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">sendComplete<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">()<pos:position pos:line="28" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

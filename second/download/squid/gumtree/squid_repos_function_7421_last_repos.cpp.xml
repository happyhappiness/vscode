<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7421_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">tls_write_method<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">fd<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">buf<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">len<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">auto<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">session<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name><name pos:line="4" pos:column="20">fd_table<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[<expr><name pos:line="4" pos:column="29">fd<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><call><name><name pos:line="4" pos:column="33">ssl<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">.<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">get<pos:position pos:line="4" pos:column="40"/></name></name><argument_list pos:line="4" pos:column="40">()<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">83<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"started for session="<pos:position pos:line="5" pos:column="41"/></literal> <operator pos:line="5" pos:column="42">&lt;&lt;<pos:position pos:line="5" pos:column="50"/></operator> <operator pos:line="5" pos:column="45">(<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">void<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></operator><operator pos:line="5" pos:column="51">)<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">session<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">USE_OPENSSL<pos:position pos:line="7" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">SSL_is_init_finished<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">session<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block pos:line="8" pos:column="41">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">errno<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">ENOTCONN<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">-<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">USE_OPENSSL<pos:position pos:line="14" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">i<pos:position pos:line="15" pos:column="10"/></name> <init pos:line="15" pos:column="11">= <expr><call><name pos:line="15" pos:column="13">SSL_write<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">session<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">buf<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="37">len<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="42"/></decl_stmt>
<cpp:elif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">elif<pos:position pos:line="16" pos:column="6"/></cpp:directive> <expr><name pos:line="16" pos:column="7">USE_GNUTLS<pos:position pos:line="16" pos:column="17"/></name></expr></cpp:elif>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">i<pos:position pos:line="17" pos:column="10"/></name> <init pos:line="17" pos:column="11">= <expr><call><name pos:line="17" pos:column="13">gnutls_record_send<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">session<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">buf<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">len<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="51"/></decl_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">i<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">&gt;<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal></expr>)<pos:position pos:line="20" pos:column="15"/></condition><then pos:line="20" pos:column="15"> <block pos:line="20" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">83<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">8<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"TLS FD "<pos:position pos:line="21" pos:column="32"/></literal> <operator pos:line="21" pos:column="33">&lt;&lt;<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="36">fd<pos:position pos:line="21" pos:column="38"/></name> <operator pos:line="21" pos:column="39">&lt;&lt;<pos:position pos:line="21" pos:column="47"/></operator> <literal type="string" pos:line="21" pos:column="42">" session="<pos:position pos:line="21" pos:column="53"/></literal> <operator pos:line="21" pos:column="54">&lt;&lt;<pos:position pos:line="21" pos:column="62"/></operator> <operator pos:line="21" pos:column="57">(<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">void<pos:position pos:line="21" pos:column="62"/></name><operator pos:line="21" pos:column="62">*<pos:position pos:line="21" pos:column="63"/></operator><operator pos:line="21" pos:column="63">)<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="64">session<pos:position pos:line="21" pos:column="71"/></name> <operator pos:line="21" pos:column="72">&lt;&lt;<pos:position pos:line="21" pos:column="80"/></operator> <literal type="string" pos:line="21" pos:column="75">" "<pos:position pos:line="21" pos:column="78"/></literal> <operator pos:line="21" pos:column="79">&lt;&lt;<pos:position pos:line="21" pos:column="87"/></operator> <name pos:line="21" pos:column="82">i<pos:position pos:line="21" pos:column="83"/></name> <operator pos:line="21" pos:column="84">&lt;&lt;<pos:position pos:line="21" pos:column="92"/></operator> <literal type="string" pos:line="21" pos:column="87">" bytes"<pos:position pos:line="21" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="97"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">i<pos:position pos:line="23" pos:column="13"/></name></expr>;<pos:position pos:line="23" pos:column="14"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

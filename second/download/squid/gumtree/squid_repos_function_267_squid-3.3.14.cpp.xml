<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_267_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">clean_args<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name><name pos:line="2" pos:column="12">struct<pos:position pos:line="2" pos:column="18"/></name> <name pos:line="2" pos:column="19">main_args<pos:position pos:line="2" pos:column="28"/></name></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">margs<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">margs<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">-&gt;<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="16">glist<pos:position pos:line="4" pos:column="21"/></name></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <block pos:line="4" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">xfree<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name><name pos:line="5" pos:column="15">margs<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">glist<pos:position pos:line="5" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">margs<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">glist<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">margs<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">ulist<pos:position pos:line="8" pos:column="21"/></name></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block pos:line="8" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">xfree<pos:position pos:line="9" pos:column="14"/></name><argument_list pos:line="9" pos:column="14">(<argument><expr><name><name pos:line="9" pos:column="15">margs<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">ulist<pos:position pos:line="9" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">margs<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">ulist<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">margs<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">tlist<pos:position pos:line="12" pos:column="21"/></name></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">xfree<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">margs<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">tlist<pos:position pos:line="13" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">margs<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">tlist<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">NULL<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">margs<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">nlist<pos:position pos:line="16" pos:column="21"/></name></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">xfree<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">margs<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">nlist<pos:position pos:line="17" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">margs<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">nlist<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">margs<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">llist<pos:position pos:line="20" pos:column="21"/></name></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22"> <block pos:line="20" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">xfree<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name><name pos:line="21" pos:column="15">margs<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">llist<pos:position pos:line="21" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">margs<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">llist<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">NULL<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">margs<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">luser<pos:position pos:line="24" pos:column="21"/></name></name></expr>)<pos:position pos:line="24" pos:column="22"/></condition><then pos:line="24" pos:column="22"> <block pos:line="24" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">xfree<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><name><name pos:line="25" pos:column="15">margs<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">luser<pos:position pos:line="25" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">margs<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">luser<pos:position pos:line="26" pos:column="21"/></name></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">margs<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">lpass<pos:position pos:line="28" pos:column="21"/></name></name></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">xfree<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">margs<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">lpass<pos:position pos:line="29" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">margs<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">lpass<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">margs<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">lbind<pos:position pos:line="32" pos:column="21"/></name></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22"> <block pos:line="32" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">xfree<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><name><name pos:line="33" pos:column="15">margs<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">lbind<pos:position pos:line="33" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">margs<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">lbind<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="24">NULL<pos:position pos:line="34" pos:column="28"/></name></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">margs<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">lurl<pos:position pos:line="36" pos:column="20"/></name></name></expr>)<pos:position pos:line="36" pos:column="21"/></condition><then pos:line="36" pos:column="21"> <block pos:line="36" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">xfree<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name><name pos:line="37" pos:column="15">margs<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">lurl<pos:position pos:line="37" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">margs<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">lurl<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">NULL<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">margs<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">ssl<pos:position pos:line="40" pos:column="19"/></name></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">xfree<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">(<argument><expr><name><name pos:line="41" pos:column="15">margs<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">ssl<pos:position pos:line="41" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">margs<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">ssl<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">NULL<pos:position pos:line="42" pos:column="26"/></name></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">margs<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">ddomain<pos:position pos:line="44" pos:column="23"/></name></name></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24"> <block pos:line="44" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">xfree<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name><name pos:line="45" pos:column="15">margs<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">ddomain<pos:position pos:line="45" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">margs<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">-&gt;<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="16">ddomain<pos:position pos:line="46" pos:column="23"/></name></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">NULL<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">margs<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">-&gt;<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="16">groups<pos:position pos:line="48" pos:column="22"/></name></name></expr>)<pos:position pos:line="48" pos:column="23"/></condition><then pos:line="48" pos:column="23"> <block pos:line="48" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">clean_gd<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name><name pos:line="49" pos:column="18">margs<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">groups<pos:position pos:line="49" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">margs<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">groups<pos:position pos:line="50" pos:column="22"/></name></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <name pos:line="50" pos:column="25">NULL<pos:position pos:line="50" pos:column="29"/></name></expr>;<pos:position pos:line="50" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name><name pos:line="52" pos:column="9">margs<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">ndoms<pos:position pos:line="52" pos:column="21"/></name></name></expr>)<pos:position pos:line="52" pos:column="22"/></condition><then pos:line="52" pos:column="22"> <block pos:line="52" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">clean_nd<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><name><name pos:line="53" pos:column="18">margs<pos:position pos:line="53" pos:column="23"/></name><operator pos:line="53" pos:column="23">-&gt;<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="25">ndoms<pos:position pos:line="53" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">margs<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">ndoms<pos:position pos:line="54" pos:column="21"/></name></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <name pos:line="54" pos:column="24">NULL<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">margs<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">-&gt;<pos:position pos:line="56" pos:column="19"/></operator><name pos:line="56" pos:column="16">lservs<pos:position pos:line="56" pos:column="22"/></name></name></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23"> <block pos:line="56" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">clean_ls<pos:position pos:line="57" pos:column="17"/></name><argument_list pos:line="57" pos:column="17">(<argument><expr><name><name pos:line="57" pos:column="18">margs<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">lservs<pos:position pos:line="57" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">margs<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">lservs<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">NULL<pos:position pos:line="58" pos:column="29"/></name></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

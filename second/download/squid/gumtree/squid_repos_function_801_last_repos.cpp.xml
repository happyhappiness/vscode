<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_801_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_refreshpattern<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">StoreEntry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">entry<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">name<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">RefreshPattern<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="76">head<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><name pos:line="4" pos:column="12">head<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">!=<pos:position pos:line="4" pos:column="19"/></operator> <name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr>)<pos:position pos:line="4" pos:column="25"/></condition> <block pos:line="4" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">storeAppendPrintf<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">entry<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"%s%s %s %d %d%% %d"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>,
                          <argument><expr><name pos:line="6" pos:column="27">name<pos:position pos:line="6" pos:column="31"/></name></expr></argument>,
                          <argument><expr><ternary><condition><expr><name><name pos:line="7" pos:column="27">head<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">pattern<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">.<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">flags<pos:position pos:line="7" pos:column="46"/></name></name><operator pos:line="7" pos:column="46">&amp;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="47">REG_ICASE<pos:position pos:line="7" pos:column="56"/></name></expr> ?<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58"> <expr><literal type="string" pos:line="7" pos:column="59">" -i"<pos:position pos:line="7" pos:column="64"/></literal></expr> <pos:position pos:line="7" pos:column="65"/></then><else pos:line="7" pos:column="65">: <expr><name pos:line="7" pos:column="67">null_string<pos:position pos:line="7" pos:column="78"/></name></expr></else></ternary></expr></argument>,
                          <argument><expr><call><name><name pos:line="8" pos:column="27">head<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">pattern<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">c_str<pos:position pos:line="8" pos:column="46"/></name></name><argument_list pos:line="8" pos:column="46">()<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></argument>,
                          <argument><expr><operator pos:line="9" pos:column="27">(<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">int<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator> <name><name pos:line="9" pos:column="33">head<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">min<pos:position pos:line="9" pos:column="42"/></name></name> <operator pos:line="9" pos:column="43">/<pos:position pos:line="9" pos:column="44"/></operator> <literal type="number" pos:line="9" pos:column="45">60<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>,
                          <argument><expr><call pos:line="10" pos:column="27">(<name pos:line="10" pos:column="28">int<pos:position pos:line="10" pos:column="31"/></name>) <argument_list pos:line="10" pos:column="33">(<argument><expr><literal type="number" pos:line="10" pos:column="34">100.0<pos:position pos:line="10" pos:column="39"/></literal> <operator pos:line="10" pos:column="40">*<pos:position pos:line="10" pos:column="41"/></operator> <name><name pos:line="10" pos:column="42">head<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">pct<pos:position pos:line="10" pos:column="51"/></name></name> <operator pos:line="10" pos:column="52">+<pos:position pos:line="10" pos:column="53"/></operator> <literal type="number" pos:line="10" pos:column="54">0.5<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr></argument>,
                          <argument><expr><operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">int<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">head<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">max<pos:position pos:line="11" pos:column="42"/></name></name> <operator pos:line="11" pos:column="43">/<pos:position pos:line="11" pos:column="44"/></operator> <literal type="number" pos:line="11" pos:column="45">60<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">head<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">max_stale<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">&gt;=<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="32">0<pos:position pos:line="13" pos:column="33"/></literal></expr>)<pos:position pos:line="13" pos:column="34"/></condition><then pos:line="13" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="13">storeAppendPrintf<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">entry<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">" max-stale=%d"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="55">head<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">max_stale<pos:position pos:line="14" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt></block></then></if>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">head<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">flags<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">refresh_ims<pos:position pos:line="16" pos:column="36"/></name></name></expr>)<pos:position pos:line="16" pos:column="37"/></condition><then pos:line="16" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">storeAppendPrintf<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">entry<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="38">" refresh-ims"<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt></block></then></if>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">head<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">flags<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">store_stale<pos:position pos:line="19" pos:column="36"/></name></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="13">storeAppendPrintf<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">entry<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="38">" store-stale"<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt></block></then></if>

<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="22" pos:column="24"/></name></expr></cpp:if>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">head<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">flags<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">override_expire<pos:position pos:line="24" pos:column="40"/></name></name></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">storeAppendPrintf<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">entry<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="38">" override-expire"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt></block></then></if>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">head<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">flags<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">.<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">override_lastmod<pos:position pos:line="27" pos:column="41"/></name></name></expr>)<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">storeAppendPrintf<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">entry<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="38">" override-lastmod"<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt></block></then></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">head<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">flags<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">reload_into_ims<pos:position pos:line="30" pos:column="40"/></name></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">storeAppendPrintf<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">entry<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="38">" reload-into-ims"<pos:position pos:line="31" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt></block></then></if>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">head<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">flags<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">ignore_reload<pos:position pos:line="33" pos:column="38"/></name></name></expr>)<pos:position pos:line="33" pos:column="39"/></condition><then pos:line="33" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">storeAppendPrintf<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">entry<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="38">" ignore-reload"<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="56"/></expr_stmt></block></then></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">head<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">flags<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">ignore_no_store<pos:position pos:line="36" pos:column="40"/></name></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">storeAppendPrintf<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">entry<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="38">" ignore-no-store"<pos:position pos:line="37" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">head<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">flags<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">.<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="25">ignore_private<pos:position pos:line="39" pos:column="39"/></name></name></expr>)<pos:position pos:line="39" pos:column="40"/></condition><then pos:line="39" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="13">storeAppendPrintf<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">entry<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="38">" ignore-private"<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="43" pos:column="9">storeAppendPrintf<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">entry<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"\n"<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name pos:line="45" pos:column="9">head<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name><name pos:line="45" pos:column="16">head<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">next<pos:position pos:line="45" pos:column="26"/></name></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></while>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

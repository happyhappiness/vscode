<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4046_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">SupportedVersion<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">vTheir<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">them<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">vTheir<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">||<pos:position pos:line="4" pos:column="19"/></operator> <operator pos:line="4" pos:column="20">!<pos:position pos:line="4" pos:column="21"/></operator><operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">vTheir<pos:position pos:line="4" pos:column="28"/></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">93<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">DBG_CRITICAL<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"ERROR: Cannot use "<pos:position pos:line="5" pos:column="54"/></literal> <operator pos:line="5" pos:column="55">&lt;&lt;<pos:position pos:line="5" pos:column="63"/></operator> <name pos:line="5" pos:column="58">them<pos:position pos:line="5" pos:column="62"/></name> <operator pos:line="5" pos:column="63">&lt;&lt;<pos:position pos:line="5" pos:column="71"/></operator>
               <literal type="string" pos:line="6" pos:column="16">" with libecap prior to v1.0."<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">false<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// we support what we are built with</comment>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">SBuf<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">vSupported<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">LIBECAP_VERSION<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">93<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">2<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">them<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">&lt;&lt;<pos:position pos:line="12" pos:column="32"/></operator> <literal type="string" pos:line="12" pos:column="27">" with libecap v"<pos:position pos:line="12" pos:column="44"/></literal> <operator pos:line="12" pos:column="45">&lt;&lt;<pos:position pos:line="12" pos:column="53"/></operator> <name pos:line="12" pos:column="48">vTheir<pos:position pos:line="12" pos:column="54"/></name> <operator pos:line="12" pos:column="55">&lt;&lt;<pos:position pos:line="12" pos:column="63"/></operator> <literal type="string" pos:line="12" pos:column="58">"; us: v"<pos:position pos:line="12" pos:column="67"/></literal> <operator pos:line="12" pos:column="68">&lt;&lt;<pos:position pos:line="12" pos:column="76"/></operator> <name pos:line="12" pos:column="71">vSupported<pos:position pos:line="12" pos:column="81"/></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="83"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">EssentialVersion<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><call><name pos:line="14" pos:column="26">SBuf<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">vTheir<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <call><name pos:line="14" pos:column="43">EssentialVersion<pos:position pos:line="14" pos:column="59"/></name><argument_list pos:line="14" pos:column="59">(<argument><expr><name pos:line="14" pos:column="60">vSupported<pos:position pos:line="14" pos:column="70"/></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="72"/></condition><then pos:line="14" pos:column="72">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">true<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if> <comment type="line" pos:line="15" pos:column="22">// their version is supported</comment>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">93<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="16">DBG_CRITICAL<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"ERROR: Cannot use "<pos:position pos:line="17" pos:column="50"/></literal> <operator pos:line="17" pos:column="51">&lt;&lt;<pos:position pos:line="17" pos:column="59"/></operator> <name pos:line="17" pos:column="54">them<pos:position pos:line="17" pos:column="58"/></name> <operator pos:line="17" pos:column="59">&lt;&lt;<pos:position pos:line="17" pos:column="67"/></operator>
           <literal type="string" pos:line="18" pos:column="12">" with libecap v"<pos:position pos:line="18" pos:column="29"/></literal> <operator pos:line="18" pos:column="30">&lt;&lt;<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="33">vTheir<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">&lt;&lt;<pos:position pos:line="18" pos:column="48"/></operator>
           <literal type="string" pos:line="19" pos:column="12">": incompatible with supported libecap v"<pos:position pos:line="19" pos:column="53"/></literal> <operator pos:line="19" pos:column="54">&lt;&lt;<pos:position pos:line="19" pos:column="62"/></operator> <name pos:line="19" pos:column="57">vSupported<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><literal type="boolean" pos:line="20" pos:column="12">false<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

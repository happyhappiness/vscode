<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5825_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Basic<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">Config<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">parse<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name><name pos:line="2" pos:column="28">Auth<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">Config<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">scheme<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">n_configured<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">param_str<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strcmp<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">param_str<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"credentialsttl"<pos:position pos:line="4" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call> <operator pos:line="4" pos:column="45">==<pos:position pos:line="4" pos:column="47"/></operator> <literal type="number" pos:line="4" pos:column="48">0<pos:position pos:line="4" pos:column="49"/></literal></expr>)<pos:position pos:line="4" pos:column="50"/></condition><then pos:line="4" pos:column="50"> <block pos:line="4" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">parse_time_t<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">&amp;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="23">credentialsTTL<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then> <elseif pos:line="6" pos:column="7">else <if pos:line="6" pos:column="12">if <condition pos:line="6" pos:column="15">(<expr><call><name pos:line="6" pos:column="16">strcmp<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><name pos:line="6" pos:column="23">param_str<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"casesensitive"<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call> <operator pos:line="6" pos:column="51">==<pos:position pos:line="6" pos:column="53"/></operator> <literal type="number" pos:line="6" pos:column="54">0<pos:position pos:line="6" pos:column="55"/></literal></expr>)<pos:position pos:line="6" pos:column="56"/></condition><then pos:line="6" pos:column="56"> <block pos:line="6" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">parse_onoff<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><operator pos:line="7" pos:column="21">&amp;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="22">casesensitive<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if></elseif> <elseif pos:line="8" pos:column="7">else <if pos:line="8" pos:column="12">if <condition pos:line="8" pos:column="15">(<expr><call><name pos:line="8" pos:column="16">strcmp<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">param_str<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"utf8"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47"> <block pos:line="8" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">parse_onoff<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="22">utf8<pos:position pos:line="9" pos:column="26"/></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if></elseif> <else pos:line="10" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="11" pos:column="9">Auth<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">::<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">Config<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">::<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="23">parse<pos:position pos:line="11" pos:column="28"/></name></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">scheme<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">n_configured<pos:position pos:line="11" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">param_str<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt></block></else></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2365_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsTickleQueue<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">event_queued<pos:position pos:line="4" pos:column="21"/></name></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">NULL<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">lru_list<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">tail<pos:position pos:line="7" pos:column="30"/></name></name></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">double<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">when<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><call><name pos:line="10" pos:column="25">min<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">Config<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">.<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">Timeout<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">.<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">idns_query<pos:position pos:line="10" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="56">Config<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">.<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">Timeout<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">.<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">idns_retransmit<pos:position pos:line="10" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="87"/></argument_list></call><operator pos:line="10" pos:column="87">/<pos:position pos:line="10" pos:column="88"/></operator><literal type="number" pos:line="10" pos:column="88">1000.0<pos:position pos:line="10" pos:column="94"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="95"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">eventAdd<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"idnsCheckQueue"<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="32">idnsCheckQueue<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">NULL<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="54">when<pos:position pos:line="12" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="60">1<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><name pos:line="14" pos:column="5">event_queued<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="20">1<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4493_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">initialize_session_cache<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name pos:line="5" pos:column="10">isSslServer<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">()<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <comment type="line" pos:line="5" pos:column="25">//no need to configure ssl session cache.</comment>
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="8" pos:column="5">// Check if the MemMap keys and data are enough big to hold</comment>
    <comment type="line" pos:line="9" pos:column="5">// session ids and session data</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">SSL_SESSION_ID_SIZE<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&gt;=<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="35">MEMMAP_SLOT_KEY_SIZE<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">SSL_SESSION_MAX_SIZE<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">&gt;=<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="36">MEMMAP_SLOT_DATA_SIZE<pos:position pos:line="11" pos:column="57"/></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">configuredItems<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><name><operator pos:line="13" pos:column="27">::<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">Config<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">.<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">SSL<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">sessionCacheSize<pos:position pos:line="13" pos:column="56"/></name></name> <operator pos:line="13" pos:column="57">/<pos:position pos:line="13" pos:column="58"/></operator> <sizeof pos:line="13" pos:column="59">sizeof<argument_list pos:line="13" pos:column="65">(<argument><expr><name><name pos:line="13" pos:column="66">Ipc<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">::<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="71">MemMap<pos:position pos:line="13" pos:column="77"/></name><operator pos:line="13" pos:column="77">::<pos:position pos:line="13" pos:column="79"/></operator><name pos:line="13" pos:column="79">Slot<pos:position pos:line="13" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="84"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="13" pos:column="85"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">IamWorkerProcess<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">()<pos:position pos:line="14" pos:column="27"/></argument_list></call> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="31">configuredItems<pos:position pos:line="14" pos:column="46"/></name></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">SslSessionCache<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">new<pos:position pos:line="15" pos:column="30"/></operator> <call><name><name pos:line="15" pos:column="31">Ipc<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">::<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">MemMap<pos:position pos:line="15" pos:column="42"/></name></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">SslSessionCacheName<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt></block></then>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">SslSessionCache<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><decl><type><name><name pos:line="21" pos:column="10">AnyP<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">::<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">PortCfgPointer<pos:position pos:line="21" pos:column="30"/></name></name></type> <name pos:line="21" pos:column="31">s<pos:position pos:line="21" pos:column="32"/></name> <init pos:line="21" pos:column="33">= <expr><name pos:line="21" pos:column="35">HttpsPortList<pos:position pos:line="21" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="49"/></init> <condition><expr><name pos:line="21" pos:column="50">s<pos:position pos:line="21" pos:column="51"/></name> <operator pos:line="21" pos:column="52">!=<pos:position pos:line="21" pos:column="54"/></operator> <name pos:line="21" pos:column="55">NULL<pos:position pos:line="21" pos:column="59"/></name></expr>;<pos:position pos:line="21" pos:column="60"/></condition> <incr><expr><name pos:line="21" pos:column="61">s<pos:position pos:line="21" pos:column="62"/></name> <operator pos:line="21" pos:column="63">=<pos:position pos:line="21" pos:column="64"/></operator> <name><name pos:line="21" pos:column="65">s<pos:position pos:line="21" pos:column="66"/></name><operator pos:line="21" pos:column="66">-&gt;<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="68">next<pos:position pos:line="21" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="73"/></control> <block pos:line="21" pos:column="74">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name><name pos:line="22" pos:column="13">s<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">staticSslContext<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">.<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">get<pos:position pos:line="22" pos:column="36"/></name></name><argument_list pos:line="22" pos:column="36">()<pos:position pos:line="22" pos:column="38"/></argument_list></call> <operator pos:line="22" pos:column="39">!=<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">NULL<pos:position pos:line="22" pos:column="46"/></name></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="13">setSessionCallbacks<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><call><name><name pos:line="23" pos:column="33">s<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">staticSslContext<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">.<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">get<pos:position pos:line="23" pos:column="56"/></name></name><argument_list pos:line="23" pos:column="56">()<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt></block></then></if>
    }<pos:position pos:line="24" pos:column="6"/></block></for>

    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><decl><type><name><name pos:line="26" pos:column="10">AnyP<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">::<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">PortCfgPointer<pos:position pos:line="26" pos:column="30"/></name></name></type> <name pos:line="26" pos:column="31">s<pos:position pos:line="26" pos:column="32"/></name> <init pos:line="26" pos:column="33">= <expr><name pos:line="26" pos:column="35">HttpPortList<pos:position pos:line="26" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="48"/></init> <condition><expr><name pos:line="26" pos:column="49">s<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">!=<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="54">NULL<pos:position pos:line="26" pos:column="58"/></name></expr>;<pos:position pos:line="26" pos:column="59"/></condition> <incr><expr><name pos:line="26" pos:column="60">s<pos:position pos:line="26" pos:column="61"/></name> <operator pos:line="26" pos:column="62">=<pos:position pos:line="26" pos:column="63"/></operator> <name><name pos:line="26" pos:column="64">s<pos:position pos:line="26" pos:column="65"/></name><operator pos:line="26" pos:column="65">-&gt;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="67">next<pos:position pos:line="26" pos:column="71"/></name></name></expr></incr>)<pos:position pos:line="26" pos:column="72"/></control> <block pos:line="26" pos:column="73">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name><name pos:line="27" pos:column="13">s<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">staticSslContext<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">.<pos:position pos:line="27" pos:column="33"/></operator><name pos:line="27" pos:column="33">get<pos:position pos:line="27" pos:column="36"/></name></name><argument_list pos:line="27" pos:column="36">()<pos:position pos:line="27" pos:column="38"/></argument_list></call> <operator pos:line="27" pos:column="39">!=<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">NULL<pos:position pos:line="27" pos:column="46"/></name></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">setSessionCallbacks<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><call><name><name pos:line="28" pos:column="33">s<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">staticSslContext<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">get<pos:position pos:line="28" pos:column="56"/></name></name><argument_list pos:line="28" pos:column="56">()<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></for>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1672_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClassCBucket<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">stats<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">StoreEntry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">sentry<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">unsigned<pos:position pos:line="4" pos:column="18"/></name> <name pos:line="4" pos:column="19">int<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">j<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></init> <condition><expr><name pos:line="4" pos:column="30">j<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&lt;<pos:position pos:line="4" pos:column="36"/></operator> <call><name><name pos:line="4" pos:column="34">individuals<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">.<pos:position pos:line="4" pos:column="46"/></operator><name pos:line="4" pos:column="46">size<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></condition> <incr><expr><operator pos:line="4" pos:column="54">++<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">j<pos:position pos:line="4" pos:column="57"/></name></expr></incr>)<pos:position pos:line="4" pos:column="58"/></control> <block pos:line="4" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">assert<pos:position pos:line="5" pos:column="15"/></name> <argument_list pos:line="5" pos:column="16">(<argument><expr><call><name pos:line="5" pos:column="17">individualUsed<pos:position pos:line="5" pos:column="31"/></name> <argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">j<pos:position pos:line="5" pos:column="34"/></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">storeAppendPrintf<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">sentry<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="35">" %d:"<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>,<argument><expr><name><name pos:line="6" pos:column="42">individuals<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">.<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">key_map<pos:position pos:line="6" pos:column="61"/></name><index pos:line="6" pos:column="61">[<expr><name pos:line="6" pos:column="62">j<pos:position pos:line="6" pos:column="63"/></name></expr>]<pos:position pos:line="6" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">individuals<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">values<pos:position pos:line="7" pos:column="27"/></name><index pos:line="7" pos:column="27">[<expr><name pos:line="7" pos:column="28">j<pos:position pos:line="7" pos:column="29"/></name></expr>]<pos:position pos:line="7" pos:column="30"/></index></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><call><name pos:line="7" pos:column="31">stats<pos:position pos:line="7" pos:column="36"/></name> <argument_list pos:line="7" pos:column="37">(<argument><expr><name pos:line="7" pos:column="38">sentry<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

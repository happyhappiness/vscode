<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4272_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">parse_options<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">options<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">long<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">op<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">tmp<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">option<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">options<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
        <block type="pseudo"><goto pos:line="9" pos:column="9">goto <name pos:line="9" pos:column="14">no_options<pos:position pos:line="9" pos:column="24"/></name>;<pos:position pos:line="9" pos:column="25"/></goto></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">tmp<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <call><name pos:line="11" pos:column="11">xstrdup<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">options<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">option<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strtok<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">tmp<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">":,"<pos:position pos:line="13" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>

    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><name pos:line="15" pos:column="12">option<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition> <block pos:line="15" pos:column="20">{

        <decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">ssl_option<pos:position pos:line="17" pos:column="26"/></name></name> <modifier pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></modifier></type><name pos:line="17" pos:column="28">opt<pos:position pos:line="17" pos:column="31"/></name> <init pos:line="17" pos:column="32">= <expr><name pos:line="17" pos:column="34">NULL<pos:position pos:line="17" pos:column="38"/></name></expr></init></decl>, <modifier pos:line="17" pos:column="40">*<pos:position pos:line="17" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="41">opttmp<pos:position pos:line="17" pos:column="47"/></name></decl>;<pos:position pos:line="17" pos:column="48"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">long<pos:position pos:line="18" pos:column="13"/></name></type> <name pos:line="18" pos:column="14">value<pos:position pos:line="18" pos:column="19"/></name> <init pos:line="18" pos:column="20">= <expr><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>
        <enum pos:line="19" pos:column="9">enum <block pos:line="19" pos:column="14">{
            <decl><name pos:line="20" pos:column="13">MODE_ADD<pos:position pos:line="20" pos:column="21"/></name></decl>, <decl><name pos:line="20" pos:column="23">MODE_REMOVE<pos:position pos:line="20" pos:column="34"/></name></decl>
        }<pos:position pos:line="21" pos:column="10"/></block> <decl><name pos:line="21" pos:column="11">mode<pos:position pos:line="21" pos:column="15"/></name></decl>;<pos:position pos:line="21" pos:column="16"/></enum>

        <switch pos:line="23" pos:column="9">switch <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">option<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition> <block pos:line="23" pos:column="26">{

        <case pos:line="25" pos:column="9">case <expr><literal type="char" pos:line="25" pos:column="14">'!'<pos:position pos:line="25" pos:column="17"/></literal></expr>:<pos:position pos:line="25" pos:column="18"/></case>

        <case pos:line="27" pos:column="9">case <expr><literal type="char" pos:line="27" pos:column="14">'-'<pos:position pos:line="27" pos:column="17"/></literal></expr>:<pos:position pos:line="27" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="28" pos:column="13">mode<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">MODE_REMOVE<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="29" pos:column="13">++<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">option<pos:position pos:line="29" pos:column="21"/></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>

        <case pos:line="32" pos:column="9">case <expr><literal type="char" pos:line="32" pos:column="14">'+'<pos:position pos:line="32" pos:column="17"/></literal></expr>:<pos:position pos:line="32" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="33" pos:column="13">mode<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">MODE_ADD<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">option<pos:position pos:line="34" pos:column="21"/></name></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
            <break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break>

        <default pos:line="37" pos:column="9">default:<pos:position pos:line="37" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="38" pos:column="13">mode<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">MODE_ADD<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
            <break pos:line="39" pos:column="13">break;<pos:position pos:line="39" pos:column="19"/></break>
        }<pos:position pos:line="40" pos:column="10"/></block></switch>

        <for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">opttmp<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name pos:line="42" pos:column="23">ssl_options<pos:position pos:line="42" pos:column="34"/></name></expr>;<pos:position pos:line="42" pos:column="35"/></init> <condition><expr><name><name pos:line="42" pos:column="36">opttmp<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">name<pos:position pos:line="42" pos:column="48"/></name></name></expr>;<pos:position pos:line="42" pos:column="49"/></condition> <incr><expr><operator pos:line="42" pos:column="50">++<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">opttmp<pos:position pos:line="42" pos:column="58"/></name></expr></incr>)<pos:position pos:line="42" pos:column="59"/></control> <block pos:line="42" pos:column="60">{
            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><call><name pos:line="43" pos:column="17">strcmp<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">opttmp<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">name<pos:position pos:line="43" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">option<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call> <operator pos:line="43" pos:column="46">==<pos:position pos:line="43" pos:column="48"/></operator> <literal type="number" pos:line="43" pos:column="49">0<pos:position pos:line="43" pos:column="50"/></literal></expr>)<pos:position pos:line="43" pos:column="51"/></condition><then pos:line="43" pos:column="51"> <block pos:line="43" pos:column="52">{
                <expr_stmt><expr><name pos:line="44" pos:column="17">opt<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">opttmp<pos:position pos:line="44" pos:column="29"/></name></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
                <break pos:line="45" pos:column="17">break;<pos:position pos:line="45" pos:column="23"/></break>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
        }<pos:position pos:line="47" pos:column="10"/></block></for>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">opt<pos:position pos:line="49" pos:column="16"/></name></expr>)<pos:position pos:line="49" pos:column="17"/></condition><then pos:line="49" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="13">value<pos:position pos:line="50" pos:column="18"/></name> <operator pos:line="50" pos:column="19">=<pos:position pos:line="50" pos:column="20"/></operator> <name><name pos:line="50" pos:column="21">opt<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">value<pos:position pos:line="50" pos:column="31"/></name></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt></block></then>
        <elseif pos:line="51" pos:column="9">else <if pos:line="51" pos:column="14">if <condition pos:line="51" pos:column="17">(<expr><call><name pos:line="51" pos:column="18">strncmp<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">option<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="34">"0x"<pos:position pos:line="51" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="40">2<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call> <operator pos:line="51" pos:column="43">==<pos:position pos:line="51" pos:column="45"/></operator> <literal type="number" pos:line="51" pos:column="46">0<pos:position pos:line="51" pos:column="47"/></literal></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48"> <block pos:line="51" pos:column="49">{
            <comment type="block" pos:line="52" pos:column="13">/* Special case.. hex specification */</comment>
            <expr_stmt><expr><name pos:line="53" pos:column="13">value<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <call><name pos:line="53" pos:column="21">strtol<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><name pos:line="53" pos:column="28">option<pos:position pos:line="53" pos:column="34"/></name> <operator pos:line="53" pos:column="35">+<pos:position pos:line="53" pos:column="36"/></operator> <literal type="number" pos:line="53" pos:column="37">2<pos:position pos:line="53" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="40">NULL<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="46">16<pos:position pos:line="53" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if></elseif> <else pos:line="54" pos:column="11">else <block pos:line="54" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">fatalf<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="string" pos:line="55" pos:column="20">"Unknown SSL option '%s'"<pos:position pos:line="55" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">option<pos:position pos:line="55" pos:column="53"/></name></expr></argument>)<pos:position pos:line="55" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">value<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">=<pos:position pos:line="56" pos:column="20"/></operator> <literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>		<comment type="block" pos:line="56" pos:column="33">/* Keep GCC happy */</comment>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>

        <switch pos:line="59" pos:column="9">switch <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">mode<pos:position pos:line="59" pos:column="21"/></name></expr>)<pos:position pos:line="59" pos:column="22"/></condition> <block pos:line="59" pos:column="23">{

        <case pos:line="61" pos:column="9">case <expr><name pos:line="61" pos:column="14">MODE_ADD<pos:position pos:line="61" pos:column="22"/></name></expr>:<pos:position pos:line="61" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="62" pos:column="13">op<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">|=<pos:position pos:line="62" pos:column="18"/></operator> <name pos:line="62" pos:column="19">value<pos:position pos:line="62" pos:column="24"/></name></expr>;<pos:position pos:line="62" pos:column="25"/></expr_stmt>
            <break pos:line="63" pos:column="13">break;<pos:position pos:line="63" pos:column="19"/></break>

        <case pos:line="65" pos:column="9">case <expr><name pos:line="65" pos:column="14">MODE_REMOVE<pos:position pos:line="65" pos:column="25"/></name></expr>:<pos:position pos:line="65" pos:column="26"/></case>
            <expr_stmt><expr><name pos:line="66" pos:column="13">op<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">&amp;=<pos:position pos:line="66" pos:column="22"/></operator> <operator pos:line="66" pos:column="19">~<pos:position pos:line="66" pos:column="20"/></operator><name pos:line="66" pos:column="20">value<pos:position pos:line="66" pos:column="25"/></name></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
            <break pos:line="67" pos:column="13">break;<pos:position pos:line="67" pos:column="19"/></break>
        }<pos:position pos:line="68" pos:column="10"/></block></switch>

        <expr_stmt><expr><name pos:line="70" pos:column="9">option<pos:position pos:line="70" pos:column="15"/></name> <operator pos:line="70" pos:column="16">=<pos:position pos:line="70" pos:column="17"/></operator> <call><name pos:line="70" pos:column="18">strtok<pos:position pos:line="70" pos:column="24"/></name><argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">NULL<pos:position pos:line="70" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="31">":,"<pos:position pos:line="70" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">safe_free<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><name pos:line="73" pos:column="15">tmp<pos:position pos:line="73" pos:column="18"/></name></expr></argument>)<pos:position pos:line="73" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>

<label><name pos:line="75" pos:column="1">no_options<pos:position pos:line="75" pos:column="11"/></name>:<pos:position pos:line="75" pos:column="12"/></label>
    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">op<pos:position pos:line="76" pos:column="14"/></name></expr>;<pos:position pos:line="76" pos:column="15"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

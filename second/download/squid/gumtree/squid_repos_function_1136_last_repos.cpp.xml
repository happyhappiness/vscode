<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1136_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Downloader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">callBack<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Http<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">StatusCode<pos:position pos:line="2" pos:column="38"/></name></name> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier></type> <name pos:line="2" pos:column="45">statusCode<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CbDialer<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">dialer<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><cast type="dynamic" pos:line="4" pos:column="24">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="36">&lt;<argument><expr><name pos:line="4" pos:column="37">CbDialer<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="50"/></argument_list><argument_list pos:line="4" pos:column="47">(<argument><expr><call><name><name pos:line="4" pos:column="48">callback_<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">-&gt;<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="59">getDialer<pos:position pos:line="4" pos:column="68"/></name></name><argument_list pos:line="4" pos:column="68">()<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">dialer<pos:position pos:line="5" pos:column="16"/></name></expr></argument>)<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">dialer<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">statusCode<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">statusCode<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name><name pos:line="7" pos:column="23">Http<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">::<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">scOkay<pos:position pos:line="7" pos:column="35"/></name></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">dialer<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">object<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">object_<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ScheduleCallHere<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">callback_<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">callback_<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="null" pos:line="10" pos:column="17">nullptr<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

    <comment type="line" pos:line="12" pos:column="5">// We cannot deleteThis() because we may be called synchronously from</comment>
    <comment type="line" pos:line="13" pos:column="5">// doCallouts() via handleReply() (XXX), and doCallouts() may crash if we</comment>
    <comment type="line" pos:line="14" pos:column="5">// disappear. Instead, schedule an async call now so that later, when the</comment>
    <comment type="line" pos:line="15" pos:column="5">// call firing code discovers a done() job, it deletes us.</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">CallJobHere<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><literal type="number" pos:line="16" pos:column="17">33<pos:position pos:line="16" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="21">7<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="16" pos:column="24">CbcPointer<pos:position pos:line="16" pos:column="34"/></name><argument_list type="generic" pos:line="16" pos:column="34">&lt;<argument><expr><name pos:line="16" pos:column="35">Downloader<pos:position pos:line="16" pos:column="45"/></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="49"/></argument_list></name><argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">this<pos:position pos:line="16" pos:column="51"/></name></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">Downloader<pos:position pos:line="16" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="66">downloadFinished<pos:position pos:line="16" pos:column="82"/></name></expr></argument>)<pos:position pos:line="16" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="84"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

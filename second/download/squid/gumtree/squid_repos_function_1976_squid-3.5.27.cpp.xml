<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1976_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerNoteDigestLookup<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">HttpRequest<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">request<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">CachePeer<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type> <name pos:line="2" pos:column="57">p<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">lookup_t<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">lookup<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="4" pos:column="22"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></expr>)<pos:position pos:line="5" pos:column="11"/></condition><then pos:line="5" pos:column="11">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">strncpy<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name><name pos:line="6" pos:column="17">request<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">hier<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">.<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">cd_host<pos:position pos:line="6" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="40">p<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">host<pos:position pos:line="6" pos:column="47"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="49">sizeof<argument_list pos:line="6" pos:column="55">(<argument><expr><name><name pos:line="6" pos:column="56">request<pos:position pos:line="6" pos:column="63"/></name><operator pos:line="6" pos:column="63">-&gt;<pos:position pos:line="6" pos:column="68"/></operator><name pos:line="6" pos:column="65">hier<pos:position pos:line="6" pos:column="69"/></name><operator pos:line="6" pos:column="69">.<pos:position pos:line="6" pos:column="70"/></operator><name pos:line="6" pos:column="70">cd_host<pos:position pos:line="6" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></sizeof><operator pos:line="6" pos:column="78">-<pos:position pos:line="6" pos:column="79"/></operator><literal type="number" pos:line="6" pos:column="79">1<pos:position pos:line="6" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></expr_stmt></block></then>
    <else pos:line="7" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><operator pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">request<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">hier<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">cd_host<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <literal type="char" pos:line="8" pos:column="34">'\0'<pos:position pos:line="8" pos:column="38"/></literal></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">request<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">hier<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">cd_lookup<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name pos:line="10" pos:column="31">lookup<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">15<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">4<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"peerNoteDigestLookup: peer "<pos:position pos:line="11" pos:column="48"/></literal> <operator pos:line="11" pos:column="49">&lt;&lt;<pos:position pos:line="11" pos:column="57"/></operator> <operator pos:line="11" pos:column="52">(<pos:position pos:line="11" pos:column="53"/></operator><ternary><condition><expr><name pos:line="11" pos:column="53">p<pos:position pos:line="11" pos:column="54"/></name></expr>?<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55"> <expr><name><name pos:line="11" pos:column="56">p<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">-&gt;<pos:position pos:line="11" pos:column="62"/></operator><name pos:line="11" pos:column="59">host<pos:position pos:line="11" pos:column="63"/></name></name></expr> <pos:position pos:line="11" pos:column="64"/></then><else pos:line="11" pos:column="64">: <expr><literal type="string" pos:line="11" pos:column="66">"&lt;none&gt;"<pos:position pos:line="11" pos:column="80"/></literal></expr></else></ternary><operator pos:line="11" pos:column="74">)<pos:position pos:line="11" pos:column="75"/></operator> <operator pos:line="11" pos:column="76">&lt;&lt;<pos:position pos:line="11" pos:column="84"/></operator> <literal type="string" pos:line="11" pos:column="79">", lookup: "<pos:position pos:line="11" pos:column="91"/></literal> <operator pos:line="11" pos:column="92">&lt;&lt;<pos:position pos:line="11" pos:column="100"/></operator> <name><name pos:line="11" pos:column="95">lookup_t_str<pos:position pos:line="11" pos:column="107"/></name><index pos:line="11" pos:column="107">[<expr><name pos:line="11" pos:column="108">lookup<pos:position pos:line="11" pos:column="114"/></name></expr>]<pos:position pos:line="11" pos:column="115"/></index></name></expr></argument>  )<pos:position pos:line="11" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="119"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7462_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerOptions<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">parse<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">token<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
        <comment type="line" pos:line="5" pos:column="9">// config says just "ssl" or "tls" (or "tls-")</comment>
        <expr_stmt><expr><name pos:line="6" pos:column="9">encryptTransport<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <literal type="boolean" pos:line="6" pos:column="28">true<pos:position pos:line="6" pos:column="32"/></literal></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strncmp<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">token<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"disable"<pos:position pos:line="10" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="35">7<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call> <operator pos:line="10" pos:column="38">==<pos:position pos:line="10" pos:column="40"/></operator> <literal type="number" pos:line="10" pos:column="41">0<pos:position pos:line="10" pos:column="42"/></literal></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">clear<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">()<pos:position pos:line="11" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strncmp<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">token<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="24">"cert="<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">5<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call> <operator pos:line="15" pos:column="36">==<pos:position pos:line="15" pos:column="38"/></operator> <literal type="number" pos:line="15" pos:column="39">0<pos:position pos:line="15" pos:column="40"/></literal></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <block pos:line="15" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">KeyData<pos:position pos:line="16" pos:column="16"/></name></type> <name pos:line="16" pos:column="17">t<pos:position pos:line="16" pos:column="18"/></name></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">t<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">.<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">privateKeyFile<pos:position pos:line="17" pos:column="25"/></name></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <name><name pos:line="17" pos:column="28">t<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">certFile<pos:position pos:line="17" pos:column="38"/></name></name> <operator pos:line="17" pos:column="39">=<pos:position pos:line="17" pos:column="40"/></operator> <call><name pos:line="17" pos:column="41">SBuf<pos:position pos:line="17" pos:column="45"/></name><argument_list pos:line="17" pos:column="45">(<argument><expr><name pos:line="17" pos:column="46">token<pos:position pos:line="17" pos:column="51"/></name> <operator pos:line="17" pos:column="52">+<pos:position pos:line="17" pos:column="53"/></operator> <literal type="number" pos:line="17" pos:column="54">5<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">certs<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">emplace_back<pos:position pos:line="18" pos:column="27"/></name></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">t<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><call><name pos:line="19" pos:column="16">strncmp<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">token<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"key="<pos:position pos:line="19" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="39">4<pos:position pos:line="19" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call> <operator pos:line="19" pos:column="42">==<pos:position pos:line="19" pos:column="44"/></operator> <literal type="number" pos:line="19" pos:column="45">0<pos:position pos:line="19" pos:column="46"/></literal></expr>)<pos:position pos:line="19" pos:column="47"/></condition><then pos:line="19" pos:column="47"> <block pos:line="19" pos:column="48">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name><name pos:line="20" pos:column="13">certs<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">.<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">empty<pos:position pos:line="20" pos:column="24"/></name></name><argument_list pos:line="20" pos:column="24">()<pos:position pos:line="20" pos:column="26"/></argument_list></call> <operator pos:line="20" pos:column="27">||<pos:position pos:line="20" pos:column="29"/></operator> <call><name><name pos:line="20" pos:column="30">certs<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">back<pos:position pos:line="20" pos:column="40"/></name></name><argument_list pos:line="20" pos:column="40">()<pos:position pos:line="20" pos:column="42"/></argument_list></call><operator pos:line="20" pos:column="42">.<pos:position pos:line="20" pos:column="43"/></operator><call><name><name pos:line="20" pos:column="43">certFile<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">.<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="52">isEmpty<pos:position pos:line="20" pos:column="59"/></name></name><argument_list pos:line="20" pos:column="59">()<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62"> <block pos:line="20" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">fatal<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="string" pos:line="21" pos:column="19">"cert= option must be set before key= is used."<pos:position pos:line="21" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>
            <return pos:line="22" pos:column="13">return;<pos:position pos:line="22" pos:column="20"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">KeyData<pos:position pos:line="24" pos:column="16"/></name> <modifier pos:line="24" pos:column="17">&amp;<pos:position pos:line="24" pos:column="22"/></modifier></type><name pos:line="24" pos:column="18">t<pos:position pos:line="24" pos:column="19"/></name> <init pos:line="24" pos:column="20">= <expr><call><name><name pos:line="24" pos:column="22">certs<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">back<pos:position pos:line="24" pos:column="32"/></name></name><argument_list pos:line="24" pos:column="32">()<pos:position pos:line="24" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">t<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">.<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">privateKeyFile<pos:position pos:line="25" pos:column="25"/></name></name> <operator pos:line="25" pos:column="26">=<pos:position pos:line="25" pos:column="27"/></operator> <call><name pos:line="25" pos:column="28">SBuf<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">token<pos:position pos:line="25" pos:column="38"/></name> <operator pos:line="25" pos:column="39">+<pos:position pos:line="25" pos:column="40"/></operator> <literal type="number" pos:line="25" pos:column="41">4<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><call><name pos:line="26" pos:column="16">strncmp<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">token<pos:position pos:line="26" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="31">"version="<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="43">8<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call> <operator pos:line="26" pos:column="46">==<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>)<pos:position pos:line="26" pos:column="51"/></condition><then pos:line="26" pos:column="51"> <block pos:line="26" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="19">DBG_PARSE_NOTE<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="38">"UPGRADE WARNING: SSL version= is deprecated. Use options= to limit protocols instead."<pos:position pos:line="27" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="127"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">sslVersion<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">xatoi<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">token<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">+<pos:position pos:line="28" pos:column="35"/></operator> <literal type="number" pos:line="28" pos:column="36">8<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif> <elseif pos:line="29" pos:column="7">else <if pos:line="29" pos:column="12">if <condition pos:line="29" pos:column="15">(<expr><call><name pos:line="29" pos:column="16">strncmp<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">token<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"min-version="<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="47">12<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <literal type="number" pos:line="29" pos:column="54">0<pos:position pos:line="29" pos:column="55"/></literal></expr>)<pos:position pos:line="29" pos:column="56"/></condition><then pos:line="29" pos:column="56"> <block pos:line="29" pos:column="57">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">tlsMinVersion<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <call><name pos:line="30" pos:column="25">SBuf<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">token<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">+<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="38">12<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif> <elseif pos:line="31" pos:column="7">else <if pos:line="31" pos:column="12">if <condition pos:line="31" pos:column="15">(<expr><call><name pos:line="31" pos:column="16">strncmp<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">token<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"options="<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="43">8<pos:position pos:line="31" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call> <operator pos:line="31" pos:column="46">==<pos:position pos:line="31" pos:column="48"/></operator> <literal type="number" pos:line="31" pos:column="49">0<pos:position pos:line="31" pos:column="50"/></literal></expr>)<pos:position pos:line="31" pos:column="51"/></condition><then pos:line="31" pos:column="51"> <block pos:line="31" pos:column="52">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">sslOptions<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">SBuf<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">token<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">+<pos:position pos:line="32" pos:column="34"/></operator> <literal type="number" pos:line="32" pos:column="35">8<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">parseOptions<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">()<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif> <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><call><name pos:line="34" pos:column="16">strncmp<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">token<pos:position pos:line="34" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="31">"cipher="<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="42">7<pos:position pos:line="34" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">==<pos:position pos:line="34" pos:column="47"/></operator> <literal type="number" pos:line="34" pos:column="48">0<pos:position pos:line="34" pos:column="49"/></literal></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50"> <block pos:line="34" pos:column="51">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">sslCipher<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">SBuf<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">token<pos:position pos:line="35" pos:column="31"/></name> <operator pos:line="35" pos:column="32">+<pos:position pos:line="35" pos:column="33"/></operator> <literal type="number" pos:line="35" pos:column="34">7<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif> <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><call><name pos:line="36" pos:column="16">strncmp<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">token<pos:position pos:line="36" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="31">"cafile="<pos:position pos:line="36" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="42">7<pos:position pos:line="36" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="44"/></argument_list></call> <operator pos:line="36" pos:column="45">==<pos:position pos:line="36" pos:column="47"/></operator> <literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr>)<pos:position pos:line="36" pos:column="50"/></condition><then pos:line="36" pos:column="50"> <block pos:line="36" pos:column="51">{
        <expr_stmt><expr><call><name><name pos:line="37" pos:column="9">caFiles<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">.<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">emplace_back<pos:position pos:line="37" pos:column="29"/></name></name><argument_list pos:line="37" pos:column="29">(<argument><expr><call><name pos:line="37" pos:column="30">SBuf<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">token<pos:position pos:line="37" pos:column="40"/></name> <operator pos:line="37" pos:column="41">+<pos:position pos:line="37" pos:column="42"/></operator> <literal type="number" pos:line="37" pos:column="43">7<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif> <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><call><name pos:line="38" pos:column="16">strncmp<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">token<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="31">"capath="<pos:position pos:line="38" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="42">7<pos:position pos:line="38" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call> <operator pos:line="38" pos:column="45">==<pos:position pos:line="38" pos:column="47"/></operator> <literal type="number" pos:line="38" pos:column="48">0<pos:position pos:line="38" pos:column="49"/></literal></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50"> <block pos:line="38" pos:column="51">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">caDir<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <call><name pos:line="39" pos:column="17">SBuf<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">token<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">+<pos:position pos:line="39" pos:column="29"/></operator> <literal type="number" pos:line="39" pos:column="30">7<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><operator pos:line="40" pos:column="5">!<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">USE_OPENSSL<pos:position pos:line="40" pos:column="17"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">debugs<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="number" pos:line="41" pos:column="16">3<pos:position pos:line="41" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="19">DBG_PARSE_NOTE<pos:position pos:line="41" pos:column="33"/></name><argument_list pos:line="41" pos:column="33">(<argument><expr><literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="38">"WARNING: capath= option requires --with-openssl."<pos:position pos:line="41" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="90"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif> <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><call><name pos:line="43" pos:column="16">strncmp<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">token<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="31">"crlfile="<pos:position pos:line="43" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="43">8<pos:position pos:line="43" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call> <operator pos:line="43" pos:column="46">==<pos:position pos:line="43" pos:column="48"/></operator> <literal type="number" pos:line="43" pos:column="49">0<pos:position pos:line="43" pos:column="50"/></literal></expr>)<pos:position pos:line="43" pos:column="51"/></condition><then pos:line="43" pos:column="51"> <block pos:line="43" pos:column="52">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">crlFile<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">SBuf<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">token<pos:position pos:line="44" pos:column="29"/></name> <operator pos:line="44" pos:column="30">+<pos:position pos:line="44" pos:column="31"/></operator> <literal type="number" pos:line="44" pos:column="32">8<pos:position pos:line="44" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">loadCrlFile<pos:position pos:line="45" pos:column="20"/></name><argument_list pos:line="45" pos:column="20">()<pos:position pos:line="45" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif> <elseif pos:line="46" pos:column="7">else <if pos:line="46" pos:column="12">if <condition pos:line="46" pos:column="15">(<expr><call><name pos:line="46" pos:column="16">strncmp<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">token<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="31">"flags="<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="41">6<pos:position pos:line="46" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call> <operator pos:line="46" pos:column="44">==<pos:position pos:line="46" pos:column="46"/></operator> <literal type="number" pos:line="46" pos:column="47">0<pos:position pos:line="46" pos:column="48"/></literal></expr>)<pos:position pos:line="46" pos:column="49"/></condition><then pos:line="46" pos:column="49"> <block pos:line="46" pos:column="50">{
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">parsedFlags<pos:position pos:line="47" pos:column="24"/></name> <operator pos:line="47" pos:column="25">!=<pos:position pos:line="47" pos:column="27"/></operator> <literal type="number" pos:line="47" pos:column="28">0<pos:position pos:line="47" pos:column="29"/></literal></expr>)<pos:position pos:line="47" pos:column="30"/></condition><then pos:line="47" pos:column="30"> <block pos:line="47" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">debugs<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="number" pos:line="48" pos:column="20">3<pos:position pos:line="48" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="23">DBG_PARSE_NOTE<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><literal type="number" pos:line="48" pos:column="38">1<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="42">"WARNING: Overwriting flags="<pos:position pos:line="48" pos:column="71"/></literal> <operator pos:line="48" pos:column="72">&lt;&lt;<pos:position pos:line="48" pos:column="80"/></operator> <name pos:line="48" pos:column="75">sslFlags<pos:position pos:line="48" pos:column="83"/></name> <operator pos:line="48" pos:column="84">&lt;&lt;<pos:position pos:line="48" pos:column="92"/></operator> <literal type="string" pos:line="48" pos:column="87">" with "<pos:position pos:line="48" pos:column="95"/></literal> <operator pos:line="48" pos:column="96">&lt;&lt;<pos:position pos:line="48" pos:column="104"/></operator> <call><name pos:line="48" pos:column="99">SBuf<pos:position pos:line="48" pos:column="103"/></name><argument_list pos:line="48" pos:column="103">(<argument><expr><name pos:line="48" pos:column="104">token<pos:position pos:line="48" pos:column="109"/></name> <operator pos:line="48" pos:column="110">+<pos:position pos:line="48" pos:column="111"/></operator> <literal type="number" pos:line="48" pos:column="112">6<pos:position pos:line="48" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="116"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="50" pos:column="9">sslFlags<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <call><name pos:line="50" pos:column="20">SBuf<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">token<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">+<pos:position pos:line="50" pos:column="32"/></operator> <literal type="number" pos:line="50" pos:column="33">6<pos:position pos:line="50" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">parsedFlags<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <call><name pos:line="51" pos:column="23">parseFlags<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">()<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif> <elseif pos:line="52" pos:column="7">else <if pos:line="52" pos:column="12">if <condition pos:line="52" pos:column="15">(<expr><call><name pos:line="52" pos:column="16">strncmp<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">token<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="31">"default-ca=off"<pos:position pos:line="52" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="49">14<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call> <operator pos:line="52" pos:column="53">==<pos:position pos:line="52" pos:column="55"/></operator> <literal type="number" pos:line="52" pos:column="56">0<pos:position pos:line="52" pos:column="57"/></literal> <operator pos:line="52" pos:column="58">||<pos:position pos:line="52" pos:column="60"/></operator> <call><name pos:line="52" pos:column="61">strncmp<pos:position pos:line="52" pos:column="68"/></name><argument_list pos:line="52" pos:column="68">(<argument><expr><name pos:line="52" pos:column="69">token<pos:position pos:line="52" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="76">"no-default-ca"<pos:position pos:line="52" pos:column="91"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="93">13<pos:position pos:line="52" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="96"/></argument_list></call> <operator pos:line="52" pos:column="97">==<pos:position pos:line="52" pos:column="99"/></operator> <literal type="number" pos:line="52" pos:column="100">0<pos:position pos:line="52" pos:column="101"/></literal></expr>)<pos:position pos:line="52" pos:column="102"/></condition><then pos:line="52" pos:column="102"> <block pos:line="52" pos:column="103">{
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><call><name><name pos:line="53" pos:column="13">flags<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">.<pos:position pos:line="53" pos:column="19"/></operator><name pos:line="53" pos:column="19">tlsDefaultCa<pos:position pos:line="53" pos:column="31"/></name><operator pos:line="53" pos:column="31">.<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="32">configured<pos:position pos:line="53" pos:column="42"/></name></name><argument_list pos:line="53" pos:column="42">()<pos:position pos:line="53" pos:column="44"/></argument_list></call> <operator pos:line="53" pos:column="45">&amp;&amp;<pos:position pos:line="53" pos:column="55"/></operator> <name><name pos:line="53" pos:column="48">flags<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">.<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="54">tlsDefaultCa<pos:position pos:line="53" pos:column="66"/></name></name></expr>)<pos:position pos:line="53" pos:column="67"/></condition><then pos:line="53" pos:column="67">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="13">fatalf<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><literal type="string" pos:line="54" pos:column="20">"ERROR: previous default-ca settings conflict with %s"<pos:position pos:line="54" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="76">token<pos:position pos:line="54" pos:column="81"/></name></expr></argument>)<pos:position pos:line="54" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="83"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="55" pos:column="9">flags<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">.<pos:position pos:line="55" pos:column="15"/></operator><name pos:line="55" pos:column="15">tlsDefaultCa<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">.<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">configure<pos:position pos:line="55" pos:column="37"/></name></name><argument_list pos:line="55" pos:column="37">(<argument><expr><literal type="boolean" pos:line="55" pos:column="38">false<pos:position pos:line="55" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if></elseif> <elseif pos:line="56" pos:column="7">else <if pos:line="56" pos:column="12">if <condition pos:line="56" pos:column="15">(<expr><call><name pos:line="56" pos:column="16">strncmp<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">token<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="31">"default-ca=on"<pos:position pos:line="56" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="48">13<pos:position pos:line="56" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call> <operator pos:line="56" pos:column="52">==<pos:position pos:line="56" pos:column="54"/></operator> <literal type="number" pos:line="56" pos:column="55">0<pos:position pos:line="56" pos:column="56"/></literal> <operator pos:line="56" pos:column="57">||<pos:position pos:line="56" pos:column="59"/></operator> <call><name pos:line="56" pos:column="60">strncmp<pos:position pos:line="56" pos:column="67"/></name><argument_list pos:line="56" pos:column="67">(<argument><expr><name pos:line="56" pos:column="68">token<pos:position pos:line="56" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="75">"default-ca"<pos:position pos:line="56" pos:column="87"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="89">10<pos:position pos:line="56" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="92"/></argument_list></call> <operator pos:line="56" pos:column="93">==<pos:position pos:line="56" pos:column="95"/></operator> <literal type="number" pos:line="56" pos:column="96">0<pos:position pos:line="56" pos:column="97"/></literal></expr>)<pos:position pos:line="56" pos:column="98"/></condition><then pos:line="56" pos:column="98"> <block pos:line="56" pos:column="99">{
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name><name pos:line="57" pos:column="13">flags<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">tlsDefaultCa<pos:position pos:line="57" pos:column="31"/></name><operator pos:line="57" pos:column="31">.<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="32">configured<pos:position pos:line="57" pos:column="42"/></name></name><argument_list pos:line="57" pos:column="42">()<pos:position pos:line="57" pos:column="44"/></argument_list></call> <operator pos:line="57" pos:column="45">&amp;&amp;<pos:position pos:line="57" pos:column="55"/></operator> <operator pos:line="57" pos:column="48">!<pos:position pos:line="57" pos:column="49"/></operator><name><name pos:line="57" pos:column="49">flags<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">.<pos:position pos:line="57" pos:column="55"/></operator><name pos:line="57" pos:column="55">tlsDefaultCa<pos:position pos:line="57" pos:column="67"/></name></name></expr>)<pos:position pos:line="57" pos:column="68"/></condition><then pos:line="57" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="13">fatalf<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><literal type="string" pos:line="58" pos:column="20">"ERROR: previous default-ca settings conflict with %s"<pos:position pos:line="58" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="76">token<pos:position pos:line="58" pos:column="81"/></name></expr></argument>)<pos:position pos:line="58" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="83"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="59" pos:column="9">flags<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">.<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">tlsDefaultCa<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">.<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">configure<pos:position pos:line="59" pos:column="37"/></name></name><argument_list pos:line="59" pos:column="37">(<argument><expr><literal type="boolean" pos:line="59" pos:column="38">true<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif> <elseif pos:line="60" pos:column="7">else <if pos:line="60" pos:column="12">if <condition pos:line="60" pos:column="15">(<expr><call><name pos:line="60" pos:column="16">strncmp<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><name pos:line="60" pos:column="24">token<pos:position pos:line="60" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="31">"domain="<pos:position pos:line="60" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="42">7<pos:position pos:line="60" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call> <operator pos:line="60" pos:column="45">==<pos:position pos:line="60" pos:column="47"/></operator> <literal type="number" pos:line="60" pos:column="48">0<pos:position pos:line="60" pos:column="49"/></literal></expr>)<pos:position pos:line="60" pos:column="50"/></condition><then pos:line="60" pos:column="50"> <block pos:line="60" pos:column="51">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">sslDomain<pos:position pos:line="61" pos:column="18"/></name> <operator pos:line="61" pos:column="19">=<pos:position pos:line="61" pos:column="20"/></operator> <call><name pos:line="61" pos:column="21">SBuf<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">token<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">+<pos:position pos:line="61" pos:column="33"/></operator> <literal type="number" pos:line="61" pos:column="34">7<pos:position pos:line="61" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if></elseif> <elseif pos:line="62" pos:column="7">else <if pos:line="62" pos:column="12">if <condition pos:line="62" pos:column="15">(<expr><call><name pos:line="62" pos:column="16">strncmp<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><name pos:line="62" pos:column="24">token<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="31">"no-npn"<pos:position pos:line="62" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="41">6<pos:position pos:line="62" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="43"/></argument_list></call> <operator pos:line="62" pos:column="44">==<pos:position pos:line="62" pos:column="46"/></operator> <literal type="number" pos:line="62" pos:column="47">0<pos:position pos:line="62" pos:column="48"/></literal></expr>)<pos:position pos:line="62" pos:column="49"/></condition><then pos:line="62" pos:column="49"> <block pos:line="62" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">flags<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">.<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="15">tlsNpn<pos:position pos:line="63" pos:column="21"/></name></name> <operator pos:line="63" pos:column="22">=<pos:position pos:line="63" pos:column="23"/></operator> <literal type="boolean" pos:line="63" pos:column="24">false<pos:position pos:line="63" pos:column="29"/></literal></expr>;<pos:position pos:line="63" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if></elseif> <else pos:line="64" pos:column="7">else <block pos:line="64" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">debugs<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><literal type="number" pos:line="65" pos:column="16">3<pos:position pos:line="65" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="19">DBG_CRITICAL<pos:position pos:line="65" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="33">"ERROR: Unknown TLS option '"<pos:position pos:line="65" pos:column="62"/></literal> <operator pos:line="65" pos:column="63">&lt;&lt;<pos:position pos:line="65" pos:column="71"/></operator> <name pos:line="65" pos:column="66">token<pos:position pos:line="65" pos:column="71"/></name> <operator pos:line="65" pos:column="72">&lt;&lt;<pos:position pos:line="65" pos:column="80"/></operator> <literal type="string" pos:line="65" pos:column="75">"'"<pos:position pos:line="65" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="80"/></expr_stmt>
        <return pos:line="66" pos:column="9">return;<pos:position pos:line="66" pos:column="16"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="69" pos:column="5">encryptTransport<pos:position pos:line="69" pos:column="21"/></name> <operator pos:line="69" pos:column="22">=<pos:position pos:line="69" pos:column="23"/></operator> <literal type="boolean" pos:line="69" pos:column="24">true<pos:position pos:line="69" pos:column="28"/></literal></expr>;<pos:position pos:line="69" pos:column="29"/></expr_stmt>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

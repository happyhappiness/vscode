<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3130_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TemplateFile<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">loadDefault<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">loaded<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">()<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <comment type="line" pos:line="4" pos:column="19">// already loaded?</comment>
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">true<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if>

    <comment type="block" format="doxygen" pos:line="7" pos:column="5">/** test error_directory configured location */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">Config<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">errorDirectory<pos:position pos:line="8" pos:column="30"/></name></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31"> <block pos:line="8" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">path<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><name pos:line="9" pos:column="19">MAXPATHLEN<pos:position pos:line="9" pos:column="29"/></name></expr>]<pos:position pos:line="9" pos:column="30"/></index></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">snprintf<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">path<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="24">sizeof<argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">path<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"%s/%s"<pos:position pos:line="10" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="47">Config<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">.<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">errorDirectory<pos:position pos:line="10" pos:column="68"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="70">templateName<pos:position pos:line="10" pos:column="82"/></name><operator pos:line="10" pos:column="82">.<pos:position pos:line="10" pos:column="83"/></operator><name pos:line="10" pos:column="83">termedBuf<pos:position pos:line="10" pos:column="92"/></name></name><argument_list pos:line="10" pos:column="92">()<pos:position pos:line="10" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">loadFromFile<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">path<pos:position pos:line="11" pos:column="26"/></name></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">USE_ERR_LOCALES<pos:position pos:line="14" pos:column="20"/></name></expr></cpp:if>
    <comment type="block" format="doxygen" pos:line="15" pos:column="5">/** test error_default_language location */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">loaded<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">()<pos:position pos:line="16" pos:column="18"/></argument_list></call> <operator pos:line="16" pos:column="19">&amp;&amp;<pos:position pos:line="16" pos:column="29"/></operator> <name><name pos:line="16" pos:column="22">Config<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">errorDefaultLanguage<pos:position pos:line="16" pos:column="49"/></name></name></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><call><name pos:line="17" pos:column="14">tryLoadTemplate<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name><name pos:line="17" pos:column="30">Config<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">errorDefaultLanguage<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59"> <block pos:line="17" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="23">(<pos:position pos:line="18" pos:column="24"/></operator><ternary><condition><expr><name pos:line="18" pos:column="24">templateCode<pos:position pos:line="18" pos:column="36"/></name> <operator pos:line="18" pos:column="37">&lt;<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="39">TCP_RESET<pos:position pos:line="18" pos:column="48"/></name></expr> ?<pos:position pos:line="18" pos:column="50"/></condition><then pos:line="18" pos:column="50"> <expr><name pos:line="18" pos:column="51">DBG_CRITICAL<pos:position pos:line="18" pos:column="63"/></name></expr> <pos:position pos:line="18" pos:column="64"/></then><else pos:line="18" pos:column="64">: <expr><literal type="number" pos:line="18" pos:column="66">3<pos:position pos:line="18" pos:column="67"/></literal></expr></else></ternary><operator pos:line="18" pos:column="67">)<pos:position pos:line="18" pos:column="68"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="70">"Unable to load default error language files. Reset to backups."<pos:position pos:line="18" pos:column="134"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="136"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="23" pos:column="5">/* test default location if failed (templates == English translation base templates) */</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">loaded<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">()<pos:position pos:line="24" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">tryLoadTemplate<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><literal type="string" pos:line="25" pos:column="25">"templates"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* giving up if failed */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><call><name pos:line="29" pos:column="10">loaded<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">()<pos:position pos:line="29" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="19">(<pos:position pos:line="30" pos:column="20"/></operator><ternary><condition><expr><name pos:line="30" pos:column="20">templateCode<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">&lt;<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="35">TCP_RESET<pos:position pos:line="30" pos:column="44"/></name></expr> ?<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46"> <expr><name pos:line="30" pos:column="47">DBG_CRITICAL<pos:position pos:line="30" pos:column="59"/></name></expr> <pos:position pos:line="30" pos:column="60"/></then><else pos:line="30" pos:column="60">: <expr><literal type="number" pos:line="30" pos:column="62">3<pos:position pos:line="30" pos:column="63"/></literal></expr></else></ternary><operator pos:line="30" pos:column="63">)<pos:position pos:line="30" pos:column="64"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="66">"WARNING: failed to find or read error text file "<pos:position pos:line="30" pos:column="116"/></literal> <operator pos:line="30" pos:column="117">&lt;&lt;<pos:position pos:line="30" pos:column="125"/></operator> <name pos:line="30" pos:column="120">templateName<pos:position pos:line="30" pos:column="132"/></name></expr></argument>)<pos:position pos:line="30" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="134"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">parse<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="string" pos:line="31" pos:column="15">"Internal Error: Missing Template "<pos:position pos:line="31" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="52">33<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="31" pos:column="56">'\0'<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">parse<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><call><name><name pos:line="32" pos:column="15">templateName<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">termedBuf<pos:position pos:line="32" pos:column="37"/></name></name><argument_list pos:line="32" pos:column="37">()<pos:position pos:line="32" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="32" pos:column="41">templateName<pos:position pos:line="32" pos:column="53"/></name><operator pos:line="32" pos:column="53">.<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="54">size<pos:position pos:line="32" pos:column="58"/></name></name><argument_list pos:line="32" pos:column="58">()<pos:position pos:line="32" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="62">'\0'<pos:position pos:line="32" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <return pos:line="35" pos:column="5">return <expr><literal type="boolean" pos:line="35" pos:column="12">true<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4881_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">AuthBasicUserRequest<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">authenticated<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">()<pos:position pos:line="2" pos:column="38"/></parameter_list> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">BasicUser<pos:position pos:line="4" pos:column="14"/></name> <specifier pos:line="4" pos:column="15">const<pos:position pos:line="4" pos:column="20"/></specifier> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">basic_auth<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><cast type="dynamic" pos:line="4" pos:column="35">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="47">&lt;<argument><expr><name pos:line="4" pos:column="48">BasicUser<pos:position pos:line="4" pos:column="57"/></name> <specifier pos:line="4" pos:column="58">const<pos:position pos:line="4" pos:column="63"/></specifier> <operator pos:line="4" pos:column="64">*<pos:position pos:line="4" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="69"/></argument_list><argument_list pos:line="4" pos:column="66">(<argument><expr><call><name pos:line="4" pos:column="67">user<pos:position pos:line="4" pos:column="71"/></name><argument_list pos:line="4" pos:column="71">()<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="74"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="75"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">basic_auth<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&amp;&amp;<pos:position pos:line="6" pos:column="30"/></operator> <call><name><name pos:line="6" pos:column="23">basic_auth<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">authenticated<pos:position pos:line="6" pos:column="48"/></name></name><argument_list pos:line="6" pos:column="48">()<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="51"/></condition><then pos:line="6" pos:column="51">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

    <return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3655_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientNegotiateSSL<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">void<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">data<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">conn<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">ConnStateData<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></operator><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">data<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">X509<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">client_cert<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name><name pos:line="6" pos:column="16">fd_table<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">fd<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">ssl<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">Squid_SSL_accept<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">conn<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">clientNegotiateSSL<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">SSL_session_reused<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">ssl<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">83<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">2<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"clientNegotiateSSL: Session "<pos:position pos:line="12" pos:column="53"/></literal> <operator pos:line="12" pos:column="54">&lt;&lt;<pos:position pos:line="12" pos:column="62"/></operator> <call><name pos:line="12" pos:column="57">SSL_get_session<pos:position pos:line="12" pos:column="72"/></name><argument_list pos:line="12" pos:column="72">(<argument><expr><name pos:line="12" pos:column="73">ssl<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call> <operator pos:line="12" pos:column="78">&lt;&lt;<pos:position pos:line="12" pos:column="86"/></operator>
               <literal type="string" pos:line="13" pos:column="16">" reused on FD "<pos:position pos:line="13" pos:column="32"/></literal> <operator pos:line="13" pos:column="33">&lt;&lt;<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="36">fd<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&lt;&lt;<pos:position pos:line="13" pos:column="47"/></operator> <literal type="string" pos:line="13" pos:column="42">" ("<pos:position pos:line="13" pos:column="46"/></literal> <operator pos:line="13" pos:column="47">&lt;&lt;<pos:position pos:line="13" pos:column="55"/></operator> <name><name pos:line="13" pos:column="50">fd_table<pos:position pos:line="13" pos:column="58"/></name><index pos:line="13" pos:column="58">[<expr><name pos:line="13" pos:column="59">fd<pos:position pos:line="13" pos:column="61"/></name></expr>]<pos:position pos:line="13" pos:column="62"/></index></name><operator pos:line="13" pos:column="62">.<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="63">ipaddr<pos:position pos:line="13" pos:column="69"/></name> <operator pos:line="13" pos:column="70">&lt;&lt;<pos:position pos:line="13" pos:column="78"/></operator> <literal type="string" pos:line="13" pos:column="73">":"<pos:position pos:line="13" pos:column="76"/></literal> <operator pos:line="13" pos:column="77">&lt;&lt;<pos:position pos:line="13" pos:column="85"/></operator> <operator pos:line="13" pos:column="80">(<pos:position pos:line="13" pos:column="81"/></operator><name pos:line="13" pos:column="81">int<pos:position pos:line="13" pos:column="84"/></name><operator pos:line="13" pos:column="84">)<pos:position pos:line="13" pos:column="85"/></operator><name><name pos:line="13" pos:column="85">fd_table<pos:position pos:line="13" pos:column="93"/></name><index pos:line="13" pos:column="93">[<expr><name pos:line="13" pos:column="94">fd<pos:position pos:line="13" pos:column="96"/></name></expr>]<pos:position pos:line="13" pos:column="97"/></index></name><operator pos:line="13" pos:column="97">.<pos:position pos:line="13" pos:column="98"/></operator><name pos:line="13" pos:column="98">remote_port<pos:position pos:line="13" pos:column="109"/></name> <operator pos:line="13" pos:column="110">&lt;&lt;<pos:position pos:line="13" pos:column="118"/></operator> <literal type="string" pos:line="13" pos:column="113">")"<pos:position pos:line="13" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="118"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name><name pos:line="15" pos:column="13">Debug<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">::<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">Enabled<pos:position pos:line="15" pos:column="27"/></name></name><argument_list pos:line="15" pos:column="27">(<argument><expr><literal type="number" pos:line="15" pos:column="28">83<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="32">4<pos:position pos:line="15" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block pos:line="15" pos:column="36">{
            <comment type="block" pos:line="16" pos:column="13">/* Write out the SSL session details.. actually the call below, but
             * OpenSSL headers do strange typecasts confusing GCC.. */</comment>
            <comment type="block" pos:line="18" pos:column="13">/* PEM_write_SSL_SESSION(debug_log, SSL_get_session(ssl)); */</comment>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><call><name pos:line="19" pos:column="5">defined<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">OPENSSL_VERSION_NUMBER<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call> <operator pos:line="19" pos:column="37">&amp;&amp;<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="40">OPENSSL_VERSION_NUMBER<pos:position pos:line="19" pos:column="62"/></name> <operator pos:line="19" pos:column="63">&gt;=<pos:position pos:line="19" pos:column="68"/></operator> <literal type="number" pos:line="19" pos:column="66">0x00908000L<pos:position pos:line="19" pos:column="77"/></literal></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">PEM_ASN1_write<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">(<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">i2d_of_void<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">*<pos:position pos:line="20" pos:column="42"/></operator><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="43">i2d_SSL_SESSION<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">PEM_STRING_SSL_SESSION<pos:position pos:line="20" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="84">debug_log<pos:position pos:line="20" pos:column="93"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="95">(<pos:position pos:line="20" pos:column="96"/></operator><name pos:line="20" pos:column="96">char<pos:position pos:line="20" pos:column="100"/></name> <operator pos:line="20" pos:column="101">*<pos:position pos:line="20" pos:column="102"/></operator><operator pos:line="20" pos:column="102">)<pos:position pos:line="20" pos:column="103"/></operator><call><name pos:line="20" pos:column="103">SSL_get_session<pos:position pos:line="20" pos:column="118"/></name><argument_list pos:line="20" pos:column="118">(<argument><expr><name pos:line="20" pos:column="119">ssl<pos:position pos:line="20" pos:column="122"/></name></expr></argument>)<pos:position pos:line="20" pos:column="123"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="125">NULL<pos:position pos:line="20" pos:column="129"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="130">NULL<pos:position pos:line="20" pos:column="134"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="135">0<pos:position pos:line="20" pos:column="136"/></literal></expr></argument>,<argument><expr><name pos:line="20" pos:column="137">NULL<pos:position pos:line="20" pos:column="141"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="142">NULL<pos:position pos:line="20" pos:column="146"/></name></expr></argument>)<pos:position pos:line="20" pos:column="147"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="148"/></expr_stmt>

<cpp:elif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">elif<pos:position pos:line="22" pos:column="6"/></cpp:directive> <expr><operator pos:line="22" pos:column="7">(<pos:position pos:line="22" pos:column="8"/></operator><name pos:line="22" pos:column="8">ALLOW_ALWAYS_SSL_SESSION_DETAIL<pos:position pos:line="22" pos:column="39"/></name> <operator pos:line="22" pos:column="40">==<pos:position pos:line="22" pos:column="42"/></operator> <literal type="number" pos:line="22" pos:column="43">1<pos:position pos:line="22" pos:column="44"/></literal><operator pos:line="22" pos:column="44">)<pos:position pos:line="22" pos:column="45"/></operator></expr></cpp:elif>

            <comment type="block" pos:line="24" pos:column="13">/* When using gcc 3.3.x and OpenSSL 0.9.7x sometimes a compile error can occur here.
            * This is caused by an unpredicatble gcc behaviour on a cast of the first argument
            * of PEM_ASN1_write(). For this reason this code section is disabled. To enable it,
            * define ALLOW_ALWAYS_SSL_SESSION_DETAIL=1.
            * Because there are two possible usable cast, if you get an error here, try the other
            * commented line. */</comment>

            <expr_stmt><expr><call><name pos:line="31" pos:column="13">PEM_ASN1_write<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><call><call><name pos:line="31" pos:column="29">int<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><operator pos:line="31" pos:column="33">*<pos:position pos:line="31" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="35"/></argument_list></call><argument_list pos:line="31" pos:column="35">()<pos:position pos:line="31" pos:column="37"/></argument_list></call><operator pos:line="31" pos:column="37">)<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">i2d_SSL_SESSION<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">PEM_STRING_SSL_SESSION<pos:position pos:line="31" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="79">debug_log<pos:position pos:line="31" pos:column="88"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="90">(<pos:position pos:line="31" pos:column="91"/></operator><name pos:line="31" pos:column="91">char<pos:position pos:line="31" pos:column="95"/></name> <operator pos:line="31" pos:column="96">*<pos:position pos:line="31" pos:column="97"/></operator><operator pos:line="31" pos:column="97">)<pos:position pos:line="31" pos:column="98"/></operator><call><name pos:line="31" pos:column="98">SSL_get_session<pos:position pos:line="31" pos:column="113"/></name><argument_list pos:line="31" pos:column="113">(<argument><expr><name pos:line="31" pos:column="114">ssl<pos:position pos:line="31" pos:column="117"/></name></expr></argument>)<pos:position pos:line="31" pos:column="118"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="120">NULL<pos:position pos:line="31" pos:column="124"/></name></expr></argument>,<argument><expr><name pos:line="31" pos:column="125">NULL<pos:position pos:line="31" pos:column="129"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="31" pos:column="130">0<pos:position pos:line="31" pos:column="131"/></literal></expr></argument>,<argument><expr><name pos:line="31" pos:column="132">NULL<pos:position pos:line="31" pos:column="136"/></name></expr></argument>,<argument><expr><name pos:line="31" pos:column="137">NULL<pos:position pos:line="31" pos:column="141"/></name></expr></argument>)<pos:position pos:line="31" pos:column="142"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="143"/></expr_stmt>
            <comment type="block" pos:line="32" pos:column="13">/* PEM_ASN1_write((int(*)(...))i2d_SSL_SESSION, PEM_STRING_SSL_SESSION, debug_log, (char *)SSL_get_session(ssl), NULL,NULL,0,NULL,NULL); */</comment>

<cpp:else pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">else<pos:position pos:line="34" pos:column="6"/></cpp:directive></cpp:else>

            <expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">83<pos:position pos:line="36" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">4<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"With "<pos:position pos:line="36" pos:column="34"/></literal> <name pos:line="36" pos:column="35">OPENSSL_VERSION_TEXT<pos:position pos:line="36" pos:column="55"/></name> <literal type="string" pos:line="36" pos:column="56">", session details are available only defining ALLOW_ALWAYS_SSL_SESSION_DETAIL=1 in the source."<pos:position pos:line="36" pos:column="152"/></literal></expr></argument> )<pos:position pos:line="36" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="155"/></expr_stmt>

<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
            <comment type="block" pos:line="39" pos:column="13">/* Note: This does not automatically fflush the log file.. */</comment>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">83<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">2<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"clientNegotiateSSL: New session "<pos:position pos:line="42" pos:column="57"/></literal> <operator pos:line="42" pos:column="58">&lt;&lt;<pos:position pos:line="42" pos:column="66"/></operator>
               <call><name pos:line="43" pos:column="16">SSL_get_session<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">ssl<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call> <operator pos:line="43" pos:column="37">&lt;&lt;<pos:position pos:line="43" pos:column="45"/></operator> <literal type="string" pos:line="43" pos:column="40">" on FD "<pos:position pos:line="43" pos:column="49"/></literal> <operator pos:line="43" pos:column="50">&lt;&lt;<pos:position pos:line="43" pos:column="58"/></operator> <name pos:line="43" pos:column="53">fd<pos:position pos:line="43" pos:column="55"/></name> <operator pos:line="43" pos:column="56">&lt;&lt;<pos:position pos:line="43" pos:column="64"/></operator> <literal type="string" pos:line="43" pos:column="59">" ("<pos:position pos:line="43" pos:column="63"/></literal> <operator pos:line="43" pos:column="64">&lt;&lt;<pos:position pos:line="43" pos:column="72"/></operator>
               <name><name pos:line="44" pos:column="16">fd_table<pos:position pos:line="44" pos:column="24"/></name><index pos:line="44" pos:column="24">[<expr><name pos:line="44" pos:column="25">fd<pos:position pos:line="44" pos:column="27"/></name></expr>]<pos:position pos:line="44" pos:column="28"/></index></name><operator pos:line="44" pos:column="28">.<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">ipaddr<pos:position pos:line="44" pos:column="35"/></name> <operator pos:line="44" pos:column="36">&lt;&lt;<pos:position pos:line="44" pos:column="44"/></operator> <literal type="string" pos:line="44" pos:column="39">":"<pos:position pos:line="44" pos:column="42"/></literal> <operator pos:line="44" pos:column="43">&lt;&lt;<pos:position pos:line="44" pos:column="51"/></operator> <operator pos:line="44" pos:column="46">(<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="47">int<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator><name><name pos:line="44" pos:column="51">fd_table<pos:position pos:line="44" pos:column="59"/></name><index pos:line="44" pos:column="59">[<expr><name pos:line="44" pos:column="60">fd<pos:position pos:line="44" pos:column="62"/></name></expr>]<pos:position pos:line="44" pos:column="63"/></index></name><operator pos:line="44" pos:column="63">.<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="64">remote_port<pos:position pos:line="44" pos:column="75"/></name> <operator pos:line="44" pos:column="76">&lt;&lt;<pos:position pos:line="44" pos:column="84"/></operator>
               <literal type="string" pos:line="45" pos:column="16">")"<pos:position pos:line="45" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">debugs<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="number" pos:line="48" pos:column="12">83<pos:position pos:line="48" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="16">3<pos:position pos:line="48" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="19">"clientNegotiateSSL: FD "<pos:position pos:line="48" pos:column="44"/></literal> <operator pos:line="48" pos:column="45">&lt;&lt;<pos:position pos:line="48" pos:column="53"/></operator> <name pos:line="48" pos:column="48">fd<pos:position pos:line="48" pos:column="50"/></name> <operator pos:line="48" pos:column="51">&lt;&lt;<pos:position pos:line="48" pos:column="59"/></operator> <literal type="string" pos:line="48" pos:column="54">" negotiated cipher "<pos:position pos:line="48" pos:column="75"/></literal> <operator pos:line="48" pos:column="76">&lt;&lt;<pos:position pos:line="48" pos:column="84"/></operator>
           <call><name pos:line="49" pos:column="12">SSL_get_cipher<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">ssl<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="51" pos:column="5">client_cert<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name pos:line="51" pos:column="19">SSL_get_peer_certificate<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">ssl<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">client_cert<pos:position pos:line="53" pos:column="20"/></name> <operator pos:line="53" pos:column="21">!=<pos:position pos:line="53" pos:column="23"/></operator> <name pos:line="53" pos:column="24">NULL<pos:position pos:line="53" pos:column="28"/></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29"> <block pos:line="53" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">83<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="20">3<pos:position pos:line="54" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"clientNegotiateSSL: FD "<pos:position pos:line="54" pos:column="48"/></literal> <operator pos:line="54" pos:column="49">&lt;&lt;<pos:position pos:line="54" pos:column="57"/></operator> <name pos:line="54" pos:column="52">fd<pos:position pos:line="54" pos:column="54"/></name> <operator pos:line="54" pos:column="55">&lt;&lt;<pos:position pos:line="54" pos:column="63"/></operator>
               <literal type="string" pos:line="55" pos:column="16">" client certificate: subject: "<pos:position pos:line="55" pos:column="48"/></literal> <operator pos:line="55" pos:column="49">&lt;&lt;<pos:position pos:line="55" pos:column="57"/></operator>
               <call><name pos:line="56" pos:column="16">X509_NAME_oneline<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><call><name pos:line="56" pos:column="34">X509_get_subject_name<pos:position pos:line="56" pos:column="55"/></name><argument_list pos:line="56" pos:column="55">(<argument><expr><name pos:line="56" pos:column="56">client_cert<pos:position pos:line="56" pos:column="67"/></name></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="70">0<pos:position pos:line="56" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="73">0<pos:position pos:line="56" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="77"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="58" pos:column="9">debugs<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><literal type="number" pos:line="58" pos:column="16">83<pos:position pos:line="58" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="20">3<pos:position pos:line="58" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="23">"clientNegotiateSSL: FD "<pos:position pos:line="58" pos:column="48"/></literal> <operator pos:line="58" pos:column="49">&lt;&lt;<pos:position pos:line="58" pos:column="57"/></operator> <name pos:line="58" pos:column="52">fd<pos:position pos:line="58" pos:column="54"/></name> <operator pos:line="58" pos:column="55">&lt;&lt;<pos:position pos:line="58" pos:column="63"/></operator>
               <literal type="string" pos:line="59" pos:column="16">" client certificate: issuer: "<pos:position pos:line="59" pos:column="47"/></literal> <operator pos:line="59" pos:column="48">&lt;&lt;<pos:position pos:line="59" pos:column="56"/></operator>
               <call><name pos:line="60" pos:column="16">X509_NAME_oneline<pos:position pos:line="60" pos:column="33"/></name><argument_list pos:line="60" pos:column="33">(<argument><expr><call><name pos:line="60" pos:column="34">X509_get_issuer_name<pos:position pos:line="60" pos:column="54"/></name><argument_list pos:line="60" pos:column="54">(<argument><expr><name pos:line="60" pos:column="55">client_cert<pos:position pos:line="60" pos:column="66"/></name></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="69">0<pos:position pos:line="60" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="72">0<pos:position pos:line="60" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="76"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="62" pos:column="9">X509_free<pos:position pos:line="62" pos:column="18"/></name><argument_list pos:line="62" pos:column="18">(<argument><expr><name pos:line="62" pos:column="19">client_cert<pos:position pos:line="62" pos:column="30"/></name></expr></argument>)<pos:position pos:line="62" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then> <else pos:line="63" pos:column="7">else <block pos:line="63" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="number" pos:line="64" pos:column="16">83<pos:position pos:line="64" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="20">5<pos:position pos:line="64" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="23">"clientNegotiateSSL: FD "<pos:position pos:line="64" pos:column="48"/></literal> <operator pos:line="64" pos:column="49">&lt;&lt;<pos:position pos:line="64" pos:column="57"/></operator> <name pos:line="64" pos:column="52">fd<pos:position pos:line="64" pos:column="54"/></name> <operator pos:line="64" pos:column="55">&lt;&lt;<pos:position pos:line="64" pos:column="63"/></operator>
               <literal type="string" pos:line="65" pos:column="16">" has no certificate."<pos:position pos:line="65" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></else></if>

<cpp:if pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">if<pos:position pos:line="68" pos:column="4"/></cpp:directive> <expr><call><name pos:line="68" pos:column="5">defined<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">TLSEXT_NAMETYPE_host_name<pos:position pos:line="68" pos:column="38"/></name></expr></argument>)<pos:position pos:line="68" pos:column="39"/></argument_list></call></expr></cpp:if>
    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">!<pos:position pos:line="69" pos:column="10"/></operator><call><name><name pos:line="69" pos:column="10">conn<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">serverBump<pos:position pos:line="69" pos:column="26"/></name></name><argument_list pos:line="69" pos:column="26">()<pos:position pos:line="69" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29"> <block pos:line="69" pos:column="30">{
        <comment type="line" pos:line="70" pos:column="9">// when in bumpClientFirst mode, get the server name from SNI</comment>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<decl><type><specifier pos:line="71" pos:column="13">const<pos:position pos:line="71" pos:column="18"/></specifier> <name pos:line="71" pos:column="19">char<pos:position pos:line="71" pos:column="23"/></name> <modifier pos:line="71" pos:column="24">*<pos:position pos:line="71" pos:column="25"/></modifier></type><name pos:line="71" pos:column="25">server<pos:position pos:line="71" pos:column="31"/></name> <init pos:line="71" pos:column="32">= <expr><call><name pos:line="71" pos:column="34">SSL_get_servername<pos:position pos:line="71" pos:column="52"/></name><argument_list pos:line="71" pos:column="52">(<argument><expr><name pos:line="71" pos:column="53">ssl<pos:position pos:line="71" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="58">TLSEXT_NAMETYPE_host_name<pos:position pos:line="71" pos:column="83"/></name></expr></argument>)<pos:position pos:line="71" pos:column="84"/></argument_list></call></expr></init></decl>)<pos:position pos:line="71" pos:column="85"/></condition><then pos:line="71" pos:column="85">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="72" pos:column="13">conn<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">-&gt;<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="19">resetSslCommonName<pos:position pos:line="72" pos:column="37"/></name></name><argument_list pos:line="72" pos:column="37">(<argument><expr><name pos:line="72" pos:column="38">server<pos:position pos:line="72" pos:column="44"/></name></expr></argument>)<pos:position pos:line="72" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="46"/></expr_stmt></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
<cpp:endif pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">endif<pos:position pos:line="74" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="76" pos:column="5">conn<pos:position pos:line="76" pos:column="9"/></name><operator pos:line="76" pos:column="9">-&gt;<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="11">readSomeData<pos:position pos:line="76" pos:column="23"/></name></name><argument_list pos:line="76" pos:column="23">()<pos:position pos:line="76" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2077_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">HttpStateData<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">ConnectionStatus<pos:position pos:line="1" pos:column="32"/></name></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">statusIfComplete<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list> <specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">HttpReply<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">rep<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name pos:line="4" pos:column="28">virginReply<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">()<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <comment type="block" format="doxygen" pos:line="5" pos:column="5">/** \par
     * If the reply wants to close the connection, it takes precedence */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">httpHeaderHasConnDir<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><operator pos:line="8" pos:column="30">&amp;<pos:position pos:line="8" pos:column="35"/></operator><name><name pos:line="8" pos:column="31">rep<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">header<pos:position pos:line="8" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="44">"close"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">COMPLETE_NONPERSISTENT_MSG<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></return></block></then></if>

    <comment type="block" format="doxygen" pos:line="11" pos:column="5">/** \par
     * If we didn't send a keep-alive request header, then this
     * can not be a persistent connection.
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">flags<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">keepalive<pos:position pos:line="15" pos:column="25"/></name></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">COMPLETE_NONPERSISTENT_MSG<pos:position pos:line="16" pos:column="42"/></name></expr>;<pos:position pos:line="16" pos:column="43"/></return></block></then></if>

    <comment type="block" format="doxygen" pos:line="18" pos:column="5">/** \par
     * If we haven't sent the whole request then this can not be a persistent
     * connection.
     */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name><name pos:line="22" pos:column="10">flags<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">request_sent<pos:position pos:line="22" pos:column="28"/></name></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <block pos:line="22" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">11<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">2<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"statusIfComplete: Request not yet fully sent \""<pos:position pos:line="23" pos:column="72"/></literal> <operator pos:line="23" pos:column="73">&lt;&lt;<pos:position pos:line="23" pos:column="81"/></operator> <call><name pos:line="23" pos:column="76">RequestMethodStr<pos:position pos:line="23" pos:column="92"/></name><argument_list pos:line="23" pos:column="92">(<argument><expr><name><name pos:line="23" pos:column="93">request<pos:position pos:line="23" pos:column="100"/></name><operator pos:line="23" pos:column="100">-&gt;<pos:position pos:line="23" pos:column="105"/></operator><name pos:line="23" pos:column="102">method<pos:position pos:line="23" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="109"/></argument_list></call> <operator pos:line="23" pos:column="110">&lt;&lt;<pos:position pos:line="23" pos:column="118"/></operator> <literal type="string" pos:line="23" pos:column="113">" "<pos:position pos:line="23" pos:column="116"/></literal> <operator pos:line="23" pos:column="117">&lt;&lt;<pos:position pos:line="23" pos:column="125"/></operator> <call><name><name pos:line="23" pos:column="120">entry<pos:position pos:line="23" pos:column="125"/></name><operator pos:line="23" pos:column="125">-&gt;<pos:position pos:line="23" pos:column="130"/></operator><name pos:line="23" pos:column="127">url<pos:position pos:line="23" pos:column="130"/></name></name><argument_list pos:line="23" pos:column="130">()<pos:position pos:line="23" pos:column="132"/></argument_list></call> <operator pos:line="23" pos:column="133">&lt;&lt;<pos:position pos:line="23" pos:column="141"/></operator> <literal type="string" pos:line="23" pos:column="136">"\""<pos:position pos:line="23" pos:column="140"/></literal></expr></argument> )<pos:position pos:line="23" pos:column="142"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="143"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">COMPLETE_NONPERSISTENT_MSG<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="27" pos:column="5">/** \par
     * What does the reply have to say about keep-alive?
     */</comment>
    <comment type="block" format="doxygen" pos:line="30" pos:column="5">/**
     \bug XXX BUG?
     * If the origin server (HTTP/1.0) does not send a keep-alive
     * header, but keeps the connection open anyway, what happens?
     * We'll return here and http.c waits for an EOF before changing
     * store_status to STORE_OK.   Combine this with ENTRY_FWD_HDR_WAIT
     * and an error status code, and we might have to wait until
     * the server times out the socket.
     */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name><name pos:line="39" pos:column="10">rep<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">-&gt;<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="15">keep_alive<pos:position pos:line="39" pos:column="25"/></name></name></expr>)<pos:position pos:line="39" pos:column="26"/></condition><then pos:line="39" pos:column="26">
        <block type="pseudo"><return pos:line="40" pos:column="9">return <expr><name pos:line="40" pos:column="16">COMPLETE_NONPERSISTENT_MSG<pos:position pos:line="40" pos:column="42"/></name></expr>;<pos:position pos:line="40" pos:column="43"/></return></block></then></if>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">COMPLETE_PERSISTENT_MSG<pos:position pos:line="42" pos:column="35"/></name></expr>;<pos:position pos:line="42" pos:column="36"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1693_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPools<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">InitDelayData<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">pools<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">()<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="7" pos:column="5">DelayPools<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">::<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">delay_data<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <operator pos:line="7" pos:column="30">new<pos:position pos:line="7" pos:column="33"/></operator> <name><name pos:line="7" pos:column="34">DelayPool<pos:position pos:line="7" pos:column="43"/></name><index pos:line="7" pos:column="43">[<expr><call><name pos:line="7" pos:column="44">pools<pos:position pos:line="7" pos:column="49"/></name><argument_list pos:line="7" pos:column="49">()<pos:position pos:line="7" pos:column="51"/></argument_list></call></expr>]<pos:position pos:line="7" pos:column="52"/></index></name></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">DelayPools<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">::<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">MemoryUsed<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">+=<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">pools<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">()<pos:position pos:line="9" pos:column="38"/></argument_list></call> <operator pos:line="9" pos:column="39">*<pos:position pos:line="9" pos:column="40"/></operator> <sizeof pos:line="9" pos:column="41">sizeof<argument_list pos:line="9" pos:column="47">(<argument><expr><name pos:line="9" pos:column="48">DelayPool<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></sizeof></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">eventAdd<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"DelayPools::Update"<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="36">DelayPools<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">::<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="48">Update<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="56">NULL<pos:position pos:line="11" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="62">1.0<pos:position pos:line="11" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="67">1<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_268_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">RFCNB_Recv<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">con_Handle<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="30">struct<pos:position pos:line="2" pos:column="36"/></name> <name pos:line="2" pos:column="37">RFCNB_Pkt<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">Data<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">Length<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">RFCNB_Pkt<pos:position pos:line="4" pos:column="21"/></name></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">pkt<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ret_len<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">con_Handle<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition><then pos:line="7" pos:column="28"> <block pos:line="7" pos:column="29">{

        <expr_stmt><expr><name pos:line="9" pos:column="9">RFCNB_errno<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">RFCNBE_BadHandle<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">RFCNB_saved_errno<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">errno<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">RFCNBE_Bad<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return>

    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="14" pos:column="5">/* Now get a packet from below. We allocate a header first */</comment>

    <comment type="block" pos:line="16" pos:column="5">/* Plug in the header and send the data */</comment>

    <expr_stmt><expr><name pos:line="18" pos:column="5">pkt<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <call><name pos:line="18" pos:column="11">RFCNB_Alloc_Pkt<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">RFCNB_Pkt_Hdr_Len<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">pkt<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">==<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21"> <block pos:line="20" pos:column="22">{

        <expr_stmt><expr><name pos:line="22" pos:column="9">RFCNB_errno<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">RFCNBE_NoSpace<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">RFCNB_saved_errno<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="29">errno<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">RFCNBE_Bad<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></return>

    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">pkt<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">-&gt;<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="10">next<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">Data<pos:position pos:line="27" pos:column="21"/></name></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="27" pos:column="33">/* Plug in the data portion */</comment>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">ret_len<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <call><name pos:line="29" pos:column="20">RFCNB_Get_Pkt<pos:position pos:line="29" pos:column="33"/></name><argument_list pos:line="29" pos:column="33">(<argument><expr><name pos:line="29" pos:column="34">con_Handle<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">pkt<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">Length<pos:position pos:line="29" pos:column="57"/></name> <operator pos:line="29" pos:column="58">+<pos:position pos:line="29" pos:column="59"/></operator> <name pos:line="29" pos:column="60">RFCNB_Pkt_Hdr_Len<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call><operator pos:line="29" pos:column="78">)<pos:position pos:line="29" pos:column="79"/></operator> <operator pos:line="29" pos:column="80">&lt;<pos:position pos:line="29" pos:column="84"/></operator> <literal type="number" pos:line="29" pos:column="82">0<pos:position pos:line="29" pos:column="83"/></literal></expr>)<pos:position pos:line="29" pos:column="84"/></condition><then pos:line="29" pos:column="84"> <block pos:line="29" pos:column="85">{

<cpp:ifdef pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">ifdef<pos:position pos:line="31" pos:column="7"/></cpp:directive> <name pos:line="31" pos:column="8">RFCNB_DEBUG<pos:position pos:line="31" pos:column="19"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">fprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">stderr<pos:position pos:line="32" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="25">"Bad packet return in RFCNB_Recv... \n"<pos:position pos:line="32" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

        <return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">RFCNBE_Bad<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator></expr>;<pos:position pos:line="35" pos:column="29"/></return>

    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="38" pos:column="5">/* We should check that we go a message and not a keep alive */</comment>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">pkt<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">-&gt;<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="10">next<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">NULL<pos:position pos:line="40" pos:column="21"/></name></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">RFCNB_Free_Pkt<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">pkt<pos:position pos:line="42" pos:column="23"/></name></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>

    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">ret_len<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">)<pos:position pos:line="44" pos:column="21"/></operator></expr>;<pos:position pos:line="44" pos:column="22"/></return>

}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

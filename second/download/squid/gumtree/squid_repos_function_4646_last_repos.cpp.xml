<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4646_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">createDataConnection<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name><name pos:line="2" pos:column="35">Ip<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">Address<pos:position pos:line="2" pos:column="46"/></name></name></type> <name pos:line="2" pos:column="47">cltAddr<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">clientConnection<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">!=<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><call><name><name pos:line="5" pos:column="13">clientConnection<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">remote<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">.<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">isAnyAddr<pos:position pos:line="5" pos:column="47"/></name></name><argument_list pos:line="5" pos:column="47">()<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">cltAddr<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name><name pos:line="7" pos:column="20">clientConnection<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">remote<pos:position pos:line="7" pos:column="44"/></name></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">33<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">2<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"rogue PORT "<pos:position pos:line="8" pos:column="36"/></literal> <operator pos:line="8" pos:column="37">&lt;&lt;<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="40">cltAddr<pos:position pos:line="8" pos:column="47"/></name> <operator pos:line="8" pos:column="48">&lt;&lt;<pos:position pos:line="8" pos:column="56"/></operator> <literal type="string" pos:line="8" pos:column="51">" request? ctrl: "<pos:position pos:line="8" pos:column="69"/></literal> <operator pos:line="8" pos:column="70">&lt;&lt;<pos:position pos:line="8" pos:column="78"/></operator> <name><name pos:line="8" pos:column="73">clientConnection<pos:position pos:line="8" pos:column="89"/></name><operator pos:line="8" pos:column="89">-&gt;<pos:position pos:line="8" pos:column="94"/></operator><name pos:line="8" pos:column="91">remote<pos:position pos:line="8" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="99"/></expr_stmt>
        <comment type="line" pos:line="9" pos:column="9">// Closing the control connection would not help with attacks because</comment>
        <comment type="line" pos:line="10" pos:column="9">// the client is evidently able to connect to us. Besides, closing</comment>
        <comment type="line" pos:line="11" pos:column="9">// makes retrials easier for the client and more damaging to us.</comment>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">setReply<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><literal type="number" pos:line="12" pos:column="18">501<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"Prohibited parameter value"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">false<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">closeDataConnection<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">()<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">Comm<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">::<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">ConnectionPointer<pos:position pos:line="18" pos:column="28"/></name></name></type> <name pos:line="18" pos:column="29">conn<pos:position pos:line="18" pos:column="33"/></name> <init pos:line="18" pos:column="34">= <expr><operator pos:line="18" pos:column="36">new<pos:position pos:line="18" pos:column="39"/></operator> <call><name><name pos:line="18" pos:column="40">Comm<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">::<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="46">Connection<pos:position pos:line="18" pos:column="56"/></name></name><argument_list pos:line="18" pos:column="56">()<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">conn<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">flags<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">|=<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">COMM_DOBIND<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">clientConnection<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">flags<pos:position pos:line="21" pos:column="32"/></name></name> <operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="35">COMM_INTERCEPTION<pos:position pos:line="21" pos:column="52"/></name></expr>)<pos:position pos:line="21" pos:column="53"/></condition><then pos:line="21" pos:column="53"> <block pos:line="21" pos:column="54">{
        <comment type="line" pos:line="22" pos:column="9">// In the case of NAT interception conn-&gt;local value is not set</comment>
        <comment type="line" pos:line="23" pos:column="9">// because the TCP stack will automatically pick correct source</comment>
        <comment type="line" pos:line="24" pos:column="9">// address for the data connection. We must only ensure that IP</comment>
        <comment type="line" pos:line="25" pos:column="9">// version matches client's address.</comment>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">conn<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">local<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">setAnyAddr<pos:position pos:line="26" pos:column="31"/></name></name><argument_list pos:line="26" pos:column="31">()<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name><name pos:line="28" pos:column="13">cltAddr<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">isIPv4<pos:position pos:line="28" pos:column="27"/></name></name><argument_list pos:line="28" pos:column="27">()<pos:position pos:line="28" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="29" pos:column="13">conn<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">local<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">setIPv4<pos:position pos:line="29" pos:column="32"/></name></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="31" pos:column="9">conn<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">remote<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">cltAddr<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then> <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
        <comment type="line" pos:line="33" pos:column="9">// In the case of explicit-proxy the local IP of the control connection</comment>
        <comment type="line" pos:line="34" pos:column="9">// is the Squid IP the client is knowingly talking to.</comment>
        <comment type="line" pos:line="35" pos:column="9">//</comment>
        <comment type="line" pos:line="36" pos:column="9">// In the case of TPROXY the IP address of the control connection is</comment>
        <comment type="line" pos:line="37" pos:column="9">// server IP the client is connecting to, it can be spoofed by Squid.</comment>
        <comment type="line" pos:line="38" pos:column="9">//</comment>
        <comment type="line" pos:line="39" pos:column="9">// In both cases some clients may refuse to accept data connections if</comment>
        <comment type="line" pos:line="40" pos:column="9">// these control connectin local-IP's are not used.</comment>
        <expr_stmt><expr><call><name><name pos:line="41" pos:column="9">conn<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">setAddrs<pos:position pos:line="41" pos:column="23"/></name></name><argument_list pos:line="41" pos:column="23">(<argument><expr><name><name pos:line="41" pos:column="24">clientConnection<pos:position pos:line="41" pos:column="40"/></name><operator pos:line="41" pos:column="40">-&gt;<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="42">local<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">cltAddr<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>

        <comment type="line" pos:line="43" pos:column="9">// Using non-local addresses in TPROXY mode requires appropriate socket option.</comment>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">clientConnection<pos:position pos:line="44" pos:column="29"/></name><operator pos:line="44" pos:column="29">-&gt;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="31">flags<pos:position pos:line="44" pos:column="36"/></name></name> <operator pos:line="44" pos:column="37">&amp;<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="39">COMM_TRANSPARENT<pos:position pos:line="44" pos:column="55"/></name></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="13">conn<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">flags<pos:position pos:line="45" pos:column="24"/></name></name> <operator pos:line="45" pos:column="25">|=<pos:position pos:line="45" pos:column="27"/></operator> <name pos:line="45" pos:column="28">COMM_TRANSPARENT<pos:position pos:line="45" pos:column="44"/></name></expr>;<pos:position pos:line="45" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="48" pos:column="5">// RFC 959 requires active FTP connections to originate from port 20</comment>
    <comment type="line" pos:line="49" pos:column="5">// but that would preclude us from supporting concurrent transfers! (XXX?)</comment>
    <expr_stmt><expr><call><name><name pos:line="50" pos:column="5">conn<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">local<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">port<pos:position pos:line="50" pos:column="21"/></name></name><argument_list pos:line="50" pos:column="21">(<argument><expr><literal type="number" pos:line="50" pos:column="22">0<pos:position pos:line="50" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">debugs<pos:position pos:line="52" pos:column="11"/></name><argument_list pos:line="52" pos:column="11">(<argument><expr><literal type="number" pos:line="52" pos:column="12">9<pos:position pos:line="52" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="15">3<pos:position pos:line="52" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="18">"will actively connect from "<pos:position pos:line="52" pos:column="47"/></literal> <operator pos:line="52" pos:column="48">&lt;&lt;<pos:position pos:line="52" pos:column="56"/></operator> <name><name pos:line="52" pos:column="51">conn<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">local<pos:position pos:line="52" pos:column="62"/></name></name> <operator pos:line="52" pos:column="63">&lt;&lt;<pos:position pos:line="52" pos:column="71"/></operator> <literal type="string" pos:line="52" pos:column="66">" to "<pos:position pos:line="52" pos:column="72"/></literal> <operator pos:line="52" pos:column="73">&lt;&lt;<pos:position pos:line="52" pos:column="81"/></operator>
           <name><name pos:line="53" pos:column="12">conn<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">remote<pos:position pos:line="53" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="55" pos:column="5">dataConn<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">conn<pos:position pos:line="55" pos:column="20"/></name></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="56" pos:column="5">uploadAvailSize<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">0<pos:position pos:line="56" pos:column="24"/></literal></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>
    <return pos:line="57" pos:column="5">return <expr><literal type="boolean" pos:line="57" pos:column="12">true<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

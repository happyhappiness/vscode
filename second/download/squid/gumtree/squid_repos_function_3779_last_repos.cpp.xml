<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3779_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">buildCertificate<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">Security<pos:position pos:line="1" pos:column="38"/></name><operator pos:line="1" pos:column="38">::<pos:position pos:line="1" pos:column="40"/></operator><name pos:line="1" pos:column="40">CertPointer<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">&amp;<pos:position pos:line="1" pos:column="57"/></modifier></type> <name pos:line="1" pos:column="54">cert<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="60">Ssl<pos:position pos:line="1" pos:column="63"/></name><operator pos:line="1" pos:column="63">::<pos:position pos:line="1" pos:column="65"/></operator><name pos:line="1" pos:column="65">CertificateProperties<pos:position pos:line="1" pos:column="86"/></name></name> <specifier pos:line="1" pos:column="87">const<pos:position pos:line="1" pos:column="92"/></specifier> <modifier pos:line="1" pos:column="93">&amp;<pos:position pos:line="1" pos:column="98"/></modifier></type><name pos:line="1" pos:column="94">properties<pos:position pos:line="1" pos:column="104"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="105"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// not an Ssl::X509_NAME_Pointer because X509_REQ_get_subject_name()</comment>
    <comment type="line" pos:line="4" pos:column="5">// returns a pointer to the existing subject name. Nothing to clean here.</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">properties<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">mimicCert<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">get<pos:position pos:line="5" pos:column="33"/></name></name><argument_list pos:line="5" pos:column="33">()<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36"> <block pos:line="5" pos:column="37">{
        <comment type="line" pos:line="6" pos:column="9">// Leave subject empty if we cannot extract it from true cert.</comment>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<decl><type><name pos:line="7" pos:column="13">X509_NAME<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">name<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><call><name pos:line="7" pos:column="31">X509_get_subject_name<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">(<argument><expr><call><name><name pos:line="7" pos:column="53">properties<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">.<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="64">mimicCert<pos:position pos:line="7" pos:column="73"/></name><operator pos:line="7" pos:column="73">.<pos:position pos:line="7" pos:column="74"/></operator><name pos:line="7" pos:column="74">get<pos:position pos:line="7" pos:column="77"/></name></name><argument_list pos:line="7" pos:column="77">()<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr></init></decl>)<pos:position pos:line="7" pos:column="81"/></condition><then pos:line="7" pos:column="81"> <block pos:line="7" pos:column="82">{
            <comment type="line" pos:line="8" pos:column="13">// X509_set_subject_name will call X509_dup for name</comment>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">X509_set_subject_name<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><call><name><name pos:line="9" pos:column="35">cert<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">.<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">get<pos:position pos:line="9" pos:column="43"/></name></name><argument_list pos:line="9" pos:column="43">()<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="47">name<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">properties<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">setCommonName<pos:position pos:line="13" pos:column="33"/></name></name> <operator pos:line="13" pos:column="34">||<pos:position pos:line="13" pos:column="36"/></operator> <operator pos:line="13" pos:column="37">!<pos:position pos:line="13" pos:column="38"/></operator><call><name><name pos:line="13" pos:column="38">properties<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">.<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="49">mimicCert<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">.<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">get<pos:position pos:line="13" pos:column="62"/></name></name><argument_list pos:line="13" pos:column="62">()<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65"> <block pos:line="13" pos:column="66">{
        <comment type="line" pos:line="14" pos:column="9">// In this case the CN of the certificate given by the user</comment>
        <comment type="line" pos:line="15" pos:column="9">// Ignore errors: it is better to make a certificate with no CN</comment>
        <comment type="line" pos:line="16" pos:column="9">// than to quit ssl-crtd helper because we cannot make a certificate.</comment>
        <comment type="line" pos:line="17" pos:column="9">// Most errors are caused by user input such as huge domain names.</comment>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">void<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator><call><name pos:line="18" pos:column="15">replaceCommonName<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">cert<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="39">properties<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">commonName<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="21" pos:column="5">// We should get caCert notBefore and notAfter fields and do not allow</comment>
    <comment type="line" pos:line="22" pos:column="5">// notBefore/notAfter values from certToMimic before/after notBefore/notAfter</comment>
    <comment type="line" pos:line="23" pos:column="5">// fields from caCert.</comment>
    <comment type="line" pos:line="24" pos:column="5">// Currently there is not any way in openssl tollkit to compare two ASN1_TIME</comment>
    <comment type="line" pos:line="25" pos:column="5">// objects.</comment>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">ASN1_TIME<pos:position pos:line="26" pos:column="14"/></name> <modifier pos:line="26" pos:column="15">*<pos:position pos:line="26" pos:column="16"/></modifier></type><name pos:line="26" pos:column="16">aTime<pos:position pos:line="26" pos:column="21"/></name> <init pos:line="26" pos:column="22">= <expr><name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="29"/></decl_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name><name pos:line="27" pos:column="10">properties<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">setValidBefore<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">&amp;&amp;<pos:position pos:line="27" pos:column="46"/></operator> <call><name><name pos:line="27" pos:column="39">properties<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">.<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="50">mimicCert<pos:position pos:line="27" pos:column="59"/></name><operator pos:line="27" pos:column="59">.<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="60">get<pos:position pos:line="27" pos:column="63"/></name></name><argument_list pos:line="27" pos:column="63">()<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="66"/></condition><then pos:line="27" pos:column="66">
        <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">aTime<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <call><name pos:line="28" pos:column="17">X509_get_notBefore<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><call><name><name pos:line="28" pos:column="36">properties<pos:position pos:line="28" pos:column="46"/></name><operator pos:line="28" pos:column="46">.<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="47">mimicCert<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">.<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">get<pos:position pos:line="28" pos:column="60"/></name></name><argument_list pos:line="28" pos:column="60">()<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">aTime<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">&amp;&amp;<pos:position pos:line="29" pos:column="26"/></operator> <call><name><name pos:line="29" pos:column="19">properties<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">.<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">signWithX509<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">.<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="43">get<pos:position pos:line="29" pos:column="46"/></name></name><argument_list pos:line="29" pos:column="46">()<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="9">aTime<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">X509_get_notBefore<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><call><name><name pos:line="30" pos:column="36">properties<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">signWithX509<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">.<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="60">get<pos:position pos:line="30" pos:column="63"/></name></name><argument_list pos:line="30" pos:column="63">()<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">aTime<pos:position pos:line="32" pos:column="14"/></name></expr>)<pos:position pos:line="32" pos:column="15"/></condition><then pos:line="32" pos:column="15"> <block pos:line="32" pos:column="16">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">!<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">X509_set_notBefore<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><call><name><name pos:line="33" pos:column="33">cert<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">get<pos:position pos:line="33" pos:column="41"/></name></name><argument_list pos:line="33" pos:column="41">()<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">aTime<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
            <block type="pseudo"><return pos:line="34" pos:column="13">return <expr><literal type="boolean" pos:line="34" pos:column="20">false<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><operator pos:line="35" pos:column="16">!<pos:position pos:line="35" pos:column="17"/></operator><call><name pos:line="35" pos:column="17">X509_gmtime_adj<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><call><name pos:line="35" pos:column="33">X509_get_notBefore<pos:position pos:line="35" pos:column="51"/></name><argument_list pos:line="35" pos:column="51">(<argument><expr><call><name><name pos:line="35" pos:column="52">cert<pos:position pos:line="35" pos:column="56"/></name><operator pos:line="35" pos:column="56">.<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="57">get<pos:position pos:line="35" pos:column="60"/></name></name><argument_list pos:line="35" pos:column="60">()<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="35" pos:column="65">(<pos:position pos:line="35" pos:column="66"/></operator><operator pos:line="35" pos:column="66">-<pos:position pos:line="35" pos:column="67"/></operator><literal type="number" pos:line="35" pos:column="67">2<pos:position pos:line="35" pos:column="68"/></literal><operator pos:line="35" pos:column="68">)<pos:position pos:line="35" pos:column="69"/></operator><operator pos:line="35" pos:column="69">*<pos:position pos:line="35" pos:column="70"/></operator><literal type="number" pos:line="35" pos:column="70">24<pos:position pos:line="35" pos:column="72"/></literal><operator pos:line="35" pos:column="72">*<pos:position pos:line="35" pos:column="73"/></operator><literal type="number" pos:line="35" pos:column="73">60<pos:position pos:line="35" pos:column="75"/></literal><operator pos:line="35" pos:column="75">*<pos:position pos:line="35" pos:column="76"/></operator><literal type="number" pos:line="35" pos:column="76">60<pos:position pos:line="35" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="80"/></condition><then pos:line="35" pos:column="80">
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><literal type="boolean" pos:line="36" pos:column="16">false<pos:position pos:line="36" pos:column="21"/></literal></expr>;<pos:position pos:line="36" pos:column="22"/></return></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">aTime<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <name pos:line="38" pos:column="13">NULL<pos:position pos:line="38" pos:column="17"/></name></expr>;<pos:position pos:line="38" pos:column="18"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">!<pos:position pos:line="39" pos:column="10"/></operator><name><name pos:line="39" pos:column="10">properties<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">.<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="21">setValidAfter<pos:position pos:line="39" pos:column="34"/></name></name> <operator pos:line="39" pos:column="35">&amp;&amp;<pos:position pos:line="39" pos:column="45"/></operator> <call><name><name pos:line="39" pos:column="38">properties<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">.<pos:position pos:line="39" pos:column="49"/></operator><name pos:line="39" pos:column="49">mimicCert<pos:position pos:line="39" pos:column="58"/></name><operator pos:line="39" pos:column="58">.<pos:position pos:line="39" pos:column="59"/></operator><name pos:line="39" pos:column="59">get<pos:position pos:line="39" pos:column="62"/></name></name><argument_list pos:line="39" pos:column="62">()<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="65"/></condition><then pos:line="39" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">aTime<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <call><name pos:line="40" pos:column="17">X509_get_notAfter<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><call><name><name pos:line="40" pos:column="35">properties<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">.<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="46">mimicCert<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">.<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="56">get<pos:position pos:line="40" pos:column="59"/></name></name><argument_list pos:line="40" pos:column="59">()<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt></block></then></if>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">!<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">aTime<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&amp;&amp;<pos:position pos:line="41" pos:column="26"/></operator> <call><name><name pos:line="41" pos:column="19">properties<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">.<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">signWithX509<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">.<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">get<pos:position pos:line="41" pos:column="46"/></name></name><argument_list pos:line="41" pos:column="46">()<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="49"/></condition><then pos:line="41" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">aTime<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">X509_get_notAfter<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><call><name><name pos:line="42" pos:column="35">properties<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">.<pos:position pos:line="42" pos:column="46"/></operator><name pos:line="42" pos:column="46">signWithX509<pos:position pos:line="42" pos:column="58"/></name><operator pos:line="42" pos:column="58">.<pos:position pos:line="42" pos:column="59"/></operator><name pos:line="42" pos:column="59">get<pos:position pos:line="42" pos:column="62"/></name></name><argument_list pos:line="42" pos:column="62">()<pos:position pos:line="42" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt></block></then></if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">aTime<pos:position pos:line="43" pos:column="14"/></name></expr>)<pos:position pos:line="43" pos:column="15"/></condition><then pos:line="43" pos:column="15"> <block pos:line="43" pos:column="16">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">X509_set_notAfter<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><call><name><name pos:line="44" pos:column="32">cert<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">.<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">get<pos:position pos:line="44" pos:column="40"/></name></name><argument_list pos:line="44" pos:column="40">()<pos:position pos:line="44" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">aTime<pos:position pos:line="44" pos:column="49"/></name></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="51"/></condition><then pos:line="44" pos:column="51">
            <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><literal type="boolean" pos:line="45" pos:column="20">false<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then> <elseif pos:line="46" pos:column="7">else <if pos:line="46" pos:column="12">if <condition pos:line="46" pos:column="15">(<expr><operator pos:line="46" pos:column="16">!<pos:position pos:line="46" pos:column="17"/></operator><call><name pos:line="46" pos:column="17">X509_gmtime_adj<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><call><name pos:line="46" pos:column="33">X509_get_notAfter<pos:position pos:line="46" pos:column="50"/></name><argument_list pos:line="46" pos:column="50">(<argument><expr><call><name><name pos:line="46" pos:column="51">cert<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">.<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="56">get<pos:position pos:line="46" pos:column="59"/></name></name><argument_list pos:line="46" pos:column="59">()<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="64">60<pos:position pos:line="46" pos:column="66"/></literal><operator pos:line="46" pos:column="66">*<pos:position pos:line="46" pos:column="67"/></operator><literal type="number" pos:line="46" pos:column="67">60<pos:position pos:line="46" pos:column="69"/></literal><operator pos:line="46" pos:column="69">*<pos:position pos:line="46" pos:column="70"/></operator><literal type="number" pos:line="46" pos:column="70">24<pos:position pos:line="46" pos:column="72"/></literal><operator pos:line="46" pos:column="72">*<pos:position pos:line="46" pos:column="73"/></operator><literal type="number" pos:line="46" pos:column="73">356<pos:position pos:line="46" pos:column="76"/></literal><operator pos:line="46" pos:column="76">*<pos:position pos:line="46" pos:column="77"/></operator><literal type="number" pos:line="46" pos:column="77">3<pos:position pos:line="46" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="80"/></condition><then pos:line="46" pos:column="80">
        <block type="pseudo"><return pos:line="47" pos:column="9">return <expr><literal type="boolean" pos:line="47" pos:column="16">false<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></return></block></then></if></elseif></if>

    <decl_stmt><decl><type><name pos:line="49" pos:column="5">int<pos:position pos:line="49" pos:column="8"/></name></type> <name pos:line="49" pos:column="9">addedExtensions<pos:position pos:line="49" pos:column="24"/></name> <init pos:line="49" pos:column="25">= <expr><literal type="number" pos:line="49" pos:column="27">0<pos:position pos:line="49" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="49" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="50" pos:column="5">bool<pos:position pos:line="50" pos:column="9"/></name></type> <name pos:line="50" pos:column="10">useCommonNameAsAltName<pos:position pos:line="50" pos:column="32"/></name> <init pos:line="50" pos:column="33">= <expr><literal type="boolean" pos:line="50" pos:column="35">true<pos:position pos:line="50" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="40"/></decl_stmt>
    <comment type="line" pos:line="51" pos:column="5">// mimic the alias and possibly subjectAltName</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name><name pos:line="52" pos:column="9">properties<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">mimicCert<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">.<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">get<pos:position pos:line="52" pos:column="33"/></name></name><argument_list pos:line="52" pos:column="33">()<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="36"/></condition><then pos:line="52" pos:column="36"> <block pos:line="52" pos:column="37">{
        <decl_stmt><decl><type><name pos:line="53" pos:column="9">unsigned<pos:position pos:line="53" pos:column="17"/></name> <name pos:line="53" pos:column="18">char<pos:position pos:line="53" pos:column="22"/></name> <modifier pos:line="53" pos:column="23">*<pos:position pos:line="53" pos:column="24"/></modifier></type><name pos:line="53" pos:column="24">alStr<pos:position pos:line="53" pos:column="29"/></name></decl>;<pos:position pos:line="53" pos:column="30"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">int<pos:position pos:line="54" pos:column="12"/></name></type> <name pos:line="54" pos:column="13">alLen<pos:position pos:line="54" pos:column="18"/></name></decl>;<pos:position pos:line="54" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">alStr<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator> <call><name pos:line="55" pos:column="17">X509_alias_get0<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><call><name><name pos:line="55" pos:column="33">properties<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">.<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="44">mimicCert<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">.<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">get<pos:position pos:line="55" pos:column="57"/></name></name><argument_list pos:line="55" pos:column="57">()<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="55" pos:column="61">&amp;<pos:position pos:line="55" pos:column="66"/></operator><name pos:line="55" pos:column="62">alLen<pos:position pos:line="55" pos:column="67"/></name></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">alStr<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19"> <block pos:line="56" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">X509_alias_set1<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><call><name><name pos:line="57" pos:column="29">cert<pos:position pos:line="57" pos:column="33"/></name><operator pos:line="57" pos:column="33">.<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="34">get<pos:position pos:line="57" pos:column="37"/></name></name><argument_list pos:line="57" pos:column="37">()<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">alStr<pos:position pos:line="57" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="48">alLen<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="60" pos:column="9">// Mimic subjectAltName unless we used a configured CN: browsers reject</comment>
        <comment type="line" pos:line="61" pos:column="9">// certificates with CN unrelated to subjectAltNames.</comment>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name><name pos:line="62" pos:column="14">properties<pos:position pos:line="62" pos:column="24"/></name><operator pos:line="62" pos:column="24">.<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">setCommonName<pos:position pos:line="62" pos:column="38"/></name></name></expr>)<pos:position pos:line="62" pos:column="39"/></condition><then pos:line="62" pos:column="39"> <block pos:line="62" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="63" pos:column="13">int<pos:position pos:line="63" pos:column="16"/></name></type> <name pos:line="63" pos:column="17">pos<pos:position pos:line="63" pos:column="20"/></name> <init pos:line="63" pos:column="21">= <expr><call><name pos:line="63" pos:column="23">X509_get_ext_by_NID<pos:position pos:line="63" pos:column="42"/></name><argument_list pos:line="63" pos:column="42">(<argument><expr><call><name><name pos:line="63" pos:column="43">properties<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">.<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">mimicCert<pos:position pos:line="63" pos:column="63"/></name><operator pos:line="63" pos:column="63">.<pos:position pos:line="63" pos:column="64"/></operator><name pos:line="63" pos:column="64">get<pos:position pos:line="63" pos:column="67"/></name></name><argument_list pos:line="63" pos:column="67">()<pos:position pos:line="63" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="71">NID_subject_alt_name<pos:position pos:line="63" pos:column="91"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="93">-<pos:position pos:line="63" pos:column="94"/></operator><literal type="number" pos:line="63" pos:column="94">1<pos:position pos:line="63" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="63" pos:column="97"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="64" pos:column="13">X509_EXTENSION<pos:position pos:line="64" pos:column="27"/></name> <modifier pos:line="64" pos:column="28">*<pos:position pos:line="64" pos:column="29"/></modifier></type><name pos:line="64" pos:column="29">ext<pos:position pos:line="64" pos:column="32"/></name><init pos:line="64" pos:column="32">=<expr><call><name pos:line="64" pos:column="33">X509_get_ext<pos:position pos:line="64" pos:column="45"/></name><argument_list pos:line="64" pos:column="45">(<argument><expr><call><name><name pos:line="64" pos:column="46">properties<pos:position pos:line="64" pos:column="56"/></name><operator pos:line="64" pos:column="56">.<pos:position pos:line="64" pos:column="57"/></operator><name pos:line="64" pos:column="57">mimicCert<pos:position pos:line="64" pos:column="66"/></name><operator pos:line="64" pos:column="66">.<pos:position pos:line="64" pos:column="67"/></operator><name pos:line="64" pos:column="67">get<pos:position pos:line="64" pos:column="70"/></name></name><argument_list pos:line="64" pos:column="70">()<pos:position pos:line="64" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="74">pos<pos:position pos:line="64" pos:column="77"/></name></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="64" pos:column="79"/></decl_stmt>
            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name pos:line="65" pos:column="17">ext<pos:position pos:line="65" pos:column="20"/></name></expr>)<pos:position pos:line="65" pos:column="21"/></condition><then pos:line="65" pos:column="21"> <block pos:line="65" pos:column="22">{
                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">X509_add_ext<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">(<argument><expr><call><name><name pos:line="66" pos:column="34">cert<pos:position pos:line="66" pos:column="38"/></name><operator pos:line="66" pos:column="38">.<pos:position pos:line="66" pos:column="39"/></operator><name pos:line="66" pos:column="39">get<pos:position pos:line="66" pos:column="42"/></name></name><argument_list pos:line="66" pos:column="42">()<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">ext<pos:position pos:line="66" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="51">-<pos:position pos:line="66" pos:column="52"/></operator><literal type="number" pos:line="66" pos:column="52">1<pos:position pos:line="66" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="55"/></condition><then pos:line="66" pos:column="55">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="67" pos:column="21">++<pos:position pos:line="67" pos:column="23"/></operator><name pos:line="67" pos:column="23">addedExtensions<pos:position pos:line="67" pos:column="38"/></name></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt></block></then></if>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>
            <comment type="line" pos:line="69" pos:column="13">// We want to mimic the server-sent subjectAltName, not enhance it.</comment>
            <expr_stmt><expr><name pos:line="70" pos:column="13">useCommonNameAsAltName<pos:position pos:line="70" pos:column="35"/></name> <operator pos:line="70" pos:column="36">=<pos:position pos:line="70" pos:column="37"/></operator> <literal type="boolean" pos:line="70" pos:column="38">false<pos:position pos:line="70" pos:column="43"/></literal></expr>;<pos:position pos:line="70" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="73" pos:column="9">addedExtensions<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">+=<pos:position pos:line="73" pos:column="27"/></operator> <call><name pos:line="73" pos:column="28">mimicExtensions<pos:position pos:line="73" pos:column="43"/></name><argument_list pos:line="73" pos:column="43">(<argument><expr><name pos:line="73" pos:column="44">cert<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="50">properties<pos:position pos:line="73" pos:column="60"/></name><operator pos:line="73" pos:column="60">.<pos:position pos:line="73" pos:column="61"/></operator><name pos:line="73" pos:column="61">mimicCert<pos:position pos:line="73" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="72">properties<pos:position pos:line="73" pos:column="82"/></name><operator pos:line="73" pos:column="82">.<pos:position pos:line="73" pos:column="83"/></operator><name pos:line="73" pos:column="83">signWithX509<pos:position pos:line="73" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="97"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">useCommonNameAsAltName<pos:position pos:line="76" pos:column="31"/></name> <operator pos:line="76" pos:column="32">&amp;&amp;<pos:position pos:line="76" pos:column="42"/></operator> <call><name pos:line="76" pos:column="35">addAltNameWithSubjectCn<pos:position pos:line="76" pos:column="58"/></name><argument_list pos:line="76" pos:column="58">(<argument><expr><name pos:line="76" pos:column="59">cert<pos:position pos:line="76" pos:column="63"/></name></expr></argument>)<pos:position pos:line="76" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="65"/></condition><then pos:line="76" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="9">++<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="11">addedExtensions<pos:position pos:line="77" pos:column="26"/></name></expr>;<pos:position pos:line="77" pos:column="27"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="79" pos:column="5">// According to RFC 5280, using extensions requires v3 certificate.</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">addedExtensions<pos:position pos:line="80" pos:column="24"/></name></expr>)<pos:position pos:line="80" pos:column="25"/></condition><then pos:line="80" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="9">X509_set_version<pos:position pos:line="81" pos:column="25"/></name><argument_list pos:line="81" pos:column="25">(<argument><expr><call><name><name pos:line="81" pos:column="26">cert<pos:position pos:line="81" pos:column="30"/></name><operator pos:line="81" pos:column="30">.<pos:position pos:line="81" pos:column="31"/></operator><name pos:line="81" pos:column="31">get<pos:position pos:line="81" pos:column="34"/></name></name><argument_list pos:line="81" pos:column="34">()<pos:position pos:line="81" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="38">2<pos:position pos:line="81" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="41"/></expr_stmt></block></then></if> <comment type="line" pos:line="81" pos:column="42">// value 2 means v3</comment>

    <return pos:line="83" pos:column="5">return <expr><literal type="boolean" pos:line="83" pos:column="12">true<pos:position pos:line="83" pos:column="16"/></literal></expr>;<pos:position pos:line="83" pos:column="17"/></return>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

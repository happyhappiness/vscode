<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1412_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">shut_down<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">sig<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">do_shutdown<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">=<pos:position pos:line="4" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="4" pos:column="19">sig<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">==<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">SIGINT<pos:position pos:line="4" pos:column="32"/></name></expr> ?<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34"> <expr><operator pos:line="4" pos:column="35">-<pos:position pos:line="4" pos:column="36"/></operator><literal type="number" pos:line="4" pos:column="36">1<pos:position pos:line="4" pos:column="37"/></literal></expr> <pos:position pos:line="4" pos:column="38"/></then><else pos:line="4" pos:column="38">: <expr><literal type="number" pos:line="4" pos:column="40">1<pos:position pos:line="4" pos:column="41"/></literal></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">SIGTTIN<pos:position pos:line="5" pos:column="15"/></name></cpp:ifdef>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">SIGTTIN<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">==<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">sig<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">shutdown_status<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <literal type="number" pos:line="8" pos:column="27">1<pos:position pos:line="8" pos:column="28"/></literal></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt></block></then></if>

<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifndef<pos:position pos:line="11" pos:column="8"/></cpp:directive> <name pos:line="11" pos:column="9">_SQUID_MSWIN_<pos:position pos:line="11" pos:column="22"/></name></cpp:ifndef>
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">KILL_PARENT_OPT<pos:position pos:line="12" pos:column="23"/></name></cpp:ifdef>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">getppid<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">()<pos:position pos:line="14" pos:column="18"/></argument_list></call> <operator pos:line="14" pos:column="19">&gt;<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">1<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="22">"Killing master process, pid "<pos:position pos:line="15" pos:column="52"/></literal> <operator pos:line="15" pos:column="53">&lt;&lt;<pos:position pos:line="15" pos:column="61"/></operator> <call><name pos:line="15" pos:column="56">getppid<pos:position pos:line="15" pos:column="63"/></name><argument_list pos:line="15" pos:column="63">()<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">kill<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><call><name pos:line="17" pos:column="18">getppid<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">()<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">sig<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call> <operator pos:line="17" pos:column="34">&lt;<pos:position pos:line="17" pos:column="38"/></operator> <literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="23">1<pos:position pos:line="18" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"kill "<pos:position pos:line="18" pos:column="33"/></literal> <operator pos:line="18" pos:column="34">&lt;&lt;<pos:position pos:line="18" pos:column="42"/></operator> <call><name pos:line="18" pos:column="37">getppid<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">()<pos:position pos:line="18" pos:column="46"/></argument_list></call> <operator pos:line="18" pos:column="47">&lt;&lt;<pos:position pos:line="18" pos:column="55"/></operator> <literal type="string" pos:line="18" pos:column="50">": "<pos:position pos:line="18" pos:column="54"/></literal> <operator pos:line="18" pos:column="55">&lt;&lt;<pos:position pos:line="18" pos:column="63"/></operator> <call><name pos:line="18" pos:column="58">xstrerror<pos:position pos:line="18" pos:column="67"/></name><argument_list pos:line="18" pos:column="67">()<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><name pos:line="22" pos:column="5">SA_RESETHAND<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">==<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">signal<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">SIGTERM<pos:position pos:line="23" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="21">SIG_DFL<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">signal<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">SIGINT<pos:position pos:line="25" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="20">SIG_DFL<pos:position pos:line="25" pos:column="27"/></name></expr></argument>)<pos:position pos:line="25" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>

<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

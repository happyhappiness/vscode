<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3343_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">mib_tree_entry<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type>
<name pos:line="2" pos:column="1">snmpAddNode<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">oid<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type> <name pos:line="2" pos:column="19">name<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">len<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">oid_ParseFn<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">parsefunction<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">instance_Fn<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type> <name pos:line="2" pos:column="77">instancefunction<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="95">AggrType<pos:position pos:line="2" pos:column="103"/></name></type> <name pos:line="2" pos:column="104">aggrType<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="114">int<pos:position pos:line="2" pos:column="117"/></name></type> <name pos:line="2" pos:column="118">children<pos:position pos:line="2" pos:column="126"/></name></decl></parameter>,<parameter><decl><type><modifier pos:line="2" pos:column="127">...<pos:position pos:line="2" pos:column="130"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="131"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">va_list<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">args<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">loop<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">mib_tree_entry<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">entry<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><name pos:line="6" pos:column="29">NULL<pos:position pos:line="6" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">va_start<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">args<pos:position pos:line="7" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">children<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">MemBuf<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">tmp<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">49<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">6<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"snmpAddNode: Children : "<pos:position pos:line="10" pos:column="45"/></literal> <operator pos:line="10" pos:column="46">&lt;&lt;<pos:position pos:line="10" pos:column="54"/></operator> <name pos:line="10" pos:column="49">children<pos:position pos:line="10" pos:column="57"/></name> <operator pos:line="10" pos:column="58">&lt;&lt;<pos:position pos:line="10" pos:column="66"/></operator> <literal type="string" pos:line="10" pos:column="61">", Oid : "<pos:position pos:line="10" pos:column="71"/></literal> <operator pos:line="10" pos:column="72">&lt;&lt;<pos:position pos:line="10" pos:column="80"/></operator> <call><name pos:line="10" pos:column="75">snmpDebugOid<pos:position pos:line="10" pos:column="87"/></name><argument_list pos:line="10" pos:column="87">(<argument><expr><name pos:line="10" pos:column="88">name<pos:position pos:line="10" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="94">len<pos:position pos:line="10" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="99">tmp<pos:position pos:line="10" pos:column="102"/></name></expr></argument>)<pos:position pos:line="10" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="105"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">va_start<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">args<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">children<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">entry<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">mib_tree_entry<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">*<pos:position pos:line="13" pos:column="30"/></operator><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator><call><name pos:line="13" pos:column="31">xmalloc<pos:position pos:line="13" pos:column="38"/></name><argument_list pos:line="13" pos:column="38">(<argument><expr><sizeof pos:line="13" pos:column="39">sizeof<argument_list pos:line="13" pos:column="45">(<argument><expr><name pos:line="13" pos:column="46">mib_tree_entry<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">entry<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">name<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">name<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">entry<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">len<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">len<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">entry<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">parsefunction<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="28">parsefunction<pos:position pos:line="16" pos:column="41"/></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">entry<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">instancefunction<pos:position pos:line="17" pos:column="28"/></name></name> <operator pos:line="17" pos:column="29">=<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">instancefunction<pos:position pos:line="17" pos:column="47"/></name></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">entry<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">children<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">children<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">entry<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">leaves<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">NULL<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">entry<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">aggrType<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">aggrType<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">children<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">&gt;<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block pos:line="22" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">entry<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">leaves<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">mib_tree_entry<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">*<pos:position pos:line="23" pos:column="42"/></operator><operator pos:line="23" pos:column="42">*<pos:position pos:line="23" pos:column="43"/></operator><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator><call><name pos:line="23" pos:column="44">xmalloc<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">(<argument><expr><sizeof pos:line="23" pos:column="52">sizeof<argument_list pos:line="23" pos:column="58">(<argument><expr><name pos:line="23" pos:column="59">mib_tree_entry<pos:position pos:line="23" pos:column="73"/></name> <operator pos:line="23" pos:column="74">*<pos:position pos:line="23" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="76"/></argument_list></sizeof> <operator pos:line="23" pos:column="77">*<pos:position pos:line="23" pos:column="78"/></operator> <name pos:line="23" pos:column="79">children<pos:position pos:line="23" pos:column="87"/></name></expr></argument>)<pos:position pos:line="23" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="89"/></expr_stmt>

        <for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">loop<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>;<pos:position pos:line="25" pos:column="23"/></init> <condition><expr><name pos:line="25" pos:column="24">loop<pos:position pos:line="25" pos:column="28"/></name> <operator pos:line="25" pos:column="29">&lt;<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="31">children<pos:position pos:line="25" pos:column="39"/></name></expr>;<pos:position pos:line="25" pos:column="40"/></condition> <incr><expr><operator pos:line="25" pos:column="41">++<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">loop<pos:position pos:line="25" pos:column="47"/></name></expr></incr>)<pos:position pos:line="25" pos:column="48"/></control> <block pos:line="25" pos:column="49">{
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">entry<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">leaves<pos:position pos:line="26" pos:column="26"/></name><index pos:line="26" pos:column="26">[<expr><name pos:line="26" pos:column="27">loop<pos:position pos:line="26" pos:column="31"/></name></expr>]<pos:position pos:line="26" pos:column="32"/></index></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="35">va_arg<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">args<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">mib_tree_entry<pos:position pos:line="26" pos:column="62"/></name> <operator pos:line="26" pos:column="63">*<pos:position pos:line="26" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">entry<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">leaves<pos:position pos:line="27" pos:column="26"/></name><index pos:line="27" pos:column="26">[<expr><name pos:line="27" pos:column="27">loop<pos:position pos:line="27" pos:column="31"/></name></expr>]<pos:position pos:line="27" pos:column="32"/></index></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">parent<pos:position pos:line="27" pos:column="40"/></name> <operator pos:line="27" pos:column="41">=<pos:position pos:line="27" pos:column="42"/></operator> <name pos:line="27" pos:column="43">entry<pos:position pos:line="27" pos:column="48"/></name></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></for>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">va_end<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">args<pos:position pos:line="31" pos:column="16"/></name></expr></argument>)<pos:position pos:line="31" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="18"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">entry<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">)<pos:position pos:line="32" pos:column="19"/></operator></expr>;<pos:position pos:line="32" pos:column="20"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

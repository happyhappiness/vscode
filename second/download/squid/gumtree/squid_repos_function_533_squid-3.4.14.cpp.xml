<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_533_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">snmp_coexist_V2toV1<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name><name pos:line="2" pos:column="21">struct<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">snmp_pdu<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">PDU<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Per 3.1.1:
     */</comment>
    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">PDU<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">command<pos:position pos:line="6" pos:column="25"/></name></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition> <block pos:line="6" pos:column="27">{

    <case pos:line="8" pos:column="5">case <expr><name pos:line="8" pos:column="10">SNMP_PDU_GET<pos:position pos:line="8" pos:column="22"/></name></expr>:<pos:position pos:line="8" pos:column="23"/></case>
    <case pos:line="9" pos:column="5">case <expr><name pos:line="9" pos:column="10">SNMP_PDU_GETNEXT<pos:position pos:line="9" pos:column="26"/></name></expr>:<pos:position pos:line="9" pos:column="27"/></case>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">SNMP_PDU_SET<pos:position pos:line="10" pos:column="17"/></name></expr></cpp:if>
    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">SNMP_PDU_SET<pos:position pos:line="11" pos:column="22"/></name></expr>:<pos:position pos:line="11" pos:column="23"/></case>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal><operator pos:line="13" pos:column="18">)<pos:position pos:line="13" pos:column="19"/></operator></expr>;<pos:position pos:line="13" pos:column="20"/></return>
        <break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break>

    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">SNMP_PDU_GETBULK<pos:position pos:line="16" pos:column="26"/></name></expr>:<pos:position pos:line="16" pos:column="27"/></case>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">PDU<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">non_repeaters<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">PDU<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">max_repetitions<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">=<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">0<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">PDU<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">-&gt;<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="14">command<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">SNMP_PDU_GETNEXT<pos:position pos:line="19" pos:column="40"/></name></expr>;<pos:position pos:line="19" pos:column="41"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal><operator pos:line="20" pos:column="18">)<pos:position pos:line="20" pos:column="19"/></operator></expr>;<pos:position pos:line="20" pos:column="20"/></return>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>

    <default pos:line="23" pos:column="5">default:<pos:position pos:line="23" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">snmplib_debug<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><literal type="number" pos:line="24" pos:column="23">2<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="26">"Unable to translate PDU %d to SNMPv1!\n"<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="69">PDU<pos:position pos:line="24" pos:column="72"/></name><operator pos:line="24" pos:column="72">-&gt;<pos:position pos:line="24" pos:column="77"/></operator><name pos:line="24" pos:column="74">command<pos:position pos:line="24" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">snmp_set_api_error<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">SNMPERR_PDU_TRANSLATION<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal><operator pos:line="26" pos:column="18">)<pos:position pos:line="26" pos:column="19"/></operator></expr>;<pos:position pos:line="26" pos:column="20"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></switch>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

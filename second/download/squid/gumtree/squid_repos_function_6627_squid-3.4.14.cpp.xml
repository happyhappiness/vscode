<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6627_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">heap_key<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">HeapKeyGen_StoreEntry_LFUDA<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">void<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">entry<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">double<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">heap_age<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">StoreEntry<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></operator><operator pos:line="4" pos:column="34">)<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">entry<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">heap_key<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">key<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">double<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">tie<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">e<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">lastref<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">&lt;=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">tie<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <literal type="number" pos:line="9" pos:column="15">0.0<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt></block></then>
    <elseif pos:line="10" pos:column="5">else <if pos:line="10" pos:column="10">if <condition pos:line="10" pos:column="13">(<expr><name pos:line="10" pos:column="14">squid_curtime<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">&lt;=<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="31">e<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">lastref<pos:position pos:line="10" pos:column="41"/></name></name></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">tie<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">0.0<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt></block></then></if></elseif>
    <else pos:line="12" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">tie<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">1.0<pos:position pos:line="13" pos:column="18"/></literal> <operator pos:line="13" pos:column="19">-<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">exp<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><call pos:line="13" pos:column="25">(<name pos:line="13" pos:column="26">double<pos:position pos:line="13" pos:column="32"/></name>) <argument_list pos:line="13" pos:column="34">(<argument><expr><name><name pos:line="13" pos:column="35">e<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">lastref<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">-<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="48">squid_curtime<pos:position pos:line="13" pos:column="61"/></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call> <operator pos:line="13" pos:column="63">/<pos:position pos:line="13" pos:column="64"/></operator> <literal type="number" pos:line="13" pos:column="65">86400.0<pos:position pos:line="13" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="74"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">key<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">heap_age<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">+<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">double<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="31">e<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">refcount<pos:position pos:line="15" pos:column="42"/></name></name> <operator pos:line="15" pos:column="43">-<pos:position pos:line="15" pos:column="44"/></operator> <name pos:line="15" pos:column="45">tie<pos:position pos:line="15" pos:column="48"/></name></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">81<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"HeapKeyGen_StoreEntry_LFUDA: "<pos:position pos:line="17" pos:column="50"/></literal> <operator pos:line="17" pos:column="51">&lt;&lt;<pos:position pos:line="17" pos:column="59"/></operator> <call><name><name pos:line="17" pos:column="54">e<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">getMD5Text<pos:position pos:line="17" pos:column="67"/></name></name><argument_list pos:line="17" pos:column="67">()<pos:position pos:line="17" pos:column="69"/></argument_list></call> <operator pos:line="17" pos:column="70">&lt;&lt;<pos:position pos:line="17" pos:column="78"/></operator>
           <literal type="string" pos:line="18" pos:column="12">" refcnt="<pos:position pos:line="18" pos:column="22"/></literal> <operator pos:line="18" pos:column="23">&lt;&lt;<pos:position pos:line="18" pos:column="31"/></operator> <name><name pos:line="18" pos:column="26">e<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">refcount<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">&lt;&lt;<pos:position pos:line="18" pos:column="46"/></operator> <literal type="string" pos:line="18" pos:column="41">" lastref="<pos:position pos:line="18" pos:column="52"/></literal> <operator pos:line="18" pos:column="53">&lt;&lt;<pos:position pos:line="18" pos:column="61"/></operator> <name><name pos:line="18" pos:column="56">e<pos:position pos:line="18" pos:column="57"/></name><operator pos:line="18" pos:column="57">-&gt;<pos:position pos:line="18" pos:column="62"/></operator><name pos:line="18" pos:column="59">lastref<pos:position pos:line="18" pos:column="66"/></name></name> <operator pos:line="18" pos:column="67">&lt;&lt;<pos:position pos:line="18" pos:column="75"/></operator>
           <literal type="string" pos:line="19" pos:column="12">" heap_age="<pos:position pos:line="19" pos:column="24"/></literal> <operator pos:line="19" pos:column="25">&lt;&lt;<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="28">heap_age<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">&lt;&lt;<pos:position pos:line="19" pos:column="45"/></operator> <literal type="string" pos:line="19" pos:column="40">" tie="<pos:position pos:line="19" pos:column="47"/></literal> <operator pos:line="19" pos:column="48">&lt;&lt;<pos:position pos:line="19" pos:column="56"/></operator> <name pos:line="19" pos:column="51">tie<pos:position pos:line="19" pos:column="54"/></name> <operator pos:line="19" pos:column="55">&lt;&lt;<pos:position pos:line="19" pos:column="63"/></operator> <literal type="string" pos:line="19" pos:column="58">" -&gt; "<pos:position pos:line="19" pos:column="67"/></literal> <operator pos:line="19" pos:column="65">&lt;&lt;<pos:position pos:line="19" pos:column="73"/></operator> <name pos:line="19" pos:column="68">key<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">e<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">mem_obj<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">&amp;&amp;<pos:position pos:line="21" pos:column="30"/></operator> <name><name pos:line="21" pos:column="23">e<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">mem_obj<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">url<pos:position pos:line="21" pos:column="38"/></name></name></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">81<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">3<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"HeapKeyGen_StoreEntry_LFUDA: url="<pos:position pos:line="22" pos:column="58"/></literal> <operator pos:line="22" pos:column="59">&lt;&lt;<pos:position pos:line="22" pos:column="67"/></operator> <name><name pos:line="22" pos:column="62">e<pos:position pos:line="22" pos:column="63"/></name><operator pos:line="22" pos:column="63">-&gt;<pos:position pos:line="22" pos:column="68"/></operator><name pos:line="22" pos:column="65">mem_obj<pos:position pos:line="22" pos:column="72"/></name><operator pos:line="22" pos:column="72">-&gt;<pos:position pos:line="22" pos:column="77"/></operator><name pos:line="22" pos:column="74">url<pos:position pos:line="22" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt></block></then></if>

    <return pos:line="24" pos:column="5">return <expr><operator pos:line="24" pos:column="12">(<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">double<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">)<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">key<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

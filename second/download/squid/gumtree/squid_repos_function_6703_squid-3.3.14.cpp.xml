<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6703_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">rfc1035MessageUnpack<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">buf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="3" pos:column="22">size_t<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">sz<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="4" pos:column="22">rfc1035_message<pos:position pos:line="4" pos:column="37"/></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier><modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier></type> <name pos:line="4" pos:column="41">answer<pos:position pos:line="4" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="48"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">off<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">i<pos:position pos:line="7" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="21">j<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">nr<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">rfc1035_message<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">msg<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">rfc1035_rr<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">recs<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">rfc1035_query<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></modifier></type><name pos:line="11" pos:column="20">querys<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">msg<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <operator pos:line="12" pos:column="11">(<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">rfc1035_message<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator><operator pos:line="12" pos:column="28">)<pos:position pos:line="12" pos:column="29"/></operator><call><name pos:line="12" pos:column="29">xcalloc<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><literal type="number" pos:line="12" pos:column="37">1<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="40">sizeof<argument_list pos:line="12" pos:column="46">(<argument><expr><operator pos:line="12" pos:column="47">*<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">msg<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">rfc1035HeaderUnpack<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">buf<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">off<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">sz<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">-<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">off<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="50">&amp;<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="51">off<pos:position pos:line="13" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="56">msg<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">RFC1035_UNPACK_DEBUG<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">xfree<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">msg<pos:position pos:line="15" pos:column="18"/></name></expr></argument>)<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">-<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">rfc1035_unpack_error<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="18" pos:column="5">i<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">unsigned<pos:position pos:line="18" pos:column="18"/></name> <name pos:line="18" pos:column="19">int<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">)<pos:position pos:line="18" pos:column="23"/></operator> <name><name pos:line="18" pos:column="24">msg<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">qdcount<pos:position pos:line="18" pos:column="36"/></name></name></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">i<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">!=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr>)<pos:position pos:line="19" pos:column="16"/></condition><then pos:line="19" pos:column="16"> <block pos:line="19" pos:column="17">{
        <comment type="block" pos:line="20" pos:column="9">/* This can not be an answer to our queries.. */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">RFC1035_UNPACK_DEBUG<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">xfree<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">msg<pos:position pos:line="22" pos:column="18"/></name></expr></argument>)<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">rfc1035_unpack_error<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">querys<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <name><name pos:line="25" pos:column="14">msg<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">-&gt;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="19">query<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">=<pos:position pos:line="25" pos:column="26"/></operator> <operator pos:line="25" pos:column="27">(<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">rfc1035_query<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">*<pos:position pos:line="25" pos:column="42"/></operator><operator pos:line="25" pos:column="42">)<pos:position pos:line="25" pos:column="43"/></operator><call><name pos:line="25" pos:column="43">xcalloc<pos:position pos:line="25" pos:column="50"/></name><argument_list pos:line="25" pos:column="50">(<argument><expr><name pos:line="25" pos:column="51">i<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="54">sizeof<argument_list pos:line="25" pos:column="60">(<argument><expr><operator pos:line="25" pos:column="61">*<pos:position pos:line="25" pos:column="62"/></operator><name pos:line="25" pos:column="62">querys<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><expr><name pos:line="26" pos:column="10">j<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>;<pos:position pos:line="26" pos:column="16"/></init> <condition><expr><name pos:line="26" pos:column="17">j<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">&lt;<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></condition> <incr><expr><name pos:line="26" pos:column="24">j<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">++<pos:position pos:line="26" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="28"/></control> <block pos:line="26" pos:column="29">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">rfc1035QueryUnpack<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">buf<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">sz<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="41">&amp;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="42">off<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="47">&amp;<pos:position pos:line="27" pos:column="52"/></operator><name><name pos:line="27" pos:column="48">querys<pos:position pos:line="27" pos:column="54"/></name><index pos:line="27" pos:column="54">[<expr><name pos:line="27" pos:column="55">j<pos:position pos:line="27" pos:column="56"/></name></expr>]<pos:position pos:line="27" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="59"/></condition><then pos:line="27" pos:column="59"> <block pos:line="27" pos:column="60">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">RFC1035_UNPACK_DEBUG<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">rfc1035MessageDestroy<pos:position pos:line="29" pos:column="34"/></name><argument_list pos:line="29" pos:column="34">(<argument><expr><operator pos:line="29" pos:column="35">&amp;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="36">msg<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><operator pos:line="30" pos:column="20">-<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">rfc1035_unpack_error<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">answer<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">msg<pos:position pos:line="33" pos:column="18"/></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">msg<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">rcode<pos:position pos:line="34" pos:column="19"/></name></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block pos:line="34" pos:column="21">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">RFC1035_UNPACK_DEBUG<pos:position pos:line="35" pos:column="29"/></name></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><operator pos:line="36" pos:column="16">-<pos:position pos:line="36" pos:column="17"/></operator><name><name pos:line="36" pos:column="17">msg<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">rcode<pos:position pos:line="36" pos:column="27"/></name></name></expr>;<pos:position pos:line="36" pos:column="28"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">msg<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">ancount<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">==<pos:position pos:line="38" pos:column="24"/></operator> <literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>;<pos:position pos:line="39" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="40" pos:column="5">i<pos:position pos:line="40" pos:column="6"/></name> <operator pos:line="40" pos:column="7">=<pos:position pos:line="40" pos:column="8"/></operator> <operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">unsigned<pos:position pos:line="40" pos:column="18"/></name> <name pos:line="40" pos:column="19">int<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">)<pos:position pos:line="40" pos:column="23"/></operator> <name><name pos:line="40" pos:column="24">msg<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">ancount<pos:position pos:line="40" pos:column="36"/></name></name></expr>;<pos:position pos:line="40" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">recs<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <name><name pos:line="41" pos:column="12">msg<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">-&gt;<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="17">answer<pos:position pos:line="41" pos:column="23"/></name></name> <operator pos:line="41" pos:column="24">=<pos:position pos:line="41" pos:column="25"/></operator> <operator pos:line="41" pos:column="26">(<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">rfc1035_rr<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">*<pos:position pos:line="41" pos:column="38"/></operator><operator pos:line="41" pos:column="38">)<pos:position pos:line="41" pos:column="39"/></operator><call><name pos:line="41" pos:column="39">xcalloc<pos:position pos:line="41" pos:column="46"/></name><argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">i<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="50">sizeof<argument_list pos:line="41" pos:column="56">(<argument><expr><operator pos:line="41" pos:column="57">*<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="58">recs<pos:position pos:line="41" pos:column="62"/></name></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">j<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></init> <condition><expr><name pos:line="42" pos:column="17">j<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name></expr>;<pos:position pos:line="42" pos:column="23"/></condition> <incr><expr><name pos:line="42" pos:column="24">j<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">++<pos:position pos:line="42" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="28"/></control> <block pos:line="42" pos:column="29">{
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">off<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">&gt;=<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="20">sz<pos:position pos:line="43" pos:column="22"/></name></expr>)<pos:position pos:line="43" pos:column="23"/></condition><then pos:line="43" pos:column="23"> <block pos:line="43" pos:column="24">{	<comment type="block" pos:line="43" pos:column="33">/* corrupt packet */</comment>
            <expr_stmt><expr><name pos:line="44" pos:column="13">RFC1035_UNPACK_DEBUG<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
            <break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">rfc1035RRUnpack<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">buf<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="34">sz<pos:position pos:line="47" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="38">&amp;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="39">off<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="44">&amp;<pos:position pos:line="47" pos:column="49"/></operator><name><name pos:line="47" pos:column="45">recs<pos:position pos:line="47" pos:column="49"/></name><index pos:line="47" pos:column="49">[<expr><name pos:line="47" pos:column="50">j<pos:position pos:line="47" pos:column="51"/></name></expr>]<pos:position pos:line="47" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54"> <block pos:line="47" pos:column="55">{		<comment type="block" pos:line="47" pos:column="65">/* corrupt RR */</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">RFC1035_UNPACK_DEBUG<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
            <break pos:line="49" pos:column="13">break;<pos:position pos:line="49" pos:column="19"/></break>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="51" pos:column="9">nr<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">++<pos:position pos:line="51" pos:column="13"/></operator></expr>;<pos:position pos:line="51" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></for>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">nr<pos:position pos:line="53" pos:column="11"/></name> <operator pos:line="53" pos:column="12">==<pos:position pos:line="53" pos:column="14"/></operator> <literal type="number" pos:line="53" pos:column="15">0<pos:position pos:line="53" pos:column="16"/></literal></expr>)<pos:position pos:line="53" pos:column="17"/></condition><then pos:line="53" pos:column="17"> <block pos:line="53" pos:column="18">{
        <comment type="block" pos:line="54" pos:column="9">/*
         * we expected to unpack some answers (ancount != 0), but
         * didn't actually get any.
         */</comment>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="32">msg<pos:position pos:line="58" pos:column="35"/></name></expr></argument>)<pos:position pos:line="58" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="59" pos:column="9">*<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">answer<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <name pos:line="59" pos:column="19">NULL<pos:position pos:line="59" pos:column="23"/></name></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
        <return pos:line="60" pos:column="9">return <expr><operator pos:line="60" pos:column="16">-<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">rfc1035_unpack_error<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>
    <return pos:line="62" pos:column="5">return <expr><name pos:line="62" pos:column="12">nr<pos:position pos:line="62" pos:column="14"/></name></expr>;<pos:position pos:line="62" pos:column="15"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

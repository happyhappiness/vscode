<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4602_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertificateDb<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">create<pos:position pos:line="1" pos:column="32"/></name></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">std<pos:position pos:line="1" pos:column="36"/></name><operator pos:line="1" pos:column="36">::<pos:position pos:line="1" pos:column="38"/></operator><name pos:line="1" pos:column="38">string<pos:position pos:line="1" pos:column="44"/></name></name> <specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <modifier pos:line="1" pos:column="51">&amp;<pos:position pos:line="1" pos:column="56"/></modifier></type> <name pos:line="1" pos:column="53">db_path<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <block pos:line="1" pos:column="62">{
    <if pos:line="2" pos:column="5">if <condition pos:line="2" pos:column="8">(<expr><name pos:line="2" pos:column="9">db_path<pos:position pos:line="2" pos:column="16"/></name> <operator pos:line="2" pos:column="17">==<pos:position pos:line="2" pos:column="19"/></operator> <literal type="string" pos:line="2" pos:column="20">""<pos:position pos:line="2" pos:column="22"/></literal></expr>)<pos:position pos:line="2" pos:column="23"/></condition><then pos:line="2" pos:column="23">
        <block type="pseudo"><throw pos:line="3" pos:column="9">throw <expr><call><name><name pos:line="3" pos:column="15">std<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">::<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">runtime_error<pos:position pos:line="3" pos:column="33"/></name></name><argument_list pos:line="3" pos:column="33">(<argument><expr><literal type="string" pos:line="3" pos:column="34">"Path to db is empty"<pos:position pos:line="3" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="57"/></throw></block></then></if>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">string<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">db_full<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">db_path<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">+<pos:position pos:line="4" pos:column="34"/></operator> <literal type="string" pos:line="4" pos:column="35">"/"<pos:position pos:line="4" pos:column="38"/></literal> <operator pos:line="4" pos:column="39">+<pos:position pos:line="4" pos:column="40"/></operator> <name pos:line="4" pos:column="41">db_file<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">std<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">string<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">cert_full<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">db_path<pos:position pos:line="5" pos:column="34"/></name> <operator pos:line="5" pos:column="35">+<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="37">"/"<pos:position pos:line="5" pos:column="40"/></literal> <operator pos:line="5" pos:column="41">+<pos:position pos:line="5" pos:column="42"/></operator> <name pos:line="5" pos:column="43">cert_dir<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">std<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">::<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">string<pos:position pos:line="6" pos:column="16"/></name></name></type> <name pos:line="6" pos:column="17">size_full<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">db_path<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">+<pos:position pos:line="6" pos:column="36"/></operator> <literal type="string" pos:line="6" pos:column="37">"/"<pos:position pos:line="6" pos:column="40"/></literal> <operator pos:line="6" pos:column="41">+<pos:position pos:line="6" pos:column="42"/></operator> <name pos:line="6" pos:column="43">size_file<pos:position pos:line="6" pos:column="52"/></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name pos:line="8" pos:column="9">mkdir<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><call><name><name pos:line="8" pos:column="15">db_path<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">c_str<pos:position pos:line="8" pos:column="28"/></name></name><argument_list pos:line="8" pos:column="28">()<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="32">0777<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
        <block type="pseudo"><throw pos:line="9" pos:column="9">throw <expr><call><name><name pos:line="9" pos:column="15">std<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">::<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">runtime_error<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">(<argument><expr><literal type="string" pos:line="9" pos:column="34">"Cannot create "<pos:position pos:line="9" pos:column="50"/></literal> <operator pos:line="9" pos:column="51">+<pos:position pos:line="9" pos:column="52"/></operator> <name pos:line="9" pos:column="53">db_path<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></throw></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">mkdir<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><call><name><name pos:line="11" pos:column="15">cert_full<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">c_str<pos:position pos:line="11" pos:column="30"/></name></name><argument_list pos:line="11" pos:column="30">()<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="34">0777<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
        <block type="pseudo"><throw pos:line="12" pos:column="9">throw <expr><call><name><name pos:line="12" pos:column="15">std<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">::<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">runtime_error<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">(<argument><expr><literal type="string" pos:line="12" pos:column="34">"Cannot create "<pos:position pos:line="12" pos:column="50"/></literal> <operator pos:line="12" pos:column="51">+<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="53">cert_full<pos:position pos:line="12" pos:column="62"/></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></throw></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">std<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">::<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">ofstream<pos:position pos:line="14" pos:column="18"/></name></name></type> <name pos:line="14" pos:column="19">size<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><call><name><name pos:line="14" pos:column="24">size_full<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">c_str<pos:position pos:line="14" pos:column="39"/></name></name><argument_list pos:line="14" pos:column="39">()<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">size<pos:position pos:line="15" pos:column="13"/></name></expr>)<pos:position pos:line="15" pos:column="14"/></condition><then pos:line="15" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">size<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">&lt;&lt;<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><throw pos:line="18" pos:column="9">throw <expr><call><name><name pos:line="18" pos:column="15">std<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">::<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">runtime_error<pos:position pos:line="18" pos:column="33"/></name></name><argument_list pos:line="18" pos:column="33">(<argument><expr><literal type="string" pos:line="18" pos:column="34">"Cannot open "<pos:position pos:line="18" pos:column="48"/></literal> <operator pos:line="18" pos:column="49">+<pos:position pos:line="18" pos:column="50"/></operator> <name pos:line="18" pos:column="51">size_full<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">+<pos:position pos:line="18" pos:column="62"/></operator> <literal type="string" pos:line="18" pos:column="63">" to open"<pos:position pos:line="18" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></throw></block></else></if>
    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">std<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">::<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">ofstream<pos:position pos:line="19" pos:column="18"/></name></name></type> <name pos:line="19" pos:column="19">db<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><call><name><name pos:line="19" pos:column="22">db_full<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">c_str<pos:position pos:line="19" pos:column="35"/></name></name><argument_list pos:line="19" pos:column="35">()<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></decl>;<pos:position pos:line="19" pos:column="39"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">db<pos:position pos:line="20" pos:column="12"/></name></expr>)<pos:position pos:line="20" pos:column="13"/></condition><then pos:line="20" pos:column="13">
        <block type="pseudo"><throw pos:line="21" pos:column="9">throw <expr><call><name><name pos:line="21" pos:column="15">std<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">::<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">runtime_error<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">(<argument><expr><literal type="string" pos:line="21" pos:column="34">"Cannot open "<pos:position pos:line="21" pos:column="48"/></literal> <operator pos:line="21" pos:column="49">+<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">db_full<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">+<pos:position pos:line="21" pos:column="60"/></operator> <literal type="string" pos:line="21" pos:column="61">" to open"<pos:position pos:line="21" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="73"/></throw></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

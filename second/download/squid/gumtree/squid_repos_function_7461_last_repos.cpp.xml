<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7461_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">Extensions<pos:position pos:line="2" pos:column="21"/></name></name></type>
<name><name pos:line="3" pos:column="1">Security<pos:position pos:line="3" pos:column="9"/></name><operator pos:line="3" pos:column="9">::<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">SupportedExtensions<pos:position pos:line="3" pos:column="30"/></name></name><parameter_list pos:line="3" pos:column="30">()<pos:position pos:line="3" pos:column="32"/></parameter_list>
<block pos:line="4" pos:column="1">{
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_OPENSSL<pos:position pos:line="5" pos:column="16"/></name></expr></cpp:if>

    <comment type="line" pos:line="7" pos:column="5">// optimize lookup speed by reserving the number of values x3, approximately</comment>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">Security<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">::<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">Extensions<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">extensions<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><literal type="number" pos:line="8" pos:column="37">64<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

    <comment type="line" pos:line="10" pos:column="5">// Keep this list ordered and up to date by running something like</comment>
    <comment type="line" pos:line="11" pos:column="5">// egrep '# *define TLSEXT_TYPE_' /usr/include/openssl/tls1.h</comment>
    <comment type="line" pos:line="12" pos:column="5">// TODO: Teach OpenSSL to return the list of extensions it supports.</comment>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><call><name pos:line="13" pos:column="5">defined<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">TLSEXT_TYPE_server_name<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="13" pos:column="38">// 0</comment>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">extensions<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">insert<pos:position pos:line="14" pos:column="22"/></name></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">TLSEXT_TYPE_server_name<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><call><name pos:line="16" pos:column="5">defined<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">TLSEXT_TYPE_max_fragment_length<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="16" pos:column="46">// 1</comment>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">extensions<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">insert<pos:position pos:line="17" pos:column="22"/></name></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">TLSEXT_TYPE_max_fragment_length<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><call><name pos:line="19" pos:column="5">defined<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name pos:line="19" pos:column="13">TLSEXT_TYPE_client_certificate_url<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="19" pos:column="49">// 2</comment>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">extensions<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">insert<pos:position pos:line="20" pos:column="22"/></name></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">TLSEXT_TYPE_client_certificate_url<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><call><name pos:line="22" pos:column="5">defined<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">TLSEXT_TYPE_trusted_ca_keys<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="22" pos:column="42">// 3</comment>
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">extensions<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">insert<pos:position pos:line="23" pos:column="22"/></name></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">TLSEXT_TYPE_trusted_ca_keys<pos:position pos:line="23" pos:column="50"/></name></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">if<pos:position pos:line="25" pos:column="4"/></cpp:directive> <expr><call><name pos:line="25" pos:column="5">defined<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name pos:line="25" pos:column="13">TLSEXT_TYPE_truncated_hmac<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="25" pos:column="41">// 4</comment>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">extensions<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">insert<pos:position pos:line="26" pos:column="22"/></name></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">TLSEXT_TYPE_truncated_hmac<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">if<pos:position pos:line="28" pos:column="4"/></cpp:directive> <expr><call><name pos:line="28" pos:column="5">defined<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">TLSEXT_TYPE_status_request<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="28" pos:column="41">// 5</comment>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">extensions<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">insert<pos:position pos:line="29" pos:column="22"/></name></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">TLSEXT_TYPE_status_request<pos:position pos:line="29" pos:column="49"/></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><call><name pos:line="31" pos:column="5">defined<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><name pos:line="31" pos:column="13">TLSEXT_TYPE_user_mapping<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="31" pos:column="39">// 6</comment>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">extensions<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">insert<pos:position pos:line="32" pos:column="22"/></name></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">TLSEXT_TYPE_user_mapping<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><call><name pos:line="34" pos:column="5">defined<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><name pos:line="34" pos:column="13">TLSEXT_TYPE_client_authz<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="34" pos:column="39">// 7</comment>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">extensions<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">insert<pos:position pos:line="35" pos:column="22"/></name></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">TLSEXT_TYPE_client_authz<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><call><name pos:line="37" pos:column="5">defined<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">TLSEXT_TYPE_server_authz<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="37" pos:column="39">// 8</comment>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">extensions<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">insert<pos:position pos:line="38" pos:column="22"/></name></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">TLSEXT_TYPE_server_authz<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><call><name pos:line="40" pos:column="5">defined<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">TLSEXT_TYPE_cert_type<pos:position pos:line="40" pos:column="34"/></name></expr></argument>)<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="40" pos:column="36">// 9</comment>
    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">extensions<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">.<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="16">insert<pos:position pos:line="41" pos:column="22"/></name></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">TLSEXT_TYPE_cert_type<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><call><name pos:line="43" pos:column="5">defined<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><name pos:line="43" pos:column="13">TLSEXT_TYPE_elliptic_curves<pos:position pos:line="43" pos:column="40"/></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="43" pos:column="42">// 10</comment>
    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">extensions<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">.<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="16">insert<pos:position pos:line="44" pos:column="22"/></name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">TLSEXT_TYPE_elliptic_curves<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">if<pos:position pos:line="46" pos:column="4"/></cpp:directive> <expr><call><name pos:line="46" pos:column="5">defined<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><name pos:line="46" pos:column="13">TLSEXT_TYPE_ec_point_formats<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="46" pos:column="43">// 11</comment>
    <expr_stmt><expr><call><name><name pos:line="47" pos:column="5">extensions<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">.<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">insert<pos:position pos:line="47" pos:column="22"/></name></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">TLSEXT_TYPE_ec_point_formats<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">if<pos:position pos:line="49" pos:column="4"/></cpp:directive> <expr><call><name pos:line="49" pos:column="5">defined<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">TLSEXT_TYPE_srp<pos:position pos:line="49" pos:column="28"/></name></expr></argument>)<pos:position pos:line="49" pos:column="29"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="49" pos:column="30">// 12</comment>
    <expr_stmt><expr><call><name><name pos:line="50" pos:column="5">extensions<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">.<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">insert<pos:position pos:line="50" pos:column="22"/></name></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">TLSEXT_TYPE_srp<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><call><name pos:line="52" pos:column="5">defined<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">TLSEXT_TYPE_signature_algorithms<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="52" pos:column="47">// 13</comment>
    <expr_stmt><expr><call><name><name pos:line="53" pos:column="5">extensions<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">.<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="16">insert<pos:position pos:line="53" pos:column="22"/></name></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">TLSEXT_TYPE_signature_algorithms<pos:position pos:line="53" pos:column="55"/></name></expr></argument>)<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="57"/></expr_stmt>
<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">if<pos:position pos:line="55" pos:column="4"/></cpp:directive> <expr><call><name pos:line="55" pos:column="5">defined<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><name pos:line="55" pos:column="13">TLSEXT_TYPE_use_srtp<pos:position pos:line="55" pos:column="33"/></name></expr></argument>)<pos:position pos:line="55" pos:column="34"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="55" pos:column="35">// 14</comment>
    <expr_stmt><expr><call><name><name pos:line="56" pos:column="5">extensions<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">.<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">insert<pos:position pos:line="56" pos:column="22"/></name></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">TLSEXT_TYPE_use_srtp<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">endif<pos:position pos:line="57" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><call><name pos:line="58" pos:column="5">defined<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><name pos:line="58" pos:column="13">TLSEXT_TYPE_heartbeat<pos:position pos:line="58" pos:column="34"/></name></expr></argument>)<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="58" pos:column="36">// 15</comment>
    <expr_stmt><expr><call><name><name pos:line="59" pos:column="5">extensions<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">.<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="16">insert<pos:position pos:line="59" pos:column="22"/></name></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name pos:line="59" pos:column="23">TLSEXT_TYPE_heartbeat<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><call><name pos:line="61" pos:column="5">defined<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">TLSEXT_TYPE_session_ticket<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="61" pos:column="41">// 35</comment>
    <expr_stmt><expr><call><name><name pos:line="62" pos:column="5">extensions<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">.<pos:position pos:line="62" pos:column="16"/></operator><name pos:line="62" pos:column="16">insert<pos:position pos:line="62" pos:column="22"/></name></name><argument_list pos:line="62" pos:column="22">(<argument><expr><name pos:line="62" pos:column="23">TLSEXT_TYPE_session_ticket<pos:position pos:line="62" pos:column="49"/></name></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">if<pos:position pos:line="64" pos:column="4"/></cpp:directive> <expr><call><name pos:line="64" pos:column="5">defined<pos:position pos:line="64" pos:column="12"/></name><argument_list pos:line="64" pos:column="12">(<argument><expr><name pos:line="64" pos:column="13">TLSEXT_TYPE_renegotiate<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="64" pos:column="38">// 0xff01</comment>
    <expr_stmt><expr><call><name><name pos:line="65" pos:column="5">extensions<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">.<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">insert<pos:position pos:line="65" pos:column="22"/></name></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">TLSEXT_TYPE_renegotiate<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">if<pos:position pos:line="67" pos:column="4"/></cpp:directive> <expr><call><name pos:line="67" pos:column="5">defined<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">TLSEXT_TYPE_next_proto_neg<pos:position pos:line="67" pos:column="39"/></name></expr></argument>)<pos:position pos:line="67" pos:column="40"/></argument_list></call></expr></cpp:if> <comment type="line" pos:line="67" pos:column="41">// 13172</comment>
    <expr_stmt><expr><call><name><name pos:line="68" pos:column="5">extensions<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">.<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="16">insert<pos:position pos:line="68" pos:column="22"/></name></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name pos:line="68" pos:column="23">TLSEXT_TYPE_next_proto_neg<pos:position pos:line="68" pos:column="49"/></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="71" pos:column="5">/*
     * OpenSSL does not support these last extensions by default, but those
     * building the OpenSSL libraries and/or Squid might define them.
     */</comment>

    <comment type="line" pos:line="76" pos:column="5">// OpenSSL may be built to support draft-rescorla-tls-opaque-prf-input-00,</comment>
    <comment type="line" pos:line="77" pos:column="5">// with the extension type value configured at build time. OpenSSL, Squid,</comment>
    <comment type="line" pos:line="78" pos:column="5">// and TLS agents must all be built with the same extension type value.</comment>
<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><call><name pos:line="79" pos:column="5">defined<pos:position pos:line="79" pos:column="12"/></name><argument_list pos:line="79" pos:column="12">(<argument><expr><name pos:line="79" pos:column="13">TLSEXT_TYPE_opaque_prf_input<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="80" pos:column="5">extensions<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">.<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="16">insert<pos:position pos:line="80" pos:column="22"/></name></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">TLSEXT_TYPE_opaque_prf_input<pos:position pos:line="80" pos:column="51"/></name></expr></argument>)<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">endif<pos:position pos:line="81" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="83" pos:column="5">// Define this to add extensions supported by your OpenSSL but unknown to</comment>
    <comment type="line" pos:line="84" pos:column="5">// your Squid version. Use {list-initialization} to add multiple extensions.</comment>
<cpp:if pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">if<pos:position pos:line="85" pos:column="4"/></cpp:directive> <expr><call><name pos:line="85" pos:column="5">defined<pos:position pos:line="85" pos:column="12"/></name><argument_list pos:line="85" pos:column="12">(<argument><expr><name pos:line="85" pos:column="13">TLSEXT_TYPE_SUPPORTED_BY_MY_SQUID<pos:position pos:line="85" pos:column="46"/></name></expr></argument>)<pos:position pos:line="85" pos:column="47"/></argument_list></call></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="86" pos:column="5">extensions<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">.<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">insert<pos:position pos:line="86" pos:column="22"/></name></name><argument_list pos:line="86" pos:column="22">(<argument><expr><name pos:line="86" pos:column="23">TLSEXT_TYPE_SUPPORTED_BY_MY_SQUID<pos:position pos:line="86" pos:column="56"/></name></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="89" pos:column="5">return <expr><name pos:line="89" pos:column="12">extensions<pos:position pos:line="89" pos:column="22"/></name></expr>;<pos:position pos:line="89" pos:column="23"/></return> <comment type="line" pos:line="89" pos:column="24">// might be empty</comment>
<cpp:else pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">else<pos:position pos:line="90" pos:column="6"/></cpp:directive></cpp:else>

    <return pos:line="92" pos:column="5">return <expr><call><name pos:line="92" pos:column="12">Extensions<pos:position pos:line="92" pos:column="22"/></name><argument_list pos:line="92" pos:column="22">()<pos:position pos:line="92" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="25"/></return> <comment type="line" pos:line="92" pos:column="26">// no extensions are supported without OpenSSL</comment>
<cpp:endif pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">endif<pos:position pos:line="93" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

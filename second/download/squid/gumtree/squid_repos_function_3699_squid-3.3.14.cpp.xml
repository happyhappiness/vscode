<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3699_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Intercept<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">NetfilterInterception<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name><name pos:line="2" pos:column="44">Comm<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">ConnectionPointer<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">&amp;<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="69">newConn<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="78">int<pos:position pos:line="2" pos:column="81"/></name></type> <name pos:line="2" pos:column="82">silent<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">LINUX_NETFILTER<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">sockaddr_in<pos:position pos:line="5" pos:column="23"/></name></name></type> <name pos:line="5" pos:column="24">lookup<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">socklen_t<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">len<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr pos:line="6" pos:column="28">struct <name pos:line="6" pos:column="35">sockaddr_in<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">newConn<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">local<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">GetSockAddr<pos:position pos:line="7" pos:column="31"/></name></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">lookup<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="9" pos:column="5">/** \par
     * Try NAT lookup for REDIRECT or DNAT targets. */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">( <expr><call><name pos:line="11" pos:column="10">getsockopt<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name><name pos:line="11" pos:column="21">newConn<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">fd<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">IPPROTO_IP<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">SO_ORIGINAL_DST<pos:position pos:line="11" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="63">&amp;<pos:position pos:line="11" pos:column="68"/></operator><name pos:line="11" pos:column="64">lookup<pos:position pos:line="11" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="72">&amp;<pos:position pos:line="11" pos:column="77"/></operator><name pos:line="11" pos:column="73">len<pos:position pos:line="11" pos:column="76"/></name></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call> <operator pos:line="11" pos:column="78">!=<pos:position pos:line="11" pos:column="80"/></operator> <literal type="number" pos:line="11" pos:column="81">0<pos:position pos:line="11" pos:column="82"/></literal></expr>)<pos:position pos:line="11" pos:column="83"/></condition><then pos:line="11" pos:column="83"> <block pos:line="11" pos:column="84">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">silent<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">89<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">DBG_IMPORTANT<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">HERE<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">&lt;&lt;<pos:position pos:line="13" pos:column="52"/></operator> <literal type="string" pos:line="13" pos:column="47">" NF getsockopt(SO_ORIGINAL_DST) failed on "<pos:position pos:line="13" pos:column="91"/></literal> <operator pos:line="13" pos:column="92">&lt;&lt;<pos:position pos:line="13" pos:column="100"/></operator> <name pos:line="13" pos:column="95">newConn<pos:position pos:line="13" pos:column="102"/></name> <operator pos:line="13" pos:column="103">&lt;&lt;<pos:position pos:line="13" pos:column="111"/></operator> <literal type="string" pos:line="13" pos:column="106">": "<pos:position pos:line="13" pos:column="110"/></literal> <operator pos:line="13" pos:column="111">&lt;&lt;<pos:position pos:line="13" pos:column="119"/></operator> <call><name pos:line="13" pos:column="114">xstrerror<pos:position pos:line="13" pos:column="123"/></name><argument_list pos:line="13" pos:column="123">()<pos:position pos:line="13" pos:column="125"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="127"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">lastReported_<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">squid_curtime<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">89<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">9<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">HERE<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;&lt;<pos:position pos:line="16" pos:column="36"/></operator> <literal type="string" pos:line="16" pos:column="31">"address: "<pos:position pos:line="16" pos:column="42"/></literal> <operator pos:line="16" pos:column="43">&lt;&lt;<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="46">newConn<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><literal type="boolean" pos:line="17" pos:column="16">false<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">newConn<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">local<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">lookup<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">89<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">5<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">HERE<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">&lt;&lt;<pos:position pos:line="20" pos:column="36"/></operator> <literal type="string" pos:line="20" pos:column="31">"address NAT: "<pos:position pos:line="20" pos:column="46"/></literal> <operator pos:line="20" pos:column="47">&lt;&lt;<pos:position pos:line="20" pos:column="55"/></operator> <name pos:line="20" pos:column="50">newConn<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><literal type="boolean" pos:line="21" pos:column="16">true<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="24" pos:column="5">return <expr><literal type="boolean" pos:line="24" pos:column="12">false<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

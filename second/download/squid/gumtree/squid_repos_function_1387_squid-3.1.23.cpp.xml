<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1387_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">Math<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">int64Percent<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">int64_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">a<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">int64_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">b<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><ternary><condition><expr><name pos:line="4" pos:column="12">b<pos:position pos:line="4" pos:column="13"/></name></expr> ?<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15"> <expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><call pos:line="4" pos:column="17">(<name pos:line="4" pos:column="18">int64_t<pos:position pos:line="4" pos:column="25"/></name>) <argument_list pos:line="4" pos:column="27">(<argument><expr><literal type="number" pos:line="4" pos:column="28">100.0<pos:position pos:line="4" pos:column="33"/></literal> <operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="36">a<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">/<pos:position pos:line="4" pos:column="39"/></operator> <name pos:line="4" pos:column="40">b<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">+<pos:position pos:line="4" pos:column="43"/></operator> <literal type="number" pos:line="4" pos:column="44">0.5<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator></expr> <pos:position pos:line="4" pos:column="50"/></then><else pos:line="4" pos:column="50">: <expr><literal type="number" pos:line="4" pos:column="52">0<pos:position pos:line="4" pos:column="53"/></literal></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="54"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

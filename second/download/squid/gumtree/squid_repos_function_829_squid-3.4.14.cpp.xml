<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_829_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name><name pos:line="1" pos:column="5">FadingCounter<pos:position pos:line="1" pos:column="18"/></name><operator pos:line="1" pos:column="18">::<pos:position pos:line="1" pos:column="20"/></operator><name pos:line="1" pos:column="20">count<pos:position pos:line="1" pos:column="25"/></name></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">howMany<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">howMany<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">&gt;=<pos:position pos:line="3" pos:column="23"/></operator> <literal type="number" pos:line="3" pos:column="21">0<pos:position pos:line="3" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="24"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">delta<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&lt;<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">total<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">+=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">howMany<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></return></block></then></if> <comment type="line" pos:line="6" pos:column="34">// forget nothing</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">horizon<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&lt;<pos:position pos:line="8" pos:column="21"/></operator> <literal type="number" pos:line="8" pos:column="19">1e-3<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <comment type="line" pos:line="8" pos:column="25">// (e.g., zero)</comment>
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">howMany<pos:position pos:line="9" pos:column="23"/></name></expr>;<pos:position pos:line="9" pos:column="24"/></return></block></then></if> <comment type="line" pos:line="9" pos:column="25">// remember nothing</comment>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">double<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">deltas<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">current_dtime<pos:position pos:line="11" pos:column="41"/></name> <operator pos:line="11" pos:column="42">-<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">lastTime<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">)<pos:position pos:line="11" pos:column="53"/></operator> <operator pos:line="11" pos:column="54">/<pos:position pos:line="11" pos:column="55"/></operator> <name pos:line="11" pos:column="56">delta<pos:position pos:line="11" pos:column="61"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="62"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">deltas<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&gt;=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="19">precision<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">||<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">current_dtime<pos:position pos:line="12" pos:column="45"/></name> <operator pos:line="12" pos:column="46">&lt;<pos:position pos:line="12" pos:column="50"/></operator> <name pos:line="12" pos:column="48">lastTime<pos:position pos:line="12" pos:column="56"/></name></expr>)<pos:position pos:line="12" pos:column="57"/></condition><then pos:line="12" pos:column="57"> <block pos:line="12" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">clear<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">()<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt> <comment type="line" pos:line="13" pos:column="18">// forget all values</comment>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <comment type="line" pos:line="15" pos:column="9">// forget stale values, if any</comment>
        <comment type="line" pos:line="16" pos:column="9">// fmod() or "current_dtime/delta" will overflow int for small deltas</comment>
        <decl_stmt><decl><type><specifier pos:line="17" pos:column="9">const<pos:position pos:line="17" pos:column="14"/></specifier> <name pos:line="17" pos:column="15">int<pos:position pos:line="17" pos:column="18"/></name></type> <name pos:line="17" pos:column="19">lastSlot<pos:position pos:line="17" pos:column="27"/></name> <init pos:line="17" pos:column="28">= <expr><cast type="static" pos:line="17" pos:column="30">static_cast<argument_list type="generic" pos:line="17" pos:column="41">&lt;<argument><expr><name pos:line="17" pos:column="42">int<pos:position pos:line="17" pos:column="45"/></name></expr></argument>&gt;<pos:position pos:line="17" pos:column="49"/></argument_list><argument_list pos:line="17" pos:column="46">(<argument><expr><call><name pos:line="17" pos:column="47">fmod<pos:position pos:line="17" pos:column="51"/></name><argument_list pos:line="17" pos:column="51">(<argument><expr><name pos:line="17" pos:column="52">lastTime<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">horizon<pos:position pos:line="17" pos:column="69"/></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call> <operator pos:line="17" pos:column="71">/<pos:position pos:line="17" pos:column="72"/></operator> <name pos:line="17" pos:column="73">delta<pos:position pos:line="17" pos:column="78"/></name></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="17" pos:column="80"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">int<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">staleSlots<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><cast type="static" pos:line="18" pos:column="32">static_cast<argument_list type="generic" pos:line="18" pos:column="43">&lt;<argument><expr><name pos:line="18" pos:column="44">int<pos:position pos:line="18" pos:column="47"/></name></expr></argument>&gt;<pos:position pos:line="18" pos:column="51"/></argument_list><argument_list pos:line="18" pos:column="48">(<argument><expr><name pos:line="18" pos:column="49">deltas<pos:position pos:line="18" pos:column="55"/></name></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>
        <for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><decl><type><name pos:line="19" pos:column="14">int<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">i<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="25">s<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name pos:line="19" pos:column="29">lastSlot<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">+<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">1<pos:position pos:line="19" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="42"/></init> <condition><expr><name pos:line="19" pos:column="43">i<pos:position pos:line="19" pos:column="44"/></name> <operator pos:line="19" pos:column="45">&lt;<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="47">staleSlots<pos:position pos:line="19" pos:column="57"/></name></expr>;<pos:position pos:line="19" pos:column="58"/></condition> <incr><expr><operator pos:line="19" pos:column="59">++<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="61">i<pos:position pos:line="19" pos:column="62"/></name></expr><operator pos:line="19" pos:column="62">,<pos:position pos:line="19" pos:column="63"/></operator> <expr><operator pos:line="19" pos:column="64">++<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="66">s<pos:position pos:line="19" pos:column="67"/></name></expr></incr>)<pos:position pos:line="19" pos:column="68"/></control> <block pos:line="19" pos:column="69">{
            <decl_stmt><decl><type><specifier pos:line="20" pos:column="13">const<pos:position pos:line="20" pos:column="18"/></specifier> <name pos:line="20" pos:column="19">int<pos:position pos:line="20" pos:column="22"/></name></type> <name pos:line="20" pos:column="23">idx<pos:position pos:line="20" pos:column="26"/></name> <init pos:line="20" pos:column="27">= <expr><name pos:line="20" pos:column="29">s<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">%<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">precision<pos:position pos:line="20" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">total<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">-=<pos:position pos:line="21" pos:column="21"/></operator> <name><name pos:line="21" pos:column="22">counters<pos:position pos:line="21" pos:column="30"/></name><index pos:line="21" pos:column="30">[<expr><name pos:line="21" pos:column="31">idx<pos:position pos:line="21" pos:column="34"/></name></expr>]<pos:position pos:line="21" pos:column="35"/></index></name></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">counters<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><name pos:line="22" pos:column="22">idx<pos:position pos:line="22" pos:column="25"/></name></expr>]<pos:position pos:line="22" pos:column="26"/></index></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="29">0<pos:position pos:line="22" pos:column="30"/></literal></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">Must<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">total<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&gt;=<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></for>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="27" pos:column="5">// apply new information</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">lastTime<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">current_dtime<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">const<pos:position pos:line="29" pos:column="10"/></specifier> <name pos:line="29" pos:column="11">int<pos:position pos:line="29" pos:column="14"/></name></type> <name pos:line="29" pos:column="15">curSlot<pos:position pos:line="29" pos:column="22"/></name> <init pos:line="29" pos:column="23">= <expr><cast type="static" pos:line="29" pos:column="25">static_cast<argument_list type="generic" pos:line="29" pos:column="36">&lt;<argument><expr><name pos:line="29" pos:column="37">int<pos:position pos:line="29" pos:column="40"/></name></expr></argument>&gt;<pos:position pos:line="29" pos:column="44"/></argument_list><argument_list pos:line="29" pos:column="41">(<argument><expr><call><name pos:line="29" pos:column="42">fmod<pos:position pos:line="29" pos:column="46"/></name><argument_list pos:line="29" pos:column="46">(<argument><expr><name pos:line="29" pos:column="47">lastTime<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="57">horizon<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call> <operator pos:line="29" pos:column="66">/<pos:position pos:line="29" pos:column="67"/></operator> <name pos:line="29" pos:column="68">delta<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="29" pos:column="75"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">counters<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">curSlot<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">%<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">precision<pos:position pos:line="30" pos:column="33"/></name></expr>]<pos:position pos:line="30" pos:column="34"/></index></name> <operator pos:line="30" pos:column="35">+=<pos:position pos:line="30" pos:column="37"/></operator> <name pos:line="30" pos:column="38">howMany<pos:position pos:line="30" pos:column="45"/></name></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">total<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">+=<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">howMany<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">Must<pos:position pos:line="32" pos:column="9"/></name><argument_list pos:line="32" pos:column="9">(<argument><expr><name pos:line="32" pos:column="10">total<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">&gt;=<pos:position pos:line="32" pos:column="21"/></operator> <literal type="number" pos:line="32" pos:column="19">0<pos:position pos:line="32" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>

    <return pos:line="34" pos:column="5">return <expr><name pos:line="34" pos:column="12">total<pos:position pos:line="34" pos:column="17"/></name></expr>;<pos:position pos:line="34" pos:column="18"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

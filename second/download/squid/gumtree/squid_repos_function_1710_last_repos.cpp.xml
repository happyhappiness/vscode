<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1710_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">httpFixupAuthentication<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">HttpRequest<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">request<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <name pos:line="2" pos:column="54">HttpHeader<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type> <name pos:line="2" pos:column="67">hdr_in<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">HttpHeader<pos:position pos:line="2" pos:column="85"/></name> <modifier pos:line="2" pos:column="86">*<pos:position pos:line="2" pos:column="87"/></modifier></type> <name pos:line="2" pos:column="88">hdr_out<pos:position pos:line="2" pos:column="95"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="97">const<pos:position pos:line="2" pos:column="102"/></specifier> <name><name pos:line="2" pos:column="103">Http<pos:position pos:line="2" pos:column="107"/></name><operator pos:line="2" pos:column="107">::<pos:position pos:line="2" pos:column="109"/></operator><name pos:line="2" pos:column="109">StateFlags<pos:position pos:line="2" pos:column="119"/></name></name> <modifier pos:line="2" pos:column="120">&amp;<pos:position pos:line="2" pos:column="125"/></modifier></type><name pos:line="2" pos:column="121">flags<pos:position pos:line="2" pos:column="126"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="127"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Http<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">HdrType<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">header<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><ternary><condition><expr><name><name pos:line="4" pos:column="28">flags<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">originpeer<pos:position pos:line="4" pos:column="44"/></name></name></expr> ?<pos:position pos:line="4" pos:column="46"/></condition><then pos:line="4" pos:column="46"> <expr><name><name pos:line="4" pos:column="47">Http<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">::<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="53">HdrType<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">::<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="62">AUTHORIZATION<pos:position pos:line="4" pos:column="75"/></name></name></expr> <pos:position pos:line="4" pos:column="76"/></then><else pos:line="4" pos:column="76">: <expr><name><name pos:line="4" pos:column="78">Http<pos:position pos:line="4" pos:column="82"/></name><operator pos:line="4" pos:column="82">::<pos:position pos:line="4" pos:column="84"/></operator><name pos:line="4" pos:column="84">HdrType<pos:position pos:line="4" pos:column="91"/></name><operator pos:line="4" pos:column="91">::<pos:position pos:line="4" pos:column="93"/></operator><name pos:line="4" pos:column="93">PROXY_AUTHORIZATION<pos:position pos:line="4" pos:column="112"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="113"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Nothing to do unless we are forwarding to a peer */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">request<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">flags<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">proxying<pos:position pos:line="7" pos:column="33"/></name></name></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* Needs to be explicitly enabled */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">request<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">peer_login<pos:position pos:line="11" pos:column="29"/></name></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* Maybe already dealt with? */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">hdr_out<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">has<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">header<pos:position pos:line="15" pos:column="28"/></name></expr></argument>)<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
        <block type="pseudo"><return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* Nothing to do here for PASSTHRU */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strcmp<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name><name pos:line="19" pos:column="16">request<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">peer_login<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="37">"PASSTHRU"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call> <operator pos:line="19" pos:column="49">==<pos:position pos:line="19" pos:column="51"/></operator> <literal type="number" pos:line="19" pos:column="52">0<pos:position pos:line="19" pos:column="53"/></literal></expr>)<pos:position pos:line="19" pos:column="54"/></condition><then pos:line="19" pos:column="54">
        <block type="pseudo"><return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* PROXYPASS is a special case, single-signon to servers with the proxy password (basic only) */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">flags<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">originpeer<pos:position pos:line="23" pos:column="25"/></name></name> <operator pos:line="23" pos:column="26">&amp;&amp;<pos:position pos:line="23" pos:column="36"/></operator> <call><name pos:line="23" pos:column="29">strcmp<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">request<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">peer_login<pos:position pos:line="23" pos:column="55"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="57">"PROXYPASS"<pos:position pos:line="23" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call> <operator pos:line="23" pos:column="70">==<pos:position pos:line="23" pos:column="72"/></operator> <literal type="number" pos:line="23" pos:column="73">0<pos:position pos:line="23" pos:column="74"/></literal> <operator pos:line="23" pos:column="75">&amp;&amp;<pos:position pos:line="23" pos:column="85"/></operator> <call><name><name pos:line="23" pos:column="78">hdr_in<pos:position pos:line="23" pos:column="84"/></name><operator pos:line="23" pos:column="84">-&gt;<pos:position pos:line="23" pos:column="89"/></operator><name pos:line="23" pos:column="86">has<pos:position pos:line="23" pos:column="89"/></name></name><argument_list pos:line="23" pos:column="89">(<argument><expr><name><name pos:line="23" pos:column="90">Http<pos:position pos:line="23" pos:column="94"/></name><operator pos:line="23" pos:column="94">::<pos:position pos:line="23" pos:column="96"/></operator><name pos:line="23" pos:column="96">HdrType<pos:position pos:line="23" pos:column="103"/></name><operator pos:line="23" pos:column="103">::<pos:position pos:line="23" pos:column="105"/></operator><name pos:line="23" pos:column="105">PROXY_AUTHORIZATION<pos:position pos:line="23" pos:column="124"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="125"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="126"/></condition><then pos:line="23" pos:column="126"> <block pos:line="23" pos:column="127">{
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">const<pos:position pos:line="24" pos:column="14"/></specifier> <name pos:line="24" pos:column="15">char<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">auth<pos:position pos:line="24" pos:column="25"/></name> <init pos:line="24" pos:column="26">= <expr><call><name><name pos:line="24" pos:column="28">hdr_in<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">getStr<pos:position pos:line="24" pos:column="42"/></name></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name><name pos:line="24" pos:column="43">Http<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">::<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">HdrType<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">::<pos:position pos:line="24" pos:column="58"/></operator><name pos:line="24" pos:column="58">PROXY_AUTHORIZATION<pos:position pos:line="24" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="79"/></decl_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">auth<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&amp;&amp;<pos:position pos:line="26" pos:column="28"/></operator> <call><name pos:line="26" pos:column="21">strncasecmp<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">auth<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"basic "<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="49">6<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call> <operator pos:line="26" pos:column="52">==<pos:position pos:line="26" pos:column="54"/></operator> <literal type="number" pos:line="26" pos:column="55">0<pos:position pos:line="26" pos:column="56"/></literal></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57"> <block pos:line="26" pos:column="58">{
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">hdr_out<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">putStr<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">header<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">auth<pos:position pos:line="27" pos:column="41"/></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
            <return pos:line="28" pos:column="13">return;<pos:position pos:line="28" pos:column="20"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="32" pos:column="5">uint8_t<pos:position pos:line="32" pos:column="12"/></name></type> <name><name pos:line="32" pos:column="13">loginbuf<pos:position pos:line="32" pos:column="21"/></name><index pos:line="32" pos:column="21">[<expr><call><name pos:line="32" pos:column="22">base64_encode_len<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><name pos:line="32" pos:column="40">MAX_LOGIN_SZ<pos:position pos:line="32" pos:column="52"/></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>]<pos:position pos:line="32" pos:column="54"/></index></name></decl>;<pos:position pos:line="32" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">size_t<pos:position pos:line="33" pos:column="11"/></name></type> <name pos:line="33" pos:column="12">blen<pos:position pos:line="33" pos:column="16"/></name></decl>;<pos:position pos:line="33" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="34" pos:column="5">struct<pos:position pos:line="34" pos:column="11"/></name> <name pos:line="34" pos:column="12">base64_encode_ctx<pos:position pos:line="34" pos:column="29"/></name></name></type> <name pos:line="34" pos:column="30">ctx<pos:position pos:line="34" pos:column="33"/></name></decl>;<pos:position pos:line="34" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">base64_encode_init<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><operator pos:line="35" pos:column="24">&amp;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="25">ctx<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* Special mode to pass the username to the upstream cache */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name><name pos:line="38" pos:column="10">request<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">peer_login<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">==<pos:position pos:line="38" pos:column="32"/></operator> <literal type="char" pos:line="38" pos:column="33">'*'<pos:position pos:line="38" pos:column="36"/></literal></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37"> <block pos:line="38" pos:column="38">{
        <decl_stmt><decl><type><specifier pos:line="39" pos:column="9">const<pos:position pos:line="39" pos:column="14"/></specifier> <name pos:line="39" pos:column="15">char<pos:position pos:line="39" pos:column="19"/></name> <modifier pos:line="39" pos:column="20">*<pos:position pos:line="39" pos:column="21"/></modifier></type><name pos:line="39" pos:column="21">username<pos:position pos:line="39" pos:column="29"/></name> <init pos:line="39" pos:column="30">= <expr><literal type="string" pos:line="39" pos:column="32">"-"<pos:position pos:line="39" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="36"/></decl_stmt>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><call><name><name pos:line="41" pos:column="13">request<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">extacl_user<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">.<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">size<pos:position pos:line="41" pos:column="38"/></name></name><argument_list pos:line="41" pos:column="38">()<pos:position pos:line="41" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="13">username<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <call><name><name pos:line="42" pos:column="24">request<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">extacl_user<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">.<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">termedBuf<pos:position pos:line="42" pos:column="54"/></name></name><argument_list pos:line="42" pos:column="54">()<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt></block></then>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">USE_AUTH<pos:position pos:line="43" pos:column="13"/></name></expr></cpp:if>
        <elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><name><name pos:line="44" pos:column="18">request<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">auth_user_request<pos:position pos:line="44" pos:column="44"/></name></name> <operator pos:line="44" pos:column="45">!=<pos:position pos:line="44" pos:column="47"/></operator> <name pos:line="44" pos:column="48">NULL<pos:position pos:line="44" pos:column="52"/></name></expr>)<pos:position pos:line="44" pos:column="53"/></condition><then pos:line="44" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="13">username<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <call><name><name pos:line="45" pos:column="24">request<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">-&gt;<pos:position pos:line="45" pos:column="36"/></operator><name pos:line="45" pos:column="33">auth_user_request<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">-&gt;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="52">username<pos:position pos:line="45" pos:column="60"/></name></name><argument_list pos:line="45" pos:column="60">()<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt></block></then></if></elseif></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name pos:line="48" pos:column="9">blen<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">base64_encode_update<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">(<argument><expr><operator pos:line="48" pos:column="37">&amp;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="38">ctx<pos:position pos:line="48" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="43">loginbuf<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="53">strlen<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(<argument><expr><name pos:line="48" pos:column="60">username<pos:position pos:line="48" pos:column="68"/></name></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="48" pos:column="71">reinterpret_cast<argument_list type="generic" pos:line="48" pos:column="87">&lt;<argument><expr><specifier pos:line="48" pos:column="88">const<pos:position pos:line="48" pos:column="93"/></specifier> <name pos:line="48" pos:column="94">uint8_t<pos:position pos:line="48" pos:column="101"/></name><operator pos:line="48" pos:column="101">*<pos:position pos:line="48" pos:column="102"/></operator></expr></argument>&gt;<pos:position pos:line="48" pos:column="106"/></argument_list><argument_list pos:line="48" pos:column="103">(<argument><expr><name pos:line="48" pos:column="104">username<pos:position pos:line="48" pos:column="112"/></name></expr></argument>)<pos:position pos:line="48" pos:column="113"/></argument_list></cast></expr></argument>)<pos:position pos:line="48" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="115"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">blen<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">+=<pos:position pos:line="49" pos:column="16"/></operator> <call><name pos:line="49" pos:column="17">base64_encode_update<pos:position pos:line="49" pos:column="37"/></name><argument_list pos:line="49" pos:column="37">(<argument><expr><operator pos:line="49" pos:column="38">&amp;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="39">ctx<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="44">loginbuf<pos:position pos:line="49" pos:column="52"/></name><operator pos:line="49" pos:column="52">+<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="53">blen<pos:position pos:line="49" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="59">strlen<pos:position pos:line="49" pos:column="65"/></name><argument_list pos:line="49" pos:column="65">(<argument><expr><name><name pos:line="49" pos:column="66">request<pos:position pos:line="49" pos:column="73"/></name><operator pos:line="49" pos:column="73">-&gt;<pos:position pos:line="49" pos:column="78"/></operator><name pos:line="49" pos:column="75">peer_login<pos:position pos:line="49" pos:column="85"/></name></name> <operator pos:line="49" pos:column="86">+<pos:position pos:line="49" pos:column="87"/></operator><literal type="number" pos:line="49" pos:column="87">1<pos:position pos:line="49" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="49" pos:column="91">reinterpret_cast<argument_list type="generic" pos:line="49" pos:column="107">&lt;<argument><expr><specifier pos:line="49" pos:column="108">const<pos:position pos:line="49" pos:column="113"/></specifier> <name pos:line="49" pos:column="114">uint8_t<pos:position pos:line="49" pos:column="121"/></name><operator pos:line="49" pos:column="121">*<pos:position pos:line="49" pos:column="122"/></operator></expr></argument>&gt;<pos:position pos:line="49" pos:column="126"/></argument_list><argument_list pos:line="49" pos:column="123">(<argument><expr><name><name pos:line="49" pos:column="124">request<pos:position pos:line="49" pos:column="131"/></name><operator pos:line="49" pos:column="131">-&gt;<pos:position pos:line="49" pos:column="136"/></operator><name pos:line="49" pos:column="133">peer_login<pos:position pos:line="49" pos:column="143"/></name></name> <operator pos:line="49" pos:column="144">+<pos:position pos:line="49" pos:column="145"/></operator><literal type="number" pos:line="49" pos:column="145">1<pos:position pos:line="49" pos:column="146"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="147"/></argument_list></cast></expr></argument>)<pos:position pos:line="49" pos:column="148"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="149"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">blen<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">+=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">base64_encode_final<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><operator pos:line="50" pos:column="37">&amp;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="38">ctx<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="43">loginbuf<pos:position pos:line="50" pos:column="51"/></name><operator pos:line="50" pos:column="51">+<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="52">blen<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">httpHeaderPutStrf<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">hdr_out<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="36">header<pos:position pos:line="51" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="44">"Basic %.*s"<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="58">(<pos:position pos:line="51" pos:column="59"/></operator><name pos:line="51" pos:column="59">int<pos:position pos:line="51" pos:column="62"/></name><operator pos:line="51" pos:column="62">)<pos:position pos:line="51" pos:column="63"/></operator><name pos:line="51" pos:column="63">blen<pos:position pos:line="51" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="69">loginbuf<pos:position pos:line="51" pos:column="77"/></name></expr></argument>)<pos:position pos:line="51" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="79"/></expr_stmt>
        <return pos:line="52" pos:column="9">return;<pos:position pos:line="52" pos:column="16"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="55" pos:column="5">/* external_acl provided credentials */</comment>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name><name pos:line="56" pos:column="9">request<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">-&gt;<pos:position pos:line="56" pos:column="21"/></operator><name pos:line="56" pos:column="18">extacl_user<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">.<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">size<pos:position pos:line="56" pos:column="34"/></name></name><argument_list pos:line="56" pos:column="34">()<pos:position pos:line="56" pos:column="36"/></argument_list></call> <operator pos:line="56" pos:column="37">&amp;&amp;<pos:position pos:line="56" pos:column="47"/></operator> <call><name><name pos:line="56" pos:column="40">request<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">extacl_passwd<pos:position pos:line="56" pos:column="62"/></name><operator pos:line="56" pos:column="62">.<pos:position pos:line="56" pos:column="63"/></operator><name pos:line="56" pos:column="63">size<pos:position pos:line="56" pos:column="67"/></name></name><argument_list pos:line="56" pos:column="67">()<pos:position pos:line="56" pos:column="69"/></argument_list></call> <operator pos:line="56" pos:column="70">&amp;&amp;<pos:position pos:line="56" pos:column="80"/></operator>
            <operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><call><name pos:line="57" pos:column="14">strcmp<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name><name pos:line="57" pos:column="21">request<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">peer_login<pos:position pos:line="57" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="42">"PASS"<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call> <operator pos:line="57" pos:column="50">==<pos:position pos:line="57" pos:column="52"/></operator> <literal type="number" pos:line="57" pos:column="53">0<pos:position pos:line="57" pos:column="54"/></literal> <operator pos:line="57" pos:column="55">||<pos:position pos:line="57" pos:column="57"/></operator>
             <call><name pos:line="58" pos:column="14">strcmp<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name><name pos:line="58" pos:column="21">request<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">-&gt;<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="30">peer_login<pos:position pos:line="58" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="42">"PROXYPASS"<pos:position pos:line="58" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call> <operator pos:line="58" pos:column="55">==<pos:position pos:line="58" pos:column="57"/></operator> <literal type="number" pos:line="58" pos:column="58">0<pos:position pos:line="58" pos:column="59"/></literal><operator pos:line="58" pos:column="59">)<pos:position pos:line="58" pos:column="60"/></operator></expr>)<pos:position pos:line="58" pos:column="61"/></condition><then pos:line="58" pos:column="61"> <block pos:line="58" pos:column="62">{

        <expr_stmt><expr><name pos:line="60" pos:column="9">blen<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <call><name pos:line="60" pos:column="16">base64_encode_update<pos:position pos:line="60" pos:column="36"/></name><argument_list pos:line="60" pos:column="36">(<argument><expr><operator pos:line="60" pos:column="37">&amp;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="38">ctx<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">loginbuf<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><call><name><name pos:line="60" pos:column="53">request<pos:position pos:line="60" pos:column="60"/></name><operator pos:line="60" pos:column="60">-&gt;<pos:position pos:line="60" pos:column="65"/></operator><name pos:line="60" pos:column="62">extacl_user<pos:position pos:line="60" pos:column="73"/></name><operator pos:line="60" pos:column="73">.<pos:position pos:line="60" pos:column="74"/></operator><name pos:line="60" pos:column="74">size<pos:position pos:line="60" pos:column="78"/></name></name><argument_list pos:line="60" pos:column="78">()<pos:position pos:line="60" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="60" pos:column="82">reinterpret_cast<argument_list type="generic" pos:line="60" pos:column="98">&lt;<argument><expr><specifier pos:line="60" pos:column="99">const<pos:position pos:line="60" pos:column="104"/></specifier> <name pos:line="60" pos:column="105">uint8_t<pos:position pos:line="60" pos:column="112"/></name><operator pos:line="60" pos:column="112">*<pos:position pos:line="60" pos:column="113"/></operator></expr></argument>&gt;<pos:position pos:line="60" pos:column="117"/></argument_list><argument_list pos:line="60" pos:column="114">(<argument><expr><call><name><name pos:line="60" pos:column="115">request<pos:position pos:line="60" pos:column="122"/></name><operator pos:line="60" pos:column="122">-&gt;<pos:position pos:line="60" pos:column="127"/></operator><name pos:line="60" pos:column="124">extacl_user<pos:position pos:line="60" pos:column="135"/></name><operator pos:line="60" pos:column="135">.<pos:position pos:line="60" pos:column="136"/></operator><name pos:line="60" pos:column="136">rawBuf<pos:position pos:line="60" pos:column="142"/></name></name><argument_list pos:line="60" pos:column="142">()<pos:position pos:line="60" pos:column="144"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="145"/></argument_list></cast></expr></argument>)<pos:position pos:line="60" pos:column="146"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="147"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">blen<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">+=<pos:position pos:line="61" pos:column="16"/></operator> <call><name pos:line="61" pos:column="17">base64_encode_update<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><operator pos:line="61" pos:column="38">&amp;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="39">ctx<pos:position pos:line="61" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="44">loginbuf<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">+<pos:position pos:line="61" pos:column="53"/></operator><name pos:line="61" pos:column="53">blen<pos:position pos:line="61" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="59">1<pos:position pos:line="61" pos:column="60"/></literal></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="61" pos:column="62">reinterpret_cast<argument_list type="generic" pos:line="61" pos:column="78">&lt;<argument><expr><specifier pos:line="61" pos:column="79">const<pos:position pos:line="61" pos:column="84"/></specifier> <name pos:line="61" pos:column="85">uint8_t<pos:position pos:line="61" pos:column="92"/></name><operator pos:line="61" pos:column="92">*<pos:position pos:line="61" pos:column="93"/></operator></expr></argument>&gt;<pos:position pos:line="61" pos:column="97"/></argument_list><argument_list pos:line="61" pos:column="94">(<argument><expr><literal type="string" pos:line="61" pos:column="95">":"<pos:position pos:line="61" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="99"/></argument_list></cast></expr></argument>)<pos:position pos:line="61" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="101"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">blen<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">+=<pos:position pos:line="62" pos:column="16"/></operator> <call><name pos:line="62" pos:column="17">base64_encode_update<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><operator pos:line="62" pos:column="38">&amp;<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="39">ctx<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="44">loginbuf<pos:position pos:line="62" pos:column="52"/></name><operator pos:line="62" pos:column="52">+<pos:position pos:line="62" pos:column="53"/></operator><name pos:line="62" pos:column="53">blen<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><call><name><name pos:line="62" pos:column="59">request<pos:position pos:line="62" pos:column="66"/></name><operator pos:line="62" pos:column="66">-&gt;<pos:position pos:line="62" pos:column="71"/></operator><name pos:line="62" pos:column="68">extacl_passwd<pos:position pos:line="62" pos:column="81"/></name><operator pos:line="62" pos:column="81">.<pos:position pos:line="62" pos:column="82"/></operator><name pos:line="62" pos:column="82">size<pos:position pos:line="62" pos:column="86"/></name></name><argument_list pos:line="62" pos:column="86">()<pos:position pos:line="62" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="62" pos:column="90">reinterpret_cast<argument_list type="generic" pos:line="62" pos:column="106">&lt;<argument><expr><specifier pos:line="62" pos:column="107">const<pos:position pos:line="62" pos:column="112"/></specifier> <name pos:line="62" pos:column="113">uint8_t<pos:position pos:line="62" pos:column="120"/></name><operator pos:line="62" pos:column="120">*<pos:position pos:line="62" pos:column="121"/></operator></expr></argument>&gt;<pos:position pos:line="62" pos:column="125"/></argument_list><argument_list pos:line="62" pos:column="122">(<argument><expr><call><name><name pos:line="62" pos:column="123">request<pos:position pos:line="62" pos:column="130"/></name><operator pos:line="62" pos:column="130">-&gt;<pos:position pos:line="62" pos:column="135"/></operator><name pos:line="62" pos:column="132">extacl_passwd<pos:position pos:line="62" pos:column="145"/></name><operator pos:line="62" pos:column="145">.<pos:position pos:line="62" pos:column="146"/></operator><name pos:line="62" pos:column="146">rawBuf<pos:position pos:line="62" pos:column="152"/></name></name><argument_list pos:line="62" pos:column="152">()<pos:position pos:line="62" pos:column="154"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="155"/></argument_list></cast></expr></argument>)<pos:position pos:line="62" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="157"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">blen<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">+=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">base64_encode_final<pos:position pos:line="63" pos:column="36"/></name><argument_list pos:line="63" pos:column="36">(<argument><expr><operator pos:line="63" pos:column="37">&amp;<pos:position pos:line="63" pos:column="42"/></operator><name pos:line="63" pos:column="38">ctx<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="43">loginbuf<pos:position pos:line="63" pos:column="51"/></name><operator pos:line="63" pos:column="51">+<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="52">blen<pos:position pos:line="63" pos:column="56"/></name></expr></argument>)<pos:position pos:line="63" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">httpHeaderPutStrf<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">hdr_out<pos:position pos:line="64" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="36">header<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="44">"Basic %.*s"<pos:position pos:line="64" pos:column="56"/></literal></expr></argument>, <argument><expr><operator pos:line="64" pos:column="58">(<pos:position pos:line="64" pos:column="59"/></operator><name pos:line="64" pos:column="59">int<pos:position pos:line="64" pos:column="62"/></name><operator pos:line="64" pos:column="62">)<pos:position pos:line="64" pos:column="63"/></operator><name pos:line="64" pos:column="63">blen<pos:position pos:line="64" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="69">loginbuf<pos:position pos:line="64" pos:column="77"/></name></expr></argument>)<pos:position pos:line="64" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="79"/></expr_stmt>
        <return pos:line="65" pos:column="9">return;<pos:position pos:line="65" pos:column="16"/></return>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <comment type="line" pos:line="67" pos:column="5">// if no external user credentials are available to fake authentication with PASS acts like PASSTHRU</comment>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><call><name pos:line="68" pos:column="9">strcmp<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name><name pos:line="68" pos:column="16">request<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">-&gt;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="25">peer_login<pos:position pos:line="68" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="37">"PASS"<pos:position pos:line="68" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call> <operator pos:line="68" pos:column="45">==<pos:position pos:line="68" pos:column="47"/></operator> <literal type="number" pos:line="68" pos:column="48">0<pos:position pos:line="68" pos:column="49"/></literal></expr>)<pos:position pos:line="68" pos:column="50"/></condition><then pos:line="68" pos:column="50">
        <block type="pseudo"><return pos:line="69" pos:column="9">return;<pos:position pos:line="69" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* Kerberos login to peer */</comment>
<cpp:if pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">if<pos:position pos:line="72" pos:column="4"/></cpp:directive> <expr><name pos:line="72" pos:column="5">HAVE_AUTH_MODULE_NEGOTIATE<pos:position pos:line="72" pos:column="31"/></name> <operator pos:line="72" pos:column="32">&amp;&amp;<pos:position pos:line="72" pos:column="42"/></operator> <name pos:line="72" pos:column="35">HAVE_KRB5<pos:position pos:line="72" pos:column="44"/></name> <operator pos:line="72" pos:column="45">&amp;&amp;<pos:position pos:line="72" pos:column="55"/></operator> <name pos:line="72" pos:column="48">HAVE_GSSAPI<pos:position pos:line="72" pos:column="59"/></name></expr></cpp:if>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><call><name pos:line="73" pos:column="9">strncmp<pos:position pos:line="73" pos:column="16"/></name><argument_list pos:line="73" pos:column="16">(<argument><expr><name><name pos:line="73" pos:column="17">request<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">-&gt;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="26">peer_login<pos:position pos:line="73" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="38">"NEGOTIATE"<pos:position pos:line="73" pos:column="49"/></literal></expr></argument>,<argument><expr><call><name pos:line="73" pos:column="50">strlen<pos:position pos:line="73" pos:column="56"/></name><argument_list pos:line="73" pos:column="56">(<argument><expr><literal type="string" pos:line="73" pos:column="57">"NEGOTIATE"<pos:position pos:line="73" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call> <operator pos:line="73" pos:column="71">==<pos:position pos:line="73" pos:column="73"/></operator> <literal type="number" pos:line="73" pos:column="74">0<pos:position pos:line="73" pos:column="75"/></literal></expr>)<pos:position pos:line="73" pos:column="76"/></condition><then pos:line="73" pos:column="76"> <block pos:line="73" pos:column="77">{
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">char<pos:position pos:line="74" pos:column="13"/></name> <modifier pos:line="74" pos:column="14">*<pos:position pos:line="74" pos:column="15"/></modifier></type><name pos:line="74" pos:column="15">Token<pos:position pos:line="74" pos:column="20"/></name><init pos:line="74" pos:column="20">=<expr><name pos:line="74" pos:column="21">NULL<pos:position pos:line="74" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="74" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">char<pos:position pos:line="75" pos:column="13"/></name> <modifier pos:line="75" pos:column="14">*<pos:position pos:line="75" pos:column="15"/></modifier></type><name pos:line="75" pos:column="15">PrincipalName<pos:position pos:line="75" pos:column="28"/></name><init pos:line="75" pos:column="28">=<expr><name pos:line="75" pos:column="29">NULL<pos:position pos:line="75" pos:column="33"/></name></expr></init></decl>,<modifier pos:line="75" pos:column="34">*<pos:position pos:line="75" pos:column="35"/></modifier><decl><type ref="prev"/><name pos:line="75" pos:column="35">p<pos:position pos:line="75" pos:column="36"/></name></decl>;<pos:position pos:line="75" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="76" pos:column="9">int<pos:position pos:line="76" pos:column="12"/></name></type> <name pos:line="76" pos:column="13">negotiate_flags<pos:position pos:line="76" pos:column="28"/></name> <init pos:line="76" pos:column="29">= <expr><literal type="number" pos:line="76" pos:column="31">0<pos:position pos:line="76" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="76" pos:column="33"/></decl_stmt>

        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">(<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">p<pos:position pos:line="78" pos:column="15"/></name><operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator><call><name pos:line="78" pos:column="16">strchr<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><name><name pos:line="78" pos:column="23">request<pos:position pos:line="78" pos:column="30"/></name><operator pos:line="78" pos:column="30">-&gt;<pos:position pos:line="78" pos:column="35"/></operator><name pos:line="78" pos:column="32">peer_login<pos:position pos:line="78" pos:column="42"/></name></name></expr></argument>,<argument><expr><literal type="char" pos:line="78" pos:column="43">':'<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call><operator pos:line="78" pos:column="47">)<pos:position pos:line="78" pos:column="48"/></operator> <operator pos:line="78" pos:column="49">!=<pos:position pos:line="78" pos:column="51"/></operator> <name pos:line="78" pos:column="52">NULL<pos:position pos:line="78" pos:column="56"/></name></expr> )<pos:position pos:line="78" pos:column="58"/></condition><then pos:line="78" pos:column="58"> <block pos:line="78" pos:column="59">{
            <expr_stmt><expr><name pos:line="79" pos:column="13">PrincipalName<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator><operator pos:line="79" pos:column="27">++<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="29">p<pos:position pos:line="79" pos:column="30"/></name></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name><name pos:line="81" pos:column="13">request<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">flags<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">.<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="28">auth_no_keytab<pos:position pos:line="81" pos:column="42"/></name></name></expr>)<pos:position pos:line="81" pos:column="43"/></condition><then pos:line="81" pos:column="43"> <block pos:line="81" pos:column="44">{
            <expr_stmt><expr><name pos:line="82" pos:column="13">negotiate_flags<pos:position pos:line="82" pos:column="28"/></name> <operator pos:line="82" pos:column="29">|=<pos:position pos:line="82" pos:column="31"/></operator> <name pos:line="82" pos:column="32">PEER_PROXY_NEGOTIATE_NOKEYTAB<pos:position pos:line="82" pos:column="61"/></name></expr>;<pos:position pos:line="82" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="84" pos:column="9">Token<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">=<pos:position pos:line="84" pos:column="16"/></operator> <call><name pos:line="84" pos:column="17">peer_proxy_negotiate_auth<pos:position pos:line="84" pos:column="42"/></name><argument_list pos:line="84" pos:column="42">(<argument><expr><name pos:line="84" pos:column="43">PrincipalName<pos:position pos:line="84" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="58">request<pos:position pos:line="84" pos:column="65"/></name><operator pos:line="84" pos:column="65">-&gt;<pos:position pos:line="84" pos:column="70"/></operator><name pos:line="84" pos:column="67">peer_host<pos:position pos:line="84" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="78">negotiate_flags<pos:position pos:line="84" pos:column="93"/></name></expr></argument>)<pos:position pos:line="84" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="95"/></expr_stmt>
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">Token<pos:position pos:line="85" pos:column="18"/></name></expr>)<pos:position pos:line="85" pos:column="19"/></condition><then pos:line="85" pos:column="19"> <block pos:line="85" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">httpHeaderPutStrf<pos:position pos:line="86" pos:column="30"/></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">hdr_out<pos:position pos:line="86" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="40">header<pos:position pos:line="86" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="48">"Negotiate %s"<pos:position pos:line="86" pos:column="62"/></literal></expr></argument>,<argument><expr><name pos:line="86" pos:column="63">Token<pos:position pos:line="86" pos:column="68"/></name></expr></argument>)<pos:position pos:line="86" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>
        <return pos:line="88" pos:column="9">return;<pos:position pos:line="88" pos:column="16"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="90" pos:column="8">/* HAVE_KRB5 &amp;&amp; HAVE_GSSAPI */</comment>

    <expr_stmt><expr><name pos:line="92" pos:column="5">blen<pos:position pos:line="92" pos:column="9"/></name> <operator pos:line="92" pos:column="10">=<pos:position pos:line="92" pos:column="11"/></operator> <call><name pos:line="92" pos:column="12">base64_encode_update<pos:position pos:line="92" pos:column="32"/></name><argument_list pos:line="92" pos:column="32">(<argument><expr><operator pos:line="92" pos:column="33">&amp;<pos:position pos:line="92" pos:column="38"/></operator><name pos:line="92" pos:column="34">ctx<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="39">loginbuf<pos:position pos:line="92" pos:column="47"/></name></expr></argument>, <argument><expr><call><name pos:line="92" pos:column="49">strlen<pos:position pos:line="92" pos:column="55"/></name><argument_list pos:line="92" pos:column="55">(<argument><expr><name><name pos:line="92" pos:column="56">request<pos:position pos:line="92" pos:column="63"/></name><operator pos:line="92" pos:column="63">-&gt;<pos:position pos:line="92" pos:column="68"/></operator><name pos:line="92" pos:column="65">peer_login<pos:position pos:line="92" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="92" pos:column="78">reinterpret_cast<argument_list type="generic" pos:line="92" pos:column="94">&lt;<argument><expr><specifier pos:line="92" pos:column="95">const<pos:position pos:line="92" pos:column="100"/></specifier> <name pos:line="92" pos:column="101">uint8_t<pos:position pos:line="92" pos:column="108"/></name><operator pos:line="92" pos:column="108">*<pos:position pos:line="92" pos:column="109"/></operator></expr></argument>&gt;<pos:position pos:line="92" pos:column="113"/></argument_list><argument_list pos:line="92" pos:column="110">(<argument><expr><name><name pos:line="92" pos:column="111">request<pos:position pos:line="92" pos:column="118"/></name><operator pos:line="92" pos:column="118">-&gt;<pos:position pos:line="92" pos:column="123"/></operator><name pos:line="92" pos:column="120">peer_login<pos:position pos:line="92" pos:column="130"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="131"/></argument_list></cast></expr></argument>)<pos:position pos:line="92" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="133"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">blen<pos:position pos:line="93" pos:column="9"/></name> <operator pos:line="93" pos:column="10">+=<pos:position pos:line="93" pos:column="12"/></operator> <call><name pos:line="93" pos:column="13">base64_encode_final<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><operator pos:line="93" pos:column="33">&amp;<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="34">ctx<pos:position pos:line="93" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="39">loginbuf<pos:position pos:line="93" pos:column="47"/></name><operator pos:line="93" pos:column="47">+<pos:position pos:line="93" pos:column="48"/></operator><name pos:line="93" pos:column="48">blen<pos:position pos:line="93" pos:column="52"/></name></expr></argument>)<pos:position pos:line="93" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="94" pos:column="5">httpHeaderPutStrf<pos:position pos:line="94" pos:column="22"/></name><argument_list pos:line="94" pos:column="22">(<argument><expr><name pos:line="94" pos:column="23">hdr_out<pos:position pos:line="94" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="32">header<pos:position pos:line="94" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="40">"Basic %.*s"<pos:position pos:line="94" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="94" pos:column="54">(<pos:position pos:line="94" pos:column="55"/></operator><name pos:line="94" pos:column="55">int<pos:position pos:line="94" pos:column="58"/></name><operator pos:line="94" pos:column="58">)<pos:position pos:line="94" pos:column="59"/></operator><name pos:line="94" pos:column="59">blen<pos:position pos:line="94" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="65">loginbuf<pos:position pos:line="94" pos:column="73"/></name></expr></argument>)<pos:position pos:line="94" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="75"/></expr_stmt>
    <return pos:line="95" pos:column="5">return;<pos:position pos:line="95" pos:column="12"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

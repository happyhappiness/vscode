<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5051_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">HeaderUpdater<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">stopReading<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">why<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">why<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">reader<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">IoState<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">&amp;<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="20">rockReader<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><cast type="dynamic" pos:line="7" pos:column="33">dynamic_cast<argument_list type="generic" pos:line="7" pos:column="45">&lt;<argument><expr><name pos:line="7" pos:column="46">IoState<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">&amp;<pos:position pos:line="7" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="58"/></argument_list><argument_list pos:line="7" pos:column="55">(<argument><expr><operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">reader<pos:position pos:line="7" pos:column="63"/></name></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="65"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">update<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">stale<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">splicingPoint<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <name><name pos:line="8" pos:column="34">rockReader<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">splicingPoint<pos:position pos:line="8" pos:column="58"/></name></name></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">staleSplicingPointNext<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">rockReader<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">.<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">staleSplicingPointNext<pos:position pos:line="9" pos:column="63"/></name></name></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">47<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">5<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"stale chain ends at "<pos:position pos:line="10" pos:column="41"/></literal> <operator pos:line="10" pos:column="42">&lt;&lt;<pos:position pos:line="10" pos:column="50"/></operator> <name><name pos:line="10" pos:column="45">update<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">.<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">stale<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">.<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">splicingPoint<pos:position pos:line="10" pos:column="71"/></name></name> <operator pos:line="10" pos:column="72">&lt;&lt;<pos:position pos:line="10" pos:column="80"/></operator>
           <literal type="string" pos:line="11" pos:column="12">" body continues at "<pos:position pos:line="11" pos:column="33"/></literal> <operator pos:line="11" pos:column="34">&lt;&lt;<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="37">staleSplicingPointNext<pos:position pos:line="11" pos:column="59"/></name></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">reader<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">close<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">StoreIOState<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">::<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">readerDone<pos:position pos:line="13" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt> <comment type="line" pos:line="13" pos:column="46">// calls noteDoneReading(0)</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">reader<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <literal type="null" pos:line="14" pos:column="14">nullptr<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt> <comment type="line" pos:line="14" pos:column="23">// so that swanSong() does not try to close again</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

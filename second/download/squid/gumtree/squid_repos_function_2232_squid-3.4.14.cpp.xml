<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2232_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">connectTimeout<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">fd<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">17<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">2<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"fwdConnectTimeout: FD "<pos:position pos:line="4" pos:column="43"/></literal> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <name pos:line="4" pos:column="47">fd<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">&lt;&lt;<pos:position pos:line="4" pos:column="58"/></operator> <literal type="string" pos:line="4" pos:column="53">": '"<pos:position pos:line="4" pos:column="58"/></literal> <operator pos:line="4" pos:column="59">&lt;&lt;<pos:position pos:line="4" pos:column="67"/></operator> <call><name><name pos:line="4" pos:column="62">entry<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">-&gt;<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="69">url<pos:position pos:line="4" pos:column="72"/></name></name><argument_list pos:line="4" pos:column="72">()<pos:position pos:line="4" pos:column="74"/></argument_list></call> <operator pos:line="4" pos:column="75">&lt;&lt;<pos:position pos:line="4" pos:column="83"/></operator> <literal type="string" pos:line="4" pos:column="78">"'"<pos:position pos:line="4" pos:column="81"/></literal></expr></argument> )<pos:position pos:line="4" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name><name pos:line="5" pos:column="12">serverDestinations<pos:position pos:line="5" pos:column="30"/></name><index pos:line="5" pos:column="30">[<expr><literal type="number" pos:line="5" pos:column="31">0<pos:position pos:line="5" pos:column="32"/></literal></expr>]<pos:position pos:line="5" pos:column="33"/></index></name> <operator pos:line="5" pos:column="34">!=<pos:position pos:line="5" pos:column="36"/></operator> <name pos:line="5" pos:column="37">NULL<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">fd<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name><name pos:line="6" pos:column="18">serverDestinations<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>]<pos:position pos:line="6" pos:column="39"/></index></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">fd<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">entry<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">isEmpty<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">()<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">ErrorState<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">anErr<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><operator pos:line="9" pos:column="29">new<pos:position pos:line="9" pos:column="32"/></operator> <call><name pos:line="9" pos:column="33">ErrorState<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">ERR_CONNECT_FAIL<pos:position pos:line="9" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="62">Http<pos:position pos:line="9" pos:column="66"/></name><operator pos:line="9" pos:column="66">::<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="68">scGatewayTimeout<pos:position pos:line="9" pos:column="84"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="86">request<pos:position pos:line="9" pos:column="93"/></name></expr></argument>)<pos:position pos:line="9" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="95"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">anErr<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">xerrno<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">ETIMEDOUT<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fail<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">anErr<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>

        <comment type="block" pos:line="13" pos:column="9">/* This marks the peer DOWN ... */</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">serverDestinations<pos:position pos:line="14" pos:column="31"/></name><index pos:line="14" pos:column="31">[<expr><literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr>]<pos:position pos:line="14" pos:column="34"/></index></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><call><name pos:line="14" pos:column="36">getPeer<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">()<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">peerConnectFailed<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">serverDestinations<pos:position pos:line="15" pos:column="49"/></name><index pos:line="15" pos:column="49">[<expr><literal type="number" pos:line="15" pos:column="50">0<pos:position pos:line="15" pos:column="51"/></literal></expr>]<pos:position pos:line="15" pos:column="52"/></index></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><call><name pos:line="15" pos:column="54">getPeer<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">()<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name><name pos:line="18" pos:column="9">Comm<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">::<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">IsConnOpen<pos:position pos:line="18" pos:column="25"/></name></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name><name pos:line="18" pos:column="26">serverDestinations<pos:position pos:line="18" pos:column="44"/></name><index pos:line="18" pos:column="44">[<expr><literal type="number" pos:line="18" pos:column="45">0<pos:position pos:line="18" pos:column="46"/></literal></expr>]<pos:position pos:line="18" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49"> <block pos:line="18" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">serverDestinations<pos:position pos:line="19" pos:column="27"/></name><index pos:line="19" pos:column="27">[<expr><literal type="number" pos:line="19" pos:column="28">0<pos:position pos:line="19" pos:column="29"/></literal></expr>]<pos:position pos:line="19" pos:column="30"/></index></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><call><name pos:line="19" pos:column="32">close<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">()<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

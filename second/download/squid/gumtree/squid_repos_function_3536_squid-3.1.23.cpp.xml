<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3536_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">refreshStaleness<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">StoreEntry<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">entry<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">time_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">check_time<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">time_t<pos:position pos:line="2" pos:column="75"/></name></type> <name pos:line="2" pos:column="76">age<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="81">const<pos:position pos:line="2" pos:column="86"/></specifier> <name pos:line="2" pos:column="87">refresh_t<pos:position pos:line="2" pos:column="96"/></name> <modifier pos:line="2" pos:column="97">*<pos:position pos:line="2" pos:column="98"/></modifier></type> <name pos:line="2" pos:column="99">R<pos:position pos:line="2" pos:column="100"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="102">stale_flags<pos:position pos:line="2" pos:column="113"/></name> <modifier pos:line="2" pos:column="114">*<pos:position pos:line="2" pos:column="115"/></modifier></type> <name pos:line="2" pos:column="116">sf<pos:position pos:line="2" pos:column="118"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="119"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" format="doxygen" pos:line="4" pos:column="5">/** \par
     * Check for an explicit expiration time (Expires: header).
     */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">entry<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">expires<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">&gt;<pos:position pos:line="7" pos:column="28"/></operator> <operator pos:line="7" pos:column="26">-<pos:position pos:line="7" pos:column="27"/></operator><literal type="number" pos:line="7" pos:column="27">1<pos:position pos:line="7" pos:column="28"/></literal></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29"> <block pos:line="7" pos:column="30">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">sf<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">expires<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="boolean" pos:line="8" pos:column="23">true<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">entry<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">expires<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">&gt;<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="30">check_time<pos:position pos:line="10" pos:column="40"/></name></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41"> <block pos:line="10" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">debugs<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="number" pos:line="11" pos:column="20">22<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="24">3<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="27">"FRESH: expires "<pos:position pos:line="11" pos:column="44"/></literal> <operator pos:line="11" pos:column="45">&lt;&lt;<pos:position pos:line="11" pos:column="53"/></operator> <name><name pos:line="11" pos:column="48">entry<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">expires<pos:position pos:line="11" pos:column="62"/></name></name> <operator pos:line="11" pos:column="63">&lt;&lt;<pos:position pos:line="11" pos:column="71"/></operator>
                   <literal type="string" pos:line="12" pos:column="20">" &gt;= check_time "<pos:position pos:line="12" pos:column="40"/></literal> <operator pos:line="12" pos:column="38">&lt;&lt;<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="41">check_time<pos:position pos:line="12" pos:column="51"/></name> <operator pos:line="12" pos:column="52">&lt;&lt;<pos:position pos:line="12" pos:column="60"/></operator> <literal type="string" pos:line="12" pos:column="55">" "<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>

            <return pos:line="14" pos:column="13">return <expr><operator pos:line="14" pos:column="20">-<pos:position pos:line="14" pos:column="21"/></operator><literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal></expr>;<pos:position pos:line="14" pos:column="23"/></return>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else <block pos:line="15" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debugs<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="number" pos:line="16" pos:column="20">22<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="24">3<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"STALE: expires "<pos:position pos:line="16" pos:column="44"/></literal> <operator pos:line="16" pos:column="45">&lt;&lt;<pos:position pos:line="16" pos:column="53"/></operator> <name><name pos:line="16" pos:column="48">entry<pos:position pos:line="16" pos:column="53"/></name><operator pos:line="16" pos:column="53">-&gt;<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="55">expires<pos:position pos:line="16" pos:column="62"/></name></name> <operator pos:line="16" pos:column="63">&lt;&lt;<pos:position pos:line="16" pos:column="71"/></operator>
                   <literal type="string" pos:line="17" pos:column="20">" &lt; check_time "<pos:position pos:line="17" pos:column="39"/></literal> <operator pos:line="17" pos:column="37">&lt;&lt;<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="40">check_time<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">&lt;&lt;<pos:position pos:line="17" pos:column="59"/></operator> <literal type="string" pos:line="17" pos:column="54">" "<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>

            <return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">check_time<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">-<pos:position pos:line="19" pos:column="33"/></operator> <name><name pos:line="19" pos:column="34">entry<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">expires<pos:position pos:line="19" pos:column="48"/></name></name><operator pos:line="19" pos:column="48">)<pos:position pos:line="19" pos:column="49"/></operator></expr>;<pos:position pos:line="19" pos:column="50"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></else></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="23" pos:column="5">/** \par
     * Use local heuristics to determine staleness.  Start with the
     * max age from the refresh_pattern rule.
     */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">age<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">&gt;<pos:position pos:line="27" pos:column="17"/></operator> <name><name pos:line="27" pos:column="15">R<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">max<pos:position pos:line="27" pos:column="21"/></name></name></expr>)<pos:position pos:line="27" pos:column="22"/></condition><then pos:line="27" pos:column="22"> <block pos:line="27" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">22<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">3<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"STALE: age "<pos:position pos:line="28" pos:column="36"/></literal> <operator pos:line="28" pos:column="37">&lt;&lt;<pos:position pos:line="28" pos:column="45"/></operator> <name pos:line="28" pos:column="40">age<pos:position pos:line="28" pos:column="43"/></name> <operator pos:line="28" pos:column="44">&lt;&lt;<pos:position pos:line="28" pos:column="52"/></operator> <literal type="string" pos:line="28" pos:column="47">" &gt; max "<pos:position pos:line="28" pos:column="59"/></literal> <operator pos:line="28" pos:column="57">&lt;&lt;<pos:position pos:line="28" pos:column="65"/></operator> <name><name pos:line="28" pos:column="60">R<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">-&gt;<pos:position pos:line="28" pos:column="66"/></operator><name pos:line="28" pos:column="63">max<pos:position pos:line="28" pos:column="66"/></name></name> <operator pos:line="28" pos:column="67">&lt;&lt;<pos:position pos:line="28" pos:column="75"/></operator> <literal type="string" pos:line="28" pos:column="70">" "<pos:position pos:line="28" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">sf<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">max<pos:position pos:line="29" pos:column="16"/></name></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="boolean" pos:line="29" pos:column="19">true<pos:position pos:line="29" pos:column="23"/></literal></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
        <return pos:line="30" pos:column="9">return <expr><operator pos:line="30" pos:column="16">(<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">age<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">-<pos:position pos:line="30" pos:column="22"/></operator> <name><name pos:line="30" pos:column="23">R<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">max<pos:position pos:line="30" pos:column="29"/></name></name><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator></expr>;<pos:position pos:line="30" pos:column="31"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="33" pos:column="5">/** \par
     * Try the last-modified factor algorithm:  refresh_pattern n% percentage of Last-Modified: age.
     */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">entry<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">lastmod<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">&gt;<pos:position pos:line="36" pos:column="28"/></operator> <operator pos:line="36" pos:column="26">-<pos:position pos:line="36" pos:column="27"/></operator><literal type="number" pos:line="36" pos:column="27">1<pos:position pos:line="36" pos:column="28"/></literal> <operator pos:line="36" pos:column="29">&amp;&amp;<pos:position pos:line="36" pos:column="39"/></operator> <name><name pos:line="36" pos:column="32">entry<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">-&gt;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="39">timestamp<pos:position pos:line="36" pos:column="48"/></name></name> <operator pos:line="36" pos:column="49">&gt;<pos:position pos:line="36" pos:column="53"/></operator> <name><name pos:line="36" pos:column="51">entry<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">-&gt;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="58">lastmod<pos:position pos:line="36" pos:column="65"/></name></name></expr>)<pos:position pos:line="36" pos:column="66"/></condition><then pos:line="36" pos:column="66"> <block pos:line="36" pos:column="67">{
        <comment type="block" pos:line="37" pos:column="9">/*
         * stale_age is the Age of the response when it became/becomes
         * stale according to the last-modified factor algorithm.
         */</comment>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">time_t<pos:position pos:line="41" pos:column="15"/></name></type> <name pos:line="41" pos:column="16">stale_age<pos:position pos:line="41" pos:column="25"/></name> <init pos:line="41" pos:column="26">= <expr><cast type="static" pos:line="41" pos:column="28">static_cast<argument_list type="generic" pos:line="41" pos:column="39">&lt;<argument><expr><name pos:line="41" pos:column="40">time_t<pos:position pos:line="41" pos:column="46"/></name></expr></argument>&gt;<pos:position pos:line="41" pos:column="50"/></argument_list><argument_list pos:line="41" pos:column="47">(<argument><expr><operator pos:line="41" pos:column="48">(<pos:position pos:line="41" pos:column="49"/></operator><name><name pos:line="41" pos:column="49">entry<pos:position pos:line="41" pos:column="54"/></name><operator pos:line="41" pos:column="54">-&gt;<pos:position pos:line="41" pos:column="59"/></operator><name pos:line="41" pos:column="56">timestamp<pos:position pos:line="41" pos:column="65"/></name></name> <operator pos:line="41" pos:column="66">-<pos:position pos:line="41" pos:column="67"/></operator> <name><name pos:line="41" pos:column="68">entry<pos:position pos:line="41" pos:column="73"/></name><operator pos:line="41" pos:column="73">-&gt;<pos:position pos:line="41" pos:column="78"/></operator><name pos:line="41" pos:column="75">lastmod<pos:position pos:line="41" pos:column="82"/></name></name><operator pos:line="41" pos:column="82">)<pos:position pos:line="41" pos:column="83"/></operator> <operator pos:line="41" pos:column="84">*<pos:position pos:line="41" pos:column="85"/></operator> <name><name pos:line="41" pos:column="86">R<pos:position pos:line="41" pos:column="87"/></name><operator pos:line="41" pos:column="87">-&gt;<pos:position pos:line="41" pos:column="92"/></operator><name pos:line="41" pos:column="89">pct<pos:position pos:line="41" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="93"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="41" pos:column="94"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">sf<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">lmfactor<pos:position pos:line="42" pos:column="21"/></name></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <literal type="boolean" pos:line="42" pos:column="24">true<pos:position pos:line="42" pos:column="28"/></literal></expr>;<pos:position pos:line="42" pos:column="29"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">age<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">&gt;=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="20">stale_age<pos:position pos:line="44" pos:column="29"/></name></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30"> <block pos:line="44" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">debugs<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="number" pos:line="45" pos:column="20">22<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="24">3<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"STALE: age "<pos:position pos:line="45" pos:column="40"/></literal> <operator pos:line="45" pos:column="41">&lt;&lt;<pos:position pos:line="45" pos:column="49"/></operator> <name pos:line="45" pos:column="44">age<pos:position pos:line="45" pos:column="47"/></name> <operator pos:line="45" pos:column="48">&lt;&lt;<pos:position pos:line="45" pos:column="56"/></operator> <literal type="string" pos:line="45" pos:column="51">" &gt; stale_age "<pos:position pos:line="45" pos:column="69"/></literal> <operator pos:line="45" pos:column="67">&lt;&lt;<pos:position pos:line="45" pos:column="75"/></operator> <name pos:line="45" pos:column="70">stale_age<pos:position pos:line="45" pos:column="79"/></name></expr></argument>)<pos:position pos:line="45" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="81"/></expr_stmt>
            <return pos:line="46" pos:column="13">return <expr><operator pos:line="46" pos:column="20">(<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">age<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">-<pos:position pos:line="46" pos:column="26"/></operator> <name pos:line="46" pos:column="27">stale_age<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">)<pos:position pos:line="46" pos:column="37"/></operator></expr>;<pos:position pos:line="46" pos:column="38"/></return>
        }<pos:position pos:line="47" pos:column="10"/></block></then> <else pos:line="47" pos:column="11">else <block pos:line="47" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">debugs<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="number" pos:line="48" pos:column="20">22<pos:position pos:line="48" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="24">3<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"FRESH: age "<pos:position pos:line="48" pos:column="40"/></literal> <operator pos:line="48" pos:column="41">&lt;&lt;<pos:position pos:line="48" pos:column="49"/></operator> <name pos:line="48" pos:column="44">age<pos:position pos:line="48" pos:column="47"/></name> <operator pos:line="48" pos:column="48">&lt;&lt;<pos:position pos:line="48" pos:column="56"/></operator> <literal type="string" pos:line="48" pos:column="51">" &lt;= stale_age "<pos:position pos:line="48" pos:column="70"/></literal> <operator pos:line="48" pos:column="68">&lt;&lt;<pos:position pos:line="48" pos:column="76"/></operator> <name pos:line="48" pos:column="71">stale_age<pos:position pos:line="48" pos:column="80"/></name></expr></argument>)<pos:position pos:line="48" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="82"/></expr_stmt>
            <return pos:line="49" pos:column="13">return <expr><operator pos:line="49" pos:column="20">-<pos:position pos:line="49" pos:column="21"/></operator><literal type="number" pos:line="49" pos:column="21">1<pos:position pos:line="49" pos:column="22"/></literal></expr>;<pos:position pos:line="49" pos:column="23"/></return>
        }<pos:position pos:line="50" pos:column="10"/></block></else></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="53" pos:column="5">/** \par
     * Finally, if all else fails;  staleness is determined by the refresh_pattern
     * configured minimum age.
     */</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name pos:line="57" pos:column="9">age<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">&lt;<pos:position pos:line="57" pos:column="17"/></operator> <name><name pos:line="57" pos:column="15">R<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">min<pos:position pos:line="57" pos:column="21"/></name></name></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22"> <block pos:line="57" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">debugs<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><literal type="number" pos:line="58" pos:column="16">22<pos:position pos:line="58" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="20">3<pos:position pos:line="58" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="23">"FRESH: age "<pos:position pos:line="58" pos:column="36"/></literal> <operator pos:line="58" pos:column="37">&lt;&lt;<pos:position pos:line="58" pos:column="45"/></operator> <name pos:line="58" pos:column="40">age<pos:position pos:line="58" pos:column="43"/></name> <operator pos:line="58" pos:column="44">&lt;&lt;<pos:position pos:line="58" pos:column="52"/></operator> <literal type="string" pos:line="58" pos:column="47">" &lt; min "<pos:position pos:line="58" pos:column="59"/></literal> <operator pos:line="58" pos:column="57">&lt;&lt;<pos:position pos:line="58" pos:column="65"/></operator> <name><name pos:line="58" pos:column="60">R<pos:position pos:line="58" pos:column="61"/></name><operator pos:line="58" pos:column="61">-&gt;<pos:position pos:line="58" pos:column="66"/></operator><name pos:line="58" pos:column="63">min<pos:position pos:line="58" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">sf<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">min<pos:position pos:line="59" pos:column="16"/></name></name> <operator pos:line="59" pos:column="17">=<pos:position pos:line="59" pos:column="18"/></operator> <literal type="boolean" pos:line="59" pos:column="19">true<pos:position pos:line="59" pos:column="23"/></literal></expr>;<pos:position pos:line="59" pos:column="24"/></expr_stmt>
        <return pos:line="60" pos:column="9">return <expr><operator pos:line="60" pos:column="16">-<pos:position pos:line="60" pos:column="17"/></operator><literal type="number" pos:line="60" pos:column="17">1<pos:position pos:line="60" pos:column="18"/></literal></expr>;<pos:position pos:line="60" pos:column="19"/></return>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">debugs<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><literal type="number" pos:line="63" pos:column="12">22<pos:position pos:line="63" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="16">3<pos:position pos:line="63" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="19">"STALE: age "<pos:position pos:line="63" pos:column="32"/></literal> <operator pos:line="63" pos:column="33">&lt;&lt;<pos:position pos:line="63" pos:column="41"/></operator> <name pos:line="63" pos:column="36">age<pos:position pos:line="63" pos:column="39"/></name> <operator pos:line="63" pos:column="40">&lt;&lt;<pos:position pos:line="63" pos:column="48"/></operator> <literal type="string" pos:line="63" pos:column="43">" &gt;= min "<pos:position pos:line="63" pos:column="56"/></literal> <operator pos:line="63" pos:column="54">&lt;&lt;<pos:position pos:line="63" pos:column="62"/></operator> <name><name pos:line="63" pos:column="57">R<pos:position pos:line="63" pos:column="58"/></name><operator pos:line="63" pos:column="58">-&gt;<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="60">min<pos:position pos:line="63" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="65"/></expr_stmt>
    <return pos:line="64" pos:column="5">return <expr><operator pos:line="64" pos:column="12">(<pos:position pos:line="64" pos:column="13"/></operator><name pos:line="64" pos:column="13">age<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">-<pos:position pos:line="64" pos:column="18"/></operator> <name><name pos:line="64" pos:column="19">R<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">min<pos:position pos:line="64" pos:column="25"/></name></name><operator pos:line="64" pos:column="25">)<pos:position pos:line="64" pos:column="26"/></operator></expr>;<pos:position pos:line="64" pos:column="27"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

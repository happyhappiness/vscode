<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5825_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">fd_set<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">R<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">x<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">max_fd<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">timeval<pos:position pos:line="8" pos:column="19"/></name></name></type> <name pos:line="8" pos:column="20">tv<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">debug_args<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="string" pos:line="9" pos:column="30">"ALL,10"<pos:position pos:line="9" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">t<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">time_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">last_check_time<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/*
     * cevans - do this first. It grabs a raw socket. After this we can
     * drop privs
     */</comment>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">icmp4_worker<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">icmp6_worker<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">= <expr><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><literal type="number" pos:line="18" pos:column="25">1<pos:position pos:line="18" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">squid_link<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><operator pos:line="19" pos:column="22">-<pos:position pos:line="19" pos:column="23"/></operator><literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="21" pos:column="5">/** start by initializing the pinger debug cache.log-pinger. */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">t<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">getenv<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><literal type="string" pos:line="22" pos:column="21">"SQUID_DEBUG"<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">debug_args<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <call><name pos:line="23" pos:column="22">xstrdup<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">t<pos:position pos:line="23" pos:column="31"/></name></expr></argument>)<pos:position pos:line="23" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">getCurrentTime<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">()<pos:position pos:line="25" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>

    <comment type="line" pos:line="27" pos:column="5">// determine IPv4 or IPv6 capabilities before using sockets.</comment>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">Ip<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">::<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">ProbeTransport<pos:position pos:line="28" pos:column="23"/></name></name><argument_list pos:line="28" pos:column="23">()<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">_db_init<pos:position pos:line="30" pos:column="13"/></name><argument_list pos:line="30" pos:column="13">(<argument><expr><name pos:line="30" pos:column="14">NULL<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="20">debug_args<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">debugs<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="number" pos:line="32" pos:column="12">42<pos:position pos:line="32" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="16">DBG_CRITICAL<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="30">"pinger: Initialising ICMP pinger ..."<pos:position pos:line="32" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">icmp4_worker<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name><name pos:line="34" pos:column="20">icmp4<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">.<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">Open<pos:position pos:line="34" pos:column="30"/></name></name><argument_list pos:line="34" pos:column="30">()<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">icmp4_worker<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">&lt;<pos:position pos:line="35" pos:column="26"/></operator> <literal type="number" pos:line="35" pos:column="24">0<pos:position pos:line="35" pos:column="25"/></literal></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26"> <block pos:line="35" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">42<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="20">DBG_CRITICAL<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="34">"pinger: Unable to start ICMP pinger."<pos:position pos:line="36" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="38" pos:column="5">max_fd<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <call><name pos:line="38" pos:column="14">max<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">max_fd<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="26">icmp4_worker<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>

<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">USE_IPV6<pos:position pos:line="40" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="41" pos:column="5">icmp6_worker<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name><name pos:line="41" pos:column="20">icmp6<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">.<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="26">Open<pos:position pos:line="41" pos:column="30"/></name></name><argument_list pos:line="41" pos:column="30">()<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">icmp6_worker<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">&lt;<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr> )<pos:position pos:line="42" pos:column="26"/></condition><then pos:line="42" pos:column="26"> <block pos:line="42" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">42<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">DBG_CRITICAL<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"pinger: Unable to start ICMPv6 pinger."<pos:position pos:line="43" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="45" pos:column="5">max_fd<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <call><name pos:line="45" pos:column="14">max<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">max_fd<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="26">icmp6_worker<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" format="doxygen" pos:line="48" pos:column="5">/** abort if neither worker could open a socket. */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">icmp4_worker<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">&lt;<pos:position pos:line="49" pos:column="26"/></operator> <literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal> <operator pos:line="49" pos:column="26">&amp;&amp;<pos:position pos:line="49" pos:column="36"/></operator> <name pos:line="49" pos:column="29">icmp6_worker<pos:position pos:line="49" pos:column="41"/></name> <operator pos:line="49" pos:column="42">&lt;<pos:position pos:line="49" pos:column="46"/></operator> <literal type="number" pos:line="49" pos:column="44">0<pos:position pos:line="49" pos:column="45"/></literal></expr>)<pos:position pos:line="49" pos:column="46"/></condition><then pos:line="49" pos:column="46"> <block pos:line="49" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">42<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="20">DBG_CRITICAL<pos:position pos:line="50" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="34">"FATAL: pinger: Unable to open any ICMP sockets."<pos:position pos:line="50" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">exit<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="number" pos:line="51" pos:column="14">1<pos:position pos:line="51" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">( <expr><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">squid_link<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <call><name><name pos:line="54" pos:column="24">control<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">.<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="32">Open<pos:position pos:line="54" pos:column="36"/></name></name><argument_list pos:line="54" pos:column="36">()<pos:position pos:line="54" pos:column="38"/></argument_list></call><operator pos:line="54" pos:column="38">)<pos:position pos:line="54" pos:column="39"/></operator> <operator pos:line="54" pos:column="40">&lt;<pos:position pos:line="54" pos:column="44"/></operator> <literal type="number" pos:line="54" pos:column="42">0<pos:position pos:line="54" pos:column="43"/></literal></expr>)<pos:position pos:line="54" pos:column="44"/></condition><then pos:line="54" pos:column="44"> <block pos:line="54" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">debugs<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="number" pos:line="55" pos:column="16">42<pos:position pos:line="55" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="20">DBG_CRITICAL<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="34">"FATAL: pinger: Unable to setup Pinger control sockets."<pos:position pos:line="55" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="56" pos:column="9">icmp4<pos:position pos:line="56" pos:column="14"/></name><operator pos:line="56" pos:column="14">.<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="15">Close<pos:position pos:line="56" pos:column="20"/></name></name><argument_list pos:line="56" pos:column="20">()<pos:position pos:line="56" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="57" pos:column="9">icmp6<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">.<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="15">Close<pos:position pos:line="57" pos:column="20"/></name></name><argument_list pos:line="57" pos:column="20">()<pos:position pos:line="57" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">exit<pos:position pos:line="58" pos:column="13"/></name><argument_list pos:line="58" pos:column="13">(<argument><expr><literal type="number" pos:line="58" pos:column="14">1<pos:position pos:line="58" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="17"/></expr_stmt> <comment type="line" pos:line="58" pos:column="18">// fatal error if the control channel fails.</comment>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="60" pos:column="5">max_fd<pos:position pos:line="60" pos:column="11"/></name> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <call><name pos:line="60" pos:column="14">max<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name pos:line="60" pos:column="18">max_fd<pos:position pos:line="60" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="26">squid_link<pos:position pos:line="60" pos:column="36"/></name></expr></argument>)<pos:position pos:line="60" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><call><name pos:line="62" pos:column="9">setgid<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><call><name pos:line="62" pos:column="16">getgid<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">()<pos:position pos:line="62" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call> <operator pos:line="62" pos:column="26">&lt;<pos:position pos:line="62" pos:column="30"/></operator> <literal type="number" pos:line="62" pos:column="28">0<pos:position pos:line="62" pos:column="29"/></literal></expr>)<pos:position pos:line="62" pos:column="30"/></condition><then pos:line="62" pos:column="30"> <block pos:line="62" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="63" pos:column="9">debugs<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><literal type="number" pos:line="63" pos:column="16">42<pos:position pos:line="63" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="20">DBG_CRITICAL<pos:position pos:line="63" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="34">"FATAL: pinger: setgid("<pos:position pos:line="63" pos:column="58"/></literal> <operator pos:line="63" pos:column="59">&lt;&lt;<pos:position pos:line="63" pos:column="67"/></operator> <call><name pos:line="63" pos:column="62">getgid<pos:position pos:line="63" pos:column="68"/></name><argument_list pos:line="63" pos:column="68">()<pos:position pos:line="63" pos:column="70"/></argument_list></call> <operator pos:line="63" pos:column="71">&lt;&lt;<pos:position pos:line="63" pos:column="79"/></operator> <literal type="string" pos:line="63" pos:column="74">") failed: "<pos:position pos:line="63" pos:column="86"/></literal> <operator pos:line="63" pos:column="87">&lt;&lt;<pos:position pos:line="63" pos:column="95"/></operator> <call><name pos:line="63" pos:column="90">xstrerror<pos:position pos:line="63" pos:column="99"/></name><argument_list pos:line="63" pos:column="99">()<pos:position pos:line="63" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="64" pos:column="9">icmp4<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">.<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">Close<pos:position pos:line="64" pos:column="20"/></name></name><argument_list pos:line="64" pos:column="20">()<pos:position pos:line="64" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="65" pos:column="9">icmp6<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">.<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">Close<pos:position pos:line="65" pos:column="20"/></name></name><argument_list pos:line="65" pos:column="20">()<pos:position pos:line="65" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">exit<pos:position pos:line="66" pos:column="13"/></name> <argument_list pos:line="66" pos:column="14">(<argument><expr><literal type="number" pos:line="66" pos:column="15">1<pos:position pos:line="66" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><call><name pos:line="68" pos:column="9">setuid<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><call><name pos:line="68" pos:column="16">getuid<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">()<pos:position pos:line="68" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="25"/></argument_list></call> <operator pos:line="68" pos:column="26">&lt;<pos:position pos:line="68" pos:column="30"/></operator> <literal type="number" pos:line="68" pos:column="28">0<pos:position pos:line="68" pos:column="29"/></literal></expr>)<pos:position pos:line="68" pos:column="30"/></condition><then pos:line="68" pos:column="30"> <block pos:line="68" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debugs<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><literal type="number" pos:line="69" pos:column="16">42<pos:position pos:line="69" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="20">DBG_CRITICAL<pos:position pos:line="69" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="34">"FATAL: pinger: setuid("<pos:position pos:line="69" pos:column="58"/></literal> <operator pos:line="69" pos:column="59">&lt;&lt;<pos:position pos:line="69" pos:column="67"/></operator> <call><name pos:line="69" pos:column="62">getuid<pos:position pos:line="69" pos:column="68"/></name><argument_list pos:line="69" pos:column="68">()<pos:position pos:line="69" pos:column="70"/></argument_list></call> <operator pos:line="69" pos:column="71">&lt;&lt;<pos:position pos:line="69" pos:column="79"/></operator> <literal type="string" pos:line="69" pos:column="74">") failed: "<pos:position pos:line="69" pos:column="86"/></literal> <operator pos:line="69" pos:column="87">&lt;&lt;<pos:position pos:line="69" pos:column="95"/></operator> <call><name pos:line="69" pos:column="90">xstrerror<pos:position pos:line="69" pos:column="99"/></name><argument_list pos:line="69" pos:column="99">()<pos:position pos:line="69" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="70" pos:column="9">icmp4<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">.<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="15">Close<pos:position pos:line="70" pos:column="20"/></name></name><argument_list pos:line="70" pos:column="20">()<pos:position pos:line="70" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">icmp6<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">.<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">Close<pos:position pos:line="71" pos:column="20"/></name></name><argument_list pos:line="71" pos:column="20">()<pos:position pos:line="71" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">exit<pos:position pos:line="72" pos:column="13"/></name> <argument_list pos:line="72" pos:column="14">(<argument><expr><literal type="number" pos:line="72" pos:column="15">1<pos:position pos:line="72" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="75" pos:column="5">last_check_time<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <name pos:line="75" pos:column="23">squid_curtime<pos:position pos:line="75" pos:column="36"/></name></expr>;<pos:position pos:line="75" pos:column="37"/></expr_stmt>

    <for pos:line="77" pos:column="5">for <control pos:line="77" pos:column="9">(<init pos:line="77" pos:column="10">;<pos:position pos:line="77" pos:column="11"/></init><condition pos:line="77" pos:column="11">;<pos:position pos:line="77" pos:column="12"/></condition><incr/>)<pos:position pos:line="77" pos:column="13"/></control> <block pos:line="77" pos:column="14">{
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">tv<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">.<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="12">tv_sec<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">PINGER_TIMEOUT<pos:position pos:line="78" pos:column="35"/></name></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">tv<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">.<pos:position pos:line="79" pos:column="12"/></operator><name pos:line="79" pos:column="12">tv_usec<pos:position pos:line="79" pos:column="19"/></name></name> <operator pos:line="79" pos:column="20">=<pos:position pos:line="79" pos:column="21"/></operator> <literal type="number" pos:line="79" pos:column="22">0<pos:position pos:line="79" pos:column="23"/></literal></expr>;<pos:position pos:line="79" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">FD_ZERO<pos:position pos:line="80" pos:column="16"/></name><argument_list pos:line="80" pos:column="16">(<argument><expr><operator pos:line="80" pos:column="17">&amp;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="18">R<pos:position pos:line="80" pos:column="19"/></name></expr></argument>)<pos:position pos:line="80" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="21"/></expr_stmt>
        <if pos:line="81" pos:column="9">if <condition pos:line="81" pos:column="12">(<expr><name pos:line="81" pos:column="13">icmp4_worker<pos:position pos:line="81" pos:column="25"/></name> <operator pos:line="81" pos:column="26">&gt;=<pos:position pos:line="81" pos:column="31"/></operator> <literal type="number" pos:line="81" pos:column="29">0<pos:position pos:line="81" pos:column="30"/></literal></expr>)<pos:position pos:line="81" pos:column="31"/></condition><then pos:line="81" pos:column="31"> <block pos:line="81" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">FD_SET<pos:position pos:line="82" pos:column="19"/></name><argument_list pos:line="82" pos:column="19">(<argument><expr><name pos:line="82" pos:column="20">icmp4_worker<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="34">&amp;<pos:position pos:line="82" pos:column="39"/></operator><name pos:line="82" pos:column="35">R<pos:position pos:line="82" pos:column="36"/></name></expr></argument>)<pos:position pos:line="82" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">icmp6_worker<pos:position pos:line="84" pos:column="25"/></name> <operator pos:line="84" pos:column="26">&gt;=<pos:position pos:line="84" pos:column="31"/></operator> <literal type="number" pos:line="84" pos:column="29">0<pos:position pos:line="84" pos:column="30"/></literal></expr>)<pos:position pos:line="84" pos:column="31"/></condition><then pos:line="84" pos:column="31"> <block pos:line="84" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">FD_SET<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><name pos:line="85" pos:column="20">icmp6_worker<pos:position pos:line="85" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="34">&amp;<pos:position pos:line="85" pos:column="39"/></operator><name pos:line="85" pos:column="35">R<pos:position pos:line="85" pos:column="36"/></name></expr></argument>)<pos:position pos:line="85" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="88" pos:column="9">FD_SET<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><name pos:line="88" pos:column="16">squid_link<pos:position pos:line="88" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="28">&amp;<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="29">R<pos:position pos:line="88" pos:column="30"/></name></expr></argument>)<pos:position pos:line="88" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="89" pos:column="9">x<pos:position pos:line="89" pos:column="10"/></name> <operator pos:line="89" pos:column="11">=<pos:position pos:line="89" pos:column="12"/></operator> <call><name pos:line="89" pos:column="13">select<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><literal type="number" pos:line="89" pos:column="20">10<pos:position pos:line="89" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="89" pos:column="24">&amp;<pos:position pos:line="89" pos:column="29"/></operator><name pos:line="89" pos:column="25">R<pos:position pos:line="89" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="28">NULL<pos:position pos:line="89" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="34">NULL<pos:position pos:line="89" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="89" pos:column="40">&amp;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="41">tv<pos:position pos:line="89" pos:column="43"/></name></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">getCurrentTime<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">()<pos:position pos:line="90" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="26"/></expr_stmt>

        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">x<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">&lt;<pos:position pos:line="92" pos:column="19"/></operator> <literal type="number" pos:line="92" pos:column="17">0<pos:position pos:line="92" pos:column="18"/></literal></expr>)<pos:position pos:line="92" pos:column="19"/></condition><then pos:line="92" pos:column="19"> <block pos:line="92" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">debugs<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><literal type="number" pos:line="93" pos:column="20">42<pos:position pos:line="93" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="24">DBG_CRITICAL<pos:position pos:line="93" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="38">HERE<pos:position pos:line="93" pos:column="42"/></name> <operator pos:line="93" pos:column="43">&lt;&lt;<pos:position pos:line="93" pos:column="51"/></operator> <literal type="string" pos:line="93" pos:column="46">" FATAL Shutdown. select()=="<pos:position pos:line="93" pos:column="75"/></literal> <operator pos:line="93" pos:column="76">&lt;&lt;<pos:position pos:line="93" pos:column="84"/></operator> <name pos:line="93" pos:column="79">x<pos:position pos:line="93" pos:column="80"/></name> <operator pos:line="93" pos:column="81">&lt;&lt;<pos:position pos:line="93" pos:column="89"/></operator> <literal type="string" pos:line="93" pos:column="84">", ERR: "<pos:position pos:line="93" pos:column="93"/></literal> <operator pos:line="93" pos:column="94">&lt;&lt;<pos:position pos:line="93" pos:column="102"/></operator> <call><name pos:line="93" pos:column="97">xstrerror<pos:position pos:line="93" pos:column="106"/></name><argument_list pos:line="93" pos:column="106">()<pos:position pos:line="93" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="110"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">control<pos:position pos:line="94" pos:column="20"/></name><operator pos:line="94" pos:column="20">.<pos:position pos:line="94" pos:column="21"/></operator><name pos:line="94" pos:column="21">Close<pos:position pos:line="94" pos:column="26"/></name></name><argument_list pos:line="94" pos:column="26">()<pos:position pos:line="94" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">exit<pos:position pos:line="95" pos:column="17"/></name><argument_list pos:line="95" pos:column="17">(<argument><expr><literal type="number" pos:line="95" pos:column="18">1<pos:position pos:line="95" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>

        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><call><name pos:line="98" pos:column="13">FD_ISSET<pos:position pos:line="98" pos:column="21"/></name><argument_list pos:line="98" pos:column="21">(<argument><expr><name pos:line="98" pos:column="22">squid_link<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="34">&amp;<pos:position pos:line="98" pos:column="39"/></operator><name pos:line="98" pos:column="35">R<pos:position pos:line="98" pos:column="36"/></name></expr></argument>)<pos:position pos:line="98" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="38"/></condition><then pos:line="98" pos:column="38"> <block pos:line="98" pos:column="39">{
            <expr_stmt><expr><call><name><name pos:line="99" pos:column="13">control<pos:position pos:line="99" pos:column="20"/></name><operator pos:line="99" pos:column="20">.<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="21">Recv<pos:position pos:line="99" pos:column="25"/></name></name><argument_list pos:line="99" pos:column="25">()<pos:position pos:line="99" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>

        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">icmp6_worker<pos:position pos:line="102" pos:column="25"/></name> <operator pos:line="102" pos:column="26">&gt;=<pos:position pos:line="102" pos:column="31"/></operator> <literal type="number" pos:line="102" pos:column="29">0<pos:position pos:line="102" pos:column="30"/></literal> <operator pos:line="102" pos:column="31">&amp;&amp;<pos:position pos:line="102" pos:column="41"/></operator> <call><name pos:line="102" pos:column="34">FD_ISSET<pos:position pos:line="102" pos:column="42"/></name><argument_list pos:line="102" pos:column="42">(<argument><expr><name pos:line="102" pos:column="43">icmp6_worker<pos:position pos:line="102" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="57">&amp;<pos:position pos:line="102" pos:column="62"/></operator><name pos:line="102" pos:column="58">R<pos:position pos:line="102" pos:column="59"/></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="61"/></condition><then pos:line="102" pos:column="61"> <block pos:line="102" pos:column="62">{
            <expr_stmt><expr><call><name><name pos:line="103" pos:column="13">icmp6<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">.<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="19">Recv<pos:position pos:line="103" pos:column="23"/></name></name><argument_list pos:line="103" pos:column="23">()<pos:position pos:line="103" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">icmp4_worker<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">&gt;=<pos:position pos:line="105" pos:column="31"/></operator> <literal type="number" pos:line="105" pos:column="29">0<pos:position pos:line="105" pos:column="30"/></literal> <operator pos:line="105" pos:column="31">&amp;&amp;<pos:position pos:line="105" pos:column="41"/></operator> <call><name pos:line="105" pos:column="34">FD_ISSET<pos:position pos:line="105" pos:column="42"/></name><argument_list pos:line="105" pos:column="42">(<argument><expr><name pos:line="105" pos:column="43">icmp4_worker<pos:position pos:line="105" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="57">&amp;<pos:position pos:line="105" pos:column="62"/></operator><name pos:line="105" pos:column="58">R<pos:position pos:line="105" pos:column="59"/></name></expr></argument>)<pos:position pos:line="105" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="61"/></condition><then pos:line="105" pos:column="61"> <block pos:line="105" pos:column="62">{
            <expr_stmt><expr><call><name><name pos:line="106" pos:column="13">icmp4<pos:position pos:line="106" pos:column="18"/></name><operator pos:line="106" pos:column="18">.<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="19">Recv<pos:position pos:line="106" pos:column="23"/></name></name><argument_list pos:line="106" pos:column="23">()<pos:position pos:line="106" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><name pos:line="109" pos:column="13">PINGER_TIMEOUT<pos:position pos:line="109" pos:column="27"/></name> <operator pos:line="109" pos:column="28">+<pos:position pos:line="109" pos:column="29"/></operator> <name pos:line="109" pos:column="30">last_check_time<pos:position pos:line="109" pos:column="45"/></name> <operator pos:line="109" pos:column="46">&lt;<pos:position pos:line="109" pos:column="50"/></operator> <name pos:line="109" pos:column="48">squid_curtime<pos:position pos:line="109" pos:column="61"/></name></expr>)<pos:position pos:line="109" pos:column="62"/></condition><then pos:line="109" pos:column="62"> <block pos:line="109" pos:column="63">{
            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><call><name pos:line="110" pos:column="17">send<pos:position pos:line="110" pos:column="21"/></name><argument_list pos:line="110" pos:column="21">(<argument><expr><name pos:line="110" pos:column="22">LINK_TO_SQUID<pos:position pos:line="110" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="110" pos:column="37">&amp;<pos:position pos:line="110" pos:column="42"/></operator><name pos:line="110" pos:column="38">tv<pos:position pos:line="110" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="42">0<pos:position pos:line="110" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="45">0<pos:position pos:line="110" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="47"/></argument_list></call> <operator pos:line="110" pos:column="48">&lt;<pos:position pos:line="110" pos:column="52"/></operator> <literal type="number" pos:line="110" pos:column="50">0<pos:position pos:line="110" pos:column="51"/></literal></expr>)<pos:position pos:line="110" pos:column="52"/></condition><then pos:line="110" pos:column="52"> <block pos:line="110" pos:column="53">{
                <expr_stmt><expr><call><name pos:line="111" pos:column="17">debugs<pos:position pos:line="111" pos:column="23"/></name><argument_list pos:line="111" pos:column="23">(<argument><expr><literal type="number" pos:line="111" pos:column="24">42<pos:position pos:line="111" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="28">DBG_CRITICAL<pos:position pos:line="111" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="42">"pinger: Closing. No requests in last "<pos:position pos:line="111" pos:column="81"/></literal> <operator pos:line="111" pos:column="82">&lt;&lt;<pos:position pos:line="111" pos:column="90"/></operator> <name pos:line="111" pos:column="85">PINGER_TIMEOUT<pos:position pos:line="111" pos:column="99"/></name> <operator pos:line="111" pos:column="100">&lt;&lt;<pos:position pos:line="111" pos:column="108"/></operator> <literal type="string" pos:line="111" pos:column="103">" seconds."<pos:position pos:line="111" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="116"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="112" pos:column="17">control<pos:position pos:line="112" pos:column="24"/></name><operator pos:line="112" pos:column="24">.<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="25">Close<pos:position pos:line="112" pos:column="30"/></name></name><argument_list pos:line="112" pos:column="30">()<pos:position pos:line="112" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="113" pos:column="17">exit<pos:position pos:line="113" pos:column="21"/></name><argument_list pos:line="113" pos:column="21">(<argument><expr><literal type="number" pos:line="113" pos:column="22">1<pos:position pos:line="113" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="114" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="116" pos:column="13">last_check_time<pos:position pos:line="116" pos:column="28"/></name> <operator pos:line="116" pos:column="29">=<pos:position pos:line="116" pos:column="30"/></operator> <name pos:line="116" pos:column="31">squid_curtime<pos:position pos:line="116" pos:column="44"/></name></expr>;<pos:position pos:line="116" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="117" pos:column="10"/></block></then></if>
    }<pos:position pos:line="118" pos:column="6"/></block></for>

    <comment type="block" pos:line="120" pos:column="5">/* NOTREACHED */</comment>
    <return pos:line="121" pos:column="5">return <expr><literal type="number" pos:line="121" pos:column="12">0<pos:position pos:line="121" pos:column="13"/></literal></expr>;<pos:position pos:line="121" pos:column="14"/></return>
}<pos:position pos:line="122" pos:column="2"/></block></function></unit>

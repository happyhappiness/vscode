<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3264_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Iterator<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">handleAdaptedHeader<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name pos:line="2" pos:column="43">HttpMsg<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">aMsg<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// set theCause if we switched to request satisfaction mode</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">theCause<pos:position pos:line="5" pos:column="18"/></name></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <block pos:line="5" pos:column="20">{ <comment type="line" pos:line="5" pos:column="22">// probably sent a request message</comment>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><cast type="dynamic" pos:line="6" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="6" pos:column="25">&lt;<argument><expr><name pos:line="6" pos:column="26">HttpReply<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="40"/></argument_list><argument_list pos:line="6" pos:column="37">(<argument><expr><name pos:line="6" pos:column="38">aMsg<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></cast></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44"> <block pos:line="6" pos:column="45">{ <comment type="line" pos:line="6" pos:column="47">// we got a response message</comment>
            <if pos:line="7" pos:column="13">if <condition pos:line="7" pos:column="16">(<decl><type><name pos:line="7" pos:column="17">HttpRequest<pos:position pos:line="7" pos:column="28"/></name> <modifier pos:line="7" pos:column="29">*<pos:position pos:line="7" pos:column="30"/></modifier></type><name pos:line="7" pos:column="30">cause<pos:position pos:line="7" pos:column="35"/></name> <init pos:line="7" pos:column="36">= <expr><cast type="dynamic" pos:line="7" pos:column="38">dynamic_cast<argument_list type="generic" pos:line="7" pos:column="50">&lt;<argument><expr><name pos:line="7" pos:column="51">HttpRequest<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">*<pos:position pos:line="7" pos:column="63"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="67"/></argument_list><argument_list pos:line="7" pos:column="64">(<argument><expr><name pos:line="7" pos:column="65">theMsg<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73"> <block pos:line="7" pos:column="74">{
                <comment type="line" pos:line="8" pos:column="17">// definately sent request, now use it as the cause</comment>
                <expr_stmt><expr><name pos:line="9" pos:column="17">theCause<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">cause<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt> <comment type="line" pos:line="9" pos:column="35">// moving the lock</comment>
                <expr_stmt><expr><name pos:line="10" pos:column="17">theMsg<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="11" pos:column="17">debugs<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="number" pos:line="11" pos:column="24">93<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="27">3<pos:position pos:line="11" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">HERE<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">&lt;&lt;<pos:position pos:line="11" pos:column="43"/></operator> <literal type="string" pos:line="11" pos:column="38">"in request satisfaction mode"<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="12" pos:column="14"/></block></then></if>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">Must<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name pos:line="16" pos:column="10">aMsg<pos:position pos:line="16" pos:column="14"/></name></expr></argument>)<pos:position pos:line="16" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">HTTPMSGUNLOCK<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">theMsg<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">theMsg<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">aMsg<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">HTTPMSGLOCK<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">theMsg<pos:position pos:line="19" pos:column="23"/></name></expr></argument>)<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">adapted<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="boolean" pos:line="20" pos:column="15">true<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">clearAdaptation<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">theLauncher<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><call><name pos:line="23" pos:column="10">updatePlan<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="boolean" pos:line="23" pos:column="21">true<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <comment type="line" pos:line="23" pos:column="28">// do not immediatelly advance the new plan</comment>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="9">thePlan<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">.<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">next<pos:position pos:line="24" pos:column="21"/></name></name><argument_list pos:line="24" pos:column="21">(<argument><expr><call><name pos:line="24" pos:column="22">filter<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">()<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">step<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">()<pos:position pos:line="25" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="12"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3289_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">comm_err_t<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">comm_select<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">msec<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">fd_set<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">readfds<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fd_set<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">pendingfds<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">fd_set<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">writefds<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">PF<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">hdl<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">fd<pos:position pos:line="9" pos:column="11"/></name></decl>;<pos:position pos:line="9" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">maxfd<pos:position pos:line="10" pos:column="14"/></name></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">num<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">pending<pos:position pos:line="12" pos:column="16"/></name></decl>;<pos:position pos:line="12" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">callicp<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="13" pos:column="22">callhttp<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">calldns<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">j<pos:position pos:line="15" pos:column="10"/></name></decl>;<pos:position pos:line="15" pos:column="11"/></decl_stmt>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">DEBUG_FDBITS<pos:position pos:line="16" pos:column="17"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">i<pos:position pos:line="18" pos:column="10"/></name></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">struct<pos:position pos:line="20" pos:column="11"/></name> <name pos:line="20" pos:column="12">timeval<pos:position pos:line="20" pos:column="19"/></name></name></type> <name pos:line="20" pos:column="20">poll_time<pos:position pos:line="20" pos:column="29"/></name></decl>;<pos:position pos:line="20" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">double<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">timeout<pos:position pos:line="21" pos:column="19"/></name> <init pos:line="21" pos:column="20">= <expr><name pos:line="21" pos:column="22">current_dtime<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">+<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="38">(<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">msec<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">/<pos:position pos:line="21" pos:column="45"/></operator> <literal type="number" pos:line="21" pos:column="46">1000.0<pos:position pos:line="21" pos:column="52"/></literal><operator pos:line="21" pos:column="52">)<pos:position pos:line="21" pos:column="53"/></operator></expr></init></decl>;<pos:position pos:line="21" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">fde<pos:position pos:line="22" pos:column="8"/></name> <modifier pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></modifier></type><name pos:line="22" pos:column="10">F<pos:position pos:line="22" pos:column="11"/></name></decl>;<pos:position pos:line="22" pos:column="12"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">no_bits<pos:position pos:line="24" pos:column="16"/></name></decl>;<pos:position pos:line="24" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">fd_set<pos:position pos:line="25" pos:column="11"/></name></type> <name pos:line="25" pos:column="12">errfds<pos:position pos:line="25" pos:column="18"/></name></decl>;<pos:position pos:line="25" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">FD_ZERO<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><operator pos:line="26" pos:column="13">&amp;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="14">errfds<pos:position pos:line="26" pos:column="20"/></name></expr></argument>)<pos:position pos:line="26" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>

    <do pos:line="28" pos:column="5">do <block pos:line="28" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">double<pos:position pos:line="29" pos:column="15"/></name></type> <name pos:line="29" pos:column="16">start<pos:position pos:line="29" pos:column="21"/></name></decl>;<pos:position pos:line="29" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">getCurrentTime<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">()<pos:position pos:line="30" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="31" pos:column="9">start<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">current_dtime<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">commCheckICPIncoming<pos:position pos:line="33" pos:column="33"/></name></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">comm_select_icp_incoming<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">()<pos:position pos:line="34" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="40"/></expr_stmt></block></then></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">commCheckDNSIncoming<pos:position pos:line="36" pos:column="33"/></name></expr>)<pos:position pos:line="36" pos:column="34"/></condition><then pos:line="36" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">comm_select_dns_incoming<pos:position pos:line="37" pos:column="37"/></name><argument_list pos:line="37" pos:column="37">()<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">commCheckHTTPIncoming<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="13">comm_select_http_incoming<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">()<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="42" pos:column="9">callicp<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">calldns<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">callhttp<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">=<pos:position pos:line="42" pos:column="39"/></operator> <literal type="number" pos:line="42" pos:column="40">0<pos:position pos:line="42" pos:column="41"/></literal></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name pos:line="44" pos:column="9">maxfd<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">Biggest_FD<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">+<pos:position pos:line="44" pos:column="29"/></operator> <literal type="number" pos:line="44" pos:column="30">1<pos:position pos:line="44" pos:column="31"/></literal></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="46" pos:column="9">xmemcpy<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><operator pos:line="46" pos:column="17">&amp;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="18">readfds<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="27">&amp;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="28">global_readfds<pos:position pos:line="46" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="44">sizeof<argument_list pos:line="46" pos:column="50">(<argument><expr><name pos:line="46" pos:column="51">global_readfds<pos:position pos:line="46" pos:column="65"/></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="48" pos:column="9">xmemcpy<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><operator pos:line="48" pos:column="17">&amp;<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="18">writefds<pos:position pos:line="48" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="28">&amp;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="29">global_writefds<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="46">sizeof<argument_list pos:line="48" pos:column="52">(<argument><expr><name pos:line="48" pos:column="53">global_writefds<pos:position pos:line="48" pos:column="68"/></name></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="50" pos:column="9">xmemcpy<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><operator pos:line="50" pos:column="17">&amp;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="18">errfds<pos:position pos:line="50" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="26">&amp;<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="27">global_writefds<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="44">sizeof<argument_list pos:line="50" pos:column="50">(<argument><expr><name pos:line="50" pos:column="51">global_writefds<pos:position pos:line="50" pos:column="66"/></name></expr></argument>)<pos:position pos:line="50" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>

        <comment type="block" pos:line="52" pos:column="9">/* remove stalled FDs, and deal with pending descriptors */</comment>
        <expr_stmt><expr><name pos:line="53" pos:column="9">pending<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <literal type="number" pos:line="53" pos:column="19">0<pos:position pos:line="53" pos:column="20"/></literal></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="55" pos:column="9">FD_ZERO<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><operator pos:line="55" pos:column="17">&amp;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="18">pendingfds<pos:position pos:line="55" pos:column="28"/></name></expr></argument>)<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>

        <for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><expr><name pos:line="57" pos:column="14">j<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>;<pos:position pos:line="57" pos:column="20"/></init> <condition><expr><name pos:line="57" pos:column="21">j<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">&lt;<pos:position pos:line="57" pos:column="27"/></operator> <operator pos:line="57" pos:column="25">(<pos:position pos:line="57" pos:column="26"/></operator><name pos:line="57" pos:column="26">int<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">)<pos:position pos:line="57" pos:column="30"/></operator> <name><name pos:line="57" pos:column="31">readfds<pos:position pos:line="57" pos:column="38"/></name><operator pos:line="57" pos:column="38">.<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">fd_count<pos:position pos:line="57" pos:column="47"/></name></name></expr>;<pos:position pos:line="57" pos:column="48"/></condition> <incr><expr><name pos:line="57" pos:column="49">j<pos:position pos:line="57" pos:column="50"/></name><operator pos:line="57" pos:column="50">++<pos:position pos:line="57" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="53"/></control> <block pos:line="57" pos:column="54">{
            <decl_stmt><decl><type><specifier pos:line="58" pos:column="13">register<pos:position pos:line="58" pos:column="21"/></specifier> <name pos:line="58" pos:column="22">int<pos:position pos:line="58" pos:column="25"/></name></type> <name pos:line="58" pos:column="26">readfds_handle<pos:position pos:line="58" pos:column="40"/></name> <init pos:line="58" pos:column="41">= <expr><name><name pos:line="58" pos:column="43">readfds<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">.<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="51">fd_array<pos:position pos:line="58" pos:column="59"/></name><index pos:line="58" pos:column="59">[<expr><name pos:line="58" pos:column="60">j<pos:position pos:line="58" pos:column="61"/></name></expr>]<pos:position pos:line="58" pos:column="62"/></index></name></expr></init></decl>;<pos:position pos:line="58" pos:column="63"/></decl_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">no_bits<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">=<pos:position pos:line="59" pos:column="22"/></operator> <literal type="number" pos:line="59" pos:column="23">1<pos:position pos:line="59" pos:column="24"/></literal></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>

            <for pos:line="61" pos:column="13">for <control pos:line="61" pos:column="17">( <init><expr><name pos:line="61" pos:column="19">fd<pos:position pos:line="61" pos:column="21"/></name> <operator pos:line="61" pos:column="22">=<pos:position pos:line="61" pos:column="23"/></operator> <name pos:line="61" pos:column="24">Biggest_FD<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></init> <condition><expr><name pos:line="61" pos:column="36">fd<pos:position pos:line="61" pos:column="38"/></name></expr>;<pos:position pos:line="61" pos:column="39"/></condition> <incr><expr><name pos:line="61" pos:column="40">fd<pos:position pos:line="61" pos:column="42"/></name><operator pos:line="61" pos:column="42">--<pos:position pos:line="61" pos:column="44"/></operator></expr></incr> )<pos:position pos:line="61" pos:column="46"/></control> <block pos:line="61" pos:column="47">{
                <if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">( <expr><name><name pos:line="62" pos:column="22">fd_table<pos:position pos:line="62" pos:column="30"/></name><index pos:line="62" pos:column="30">[<expr><name pos:line="62" pos:column="31">fd<pos:position pos:line="62" pos:column="33"/></name></expr>]<pos:position pos:line="62" pos:column="34"/></index></name><operator pos:line="62" pos:column="34">.<pos:position pos:line="62" pos:column="35"/></operator><name><name pos:line="62" pos:column="35">win32<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">.<pos:position pos:line="62" pos:column="41"/></operator><name pos:line="62" pos:column="41">handle<pos:position pos:line="62" pos:column="47"/></name></name> <operator pos:line="62" pos:column="48">==<pos:position pos:line="62" pos:column="50"/></operator> <name pos:line="62" pos:column="51">readfds_handle<pos:position pos:line="62" pos:column="65"/></name></expr> )<pos:position pos:line="62" pos:column="67"/></condition><then pos:line="62" pos:column="67"> <block pos:line="62" pos:column="68">{
                    <if pos:line="63" pos:column="21">if <condition pos:line="63" pos:column="24">(<expr><name><name pos:line="63" pos:column="25">fd_table<pos:position pos:line="63" pos:column="33"/></name><index pos:line="63" pos:column="33">[<expr><name pos:line="63" pos:column="34">fd<pos:position pos:line="63" pos:column="36"/></name></expr>]<pos:position pos:line="63" pos:column="37"/></index></name><operator pos:line="63" pos:column="37">.<pos:position pos:line="63" pos:column="38"/></operator><name><name pos:line="63" pos:column="38">flags<pos:position pos:line="63" pos:column="43"/></name><operator pos:line="63" pos:column="43">.<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="44">open<pos:position pos:line="63" pos:column="48"/></name></name></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49"> <block pos:line="63" pos:column="50">{
                        <expr_stmt><expr><name pos:line="64" pos:column="25">no_bits<pos:position pos:line="64" pos:column="32"/></name> <operator pos:line="64" pos:column="33">=<pos:position pos:line="64" pos:column="34"/></operator> <literal type="number" pos:line="64" pos:column="35">0<pos:position pos:line="64" pos:column="36"/></literal></expr>;<pos:position pos:line="64" pos:column="37"/></expr_stmt>
                        <break pos:line="65" pos:column="25">break;<pos:position pos:line="65" pos:column="31"/></break>
                    }<pos:position pos:line="66" pos:column="22"/></block></then></if>
                }<pos:position pos:line="67" pos:column="18"/></block></then></if>
            }<pos:position pos:line="68" pos:column="14"/></block></for>

            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name pos:line="70" pos:column="17">no_bits<pos:position pos:line="70" pos:column="24"/></name></expr>)<pos:position pos:line="70" pos:column="25"/></condition><then pos:line="70" pos:column="25">
                <block type="pseudo"><continue pos:line="71" pos:column="17">continue;<pos:position pos:line="71" pos:column="26"/></continue></block></then></if>

            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><call><name pos:line="73" pos:column="17">__WSAFDIsSet<pos:position pos:line="73" pos:column="29"/></name><argument_list pos:line="73" pos:column="29">(<argument><expr><name><name pos:line="73" pos:column="30">fd_table<pos:position pos:line="73" pos:column="38"/></name><index pos:line="73" pos:column="38">[<expr><name pos:line="73" pos:column="39">fd<pos:position pos:line="73" pos:column="41"/></name></expr>]<pos:position pos:line="73" pos:column="42"/></index></name><operator pos:line="73" pos:column="42">.<pos:position pos:line="73" pos:column="43"/></operator><name><name pos:line="73" pos:column="43">win32<pos:position pos:line="73" pos:column="48"/></name><operator pos:line="73" pos:column="48">.<pos:position pos:line="73" pos:column="49"/></operator><name pos:line="73" pos:column="49">handle<pos:position pos:line="73" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="57">&amp;<pos:position pos:line="73" pos:column="62"/></operator><name pos:line="73" pos:column="58">readfds<pos:position pos:line="73" pos:column="65"/></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call> <operator pos:line="73" pos:column="67">&amp;&amp;<pos:position pos:line="73" pos:column="77"/></operator> <name><name pos:line="73" pos:column="70">fd_table<pos:position pos:line="73" pos:column="78"/></name><index pos:line="73" pos:column="78">[<expr><name pos:line="73" pos:column="79">fd<pos:position pos:line="73" pos:column="81"/></name></expr>]<pos:position pos:line="73" pos:column="82"/></index></name><operator pos:line="73" pos:column="82">.<pos:position pos:line="73" pos:column="83"/></operator><name><name pos:line="73" pos:column="83">flags<pos:position pos:line="73" pos:column="88"/></name><operator pos:line="73" pos:column="88">.<pos:position pos:line="73" pos:column="89"/></operator><name pos:line="73" pos:column="89">read_pending<pos:position pos:line="73" pos:column="101"/></name></name></expr>)<pos:position pos:line="73" pos:column="102"/></condition><then pos:line="73" pos:column="102"> <block pos:line="73" pos:column="103">{
                <expr_stmt><expr><call><name pos:line="74" pos:column="17">FD_SET<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">fd<pos:position pos:line="74" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="28">&amp;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="29">pendingfds<pos:position pos:line="74" pos:column="39"/></name></expr></argument>)<pos:position pos:line="74" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="75" pos:column="17">pending<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">++<pos:position pos:line="75" pos:column="26"/></operator></expr>;<pos:position pos:line="75" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></for>

<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><name pos:line="79" pos:column="5">DEBUG_FDBITS<pos:position pos:line="79" pos:column="17"/></name></expr></cpp:if>
        <for pos:line="80" pos:column="9">for <control pos:line="80" pos:column="13">(<init><expr><name pos:line="80" pos:column="14">i<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <literal type="number" pos:line="80" pos:column="18">0<pos:position pos:line="80" pos:column="19"/></literal></expr>;<pos:position pos:line="80" pos:column="20"/></init> <condition><expr><name pos:line="80" pos:column="21">i<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">&lt;<pos:position pos:line="80" pos:column="27"/></operator> <name pos:line="80" pos:column="25">maxfd<pos:position pos:line="80" pos:column="30"/></name></expr>;<pos:position pos:line="80" pos:column="31"/></condition> <incr><expr><name pos:line="80" pos:column="32">i<pos:position pos:line="80" pos:column="33"/></name><operator pos:line="80" pos:column="33">++<pos:position pos:line="80" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="36"/></control> <block pos:line="80" pos:column="37">{
            <comment type="block" pos:line="81" pos:column="13">/* Check each open socket for a handler. */</comment>

            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name><name pos:line="83" pos:column="17">fd_table<pos:position pos:line="83" pos:column="25"/></name><index pos:line="83" pos:column="25">[<expr><name pos:line="83" pos:column="26">i<pos:position pos:line="83" pos:column="27"/></name></expr>]<pos:position pos:line="83" pos:column="28"/></index></name><operator pos:line="83" pos:column="28">.<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="29">read_handler<pos:position pos:line="83" pos:column="41"/></name></expr>)<pos:position pos:line="83" pos:column="42"/></condition><then pos:line="83" pos:column="42"> <block pos:line="83" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="84" pos:column="17">assert<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><call><name pos:line="84" pos:column="24">__WSAFDIsSet<pos:position pos:line="84" pos:column="36"/></name><argument_list pos:line="84" pos:column="36">(<argument><expr><name><name pos:line="84" pos:column="37">fd_table<pos:position pos:line="84" pos:column="45"/></name><index pos:line="84" pos:column="45">[<expr><name pos:line="84" pos:column="46">i<pos:position pos:line="84" pos:column="47"/></name></expr>]<pos:position pos:line="84" pos:column="48"/></index></name><operator pos:line="84" pos:column="48">.<pos:position pos:line="84" pos:column="49"/></operator><name><name pos:line="84" pos:column="49">win32<pos:position pos:line="84" pos:column="54"/></name><operator pos:line="84" pos:column="54">.<pos:position pos:line="84" pos:column="55"/></operator><name pos:line="84" pos:column="55">handle<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="63">readfds<pos:position pos:line="84" pos:column="70"/></name></expr></argument>)<pos:position pos:line="84" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="85" pos:column="14"/></block></then></if>

            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name><name pos:line="87" pos:column="17">fd_table<pos:position pos:line="87" pos:column="25"/></name><index pos:line="87" pos:column="25">[<expr><name pos:line="87" pos:column="26">i<pos:position pos:line="87" pos:column="27"/></name></expr>]<pos:position pos:line="87" pos:column="28"/></index></name><operator pos:line="87" pos:column="28">.<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="29">write_handler<pos:position pos:line="87" pos:column="42"/></name></expr>)<pos:position pos:line="87" pos:column="43"/></condition><then pos:line="87" pos:column="43"> <block pos:line="87" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">assert<pos:position pos:line="88" pos:column="23"/></name><argument_list pos:line="88" pos:column="23">(<argument><expr><call><name pos:line="88" pos:column="24">__WSAFDIsSet<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name><name pos:line="88" pos:column="37">fd_table<pos:position pos:line="88" pos:column="45"/></name><index pos:line="88" pos:column="45">[<expr><name pos:line="88" pos:column="46">i<pos:position pos:line="88" pos:column="47"/></name></expr>]<pos:position pos:line="88" pos:column="48"/></index></name><operator pos:line="88" pos:column="48">.<pos:position pos:line="88" pos:column="49"/></operator><name><name pos:line="88" pos:column="49">win32<pos:position pos:line="88" pos:column="54"/></name><operator pos:line="88" pos:column="54">.<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="55">handle<pos:position pos:line="88" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="63">writefds<pos:position pos:line="88" pos:column="71"/></name></expr></argument>)<pos:position pos:line="88" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="74"/></expr_stmt>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
        }<pos:position pos:line="90" pos:column="10"/></block></for>

<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">nreadfds<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">+<pos:position pos:line="93" pos:column="23"/></operator> <name pos:line="93" pos:column="24">nwritefds<pos:position pos:line="93" pos:column="33"/></name> <operator pos:line="93" pos:column="34">==<pos:position pos:line="93" pos:column="36"/></operator> <literal type="number" pos:line="93" pos:column="37">0<pos:position pos:line="93" pos:column="38"/></literal></expr>)<pos:position pos:line="93" pos:column="39"/></condition><then pos:line="93" pos:column="39"> <block pos:line="93" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">assert<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">shutting_down<pos:position pos:line="94" pos:column="33"/></name></expr></argument>)<pos:position pos:line="94" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="35"/></expr_stmt>
            <return pos:line="95" pos:column="13">return <expr><name pos:line="95" pos:column="20">COMM_SHUTDOWN<pos:position pos:line="95" pos:column="33"/></name></expr>;<pos:position pos:line="95" pos:column="34"/></return>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>

        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">msec<pos:position pos:line="98" pos:column="17"/></name> <operator pos:line="98" pos:column="18">&gt;<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="20">MAX_POLL_TIME<pos:position pos:line="98" pos:column="33"/></name></expr>)<pos:position pos:line="98" pos:column="34"/></condition><then pos:line="98" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="13">msec<pos:position pos:line="99" pos:column="17"/></name> <operator pos:line="99" pos:column="18">=<pos:position pos:line="99" pos:column="19"/></operator> <name pos:line="99" pos:column="20">MAX_POLL_TIME<pos:position pos:line="99" pos:column="33"/></name></expr>;<pos:position pos:line="99" pos:column="34"/></expr_stmt></block></then></if>

        <if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">pending<pos:position pos:line="101" pos:column="20"/></name></expr>)<pos:position pos:line="101" pos:column="21"/></condition><then pos:line="101" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="13">msec<pos:position pos:line="102" pos:column="17"/></name> <operator pos:line="102" pos:column="18">=<pos:position pos:line="102" pos:column="19"/></operator> <literal type="number" pos:line="102" pos:column="20">0<pos:position pos:line="102" pos:column="21"/></literal></expr>;<pos:position pos:line="102" pos:column="22"/></expr_stmt></block></then></if>

        <for pos:line="104" pos:column="9">for <control pos:line="104" pos:column="13">(<init pos:line="104" pos:column="14">;<pos:position pos:line="104" pos:column="15"/></init><condition pos:line="104" pos:column="15">;<pos:position pos:line="104" pos:column="16"/></condition><incr/>)<pos:position pos:line="104" pos:column="17"/></control> <block pos:line="104" pos:column="18">{
            <expr_stmt><expr><name><name pos:line="105" pos:column="13">poll_time<pos:position pos:line="105" pos:column="22"/></name><operator pos:line="105" pos:column="22">.<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">tv_sec<pos:position pos:line="105" pos:column="29"/></name></name> <operator pos:line="105" pos:column="30">=<pos:position pos:line="105" pos:column="31"/></operator> <name pos:line="105" pos:column="32">msec<pos:position pos:line="105" pos:column="36"/></name> <operator pos:line="105" pos:column="37">/<pos:position pos:line="105" pos:column="38"/></operator> <literal type="number" pos:line="105" pos:column="39">1000<pos:position pos:line="105" pos:column="43"/></literal></expr>;<pos:position pos:line="105" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="106" pos:column="13">poll_time<pos:position pos:line="106" pos:column="22"/></name><operator pos:line="106" pos:column="22">.<pos:position pos:line="106" pos:column="23"/></operator><name pos:line="106" pos:column="23">tv_usec<pos:position pos:line="106" pos:column="30"/></name></name> <operator pos:line="106" pos:column="31">=<pos:position pos:line="106" pos:column="32"/></operator> <operator pos:line="106" pos:column="33">(<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="34">msec<pos:position pos:line="106" pos:column="38"/></name> <operator pos:line="106" pos:column="39">%<pos:position pos:line="106" pos:column="40"/></operator> <literal type="number" pos:line="106" pos:column="41">1000<pos:position pos:line="106" pos:column="45"/></literal><operator pos:line="106" pos:column="45">)<pos:position pos:line="106" pos:column="46"/></operator> <operator pos:line="106" pos:column="47">*<pos:position pos:line="106" pos:column="48"/></operator> <literal type="number" pos:line="106" pos:column="49">1000<pos:position pos:line="106" pos:column="53"/></literal></expr>;<pos:position pos:line="106" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="107" pos:column="13">++<pos:position pos:line="107" pos:column="15"/></operator><name><name pos:line="107" pos:column="15">statCounter<pos:position pos:line="107" pos:column="26"/></name><operator pos:line="107" pos:column="26">.<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="27">syscalls<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">.<pos:position pos:line="107" pos:column="36"/></operator><name pos:line="107" pos:column="36">selects<pos:position pos:line="107" pos:column="43"/></name></name></expr>;<pos:position pos:line="107" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="108" pos:column="13">num<pos:position pos:line="108" pos:column="16"/></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <call><name pos:line="108" pos:column="19">select<pos:position pos:line="108" pos:column="25"/></name><argument_list pos:line="108" pos:column="25">(<argument><expr><name pos:line="108" pos:column="26">maxfd<pos:position pos:line="108" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="33">&amp;<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="34">readfds<pos:position pos:line="108" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="43">&amp;<pos:position pos:line="108" pos:column="48"/></operator><name pos:line="108" pos:column="44">writefds<pos:position pos:line="108" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="54">&amp;<pos:position pos:line="108" pos:column="59"/></operator><name pos:line="108" pos:column="55">errfds<pos:position pos:line="108" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="63">&amp;<pos:position pos:line="108" pos:column="68"/></operator><name pos:line="108" pos:column="64">poll_time<pos:position pos:line="108" pos:column="73"/></name></expr></argument>)<pos:position pos:line="108" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="109" pos:column="13">++<pos:position pos:line="109" pos:column="15"/></operator><name><name pos:line="109" pos:column="15">statCounter<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">.<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="27">select_loops<pos:position pos:line="109" pos:column="39"/></name></name></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt>

            <if pos:line="111" pos:column="13">if <condition pos:line="111" pos:column="16">(<expr><name pos:line="111" pos:column="17">num<pos:position pos:line="111" pos:column="20"/></name> <operator pos:line="111" pos:column="21">&gt;=<pos:position pos:line="111" pos:column="26"/></operator> <literal type="number" pos:line="111" pos:column="24">0<pos:position pos:line="111" pos:column="25"/></literal> <operator pos:line="111" pos:column="26">||<pos:position pos:line="111" pos:column="28"/></operator> <name pos:line="111" pos:column="29">pending<pos:position pos:line="111" pos:column="36"/></name> <operator pos:line="111" pos:column="37">&gt;<pos:position pos:line="111" pos:column="41"/></operator> <literal type="number" pos:line="111" pos:column="39">0<pos:position pos:line="111" pos:column="40"/></literal></expr>)<pos:position pos:line="111" pos:column="41"/></condition><then pos:line="111" pos:column="41">
                <block type="pseudo"><break pos:line="112" pos:column="17">break;<pos:position pos:line="112" pos:column="23"/></break></block></then></if>

            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><call><name pos:line="114" pos:column="17">ignoreErrno<pos:position pos:line="114" pos:column="28"/></name><argument_list pos:line="114" pos:column="28">(<argument><expr><name pos:line="114" pos:column="29">errno<pos:position pos:line="114" pos:column="34"/></name></expr></argument>)<pos:position pos:line="114" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="36"/></condition><then pos:line="114" pos:column="36">
                <block type="pseudo"><break pos:line="115" pos:column="17">break;<pos:position pos:line="115" pos:column="23"/></break></block></then></if>

            <expr_stmt><expr><call><name pos:line="117" pos:column="13">debugs<pos:position pos:line="117" pos:column="19"/></name><argument_list pos:line="117" pos:column="19">(<argument><expr><literal type="number" pos:line="117" pos:column="20">5<pos:position pos:line="117" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="23">0<pos:position pos:line="117" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="26">"comm_select: select failure: "<pos:position pos:line="117" pos:column="57"/></literal> <operator pos:line="117" pos:column="58">&lt;&lt;<pos:position pos:line="117" pos:column="66"/></operator> <call><name pos:line="117" pos:column="61">xstrerror<pos:position pos:line="117" pos:column="70"/></name><argument_list pos:line="117" pos:column="70">()<pos:position pos:line="117" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="74"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="119" pos:column="13">examine_select<pos:position pos:line="119" pos:column="27"/></name><argument_list pos:line="119" pos:column="27">(<argument><expr><operator pos:line="119" pos:column="28">&amp;<pos:position pos:line="119" pos:column="33"/></operator><name pos:line="119" pos:column="29">readfds<pos:position pos:line="119" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="119" pos:column="38">&amp;<pos:position pos:line="119" pos:column="43"/></operator><name pos:line="119" pos:column="39">writefds<pos:position pos:line="119" pos:column="47"/></name></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>

            <return pos:line="121" pos:column="13">return <expr><name pos:line="121" pos:column="20">COMM_ERROR<pos:position pos:line="121" pos:column="30"/></name></expr>;<pos:position pos:line="121" pos:column="31"/></return>

            <comment type="block" pos:line="123" pos:column="13">/* NOTREACHED */</comment>
        }<pos:position pos:line="124" pos:column="10"/></block></for>

        <if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name pos:line="126" pos:column="13">num<pos:position pos:line="126" pos:column="16"/></name> <operator pos:line="126" pos:column="17">&lt;<pos:position pos:line="126" pos:column="21"/></operator> <literal type="number" pos:line="126" pos:column="19">0<pos:position pos:line="126" pos:column="20"/></literal> <operator pos:line="126" pos:column="21">&amp;&amp;<pos:position pos:line="126" pos:column="31"/></operator> <operator pos:line="126" pos:column="24">!<pos:position pos:line="126" pos:column="25"/></operator><name pos:line="126" pos:column="25">pending<pos:position pos:line="126" pos:column="32"/></name></expr>)<pos:position pos:line="126" pos:column="33"/></condition><then pos:line="126" pos:column="33">
            <block type="pseudo"><continue pos:line="127" pos:column="13">continue;<pos:position pos:line="127" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="129" pos:column="9">getCurrentTime<pos:position pos:line="129" pos:column="23"/></name><argument_list pos:line="129" pos:column="23">()<pos:position pos:line="129" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="131" pos:column="9">debugs<pos:position pos:line="131" pos:column="15"/></name><argument_list pos:line="131" pos:column="15">(<argument><expr><literal type="number" pos:line="131" pos:column="16">5<pos:position pos:line="131" pos:column="17"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="131" pos:column="19">num<pos:position pos:line="131" pos:column="22"/></name></expr> ?<pos:position pos:line="131" pos:column="24"/></condition><then pos:line="131" pos:column="24"> <expr><literal type="number" pos:line="131" pos:column="25">5<pos:position pos:line="131" pos:column="26"/></literal></expr> <pos:position pos:line="131" pos:column="27"/></then><else pos:line="131" pos:column="27">: <expr><literal type="number" pos:line="131" pos:column="29">8<pos:position pos:line="131" pos:column="30"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="32">"comm_select: "<pos:position pos:line="131" pos:column="47"/></literal> <operator pos:line="131" pos:column="48">&lt;&lt;<pos:position pos:line="131" pos:column="56"/></operator> <name pos:line="131" pos:column="51">num<pos:position pos:line="131" pos:column="54"/></name> <operator pos:line="131" pos:column="55">&lt;&lt;<pos:position pos:line="131" pos:column="63"/></operator> <literal type="string" pos:line="131" pos:column="58">"+"<pos:position pos:line="131" pos:column="61"/></literal> <operator pos:line="131" pos:column="62">&lt;&lt;<pos:position pos:line="131" pos:column="70"/></operator> <name pos:line="131" pos:column="65">pending<pos:position pos:line="131" pos:column="72"/></name> <operator pos:line="131" pos:column="73">&lt;&lt;<pos:position pos:line="131" pos:column="81"/></operator> <literal type="string" pos:line="131" pos:column="76">" FDs ready"<pos:position pos:line="131" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="90"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="133" pos:column="9">statHistCount<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><operator pos:line="133" pos:column="23">&amp;<pos:position pos:line="133" pos:column="28"/></operator><name><name pos:line="133" pos:column="24">statCounter<pos:position pos:line="133" pos:column="35"/></name><operator pos:line="133" pos:column="35">.<pos:position pos:line="133" pos:column="36"/></operator><name pos:line="133" pos:column="36">select_fds_hist<pos:position pos:line="133" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="53">num<pos:position pos:line="133" pos:column="56"/></name></expr></argument>)<pos:position pos:line="133" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="58"/></expr_stmt>

        <if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">num<pos:position pos:line="135" pos:column="16"/></name> <operator pos:line="135" pos:column="17">==<pos:position pos:line="135" pos:column="19"/></operator> <literal type="number" pos:line="135" pos:column="20">0<pos:position pos:line="135" pos:column="21"/></literal> <operator pos:line="135" pos:column="22">&amp;&amp;<pos:position pos:line="135" pos:column="32"/></operator> <name pos:line="135" pos:column="25">pending<pos:position pos:line="135" pos:column="32"/></name> <operator pos:line="135" pos:column="33">==<pos:position pos:line="135" pos:column="35"/></operator> <literal type="number" pos:line="135" pos:column="36">0<pos:position pos:line="135" pos:column="37"/></literal></expr>)<pos:position pos:line="135" pos:column="38"/></condition><then pos:line="135" pos:column="38">
            <block type="pseudo"><continue pos:line="136" pos:column="13">continue;<pos:position pos:line="136" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="138" pos:column="9">/* Scan return fd masks for ready descriptors */</comment>
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">assert<pos:position pos:line="139" pos:column="15"/></name><argument_list pos:line="139" pos:column="15">(<argument><expr><name><name pos:line="139" pos:column="16">readfds<pos:position pos:line="139" pos:column="23"/></name><operator pos:line="139" pos:column="23">.<pos:position pos:line="139" pos:column="24"/></operator><name pos:line="139" pos:column="24">fd_count<pos:position pos:line="139" pos:column="32"/></name></name> <operator pos:line="139" pos:column="33">&lt;=<pos:position pos:line="139" pos:column="38"/></operator> <operator pos:line="139" pos:column="36">(<pos:position pos:line="139" pos:column="37"/></operator><name pos:line="139" pos:column="37">unsigned<pos:position pos:line="139" pos:column="45"/></name> <name pos:line="139" pos:column="46">int<pos:position pos:line="139" pos:column="49"/></name><operator pos:line="139" pos:column="49">)<pos:position pos:line="139" pos:column="50"/></operator> <name pos:line="139" pos:column="51">Biggest_FD<pos:position pos:line="139" pos:column="61"/></name></expr></argument>)<pos:position pos:line="139" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">assert<pos:position pos:line="140" pos:column="15"/></name><argument_list pos:line="140" pos:column="15">(<argument><expr><name><name pos:line="140" pos:column="16">pendingfds<pos:position pos:line="140" pos:column="26"/></name><operator pos:line="140" pos:column="26">.<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="27">fd_count<pos:position pos:line="140" pos:column="35"/></name></name> <operator pos:line="140" pos:column="36">&lt;=<pos:position pos:line="140" pos:column="41"/></operator> <operator pos:line="140" pos:column="39">(<pos:position pos:line="140" pos:column="40"/></operator><name pos:line="140" pos:column="40">unsigned<pos:position pos:line="140" pos:column="48"/></name> <name pos:line="140" pos:column="49">int<pos:position pos:line="140" pos:column="52"/></name><operator pos:line="140" pos:column="52">)<pos:position pos:line="140" pos:column="53"/></operator> <name pos:line="140" pos:column="54">Biggest_FD<pos:position pos:line="140" pos:column="64"/></name></expr></argument>)<pos:position pos:line="140" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="66"/></expr_stmt>

        <for pos:line="142" pos:column="9">for <control pos:line="142" pos:column="13">(<init><expr><name pos:line="142" pos:column="14">j<pos:position pos:line="142" pos:column="15"/></name> <operator pos:line="142" pos:column="16">=<pos:position pos:line="142" pos:column="17"/></operator> <literal type="number" pos:line="142" pos:column="18">0<pos:position pos:line="142" pos:column="19"/></literal></expr>;<pos:position pos:line="142" pos:column="20"/></init> <condition><expr><name pos:line="142" pos:column="21">j<pos:position pos:line="142" pos:column="22"/></name> <operator pos:line="142" pos:column="23">&lt;<pos:position pos:line="142" pos:column="27"/></operator> <operator pos:line="142" pos:column="25">(<pos:position pos:line="142" pos:column="26"/></operator><name pos:line="142" pos:column="26">int<pos:position pos:line="142" pos:column="29"/></name><operator pos:line="142" pos:column="29">)<pos:position pos:line="142" pos:column="30"/></operator> <name><name pos:line="142" pos:column="31">readfds<pos:position pos:line="142" pos:column="38"/></name><operator pos:line="142" pos:column="38">.<pos:position pos:line="142" pos:column="39"/></operator><name pos:line="142" pos:column="39">fd_count<pos:position pos:line="142" pos:column="47"/></name></name></expr>;<pos:position pos:line="142" pos:column="48"/></condition> <incr><expr><name pos:line="142" pos:column="49">j<pos:position pos:line="142" pos:column="50"/></name><operator pos:line="142" pos:column="50">++<pos:position pos:line="142" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="142" pos:column="53"/></control> <block pos:line="142" pos:column="54">{
            <decl_stmt><decl><type><specifier pos:line="143" pos:column="13">register<pos:position pos:line="143" pos:column="21"/></specifier> <name pos:line="143" pos:column="22">int<pos:position pos:line="143" pos:column="25"/></name></type> <name pos:line="143" pos:column="26">readfds_handle<pos:position pos:line="143" pos:column="40"/></name> <init pos:line="143" pos:column="41">= <expr><name><name pos:line="143" pos:column="43">readfds<pos:position pos:line="143" pos:column="50"/></name><operator pos:line="143" pos:column="50">.<pos:position pos:line="143" pos:column="51"/></operator><name pos:line="143" pos:column="51">fd_array<pos:position pos:line="143" pos:column="59"/></name><index pos:line="143" pos:column="59">[<expr><name pos:line="143" pos:column="60">j<pos:position pos:line="143" pos:column="61"/></name></expr>]<pos:position pos:line="143" pos:column="62"/></index></name></expr></init></decl>;<pos:position pos:line="143" pos:column="63"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="144" pos:column="13">register<pos:position pos:line="144" pos:column="21"/></specifier> <name pos:line="144" pos:column="22">int<pos:position pos:line="144" pos:column="25"/></name></type> <name pos:line="144" pos:column="26">pendingfds_handle<pos:position pos:line="144" pos:column="43"/></name> <init pos:line="144" pos:column="44">= <expr><name><name pos:line="144" pos:column="46">pendingfds<pos:position pos:line="144" pos:column="56"/></name><operator pos:line="144" pos:column="56">.<pos:position pos:line="144" pos:column="57"/></operator><name pos:line="144" pos:column="57">fd_array<pos:position pos:line="144" pos:column="65"/></name><index pos:line="144" pos:column="65">[<expr><name pos:line="144" pos:column="66">j<pos:position pos:line="144" pos:column="67"/></name></expr>]<pos:position pos:line="144" pos:column="68"/></index></name></expr></init></decl>;<pos:position pos:line="144" pos:column="69"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="145" pos:column="13">register<pos:position pos:line="145" pos:column="21"/></specifier> <name pos:line="145" pos:column="22">int<pos:position pos:line="145" pos:column="25"/></name></type> <name pos:line="145" pos:column="26">osfhandle<pos:position pos:line="145" pos:column="35"/></name></decl>;<pos:position pos:line="145" pos:column="36"/></decl_stmt>
            <expr_stmt><expr><name pos:line="146" pos:column="13">no_bits<pos:position pos:line="146" pos:column="20"/></name> <operator pos:line="146" pos:column="21">=<pos:position pos:line="146" pos:column="22"/></operator> <literal type="number" pos:line="146" pos:column="23">1<pos:position pos:line="146" pos:column="24"/></literal></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt>

            <for pos:line="148" pos:column="13">for <control pos:line="148" pos:column="17">( <init><expr><name pos:line="148" pos:column="19">fd<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">=<pos:position pos:line="148" pos:column="23"/></operator> <name pos:line="148" pos:column="24">Biggest_FD<pos:position pos:line="148" pos:column="34"/></name></expr>;<pos:position pos:line="148" pos:column="35"/></init> <condition><expr><name pos:line="148" pos:column="36">fd<pos:position pos:line="148" pos:column="38"/></name></expr>;<pos:position pos:line="148" pos:column="39"/></condition> <incr><expr><name pos:line="148" pos:column="40">fd<pos:position pos:line="148" pos:column="42"/></name><operator pos:line="148" pos:column="42">--<pos:position pos:line="148" pos:column="44"/></operator></expr></incr> )<pos:position pos:line="148" pos:column="46"/></control> <block pos:line="148" pos:column="47">{
                <expr_stmt><expr><name pos:line="149" pos:column="17">osfhandle<pos:position pos:line="149" pos:column="26"/></name> <operator pos:line="149" pos:column="27">=<pos:position pos:line="149" pos:column="28"/></operator> <name><name pos:line="149" pos:column="29">fd_table<pos:position pos:line="149" pos:column="37"/></name><index pos:line="149" pos:column="37">[<expr><name pos:line="149" pos:column="38">fd<pos:position pos:line="149" pos:column="40"/></name></expr>]<pos:position pos:line="149" pos:column="41"/></index></name><operator pos:line="149" pos:column="41">.<pos:position pos:line="149" pos:column="42"/></operator><name><name pos:line="149" pos:column="42">win32<pos:position pos:line="149" pos:column="47"/></name><operator pos:line="149" pos:column="47">.<pos:position pos:line="149" pos:column="48"/></operator><name pos:line="149" pos:column="48">handle<pos:position pos:line="149" pos:column="54"/></name></name></expr>;<pos:position pos:line="149" pos:column="55"/></expr_stmt>

                <if pos:line="151" pos:column="17">if <condition pos:line="151" pos:column="20">(<expr><operator pos:line="151" pos:column="21">(<pos:position pos:line="151" pos:column="22"/></operator> <name pos:line="151" pos:column="23">osfhandle<pos:position pos:line="151" pos:column="32"/></name> <operator pos:line="151" pos:column="33">==<pos:position pos:line="151" pos:column="35"/></operator> <name pos:line="151" pos:column="36">readfds_handle<pos:position pos:line="151" pos:column="50"/></name> <operator pos:line="151" pos:column="51">)<pos:position pos:line="151" pos:column="52"/></operator> <operator pos:line="151" pos:column="53">||<pos:position pos:line="151" pos:column="55"/></operator>
                        <operator pos:line="152" pos:column="25">(<pos:position pos:line="152" pos:column="26"/></operator> <name pos:line="152" pos:column="27">osfhandle<pos:position pos:line="152" pos:column="36"/></name> <operator pos:line="152" pos:column="37">==<pos:position pos:line="152" pos:column="39"/></operator> <name pos:line="152" pos:column="40">pendingfds_handle<pos:position pos:line="152" pos:column="57"/></name> <operator pos:line="152" pos:column="58">)<pos:position pos:line="152" pos:column="59"/></operator></expr>)<pos:position pos:line="152" pos:column="60"/></condition><then pos:line="152" pos:column="60"> <block pos:line="152" pos:column="61">{
                    <if pos:line="153" pos:column="21">if <condition pos:line="153" pos:column="24">(<expr><name><name pos:line="153" pos:column="25">fd_table<pos:position pos:line="153" pos:column="33"/></name><index pos:line="153" pos:column="33">[<expr><name pos:line="153" pos:column="34">fd<pos:position pos:line="153" pos:column="36"/></name></expr>]<pos:position pos:line="153" pos:column="37"/></index></name><operator pos:line="153" pos:column="37">.<pos:position pos:line="153" pos:column="38"/></operator><name><name pos:line="153" pos:column="38">flags<pos:position pos:line="153" pos:column="43"/></name><operator pos:line="153" pos:column="43">.<pos:position pos:line="153" pos:column="44"/></operator><name pos:line="153" pos:column="44">open<pos:position pos:line="153" pos:column="48"/></name></name></expr>)<pos:position pos:line="153" pos:column="49"/></condition><then pos:line="153" pos:column="49"> <block pos:line="153" pos:column="50">{
                        <expr_stmt><expr><name pos:line="154" pos:column="25">no_bits<pos:position pos:line="154" pos:column="32"/></name> <operator pos:line="154" pos:column="33">=<pos:position pos:line="154" pos:column="34"/></operator> <literal type="number" pos:line="154" pos:column="35">0<pos:position pos:line="154" pos:column="36"/></literal></expr>;<pos:position pos:line="154" pos:column="37"/></expr_stmt>
                        <break pos:line="155" pos:column="25">break;<pos:position pos:line="155" pos:column="31"/></break>
                    }<pos:position pos:line="156" pos:column="22"/></block></then></if>
                }<pos:position pos:line="157" pos:column="18"/></block></then></if>
            }<pos:position pos:line="158" pos:column="14"/></block></for>

            <if pos:line="160" pos:column="13">if <condition pos:line="160" pos:column="16">(<expr><name pos:line="160" pos:column="17">no_bits<pos:position pos:line="160" pos:column="24"/></name></expr>)<pos:position pos:line="160" pos:column="25"/></condition><then pos:line="160" pos:column="25">
                <block type="pseudo"><continue pos:line="161" pos:column="17">continue;<pos:position pos:line="161" pos:column="26"/></continue></block></then></if>

<cpp:if pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">if<pos:position pos:line="163" pos:column="4"/></cpp:directive> <expr><name pos:line="163" pos:column="5">DEBUG_FDBITS<pos:position pos:line="163" pos:column="17"/></name></expr></cpp:if>

            <expr_stmt><expr><call><name pos:line="165" pos:column="13">debugs<pos:position pos:line="165" pos:column="19"/></name><argument_list pos:line="165" pos:column="19">(<argument><expr><literal type="number" pos:line="165" pos:column="20">5<pos:position pos:line="165" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="23">9<pos:position pos:line="165" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="26">"FD "<pos:position pos:line="165" pos:column="31"/></literal> <operator pos:line="165" pos:column="32">&lt;&lt;<pos:position pos:line="165" pos:column="40"/></operator> <name pos:line="165" pos:column="35">fd<pos:position pos:line="165" pos:column="37"/></name> <operator pos:line="165" pos:column="38">&lt;&lt;<pos:position pos:line="165" pos:column="46"/></operator> <literal type="string" pos:line="165" pos:column="41">" bit set for reading"<pos:position pos:line="165" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="167" pos:column="13">assert<pos:position pos:line="167" pos:column="19"/></name><argument_list pos:line="167" pos:column="19">(<argument><expr><call><name pos:line="167" pos:column="20">__WSAFDIsSet<pos:position pos:line="167" pos:column="32"/></name><argument_list pos:line="167" pos:column="32">(<argument><expr><name><name pos:line="167" pos:column="33">fd_table<pos:position pos:line="167" pos:column="41"/></name><index pos:line="167" pos:column="41">[<expr><name pos:line="167" pos:column="42">fd<pos:position pos:line="167" pos:column="44"/></name></expr>]<pos:position pos:line="167" pos:column="45"/></index></name><operator pos:line="167" pos:column="45">.<pos:position pos:line="167" pos:column="46"/></operator><name><name pos:line="167" pos:column="46">win32<pos:position pos:line="167" pos:column="51"/></name><operator pos:line="167" pos:column="51">.<pos:position pos:line="167" pos:column="52"/></operator><name pos:line="167" pos:column="52">handle<pos:position pos:line="167" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="60">readfds<pos:position pos:line="167" pos:column="67"/></name></expr></argument>)<pos:position pos:line="167" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="167" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="70"/></expr_stmt>

<cpp:endif pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">endif<pos:position pos:line="169" pos:column="7"/></cpp:directive></cpp:endif>

            <if pos:line="171" pos:column="13">if <condition pos:line="171" pos:column="16">(<expr><call><name pos:line="171" pos:column="17">fdIsIcp<pos:position pos:line="171" pos:column="24"/></name><argument_list pos:line="171" pos:column="24">(<argument><expr><name pos:line="171" pos:column="25">fd<pos:position pos:line="171" pos:column="27"/></name></expr></argument>)<pos:position pos:line="171" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="29"/></condition><then pos:line="171" pos:column="29"> <block pos:line="171" pos:column="30">{
                <expr_stmt><expr><name pos:line="172" pos:column="17">callicp<pos:position pos:line="172" pos:column="24"/></name> <operator pos:line="172" pos:column="25">=<pos:position pos:line="172" pos:column="26"/></operator> <literal type="number" pos:line="172" pos:column="27">1<pos:position pos:line="172" pos:column="28"/></literal></expr>;<pos:position pos:line="172" pos:column="29"/></expr_stmt>
                <continue pos:line="173" pos:column="17">continue;<pos:position pos:line="173" pos:column="26"/></continue>
            }<pos:position pos:line="174" pos:column="14"/></block></then></if>

            <if pos:line="176" pos:column="13">if <condition pos:line="176" pos:column="16">(<expr><call><name pos:line="176" pos:column="17">fdIsDns<pos:position pos:line="176" pos:column="24"/></name><argument_list pos:line="176" pos:column="24">(<argument><expr><name pos:line="176" pos:column="25">fd<pos:position pos:line="176" pos:column="27"/></name></expr></argument>)<pos:position pos:line="176" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="176" pos:column="29"/></condition><then pos:line="176" pos:column="29"> <block pos:line="176" pos:column="30">{
                <expr_stmt><expr><name pos:line="177" pos:column="17">calldns<pos:position pos:line="177" pos:column="24"/></name> <operator pos:line="177" pos:column="25">=<pos:position pos:line="177" pos:column="26"/></operator> <literal type="number" pos:line="177" pos:column="27">1<pos:position pos:line="177" pos:column="28"/></literal></expr>;<pos:position pos:line="177" pos:column="29"/></expr_stmt>
                <continue pos:line="178" pos:column="17">continue;<pos:position pos:line="178" pos:column="26"/></continue>
            }<pos:position pos:line="179" pos:column="14"/></block></then></if>

            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><call><name pos:line="181" pos:column="17">fdIsHttp<pos:position pos:line="181" pos:column="25"/></name><argument_list pos:line="181" pos:column="25">(<argument><expr><name pos:line="181" pos:column="26">fd<pos:position pos:line="181" pos:column="28"/></name></expr></argument>)<pos:position pos:line="181" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="30"/></condition><then pos:line="181" pos:column="30"> <block pos:line="181" pos:column="31">{
                <expr_stmt><expr><name pos:line="182" pos:column="17">callhttp<pos:position pos:line="182" pos:column="25"/></name> <operator pos:line="182" pos:column="26">=<pos:position pos:line="182" pos:column="27"/></operator> <literal type="number" pos:line="182" pos:column="28">1<pos:position pos:line="182" pos:column="29"/></literal></expr>;<pos:position pos:line="182" pos:column="30"/></expr_stmt>
                <continue pos:line="183" pos:column="17">continue;<pos:position pos:line="183" pos:column="26"/></continue>
            }<pos:position pos:line="184" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="186" pos:column="13">F<pos:position pos:line="186" pos:column="14"/></name> <operator pos:line="186" pos:column="15">=<pos:position pos:line="186" pos:column="16"/></operator> <operator pos:line="186" pos:column="17">&amp;<pos:position pos:line="186" pos:column="22"/></operator><name><name pos:line="186" pos:column="18">fd_table<pos:position pos:line="186" pos:column="26"/></name><index pos:line="186" pos:column="26">[<expr><name pos:line="186" pos:column="27">fd<pos:position pos:line="186" pos:column="29"/></name></expr>]<pos:position pos:line="186" pos:column="30"/></index></name></expr>;<pos:position pos:line="186" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="187" pos:column="13">debugs<pos:position pos:line="187" pos:column="19"/></name><argument_list pos:line="187" pos:column="19">(<argument><expr><literal type="number" pos:line="187" pos:column="20">5<pos:position pos:line="187" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="23">6<pos:position pos:line="187" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="26">"comm_select: FD "<pos:position pos:line="187" pos:column="44"/></literal> <operator pos:line="187" pos:column="45">&lt;&lt;<pos:position pos:line="187" pos:column="53"/></operator> <name pos:line="187" pos:column="48">fd<pos:position pos:line="187" pos:column="50"/></name> <operator pos:line="187" pos:column="51">&lt;&lt;<pos:position pos:line="187" pos:column="59"/></operator> <literal type="string" pos:line="187" pos:column="54">" ready for reading"<pos:position pos:line="187" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="76"/></expr_stmt>

            <if pos:line="189" pos:column="13">if <condition pos:line="189" pos:column="16">(<expr><name pos:line="189" pos:column="17">NULL<pos:position pos:line="189" pos:column="21"/></name> <operator pos:line="189" pos:column="22">==<pos:position pos:line="189" pos:column="24"/></operator> <operator pos:line="189" pos:column="25">(<pos:position pos:line="189" pos:column="26"/></operator><name pos:line="189" pos:column="26">hdl<pos:position pos:line="189" pos:column="29"/></name> <operator pos:line="189" pos:column="30">=<pos:position pos:line="189" pos:column="31"/></operator> <name><name pos:line="189" pos:column="32">F<pos:position pos:line="189" pos:column="33"/></name><operator pos:line="189" pos:column="33">-&gt;<pos:position pos:line="189" pos:column="38"/></operator><name pos:line="189" pos:column="35">read_handler<pos:position pos:line="189" pos:column="47"/></name></name><operator pos:line="189" pos:column="47">)<pos:position pos:line="189" pos:column="48"/></operator></expr>)<pos:position pos:line="189" pos:column="49"/></condition><then pos:line="189" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="190" pos:column="17">(<pos:position pos:line="190" pos:column="18"/></operator><name pos:line="190" pos:column="18">void<pos:position pos:line="190" pos:column="22"/></name><operator pos:line="190" pos:column="22">)<pos:position pos:line="190" pos:column="23"/></operator> <literal type="number" pos:line="190" pos:column="24">0<pos:position pos:line="190" pos:column="25"/></literal></expr>;<pos:position pos:line="190" pos:column="26"/></expr_stmt></block></then>
            <else pos:line="191" pos:column="13">else <block pos:line="191" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="192" pos:column="17">F<pos:position pos:line="192" pos:column="18"/></name><operator pos:line="192" pos:column="18">-&gt;<pos:position pos:line="192" pos:column="23"/></operator><name pos:line="192" pos:column="20">read_handler<pos:position pos:line="192" pos:column="32"/></name></name> <operator pos:line="192" pos:column="33">=<pos:position pos:line="192" pos:column="34"/></operator> <name pos:line="192" pos:column="35">NULL<pos:position pos:line="192" pos:column="39"/></name></expr>;<pos:position pos:line="192" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="193" pos:column="17">F<pos:position pos:line="193" pos:column="18"/></name><operator pos:line="193" pos:column="18">-&gt;<pos:position pos:line="193" pos:column="23"/></operator><name pos:line="193" pos:column="20">flags<pos:position pos:line="193" pos:column="25"/></name><operator pos:line="193" pos:column="25">.<pos:position pos:line="193" pos:column="26"/></operator><name pos:line="193" pos:column="26">read_pending<pos:position pos:line="193" pos:column="38"/></name></name> <operator pos:line="193" pos:column="39">=<pos:position pos:line="193" pos:column="40"/></operator> <literal type="number" pos:line="193" pos:column="41">0<pos:position pos:line="193" pos:column="42"/></literal></expr>;<pos:position pos:line="193" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="194" pos:column="17">commUpdateReadBits<pos:position pos:line="194" pos:column="35"/></name><argument_list pos:line="194" pos:column="35">(<argument><expr><name pos:line="194" pos:column="36">fd<pos:position pos:line="194" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="40">NULL<pos:position pos:line="194" pos:column="44"/></name></expr></argument>)<pos:position pos:line="194" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="195" pos:column="17">hdl<pos:position pos:line="195" pos:column="20"/></name><argument_list pos:line="195" pos:column="20">(<argument><expr><name pos:line="195" pos:column="21">fd<pos:position pos:line="195" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="195" pos:column="25">F<pos:position pos:line="195" pos:column="26"/></name><operator pos:line="195" pos:column="26">-&gt;<pos:position pos:line="195" pos:column="31"/></operator><name pos:line="195" pos:column="28">read_data<pos:position pos:line="195" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="196" pos:column="17">statCounter<pos:position pos:line="196" pos:column="28"/></name><operator pos:line="196" pos:column="28">.<pos:position pos:line="196" pos:column="29"/></operator><name pos:line="196" pos:column="29">select_fds<pos:position pos:line="196" pos:column="39"/></name></name><operator pos:line="196" pos:column="39">++<pos:position pos:line="196" pos:column="41"/></operator></expr>;<pos:position pos:line="196" pos:column="42"/></expr_stmt>

                <if pos:line="198" pos:column="17">if <condition pos:line="198" pos:column="20">(<expr><name pos:line="198" pos:column="21">commCheckICPIncoming<pos:position pos:line="198" pos:column="41"/></name></expr>)<pos:position pos:line="198" pos:column="42"/></condition><then pos:line="198" pos:column="42">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="199" pos:column="21">comm_select_icp_incoming<pos:position pos:line="199" pos:column="45"/></name><argument_list pos:line="199" pos:column="45">()<pos:position pos:line="199" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="48"/></expr_stmt></block></then></if>

                <if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><name pos:line="201" pos:column="21">commCheckDNSIncoming<pos:position pos:line="201" pos:column="41"/></name></expr>)<pos:position pos:line="201" pos:column="42"/></condition><then pos:line="201" pos:column="42">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="21">comm_select_dns_incoming<pos:position pos:line="202" pos:column="45"/></name><argument_list pos:line="202" pos:column="45">()<pos:position pos:line="202" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="48"/></expr_stmt></block></then></if>

                <if pos:line="204" pos:column="17">if <condition pos:line="204" pos:column="20">(<expr><name pos:line="204" pos:column="21">commCheckHTTPIncoming<pos:position pos:line="204" pos:column="42"/></name></expr>)<pos:position pos:line="204" pos:column="43"/></condition><then pos:line="204" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="205" pos:column="21">comm_select_http_incoming<pos:position pos:line="205" pos:column="46"/></name><argument_list pos:line="205" pos:column="46">()<pos:position pos:line="205" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="49"/></expr_stmt></block></then></if>
            }<pos:position pos:line="206" pos:column="14"/></block></else></if>
        }<pos:position pos:line="207" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="209" pos:column="9">assert<pos:position pos:line="209" pos:column="15"/></name><argument_list pos:line="209" pos:column="15">(<argument><expr><name><name pos:line="209" pos:column="16">errfds<pos:position pos:line="209" pos:column="22"/></name><operator pos:line="209" pos:column="22">.<pos:position pos:line="209" pos:column="23"/></operator><name pos:line="209" pos:column="23">fd_count<pos:position pos:line="209" pos:column="31"/></name></name> <operator pos:line="209" pos:column="32">&lt;=<pos:position pos:line="209" pos:column="37"/></operator> <operator pos:line="209" pos:column="35">(<pos:position pos:line="209" pos:column="36"/></operator><name pos:line="209" pos:column="36">unsigned<pos:position pos:line="209" pos:column="44"/></name> <name pos:line="209" pos:column="45">int<pos:position pos:line="209" pos:column="48"/></name><operator pos:line="209" pos:column="48">)<pos:position pos:line="209" pos:column="49"/></operator> <name pos:line="209" pos:column="50">Biggest_FD<pos:position pos:line="209" pos:column="60"/></name></expr></argument>)<pos:position pos:line="209" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="62"/></expr_stmt>

        <for pos:line="211" pos:column="9">for <control pos:line="211" pos:column="13">(<init><expr><name pos:line="211" pos:column="14">j<pos:position pos:line="211" pos:column="15"/></name> <operator pos:line="211" pos:column="16">=<pos:position pos:line="211" pos:column="17"/></operator> <literal type="number" pos:line="211" pos:column="18">0<pos:position pos:line="211" pos:column="19"/></literal></expr>;<pos:position pos:line="211" pos:column="20"/></init> <condition><expr><name pos:line="211" pos:column="21">j<pos:position pos:line="211" pos:column="22"/></name> <operator pos:line="211" pos:column="23">&lt;<pos:position pos:line="211" pos:column="27"/></operator> <operator pos:line="211" pos:column="25">(<pos:position pos:line="211" pos:column="26"/></operator><name pos:line="211" pos:column="26">int<pos:position pos:line="211" pos:column="29"/></name><operator pos:line="211" pos:column="29">)<pos:position pos:line="211" pos:column="30"/></operator> <name><name pos:line="211" pos:column="31">errfds<pos:position pos:line="211" pos:column="37"/></name><operator pos:line="211" pos:column="37">.<pos:position pos:line="211" pos:column="38"/></operator><name pos:line="211" pos:column="38">fd_count<pos:position pos:line="211" pos:column="46"/></name></name></expr>;<pos:position pos:line="211" pos:column="47"/></condition> <incr><expr><name pos:line="211" pos:column="48">j<pos:position pos:line="211" pos:column="49"/></name><operator pos:line="211" pos:column="49">++<pos:position pos:line="211" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="211" pos:column="52"/></control> <block pos:line="211" pos:column="53">{
            <decl_stmt><decl><type><specifier pos:line="212" pos:column="13">register<pos:position pos:line="212" pos:column="21"/></specifier> <name pos:line="212" pos:column="22">int<pos:position pos:line="212" pos:column="25"/></name></type> <name pos:line="212" pos:column="26">errfds_handle<pos:position pos:line="212" pos:column="39"/></name> <init pos:line="212" pos:column="40">= <expr><name><name pos:line="212" pos:column="42">errfds<pos:position pos:line="212" pos:column="48"/></name><operator pos:line="212" pos:column="48">.<pos:position pos:line="212" pos:column="49"/></operator><name pos:line="212" pos:column="49">fd_array<pos:position pos:line="212" pos:column="57"/></name><index pos:line="212" pos:column="57">[<expr><name pos:line="212" pos:column="58">j<pos:position pos:line="212" pos:column="59"/></name></expr>]<pos:position pos:line="212" pos:column="60"/></index></name></expr></init></decl>;<pos:position pos:line="212" pos:column="61"/></decl_stmt>

            <for pos:line="214" pos:column="13">for <control pos:line="214" pos:column="17">( <init><expr><name pos:line="214" pos:column="19">fd<pos:position pos:line="214" pos:column="21"/></name> <operator pos:line="214" pos:column="22">=<pos:position pos:line="214" pos:column="23"/></operator> <name pos:line="214" pos:column="24">Biggest_FD<pos:position pos:line="214" pos:column="34"/></name></expr>;<pos:position pos:line="214" pos:column="35"/></init> <condition><expr><name pos:line="214" pos:column="36">fd<pos:position pos:line="214" pos:column="38"/></name></expr>;<pos:position pos:line="214" pos:column="39"/></condition> <incr><expr><name pos:line="214" pos:column="40">fd<pos:position pos:line="214" pos:column="42"/></name><operator pos:line="214" pos:column="42">--<pos:position pos:line="214" pos:column="44"/></operator></expr></incr> )<pos:position pos:line="214" pos:column="46"/></control> <block pos:line="214" pos:column="47">{
                <if pos:line="215" pos:column="17">if <condition pos:line="215" pos:column="20">( <expr><name><name pos:line="215" pos:column="22">fd_table<pos:position pos:line="215" pos:column="30"/></name><index pos:line="215" pos:column="30">[<expr><name pos:line="215" pos:column="31">fd<pos:position pos:line="215" pos:column="33"/></name></expr>]<pos:position pos:line="215" pos:column="34"/></index></name><operator pos:line="215" pos:column="34">.<pos:position pos:line="215" pos:column="35"/></operator><name><name pos:line="215" pos:column="35">win32<pos:position pos:line="215" pos:column="40"/></name><operator pos:line="215" pos:column="40">.<pos:position pos:line="215" pos:column="41"/></operator><name pos:line="215" pos:column="41">handle<pos:position pos:line="215" pos:column="47"/></name></name> <operator pos:line="215" pos:column="48">==<pos:position pos:line="215" pos:column="50"/></operator> <name pos:line="215" pos:column="51">errfds_handle<pos:position pos:line="215" pos:column="64"/></name></expr> )<pos:position pos:line="215" pos:column="66"/></condition><then pos:line="215" pos:column="66">
                    <block type="pseudo"><break pos:line="216" pos:column="21">break;<pos:position pos:line="216" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="217" pos:column="14"/></block></for>

            <if pos:line="219" pos:column="13">if <condition pos:line="219" pos:column="16">(<expr><name><name pos:line="219" pos:column="17">fd_table<pos:position pos:line="219" pos:column="25"/></name><index pos:line="219" pos:column="25">[<expr><name pos:line="219" pos:column="26">fd<pos:position pos:line="219" pos:column="28"/></name></expr>]<pos:position pos:line="219" pos:column="29"/></index></name><operator pos:line="219" pos:column="29">.<pos:position pos:line="219" pos:column="30"/></operator><name><name pos:line="219" pos:column="30">flags<pos:position pos:line="219" pos:column="35"/></name><operator pos:line="219" pos:column="35">.<pos:position pos:line="219" pos:column="36"/></operator><name pos:line="219" pos:column="36">open<pos:position pos:line="219" pos:column="40"/></name></name></expr>)<pos:position pos:line="219" pos:column="41"/></condition><then pos:line="219" pos:column="41"> <block pos:line="219" pos:column="42">{
                <expr_stmt><expr><name pos:line="220" pos:column="17">F<pos:position pos:line="220" pos:column="18"/></name> <operator pos:line="220" pos:column="19">=<pos:position pos:line="220" pos:column="20"/></operator> <operator pos:line="220" pos:column="21">&amp;<pos:position pos:line="220" pos:column="26"/></operator><name><name pos:line="220" pos:column="22">fd_table<pos:position pos:line="220" pos:column="30"/></name><index pos:line="220" pos:column="30">[<expr><name pos:line="220" pos:column="31">fd<pos:position pos:line="220" pos:column="33"/></name></expr>]<pos:position pos:line="220" pos:column="34"/></index></name></expr>;<pos:position pos:line="220" pos:column="35"/></expr_stmt>

                <if pos:line="222" pos:column="17">if <condition pos:line="222" pos:column="20">(<expr><operator pos:line="222" pos:column="21">(<pos:position pos:line="222" pos:column="22"/></operator><name pos:line="222" pos:column="22">hdl<pos:position pos:line="222" pos:column="25"/></name> <operator pos:line="222" pos:column="26">=<pos:position pos:line="222" pos:column="27"/></operator> <name><name pos:line="222" pos:column="28">F<pos:position pos:line="222" pos:column="29"/></name><operator pos:line="222" pos:column="29">-&gt;<pos:position pos:line="222" pos:column="34"/></operator><name pos:line="222" pos:column="31">write_handler<pos:position pos:line="222" pos:column="44"/></name></name><operator pos:line="222" pos:column="44">)<pos:position pos:line="222" pos:column="45"/></operator></expr>)<pos:position pos:line="222" pos:column="46"/></condition><then pos:line="222" pos:column="46"> <block pos:line="222" pos:column="47">{
                    <expr_stmt><expr><name><name pos:line="223" pos:column="21">F<pos:position pos:line="223" pos:column="22"/></name><operator pos:line="223" pos:column="22">-&gt;<pos:position pos:line="223" pos:column="27"/></operator><name pos:line="223" pos:column="24">write_handler<pos:position pos:line="223" pos:column="37"/></name></name> <operator pos:line="223" pos:column="38">=<pos:position pos:line="223" pos:column="39"/></operator> <name pos:line="223" pos:column="40">NULL<pos:position pos:line="223" pos:column="44"/></name></expr>;<pos:position pos:line="223" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="224" pos:column="21">commUpdateWriteBits<pos:position pos:line="224" pos:column="40"/></name><argument_list pos:line="224" pos:column="40">(<argument><expr><name pos:line="224" pos:column="41">fd<pos:position pos:line="224" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="45">NULL<pos:position pos:line="224" pos:column="49"/></name></expr></argument>)<pos:position pos:line="224" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="51"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="225" pos:column="21">hdl<pos:position pos:line="225" pos:column="24"/></name><argument_list pos:line="225" pos:column="24">(<argument><expr><name pos:line="225" pos:column="25">fd<pos:position pos:line="225" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="225" pos:column="29">F<pos:position pos:line="225" pos:column="30"/></name><operator pos:line="225" pos:column="30">-&gt;<pos:position pos:line="225" pos:column="35"/></operator><name pos:line="225" pos:column="32">write_data<pos:position pos:line="225" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="225" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="226" pos:column="21">statCounter<pos:position pos:line="226" pos:column="32"/></name><operator pos:line="226" pos:column="32">.<pos:position pos:line="226" pos:column="33"/></operator><name pos:line="226" pos:column="33">select_fds<pos:position pos:line="226" pos:column="43"/></name></name><operator pos:line="226" pos:column="43">++<pos:position pos:line="226" pos:column="45"/></operator></expr>;<pos:position pos:line="226" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="227" pos:column="18"/></block></then></if>
            }<pos:position pos:line="228" pos:column="14"/></block></then></if>
        }<pos:position pos:line="229" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="231" pos:column="9">assert<pos:position pos:line="231" pos:column="15"/></name><argument_list pos:line="231" pos:column="15">(<argument><expr><name><name pos:line="231" pos:column="16">writefds<pos:position pos:line="231" pos:column="24"/></name><operator pos:line="231" pos:column="24">.<pos:position pos:line="231" pos:column="25"/></operator><name pos:line="231" pos:column="25">fd_count<pos:position pos:line="231" pos:column="33"/></name></name> <operator pos:line="231" pos:column="34">&lt;=<pos:position pos:line="231" pos:column="39"/></operator> <operator pos:line="231" pos:column="37">(<pos:position pos:line="231" pos:column="38"/></operator><name pos:line="231" pos:column="38">unsigned<pos:position pos:line="231" pos:column="46"/></name> <name pos:line="231" pos:column="47">int<pos:position pos:line="231" pos:column="50"/></name><operator pos:line="231" pos:column="50">)<pos:position pos:line="231" pos:column="51"/></operator> <name pos:line="231" pos:column="52">Biggest_FD<pos:position pos:line="231" pos:column="62"/></name></expr></argument>)<pos:position pos:line="231" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="64"/></expr_stmt>

        <for pos:line="233" pos:column="9">for <control pos:line="233" pos:column="13">(<init><expr><name pos:line="233" pos:column="14">j<pos:position pos:line="233" pos:column="15"/></name> <operator pos:line="233" pos:column="16">=<pos:position pos:line="233" pos:column="17"/></operator> <literal type="number" pos:line="233" pos:column="18">0<pos:position pos:line="233" pos:column="19"/></literal></expr>;<pos:position pos:line="233" pos:column="20"/></init> <condition><expr><name pos:line="233" pos:column="21">j<pos:position pos:line="233" pos:column="22"/></name> <operator pos:line="233" pos:column="23">&lt;<pos:position pos:line="233" pos:column="27"/></operator> <operator pos:line="233" pos:column="25">(<pos:position pos:line="233" pos:column="26"/></operator><name pos:line="233" pos:column="26">int<pos:position pos:line="233" pos:column="29"/></name><operator pos:line="233" pos:column="29">)<pos:position pos:line="233" pos:column="30"/></operator> <name><name pos:line="233" pos:column="31">writefds<pos:position pos:line="233" pos:column="39"/></name><operator pos:line="233" pos:column="39">.<pos:position pos:line="233" pos:column="40"/></operator><name pos:line="233" pos:column="40">fd_count<pos:position pos:line="233" pos:column="48"/></name></name></expr>;<pos:position pos:line="233" pos:column="49"/></condition> <incr><expr><name pos:line="233" pos:column="50">j<pos:position pos:line="233" pos:column="51"/></name><operator pos:line="233" pos:column="51">++<pos:position pos:line="233" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="233" pos:column="54"/></control> <block pos:line="233" pos:column="55">{
            <decl_stmt><decl><type><specifier pos:line="234" pos:column="13">register<pos:position pos:line="234" pos:column="21"/></specifier> <name pos:line="234" pos:column="22">int<pos:position pos:line="234" pos:column="25"/></name></type> <name pos:line="234" pos:column="26">writefds_handle<pos:position pos:line="234" pos:column="41"/></name> <init pos:line="234" pos:column="42">= <expr><name><name pos:line="234" pos:column="44">writefds<pos:position pos:line="234" pos:column="52"/></name><operator pos:line="234" pos:column="52">.<pos:position pos:line="234" pos:column="53"/></operator><name pos:line="234" pos:column="53">fd_array<pos:position pos:line="234" pos:column="61"/></name><index pos:line="234" pos:column="61">[<expr><name pos:line="234" pos:column="62">j<pos:position pos:line="234" pos:column="63"/></name></expr>]<pos:position pos:line="234" pos:column="64"/></index></name></expr></init></decl>;<pos:position pos:line="234" pos:column="65"/></decl_stmt>
            <expr_stmt><expr><name pos:line="235" pos:column="13">no_bits<pos:position pos:line="235" pos:column="20"/></name> <operator pos:line="235" pos:column="21">=<pos:position pos:line="235" pos:column="22"/></operator> <literal type="number" pos:line="235" pos:column="23">1<pos:position pos:line="235" pos:column="24"/></literal></expr>;<pos:position pos:line="235" pos:column="25"/></expr_stmt>

            <for pos:line="237" pos:column="13">for <control pos:line="237" pos:column="17">( <init><expr><name pos:line="237" pos:column="19">fd<pos:position pos:line="237" pos:column="21"/></name> <operator pos:line="237" pos:column="22">=<pos:position pos:line="237" pos:column="23"/></operator> <name pos:line="237" pos:column="24">Biggest_FD<pos:position pos:line="237" pos:column="34"/></name></expr>;<pos:position pos:line="237" pos:column="35"/></init> <condition><expr><name pos:line="237" pos:column="36">fd<pos:position pos:line="237" pos:column="38"/></name></expr>;<pos:position pos:line="237" pos:column="39"/></condition> <incr><expr><name pos:line="237" pos:column="40">fd<pos:position pos:line="237" pos:column="42"/></name><operator pos:line="237" pos:column="42">--<pos:position pos:line="237" pos:column="44"/></operator></expr></incr> )<pos:position pos:line="237" pos:column="46"/></control> <block pos:line="237" pos:column="47">{
                <if pos:line="238" pos:column="17">if <condition pos:line="238" pos:column="20">( <expr><name><name pos:line="238" pos:column="22">fd_table<pos:position pos:line="238" pos:column="30"/></name><index pos:line="238" pos:column="30">[<expr><name pos:line="238" pos:column="31">fd<pos:position pos:line="238" pos:column="33"/></name></expr>]<pos:position pos:line="238" pos:column="34"/></index></name><operator pos:line="238" pos:column="34">.<pos:position pos:line="238" pos:column="35"/></operator><name><name pos:line="238" pos:column="35">win32<pos:position pos:line="238" pos:column="40"/></name><operator pos:line="238" pos:column="40">.<pos:position pos:line="238" pos:column="41"/></operator><name pos:line="238" pos:column="41">handle<pos:position pos:line="238" pos:column="47"/></name></name> <operator pos:line="238" pos:column="48">==<pos:position pos:line="238" pos:column="50"/></operator> <name pos:line="238" pos:column="51">writefds_handle<pos:position pos:line="238" pos:column="66"/></name></expr> )<pos:position pos:line="238" pos:column="68"/></condition><then pos:line="238" pos:column="68"> <block pos:line="238" pos:column="69">{
                    <if pos:line="239" pos:column="21">if <condition pos:line="239" pos:column="24">(<expr><name><name pos:line="239" pos:column="25">fd_table<pos:position pos:line="239" pos:column="33"/></name><index pos:line="239" pos:column="33">[<expr><name pos:line="239" pos:column="34">fd<pos:position pos:line="239" pos:column="36"/></name></expr>]<pos:position pos:line="239" pos:column="37"/></index></name><operator pos:line="239" pos:column="37">.<pos:position pos:line="239" pos:column="38"/></operator><name><name pos:line="239" pos:column="38">flags<pos:position pos:line="239" pos:column="43"/></name><operator pos:line="239" pos:column="43">.<pos:position pos:line="239" pos:column="44"/></operator><name pos:line="239" pos:column="44">open<pos:position pos:line="239" pos:column="48"/></name></name></expr>)<pos:position pos:line="239" pos:column="49"/></condition><then pos:line="239" pos:column="49"> <block pos:line="239" pos:column="50">{
                        <expr_stmt><expr><name pos:line="240" pos:column="25">no_bits<pos:position pos:line="240" pos:column="32"/></name> <operator pos:line="240" pos:column="33">=<pos:position pos:line="240" pos:column="34"/></operator> <literal type="number" pos:line="240" pos:column="35">0<pos:position pos:line="240" pos:column="36"/></literal></expr>;<pos:position pos:line="240" pos:column="37"/></expr_stmt>
                        <break pos:line="241" pos:column="25">break;<pos:position pos:line="241" pos:column="31"/></break>
                    }<pos:position pos:line="242" pos:column="22"/></block></then></if>
                }<pos:position pos:line="243" pos:column="18"/></block></then></if>
            }<pos:position pos:line="244" pos:column="14"/></block></for>

            <if pos:line="246" pos:column="13">if <condition pos:line="246" pos:column="16">(<expr><name pos:line="246" pos:column="17">no_bits<pos:position pos:line="246" pos:column="24"/></name></expr>)<pos:position pos:line="246" pos:column="25"/></condition><then pos:line="246" pos:column="25">
                <block type="pseudo"><continue pos:line="247" pos:column="17">continue;<pos:position pos:line="247" pos:column="26"/></continue></block></then></if>

<cpp:if pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">if<pos:position pos:line="249" pos:column="4"/></cpp:directive> <expr><name pos:line="249" pos:column="5">DEBUG_FDBITS<pos:position pos:line="249" pos:column="17"/></name></expr></cpp:if>

            <expr_stmt><expr><call><name pos:line="251" pos:column="13">debugs<pos:position pos:line="251" pos:column="19"/></name><argument_list pos:line="251" pos:column="19">(<argument><expr><literal type="number" pos:line="251" pos:column="20">5<pos:position pos:line="251" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="251" pos:column="23">9<pos:position pos:line="251" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="26">"FD "<pos:position pos:line="251" pos:column="31"/></literal> <operator pos:line="251" pos:column="32">&lt;&lt;<pos:position pos:line="251" pos:column="40"/></operator> <name pos:line="251" pos:column="35">fd<pos:position pos:line="251" pos:column="37"/></name> <operator pos:line="251" pos:column="38">&lt;&lt;<pos:position pos:line="251" pos:column="46"/></operator> <literal type="string" pos:line="251" pos:column="41">" bit set for writing"<pos:position pos:line="251" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="65"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="253" pos:column="13">assert<pos:position pos:line="253" pos:column="19"/></name><argument_list pos:line="253" pos:column="19">(<argument><expr><call><name pos:line="253" pos:column="20">__WSAFDIsSet<pos:position pos:line="253" pos:column="32"/></name><argument_list pos:line="253" pos:column="32">(<argument><expr><name><name pos:line="253" pos:column="33">fd_table<pos:position pos:line="253" pos:column="41"/></name><index pos:line="253" pos:column="41">[<expr><name pos:line="253" pos:column="42">fd<pos:position pos:line="253" pos:column="44"/></name></expr>]<pos:position pos:line="253" pos:column="45"/></index></name><operator pos:line="253" pos:column="45">.<pos:position pos:line="253" pos:column="46"/></operator><name><name pos:line="253" pos:column="46">win32<pos:position pos:line="253" pos:column="51"/></name><operator pos:line="253" pos:column="51">.<pos:position pos:line="253" pos:column="52"/></operator><name pos:line="253" pos:column="52">handle<pos:position pos:line="253" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="60">writefds<pos:position pos:line="253" pos:column="68"/></name></expr></argument>)<pos:position pos:line="253" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="253" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="71"/></expr_stmt>

<cpp:endif pos:line="255" pos:column="1">#<cpp:directive pos:line="255" pos:column="2">endif<pos:position pos:line="255" pos:column="7"/></cpp:directive></cpp:endif>

            <if pos:line="257" pos:column="13">if <condition pos:line="257" pos:column="16">(<expr><call><name pos:line="257" pos:column="17">fdIsIcp<pos:position pos:line="257" pos:column="24"/></name><argument_list pos:line="257" pos:column="24">(<argument><expr><name pos:line="257" pos:column="25">fd<pos:position pos:line="257" pos:column="27"/></name></expr></argument>)<pos:position pos:line="257" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="257" pos:column="29"/></condition><then pos:line="257" pos:column="29"> <block pos:line="257" pos:column="30">{
                <expr_stmt><expr><name pos:line="258" pos:column="17">callicp<pos:position pos:line="258" pos:column="24"/></name> <operator pos:line="258" pos:column="25">=<pos:position pos:line="258" pos:column="26"/></operator> <literal type="number" pos:line="258" pos:column="27">1<pos:position pos:line="258" pos:column="28"/></literal></expr>;<pos:position pos:line="258" pos:column="29"/></expr_stmt>
                <continue pos:line="259" pos:column="17">continue;<pos:position pos:line="259" pos:column="26"/></continue>
            }<pos:position pos:line="260" pos:column="14"/></block></then></if>

            <if pos:line="262" pos:column="13">if <condition pos:line="262" pos:column="16">(<expr><call><name pos:line="262" pos:column="17">fdIsDns<pos:position pos:line="262" pos:column="24"/></name><argument_list pos:line="262" pos:column="24">(<argument><expr><name pos:line="262" pos:column="25">fd<pos:position pos:line="262" pos:column="27"/></name></expr></argument>)<pos:position pos:line="262" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="262" pos:column="29"/></condition><then pos:line="262" pos:column="29"> <block pos:line="262" pos:column="30">{
                <expr_stmt><expr><name pos:line="263" pos:column="17">calldns<pos:position pos:line="263" pos:column="24"/></name> <operator pos:line="263" pos:column="25">=<pos:position pos:line="263" pos:column="26"/></operator> <literal type="number" pos:line="263" pos:column="27">1<pos:position pos:line="263" pos:column="28"/></literal></expr>;<pos:position pos:line="263" pos:column="29"/></expr_stmt>
                <continue pos:line="264" pos:column="17">continue;<pos:position pos:line="264" pos:column="26"/></continue>
            }<pos:position pos:line="265" pos:column="14"/></block></then></if>

            <if pos:line="267" pos:column="13">if <condition pos:line="267" pos:column="16">(<expr><call><name pos:line="267" pos:column="17">fdIsHttp<pos:position pos:line="267" pos:column="25"/></name><argument_list pos:line="267" pos:column="25">(<argument><expr><name pos:line="267" pos:column="26">fd<pos:position pos:line="267" pos:column="28"/></name></expr></argument>)<pos:position pos:line="267" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="267" pos:column="30"/></condition><then pos:line="267" pos:column="30"> <block pos:line="267" pos:column="31">{
                <expr_stmt><expr><name pos:line="268" pos:column="17">callhttp<pos:position pos:line="268" pos:column="25"/></name> <operator pos:line="268" pos:column="26">=<pos:position pos:line="268" pos:column="27"/></operator> <literal type="number" pos:line="268" pos:column="28">1<pos:position pos:line="268" pos:column="29"/></literal></expr>;<pos:position pos:line="268" pos:column="30"/></expr_stmt>
                <continue pos:line="269" pos:column="17">continue;<pos:position pos:line="269" pos:column="26"/></continue>
            }<pos:position pos:line="270" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="272" pos:column="13">F<pos:position pos:line="272" pos:column="14"/></name> <operator pos:line="272" pos:column="15">=<pos:position pos:line="272" pos:column="16"/></operator> <operator pos:line="272" pos:column="17">&amp;<pos:position pos:line="272" pos:column="22"/></operator><name><name pos:line="272" pos:column="18">fd_table<pos:position pos:line="272" pos:column="26"/></name><index pos:line="272" pos:column="26">[<expr><name pos:line="272" pos:column="27">fd<pos:position pos:line="272" pos:column="29"/></name></expr>]<pos:position pos:line="272" pos:column="30"/></index></name></expr>;<pos:position pos:line="272" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="273" pos:column="13">debugs<pos:position pos:line="273" pos:column="19"/></name><argument_list pos:line="273" pos:column="19">(<argument><expr><literal type="number" pos:line="273" pos:column="20">5<pos:position pos:line="273" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="273" pos:column="23">5<pos:position pos:line="273" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="26">"comm_select: FD "<pos:position pos:line="273" pos:column="44"/></literal> <operator pos:line="273" pos:column="45">&lt;&lt;<pos:position pos:line="273" pos:column="53"/></operator> <name pos:line="273" pos:column="48">fd<pos:position pos:line="273" pos:column="50"/></name> <operator pos:line="273" pos:column="51">&lt;&lt;<pos:position pos:line="273" pos:column="59"/></operator> <literal type="string" pos:line="273" pos:column="54">" ready for writing"<pos:position pos:line="273" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="76"/></expr_stmt>

            <if pos:line="275" pos:column="13">if <condition pos:line="275" pos:column="16">(<expr><operator pos:line="275" pos:column="17">(<pos:position pos:line="275" pos:column="18"/></operator><name pos:line="275" pos:column="18">hdl<pos:position pos:line="275" pos:column="21"/></name> <operator pos:line="275" pos:column="22">=<pos:position pos:line="275" pos:column="23"/></operator> <name><name pos:line="275" pos:column="24">F<pos:position pos:line="275" pos:column="25"/></name><operator pos:line="275" pos:column="25">-&gt;<pos:position pos:line="275" pos:column="30"/></operator><name pos:line="275" pos:column="27">write_handler<pos:position pos:line="275" pos:column="40"/></name></name><operator pos:line="275" pos:column="40">)<pos:position pos:line="275" pos:column="41"/></operator></expr>)<pos:position pos:line="275" pos:column="42"/></condition><then pos:line="275" pos:column="42"> <block pos:line="275" pos:column="43">{
                <expr_stmt><expr><name><name pos:line="276" pos:column="17">F<pos:position pos:line="276" pos:column="18"/></name><operator pos:line="276" pos:column="18">-&gt;<pos:position pos:line="276" pos:column="23"/></operator><name pos:line="276" pos:column="20">write_handler<pos:position pos:line="276" pos:column="33"/></name></name> <operator pos:line="276" pos:column="34">=<pos:position pos:line="276" pos:column="35"/></operator> <name pos:line="276" pos:column="36">NULL<pos:position pos:line="276" pos:column="40"/></name></expr>;<pos:position pos:line="276" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="277" pos:column="17">commUpdateWriteBits<pos:position pos:line="277" pos:column="36"/></name><argument_list pos:line="277" pos:column="36">(<argument><expr><name pos:line="277" pos:column="37">fd<pos:position pos:line="277" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="41">NULL<pos:position pos:line="277" pos:column="45"/></name></expr></argument>)<pos:position pos:line="277" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="278" pos:column="17">hdl<pos:position pos:line="278" pos:column="20"/></name><argument_list pos:line="278" pos:column="20">(<argument><expr><name pos:line="278" pos:column="21">fd<pos:position pos:line="278" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="278" pos:column="25">F<pos:position pos:line="278" pos:column="26"/></name><operator pos:line="278" pos:column="26">-&gt;<pos:position pos:line="278" pos:column="31"/></operator><name pos:line="278" pos:column="28">write_data<pos:position pos:line="278" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="278" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="279" pos:column="17">statCounter<pos:position pos:line="279" pos:column="28"/></name><operator pos:line="279" pos:column="28">.<pos:position pos:line="279" pos:column="29"/></operator><name pos:line="279" pos:column="29">select_fds<pos:position pos:line="279" pos:column="39"/></name></name><operator pos:line="279" pos:column="39">++<pos:position pos:line="279" pos:column="41"/></operator></expr>;<pos:position pos:line="279" pos:column="42"/></expr_stmt>

                <if pos:line="281" pos:column="17">if <condition pos:line="281" pos:column="20">(<expr><name pos:line="281" pos:column="21">commCheckICPIncoming<pos:position pos:line="281" pos:column="41"/></name></expr>)<pos:position pos:line="281" pos:column="42"/></condition><then pos:line="281" pos:column="42">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="282" pos:column="21">comm_select_icp_incoming<pos:position pos:line="282" pos:column="45"/></name><argument_list pos:line="282" pos:column="45">()<pos:position pos:line="282" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="282" pos:column="48"/></expr_stmt></block></then></if>

                <if pos:line="284" pos:column="17">if <condition pos:line="284" pos:column="20">(<expr><name pos:line="284" pos:column="21">commCheckDNSIncoming<pos:position pos:line="284" pos:column="41"/></name></expr>)<pos:position pos:line="284" pos:column="42"/></condition><then pos:line="284" pos:column="42">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="285" pos:column="21">comm_select_dns_incoming<pos:position pos:line="285" pos:column="45"/></name><argument_list pos:line="285" pos:column="45">()<pos:position pos:line="285" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="48"/></expr_stmt></block></then></if>

                <if pos:line="287" pos:column="17">if <condition pos:line="287" pos:column="20">(<expr><name pos:line="287" pos:column="21">commCheckHTTPIncoming<pos:position pos:line="287" pos:column="42"/></name></expr>)<pos:position pos:line="287" pos:column="43"/></condition><then pos:line="287" pos:column="43">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="288" pos:column="21">comm_select_http_incoming<pos:position pos:line="288" pos:column="46"/></name><argument_list pos:line="288" pos:column="46">()<pos:position pos:line="288" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="49"/></expr_stmt></block></then></if>
            }<pos:position pos:line="289" pos:column="14"/></block></then></if>
        }<pos:position pos:line="290" pos:column="10"/></block></for>

        <if pos:line="292" pos:column="9">if <condition pos:line="292" pos:column="12">(<expr><name pos:line="292" pos:column="13">callicp<pos:position pos:line="292" pos:column="20"/></name></expr>)<pos:position pos:line="292" pos:column="21"/></condition><then pos:line="292" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="293" pos:column="13">comm_select_icp_incoming<pos:position pos:line="293" pos:column="37"/></name><argument_list pos:line="293" pos:column="37">()<pos:position pos:line="293" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="40"/></expr_stmt></block></then></if>

        <if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><name pos:line="295" pos:column="13">calldns<pos:position pos:line="295" pos:column="20"/></name></expr>)<pos:position pos:line="295" pos:column="21"/></condition><then pos:line="295" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="296" pos:column="13">comm_select_dns_incoming<pos:position pos:line="296" pos:column="37"/></name><argument_list pos:line="296" pos:column="37">()<pos:position pos:line="296" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="40"/></expr_stmt></block></then></if>

        <if pos:line="298" pos:column="9">if <condition pos:line="298" pos:column="12">(<expr><name pos:line="298" pos:column="13">callhttp<pos:position pos:line="298" pos:column="21"/></name></expr>)<pos:position pos:line="298" pos:column="22"/></condition><then pos:line="298" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="299" pos:column="13">comm_select_http_incoming<pos:position pos:line="299" pos:column="38"/></name><argument_list pos:line="299" pos:column="38">()<pos:position pos:line="299" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="41"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="301" pos:column="9">getCurrentTime<pos:position pos:line="301" pos:column="23"/></name><argument_list pos:line="301" pos:column="23">()<pos:position pos:line="301" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="303" pos:column="9">statCounter<pos:position pos:line="303" pos:column="20"/></name><operator pos:line="303" pos:column="20">.<pos:position pos:line="303" pos:column="21"/></operator><name pos:line="303" pos:column="21">select_time<pos:position pos:line="303" pos:column="32"/></name></name> <operator pos:line="303" pos:column="33">+=<pos:position pos:line="303" pos:column="35"/></operator> <operator pos:line="303" pos:column="36">(<pos:position pos:line="303" pos:column="37"/></operator><name pos:line="303" pos:column="37">current_dtime<pos:position pos:line="303" pos:column="50"/></name> <operator pos:line="303" pos:column="51">-<pos:position pos:line="303" pos:column="52"/></operator> <name pos:line="303" pos:column="53">start<pos:position pos:line="303" pos:column="58"/></name><operator pos:line="303" pos:column="58">)<pos:position pos:line="303" pos:column="59"/></operator></expr>;<pos:position pos:line="303" pos:column="60"/></expr_stmt>

        <return pos:line="305" pos:column="9">return <expr><name pos:line="305" pos:column="16">COMM_OK<pos:position pos:line="305" pos:column="23"/></name></expr>;<pos:position pos:line="305" pos:column="24"/></return>
    }<pos:position pos:line="306" pos:column="6"/></block> while <condition pos:line="306" pos:column="13">(<expr><name pos:line="306" pos:column="14">timeout<pos:position pos:line="306" pos:column="21"/></name> <operator pos:line="306" pos:column="22">&gt;<pos:position pos:line="306" pos:column="26"/></operator> <name pos:line="306" pos:column="24">current_dtime<pos:position pos:line="306" pos:column="37"/></name></expr>)<pos:position pos:line="306" pos:column="38"/></condition>;<pos:position pos:line="306" pos:column="39"/></do>
    <expr_stmt><expr><call><name pos:line="307" pos:column="5">debugs<pos:position pos:line="307" pos:column="11"/></name><argument_list pos:line="307" pos:column="11">(<argument><expr><literal type="number" pos:line="307" pos:column="12">5<pos:position pos:line="307" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="307" pos:column="15">8<pos:position pos:line="307" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="18">"comm_select: time out: "<pos:position pos:line="307" pos:column="43"/></literal> <operator pos:line="307" pos:column="44">&lt;&lt;<pos:position pos:line="307" pos:column="52"/></operator> <name pos:line="307" pos:column="47">squid_curtime<pos:position pos:line="307" pos:column="60"/></name></expr></argument>)<pos:position pos:line="307" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="62"/></expr_stmt>

    <return pos:line="309" pos:column="5">return <expr><name pos:line="309" pos:column="12">COMM_TIMEOUT<pos:position pos:line="309" pos:column="24"/></name></expr>;<pos:position pos:line="309" pos:column="25"/></return>
}<pos:position pos:line="310" pos:column="2"/></block></function></unit>

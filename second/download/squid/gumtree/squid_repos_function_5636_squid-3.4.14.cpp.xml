<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5636_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">squidaio_shutdown<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">squidaio_thread_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">threadp<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HANDLE<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type> <name pos:line="6" pos:column="14">hthreads<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">squidaio_initialised<pos:position pos:line="8" pos:column="30"/></name></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/* This is the same as in squidaio_sync */</comment>
    <do pos:line="12" pos:column="5">do <block pos:line="12" pos:column="8">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">squidaio_poll_queues<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">()<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block> while <condition pos:line="14" pos:column="13">(<expr><name pos:line="14" pos:column="14">request_queue_len<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">&gt;<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="34">0<pos:position pos:line="14" pos:column="35"/></literal></expr>)<pos:position pos:line="14" pos:column="36"/></condition>;<pos:position pos:line="14" pos:column="37"/></do>

    <expr_stmt><expr><name pos:line="16" pos:column="5">hthreads<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">HANDLE<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">)<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">xcalloc<pos:position pos:line="16" pos:column="34"/></name> <argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">NUMTHREADS<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="48">sizeof <argument_list pos:line="16" pos:column="55">(<argument><expr><name pos:line="16" pos:column="56">HANDLE<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">threadp<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">threads<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><expr><name pos:line="20" pos:column="10">i<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <literal type="number" pos:line="20" pos:column="14">0<pos:position pos:line="20" pos:column="15"/></literal></expr>;<pos:position pos:line="20" pos:column="16"/></init> <condition><expr><name pos:line="20" pos:column="17">i<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <name pos:line="20" pos:column="21">NUMTHREADS<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></condition> <incr><expr><operator pos:line="20" pos:column="33">++<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">i<pos:position pos:line="20" pos:column="36"/></name></expr></incr>)<pos:position pos:line="20" pos:column="37"/></control> <block pos:line="20" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">threadp<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">exit<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">hthreads<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><name pos:line="22" pos:column="18">i<pos:position pos:line="22" pos:column="19"/></name></expr>]<pos:position pos:line="22" pos:column="20"/></index></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <name><name pos:line="22" pos:column="23">threadp<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">thread<pos:position pos:line="22" pos:column="38"/></name></name></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">threadp<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name><name pos:line="23" pos:column="19">threadp<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">next<pos:position pos:line="23" pos:column="32"/></name></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ReleaseMutex<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name><name pos:line="26" pos:column="18">request_queue<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">mutex<pos:position pos:line="26" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ResetEvent<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name><name pos:line="27" pos:column="16">request_queue<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">cond<pos:position pos:line="27" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ReleaseMutex<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name><name pos:line="28" pos:column="18">done_queue<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">.<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">mutex<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ResetEvent<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name><name pos:line="29" pos:column="16">done_queue<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">.<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">cond<pos:position pos:line="29" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">Sleep<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="number" pos:line="30" pos:column="11">0<pos:position pos:line="30" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="14"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">WaitForMultipleObjects<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name pos:line="32" pos:column="28">NUMTHREADS<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">hthreads<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">TRUE<pos:position pos:line="32" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="56">2000<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="62"/></expr_stmt>

    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><expr><name pos:line="34" pos:column="10">i<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr>;<pos:position pos:line="34" pos:column="16"/></init> <condition><expr><name pos:line="34" pos:column="17">i<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&lt;<pos:position pos:line="34" pos:column="23"/></operator> <name pos:line="34" pos:column="21">NUMTHREADS<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></condition> <incr><expr><operator pos:line="34" pos:column="33">++<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">i<pos:position pos:line="34" pos:column="36"/></name></expr></incr>)<pos:position pos:line="34" pos:column="37"/></control> <block pos:line="34" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">CloseHandle<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">hthreads<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><name pos:line="35" pos:column="30">i<pos:position pos:line="35" pos:column="31"/></name></expr>]<pos:position pos:line="35" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">CloseHandle<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">main_thread<pos:position pos:line="38" pos:column="28"/></name></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">CommIO<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">::<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">NotifyIOClose<pos:position pos:line="39" pos:column="26"/></name></name><argument_list pos:line="39" pos:column="26">()<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">squidaio_initialised<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">=<pos:position pos:line="41" pos:column="27"/></operator> <literal type="number" pos:line="41" pos:column="28">0<pos:position pos:line="41" pos:column="29"/></literal></expr>;<pos:position pos:line="41" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">xfree<pos:position pos:line="42" pos:column="10"/></name><argument_list pos:line="42" pos:column="10">(<argument><expr><name pos:line="42" pos:column="11">hthreads<pos:position pos:line="42" pos:column="19"/></name></expr></argument>)<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

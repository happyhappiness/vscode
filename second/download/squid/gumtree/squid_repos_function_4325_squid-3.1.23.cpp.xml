<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4325_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">acl_httpstatus_data<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">toStr<pos:position pos:line="1" pos:column="32"/></name></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type> <name pos:line="1" pos:column="39">buf<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">len<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list> <specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">status2<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">==<pos:position pos:line="3" pos:column="19"/></operator> <name pos:line="3" pos:column="20">INT_MAX<pos:position pos:line="3" pos:column="27"/></name></expr>)<pos:position pos:line="3" pos:column="28"/></condition><then pos:line="3" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="9">snprintf<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">buf<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">len<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="28">"%d-"<pos:position pos:line="4" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="35">status1<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt></block></then>
    <elseif pos:line="5" pos:column="5">else <if pos:line="5" pos:column="10">if <condition pos:line="5" pos:column="13">(<expr><name pos:line="5" pos:column="14">status1<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">==<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">status2<pos:position pos:line="5" pos:column="32"/></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">snprintf<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">buf<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">len<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="28">"%d"<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="34">status1<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt></block></then></if></elseif>
    <else pos:line="7" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">snprintf<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">buf<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">len<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="28">"%d-%d"<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">status1<pos:position pos:line="8" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="46">status2<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

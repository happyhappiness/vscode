<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_429_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientRequestContext<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">clientRedirectDone<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name><name pos:line="2" pos:column="48">Helper<pos:position pos:line="2" pos:column="54"/></name><operator pos:line="2" pos:column="54">::<pos:position pos:line="2" pos:column="56"/></operator><name pos:line="2" pos:column="56">Reply<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">&amp;<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="63">reply<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpRequest<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">old_request<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">http<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">request<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">85<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">5<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <literal type="string" pos:line="5" pos:column="27">"'"<pos:position pos:line="5" pos:column="30"/></literal> <operator pos:line="5" pos:column="31">&lt;&lt;<pos:position pos:line="5" pos:column="39"/></operator> <name><name pos:line="5" pos:column="34">http<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">uri<pos:position pos:line="5" pos:column="43"/></name></name> <operator pos:line="5" pos:column="44">&lt;&lt;<pos:position pos:line="5" pos:column="52"/></operator> <literal type="string" pos:line="5" pos:column="47">"' result="<pos:position pos:line="5" pos:column="58"/></literal> <operator pos:line="5" pos:column="59">&lt;&lt;<pos:position pos:line="5" pos:column="67"/></operator> <name pos:line="5" pos:column="62">reply<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">redirect_state<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">==<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">REDIRECT_PENDING<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">redirect_state<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">REDIRECT_DONE<pos:position pos:line="7" pos:column="35"/></name></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// Put helper response Notes into the transaction state record (ALE) eventually</comment>
    <comment type="line" pos:line="10" pos:column="5">// do it early to ensure that no matter what the outcome the notes are present.</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">http<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">-&gt;<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="15">al<pos:position pos:line="11" pos:column="17"/></name></name> <operator pos:line="11" pos:column="18">!=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">NULL<pos:position pos:line="11" pos:column="25"/></name></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">void<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator><call><name pos:line="12" pos:column="15">SyncNotes<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></operator><name><name pos:line="12" pos:column="26">http<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">al<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">old_request<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">UpdateRequestNotes<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><call><name><name pos:line="14" pos:column="24">http<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">getConn<pos:position pos:line="14" pos:column="37"/></name></name><argument_list pos:line="14" pos:column="37">()<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="14" pos:column="41">*<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">old_request<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="55">reply<pos:position pos:line="14" pos:column="60"/></name><operator pos:line="14" pos:column="60">.<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">notes<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>

    <switch pos:line="16" pos:column="5">switch <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">reply<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">.<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">result<pos:position pos:line="16" pos:column="25"/></name></name></expr>)<pos:position pos:line="16" pos:column="26"/></condition> <block pos:line="16" pos:column="27">{
    <case pos:line="17" pos:column="5">case <expr><name><name pos:line="17" pos:column="10">Helper<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">::<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">TimedOut<pos:position pos:line="17" pos:column="26"/></name></name></expr>:<pos:position pos:line="17" pos:column="27"/></case>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">Config<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">onUrlRewriteTimeout<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">.<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">action<pos:position pos:line="18" pos:column="46"/></name></name> <operator pos:line="18" pos:column="47">!=<pos:position pos:line="18" pos:column="49"/></operator> <name pos:line="18" pos:column="50">toutActBypass<pos:position pos:line="18" pos:column="63"/></name></expr>)<pos:position pos:line="18" pos:column="64"/></condition><then pos:line="18" pos:column="64"> <block pos:line="18" pos:column="65">{
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">http<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">calloutsError<pos:position pos:line="19" pos:column="32"/></name></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">ERR_GATEWAY_FAILURE<pos:position pos:line="19" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">ERR_DETAIL_REDIRECTOR_TIMEDOUT<pos:position pos:line="19" pos:column="84"/></name></expr></argument>)<pos:position pos:line="19" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">85<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">DBG_IMPORTANT<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="39">"ERROR: URL rewrite helper: Timedout"<pos:position pos:line="20" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>

    <case pos:line="24" pos:column="5">case <expr><name><name pos:line="24" pos:column="10">Helper<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">::<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">Unknown<pos:position pos:line="24" pos:column="25"/></name></name></expr>:<pos:position pos:line="24" pos:column="26"/></case>
    <case pos:line="25" pos:column="5">case <expr><name><name pos:line="25" pos:column="10">Helper<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">::<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">TT<pos:position pos:line="25" pos:column="20"/></name></name></expr>:<pos:position pos:line="25" pos:column="21"/></case>
        <comment type="line" pos:line="26" pos:column="9">// Handler in redirect.cc should have already mapped Unknown</comment>
        <comment type="line" pos:line="27" pos:column="9">// IF it contained valid entry for the old URL-rewrite helper protocol</comment>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">85<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="20">DBG_IMPORTANT<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="35">"ERROR: URL rewrite helper returned invalid result code. Wrong helper? "<pos:position pos:line="28" pos:column="107"/></literal> <operator pos:line="28" pos:column="108">&lt;&lt;<pos:position pos:line="28" pos:column="116"/></operator> <name pos:line="28" pos:column="111">reply<pos:position pos:line="28" pos:column="116"/></name></expr></argument>)<pos:position pos:line="28" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="118"/></expr_stmt>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>

    <case pos:line="31" pos:column="5">case <expr><name><name pos:line="31" pos:column="10">Helper<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">::<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">BrokenHelper<pos:position pos:line="31" pos:column="30"/></name></name></expr>:<pos:position pos:line="31" pos:column="31"/></case>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">85<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="20">DBG_IMPORTANT<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="35">"ERROR: URL rewrite helper: "<pos:position pos:line="32" pos:column="64"/></literal> <operator pos:line="32" pos:column="65">&lt;&lt;<pos:position pos:line="32" pos:column="73"/></operator> <name pos:line="32" pos:column="68">reply<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt>
        <break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>

    <case pos:line="35" pos:column="5">case <expr><name><name pos:line="35" pos:column="10">Helper<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">::<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">Error<pos:position pos:line="35" pos:column="23"/></name></name></expr>:<pos:position pos:line="35" pos:column="24"/></case>
        <comment type="line" pos:line="36" pos:column="9">// no change to be done.</comment>
        <break pos:line="37" pos:column="9">break;<pos:position pos:line="37" pos:column="15"/></break>

    <case pos:line="39" pos:column="5">case <expr><name><name pos:line="39" pos:column="10">Helper<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">::<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">Okay<pos:position pos:line="39" pos:column="22"/></name></name></expr>:<pos:position pos:line="39" pos:column="23"/></case> <block pos:line="39" pos:column="24">{
        <comment type="line" pos:line="40" pos:column="9">// #1: redirect with a specific status code    OK status=NNN url="..."</comment>
        <comment type="line" pos:line="41" pos:column="9">// #2: redirect with a default status code     OK url="..."</comment>
        <comment type="line" pos:line="42" pos:column="9">// #3: re-write the URL                        OK rewrite-url="..."</comment>

        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">const<pos:position pos:line="44" pos:column="14"/></specifier> <name pos:line="44" pos:column="15">char<pos:position pos:line="44" pos:column="19"/></name> <modifier pos:line="44" pos:column="20">*<pos:position pos:line="44" pos:column="21"/></modifier></type><name pos:line="44" pos:column="21">statusNote<pos:position pos:line="44" pos:column="31"/></name> <init pos:line="44" pos:column="32">= <expr><call><name><name pos:line="44" pos:column="34">reply<pos:position pos:line="44" pos:column="39"/></name><operator pos:line="44" pos:column="39">.<pos:position pos:line="44" pos:column="40"/></operator><name pos:line="44" pos:column="40">notes<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">.<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">findFirst<pos:position pos:line="44" pos:column="55"/></name></name><argument_list pos:line="44" pos:column="55">(<argument><expr><literal type="string" pos:line="44" pos:column="56">"status"<pos:position pos:line="44" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="66"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">const<pos:position pos:line="45" pos:column="14"/></specifier> <name pos:line="45" pos:column="15">char<pos:position pos:line="45" pos:column="19"/></name> <modifier pos:line="45" pos:column="20">*<pos:position pos:line="45" pos:column="21"/></modifier></type><name pos:line="45" pos:column="21">urlNote<pos:position pos:line="45" pos:column="28"/></name> <init pos:line="45" pos:column="29">= <expr><call><name><name pos:line="45" pos:column="31">reply<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">.<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="37">notes<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">.<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">findFirst<pos:position pos:line="45" pos:column="52"/></name></name><argument_list pos:line="45" pos:column="52">(<argument><expr><literal type="string" pos:line="45" pos:column="53">"url"<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="60"/></decl_stmt>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">urlNote<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">!=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">NULL<pos:position pos:line="47" pos:column="28"/></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
            <comment type="line" pos:line="48" pos:column="13">// HTTP protocol redirect to be done.</comment>

            <comment type="line" pos:line="50" pos:column="13">// TODO: change default redirect status for appropriate requests</comment>
            <comment type="line" pos:line="51" pos:column="13">// Squid defaults to 302 status for now for better compatibility with old clients.</comment>
            <comment type="line" pos:line="52" pos:column="13">// HTTP/1.0 client should get 302 (Http::scFound)</comment>
            <comment type="line" pos:line="53" pos:column="13">// HTTP/1.1 client contacting reverse-proxy should get 307 (Http::scTemporaryRedirect)</comment>
            <comment type="line" pos:line="54" pos:column="13">// HTTP/1.1 client being diverted by forward-proxy should get 303 (Http::scSeeOther)</comment>
            <decl_stmt><decl><type><name><name pos:line="55" pos:column="13">Http<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">::<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">StatusCode<pos:position pos:line="55" pos:column="29"/></name></name></type> <name pos:line="55" pos:column="30">status<pos:position pos:line="55" pos:column="36"/></name> <init pos:line="55" pos:column="37">= <expr><name><name pos:line="55" pos:column="39">Http<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">::<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="45">scFound<pos:position pos:line="55" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="55" pos:column="53"/></decl_stmt>
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">statusNote<pos:position pos:line="56" pos:column="27"/></name> <operator pos:line="56" pos:column="28">!=<pos:position pos:line="56" pos:column="30"/></operator> <name pos:line="56" pos:column="31">NULL<pos:position pos:line="56" pos:column="35"/></name></expr>)<pos:position pos:line="56" pos:column="36"/></condition><then pos:line="56" pos:column="36"> <block pos:line="56" pos:column="37">{
                <decl_stmt><decl><type><specifier pos:line="57" pos:column="17">const<pos:position pos:line="57" pos:column="22"/></specifier> <name pos:line="57" pos:column="23">char<pos:position pos:line="57" pos:column="27"/></name> <modifier pos:line="57" pos:column="28">*<pos:position pos:line="57" pos:column="29"/></modifier></type> <name pos:line="57" pos:column="30">result<pos:position pos:line="57" pos:column="36"/></name> <init pos:line="57" pos:column="37">= <expr><name pos:line="57" pos:column="39">statusNote<pos:position pos:line="57" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="57" pos:column="50"/></decl_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">status<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <cast type="static" pos:line="58" pos:column="26">static_cast<argument_list type="generic" pos:line="58" pos:column="37">&lt;<argument><expr><name><name pos:line="58" pos:column="38">Http<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">::<pos:position pos:line="58" pos:column="44"/></operator><name pos:line="58" pos:column="44">StatusCode<pos:position pos:line="58" pos:column="54"/></name></name></expr></argument>&gt;<pos:position pos:line="58" pos:column="58"/></argument_list><argument_list pos:line="58" pos:column="55">(<argument><expr><call><name pos:line="58" pos:column="56">atoi<pos:position pos:line="58" pos:column="60"/></name><argument_list pos:line="58" pos:column="60">(<argument><expr><name pos:line="58" pos:column="61">result<pos:position pos:line="58" pos:column="67"/></name></expr></argument>)<pos:position pos:line="58" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></cast></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if>

            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><name pos:line="61" pos:column="17">status<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">==<pos:position pos:line="61" pos:column="26"/></operator> <name><name pos:line="61" pos:column="27">Http<pos:position pos:line="61" pos:column="31"/></name><operator pos:line="61" pos:column="31">::<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">scMovedPermanently<pos:position pos:line="61" pos:column="51"/></name></name>
                    <operator pos:line="62" pos:column="21">||<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">status<pos:position pos:line="62" pos:column="30"/></name> <operator pos:line="62" pos:column="31">==<pos:position pos:line="62" pos:column="33"/></operator> <name><name pos:line="62" pos:column="34">Http<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">::<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="40">scFound<pos:position pos:line="62" pos:column="47"/></name></name>
                    <operator pos:line="63" pos:column="21">||<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="24">status<pos:position pos:line="63" pos:column="30"/></name> <operator pos:line="63" pos:column="31">==<pos:position pos:line="63" pos:column="33"/></operator> <name><name pos:line="63" pos:column="34">Http<pos:position pos:line="63" pos:column="38"/></name><operator pos:line="63" pos:column="38">::<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="40">scSeeOther<pos:position pos:line="63" pos:column="50"/></name></name>
                    <operator pos:line="64" pos:column="21">||<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="24">status<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">==<pos:position pos:line="64" pos:column="33"/></operator> <name><name pos:line="64" pos:column="34">Http<pos:position pos:line="64" pos:column="38"/></name><operator pos:line="64" pos:column="38">::<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">scPermanentRedirect<pos:position pos:line="64" pos:column="59"/></name></name>
                    <operator pos:line="65" pos:column="21">||<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">status<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">==<pos:position pos:line="65" pos:column="33"/></operator> <name><name pos:line="65" pos:column="34">Http<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">::<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="40">scTemporaryRedirect<pos:position pos:line="65" pos:column="59"/></name></name></expr>)<pos:position pos:line="65" pos:column="60"/></condition><then pos:line="65" pos:column="60"> <block pos:line="65" pos:column="61">{
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">http<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">redirect<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">.<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">status<pos:position pos:line="66" pos:column="38"/></name></name> <operator pos:line="66" pos:column="39">=<pos:position pos:line="66" pos:column="40"/></operator> <name pos:line="66" pos:column="41">status<pos:position pos:line="66" pos:column="47"/></name></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="67" pos:column="17">http<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">redirect<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">.<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="32">location<pos:position pos:line="67" pos:column="40"/></name></name> <operator pos:line="67" pos:column="41">=<pos:position pos:line="67" pos:column="42"/></operator> <call><name pos:line="67" pos:column="43">xstrdup<pos:position pos:line="67" pos:column="50"/></name><argument_list pos:line="67" pos:column="50">(<argument><expr><name pos:line="67" pos:column="51">urlNote<pos:position pos:line="67" pos:column="58"/></name></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>
                <comment type="line" pos:line="68" pos:column="17">// TODO: validate the URL produced here is RFC 2616 compliant absolute URI</comment>
            }<pos:position pos:line="69" pos:column="14"/></block></then> <else pos:line="69" pos:column="15">else <block pos:line="69" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">debugs<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><literal type="number" pos:line="70" pos:column="24">85<pos:position pos:line="70" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="28">DBG_CRITICAL<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="42">"ERROR: URL-rewrite produces invalid "<pos:position pos:line="70" pos:column="80"/></literal> <operator pos:line="70" pos:column="81">&lt;&lt;<pos:position pos:line="70" pos:column="89"/></operator> <name pos:line="70" pos:column="84">status<pos:position pos:line="70" pos:column="90"/></name> <operator pos:line="70" pos:column="91">&lt;&lt;<pos:position pos:line="70" pos:column="99"/></operator> <literal type="string" pos:line="70" pos:column="94">" redirect Location: "<pos:position pos:line="70" pos:column="116"/></literal> <operator pos:line="70" pos:column="117">&lt;&lt;<pos:position pos:line="70" pos:column="125"/></operator> <name pos:line="70" pos:column="120">urlNote<pos:position pos:line="70" pos:column="127"/></name></expr></argument>)<pos:position pos:line="70" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="129"/></expr_stmt>
            }<pos:position pos:line="71" pos:column="14"/></block></else></if>
        }<pos:position pos:line="72" pos:column="10"/></block></then> <else pos:line="72" pos:column="11">else <block pos:line="72" pos:column="16">{
            <comment type="line" pos:line="73" pos:column="13">// URL-rewrite wanted. Ew.</comment>
            <expr_stmt><expr><name pos:line="74" pos:column="13">urlNote<pos:position pos:line="74" pos:column="20"/></name> <operator pos:line="74" pos:column="21">=<pos:position pos:line="74" pos:column="22"/></operator> <call><name><name pos:line="74" pos:column="23">reply<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">.<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="29">notes<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">.<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">findFirst<pos:position pos:line="74" pos:column="44"/></name></name><argument_list pos:line="74" pos:column="44">(<argument><expr><literal type="string" pos:line="74" pos:column="45">"rewrite-url"<pos:position pos:line="74" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="60"/></expr_stmt>

            <comment type="line" pos:line="76" pos:column="13">// prevent broken helpers causing too much damage. If old URL == new URL skip the re-write.</comment>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">urlNote<pos:position pos:line="77" pos:column="24"/></name> <operator pos:line="77" pos:column="25">!=<pos:position pos:line="77" pos:column="27"/></operator> <name pos:line="77" pos:column="28">NULL<pos:position pos:line="77" pos:column="32"/></name> <operator pos:line="77" pos:column="33">&amp;&amp;<pos:position pos:line="77" pos:column="43"/></operator> <call><name pos:line="77" pos:column="36">strcmp<pos:position pos:line="77" pos:column="42"/></name><argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">urlNote<pos:position pos:line="77" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="52">http<pos:position pos:line="77" pos:column="56"/></name><operator pos:line="77" pos:column="56">-&gt;<pos:position pos:line="77" pos:column="61"/></operator><name pos:line="77" pos:column="58">uri<pos:position pos:line="77" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="63"/></condition><then pos:line="77" pos:column="63"> <block pos:line="77" pos:column="64">{
                <decl_stmt><decl><type><name pos:line="78" pos:column="17">URL<pos:position pos:line="78" pos:column="20"/></name></type> <name pos:line="78" pos:column="21">tmpUrl<pos:position pos:line="78" pos:column="27"/></name></decl>;<pos:position pos:line="78" pos:column="28"/></decl_stmt>
                <if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><call><name><name pos:line="79" pos:column="21">tmpUrl<pos:position pos:line="79" pos:column="27"/></name><operator pos:line="79" pos:column="27">.<pos:position pos:line="79" pos:column="28"/></operator><name pos:line="79" pos:column="28">parse<pos:position pos:line="79" pos:column="33"/></name></name><argument_list pos:line="79" pos:column="33">(<argument><expr><name><name pos:line="79" pos:column="34">old_request<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">-&gt;<pos:position pos:line="79" pos:column="50"/></operator><name pos:line="79" pos:column="47">method<pos:position pos:line="79" pos:column="53"/></name></name></expr></argument>, <argument><expr><cast type="const" pos:line="79" pos:column="55">const_cast<argument_list type="generic" pos:line="79" pos:column="65">&lt;<argument><expr><name pos:line="79" pos:column="66">char<pos:position pos:line="79" pos:column="70"/></name><operator pos:line="79" pos:column="70">*<pos:position pos:line="79" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="79" pos:column="75"/></argument_list><argument_list pos:line="79" pos:column="72">(<argument><expr><name pos:line="79" pos:column="73">urlNote<pos:position pos:line="79" pos:column="80"/></name></expr></argument>)<pos:position pos:line="79" pos:column="81"/></argument_list></cast></expr></argument>)<pos:position pos:line="79" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="83"/></condition><then pos:line="79" pos:column="83"> <block pos:line="79" pos:column="84">{
                    <decl_stmt><decl><type><name pos:line="80" pos:column="21">HttpRequest<pos:position pos:line="80" pos:column="32"/></name> <modifier pos:line="80" pos:column="33">*<pos:position pos:line="80" pos:column="34"/></modifier></type><name pos:line="80" pos:column="34">new_request<pos:position pos:line="80" pos:column="45"/></name> <init pos:line="80" pos:column="46">= <expr><call><name><name pos:line="80" pos:column="48">old_request<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">-&gt;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="61">clone<pos:position pos:line="80" pos:column="66"/></name></name><argument_list pos:line="80" pos:column="66">()<pos:position pos:line="80" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="80" pos:column="69"/></decl_stmt>
                    <expr_stmt><expr><name><name pos:line="81" pos:column="21">new_request<pos:position pos:line="81" pos:column="32"/></name><operator pos:line="81" pos:column="32">-&gt;<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="34">url<pos:position pos:line="81" pos:column="37"/></name></name> <operator pos:line="81" pos:column="38">=<pos:position pos:line="81" pos:column="39"/></operator> <name pos:line="81" pos:column="40">tmpUrl<pos:position pos:line="81" pos:column="46"/></name></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="82" pos:column="21">debugs<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><literal type="number" pos:line="82" pos:column="28">61<pos:position pos:line="82" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="32">2<pos:position pos:line="82" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="35">"URL-rewriter diverts URL from "<pos:position pos:line="82" pos:column="67"/></literal> <operator pos:line="82" pos:column="68">&lt;&lt;<pos:position pos:line="82" pos:column="76"/></operator> <call><name><name pos:line="82" pos:column="71">old_request<pos:position pos:line="82" pos:column="82"/></name><operator pos:line="82" pos:column="82">-&gt;<pos:position pos:line="82" pos:column="87"/></operator><name pos:line="82" pos:column="84">effectiveRequestUri<pos:position pos:line="82" pos:column="103"/></name></name><argument_list pos:line="82" pos:column="103">()<pos:position pos:line="82" pos:column="105"/></argument_list></call> <operator pos:line="82" pos:column="106">&lt;&lt;<pos:position pos:line="82" pos:column="114"/></operator> <literal type="string" pos:line="82" pos:column="109">" to "<pos:position pos:line="82" pos:column="115"/></literal> <operator pos:line="82" pos:column="116">&lt;&lt;<pos:position pos:line="82" pos:column="124"/></operator> <call><name><name pos:line="82" pos:column="119">new_request<pos:position pos:line="82" pos:column="130"/></name><operator pos:line="82" pos:column="130">-&gt;<pos:position pos:line="82" pos:column="135"/></operator><name pos:line="82" pos:column="132">effectiveRequestUri<pos:position pos:line="82" pos:column="151"/></name></name><argument_list pos:line="82" pos:column="151">()<pos:position pos:line="82" pos:column="153"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="155"/></expr_stmt>

                    <comment type="line" pos:line="84" pos:column="21">// update the new request to flag the re-writing was done on it</comment>
                    <expr_stmt><expr><name><name pos:line="85" pos:column="21">new_request<pos:position pos:line="85" pos:column="32"/></name><operator pos:line="85" pos:column="32">-&gt;<pos:position pos:line="85" pos:column="37"/></operator><name pos:line="85" pos:column="34">flags<pos:position pos:line="85" pos:column="39"/></name><operator pos:line="85" pos:column="39">.<pos:position pos:line="85" pos:column="40"/></operator><name pos:line="85" pos:column="40">redirected<pos:position pos:line="85" pos:column="50"/></name></name> <operator pos:line="85" pos:column="51">=<pos:position pos:line="85" pos:column="52"/></operator> <literal type="boolean" pos:line="85" pos:column="53">true<pos:position pos:line="85" pos:column="57"/></literal></expr>;<pos:position pos:line="85" pos:column="58"/></expr_stmt>

                    <comment type="line" pos:line="87" pos:column="21">// unlink bodypipe from the old request. Not needed there any longer.</comment>
                    <if pos:line="88" pos:column="21">if <condition pos:line="88" pos:column="24">(<expr><name><name pos:line="88" pos:column="25">old_request<pos:position pos:line="88" pos:column="36"/></name><operator pos:line="88" pos:column="36">-&gt;<pos:position pos:line="88" pos:column="41"/></operator><name pos:line="88" pos:column="38">body_pipe<pos:position pos:line="88" pos:column="47"/></name></name> <operator pos:line="88" pos:column="48">!=<pos:position pos:line="88" pos:column="50"/></operator> <name pos:line="88" pos:column="51">NULL<pos:position pos:line="88" pos:column="55"/></name></expr>)<pos:position pos:line="88" pos:column="56"/></condition><then pos:line="88" pos:column="56"> <block pos:line="88" pos:column="57">{
                        <expr_stmt><expr><name><name pos:line="89" pos:column="25">old_request<pos:position pos:line="89" pos:column="36"/></name><operator pos:line="89" pos:column="36">-&gt;<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="38">body_pipe<pos:position pos:line="89" pos:column="47"/></name></name> <operator pos:line="89" pos:column="48">=<pos:position pos:line="89" pos:column="49"/></operator> <name pos:line="89" pos:column="50">NULL<pos:position pos:line="89" pos:column="54"/></name></expr>;<pos:position pos:line="89" pos:column="55"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="90" pos:column="25">debugs<pos:position pos:line="90" pos:column="31"/></name><argument_list pos:line="90" pos:column="31">(<argument><expr><literal type="number" pos:line="90" pos:column="32">61<pos:position pos:line="90" pos:column="34"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="90" pos:column="35">2<pos:position pos:line="90" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="38">HERE<pos:position pos:line="90" pos:column="42"/></name> <operator pos:line="90" pos:column="43">&lt;&lt;<pos:position pos:line="90" pos:column="51"/></operator> <literal type="string" pos:line="90" pos:column="46">"URL-rewriter diverts body_pipe "<pos:position pos:line="90" pos:column="79"/></literal> <operator pos:line="90" pos:column="80">&lt;&lt;<pos:position pos:line="90" pos:column="88"/></operator> <name><name pos:line="90" pos:column="83">new_request<pos:position pos:line="90" pos:column="94"/></name><operator pos:line="90" pos:column="94">-&gt;<pos:position pos:line="90" pos:column="99"/></operator><name pos:line="90" pos:column="96">body_pipe<pos:position pos:line="90" pos:column="105"/></name></name> <operator pos:line="90" pos:column="106">&lt;&lt;<pos:position pos:line="90" pos:column="114"/></operator>
                               <literal type="string" pos:line="91" pos:column="32">" from request "<pos:position pos:line="91" pos:column="48"/></literal> <operator pos:line="91" pos:column="49">&lt;&lt;<pos:position pos:line="91" pos:column="57"/></operator> <name pos:line="91" pos:column="52">old_request<pos:position pos:line="91" pos:column="63"/></name> <operator pos:line="91" pos:column="64">&lt;&lt;<pos:position pos:line="91" pos:column="72"/></operator> <literal type="string" pos:line="91" pos:column="67">" to "<pos:position pos:line="91" pos:column="73"/></literal> <operator pos:line="91" pos:column="74">&lt;&lt;<pos:position pos:line="91" pos:column="82"/></operator> <name pos:line="91" pos:column="77">new_request<pos:position pos:line="91" pos:column="88"/></name></expr></argument>)<pos:position pos:line="91" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="90"/></expr_stmt>
                    }<pos:position pos:line="92" pos:column="22"/></block></then></if>

                    <comment type="line" pos:line="94" pos:column="21">// update the current working ClientHttpRequest fields</comment>
                    <expr_stmt><expr><call><name pos:line="95" pos:column="21">xfree<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name><name pos:line="95" pos:column="27">http<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">-&gt;<pos:position pos:line="95" pos:column="36"/></operator><name pos:line="95" pos:column="33">uri<pos:position pos:line="95" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="96" pos:column="21">http<pos:position pos:line="96" pos:column="25"/></name><operator pos:line="96" pos:column="25">-&gt;<pos:position pos:line="96" pos:column="30"/></operator><name pos:line="96" pos:column="27">uri<pos:position pos:line="96" pos:column="30"/></name></name> <operator pos:line="96" pos:column="31">=<pos:position pos:line="96" pos:column="32"/></operator> <call><name pos:line="96" pos:column="33">SBufToCstring<pos:position pos:line="96" pos:column="46"/></name><argument_list pos:line="96" pos:column="46">(<argument><expr><call><name><name pos:line="96" pos:column="47">new_request<pos:position pos:line="96" pos:column="58"/></name><operator pos:line="96" pos:column="58">-&gt;<pos:position pos:line="96" pos:column="63"/></operator><name pos:line="96" pos:column="60">effectiveRequestUri<pos:position pos:line="96" pos:column="79"/></name></name><argument_list pos:line="96" pos:column="79">()<pos:position pos:line="96" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="83"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="97" pos:column="21">HTTPMSGUNLOCK<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name pos:line="97" pos:column="35">old_request<pos:position pos:line="97" pos:column="46"/></name></expr></argument>)<pos:position pos:line="97" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="48"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="98" pos:column="21">http<pos:position pos:line="98" pos:column="25"/></name><operator pos:line="98" pos:column="25">-&gt;<pos:position pos:line="98" pos:column="30"/></operator><name pos:line="98" pos:column="27">request<pos:position pos:line="98" pos:column="34"/></name></name> <operator pos:line="98" pos:column="35">=<pos:position pos:line="98" pos:column="36"/></operator> <name pos:line="98" pos:column="37">new_request<pos:position pos:line="98" pos:column="48"/></name></expr>;<pos:position pos:line="98" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="99" pos:column="21">HTTPMSGLOCK<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name><name pos:line="99" pos:column="33">http<pos:position pos:line="99" pos:column="37"/></name><operator pos:line="99" pos:column="37">-&gt;<pos:position pos:line="99" pos:column="42"/></operator><name pos:line="99" pos:column="39">request<pos:position pos:line="99" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="100" pos:column="18"/></block></then> <else pos:line="100" pos:column="19">else <block pos:line="100" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="101" pos:column="21">debugs<pos:position pos:line="101" pos:column="27"/></name><argument_list pos:line="101" pos:column="27">(<argument><expr><literal type="number" pos:line="101" pos:column="28">85<pos:position pos:line="101" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="32">DBG_CRITICAL<pos:position pos:line="101" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="46">"ERROR: URL-rewrite produces invalid request: "<pos:position pos:line="101" pos:column="93"/></literal> <operator pos:line="101" pos:column="94">&lt;&lt;<pos:position pos:line="101" pos:column="102"/></operator>
                           <name><name pos:line="102" pos:column="28">old_request<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">-&gt;<pos:position pos:line="102" pos:column="44"/></operator><name pos:line="102" pos:column="41">method<pos:position pos:line="102" pos:column="47"/></name></name> <operator pos:line="102" pos:column="48">&lt;&lt;<pos:position pos:line="102" pos:column="56"/></operator> <literal type="string" pos:line="102" pos:column="51">" "<pos:position pos:line="102" pos:column="54"/></literal> <operator pos:line="102" pos:column="55">&lt;&lt;<pos:position pos:line="102" pos:column="63"/></operator> <name pos:line="102" pos:column="58">urlNote<pos:position pos:line="102" pos:column="65"/></name> <operator pos:line="102" pos:column="66">&lt;&lt;<pos:position pos:line="102" pos:column="74"/></operator> <literal type="string" pos:line="102" pos:column="69">" "<pos:position pos:line="102" pos:column="72"/></literal> <operator pos:line="102" pos:column="73">&lt;&lt;<pos:position pos:line="102" pos:column="81"/></operator> <name><name pos:line="102" pos:column="76">old_request<pos:position pos:line="102" pos:column="87"/></name><operator pos:line="102" pos:column="87">-&gt;<pos:position pos:line="102" pos:column="92"/></operator><name pos:line="102" pos:column="89">http_ver<pos:position pos:line="102" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="99"/></expr_stmt>
                }<pos:position pos:line="103" pos:column="18"/></block></else></if>
            }<pos:position pos:line="104" pos:column="14"/></block></then></if>
        }<pos:position pos:line="105" pos:column="10"/></block></else></if>
    }<pos:position pos:line="106" pos:column="6"/></block>
    <break pos:line="107" pos:column="5">break;<pos:position pos:line="107" pos:column="11"/></break>
    }<pos:position pos:line="108" pos:column="6"/></block></switch>

    <comment type="block" pos:line="110" pos:column="5">/* FIXME PIPELINE: This is innacurate during pipelining */</comment>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><call><name><name pos:line="112" pos:column="9">http<pos:position pos:line="112" pos:column="13"/></name><operator pos:line="112" pos:column="13">-&gt;<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="15">getConn<pos:position pos:line="112" pos:column="22"/></name></name><argument_list pos:line="112" pos:column="22">()<pos:position pos:line="112" pos:column="24"/></argument_list></call> <operator pos:line="112" pos:column="25">!=<pos:position pos:line="112" pos:column="27"/></operator> <name pos:line="112" pos:column="28">NULL<pos:position pos:line="112" pos:column="32"/></name> <operator pos:line="112" pos:column="33">&amp;&amp;<pos:position pos:line="112" pos:column="43"/></operator> <call><name><name pos:line="112" pos:column="36">Comm<pos:position pos:line="112" pos:column="40"/></name><operator pos:line="112" pos:column="40">::<pos:position pos:line="112" pos:column="42"/></operator><name pos:line="112" pos:column="42">IsConnOpen<pos:position pos:line="112" pos:column="52"/></name></name><argument_list pos:line="112" pos:column="52">(<argument><expr><call><name><name pos:line="112" pos:column="53">http<pos:position pos:line="112" pos:column="57"/></name><operator pos:line="112" pos:column="57">-&gt;<pos:position pos:line="112" pos:column="62"/></operator><name pos:line="112" pos:column="59">getConn<pos:position pos:line="112" pos:column="66"/></name></name><argument_list pos:line="112" pos:column="66">()<pos:position pos:line="112" pos:column="68"/></argument_list></call><operator pos:line="112" pos:column="68">-&gt;<pos:position pos:line="112" pos:column="73"/></operator><name pos:line="112" pos:column="70">clientConnection<pos:position pos:line="112" pos:column="86"/></name></expr></argument>)<pos:position pos:line="112" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="112" pos:column="88"/></condition><then pos:line="112" pos:column="88">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="9">fd_note<pos:position pos:line="113" pos:column="16"/></name><argument_list pos:line="113" pos:column="16">(<argument><expr><call><name><name pos:line="113" pos:column="17">http<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">-&gt;<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="23">getConn<pos:position pos:line="113" pos:column="30"/></name></name><argument_list pos:line="113" pos:column="30">()<pos:position pos:line="113" pos:column="32"/></argument_list></call><operator pos:line="113" pos:column="32">-&gt;<pos:position pos:line="113" pos:column="37"/></operator><name><name pos:line="113" pos:column="34">clientConnection<pos:position pos:line="113" pos:column="50"/></name><operator pos:line="113" pos:column="50">-&gt;<pos:position pos:line="113" pos:column="55"/></operator><name pos:line="113" pos:column="52">fd<pos:position pos:line="113" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="56">http<pos:position pos:line="113" pos:column="60"/></name><operator pos:line="113" pos:column="60">-&gt;<pos:position pos:line="113" pos:column="65"/></operator><name pos:line="113" pos:column="62">uri<pos:position pos:line="113" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="67"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="115" pos:column="5">assert<pos:position pos:line="115" pos:column="11"/></name><argument_list pos:line="115" pos:column="11">(<argument><expr><name><name pos:line="115" pos:column="12">http<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">-&gt;<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="18">uri<pos:position pos:line="115" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="117" pos:column="5">http<pos:position pos:line="117" pos:column="9"/></name><operator pos:line="117" pos:column="9">-&gt;<pos:position pos:line="117" pos:column="14"/></operator><name pos:line="117" pos:column="11">doCallouts<pos:position pos:line="117" pos:column="21"/></name></name><argument_list pos:line="117" pos:column="21">()<pos:position pos:line="117" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="24"/></expr_stmt>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

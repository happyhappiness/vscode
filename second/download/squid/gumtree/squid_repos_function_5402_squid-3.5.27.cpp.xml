<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5402_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Relay<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">forwardPreliminaryReply<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">PreliminaryCb<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">cb<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"forwarding preliminary reply to client"<pos:position pos:line="4" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="60"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// we must prevent concurrent ConnStateData::sendControlMsg() calls</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">thePreliminaryCb<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">==<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">thePreliminaryCb<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="24">cb<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name><name pos:line="10" pos:column="11">HttpReply<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">::<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">Pointer<pos:position pos:line="10" pos:column="29"/></name></name></type> <name pos:line="10" pos:column="30">reply<pos:position pos:line="10" pos:column="35"/></name> <init pos:line="10" pos:column="36">= <expr><call><name pos:line="10" pos:column="38">createHttpReply<pos:position pos:line="10" pos:column="53"/></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name><name pos:line="10" pos:column="54">Http<pos:position pos:line="10" pos:column="58"/></name><operator pos:line="10" pos:column="58">::<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="60">scContinue<pos:position pos:line="10" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="72"/></decl_stmt>

    <comment type="line" pos:line="12" pos:column="5">// the Sink will use this to call us back after writing 1xx to the client</comment>
    <typedef pos:line="13" pos:column="5">typedef <type><name><name pos:line="13" pos:column="13">NullaryMemFunT<pos:position pos:line="13" pos:column="27"/></name><argument_list type="generic" pos:line="13" pos:column="27">&lt;<argument><expr><name pos:line="13" pos:column="28">Relay<pos:position pos:line="13" pos:column="33"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="37"/></argument_list></name></type> <name pos:line="13" pos:column="35">CbDialer<pos:position pos:line="13" pos:column="43"/></name>;<pos:position pos:line="13" pos:column="44"/></typedef>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name><name pos:line="14" pos:column="11">AsyncCall<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">Pointer<pos:position pos:line="14" pos:column="29"/></name></name></type> <name pos:line="14" pos:column="30">call<pos:position pos:line="14" pos:column="34"/></name> <init pos:line="14" pos:column="35">= <expr><call><name pos:line="14" pos:column="37">JobCallback<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><literal type="number" pos:line="14" pos:column="49">11<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="53">3<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">CbDialer<pos:position pos:line="14" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">this<pos:position pos:line="14" pos:column="70"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="15" pos:column="37">Ftp<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">::<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">Relay<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">::<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">proceedAfterPreliminaryReply<pos:position pos:line="15" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="79"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">CallJobHere1<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><literal type="number" pos:line="17" pos:column="18">9<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="21">4<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="24">request<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">clientConnectionManager<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">ConnStateData<pos:position pos:line="17" pos:column="71"/></name></expr></argument>,
                 <argument><expr><name><name pos:line="18" pos:column="18">ConnStateData<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">::<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">sendControlMsg<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="49">HttpControlMsg<pos:position pos:line="18" pos:column="63"/></name><argument_list pos:line="18" pos:column="63">(<argument><expr><name pos:line="18" pos:column="64">reply<pos:position pos:line="18" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="71">call<pos:position pos:line="18" pos:column="75"/></name></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

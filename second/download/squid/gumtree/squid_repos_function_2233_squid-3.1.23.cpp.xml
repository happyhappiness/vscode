<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2233_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsGrokReply<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">buf<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">sz<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">rfc1035_message<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">message<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">idns_query<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">q<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">n<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">rfc1035MessageUnpack<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">sz<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="39">&amp;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="40">message<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">message<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">78<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">1<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"idnsGrokReply: Malformed DNS response"<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">78<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">3<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"idnsGrokReply: ID 0x"<pos:position pos:line="15" pos:column="41"/></literal> <operator pos:line="15" pos:column="42">&lt;&lt;<pos:position pos:line="15" pos:column="50"/></operator> <name><name pos:line="15" pos:column="45">std<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">::<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">hex<pos:position pos:line="15" pos:column="53"/></name></name> <operator pos:line="15" pos:column="54">&lt;&lt;<pos:position pos:line="15" pos:column="62"/></operator> <name><name pos:line="15" pos:column="57">message<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-&gt;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="66">id<pos:position pos:line="15" pos:column="68"/></name></name> <operator pos:line="15" pos:column="69">&lt;&lt;<pos:position pos:line="15" pos:column="77"/></operator> <literal type="string" pos:line="15" pos:column="72">", "<pos:position pos:line="15" pos:column="76"/></literal> <operator pos:line="15" pos:column="77">&lt;&lt;<pos:position pos:line="15" pos:column="85"/></operator> <name><name pos:line="15" pos:column="80">std<pos:position pos:line="15" pos:column="83"/></name><operator pos:line="15" pos:column="83">::<pos:position pos:line="15" pos:column="85"/></operator><name pos:line="15" pos:column="85">dec<pos:position pos:line="15" pos:column="88"/></name></name> <operator pos:line="15" pos:column="89">&lt;&lt;<pos:position pos:line="15" pos:column="97"/></operator> <name pos:line="15" pos:column="92">n<pos:position pos:line="15" pos:column="93"/></name> <operator pos:line="15" pos:column="94">&lt;&lt;<pos:position pos:line="15" pos:column="102"/></operator> <literal type="string" pos:line="15" pos:column="97">" answers"<pos:position pos:line="15" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="109"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">q<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">idnsFindQuery<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">message<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">id<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">q<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">NULL<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">78<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">3<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"idnsGrokReply: Late response"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">message<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">rfc1035QueryCompare<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name><name pos:line="25" pos:column="30">q<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">query<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">message<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">query<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call> <operator pos:line="25" pos:column="56">!=<pos:position pos:line="25" pos:column="58"/></operator> <literal type="number" pos:line="25" pos:column="59">0<pos:position pos:line="25" pos:column="60"/></literal></expr>)<pos:position pos:line="25" pos:column="61"/></condition><then pos:line="25" pos:column="61"> <block pos:line="25" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">78<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="20">3<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"idnsGrokReply: Query mismatch ("<pos:position pos:line="26" pos:column="56"/></literal> <operator pos:line="26" pos:column="57">&lt;&lt;<pos:position pos:line="26" pos:column="65"/></operator> <name><name pos:line="26" pos:column="60">q<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">-&gt;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="63">query<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">.<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="69">name<pos:position pos:line="26" pos:column="73"/></name></name> <operator pos:line="26" pos:column="74">&lt;&lt;<pos:position pos:line="26" pos:column="82"/></operator> <literal type="string" pos:line="26" pos:column="77">" != "<pos:position pos:line="26" pos:column="83"/></literal> <operator pos:line="26" pos:column="84">&lt;&lt;<pos:position pos:line="26" pos:column="92"/></operator> <name><name pos:line="26" pos:column="87">message<pos:position pos:line="26" pos:column="94"/></name><operator pos:line="26" pos:column="94">-&gt;<pos:position pos:line="26" pos:column="99"/></operator><name pos:line="26" pos:column="96">query<pos:position pos:line="26" pos:column="101"/></name><operator pos:line="26" pos:column="101">-&gt;<pos:position pos:line="26" pos:column="106"/></operator><name pos:line="26" pos:column="103">name<pos:position pos:line="26" pos:column="107"/></name></name> <operator pos:line="26" pos:column="108">&lt;&lt;<pos:position pos:line="26" pos:column="116"/></operator> <literal type="string" pos:line="26" pos:column="111">")"<pos:position pos:line="26" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="116"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">message<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">message<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">tc<pos:position pos:line="31" pos:column="20"/></name></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">78<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="20">3<pos:position pos:line="32" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="23">HERE<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">&lt;&lt;<pos:position pos:line="32" pos:column="36"/></operator> <literal type="string" pos:line="32" pos:column="31">"Resolver requested TC ("<pos:position pos:line="32" pos:column="56"/></literal> <operator pos:line="32" pos:column="57">&lt;&lt;<pos:position pos:line="32" pos:column="65"/></operator> <name><name pos:line="32" pos:column="60">q<pos:position pos:line="32" pos:column="61"/></name><operator pos:line="32" pos:column="61">-&gt;<pos:position pos:line="32" pos:column="66"/></operator><name pos:line="32" pos:column="63">query<pos:position pos:line="32" pos:column="68"/></name><operator pos:line="32" pos:column="68">.<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="69">name<pos:position pos:line="32" pos:column="73"/></name></name> <operator pos:line="32" pos:column="74">&lt;&lt;<pos:position pos:line="32" pos:column="82"/></operator> <literal type="string" pos:line="32" pos:column="77">")"<pos:position pos:line="32" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">dlinkDelete<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><operator pos:line="33" pos:column="21">&amp;<pos:position pos:line="33" pos:column="26"/></operator><name><name pos:line="33" pos:column="22">q<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">lru<pos:position pos:line="33" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="30">&amp;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="31">lru_list<pos:position pos:line="33" pos:column="39"/></name></expr></argument>)<pos:position pos:line="33" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><operator pos:line="34" pos:column="31">&amp;<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="32">message<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">q<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">need_vc<pos:position pos:line="36" pos:column="24"/></name></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25"> <block pos:line="36" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">q<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">need_vc<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">q<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">nsends<pos:position pos:line="38" pos:column="22"/></name></name><operator pos:line="38" pos:column="22">--<pos:position pos:line="38" pos:column="24"/></operator></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">idnsSendQuery<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">q<pos:position pos:line="39" pos:column="28"/></name></expr></argument>)<pos:position pos:line="39" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <return pos:line="42" pos:column="9">return;<pos:position pos:line="42" pos:column="16"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">dlinkDelete<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><operator pos:line="45" pos:column="17">&amp;<pos:position pos:line="45" pos:column="22"/></operator><name><name pos:line="45" pos:column="18">q<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">lru<pos:position pos:line="45" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="26">&amp;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="27">lru_list<pos:position pos:line="45" pos:column="35"/></name></expr></argument>)<pos:position pos:line="45" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">idnsRcodeCount<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">n<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="23">q<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">attempt<pos:position pos:line="46" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">q<pos:position pos:line="47" pos:column="6"/></name><operator pos:line="47" pos:column="6">-&gt;<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="8">error<pos:position pos:line="47" pos:column="13"/></name></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <name pos:line="47" pos:column="16">NULL<pos:position pos:line="47" pos:column="20"/></name></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">n<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">&lt;<pos:position pos:line="49" pos:column="15"/></operator> <literal type="number" pos:line="49" pos:column="13">0<pos:position pos:line="49" pos:column="14"/></literal></expr>)<pos:position pos:line="49" pos:column="15"/></condition><then pos:line="49" pos:column="15"> <block pos:line="49" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">78<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="20">3<pos:position pos:line="50" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="23">"idnsGrokReply: error "<pos:position pos:line="50" pos:column="46"/></literal> <operator pos:line="50" pos:column="47">&lt;&lt;<pos:position pos:line="50" pos:column="55"/></operator> <name pos:line="50" pos:column="50">rfc1035_error_message<pos:position pos:line="50" pos:column="71"/></name> <operator pos:line="50" pos:column="72">&lt;&lt;<pos:position pos:line="50" pos:column="80"/></operator> <literal type="string" pos:line="50" pos:column="75">" ("<pos:position pos:line="50" pos:column="79"/></literal> <operator pos:line="50" pos:column="80">&lt;&lt;<pos:position pos:line="50" pos:column="88"/></operator> <name pos:line="50" pos:column="83">rfc1035_errno<pos:position pos:line="50" pos:column="96"/></name> <operator pos:line="50" pos:column="97">&lt;&lt;<pos:position pos:line="50" pos:column="105"/></operator> <literal type="string" pos:line="50" pos:column="100">")"<pos:position pos:line="50" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="105"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="52" pos:column="9">q<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">error<pos:position pos:line="52" pos:column="17"/></name></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <name pos:line="52" pos:column="20">rfc1035_error_message<pos:position pos:line="52" pos:column="41"/></name></expr>;<pos:position pos:line="52" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">q<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">rcode<pos:position pos:line="53" pos:column="17"/></name></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <operator pos:line="53" pos:column="20">-<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="21">n<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">q<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">rcode<pos:position pos:line="55" pos:column="21"/></name></name> <operator pos:line="55" pos:column="22">==<pos:position pos:line="55" pos:column="24"/></operator> <literal type="number" pos:line="55" pos:column="25">2<pos:position pos:line="55" pos:column="26"/></literal> <operator pos:line="55" pos:column="27">&amp;&amp;<pos:position pos:line="55" pos:column="37"/></operator> <operator pos:line="55" pos:column="30">++<pos:position pos:line="55" pos:column="32"/></operator><name><name pos:line="55" pos:column="32">q<pos:position pos:line="55" pos:column="33"/></name><operator pos:line="55" pos:column="33">-&gt;<pos:position pos:line="55" pos:column="38"/></operator><name pos:line="55" pos:column="35">attempt<pos:position pos:line="55" pos:column="42"/></name></name> <operator pos:line="55" pos:column="43">&lt;<pos:position pos:line="55" pos:column="47"/></operator> <name pos:line="55" pos:column="45">MAX_ATTEMPT<pos:position pos:line="55" pos:column="56"/></name></expr>)<pos:position pos:line="55" pos:column="57"/></condition><then pos:line="55" pos:column="57"> <block pos:line="55" pos:column="58">{
            <comment type="block" pos:line="56" pos:column="13">/*
             * RCODE 2 is "Server failure - The name server was
             * unable to process this query due to a problem with
             * the name server."
             */</comment>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">debugs<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="number" pos:line="61" pos:column="20">78<pos:position pos:line="61" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="24">3<pos:position pos:line="61" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="27">"idnsGrokReply: Query result: SERV_FAIL"<pos:position pos:line="61" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">rfc1035MessageDestroy<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><operator pos:line="62" pos:column="35">&amp;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="36">message<pos:position pos:line="62" pos:column="43"/></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">q<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">start_t<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">current_time<pos:position pos:line="63" pos:column="38"/></name></expr>;<pos:position pos:line="63" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">q<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">id<pos:position pos:line="64" pos:column="18"/></name></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <call><name pos:line="64" pos:column="21">idnsQueryID<pos:position pos:line="64" pos:column="32"/></name><argument_list pos:line="64" pos:column="32">()<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">rfc1035SetQueryID<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name><name pos:line="65" pos:column="31">q<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">-&gt;<pos:position pos:line="65" pos:column="37"/></operator><name pos:line="65" pos:column="34">buf<pos:position pos:line="65" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="39">q<pos:position pos:line="65" pos:column="40"/></name><operator pos:line="65" pos:column="40">-&gt;<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="42">id<pos:position pos:line="65" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">idnsSendQuery<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">q<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
            <return pos:line="67" pos:column="13">return;<pos:position pos:line="67" pos:column="20"/></return>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">q<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">rcode<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">==<pos:position pos:line="70" pos:column="24"/></operator> <literal type="number" pos:line="70" pos:column="25">3<pos:position pos:line="70" pos:column="26"/></literal> <operator pos:line="70" pos:column="27">&amp;&amp;<pos:position pos:line="70" pos:column="37"/></operator> <name><name pos:line="70" pos:column="30">q<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">-&gt;<pos:position pos:line="70" pos:column="36"/></operator><name pos:line="70" pos:column="33">do_searchpath<pos:position pos:line="70" pos:column="46"/></name></name> <operator pos:line="70" pos:column="47">&amp;&amp;<pos:position pos:line="70" pos:column="57"/></operator> <name><name pos:line="70" pos:column="50">q<pos:position pos:line="70" pos:column="51"/></name><operator pos:line="70" pos:column="51">-&gt;<pos:position pos:line="70" pos:column="56"/></operator><name pos:line="70" pos:column="53">attempt<pos:position pos:line="70" pos:column="60"/></name></name> <operator pos:line="70" pos:column="61">&lt;<pos:position pos:line="70" pos:column="65"/></operator> <name pos:line="70" pos:column="63">MAX_ATTEMPT<pos:position pos:line="70" pos:column="74"/></name></expr>)<pos:position pos:line="70" pos:column="75"/></condition><then pos:line="70" pos:column="75"> <block pos:line="70" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">assert<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><name pos:line="71" pos:column="20">NULL<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">==<pos:position pos:line="71" pos:column="27"/></operator> <name><name pos:line="71" pos:column="28">message<pos:position pos:line="71" pos:column="35"/></name><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">answer<pos:position pos:line="71" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="72" pos:column="13">strcpy<pos:position pos:line="72" pos:column="19"/></name><argument_list pos:line="72" pos:column="19">(<argument><expr><name><name pos:line="72" pos:column="20">q<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">-&gt;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="23">name<pos:position pos:line="72" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="29">q<pos:position pos:line="72" pos:column="30"/></name><operator pos:line="72" pos:column="30">-&gt;<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="32">orig<pos:position pos:line="72" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="74" pos:column="13">debugs<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><literal type="number" pos:line="74" pos:column="20">78<pos:position pos:line="74" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="24">3<pos:position pos:line="74" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"idnsGrokReply: Query result: NXDOMAIN - "<pos:position pos:line="74" pos:column="69"/></literal> <operator pos:line="74" pos:column="70">&lt;&lt;<pos:position pos:line="74" pos:column="78"/></operator> <name><name pos:line="74" pos:column="73">q<pos:position pos:line="74" pos:column="74"/></name><operator pos:line="74" pos:column="74">-&gt;<pos:position pos:line="74" pos:column="79"/></operator><name pos:line="74" pos:column="76">name<pos:position pos:line="74" pos:column="80"/></name></name></expr></argument> )<pos:position pos:line="74" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="83"/></expr_stmt>

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name><name pos:line="76" pos:column="17">q<pos:position pos:line="76" pos:column="18"/></name><operator pos:line="76" pos:column="18">-&gt;<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="20">domain<pos:position pos:line="76" pos:column="26"/></name></name> <operator pos:line="76" pos:column="27">&lt;<pos:position pos:line="76" pos:column="31"/></operator> <name pos:line="76" pos:column="29">npc<pos:position pos:line="76" pos:column="32"/></name></expr>)<pos:position pos:line="76" pos:column="33"/></condition><then pos:line="76" pos:column="33"> <block pos:line="76" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">strcat<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><name><name pos:line="77" pos:column="24">q<pos:position pos:line="77" pos:column="25"/></name><operator pos:line="77" pos:column="25">-&gt;<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="27">name<pos:position pos:line="77" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="33">"."<pos:position pos:line="77" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">strcat<pos:position pos:line="78" pos:column="23"/></name><argument_list pos:line="78" pos:column="23">(<argument><expr><name><name pos:line="78" pos:column="24">q<pos:position pos:line="78" pos:column="25"/></name><operator pos:line="78" pos:column="25">-&gt;<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="27">name<pos:position pos:line="78" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="33">searchpath<pos:position pos:line="78" pos:column="43"/></name><index pos:line="78" pos:column="43">[<expr><name><name pos:line="78" pos:column="44">q<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">-&gt;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="47">domain<pos:position pos:line="78" pos:column="53"/></name></name></expr>]<pos:position pos:line="78" pos:column="54"/></index></name><operator pos:line="78" pos:column="54">.<pos:position pos:line="78" pos:column="55"/></operator><name pos:line="78" pos:column="55">domain<pos:position pos:line="78" pos:column="61"/></name></expr></argument>)<pos:position pos:line="78" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">debugs<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><literal type="number" pos:line="79" pos:column="24">78<pos:position pos:line="79" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="28">3<pos:position pos:line="79" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="31">"idnsGrokReply: searchpath used for "<pos:position pos:line="79" pos:column="68"/></literal> <operator pos:line="79" pos:column="69">&lt;&lt;<pos:position pos:line="79" pos:column="77"/></operator> <name><name pos:line="79" pos:column="72">q<pos:position pos:line="79" pos:column="73"/></name><operator pos:line="79" pos:column="73">-&gt;<pos:position pos:line="79" pos:column="78"/></operator><name pos:line="79" pos:column="75">name<pos:position pos:line="79" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="80" pos:column="17">q<pos:position pos:line="80" pos:column="18"/></name><operator pos:line="80" pos:column="18">-&gt;<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="20">domain<pos:position pos:line="80" pos:column="26"/></name></name><operator pos:line="80" pos:column="26">++<pos:position pos:line="80" pos:column="28"/></operator></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="81" pos:column="14"/></block></then> <else pos:line="81" pos:column="15">else <block pos:line="81" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="82" pos:column="17">q<pos:position pos:line="82" pos:column="18"/></name><operator pos:line="82" pos:column="18">-&gt;<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="20">attempt<pos:position pos:line="82" pos:column="27"/></name></name><operator pos:line="82" pos:column="27">++<pos:position pos:line="82" pos:column="29"/></operator></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="83" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="85" pos:column="13">idnsDropMessage<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">message<pos:position pos:line="85" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="38">q<pos:position pos:line="85" pos:column="39"/></name></expr></argument>)<pos:position pos:line="85" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="41"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="87" pos:column="13">q<pos:position pos:line="87" pos:column="14"/></name><operator pos:line="87" pos:column="14">-&gt;<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="16">start_t<pos:position pos:line="87" pos:column="23"/></name></name> <operator pos:line="87" pos:column="24">=<pos:position pos:line="87" pos:column="25"/></operator> <name pos:line="87" pos:column="26">current_time<pos:position pos:line="87" pos:column="38"/></name></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="88" pos:column="13">q<pos:position pos:line="88" pos:column="14"/></name><operator pos:line="88" pos:column="14">-&gt;<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="16">id<pos:position pos:line="88" pos:column="18"/></name></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <call><name pos:line="88" pos:column="21">idnsQueryID<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">()<pos:position pos:line="88" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">rfc1035SetQueryID<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><name><name pos:line="89" pos:column="31">q<pos:position pos:line="89" pos:column="32"/></name><operator pos:line="89" pos:column="32">-&gt;<pos:position pos:line="89" pos:column="37"/></operator><name pos:line="89" pos:column="34">buf<pos:position pos:line="89" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="39">q<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">-&gt;<pos:position pos:line="89" pos:column="45"/></operator><name pos:line="89" pos:column="42">id<pos:position pos:line="89" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>
            <if pos:line="90" pos:column="13">if <condition pos:line="90" pos:column="16">(<expr><name><name pos:line="90" pos:column="17">Ip<pos:position pos:line="90" pos:column="19"/></name><operator pos:line="90" pos:column="19">::<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="21">EnableIpv6<pos:position pos:line="90" pos:column="31"/></name></name> <operator pos:line="90" pos:column="32">&amp;&amp;<pos:position pos:line="90" pos:column="42"/></operator> <name><name pos:line="90" pos:column="35">q<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">-&gt;<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="38">query<pos:position pos:line="90" pos:column="43"/></name><operator pos:line="90" pos:column="43">.<pos:position pos:line="90" pos:column="44"/></operator><name pos:line="90" pos:column="44">qtype<pos:position pos:line="90" pos:column="49"/></name></name> <operator pos:line="90" pos:column="50">==<pos:position pos:line="90" pos:column="52"/></operator> <name pos:line="90" pos:column="53">RFC1035_TYPE_AAAA<pos:position pos:line="90" pos:column="70"/></name></expr>)<pos:position pos:line="90" pos:column="71"/></condition><then pos:line="90" pos:column="71"> <block pos:line="90" pos:column="72">{
                <expr_stmt><expr><call><name pos:line="91" pos:column="17">debugs<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><literal type="number" pos:line="91" pos:column="24">78<pos:position pos:line="91" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="28">3<pos:position pos:line="91" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="31">"idnsGrokReply: Trying AAAA Query for "<pos:position pos:line="91" pos:column="70"/></literal> <operator pos:line="91" pos:column="71">&lt;&lt;<pos:position pos:line="91" pos:column="79"/></operator> <name><name pos:line="91" pos:column="74">q<pos:position pos:line="91" pos:column="75"/></name><operator pos:line="91" pos:column="75">-&gt;<pos:position pos:line="91" pos:column="80"/></operator><name pos:line="91" pos:column="77">name<pos:position pos:line="91" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="83"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="92" pos:column="17">q<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">-&gt;<pos:position pos:line="92" pos:column="23"/></operator><name pos:line="92" pos:column="20">sz<pos:position pos:line="92" pos:column="22"/></name></name> <operator pos:line="92" pos:column="23">=<pos:position pos:line="92" pos:column="24"/></operator> <call><name pos:line="92" pos:column="25">rfc3596BuildAAAAQuery<pos:position pos:line="92" pos:column="46"/></name><argument_list pos:line="92" pos:column="46">(<argument><expr><name><name pos:line="92" pos:column="47">q<pos:position pos:line="92" pos:column="48"/></name><operator pos:line="92" pos:column="48">-&gt;<pos:position pos:line="92" pos:column="53"/></operator><name pos:line="92" pos:column="50">name<pos:position pos:line="92" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="56">q<pos:position pos:line="92" pos:column="57"/></name><operator pos:line="92" pos:column="57">-&gt;<pos:position pos:line="92" pos:column="62"/></operator><name pos:line="92" pos:column="59">buf<pos:position pos:line="92" pos:column="62"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="64">sizeof<argument_list pos:line="92" pos:column="70">(<argument><expr><name><name pos:line="92" pos:column="71">q<pos:position pos:line="92" pos:column="72"/></name><operator pos:line="92" pos:column="72">-&gt;<pos:position pos:line="92" pos:column="77"/></operator><name pos:line="92" pos:column="74">buf<pos:position pos:line="92" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="78"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="80">q<pos:position pos:line="92" pos:column="81"/></name><operator pos:line="92" pos:column="81">-&gt;<pos:position pos:line="92" pos:column="86"/></operator><name pos:line="92" pos:column="83">id<pos:position pos:line="92" pos:column="85"/></name></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="87">&amp;<pos:position pos:line="92" pos:column="92"/></operator><name><name pos:line="92" pos:column="88">q<pos:position pos:line="92" pos:column="89"/></name><operator pos:line="92" pos:column="89">-&gt;<pos:position pos:line="92" pos:column="94"/></operator><name pos:line="92" pos:column="91">query<pos:position pos:line="92" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="98"/></expr_stmt>
            }<pos:position pos:line="93" pos:column="14"/></block></then> <else pos:line="93" pos:column="15">else <block pos:line="93" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">debugs<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><literal type="number" pos:line="94" pos:column="24">78<pos:position pos:line="94" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="94" pos:column="28">3<pos:position pos:line="94" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="31">"idnsGrokReply: Trying A Query for "<pos:position pos:line="94" pos:column="67"/></literal> <operator pos:line="94" pos:column="68">&lt;&lt;<pos:position pos:line="94" pos:column="76"/></operator> <name><name pos:line="94" pos:column="71">q<pos:position pos:line="94" pos:column="72"/></name><operator pos:line="94" pos:column="72">-&gt;<pos:position pos:line="94" pos:column="77"/></operator><name pos:line="94" pos:column="74">name<pos:position pos:line="94" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="80"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="95" pos:column="17">q<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">-&gt;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="20">sz<pos:position pos:line="95" pos:column="22"/></name></name> <operator pos:line="95" pos:column="23">=<pos:position pos:line="95" pos:column="24"/></operator> <call><name pos:line="95" pos:column="25">rfc3596BuildAQuery<pos:position pos:line="95" pos:column="43"/></name><argument_list pos:line="95" pos:column="43">(<argument><expr><name><name pos:line="95" pos:column="44">q<pos:position pos:line="95" pos:column="45"/></name><operator pos:line="95" pos:column="45">-&gt;<pos:position pos:line="95" pos:column="50"/></operator><name pos:line="95" pos:column="47">name<pos:position pos:line="95" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="53">q<pos:position pos:line="95" pos:column="54"/></name><operator pos:line="95" pos:column="54">-&gt;<pos:position pos:line="95" pos:column="59"/></operator><name pos:line="95" pos:column="56">buf<pos:position pos:line="95" pos:column="59"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="61">sizeof<argument_list pos:line="95" pos:column="67">(<argument><expr><name><name pos:line="95" pos:column="68">q<pos:position pos:line="95" pos:column="69"/></name><operator pos:line="95" pos:column="69">-&gt;<pos:position pos:line="95" pos:column="74"/></operator><name pos:line="95" pos:column="71">buf<pos:position pos:line="95" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="75"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="77">q<pos:position pos:line="95" pos:column="78"/></name><operator pos:line="95" pos:column="78">-&gt;<pos:position pos:line="95" pos:column="83"/></operator><name pos:line="95" pos:column="80">id<pos:position pos:line="95" pos:column="82"/></name></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="84">&amp;<pos:position pos:line="95" pos:column="89"/></operator><name><name pos:line="95" pos:column="85">q<pos:position pos:line="95" pos:column="86"/></name><operator pos:line="95" pos:column="86">-&gt;<pos:position pos:line="95" pos:column="91"/></operator><name pos:line="95" pos:column="88">query<pos:position pos:line="95" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="95"/></expr_stmt>
            }<pos:position pos:line="96" pos:column="14"/></block></else></if>

            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><name><name pos:line="98" pos:column="17">q<pos:position pos:line="98" pos:column="18"/></name><operator pos:line="98" pos:column="18">-&gt;<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="20">sz<pos:position pos:line="98" pos:column="22"/></name></name> <operator pos:line="98" pos:column="23">&lt;<pos:position pos:line="98" pos:column="27"/></operator> <literal type="number" pos:line="98" pos:column="25">0<pos:position pos:line="98" pos:column="26"/></literal></expr>)<pos:position pos:line="98" pos:column="27"/></condition><then pos:line="98" pos:column="27"> <block pos:line="98" pos:column="28">{
                <comment type="block" pos:line="99" pos:column="17">/* problem with query data -- query not sent */</comment>
                <expr_stmt><expr><call><name pos:line="100" pos:column="17">idnsCallback<pos:position pos:line="100" pos:column="29"/></name><argument_list pos:line="100" pos:column="29">(<argument><expr><cast type="static" pos:line="100" pos:column="30">static_cast<argument_list type="generic" pos:line="100" pos:column="41">&lt;<argument><expr><name pos:line="100" pos:column="42">idns_query<pos:position pos:line="100" pos:column="52"/></name> <operator pos:line="100" pos:column="53">*<pos:position pos:line="100" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="100" pos:column="58"/></argument_list><argument_list pos:line="100" pos:column="55">(<argument><expr><name><name pos:line="100" pos:column="56">q<pos:position pos:line="100" pos:column="57"/></name><operator pos:line="100" pos:column="57">-&gt;<pos:position pos:line="100" pos:column="62"/></operator><name pos:line="100" pos:column="59">callback_data<pos:position pos:line="100" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="73"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="100" pos:column="75">NULL<pos:position pos:line="100" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="81">0<pos:position pos:line="100" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="84">"Internal error"<pos:position pos:line="100" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="102"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="101" pos:column="17">cbdataFree<pos:position pos:line="101" pos:column="27"/></name><argument_list pos:line="101" pos:column="27">(<argument><expr><name pos:line="101" pos:column="28">q<pos:position pos:line="101" pos:column="29"/></name></expr></argument>)<pos:position pos:line="101" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="31"/></expr_stmt>
                <return pos:line="102" pos:column="17">return;<pos:position pos:line="102" pos:column="24"/></return>
            }<pos:position pos:line="103" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="105" pos:column="13">idnsCacheQuery<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">q<pos:position pos:line="105" pos:column="29"/></name></expr></argument>)<pos:position pos:line="105" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">idnsSendQuery<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">(<argument><expr><name pos:line="106" pos:column="27">q<pos:position pos:line="106" pos:column="28"/></name></expr></argument>)<pos:position pos:line="106" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="30"/></expr_stmt>
            <return pos:line="107" pos:column="13">return;<pos:position pos:line="107" pos:column="20"/></return>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><name><name pos:line="111" pos:column="9">q<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">need_A<pos:position pos:line="111" pos:column="18"/></name></name> <operator pos:line="111" pos:column="19">&amp;&amp;<pos:position pos:line="111" pos:column="29"/></operator> <operator pos:line="111" pos:column="22">(<pos:position pos:line="111" pos:column="23"/></operator><name><name pos:line="111" pos:column="23">Config<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">.<pos:position pos:line="111" pos:column="30"/></operator><name pos:line="111" pos:column="30">onoff<pos:position pos:line="111" pos:column="35"/></name><operator pos:line="111" pos:column="35">.<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="36">dns_require_A<pos:position pos:line="111" pos:column="49"/></name></name> <operator pos:line="111" pos:column="50">==<pos:position pos:line="111" pos:column="52"/></operator> <literal type="number" pos:line="111" pos:column="53">1<pos:position pos:line="111" pos:column="54"/></literal> <operator pos:line="111" pos:column="55">||<pos:position pos:line="111" pos:column="57"/></operator> <name pos:line="111" pos:column="58">n<pos:position pos:line="111" pos:column="59"/></name> <operator pos:line="111" pos:column="60">&lt;=<pos:position pos:line="111" pos:column="65"/></operator> <literal type="number" pos:line="111" pos:column="63">0<pos:position pos:line="111" pos:column="64"/></literal> <operator pos:line="111" pos:column="65">)<pos:position pos:line="111" pos:column="66"/></operator></expr> )<pos:position pos:line="111" pos:column="68"/></condition><then pos:line="111" pos:column="68"> <block pos:line="111" pos:column="69">{
        <comment type="block" pos:line="112" pos:column="9">/* ERROR or NO AAAA exist. Failover to A records. */</comment>
        <comment type="block" pos:line="113" pos:column="9">/*      Apparently its also a good idea to lookup and store the A records
         *      just in case the AAAA are not available when we need them.
         *      This could occur due to number of network failings beyond our control
         *      thus the || above allowing the user to request always both.
         */</comment>

        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">n<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">==<pos:position pos:line="119" pos:column="17"/></operator> <literal type="number" pos:line="119" pos:column="18">0<pos:position pos:line="119" pos:column="19"/></literal></expr>)<pos:position pos:line="119" pos:column="20"/></condition><then pos:line="119" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="13">debugs<pos:position pos:line="120" pos:column="19"/></name><argument_list pos:line="120" pos:column="19">(<argument><expr><literal type="number" pos:line="120" pos:column="20">78<pos:position pos:line="120" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="24">3<pos:position pos:line="120" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="27">"idnsGrokReply: "<pos:position pos:line="120" pos:column="44"/></literal> <operator pos:line="120" pos:column="45">&lt;&lt;<pos:position pos:line="120" pos:column="53"/></operator> <name><name pos:line="120" pos:column="48">q<pos:position pos:line="120" pos:column="49"/></name><operator pos:line="120" pos:column="49">-&gt;<pos:position pos:line="120" pos:column="54"/></operator><name pos:line="120" pos:column="51">name<pos:position pos:line="120" pos:column="55"/></name></name> <operator pos:line="120" pos:column="56">&lt;&lt;<pos:position pos:line="120" pos:column="64"/></operator> <literal type="string" pos:line="120" pos:column="59">" has no AAAA records. Looking up A record instead."<pos:position pos:line="120" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="113"/></expr_stmt></block></then>
        <elseif pos:line="121" pos:column="9">else <if pos:line="121" pos:column="14">if <condition pos:line="121" pos:column="17">(<expr><name><name pos:line="121" pos:column="18">q<pos:position pos:line="121" pos:column="19"/></name><operator pos:line="121" pos:column="19">-&gt;<pos:position pos:line="121" pos:column="24"/></operator><name pos:line="121" pos:column="21">need_A<pos:position pos:line="121" pos:column="27"/></name></name> <operator pos:line="121" pos:column="28">&amp;&amp;<pos:position pos:line="121" pos:column="38"/></operator> <name pos:line="121" pos:column="31">n<pos:position pos:line="121" pos:column="32"/></name> <operator pos:line="121" pos:column="33">&lt;=<pos:position pos:line="121" pos:column="38"/></operator> <literal type="number" pos:line="121" pos:column="36">0<pos:position pos:line="121" pos:column="37"/></literal></expr>)<pos:position pos:line="121" pos:column="38"/></condition><then pos:line="121" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="13">debugs<pos:position pos:line="122" pos:column="19"/></name><argument_list pos:line="122" pos:column="19">(<argument><expr><literal type="number" pos:line="122" pos:column="20">78<pos:position pos:line="122" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="24">3<pos:position pos:line="122" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="27">"idnsGrokReply: "<pos:position pos:line="122" pos:column="44"/></literal> <operator pos:line="122" pos:column="45">&lt;&lt;<pos:position pos:line="122" pos:column="53"/></operator> <name><name pos:line="122" pos:column="48">q<pos:position pos:line="122" pos:column="49"/></name><operator pos:line="122" pos:column="49">-&gt;<pos:position pos:line="122" pos:column="54"/></operator><name pos:line="122" pos:column="51">name<pos:position pos:line="122" pos:column="55"/></name></name> <operator pos:line="122" pos:column="56">&lt;&lt;<pos:position pos:line="122" pos:column="64"/></operator> <literal type="string" pos:line="122" pos:column="59">" AAAA query failed. Trying A now instead."<pos:position pos:line="122" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="104"/></expr_stmt></block></then></if></elseif>
        <else pos:line="123" pos:column="9">else <comment type="line" pos:line="123" pos:column="14">// admin requested this.</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="13">debugs<pos:position pos:line="124" pos:column="19"/></name><argument_list pos:line="124" pos:column="19">(<argument><expr><literal type="number" pos:line="124" pos:column="20">78<pos:position pos:line="124" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="24">3<pos:position pos:line="124" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="27">"idnsGrokReply: "<pos:position pos:line="124" pos:column="44"/></literal> <operator pos:line="124" pos:column="45">&lt;&lt;<pos:position pos:line="124" pos:column="53"/></operator> <name><name pos:line="124" pos:column="48">q<pos:position pos:line="124" pos:column="49"/></name><operator pos:line="124" pos:column="49">-&gt;<pos:position pos:line="124" pos:column="54"/></operator><name pos:line="124" pos:column="51">name<pos:position pos:line="124" pos:column="55"/></name></name> <operator pos:line="124" pos:column="56">&lt;&lt;<pos:position pos:line="124" pos:column="64"/></operator> <literal type="string" pos:line="124" pos:column="59">" AAAA query done. Configured to retrieve A now also."<pos:position pos:line="124" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="115"/></expr_stmt></block></else></if>

        <comment type="line" pos:line="126" pos:column="9">// move the initial message results into the failover query for merging later.</comment>
        <if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">n<pos:position pos:line="127" pos:column="14"/></name> <operator pos:line="127" pos:column="15">&gt;<pos:position pos:line="127" pos:column="19"/></operator> <literal type="number" pos:line="127" pos:column="17">0<pos:position pos:line="127" pos:column="18"/></literal></expr>)<pos:position pos:line="127" pos:column="19"/></condition><then pos:line="127" pos:column="19"> <block pos:line="127" pos:column="20">{
            <expr_stmt><expr><name><name pos:line="128" pos:column="13">q<pos:position pos:line="128" pos:column="14"/></name><operator pos:line="128" pos:column="14">-&gt;<pos:position pos:line="128" pos:column="19"/></operator><name pos:line="128" pos:column="16">initial_AAAA<pos:position pos:line="128" pos:column="28"/></name><operator pos:line="128" pos:column="28">.<pos:position pos:line="128" pos:column="29"/></operator><name pos:line="128" pos:column="29">count<pos:position pos:line="128" pos:column="34"/></name></name> <operator pos:line="128" pos:column="35">=<pos:position pos:line="128" pos:column="36"/></operator> <name><name pos:line="128" pos:column="37">message<pos:position pos:line="128" pos:column="44"/></name><operator pos:line="128" pos:column="44">-&gt;<pos:position pos:line="128" pos:column="49"/></operator><name pos:line="128" pos:column="46">ancount<pos:position pos:line="128" pos:column="53"/></name></name></expr>;<pos:position pos:line="128" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="129" pos:column="13">q<pos:position pos:line="129" pos:column="14"/></name><operator pos:line="129" pos:column="14">-&gt;<pos:position pos:line="129" pos:column="19"/></operator><name pos:line="129" pos:column="16">initial_AAAA<pos:position pos:line="129" pos:column="28"/></name><operator pos:line="129" pos:column="28">.<pos:position pos:line="129" pos:column="29"/></operator><name pos:line="129" pos:column="29">answers<pos:position pos:line="129" pos:column="36"/></name></name> <operator pos:line="129" pos:column="37">=<pos:position pos:line="129" pos:column="38"/></operator> <name><name pos:line="129" pos:column="39">message<pos:position pos:line="129" pos:column="46"/></name><operator pos:line="129" pos:column="46">-&gt;<pos:position pos:line="129" pos:column="51"/></operator><name pos:line="129" pos:column="48">answer<pos:position pos:line="129" pos:column="54"/></name></name></expr>;<pos:position pos:line="129" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="130" pos:column="13">message<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">-&gt;<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="22">answer<pos:position pos:line="130" pos:column="28"/></name></name> <operator pos:line="130" pos:column="29">=<pos:position pos:line="130" pos:column="30"/></operator> <name pos:line="130" pos:column="31">NULL<pos:position pos:line="130" pos:column="35"/></name></expr>;<pos:position pos:line="130" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="133" pos:column="9">// remove the hashed query info</comment>
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">idnsDropMessage<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name pos:line="134" pos:column="25">message<pos:position pos:line="134" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="34">q<pos:position pos:line="134" pos:column="35"/></name></expr></argument>)<pos:position pos:line="134" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="37"/></expr_stmt>

        <comment type="line" pos:line="136" pos:column="9">// reset the query as an A query</comment>
        <expr_stmt><expr><name><name pos:line="137" pos:column="9">q<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">-&gt;<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="12">nsends<pos:position pos:line="137" pos:column="18"/></name></name> <operator pos:line="137" pos:column="19">=<pos:position pos:line="137" pos:column="20"/></operator> <literal type="number" pos:line="137" pos:column="21">0<pos:position pos:line="137" pos:column="22"/></literal></expr>;<pos:position pos:line="137" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="138" pos:column="9">q<pos:position pos:line="138" pos:column="10"/></name><operator pos:line="138" pos:column="10">-&gt;<pos:position pos:line="138" pos:column="15"/></operator><name pos:line="138" pos:column="12">start_t<pos:position pos:line="138" pos:column="19"/></name></name> <operator pos:line="138" pos:column="20">=<pos:position pos:line="138" pos:column="21"/></operator> <name pos:line="138" pos:column="22">current_time<pos:position pos:line="138" pos:column="34"/></name></expr>;<pos:position pos:line="138" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="139" pos:column="9">q<pos:position pos:line="139" pos:column="10"/></name><operator pos:line="139" pos:column="10">-&gt;<pos:position pos:line="139" pos:column="15"/></operator><name pos:line="139" pos:column="12">id<pos:position pos:line="139" pos:column="14"/></name></name> <operator pos:line="139" pos:column="15">=<pos:position pos:line="139" pos:column="16"/></operator> <call><name pos:line="139" pos:column="17">idnsQueryID<pos:position pos:line="139" pos:column="28"/></name><argument_list pos:line="139" pos:column="28">()<pos:position pos:line="139" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">rfc1035SetQueryID<pos:position pos:line="140" pos:column="26"/></name><argument_list pos:line="140" pos:column="26">(<argument><expr><name><name pos:line="140" pos:column="27">q<pos:position pos:line="140" pos:column="28"/></name><operator pos:line="140" pos:column="28">-&gt;<pos:position pos:line="140" pos:column="33"/></operator><name pos:line="140" pos:column="30">buf<pos:position pos:line="140" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="35">q<pos:position pos:line="140" pos:column="36"/></name><operator pos:line="140" pos:column="36">-&gt;<pos:position pos:line="140" pos:column="41"/></operator><name pos:line="140" pos:column="38">id<pos:position pos:line="140" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="140" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="141" pos:column="9">q<pos:position pos:line="141" pos:column="10"/></name><operator pos:line="141" pos:column="10">-&gt;<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="12">sz<pos:position pos:line="141" pos:column="14"/></name></name> <operator pos:line="141" pos:column="15">=<pos:position pos:line="141" pos:column="16"/></operator> <call><name pos:line="141" pos:column="17">rfc3596BuildAQuery<pos:position pos:line="141" pos:column="35"/></name><argument_list pos:line="141" pos:column="35">(<argument><expr><name><name pos:line="141" pos:column="36">q<pos:position pos:line="141" pos:column="37"/></name><operator pos:line="141" pos:column="37">-&gt;<pos:position pos:line="141" pos:column="42"/></operator><name pos:line="141" pos:column="39">name<pos:position pos:line="141" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="45">q<pos:position pos:line="141" pos:column="46"/></name><operator pos:line="141" pos:column="46">-&gt;<pos:position pos:line="141" pos:column="51"/></operator><name pos:line="141" pos:column="48">buf<pos:position pos:line="141" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="141" pos:column="53">sizeof<argument_list pos:line="141" pos:column="59">(<argument><expr><name><name pos:line="141" pos:column="60">q<pos:position pos:line="141" pos:column="61"/></name><operator pos:line="141" pos:column="61">-&gt;<pos:position pos:line="141" pos:column="66"/></operator><name pos:line="141" pos:column="63">buf<pos:position pos:line="141" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="69">q<pos:position pos:line="141" pos:column="70"/></name><operator pos:line="141" pos:column="70">-&gt;<pos:position pos:line="141" pos:column="75"/></operator><name pos:line="141" pos:column="72">id<pos:position pos:line="141" pos:column="74"/></name></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="76">&amp;<pos:position pos:line="141" pos:column="81"/></operator><name><name pos:line="141" pos:column="77">q<pos:position pos:line="141" pos:column="78"/></name><operator pos:line="141" pos:column="78">-&gt;<pos:position pos:line="141" pos:column="83"/></operator><name pos:line="141" pos:column="80">query<pos:position pos:line="141" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="142" pos:column="9">q<pos:position pos:line="142" pos:column="10"/></name><operator pos:line="142" pos:column="10">-&gt;<pos:position pos:line="142" pos:column="15"/></operator><name pos:line="142" pos:column="12">need_A<pos:position pos:line="142" pos:column="18"/></name></name> <operator pos:line="142" pos:column="19">=<pos:position pos:line="142" pos:column="20"/></operator> <literal type="boolean" pos:line="142" pos:column="21">false<pos:position pos:line="142" pos:column="26"/></literal></expr>;<pos:position pos:line="142" pos:column="27"/></expr_stmt>

        <if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name><name pos:line="144" pos:column="13">q<pos:position pos:line="144" pos:column="14"/></name><operator pos:line="144" pos:column="14">-&gt;<pos:position pos:line="144" pos:column="19"/></operator><name pos:line="144" pos:column="16">sz<pos:position pos:line="144" pos:column="18"/></name></name> <operator pos:line="144" pos:column="19">&lt;<pos:position pos:line="144" pos:column="23"/></operator> <literal type="number" pos:line="144" pos:column="21">0<pos:position pos:line="144" pos:column="22"/></literal></expr>)<pos:position pos:line="144" pos:column="23"/></condition><then pos:line="144" pos:column="23"> <block pos:line="144" pos:column="24">{
            <comment type="block" pos:line="145" pos:column="13">/* problem with query data -- query not sent */</comment>
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">idnsCallback<pos:position pos:line="146" pos:column="25"/></name><argument_list pos:line="146" pos:column="25">(<argument><expr><cast type="static" pos:line="146" pos:column="26">static_cast<argument_list type="generic" pos:line="146" pos:column="37">&lt;<argument><expr><name pos:line="146" pos:column="38">idns_query<pos:position pos:line="146" pos:column="48"/></name> <operator pos:line="146" pos:column="49">*<pos:position pos:line="146" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="146" pos:column="54"/></argument_list><argument_list pos:line="146" pos:column="51">(<argument><expr><name><name pos:line="146" pos:column="52">q<pos:position pos:line="146" pos:column="53"/></name><operator pos:line="146" pos:column="53">-&gt;<pos:position pos:line="146" pos:column="58"/></operator><name pos:line="146" pos:column="55">callback_data<pos:position pos:line="146" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="69"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="146" pos:column="71">NULL<pos:position pos:line="146" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="77">0<pos:position pos:line="146" pos:column="78"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="80">"Internal error"<pos:position pos:line="146" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">cbdataFree<pos:position pos:line="147" pos:column="23"/></name><argument_list pos:line="147" pos:column="23">(<argument><expr><name pos:line="147" pos:column="24">q<pos:position pos:line="147" pos:column="25"/></name></expr></argument>)<pos:position pos:line="147" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="27"/></expr_stmt>
            <return pos:line="148" pos:column="13">return;<pos:position pos:line="148" pos:column="20"/></return>
        }<pos:position pos:line="149" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="151" pos:column="9">idnsCacheQuery<pos:position pos:line="151" pos:column="23"/></name><argument_list pos:line="151" pos:column="23">(<argument><expr><name pos:line="151" pos:column="24">q<pos:position pos:line="151" pos:column="25"/></name></expr></argument>)<pos:position pos:line="151" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="152" pos:column="9">idnsSendQuery<pos:position pos:line="152" pos:column="22"/></name><argument_list pos:line="152" pos:column="22">(<argument><expr><name pos:line="152" pos:column="23">q<pos:position pos:line="152" pos:column="24"/></name></expr></argument>)<pos:position pos:line="152" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="26"/></expr_stmt>
        <return pos:line="153" pos:column="9">return;<pos:position pos:line="153" pos:column="16"/></return>
    }<pos:position pos:line="154" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="156" pos:column="5">/** If there are two result sets from preceeding AAAA and A lookups merge them with a preference for AAAA */</comment>
    <if pos:line="157" pos:column="5">if <condition pos:line="157" pos:column="8">(<expr><name><name pos:line="157" pos:column="9">q<pos:position pos:line="157" pos:column="10"/></name><operator pos:line="157" pos:column="10">-&gt;<pos:position pos:line="157" pos:column="15"/></operator><name pos:line="157" pos:column="12">initial_AAAA<pos:position pos:line="157" pos:column="24"/></name><operator pos:line="157" pos:column="24">.<pos:position pos:line="157" pos:column="25"/></operator><name pos:line="157" pos:column="25">count<pos:position pos:line="157" pos:column="30"/></name></name> <operator pos:line="157" pos:column="31">&gt;<pos:position pos:line="157" pos:column="35"/></operator> <literal type="number" pos:line="157" pos:column="33">0<pos:position pos:line="157" pos:column="34"/></literal> <operator pos:line="157" pos:column="35">&amp;&amp;<pos:position pos:line="157" pos:column="45"/></operator> <name pos:line="157" pos:column="38">n<pos:position pos:line="157" pos:column="39"/></name> <operator pos:line="157" pos:column="40">&gt;<pos:position pos:line="157" pos:column="44"/></operator> <literal type="number" pos:line="157" pos:column="42">0<pos:position pos:line="157" pos:column="43"/></literal></expr>)<pos:position pos:line="157" pos:column="44"/></condition><then pos:line="157" pos:column="44"> <block pos:line="157" pos:column="45">{
        <comment type="block" pos:line="158" pos:column="9">/* two sets of RR need merging */</comment>
        <decl_stmt><decl><type><name pos:line="159" pos:column="9">rfc1035_rr<pos:position pos:line="159" pos:column="19"/></name> <modifier pos:line="159" pos:column="20">*<pos:position pos:line="159" pos:column="21"/></modifier></type><name pos:line="159" pos:column="21">result<pos:position pos:line="159" pos:column="27"/></name> <init pos:line="159" pos:column="28">= <expr><operator pos:line="159" pos:column="30">(<pos:position pos:line="159" pos:column="31"/></operator><name pos:line="159" pos:column="31">rfc1035_rr<pos:position pos:line="159" pos:column="41"/></name><operator pos:line="159" pos:column="41">*<pos:position pos:line="159" pos:column="42"/></operator><operator pos:line="159" pos:column="42">)<pos:position pos:line="159" pos:column="43"/></operator> <call><name pos:line="159" pos:column="44">xmalloc<pos:position pos:line="159" pos:column="51"/></name><argument_list pos:line="159" pos:column="51">( <argument><expr><sizeof pos:line="159" pos:column="53">sizeof<argument_list pos:line="159" pos:column="59">(<argument><expr><name pos:line="159" pos:column="60">rfc1035_rr<pos:position pos:line="159" pos:column="70"/></name></expr></argument>)<pos:position pos:line="159" pos:column="71"/></argument_list></sizeof><operator pos:line="159" pos:column="71">*<pos:position pos:line="159" pos:column="72"/></operator><operator pos:line="159" pos:column="72">(<pos:position pos:line="159" pos:column="73"/></operator><name pos:line="159" pos:column="73">n<pos:position pos:line="159" pos:column="74"/></name> <operator pos:line="159" pos:column="75">+<pos:position pos:line="159" pos:column="76"/></operator> <name><name pos:line="159" pos:column="77">q<pos:position pos:line="159" pos:column="78"/></name><operator pos:line="159" pos:column="78">-&gt;<pos:position pos:line="159" pos:column="83"/></operator><name pos:line="159" pos:column="80">initial_AAAA<pos:position pos:line="159" pos:column="92"/></name><operator pos:line="159" pos:column="92">.<pos:position pos:line="159" pos:column="93"/></operator><name pos:line="159" pos:column="93">count<pos:position pos:line="159" pos:column="98"/></name></name><operator pos:line="159" pos:column="98">)<pos:position pos:line="159" pos:column="99"/></operator></expr></argument> )<pos:position pos:line="159" pos:column="101"/></argument_list></call></expr></init></decl>;<pos:position pos:line="159" pos:column="102"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="160" pos:column="9">rfc1035_rr<pos:position pos:line="160" pos:column="19"/></name> <modifier pos:line="160" pos:column="20">*<pos:position pos:line="160" pos:column="21"/></modifier></type><name pos:line="160" pos:column="21">tmp<pos:position pos:line="160" pos:column="24"/></name> <init pos:line="160" pos:column="25">= <expr><name pos:line="160" pos:column="27">result<pos:position pos:line="160" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="160" pos:column="34"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="162" pos:column="9">debugs<pos:position pos:line="162" pos:column="15"/></name><argument_list pos:line="162" pos:column="15">(<argument><expr><literal type="number" pos:line="162" pos:column="16">78<pos:position pos:line="162" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="20">6<pos:position pos:line="162" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="23">HERE<pos:position pos:line="162" pos:column="27"/></name> <operator pos:line="162" pos:column="28">&lt;&lt;<pos:position pos:line="162" pos:column="36"/></operator> <literal type="string" pos:line="162" pos:column="31">"Merging DNS results "<pos:position pos:line="162" pos:column="53"/></literal> <operator pos:line="162" pos:column="54">&lt;&lt;<pos:position pos:line="162" pos:column="62"/></operator> <name><name pos:line="162" pos:column="57">q<pos:position pos:line="162" pos:column="58"/></name><operator pos:line="162" pos:column="58">-&gt;<pos:position pos:line="162" pos:column="63"/></operator><name pos:line="162" pos:column="60">name<pos:position pos:line="162" pos:column="64"/></name></name> <operator pos:line="162" pos:column="65">&lt;&lt;<pos:position pos:line="162" pos:column="73"/></operator> <literal type="string" pos:line="162" pos:column="68">" AAAA has "<pos:position pos:line="162" pos:column="80"/></literal> <operator pos:line="162" pos:column="81">&lt;&lt;<pos:position pos:line="162" pos:column="89"/></operator> <name><name pos:line="162" pos:column="84">q<pos:position pos:line="162" pos:column="85"/></name><operator pos:line="162" pos:column="85">-&gt;<pos:position pos:line="162" pos:column="90"/></operator><name pos:line="162" pos:column="87">initial_AAAA<pos:position pos:line="162" pos:column="99"/></name><operator pos:line="162" pos:column="99">.<pos:position pos:line="162" pos:column="100"/></operator><name pos:line="162" pos:column="100">count<pos:position pos:line="162" pos:column="105"/></name></name> <operator pos:line="162" pos:column="106">&lt;&lt;<pos:position pos:line="162" pos:column="114"/></operator> <literal type="string" pos:line="162" pos:column="109">" RR, A has "<pos:position pos:line="162" pos:column="122"/></literal> <operator pos:line="162" pos:column="123">&lt;&lt;<pos:position pos:line="162" pos:column="131"/></operator> <name pos:line="162" pos:column="126">n<pos:position pos:line="162" pos:column="127"/></name> <operator pos:line="162" pos:column="128">&lt;&lt;<pos:position pos:line="162" pos:column="136"/></operator> <literal type="string" pos:line="162" pos:column="131">" RR"<pos:position pos:line="162" pos:column="136"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="138"/></expr_stmt>

        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><name><name pos:line="164" pos:column="13">Config<pos:position pos:line="164" pos:column="19"/></name><operator pos:line="164" pos:column="19">.<pos:position pos:line="164" pos:column="20"/></operator><name pos:line="164" pos:column="20">dns<pos:position pos:line="164" pos:column="23"/></name><operator pos:line="164" pos:column="23">.<pos:position pos:line="164" pos:column="24"/></operator><name pos:line="164" pos:column="24">v4_first<pos:position pos:line="164" pos:column="32"/></name></name></expr>)<pos:position pos:line="164" pos:column="33"/></condition><then pos:line="164" pos:column="33"> <block pos:line="164" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="165" pos:column="13">memcpy<pos:position pos:line="165" pos:column="19"/></name><argument_list pos:line="165" pos:column="19">( <argument><expr><name pos:line="165" pos:column="21">tmp<pos:position pos:line="165" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="165" pos:column="26">message<pos:position pos:line="165" pos:column="33"/></name><operator pos:line="165" pos:column="33">-&gt;<pos:position pos:line="165" pos:column="38"/></operator><name pos:line="165" pos:column="35">answer<pos:position pos:line="165" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="43">(<pos:position pos:line="165" pos:column="44"/></operator><sizeof pos:line="165" pos:column="44">sizeof<argument_list pos:line="165" pos:column="50">(<argument><expr><name pos:line="165" pos:column="51">rfc1035_rr<pos:position pos:line="165" pos:column="61"/></name></expr></argument>)<pos:position pos:line="165" pos:column="62"/></argument_list></sizeof><operator pos:line="165" pos:column="62">*<pos:position pos:line="165" pos:column="63"/></operator><name pos:line="165" pos:column="63">n<pos:position pos:line="165" pos:column="64"/></name><operator pos:line="165" pos:column="64">)<pos:position pos:line="165" pos:column="65"/></operator></expr></argument> )<pos:position pos:line="165" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name pos:line="166" pos:column="13">tmp<pos:position pos:line="166" pos:column="16"/></name> <operator pos:line="166" pos:column="17">+=<pos:position pos:line="166" pos:column="19"/></operator> <name pos:line="166" pos:column="20">n<pos:position pos:line="166" pos:column="21"/></name></expr>;<pos:position pos:line="166" pos:column="22"/></expr_stmt>
            <comment type="block" pos:line="167" pos:column="13">/* free the RR object without freeing its child strings (they are now taken by the copy above) */</comment>
            <expr_stmt><expr><call><name pos:line="168" pos:column="13">safe_free<pos:position pos:line="168" pos:column="22"/></name><argument_list pos:line="168" pos:column="22">(<argument><expr><name><name pos:line="168" pos:column="23">message<pos:position pos:line="168" pos:column="30"/></name><operator pos:line="168" pos:column="30">-&gt;<pos:position pos:line="168" pos:column="35"/></operator><name pos:line="168" pos:column="32">answer<pos:position pos:line="168" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="168" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="171" pos:column="9">memcpy<pos:position pos:line="171" pos:column="15"/></name><argument_list pos:line="171" pos:column="15">(<argument><expr><name pos:line="171" pos:column="16">tmp<pos:position pos:line="171" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="171" pos:column="21">q<pos:position pos:line="171" pos:column="22"/></name><operator pos:line="171" pos:column="22">-&gt;<pos:position pos:line="171" pos:column="27"/></operator><name pos:line="171" pos:column="24">initial_AAAA<pos:position pos:line="171" pos:column="36"/></name><operator pos:line="171" pos:column="36">.<pos:position pos:line="171" pos:column="37"/></operator><name pos:line="171" pos:column="37">answers<pos:position pos:line="171" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="171" pos:column="46">(<pos:position pos:line="171" pos:column="47"/></operator><sizeof pos:line="171" pos:column="47">sizeof<argument_list pos:line="171" pos:column="53">(<argument><expr><name pos:line="171" pos:column="54">rfc1035_rr<pos:position pos:line="171" pos:column="64"/></name></expr></argument>)<pos:position pos:line="171" pos:column="65"/></argument_list></sizeof><operator pos:line="171" pos:column="65">*<pos:position pos:line="171" pos:column="66"/></operator><operator pos:line="171" pos:column="66">(<pos:position pos:line="171" pos:column="67"/></operator><name><name pos:line="171" pos:column="67">q<pos:position pos:line="171" pos:column="68"/></name><operator pos:line="171" pos:column="68">-&gt;<pos:position pos:line="171" pos:column="73"/></operator><name pos:line="171" pos:column="70">initial_AAAA<pos:position pos:line="171" pos:column="82"/></name><operator pos:line="171" pos:column="82">.<pos:position pos:line="171" pos:column="83"/></operator><name pos:line="171" pos:column="83">count<pos:position pos:line="171" pos:column="88"/></name></name><operator pos:line="171" pos:column="88">)<pos:position pos:line="171" pos:column="89"/></operator><operator pos:line="171" pos:column="89">)<pos:position pos:line="171" pos:column="90"/></operator></expr></argument> )<pos:position pos:line="171" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name pos:line="172" pos:column="9">tmp<pos:position pos:line="172" pos:column="12"/></name> <operator pos:line="172" pos:column="13">+=<pos:position pos:line="172" pos:column="15"/></operator> <name><name pos:line="172" pos:column="16">q<pos:position pos:line="172" pos:column="17"/></name><operator pos:line="172" pos:column="17">-&gt;<pos:position pos:line="172" pos:column="22"/></operator><name pos:line="172" pos:column="19">initial_AAAA<pos:position pos:line="172" pos:column="31"/></name><operator pos:line="172" pos:column="31">.<pos:position pos:line="172" pos:column="32"/></operator><name pos:line="172" pos:column="32">count<pos:position pos:line="172" pos:column="37"/></name></name></expr>;<pos:position pos:line="172" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="173" pos:column="9">/* free the RR object without freeing its child strings (they are now taken by the copy above) */</comment>
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">safe_free<pos:position pos:line="174" pos:column="18"/></name><argument_list pos:line="174" pos:column="18">(<argument><expr><name><name pos:line="174" pos:column="19">q<pos:position pos:line="174" pos:column="20"/></name><operator pos:line="174" pos:column="20">-&gt;<pos:position pos:line="174" pos:column="25"/></operator><name pos:line="174" pos:column="22">initial_AAAA<pos:position pos:line="174" pos:column="34"/></name><operator pos:line="174" pos:column="34">.<pos:position pos:line="174" pos:column="35"/></operator><name pos:line="174" pos:column="35">answers<pos:position pos:line="174" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="174" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="44"/></expr_stmt>

        <if pos:line="176" pos:column="9">if <condition pos:line="176" pos:column="12">(<expr><operator pos:line="176" pos:column="13">!<pos:position pos:line="176" pos:column="14"/></operator><name><name pos:line="176" pos:column="14">Config<pos:position pos:line="176" pos:column="20"/></name><operator pos:line="176" pos:column="20">.<pos:position pos:line="176" pos:column="21"/></operator><name pos:line="176" pos:column="21">dns<pos:position pos:line="176" pos:column="24"/></name><operator pos:line="176" pos:column="24">.<pos:position pos:line="176" pos:column="25"/></operator><name pos:line="176" pos:column="25">v4_first<pos:position pos:line="176" pos:column="33"/></name></name></expr>)<pos:position pos:line="176" pos:column="34"/></condition><then pos:line="176" pos:column="34"> <block pos:line="176" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="177" pos:column="13">memcpy<pos:position pos:line="177" pos:column="19"/></name><argument_list pos:line="177" pos:column="19">( <argument><expr><name pos:line="177" pos:column="21">tmp<pos:position pos:line="177" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="26">message<pos:position pos:line="177" pos:column="33"/></name><operator pos:line="177" pos:column="33">-&gt;<pos:position pos:line="177" pos:column="38"/></operator><name pos:line="177" pos:column="35">answer<pos:position pos:line="177" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="177" pos:column="43">(<pos:position pos:line="177" pos:column="44"/></operator><sizeof pos:line="177" pos:column="44">sizeof<argument_list pos:line="177" pos:column="50">(<argument><expr><name pos:line="177" pos:column="51">rfc1035_rr<pos:position pos:line="177" pos:column="61"/></name></expr></argument>)<pos:position pos:line="177" pos:column="62"/></argument_list></sizeof><operator pos:line="177" pos:column="62">*<pos:position pos:line="177" pos:column="63"/></operator><name pos:line="177" pos:column="63">n<pos:position pos:line="177" pos:column="64"/></name><operator pos:line="177" pos:column="64">)<pos:position pos:line="177" pos:column="65"/></operator></expr></argument> )<pos:position pos:line="177" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="68"/></expr_stmt>
            <comment type="block" pos:line="178" pos:column="13">/* free the RR object without freeing its child strings (they are now taken by the copy above) */</comment>
            <expr_stmt><expr><call><name pos:line="179" pos:column="13">safe_free<pos:position pos:line="179" pos:column="22"/></name><argument_list pos:line="179" pos:column="22">(<argument><expr><name><name pos:line="179" pos:column="23">message<pos:position pos:line="179" pos:column="30"/></name><operator pos:line="179" pos:column="30">-&gt;<pos:position pos:line="179" pos:column="35"/></operator><name pos:line="179" pos:column="32">answer<pos:position pos:line="179" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="182" pos:column="9">n<pos:position pos:line="182" pos:column="10"/></name> <operator pos:line="182" pos:column="11">+=<pos:position pos:line="182" pos:column="13"/></operator> <name><name pos:line="182" pos:column="14">q<pos:position pos:line="182" pos:column="15"/></name><operator pos:line="182" pos:column="15">-&gt;<pos:position pos:line="182" pos:column="20"/></operator><name pos:line="182" pos:column="17">initial_AAAA<pos:position pos:line="182" pos:column="29"/></name><operator pos:line="182" pos:column="29">.<pos:position pos:line="182" pos:column="30"/></operator><name pos:line="182" pos:column="30">count<pos:position pos:line="182" pos:column="35"/></name></name></expr>;<pos:position pos:line="182" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="183" pos:column="9">q<pos:position pos:line="183" pos:column="10"/></name><operator pos:line="183" pos:column="10">-&gt;<pos:position pos:line="183" pos:column="15"/></operator><name pos:line="183" pos:column="12">initial_AAAA<pos:position pos:line="183" pos:column="24"/></name><operator pos:line="183" pos:column="24">.<pos:position pos:line="183" pos:column="25"/></operator><name pos:line="183" pos:column="25">count<pos:position pos:line="183" pos:column="30"/></name></name> <operator pos:line="183" pos:column="31">=<pos:position pos:line="183" pos:column="32"/></operator> <literal type="number" pos:line="183" pos:column="33">0<pos:position pos:line="183" pos:column="34"/></literal></expr>;<pos:position pos:line="183" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="184" pos:column="9">message<pos:position pos:line="184" pos:column="16"/></name><operator pos:line="184" pos:column="16">-&gt;<pos:position pos:line="184" pos:column="21"/></operator><name pos:line="184" pos:column="18">answer<pos:position pos:line="184" pos:column="24"/></name></name> <operator pos:line="184" pos:column="25">=<pos:position pos:line="184" pos:column="26"/></operator> <name pos:line="184" pos:column="27">result<pos:position pos:line="184" pos:column="33"/></name></expr>;<pos:position pos:line="184" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="185" pos:column="9">message<pos:position pos:line="185" pos:column="16"/></name><operator pos:line="185" pos:column="16">-&gt;<pos:position pos:line="185" pos:column="21"/></operator><name pos:line="185" pos:column="18">ancount<pos:position pos:line="185" pos:column="25"/></name></name> <operator pos:line="185" pos:column="26">=<pos:position pos:line="185" pos:column="27"/></operator> <name pos:line="185" pos:column="28">n<pos:position pos:line="185" pos:column="29"/></name></expr>;<pos:position pos:line="185" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="186" pos:column="6"/></block></then> <elseif pos:line="186" pos:column="7">else <if pos:line="186" pos:column="12">if <condition pos:line="186" pos:column="15">(<expr><name><name pos:line="186" pos:column="16">q<pos:position pos:line="186" pos:column="17"/></name><operator pos:line="186" pos:column="17">-&gt;<pos:position pos:line="186" pos:column="22"/></operator><name pos:line="186" pos:column="19">initial_AAAA<pos:position pos:line="186" pos:column="31"/></name><operator pos:line="186" pos:column="31">.<pos:position pos:line="186" pos:column="32"/></operator><name pos:line="186" pos:column="32">count<pos:position pos:line="186" pos:column="37"/></name></name> <operator pos:line="186" pos:column="38">&gt;<pos:position pos:line="186" pos:column="42"/></operator> <literal type="number" pos:line="186" pos:column="40">0<pos:position pos:line="186" pos:column="41"/></literal> <operator pos:line="186" pos:column="42">&amp;&amp;<pos:position pos:line="186" pos:column="52"/></operator> <name pos:line="186" pos:column="45">n<pos:position pos:line="186" pos:column="46"/></name> <operator pos:line="186" pos:column="47">&lt;=<pos:position pos:line="186" pos:column="52"/></operator> <literal type="number" pos:line="186" pos:column="50">0<pos:position pos:line="186" pos:column="51"/></literal></expr>)<pos:position pos:line="186" pos:column="52"/></condition><then pos:line="186" pos:column="52"> <block pos:line="186" pos:column="53">{
        <comment type="block" pos:line="187" pos:column="9">/* initial of dual queries was the only result set. */</comment>
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">debugs<pos:position pos:line="188" pos:column="15"/></name><argument_list pos:line="188" pos:column="15">(<argument><expr><literal type="number" pos:line="188" pos:column="16">78<pos:position pos:line="188" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="20">6<pos:position pos:line="188" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="23">HERE<pos:position pos:line="188" pos:column="27"/></name> <operator pos:line="188" pos:column="28">&lt;&lt;<pos:position pos:line="188" pos:column="36"/></operator> <literal type="string" pos:line="188" pos:column="31">"Merging DNS results "<pos:position pos:line="188" pos:column="53"/></literal> <operator pos:line="188" pos:column="54">&lt;&lt;<pos:position pos:line="188" pos:column="62"/></operator> <name><name pos:line="188" pos:column="57">q<pos:position pos:line="188" pos:column="58"/></name><operator pos:line="188" pos:column="58">-&gt;<pos:position pos:line="188" pos:column="63"/></operator><name pos:line="188" pos:column="60">name<pos:position pos:line="188" pos:column="64"/></name></name> <operator pos:line="188" pos:column="65">&lt;&lt;<pos:position pos:line="188" pos:column="73"/></operator> <literal type="string" pos:line="188" pos:column="68">" AAAA has "<pos:position pos:line="188" pos:column="80"/></literal> <operator pos:line="188" pos:column="81">&lt;&lt;<pos:position pos:line="188" pos:column="89"/></operator> <name><name pos:line="188" pos:column="84">q<pos:position pos:line="188" pos:column="85"/></name><operator pos:line="188" pos:column="85">-&gt;<pos:position pos:line="188" pos:column="90"/></operator><name pos:line="188" pos:column="87">initial_AAAA<pos:position pos:line="188" pos:column="99"/></name><operator pos:line="188" pos:column="99">.<pos:position pos:line="188" pos:column="100"/></operator><name pos:line="188" pos:column="100">count<pos:position pos:line="188" pos:column="105"/></name></name> <operator pos:line="188" pos:column="106">&lt;&lt;<pos:position pos:line="188" pos:column="114"/></operator> <literal type="string" pos:line="188" pos:column="109">" RR, A has "<pos:position pos:line="188" pos:column="122"/></literal> <operator pos:line="188" pos:column="123">&lt;&lt;<pos:position pos:line="188" pos:column="131"/></operator> <name pos:line="188" pos:column="126">n<pos:position pos:line="188" pos:column="127"/></name> <operator pos:line="188" pos:column="128">&lt;&lt;<pos:position pos:line="188" pos:column="136"/></operator> <literal type="string" pos:line="188" pos:column="131">" RR"<pos:position pos:line="188" pos:column="136"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="138"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="189" pos:column="9">rfc1035RRDestroy<pos:position pos:line="189" pos:column="25"/></name><argument_list pos:line="189" pos:column="25">(<argument><expr><operator pos:line="189" pos:column="26">&amp;<pos:position pos:line="189" pos:column="31"/></operator><operator pos:line="189" pos:column="27">(<pos:position pos:line="189" pos:column="28"/></operator><name><name pos:line="189" pos:column="28">message<pos:position pos:line="189" pos:column="35"/></name><operator pos:line="189" pos:column="35">-&gt;<pos:position pos:line="189" pos:column="40"/></operator><name pos:line="189" pos:column="37">answer<pos:position pos:line="189" pos:column="43"/></name></name><operator pos:line="189" pos:column="43">)<pos:position pos:line="189" pos:column="44"/></operator></expr></argument>, <argument><expr><name pos:line="189" pos:column="46">n<pos:position pos:line="189" pos:column="47"/></name></expr></argument>)<pos:position pos:line="189" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="190" pos:column="9">message<pos:position pos:line="190" pos:column="16"/></name><operator pos:line="190" pos:column="16">-&gt;<pos:position pos:line="190" pos:column="21"/></operator><name pos:line="190" pos:column="18">answer<pos:position pos:line="190" pos:column="24"/></name></name> <operator pos:line="190" pos:column="25">=<pos:position pos:line="190" pos:column="26"/></operator> <name><name pos:line="190" pos:column="27">q<pos:position pos:line="190" pos:column="28"/></name><operator pos:line="190" pos:column="28">-&gt;<pos:position pos:line="190" pos:column="33"/></operator><name pos:line="190" pos:column="30">initial_AAAA<pos:position pos:line="190" pos:column="42"/></name><operator pos:line="190" pos:column="42">.<pos:position pos:line="190" pos:column="43"/></operator><name pos:line="190" pos:column="43">answers<pos:position pos:line="190" pos:column="50"/></name></name></expr>;<pos:position pos:line="190" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="191" pos:column="9">n<pos:position pos:line="191" pos:column="10"/></name> <operator pos:line="191" pos:column="11">=<pos:position pos:line="191" pos:column="12"/></operator> <name><name pos:line="191" pos:column="13">q<pos:position pos:line="191" pos:column="14"/></name><operator pos:line="191" pos:column="14">-&gt;<pos:position pos:line="191" pos:column="19"/></operator><name pos:line="191" pos:column="16">initial_AAAA<pos:position pos:line="191" pos:column="28"/></name><operator pos:line="191" pos:column="28">.<pos:position pos:line="191" pos:column="29"/></operator><name pos:line="191" pos:column="29">count<pos:position pos:line="191" pos:column="34"/></name></name></expr>;<pos:position pos:line="191" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="192" pos:column="9">message<pos:position pos:line="192" pos:column="16"/></name><operator pos:line="192" pos:column="16">-&gt;<pos:position pos:line="192" pos:column="21"/></operator><name pos:line="192" pos:column="18">ancount<pos:position pos:line="192" pos:column="25"/></name></name> <operator pos:line="192" pos:column="26">=<pos:position pos:line="192" pos:column="27"/></operator> <name pos:line="192" pos:column="28">n<pos:position pos:line="192" pos:column="29"/></name></expr>;<pos:position pos:line="192" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if></elseif></if>
    <comment type="block" pos:line="194" pos:column="5">/* else initial results were empty. just use the final set as authoritative */</comment>

    <expr_stmt><expr><call><name pos:line="196" pos:column="5">debugs<pos:position pos:line="196" pos:column="11"/></name><argument_list pos:line="196" pos:column="11">(<argument><expr><literal type="number" pos:line="196" pos:column="12">78<pos:position pos:line="196" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="196" pos:column="16">6<pos:position pos:line="196" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="19">HERE<pos:position pos:line="196" pos:column="23"/></name> <operator pos:line="196" pos:column="24">&lt;&lt;<pos:position pos:line="196" pos:column="32"/></operator> <literal type="string" pos:line="196" pos:column="27">"Sending "<pos:position pos:line="196" pos:column="37"/></literal> <operator pos:line="196" pos:column="38">&lt;&lt;<pos:position pos:line="196" pos:column="46"/></operator> <name pos:line="196" pos:column="41">n<pos:position pos:line="196" pos:column="42"/></name> <operator pos:line="196" pos:column="43">&lt;&lt;<pos:position pos:line="196" pos:column="51"/></operator> <literal type="string" pos:line="196" pos:column="46">" DNS results to caller."<pos:position pos:line="196" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="197" pos:column="5">idnsCallback<pos:position pos:line="197" pos:column="17"/></name><argument_list pos:line="197" pos:column="17">(<argument><expr><name pos:line="197" pos:column="18">q<pos:position pos:line="197" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="21">message<pos:position pos:line="197" pos:column="28"/></name><operator pos:line="197" pos:column="28">-&gt;<pos:position pos:line="197" pos:column="33"/></operator><name pos:line="197" pos:column="30">answer<pos:position pos:line="197" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="38">n<pos:position pos:line="197" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="197" pos:column="41">q<pos:position pos:line="197" pos:column="42"/></name><operator pos:line="197" pos:column="42">-&gt;<pos:position pos:line="197" pos:column="47"/></operator><name pos:line="197" pos:column="44">error<pos:position pos:line="197" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="198" pos:column="5">rfc1035MessageDestroy<pos:position pos:line="198" pos:column="26"/></name><argument_list pos:line="198" pos:column="26">(<argument><expr><operator pos:line="198" pos:column="27">&amp;<pos:position pos:line="198" pos:column="32"/></operator><name pos:line="198" pos:column="28">message<pos:position pos:line="198" pos:column="35"/></name></expr></argument>)<pos:position pos:line="198" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">cbdataFree<pos:position pos:line="199" pos:column="15"/></name><argument_list pos:line="199" pos:column="15">(<argument><expr><name pos:line="199" pos:column="16">q<pos:position pos:line="199" pos:column="17"/></name></expr></argument>)<pos:position pos:line="199" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="19"/></expr_stmt>
}<pos:position pos:line="200" pos:column="2"/></block></function></unit>

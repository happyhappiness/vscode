<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6837_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIVariableReferer<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">eval<pos:position pos:line="2" pos:column="25"/></name></name> <parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">ESIVarState<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">state<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">char<pos:position pos:line="2" pos:column="51"/></name> <specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">subref<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">char<pos:position pos:line="2" pos:column="71"/></name> <specifier pos:line="2" pos:column="72">const<pos:position pos:line="2" pos:column="77"/></specifier> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">found_default<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="93"/></parameter_list> <specifier pos:line="2" pos:column="94">const<pos:position pos:line="2" pos:column="99"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">s<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">state<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">refererUsed<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">subref<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&amp;&amp;<pos:position pos:line="7" pos:column="27"/></operator> <call><name><name pos:line="7" pos:column="20">state<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">header<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><call><name pos:line="7" pos:column="35">has<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">Http<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">::<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="45">HdrType<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">::<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">REFERER<pos:position pos:line="7" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="63"/></condition><then pos:line="7" pos:column="63">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">s<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name><name pos:line="8" pos:column="13">state<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">header<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">()<pos:position pos:line="8" pos:column="27"/></argument_list></call><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><call><name pos:line="8" pos:column="28">getStr<pos:position pos:line="8" pos:column="34"/></name> <argument_list pos:line="8" pos:column="35">(<argument><expr><name><name pos:line="8" pos:column="36">Http<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">::<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">HdrType<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">::<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="51">REFERER<pos:position pos:line="8" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">found_default<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">ESISegment<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">::<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">ListAppend<pos:position pos:line="12" pos:column="27"/></name></name> <argument_list pos:line="12" pos:column="28">(<argument><expr><call><name><name pos:line="12" pos:column="29">state<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">getOutput<pos:position pos:line="12" pos:column="44"/></name></name><argument_list pos:line="12" pos:column="44">()<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">s<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="51">strlen<pos:position pos:line="12" pos:column="57"/></name> <argument_list pos:line="12" pos:column="58">(<argument><expr><name pos:line="12" pos:column="59">s<pos:position pos:line="12" pos:column="60"/></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

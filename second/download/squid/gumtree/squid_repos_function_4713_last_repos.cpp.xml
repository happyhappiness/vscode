<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4713_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">SBuf<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">size_type<pos:position pos:line="1" pos:column="16"/></name></name></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">reserve<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">SBufReservationRequirements<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">req<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">24<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">id<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&lt;&lt;<pos:position pos:line="4" pos:column="30"/></operator> <literal type="string" pos:line="4" pos:column="25">" was: "<pos:position pos:line="4" pos:column="33"/></literal> <operator pos:line="4" pos:column="34">&lt;&lt;<pos:position pos:line="4" pos:column="42"/></operator> <name pos:line="4" pos:column="37">off_<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">&lt;&lt;<pos:position pos:line="4" pos:column="50"/></operator> <literal type="char" pos:line="4" pos:column="45">'+'<pos:position pos:line="4" pos:column="48"/></literal> <operator pos:line="4" pos:column="49">&lt;&lt;<pos:position pos:line="4" pos:column="57"/></operator> <name pos:line="4" pos:column="52">len_<pos:position pos:line="4" pos:column="56"/></name> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <literal type="char" pos:line="4" pos:column="60">'+'<pos:position pos:line="4" pos:column="63"/></literal> <operator pos:line="4" pos:column="64">&lt;&lt;<pos:position pos:line="4" pos:column="72"/></operator> <call><name pos:line="4" pos:column="67">spaceSize<pos:position pos:line="4" pos:column="76"/></name><argument_list pos:line="4" pos:column="76">()<pos:position pos:line="4" pos:column="78"/></argument_list></call> <operator pos:line="4" pos:column="79">&lt;&lt;<pos:position pos:line="4" pos:column="87"/></operator>
           <literal type="char" pos:line="5" pos:column="12">'='<pos:position pos:line="5" pos:column="15"/></literal> <operator pos:line="5" pos:column="16">&lt;&lt;<pos:position pos:line="5" pos:column="24"/></operator> <name><name pos:line="5" pos:column="19">store_<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">capacity<pos:position pos:line="5" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">bool<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">mustRealloc<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><operator pos:line="7" pos:column="30">!<pos:position pos:line="7" pos:column="31"/></operator><name><name pos:line="7" pos:column="31">req<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">allowShared<pos:position pos:line="7" pos:column="46"/></name></name> <operator pos:line="7" pos:column="47">&amp;&amp;<pos:position pos:line="7" pos:column="57"/></operator> <call><name><name pos:line="7" pos:column="50">store_<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">LockCount<pos:position pos:line="7" pos:column="67"/></name></name><argument_list pos:line="7" pos:column="67">()<pos:position pos:line="7" pos:column="69"/></argument_list></call> <operator pos:line="7" pos:column="70">&gt;<pos:position pos:line="7" pos:column="74"/></operator> <literal type="number" pos:line="7" pos:column="72">1<pos:position pos:line="7" pos:column="73"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="74"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">mustRealloc<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&amp;&amp;<pos:position pos:line="9" pos:column="32"/></operator> <call><name pos:line="9" pos:column="25">spaceSize<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">()<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">&gt;=<pos:position pos:line="9" pos:column="42"/></operator> <name><name pos:line="9" pos:column="40">req<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">.<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">minSpace<pos:position pos:line="9" pos:column="52"/></name></name></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">spaceSize<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">()<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></return></block></then></if> <comment type="line" pos:line="10" pos:column="29">// the caller is content with what we have</comment>

    <comment type="block" pos:line="12" pos:column="5">/* only reallocation can make the caller happy */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">mustRealloc<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">&amp;&amp;<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="25">len_<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&gt;=<pos:position pos:line="14" pos:column="35"/></operator> <name><name pos:line="14" pos:column="33">req<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">maxCapacity<pos:position pos:line="14" pos:column="48"/></name></name></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">spaceSize<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">()<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></return></block></then></if> <comment type="line" pos:line="15" pos:column="29">// but we cannot reallocate</comment>

    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">size_type<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">desiredSpace<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><call><name><name pos:line="17" pos:column="36">std<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">::<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">max<pos:position pos:line="17" pos:column="44"/></name></name><argument_list pos:line="17" pos:column="44">(<argument><expr><name><name pos:line="17" pos:column="45">req<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">minSpace<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="59">req<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">.<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="63">idealSpace<pos:position pos:line="17" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="75"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">size_type<pos:position pos:line="18" pos:column="20"/></name></type> <name pos:line="18" pos:column="21">newSpace<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><call><name><name pos:line="18" pos:column="32">std<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">::<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">min<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name pos:line="18" pos:column="41">desiredSpace<pos:position pos:line="18" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">maxSize<pos:position pos:line="18" pos:column="62"/></name> <operator pos:line="18" pos:column="63">-<pos:position pos:line="18" pos:column="64"/></operator> <name pos:line="18" pos:column="65">len_<pos:position pos:line="18" pos:column="69"/></name></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="71"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">reserveCapacity<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><call><name><name pos:line="19" pos:column="21">std<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">::<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">min<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">len_<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">+<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="37">newSpace<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="47">req<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">maxCapacity<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">24<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">7<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="19">id<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&lt;&lt;<pos:position pos:line="20" pos:column="30"/></operator> <literal type="string" pos:line="20" pos:column="25">" now: "<pos:position pos:line="20" pos:column="33"/></literal> <operator pos:line="20" pos:column="34">&lt;&lt;<pos:position pos:line="20" pos:column="42"/></operator> <name pos:line="20" pos:column="37">off_<pos:position pos:line="20" pos:column="41"/></name> <operator pos:line="20" pos:column="42">&lt;&lt;<pos:position pos:line="20" pos:column="50"/></operator> <literal type="char" pos:line="20" pos:column="45">'+'<pos:position pos:line="20" pos:column="48"/></literal> <operator pos:line="20" pos:column="49">&lt;&lt;<pos:position pos:line="20" pos:column="57"/></operator> <name pos:line="20" pos:column="52">len_<pos:position pos:line="20" pos:column="56"/></name> <operator pos:line="20" pos:column="57">&lt;&lt;<pos:position pos:line="20" pos:column="65"/></operator> <literal type="char" pos:line="20" pos:column="60">'+'<pos:position pos:line="20" pos:column="63"/></literal> <operator pos:line="20" pos:column="64">&lt;&lt;<pos:position pos:line="20" pos:column="72"/></operator> <call><name pos:line="20" pos:column="67">spaceSize<pos:position pos:line="20" pos:column="76"/></name><argument_list pos:line="20" pos:column="76">()<pos:position pos:line="20" pos:column="78"/></argument_list></call> <operator pos:line="20" pos:column="79">&lt;&lt;<pos:position pos:line="20" pos:column="87"/></operator>
           <literal type="char" pos:line="21" pos:column="12">'='<pos:position pos:line="21" pos:column="15"/></literal> <operator pos:line="21" pos:column="16">&lt;&lt;<pos:position pos:line="21" pos:column="24"/></operator> <name><name pos:line="21" pos:column="19">store_<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">capacity<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><call><name pos:line="22" pos:column="12">spaceSize<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></return> <comment type="line" pos:line="22" pos:column="25">// reallocated and probably reserved enough space</comment>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

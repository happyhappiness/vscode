<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3533_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">storeRebuildProgress<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">sd_index<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">total<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">sofar<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">time_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">last_report<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="number" pos:line="4" pos:column="33">0<pos:position pos:line="4" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">double<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">n<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0.0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">double<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">d<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0.0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">sd_index<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&lt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">sd_index<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&gt;=<pos:position pos:line="11" pos:column="23"/></operator> <name><name pos:line="11" pos:column="21">Config<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">cacheSwap<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">n_configured<pos:position pos:line="11" pos:column="50"/></name></name></expr>)<pos:position pos:line="11" pos:column="51"/></condition><then pos:line="11" pos:column="51">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">NULL<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">RebuildProgress<pos:position pos:line="14" pos:column="32"/></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
        <block type="pseudo"><return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">RebuildProgress<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><name pos:line="17" pos:column="21">sd_index<pos:position pos:line="17" pos:column="29"/></name></expr>]<pos:position pos:line="17" pos:column="30"/></index></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">total<pos:position pos:line="17" pos:column="36"/></name> <operator pos:line="17" pos:column="37">=<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="39">total<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">RebuildProgress<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">sd_index<pos:position pos:line="19" pos:column="29"/></name></expr>]<pos:position pos:line="19" pos:column="30"/></index></name><operator pos:line="19" pos:column="30">.<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">scanned<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">=<pos:position pos:line="19" pos:column="40"/></operator> <name pos:line="19" pos:column="41">sofar<pos:position pos:line="19" pos:column="46"/></name></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">squid_curtime<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">-<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">last_report<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&lt;<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="39">15<pos:position pos:line="21" pos:column="41"/></literal></expr>)<pos:position pos:line="21" pos:column="42"/></condition><then pos:line="21" pos:column="42">
        <block type="pseudo"><return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return></block></then></if>

    <for pos:line="24" pos:column="5">for <control pos:line="24" pos:column="9">(<init><expr><name pos:line="24" pos:column="10">sd_index<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="number" pos:line="24" pos:column="21">0<pos:position pos:line="24" pos:column="22"/></literal></expr>;<pos:position pos:line="24" pos:column="23"/></init> <condition><expr><name pos:line="24" pos:column="24">sd_index<pos:position pos:line="24" pos:column="32"/></name> <operator pos:line="24" pos:column="33">&lt;<pos:position pos:line="24" pos:column="37"/></operator> <name><name pos:line="24" pos:column="35">Config<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">cacheSwap<pos:position pos:line="24" pos:column="51"/></name><operator pos:line="24" pos:column="51">.<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="52">n_configured<pos:position pos:line="24" pos:column="64"/></name></name></expr>;<pos:position pos:line="24" pos:column="65"/></condition> <incr><expr><name pos:line="24" pos:column="66">sd_index<pos:position pos:line="24" pos:column="74"/></name><operator pos:line="24" pos:column="74">++<pos:position pos:line="24" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="77"/></control> <block pos:line="24" pos:column="78">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">n<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">+=<pos:position pos:line="25" pos:column="13"/></operator> <operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">double<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">)<pos:position pos:line="25" pos:column="22"/></operator> <name><name pos:line="25" pos:column="23">RebuildProgress<pos:position pos:line="25" pos:column="38"/></name><index pos:line="25" pos:column="38">[<expr><name pos:line="25" pos:column="39">sd_index<pos:position pos:line="25" pos:column="47"/></name></expr>]<pos:position pos:line="25" pos:column="48"/></index></name><operator pos:line="25" pos:column="48">.<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">scanned<pos:position pos:line="25" pos:column="56"/></name></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">d<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">+=<pos:position pos:line="26" pos:column="13"/></operator> <operator pos:line="26" pos:column="14">(<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">double<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">)<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">RebuildProgress<pos:position pos:line="26" pos:column="38"/></name><index pos:line="26" pos:column="38">[<expr><name pos:line="26" pos:column="39">sd_index<pos:position pos:line="26" pos:column="47"/></name></expr>]<pos:position pos:line="26" pos:column="48"/></index></name><operator pos:line="26" pos:column="48">.<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">total<pos:position pos:line="26" pos:column="54"/></name></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">20<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="19">"Store rebuilding is "<pos:position pos:line="29" pos:column="41"/></literal><operator pos:line="29" pos:column="41">&lt;&lt;<pos:position pos:line="29" pos:column="49"/></operator> <call><name><name pos:line="29" pos:column="44">std<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">::<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">setw<pos:position pos:line="29" pos:column="53"/></name></name><argument_list pos:line="29" pos:column="53">(<argument><expr><literal type="number" pos:line="29" pos:column="54">4<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call><operator pos:line="29" pos:column="56">&lt;&lt;<pos:position pos:line="29" pos:column="64"/></operator> <call><name><name pos:line="29" pos:column="59">std<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">::<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="64">setprecision<pos:position pos:line="29" pos:column="76"/></name></name><argument_list pos:line="29" pos:column="76">(<argument><expr><literal type="number" pos:line="29" pos:column="77">2<pos:position pos:line="29" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call> <operator pos:line="29" pos:column="80">&lt;&lt;<pos:position pos:line="29" pos:column="88"/></operator> <literal type="number" pos:line="29" pos:column="83">100.0<pos:position pos:line="29" pos:column="88"/></literal> <operator pos:line="29" pos:column="89">*<pos:position pos:line="29" pos:column="90"/></operator> <name pos:line="29" pos:column="91">n<pos:position pos:line="29" pos:column="92"/></name> <operator pos:line="29" pos:column="93">/<pos:position pos:line="29" pos:column="94"/></operator> <name pos:line="29" pos:column="95">d<pos:position pos:line="29" pos:column="96"/></name> <operator pos:line="29" pos:column="97">&lt;&lt;<pos:position pos:line="29" pos:column="105"/></operator> <literal type="string" pos:line="29" pos:column="100">"% complete"<pos:position pos:line="29" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">last_report<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">squid_curtime<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

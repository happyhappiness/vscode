<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1945_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreHashIndex<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">init<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">Store<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">objectsPerBucket<pos:position pos:line="4" pos:column="38"/></name></name> <operator pos:line="4" pos:column="39">&lt;=<pos:position pos:line="4" pos:column="44"/></operator> <literal type="number" pos:line="4" pos:column="42">0<pos:position pos:line="4" pos:column="43"/></literal></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">fatal<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="string" pos:line="5" pos:column="15">"'store_objects_per_bucket' should be larger than 0."<pos:position pos:line="5" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">Config<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">Store<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">avgObjectSize<pos:position pos:line="7" pos:column="35"/></name></name> <operator pos:line="7" pos:column="36">&lt;=<pos:position pos:line="7" pos:column="41"/></operator> <literal type="number" pos:line="7" pos:column="39">0<pos:position pos:line="7" pos:column="40"/></literal></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">fatal<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="string" pos:line="8" pos:column="15">"'store_avg_object_size' should be larger than 0."<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="10" pos:column="5">/* Calculate size of hash table (maximum currently 64k buckets).  */</comment>
    <comment type="block" pos:line="11" pos:column="5">/* this is very bogus, its specific to the any Store maintaining an
     * in-core index, not global */</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">buckets<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><call><name><name pos:line="13" pos:column="23">Store<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">::<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">Root<pos:position pos:line="13" pos:column="34"/></name></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><call><name pos:line="13" pos:column="37">maxSize<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">()<pos:position pos:line="13" pos:column="46"/></argument_list></call> <operator pos:line="13" pos:column="47">+<pos:position pos:line="13" pos:column="48"/></operator> <name><name pos:line="13" pos:column="49">Config<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">.<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="56">memMaxSize<pos:position pos:line="13" pos:column="66"/></name></name><operator pos:line="13" pos:column="66">)<pos:position pos:line="13" pos:column="67"/></operator> <operator pos:line="13" pos:column="68">/<pos:position pos:line="13" pos:column="69"/></operator> <name><name pos:line="13" pos:column="70">Config<pos:position pos:line="13" pos:column="76"/></name><operator pos:line="13" pos:column="76">.<pos:position pos:line="13" pos:column="77"/></operator><name pos:line="13" pos:column="77">Store<pos:position pos:line="13" pos:column="82"/></name><operator pos:line="13" pos:column="82">.<pos:position pos:line="13" pos:column="83"/></operator><name pos:line="13" pos:column="83">avgObjectSize<pos:position pos:line="13" pos:column="96"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="97"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">20<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="16">DBG_IMPORTANT<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"Swap maxSize "<pos:position pos:line="14" pos:column="46"/></literal> <operator pos:line="14" pos:column="47">&lt;&lt;<pos:position pos:line="14" pos:column="55"/></operator> <operator pos:line="14" pos:column="50">(<pos:position pos:line="14" pos:column="51"/></operator><call><name><name pos:line="14" pos:column="51">Store<pos:position pos:line="14" pos:column="56"/></name><operator pos:line="14" pos:column="56">::<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="58">Root<pos:position pos:line="14" pos:column="62"/></name></name><argument_list pos:line="14" pos:column="62">()<pos:position pos:line="14" pos:column="64"/></argument_list></call><operator pos:line="14" pos:column="64">.<pos:position pos:line="14" pos:column="65"/></operator><call><name pos:line="14" pos:column="65">maxSize<pos:position pos:line="14" pos:column="72"/></name><argument_list pos:line="14" pos:column="72">()<pos:position pos:line="14" pos:column="74"/></argument_list></call> <operator pos:line="14" pos:column="75">&gt;&gt;<pos:position pos:line="14" pos:column="80"/></operator> <literal type="number" pos:line="14" pos:column="78">10<pos:position pos:line="14" pos:column="80"/></literal><operator pos:line="14" pos:column="80">)<pos:position pos:line="14" pos:column="81"/></operator> <operator pos:line="14" pos:column="82">&lt;&lt;<pos:position pos:line="14" pos:column="90"/></operator>
           <literal type="string" pos:line="15" pos:column="12">" + "<pos:position pos:line="15" pos:column="17"/></literal> <operator pos:line="15" pos:column="18">&lt;&lt;<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="21">(<pos:position pos:line="15" pos:column="22"/></operator> <name><name pos:line="15" pos:column="23">Config<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">memMaxSize<pos:position pos:line="15" pos:column="40"/></name></name> <operator pos:line="15" pos:column="41">&gt;&gt;<pos:position pos:line="15" pos:column="46"/></operator> <literal type="number" pos:line="15" pos:column="44">10<pos:position pos:line="15" pos:column="46"/></literal><operator pos:line="15" pos:column="46">)<pos:position pos:line="15" pos:column="47"/></operator> <operator pos:line="15" pos:column="48">&lt;&lt;<pos:position pos:line="15" pos:column="56"/></operator> <literal type="string" pos:line="15" pos:column="51">" KB, estimated "<pos:position pos:line="15" pos:column="68"/></literal> <operator pos:line="15" pos:column="69">&lt;&lt;<pos:position pos:line="15" pos:column="77"/></operator> <name pos:line="15" pos:column="72">buckets<pos:position pos:line="15" pos:column="79"/></name> <operator pos:line="15" pos:column="80">&lt;&lt;<pos:position pos:line="15" pos:column="88"/></operator> <literal type="string" pos:line="15" pos:column="83">" objects"<pos:position pos:line="15" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="95"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">buckets<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">/=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">Config<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">Store<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">objectsPerBucket<pos:position pos:line="16" pos:column="45"/></name></name></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">20<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="16">DBG_IMPORTANT<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"Target number of buckets: "<pos:position pos:line="17" pos:column="59"/></literal> <operator pos:line="17" pos:column="60">&lt;&lt;<pos:position pos:line="17" pos:column="68"/></operator> <name pos:line="17" pos:column="63">buckets<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
    <comment type="block" pos:line="18" pos:column="5">/* ideally the full scan period should be configurable, for the
     * moment it remains at approximately 24 hours.  */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">store_hash_buckets<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">=<pos:position pos:line="20" pos:column="25"/></operator> <call><name pos:line="20" pos:column="26">storeKeyHashBuckets<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">buckets<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">20<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="16">DBG_IMPORTANT<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="31">"Using "<pos:position pos:line="21" pos:column="39"/></literal> <operator pos:line="21" pos:column="40">&lt;&lt;<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="43">store_hash_buckets<pos:position pos:line="21" pos:column="61"/></name> <operator pos:line="21" pos:column="62">&lt;&lt;<pos:position pos:line="21" pos:column="70"/></operator> <literal type="string" pos:line="21" pos:column="65">" Store buckets"<pos:position pos:line="21" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">20<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="16">DBG_IMPORTANT<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="31">"Max Mem  size: "<pos:position pos:line="22" pos:column="48"/></literal> <operator pos:line="22" pos:column="49">&lt;&lt;<pos:position pos:line="22" pos:column="57"/></operator> <operator pos:line="22" pos:column="52">(<pos:position pos:line="22" pos:column="53"/></operator> <name><name pos:line="22" pos:column="54">Config<pos:position pos:line="22" pos:column="60"/></name><operator pos:line="22" pos:column="60">.<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="61">memMaxSize<pos:position pos:line="22" pos:column="71"/></name></name> <operator pos:line="22" pos:column="72">&gt;&gt;<pos:position pos:line="22" pos:column="77"/></operator> <literal type="number" pos:line="22" pos:column="75">10<pos:position pos:line="22" pos:column="77"/></literal><operator pos:line="22" pos:column="77">)<pos:position pos:line="22" pos:column="78"/></operator> <operator pos:line="22" pos:column="79">&lt;&lt;<pos:position pos:line="22" pos:column="87"/></operator> <literal type="string" pos:line="22" pos:column="82">" KB"<pos:position pos:line="22" pos:column="87"/></literal> <operator pos:line="22" pos:column="88">&lt;&lt;<pos:position pos:line="22" pos:column="96"/></operator>
           <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="23" pos:column="13">Config<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">memShared<pos:position pos:line="23" pos:column="29"/></name></name></expr> ?<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <expr><literal type="string" pos:line="23" pos:column="32">" [shared]"<pos:position pos:line="23" pos:column="43"/></literal></expr> <pos:position pos:line="23" pos:column="44"/></then><else pos:line="23" pos:column="44">: <expr><literal type="string" pos:line="23" pos:column="46">""<pos:position pos:line="23" pos:column="48"/></literal></expr></else></ternary><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">20<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="16">DBG_IMPORTANT<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"Max Swap size: "<pos:position pos:line="24" pos:column="48"/></literal> <operator pos:line="24" pos:column="49">&lt;&lt;<pos:position pos:line="24" pos:column="57"/></operator> <operator pos:line="24" pos:column="52">(<pos:position pos:line="24" pos:column="53"/></operator><call><name><name pos:line="24" pos:column="53">Store<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">::<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">Root<pos:position pos:line="24" pos:column="64"/></name></name><argument_list pos:line="24" pos:column="64">()<pos:position pos:line="24" pos:column="66"/></argument_list></call><operator pos:line="24" pos:column="66">.<pos:position pos:line="24" pos:column="67"/></operator><call><name pos:line="24" pos:column="67">maxSize<pos:position pos:line="24" pos:column="74"/></name><argument_list pos:line="24" pos:column="74">()<pos:position pos:line="24" pos:column="76"/></argument_list></call> <operator pos:line="24" pos:column="77">&gt;&gt;<pos:position pos:line="24" pos:column="82"/></operator> <literal type="number" pos:line="24" pos:column="80">10<pos:position pos:line="24" pos:column="82"/></literal><operator pos:line="24" pos:column="82">)<pos:position pos:line="24" pos:column="83"/></operator> <operator pos:line="24" pos:column="84">&lt;&lt;<pos:position pos:line="24" pos:column="92"/></operator> <literal type="string" pos:line="24" pos:column="87">" KB"<pos:position pos:line="24" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="94"/></expr_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">store_table<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">hash_create<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">storeKeyHashCmp<pos:position pos:line="26" pos:column="46"/></name></expr></argument>,
                              <argument><expr><name pos:line="27" pos:column="31">store_hash_buckets<pos:position pos:line="27" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="51">storeKeyHashHash<pos:position pos:line="27" pos:column="67"/></name></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><decl><type><name pos:line="29" pos:column="10">int<pos:position pos:line="29" pos:column="13"/></name></type> <name pos:line="29" pos:column="14">i<pos:position pos:line="29" pos:column="15"/></name> <init pos:line="29" pos:column="16">= <expr><literal type="number" pos:line="29" pos:column="18">0<pos:position pos:line="29" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="20"/></init> <condition><expr><name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <name><name pos:line="29" pos:column="25">Config<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">cacheSwap<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">.<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">n_configured<pos:position pos:line="29" pos:column="54"/></name></name></expr>;<pos:position pos:line="29" pos:column="55"/></condition> <incr><expr><operator pos:line="29" pos:column="56">++<pos:position pos:line="29" pos:column="58"/></operator><name pos:line="29" pos:column="58">i<pos:position pos:line="29" pos:column="59"/></name></expr></incr>)<pos:position pos:line="29" pos:column="60"/></control> <block pos:line="29" pos:column="61">{
        <comment type="block" pos:line="30" pos:column="9">/* this starts a search of the store dirs, loading their
         * index. under the new Store api this should be
         * driven by the StoreHashIndex, not by each store.
        *
        * That is, the HashIndex should perform a search of each dir it is
        * indexing to do the hash insertions. The search is then able to
        * decide 'from-memory', or 'from-clean-log' or 'from-dirty-log' or
        * 'from-no-log'.
        *
         * Step 1: make the store rebuilds use a search internally
        * Step 2: change the search logic to use the four modes described
        *         above
        * Step 3: have the hash index walk the searches itself.
         */</comment>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">dir<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">i<pos:position pos:line="44" pos:column="18"/></name></expr></argument>)<pos:position pos:line="44" pos:column="19"/></argument_list></call><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><call><name pos:line="44" pos:column="20">active<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">()<pos:position pos:line="44" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">store<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">i<pos:position pos:line="45" pos:column="20"/></name></expr></argument>)<pos:position pos:line="45" pos:column="21"/></argument_list></call><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><call><name pos:line="45" pos:column="23">init<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">()<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></for>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

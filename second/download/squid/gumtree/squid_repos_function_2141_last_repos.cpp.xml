<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2141_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ssize_t<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">htcpBuildData<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">buf<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">size_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">buflen<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">htcpStuff<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">stuff<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ssize_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">off<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ssize_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">op_data_sz<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">hdr_sz<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><sizeof pos:line="6" pos:column="21">sizeof<argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">htcpDataHeader<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">buflen<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">&lt;<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="18">hdr_sz<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">off<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">+=<pos:position pos:line="11" pos:column="11"/></operator> <name pos:line="11" pos:column="12">hdr_sz<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>      <comment type="block" pos:line="11" pos:column="25">/* skip! */</comment>

    <expr_stmt><expr><name pos:line="13" pos:column="5">op_data_sz<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">htcpBuildOpData<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">buf<pos:position pos:line="13" pos:column="37"/></name> <operator pos:line="13" pos:column="38">+<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">off<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="45">buflen<pos:position pos:line="13" pos:column="51"/></name> <operator pos:line="13" pos:column="52">-<pos:position pos:line="13" pos:column="53"/></operator> <name pos:line="13" pos:column="54">off<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="59">stuff<pos:position pos:line="13" pos:column="64"/></name></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">op_data_sz<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&lt;<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">op_data_sz<pos:position pos:line="16" pos:column="26"/></name></expr>;<pos:position pos:line="16" pos:column="27"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">off<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">+=<pos:position pos:line="18" pos:column="11"/></operator> <name pos:line="18" pos:column="12">op_data_sz<pos:position pos:line="18" pos:column="22"/></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">31<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">3<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="19">"htcpBuildData: hdr.length = "<pos:position pos:line="20" pos:column="49"/></literal> <operator pos:line="20" pos:column="50">&lt;&lt;<pos:position pos:line="20" pos:column="58"/></operator> <name pos:line="20" pos:column="53">off<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">old_squid_format<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">htcpDataHeader<pos:position pos:line="23" pos:column="23"/></name></type> <name pos:line="23" pos:column="24">hdr<pos:position pos:line="23" pos:column="27"/></name></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">memset<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><operator pos:line="24" pos:column="16">&amp;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="17">hdr<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="25">sizeof<argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">hdr<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="25" pos:column="9">/* convert multi-byte fields */</comment>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">hdr<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">.<pos:position pos:line="26" pos:column="13"/></operator><name pos:line="26" pos:column="13">msg_id<pos:position pos:line="26" pos:column="19"/></name></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">htonl<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name><name pos:line="26" pos:column="28">stuff<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">-&gt;<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="35">msg_id<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">hdr<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">.<pos:position pos:line="27" pos:column="13"/></operator><name pos:line="27" pos:column="13">length<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">=<pos:position pos:line="27" pos:column="21"/></operator> <call><name pos:line="27" pos:column="22">htons<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><cast type="static" pos:line="27" pos:column="28">static_cast<argument_list type="generic" pos:line="27" pos:column="39">&lt;<argument><expr><name pos:line="27" pos:column="40">uint16_t<pos:position pos:line="27" pos:column="48"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="52"/></argument_list><argument_list pos:line="27" pos:column="49">(<argument><expr><name pos:line="27" pos:column="50">off<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></cast></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">hdr<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">.<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">opcode<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="22">stuff<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">-&gt;<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="29">op<pos:position pos:line="28" pos:column="31"/></name></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">hdr<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">response<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">stuff<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">response<pos:position pos:line="29" pos:column="39"/></name></name></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">hdr<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">.<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">RR<pos:position pos:line="30" pos:column="15"/></name></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name><name pos:line="30" pos:column="18">stuff<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">rr<pos:position pos:line="30" pos:column="27"/></name></name></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">hdr<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">.<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">F1<pos:position pos:line="31" pos:column="15"/></name></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name><name pos:line="31" pos:column="18">stuff<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">f1<pos:position pos:line="31" pos:column="27"/></name></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">memcpy<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">buf<pos:position pos:line="32" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="21">&amp;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="22">hdr<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="27">hdr_sz<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">htcpDataHeaderSquid<pos:position pos:line="34" pos:column="28"/></name></type> <name pos:line="34" pos:column="29">hdrSquid<pos:position pos:line="34" pos:column="37"/></name></decl>;<pos:position pos:line="34" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">memset<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><operator pos:line="35" pos:column="16">&amp;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="17">hdrSquid<pos:position pos:line="35" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="27">0<pos:position pos:line="35" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="30">sizeof<argument_list pos:line="35" pos:column="36">(<argument><expr><name pos:line="35" pos:column="37">hdrSquid<pos:position pos:line="35" pos:column="45"/></name></expr></argument>)<pos:position pos:line="35" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">hdrSquid<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">.<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">length<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <call><name pos:line="36" pos:column="27">htons<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><cast type="static" pos:line="36" pos:column="33">static_cast<argument_list type="generic" pos:line="36" pos:column="44">&lt;<argument><expr><name pos:line="36" pos:column="45">uint16_t<pos:position pos:line="36" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="36" pos:column="57"/></argument_list><argument_list pos:line="36" pos:column="54">(<argument><expr><name pos:line="36" pos:column="55">off<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></cast></expr></argument>)<pos:position pos:line="36" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">hdrSquid<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">.<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">opcode<pos:position pos:line="37" pos:column="24"/></name></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <name><name pos:line="37" pos:column="27">stuff<pos:position pos:line="37" pos:column="32"/></name><operator pos:line="37" pos:column="32">-&gt;<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="34">op<pos:position pos:line="37" pos:column="36"/></name></name></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">hdrSquid<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">response<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <name><name pos:line="38" pos:column="29">stuff<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">response<pos:position pos:line="38" pos:column="44"/></name></name></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">hdrSquid<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">.<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">F1<pos:position pos:line="39" pos:column="20"/></name></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <name><name pos:line="39" pos:column="23">stuff<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">f1<pos:position pos:line="39" pos:column="32"/></name></name></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">hdrSquid<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">.<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">RR<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name><name pos:line="40" pos:column="23">stuff<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">rr<pos:position pos:line="40" pos:column="32"/></name></name></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">memcpy<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><name pos:line="41" pos:column="16">buf<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="21">&amp;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="22">hdrSquid<pos:position pos:line="41" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="32">hdr_sz<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">debugs<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><literal type="number" pos:line="44" pos:column="12">31<pos:position pos:line="44" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="16">3<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="19">"htcpBuildData: size "<pos:position pos:line="44" pos:column="41"/></literal> <operator pos:line="44" pos:column="42">&lt;&lt;<pos:position pos:line="44" pos:column="50"/></operator> <name pos:line="44" pos:column="45">off<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">off<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

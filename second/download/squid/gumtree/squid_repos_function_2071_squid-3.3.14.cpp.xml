<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2071_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">truncateVirginBody<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name><name pos:line="4" pos:column="12">flags<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">headers_parsed<pos:position pos:line="4" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HttpReply<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">vrep<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><call><name pos:line="6" pos:column="23">virginReply<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">()<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int64_t<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">clen<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><operator pos:line="7" pos:column="20">-<pos:position pos:line="7" pos:column="21"/></operator><literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name><name pos:line="8" pos:column="10">vrep<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">expectingBody<pos:position pos:line="8" pos:column="29"/></name></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">request<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">method<pos:position pos:line="8" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="47">clen<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call> <operator pos:line="8" pos:column="53">||<pos:position pos:line="8" pos:column="55"/></operator> <name pos:line="8" pos:column="56">clen<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">&lt;<pos:position pos:line="8" pos:column="65"/></operator> <literal type="number" pos:line="8" pos:column="63">0<pos:position pos:line="8" pos:column="64"/></literal></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="9" pos:column="17">// no body or a body of unknown size, including chunked</comment>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int64_t<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">body_bytes_read<pos:position pos:line="11" pos:column="34"/></name> <init pos:line="11" pos:column="35">= <expr><name pos:line="11" pos:column="37">reply_bytes_read<pos:position pos:line="11" pos:column="53"/></name> <operator pos:line="11" pos:column="54">-<pos:position pos:line="11" pos:column="55"/></operator> <name pos:line="11" pos:column="56">header_bytes_read<pos:position pos:line="11" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="74"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">body_bytes_read<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">body_bytes_truncated<pos:position pos:line="12" pos:column="47"/></name> <operator pos:line="12" pos:column="48">&lt;=<pos:position pos:line="12" pos:column="53"/></operator> <name pos:line="12" pos:column="51">clen<pos:position pos:line="12" pos:column="55"/></name></expr>)<pos:position pos:line="12" pos:column="56"/></condition><then pos:line="12" pos:column="56">
        <block type="pseudo"><return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="13" pos:column="17">// we did not read too much or already took care of the extras</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">int64_t<pos:position pos:line="15" pos:column="22"/></name></type> <name pos:line="15" pos:column="23">extras<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><name pos:line="15" pos:column="32">body_bytes_read<pos:position pos:line="15" pos:column="47"/></name> <operator pos:line="15" pos:column="48">-<pos:position pos:line="15" pos:column="49"/></operator> <name pos:line="15" pos:column="50">body_bytes_truncated<pos:position pos:line="15" pos:column="70"/></name> <operator pos:line="15" pos:column="71">-<pos:position pos:line="15" pos:column="72"/></operator> <name pos:line="15" pos:column="73">clen<pos:position pos:line="15" pos:column="77"/></name></expr></init></decl>)<pos:position pos:line="15" pos:column="78"/></condition><then pos:line="15" pos:column="78"> <block pos:line="15" pos:column="79">{
        <comment type="line" pos:line="16" pos:column="9">// server sent more that the advertised content length</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">11<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="19">5<pos:position pos:line="17" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="22">HERE<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&lt;&lt;<pos:position pos:line="17" pos:column="35"/></operator> <literal type="string" pos:line="17" pos:column="30">"body_bytes_read="<pos:position pos:line="17" pos:column="48"/></literal> <operator pos:line="17" pos:column="49">&lt;&lt;<pos:position pos:line="17" pos:column="57"/></operator> <name pos:line="17" pos:column="52">body_bytes_read<pos:position pos:line="17" pos:column="67"/></name> <operator pos:line="17" pos:column="68">&lt;&lt;<pos:position pos:line="17" pos:column="76"/></operator>
               <literal type="string" pos:line="18" pos:column="16">" clen="<pos:position pos:line="18" pos:column="24"/></literal> <operator pos:line="18" pos:column="25">&lt;&lt;<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="28">clen<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">&lt;&lt;<pos:position pos:line="18" pos:column="41"/></operator> <literal type="char" pos:line="18" pos:column="36">'/'<pos:position pos:line="18" pos:column="39"/></literal> <operator pos:line="18" pos:column="40">&lt;&lt;<pos:position pos:line="18" pos:column="48"/></operator> <name><name pos:line="18" pos:column="43">vrep<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">content_length<pos:position pos:line="18" pos:column="63"/></name></name> <operator pos:line="18" pos:column="64">&lt;&lt;<pos:position pos:line="18" pos:column="72"/></operator>
               <literal type="string" pos:line="19" pos:column="16">" body_bytes_truncated="<pos:position pos:line="19" pos:column="40"/></literal> <operator pos:line="19" pos:column="41">&lt;&lt;<pos:position pos:line="19" pos:column="49"/></operator> <name pos:line="19" pos:column="44">body_bytes_truncated<pos:position pos:line="19" pos:column="64"/></name> <operator pos:line="19" pos:column="65">&lt;&lt;<pos:position pos:line="19" pos:column="73"/></operator> <literal type="char" pos:line="19" pos:column="68">'+'<pos:position pos:line="19" pos:column="71"/></literal> <operator pos:line="19" pos:column="72">&lt;&lt;<pos:position pos:line="19" pos:column="80"/></operator> <name pos:line="19" pos:column="75">extras<pos:position pos:line="19" pos:column="81"/></name></expr></argument>)<pos:position pos:line="19" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="83"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">readBuf<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">truncate<pos:position pos:line="21" pos:column="26"/></name></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">extras<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">body_bytes_truncated<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">+=<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">extras<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

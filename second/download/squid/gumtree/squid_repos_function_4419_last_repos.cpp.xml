<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4419_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">main<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">argc<pos:position pos:line="1" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier><modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">argv<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">request<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><name pos:line="3" pos:column="18">HELPER_INPUT_BUFFER<pos:position pos:line="3" pos:column="37"/></name></expr>]<pos:position pos:line="3" pos:column="38"/></index></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">opt<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">default_action<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">1<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">program_name<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <name><name pos:line="7" pos:column="20">argv<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">opt<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">getopt<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">argc<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="32">argv<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"t:T:b:a?"<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator> <operator pos:line="9" pos:column="51">!=<pos:position pos:line="9" pos:column="53"/></operator> <operator pos:line="9" pos:column="54">-<pos:position pos:line="9" pos:column="55"/></operator><literal type="number" pos:line="9" pos:column="55">1<pos:position pos:line="9" pos:column="56"/></literal></expr>)<pos:position pos:line="9" pos:column="57"/></condition> <block pos:line="9" pos:column="58">{
        <switch pos:line="10" pos:column="9">switch <condition pos:line="10" pos:column="16">(<expr><name pos:line="10" pos:column="17">opt<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition> <block pos:line="10" pos:column="22">{
        <case pos:line="11" pos:column="9">case <expr><literal type="char" pos:line="11" pos:column="14">'T'<pos:position pos:line="11" pos:column="17"/></literal></expr>:<pos:position pos:line="11" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="12" pos:column="13">fixed_timeout<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
        <case pos:line="13" pos:column="9">case <expr><literal type="char" pos:line="13" pos:column="14">'t'<pos:position pos:line="13" pos:column="17"/></literal></expr>:<pos:position pos:line="13" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="14" pos:column="13">session_ttl<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <call><name pos:line="14" pos:column="27">strtol<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">optarg<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">NULL<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="48">0<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
            <break pos:line="15" pos:column="13">break;<pos:position pos:line="15" pos:column="19"/></break>
        <case pos:line="16" pos:column="9">case <expr><literal type="char" pos:line="16" pos:column="14">'b'<pos:position pos:line="16" pos:column="17"/></literal></expr>:<pos:position pos:line="16" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="17" pos:column="13">db_path<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">optarg<pos:position pos:line="17" pos:column="29"/></name></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
            <break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break>
        <case pos:line="19" pos:column="9">case <expr><literal type="char" pos:line="19" pos:column="14">'a'<pos:position pos:line="19" pos:column="17"/></literal></expr>:<pos:position pos:line="19" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="20" pos:column="13">default_action<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>
        <case pos:line="22" pos:column="9">case <expr><literal type="char" pos:line="22" pos:column="14">'?'<pos:position pos:line="22" pos:column="17"/></literal></expr>:<pos:position pos:line="22" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">usage<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">()<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">exit<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><literal type="number" pos:line="24" pos:column="18">0<pos:position pos:line="24" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
            <break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break>
        }<pos:position pos:line="26" pos:column="10"/></block></switch>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">setbuf<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">stdout<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="20">NULL<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">init_db<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">()<pos:position pos:line="31" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt>

    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><call><name pos:line="33" pos:column="12">fgets<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">request<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="27">HELPER_INPUT_BUFFER<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="48">stdin<pos:position pos:line="33" pos:column="53"/></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="55"/></condition> <block pos:line="33" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">int<pos:position pos:line="34" pos:column="12"/></name></type> <name pos:line="34" pos:column="13">action<pos:position pos:line="34" pos:column="19"/></name> <init pos:line="34" pos:column="20">= <expr><literal type="number" pos:line="34" pos:column="22">0<pos:position pos:line="34" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="35" pos:column="9">const<pos:position pos:line="35" pos:column="14"/></specifier> <name pos:line="35" pos:column="15">char<pos:position pos:line="35" pos:column="19"/></name> <modifier pos:line="35" pos:column="20">*<pos:position pos:line="35" pos:column="21"/></modifier></type><name pos:line="35" pos:column="21">channel_id<pos:position pos:line="35" pos:column="31"/></name> <init pos:line="35" pos:column="32">= <expr><call><name pos:line="35" pos:column="34">strtok<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">request<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="50">" "<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="55"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">char<pos:position pos:line="36" pos:column="13"/></name> <modifier pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></modifier></type><name pos:line="36" pos:column="15">detail<pos:position pos:line="36" pos:column="21"/></name> <init pos:line="36" pos:column="22">= <expr><call><name pos:line="36" pos:column="24">strtok<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">NULL<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="37">"\n"<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="36" pos:column="43"/></decl_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">detail<pos:position pos:line="37" pos:column="19"/></name> <operator pos:line="37" pos:column="20">==<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">NULL<pos:position pos:line="37" pos:column="27"/></name></expr>)<pos:position pos:line="37" pos:column="28"/></condition><then pos:line="37" pos:column="28"> <block pos:line="37" pos:column="29">{
            <comment type="line" pos:line="38" pos:column="13">// Only 1 paramater supplied. We are expecting at least 2 (including the channel ID)</comment>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">fprintf<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">stderr<pos:position pos:line="39" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="29">"FATAL: %s is concurrent and requires the concurrency option to be specified.\n"<pos:position pos:line="39" pos:column="109"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="111">program_name<pos:position pos:line="39" pos:column="123"/></name></expr></argument>)<pos:position pos:line="39" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="125"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">shutdown_db<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">()<pos:position pos:line="40" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">exit<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><literal type="number" pos:line="41" pos:column="18">1<pos:position pos:line="41" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="43" pos:column="9">char<pos:position pos:line="43" pos:column="13"/></name> <modifier pos:line="43" pos:column="14">*<pos:position pos:line="43" pos:column="15"/></modifier></type><name pos:line="43" pos:column="15">lastdetail<pos:position pos:line="43" pos:column="25"/></name> <init pos:line="43" pos:column="26">= <expr><call><name pos:line="43" pos:column="28">strrchr<pos:position pos:line="43" pos:column="35"/></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">detail<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="43" pos:column="44">' '<pos:position pos:line="43" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="49"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">size_t<pos:position pos:line="44" pos:column="15"/></name></type> <name pos:line="44" pos:column="16">detail_len<pos:position pos:line="44" pos:column="26"/></name> <init pos:line="44" pos:column="27">= <expr><call><name pos:line="44" pos:column="29">strlen<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">detail<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="44"/></decl_stmt>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">lastdetail<pos:position pos:line="45" pos:column="23"/></name></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24"> <block pos:line="45" pos:column="25">{
            <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><call><name pos:line="46" pos:column="17">strcmp<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">lastdetail<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="36">" LOGIN"<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call> <operator pos:line="46" pos:column="46">==<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="49">0<pos:position pos:line="46" pos:column="50"/></literal></expr>)<pos:position pos:line="46" pos:column="51"/></condition><then pos:line="46" pos:column="51"> <block pos:line="46" pos:column="52">{
                <expr_stmt><expr><name pos:line="47" pos:column="17">action<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">=<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="26">1<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="48" pos:column="17">detail_len<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">=<pos:position pos:line="48" pos:column="29"/></operator> <call pos:line="48" pos:column="30">(<name pos:line="48" pos:column="31">size_t<pos:position pos:line="48" pos:column="37"/></name>)<argument_list pos:line="48" pos:column="38">(<argument><expr><name pos:line="48" pos:column="39">lastdetail<pos:position pos:line="48" pos:column="49"/></name><operator pos:line="48" pos:column="49">-<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="50">detail<pos:position pos:line="48" pos:column="56"/></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="49" pos:column="17">*<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">lastdetail<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">=<pos:position pos:line="49" pos:column="30"/></operator> <literal type="char" pos:line="49" pos:column="31">'\0'<pos:position pos:line="49" pos:column="35"/></literal></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></then> <elseif pos:line="50" pos:column="15">else <if pos:line="50" pos:column="20">if <condition pos:line="50" pos:column="23">(<expr><call><name pos:line="50" pos:column="24">strcmp<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">lastdetail<pos:position pos:line="50" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="43">" LOGOUT"<pos:position pos:line="50" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call> <operator pos:line="50" pos:column="54">==<pos:position pos:line="50" pos:column="56"/></operator> <literal type="number" pos:line="50" pos:column="57">0<pos:position pos:line="50" pos:column="58"/></literal></expr>)<pos:position pos:line="50" pos:column="59"/></condition><then pos:line="50" pos:column="59"> <block pos:line="50" pos:column="60">{
                <expr_stmt><expr><name pos:line="51" pos:column="17">action<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">=<pos:position pos:line="51" pos:column="25"/></operator> <operator pos:line="51" pos:column="26">-<pos:position pos:line="51" pos:column="27"/></operator><literal type="number" pos:line="51" pos:column="27">1<pos:position pos:line="51" pos:column="28"/></literal></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="52" pos:column="17">detail_len<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator> <call pos:line="52" pos:column="30">(<name pos:line="52" pos:column="31">size_t<pos:position pos:line="52" pos:column="37"/></name>)<argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">lastdetail<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">-<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="50">detail<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="53" pos:column="17">*<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">lastdetail<pos:position pos:line="53" pos:column="28"/></name> <operator pos:line="53" pos:column="29">=<pos:position pos:line="53" pos:column="30"/></operator> <literal type="char" pos:line="53" pos:column="31">'\0'<pos:position pos:line="53" pos:column="35"/></literal></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if></elseif> <elseif pos:line="54" pos:column="15">else <if pos:line="54" pos:column="20">if <condition pos:line="54" pos:column="23">(<expr><operator pos:line="54" pos:column="24">!<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">default_action<pos:position pos:line="54" pos:column="39"/></name> <operator pos:line="54" pos:column="40">&amp;&amp;<pos:position pos:line="54" pos:column="50"/></operator> <call><name pos:line="54" pos:column="43">strcmp<pos:position pos:line="54" pos:column="49"/></name><argument_list pos:line="54" pos:column="49">(<argument><expr><name pos:line="54" pos:column="50">lastdetail<pos:position pos:line="54" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="62">" -"<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call> <operator pos:line="54" pos:column="68">==<pos:position pos:line="54" pos:column="70"/></operator> <literal type="number" pos:line="54" pos:column="71">0<pos:position pos:line="54" pos:column="72"/></literal></expr>)<pos:position pos:line="54" pos:column="73"/></condition><then pos:line="54" pos:column="73"> <block pos:line="54" pos:column="74">{
                <comment type="line" pos:line="55" pos:column="17">// no action; LOGIN/LOGOUT not supplied</comment>
                <comment type="line" pos:line="56" pos:column="17">// but truncate the '-' %DATA value given by Squid-4 and later</comment>
                <expr_stmt><expr><name pos:line="57" pos:column="17">detail_len<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">=<pos:position pos:line="57" pos:column="29"/></operator> <call pos:line="57" pos:column="30">(<name pos:line="57" pos:column="31">size_t<pos:position pos:line="57" pos:column="37"/></name>)<argument_list pos:line="57" pos:column="38">(<argument><expr><name pos:line="57" pos:column="39">lastdetail<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-<pos:position pos:line="57" pos:column="50"/></operator><name pos:line="57" pos:column="50">detail<pos:position pos:line="57" pos:column="56"/></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="58" pos:column="17">*<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">lastdetail<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <literal type="char" pos:line="58" pos:column="31">'\0'<pos:position pos:line="58" pos:column="35"/></literal></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="59" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">action<pos:position pos:line="61" pos:column="19"/></name> <operator pos:line="61" pos:column="20">==<pos:position pos:line="61" pos:column="22"/></operator> <operator pos:line="61" pos:column="23">-<pos:position pos:line="61" pos:column="24"/></operator><literal type="number" pos:line="61" pos:column="24">1<pos:position pos:line="61" pos:column="25"/></literal></expr>)<pos:position pos:line="61" pos:column="26"/></condition><then pos:line="61" pos:column="26"> <block pos:line="61" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">session_logout<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">detail<pos:position pos:line="62" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="36">detail_len<pos:position pos:line="62" pos:column="46"/></name></expr></argument>)<pos:position pos:line="62" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">printf<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="string" pos:line="63" pos:column="20">"%s OK message=\"Bye\"\n"<pos:position pos:line="63" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="47">channel_id<pos:position pos:line="63" pos:column="57"/></name></expr></argument>)<pos:position pos:line="63" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then> <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if <condition pos:line="64" pos:column="19">(<expr><name pos:line="64" pos:column="20">action<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">==<pos:position pos:line="64" pos:column="29"/></operator> <literal type="number" pos:line="64" pos:column="30">1<pos:position pos:line="64" pos:column="31"/></literal></expr>)<pos:position pos:line="64" pos:column="32"/></condition><then pos:line="64" pos:column="32"> <block pos:line="64" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">session_login<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">detail<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="35">detail_len<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">printf<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="string" pos:line="66" pos:column="20">"%s OK message=\"Welcome\"\n"<pos:position pos:line="66" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="51">channel_id<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if></elseif> <elseif pos:line="67" pos:column="11">else <if pos:line="67" pos:column="16">if <condition pos:line="67" pos:column="19">(<expr><call><name pos:line="67" pos:column="20">session_active<pos:position pos:line="67" pos:column="34"/></name><argument_list pos:line="67" pos:column="34">(<argument><expr><name pos:line="67" pos:column="35">detail<pos:position pos:line="67" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="43">detail_len<pos:position pos:line="67" pos:column="53"/></name></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="55"/></condition><then pos:line="67" pos:column="55"> <block pos:line="67" pos:column="56">{
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">fixed_timeout<pos:position pos:line="68" pos:column="30"/></name> <operator pos:line="68" pos:column="31">==<pos:position pos:line="68" pos:column="33"/></operator> <literal type="number" pos:line="68" pos:column="34">0<pos:position pos:line="68" pos:column="35"/></literal></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36"> <block pos:line="68" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">session_login<pos:position pos:line="69" pos:column="30"/></name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">detail<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">detail_len<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="70" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">printf<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><literal type="string" pos:line="71" pos:column="20">"%s OK\n"<pos:position pos:line="71" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="31">channel_id<pos:position pos:line="71" pos:column="41"/></name></expr></argument>)<pos:position pos:line="71" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if></elseif> <elseif pos:line="72" pos:column="11">else <if pos:line="72" pos:column="16">if <condition pos:line="72" pos:column="19">(<expr><name pos:line="72" pos:column="20">default_action<pos:position pos:line="72" pos:column="34"/></name> <operator pos:line="72" pos:column="35">==<pos:position pos:line="72" pos:column="37"/></operator> <literal type="number" pos:line="72" pos:column="38">1<pos:position pos:line="72" pos:column="39"/></literal></expr>)<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40"> <block pos:line="72" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">session_login<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">detail<pos:position pos:line="73" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="35">detail_len<pos:position pos:line="73" pos:column="45"/></name></expr></argument>)<pos:position pos:line="73" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">printf<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><literal type="string" pos:line="74" pos:column="20">"%s ERR message=\"Welcome\"\n"<pos:position pos:line="74" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="52">channel_id<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if></elseif> <else pos:line="75" pos:column="11">else <block pos:line="75" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">printf<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><literal type="string" pos:line="76" pos:column="20">"%s ERR message=\"No session available\"\n"<pos:position pos:line="76" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="65">channel_id<pos:position pos:line="76" pos:column="75"/></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
    }<pos:position pos:line="78" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">shutdown_db<pos:position pos:line="79" pos:column="16"/></name><argument_list pos:line="79" pos:column="16">()<pos:position pos:line="79" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="19"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><literal type="number" pos:line="80" pos:column="12">0<pos:position pos:line="80" pos:column="13"/></literal></expr>;<pos:position pos:line="80" pos:column="14"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

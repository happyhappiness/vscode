<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3453_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">pushStreamData<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name pos:line="2" pos:column="36">StoreIOBuffer<pos:position pos:line="2" pos:column="49"/></name> <specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">result<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">source<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreIOBuffer<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">localTempBuffer<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">result<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">length<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">88<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">5<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"clientReplyContext::pushStreamData: marking request as complete due to 0 length store result"<pos:position pos:line="7" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="119"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">flags<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">complete<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">result<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">offset<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">-<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">headers_sz<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">==<pos:position pos:line="11" pos:column="41"/></operator> <call><name pos:line="11" pos:column="42">next<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">()<pos:position pos:line="11" pos:column="48"/></argument_list></call><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name><name pos:line="11" pos:column="50">readBuffer<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">.<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">offset<pos:position pos:line="11" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">localTempBuffer<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">offset<pos:position pos:line="12" pos:column="27"/></name></name> <operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">result<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">.<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">offset<pos:position pos:line="12" pos:column="43"/></name></name> <operator pos:line="12" pos:column="44">-<pos:position pos:line="12" pos:column="45"/></operator> <name pos:line="12" pos:column="46">headers_sz<pos:position pos:line="12" pos:column="56"/></name></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">localTempBuffer<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">length<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name><name pos:line="13" pos:column="30">result<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">.<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">length<pos:position pos:line="13" pos:column="43"/></name></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">localTempBuffer<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">length<pos:position pos:line="15" pos:column="31"/></name></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="9">localTempBuffer<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">data<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <name pos:line="16" pos:column="32">source<pos:position pos:line="16" pos:column="38"/></name></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">clientStreamCallback<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><operator pos:line="18" pos:column="26">(<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">clientStreamNode<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">*<pos:position pos:line="18" pos:column="44"/></operator><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator><name><name pos:line="18" pos:column="45">http<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">client_stream<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">.<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="65">head<pos:position pos:line="18" pos:column="69"/></name><operator pos:line="18" pos:column="69">-&gt;<pos:position pos:line="18" pos:column="74"/></operator><name pos:line="18" pos:column="71">data<pos:position pos:line="18" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="77">http<pos:position pos:line="18" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="83">NULL<pos:position pos:line="18" pos:column="87"/></name></expr></argument>,
                         <argument><expr><name pos:line="19" pos:column="26">localTempBuffer<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6696_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">rfc1035RRPack<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">buf<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">sz<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">rfc1035_rr<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type> <name pos:line="2" pos:column="62">RR<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">off<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint16_t<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">s<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uint32_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">off<pos:position pos:line="8" pos:column="8"/></name> <operator pos:line="8" pos:column="9">=<pos:position pos:line="8" pos:column="10"/></operator> <call><name pos:line="8" pos:column="11">rfc1035NamePack<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">buf<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">sz<pos:position pos:line="8" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="36">RR<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">name<pos:position pos:line="8" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/*
     * Make sure the remaining message has enough octets for the
     * rest of the RR fields.
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">off<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">+<pos:position pos:line="14" pos:column="15"/></operator> <sizeof pos:line="14" pos:column="16">sizeof<argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">s<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></sizeof><operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">3<pos:position pos:line="14" pos:column="27"/></literal> <operator pos:line="14" pos:column="28">+<pos:position pos:line="14" pos:column="29"/></operator> <sizeof pos:line="14" pos:column="30">sizeof<argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">i<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></sizeof> <operator pos:line="14" pos:column="40">+<pos:position pos:line="14" pos:column="41"/></operator> <name><name pos:line="14" pos:column="42">RR<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">rdlength<pos:position pos:line="14" pos:column="54"/></name></name><operator pos:line="14" pos:column="54">)<pos:position pos:line="14" pos:column="55"/></operator> <operator pos:line="14" pos:column="56">&gt;<pos:position pos:line="14" pos:column="60"/></operator> <name pos:line="14" pos:column="58">sz<pos:position pos:line="14" pos:column="60"/></name></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">s<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">htons<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><name><name pos:line="17" pos:column="15">RR<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">type<pos:position pos:line="17" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memcpy<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">buf<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">+<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">off<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">s<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="27">sizeof<argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">s<pos:position pos:line="18" pos:column="35"/></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">off<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">+=<pos:position pos:line="19" pos:column="11"/></operator> <sizeof pos:line="19" pos:column="12">sizeof<argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">s<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">s<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">htons<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name><name pos:line="20" pos:column="15">RR<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">_class<pos:position pos:line="20" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">memcpy<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">buf<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">+<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">off<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="23">&amp;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="24">s<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="27">sizeof<argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">s<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">off<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">+=<pos:position pos:line="22" pos:column="11"/></operator> <sizeof pos:line="22" pos:column="12">sizeof<argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">s<pos:position pos:line="22" pos:column="20"/></name></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">i<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <call><name pos:line="23" pos:column="9">htonl<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name><name pos:line="23" pos:column="15">RR<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">ttl<pos:position pos:line="23" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">memcpy<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">buf<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">+<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">off<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="23">&amp;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="24">i<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="27">sizeof<argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">i<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">off<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">+=<pos:position pos:line="25" pos:column="11"/></operator> <sizeof pos:line="25" pos:column="12">sizeof<argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">i<pos:position pos:line="25" pos:column="20"/></name></expr></argument>)<pos:position pos:line="25" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">s<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">htons<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">RR<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">rdlength<pos:position pos:line="26" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">memcpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">buf<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">+<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">off<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="23">&amp;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="24">s<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="27">sizeof<argument_list pos:line="27" pos:column="33">(<argument><expr><name pos:line="27" pos:column="34">s<pos:position pos:line="27" pos:column="35"/></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">off<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">+=<pos:position pos:line="28" pos:column="11"/></operator> <sizeof pos:line="28" pos:column="12">sizeof<argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">s<pos:position pos:line="28" pos:column="20"/></name></expr></argument>)<pos:position pos:line="28" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">memcpy<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">buf<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">+<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">off<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="23">&amp;<pos:position pos:line="29" pos:column="28"/></operator><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><name><name pos:line="29" pos:column="25">RR<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">rdata<pos:position pos:line="29" pos:column="34"/></name></name><operator pos:line="29" pos:column="34">)<pos:position pos:line="29" pos:column="35"/></operator></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="37">RR<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">rdlength<pos:position pos:line="29" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">off<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">+=<pos:position pos:line="30" pos:column="11"/></operator> <name><name pos:line="30" pos:column="12">RR<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">rdlength<pos:position pos:line="30" pos:column="24"/></name></name></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">assert<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><name pos:line="31" pos:column="12">off<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">&lt;=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="19">sz<pos:position pos:line="31" pos:column="21"/></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">off<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

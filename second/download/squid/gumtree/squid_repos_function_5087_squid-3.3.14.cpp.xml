<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5087_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">comm_err_t<pos:position pos:line="1" pos:column="11"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">TcpAcceptor<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">oldAccept<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name><name pos:line="2" pos:column="30">Comm<pos:position pos:line="2" pos:column="34"/></name><operator pos:line="2" pos:column="34">::<pos:position pos:line="2" pos:column="36"/></operator><name pos:line="2" pos:column="36">ConnectionPointer<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">&amp;<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="55">details<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">comm_accept<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="5" pos:column="5">++<pos:position pos:line="5" pos:column="7"/></operator><name><name pos:line="5" pos:column="7">statCounter<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">syscalls<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">sock<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">accepts<pos:position pos:line="5" pos:column="40"/></name></name></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">sock<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">addrinfo<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">gai<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">details<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">local<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">InitAddrInfo<pos:position pos:line="8" pos:column="32"/></name></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">gai<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">errcode<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt> <comment type="line" pos:line="10" pos:column="18">// reset local errno copy.</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">sock<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">accept<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">conn<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">fd<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="34">gai<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">ai_addr<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="48">&amp;<pos:position pos:line="11" pos:column="53"/></operator><name><name pos:line="11" pos:column="49">gai<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-&gt;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="54">ai_addrlen<pos:position pos:line="11" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call><operator pos:line="11" pos:column="65">)<pos:position pos:line="11" pos:column="66"/></operator> <operator pos:line="11" pos:column="67">&lt;<pos:position pos:line="11" pos:column="71"/></operator> <literal type="number" pos:line="11" pos:column="69">0<pos:position pos:line="11" pos:column="70"/></literal></expr>)<pos:position pos:line="11" pos:column="71"/></condition><then pos:line="11" pos:column="71"> <block pos:line="11" pos:column="72">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">errcode<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">errno<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt> <comment type="line" pos:line="12" pos:column="26">// store last accept errno locally.</comment>

        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">details<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">local<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">.<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">FreeAddrInfo<pos:position pos:line="14" pos:column="36"/></name></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">gai<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="16" pos:column="9">PROF_stop<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">comm_accept<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">ignoreErrno<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">errno<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <block pos:line="18" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">debugs<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="number" pos:line="19" pos:column="20">50<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="24">5<pos:position pos:line="19" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="27">HERE<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">&lt;&lt;<pos:position pos:line="19" pos:column="40"/></operator> <call><name pos:line="19" pos:column="35">status<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">()<pos:position pos:line="19" pos:column="43"/></argument_list></call> <operator pos:line="19" pos:column="44">&lt;&lt;<pos:position pos:line="19" pos:column="52"/></operator> <literal type="string" pos:line="19" pos:column="47">": "<pos:position pos:line="19" pos:column="51"/></literal> <operator pos:line="19" pos:column="52">&lt;&lt;<pos:position pos:line="19" pos:column="60"/></operator> <call><name pos:line="19" pos:column="55">xstrerror<pos:position pos:line="19" pos:column="64"/></name><argument_list pos:line="19" pos:column="64">()<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><name pos:line="20" pos:column="20">COMM_NOMESSAGE<pos:position pos:line="20" pos:column="34"/></name></expr>;<pos:position pos:line="20" pos:column="35"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><name pos:line="21" pos:column="20">ENFILE<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">==<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">errno<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">||<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">EMFILE<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">==<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="49">errno<pos:position pos:line="21" pos:column="54"/></name></expr>)<pos:position pos:line="21" pos:column="55"/></condition><then pos:line="21" pos:column="55"> <block pos:line="21" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">50<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">3<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">HERE<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&lt;&lt;<pos:position pos:line="22" pos:column="40"/></operator> <call><name pos:line="22" pos:column="35">status<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">()<pos:position pos:line="22" pos:column="43"/></argument_list></call> <operator pos:line="22" pos:column="44">&lt;&lt;<pos:position pos:line="22" pos:column="52"/></operator> <literal type="string" pos:line="22" pos:column="47">": "<pos:position pos:line="22" pos:column="51"/></literal> <operator pos:line="22" pos:column="52">&lt;&lt;<pos:position pos:line="22" pos:column="60"/></operator> <call><name pos:line="22" pos:column="55">xstrerror<pos:position pos:line="22" pos:column="64"/></name><argument_list pos:line="22" pos:column="64">()<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">COMM_ERROR<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif> <else pos:line="24" pos:column="11">else <block pos:line="24" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">50<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">DBG_IMPORTANT<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">HERE<pos:position pos:line="25" pos:column="43"/></name> <operator pos:line="25" pos:column="44">&lt;&lt;<pos:position pos:line="25" pos:column="52"/></operator> <call><name pos:line="25" pos:column="47">status<pos:position pos:line="25" pos:column="53"/></name><argument_list pos:line="25" pos:column="53">()<pos:position pos:line="25" pos:column="55"/></argument_list></call> <operator pos:line="25" pos:column="56">&lt;&lt;<pos:position pos:line="25" pos:column="64"/></operator> <literal type="string" pos:line="25" pos:column="59">": "<pos:position pos:line="25" pos:column="63"/></literal> <operator pos:line="25" pos:column="64">&lt;&lt;<pos:position pos:line="25" pos:column="72"/></operator> <call><name pos:line="25" pos:column="67">xstrerror<pos:position pos:line="25" pos:column="76"/></name><argument_list pos:line="25" pos:column="76">()<pos:position pos:line="25" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="80"/></expr_stmt>
            <return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">COMM_ERROR<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></return>
        }<pos:position pos:line="27" pos:column="10"/></block></else></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">Must<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><name pos:line="30" pos:column="10">sock<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">&gt;=<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">details<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">fd<pos:position pos:line="31" pos:column="16"/></name></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">sock<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">details<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">remote<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">gai<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">( <expr><name><name pos:line="34" pos:column="10">Config<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">client_ip_max_connections<pos:position pos:line="34" pos:column="42"/></name></name> <operator pos:line="34" pos:column="43">&gt;=<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="46">0<pos:position pos:line="34" pos:column="47"/></literal></expr>)<pos:position pos:line="34" pos:column="48"/></condition><then pos:line="34" pos:column="48"> <block pos:line="34" pos:column="49">{
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">clientdbEstablished<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name><name pos:line="35" pos:column="33">details<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">remote<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="50">0<pos:position pos:line="35" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call> <operator pos:line="35" pos:column="53">&gt;<pos:position pos:line="35" pos:column="57"/></operator> <name><name pos:line="35" pos:column="55">Config<pos:position pos:line="35" pos:column="61"/></name><operator pos:line="35" pos:column="61">.<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="62">client_ip_max_connections<pos:position pos:line="35" pos:column="87"/></name></name></expr>)<pos:position pos:line="35" pos:column="88"/></condition><then pos:line="35" pos:column="88"> <block pos:line="35" pos:column="89">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">50<pos:position pos:line="36" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="24">DBG_IMPORTANT<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="39">"WARNING: "<pos:position pos:line="36" pos:column="50"/></literal> <operator pos:line="36" pos:column="51">&lt;&lt;<pos:position pos:line="36" pos:column="59"/></operator> <name><name pos:line="36" pos:column="54">details<pos:position pos:line="36" pos:column="61"/></name><operator pos:line="36" pos:column="61">-&gt;<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="63">remote<pos:position pos:line="36" pos:column="69"/></name></name> <operator pos:line="36" pos:column="70">&lt;&lt;<pos:position pos:line="36" pos:column="78"/></operator> <literal type="string" pos:line="36" pos:column="73">" attempting more than "<pos:position pos:line="36" pos:column="97"/></literal> <operator pos:line="36" pos:column="98">&lt;&lt;<pos:position pos:line="36" pos:column="106"/></operator> <name><name pos:line="36" pos:column="101">Config<pos:position pos:line="36" pos:column="107"/></name><operator pos:line="36" pos:column="107">.<pos:position pos:line="36" pos:column="108"/></operator><name pos:line="36" pos:column="108">client_ip_max_connections<pos:position pos:line="36" pos:column="133"/></name></name> <operator pos:line="36" pos:column="134">&lt;&lt;<pos:position pos:line="36" pos:column="142"/></operator> <literal type="string" pos:line="36" pos:column="137">" connections."<pos:position pos:line="36" pos:column="152"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="154"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">details<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">local<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">FreeAddrInfo<pos:position pos:line="37" pos:column="40"/></name></name><argument_list pos:line="37" pos:column="40">(<argument><expr><name pos:line="37" pos:column="41">gai<pos:position pos:line="37" pos:column="44"/></name></expr></argument>)<pos:position pos:line="37" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
            <return pos:line="38" pos:column="13">return <expr><name pos:line="38" pos:column="20">COMM_ERROR<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="42" pos:column="5">// lookup the local-end details of this new connection</comment>
    <expr_stmt><expr><call><name><name pos:line="43" pos:column="5">details<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">local<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">InitAddrInfo<pos:position pos:line="43" pos:column="32"/></name></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">gai<pos:position pos:line="43" pos:column="36"/></name></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">details<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">local<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">SetEmpty<pos:position pos:line="44" pos:column="28"/></name></name><argument_list pos:line="44" pos:column="28">()<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">getsockname<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">sock<pos:position pos:line="45" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="23">gai<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">ai_addr<pos:position pos:line="45" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="37">&amp;<pos:position pos:line="45" pos:column="42"/></operator><name><name pos:line="45" pos:column="38">gai<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">-&gt;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="43">ai_addrlen<pos:position pos:line="45" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">details<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">-&gt;<pos:position pos:line="46" pos:column="17"/></operator><name pos:line="46" pos:column="14">local<pos:position pos:line="46" pos:column="19"/></name></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <operator pos:line="46" pos:column="22">*<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">gai<pos:position pos:line="46" pos:column="26"/></name></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="47" pos:column="5">details<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">local<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">FreeAddrInfo<pos:position pos:line="47" pos:column="32"/></name></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">gai<pos:position pos:line="47" pos:column="36"/></name></expr></argument>)<pos:position pos:line="47" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* fdstat update */</comment>
    <comment type="line" pos:line="50" pos:column="5">// XXX : these are not all HTTP requests. use a note about type and ip:port details-&gt;</comment>
    <comment type="line" pos:line="51" pos:column="5">// so we end up with a uniform "(HTTP|FTP-data|HTTPS|...) remote-ip:remote-port"</comment>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">fd_open<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><name pos:line="52" pos:column="13">sock<pos:position pos:line="52" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="19">FD_SOCKET<pos:position pos:line="52" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="30">"HTTP Request"<pos:position pos:line="52" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="54" pos:column="5">fdd_table<pos:position pos:line="54" pos:column="14"/></name><index pos:line="54" pos:column="14">[<expr><name pos:line="54" pos:column="15">sock<pos:position pos:line="54" pos:column="19"/></name></expr>]<pos:position pos:line="54" pos:column="20"/></index></name><operator pos:line="54" pos:column="20">.<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">close_file<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">NULL<pos:position pos:line="54" pos:column="38"/></name></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">fdd_table<pos:position pos:line="55" pos:column="14"/></name><index pos:line="55" pos:column="14">[<expr><name pos:line="55" pos:column="15">sock<pos:position pos:line="55" pos:column="19"/></name></expr>]<pos:position pos:line="55" pos:column="20"/></index></name><operator pos:line="55" pos:column="20">.<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">close_line<pos:position pos:line="55" pos:column="31"/></name> <operator pos:line="55" pos:column="32">=<pos:position pos:line="55" pos:column="33"/></operator> <literal type="number" pos:line="55" pos:column="34">0<pos:position pos:line="55" pos:column="35"/></literal></expr>;<pos:position pos:line="55" pos:column="36"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="57" pos:column="5">fde<pos:position pos:line="57" pos:column="8"/></name> <modifier pos:line="57" pos:column="9">*<pos:position pos:line="57" pos:column="10"/></modifier></type><name pos:line="57" pos:column="10">F<pos:position pos:line="57" pos:column="11"/></name> <init pos:line="57" pos:column="12">= <expr><operator pos:line="57" pos:column="14">&amp;<pos:position pos:line="57" pos:column="19"/></operator><name><name pos:line="57" pos:column="15">fd_table<pos:position pos:line="57" pos:column="23"/></name><index pos:line="57" pos:column="23">[<expr><name pos:line="57" pos:column="24">sock<pos:position pos:line="57" pos:column="28"/></name></expr>]<pos:position pos:line="57" pos:column="29"/></index></name></expr></init></decl>;<pos:position pos:line="57" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="58" pos:column="5">details<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">remote<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">.<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">NtoA<pos:position pos:line="58" pos:column="25"/></name></name><argument_list pos:line="58" pos:column="25">(<argument><expr><name><name pos:line="58" pos:column="26">F<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">ipaddr<pos:position pos:line="58" pos:column="35"/></name></name></expr></argument>,<argument><expr><name pos:line="58" pos:column="36">MAX_IPSTRLEN<pos:position pos:line="58" pos:column="48"/></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">F<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">-&gt;<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="8">remote_port<pos:position pos:line="59" pos:column="19"/></name></name> <operator pos:line="59" pos:column="20">=<pos:position pos:line="59" pos:column="21"/></operator> <call><name><name pos:line="59" pos:column="22">details<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">remote<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">.<pos:position pos:line="59" pos:column="38"/></operator><name pos:line="59" pos:column="38">GetPort<pos:position pos:line="59" pos:column="45"/></name></name><argument_list pos:line="59" pos:column="45">()<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">F<pos:position pos:line="60" pos:column="6"/></name><operator pos:line="60" pos:column="6">-&gt;<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="8">local_addr<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <name><name pos:line="60" pos:column="21">details<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">local<pos:position pos:line="60" pos:column="35"/></name></name></expr>;<pos:position pos:line="60" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">F<pos:position pos:line="61" pos:column="6"/></name><operator pos:line="61" pos:column="6">-&gt;<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="8">sock_family<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <ternary><condition><expr><call><name><name pos:line="61" pos:column="22">details<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">local<pos:position pos:line="61" pos:column="36"/></name><operator pos:line="61" pos:column="36">.<pos:position pos:line="61" pos:column="37"/></operator><name pos:line="61" pos:column="37">IsIPv6<pos:position pos:line="61" pos:column="43"/></name></name><argument_list pos:line="61" pos:column="43">()<pos:position pos:line="61" pos:column="45"/></argument_list></call></expr>?<pos:position pos:line="61" pos:column="46"/></condition><then><expr><name pos:line="61" pos:column="46">AF_INET6<pos:position pos:line="61" pos:column="54"/></name></expr></then><else pos:line="61" pos:column="54">:<expr><name pos:line="61" pos:column="55">AF_INET<pos:position pos:line="61" pos:column="62"/></name></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>

    <comment type="line" pos:line="63" pos:column="5">// set socket flags</comment>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">commSetCloseOnExec<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">sock<pos:position pos:line="64" pos:column="28"/></name></expr></argument>)<pos:position pos:line="64" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">commSetNonBlocking<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><name pos:line="65" pos:column="24">sock<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="67" pos:column="5">/* IFF the socket is (tproxy) transparent, pass the flag down to allow spoofing */</comment>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">F<pos:position pos:line="68" pos:column="6"/></name><operator pos:line="68" pos:column="6">-&gt;<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="8">flags<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">.<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="14">transparent<pos:position pos:line="68" pos:column="25"/></name></name> <operator pos:line="68" pos:column="26">=<pos:position pos:line="68" pos:column="27"/></operator> <name><name pos:line="68" pos:column="28">fd_table<pos:position pos:line="68" pos:column="36"/></name><index pos:line="68" pos:column="36">[<expr><name><name pos:line="68" pos:column="37">conn<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">fd<pos:position pos:line="68" pos:column="45"/></name></name></expr>]<pos:position pos:line="68" pos:column="46"/></index></name><operator pos:line="68" pos:column="46">.<pos:position pos:line="68" pos:column="47"/></operator><name><name pos:line="68" pos:column="47">flags<pos:position pos:line="68" pos:column="52"/></name><operator pos:line="68" pos:column="52">.<pos:position pos:line="68" pos:column="53"/></operator><name pos:line="68" pos:column="53">transparent<pos:position pos:line="68" pos:column="64"/></name></name></expr>;<pos:position pos:line="68" pos:column="65"/></expr_stmt> <comment type="line" pos:line="68" pos:column="66">// XXX: can we remove this line yet?</comment>

    <comment type="line" pos:line="70" pos:column="5">// Perform NAT or TPROXY operations to retrieve the real client/dest IP addresses</comment>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name><name pos:line="71" pos:column="9">conn<pos:position pos:line="71" pos:column="13"/></name><operator pos:line="71" pos:column="13">-&gt;<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="15">flags<pos:position pos:line="71" pos:column="20"/></name></name><operator pos:line="71" pos:column="20">&amp;<pos:position pos:line="71" pos:column="25"/></operator><operator pos:line="71" pos:column="21">(<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">COMM_TRANSPARENT<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">|<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="39">COMM_INTERCEPTION<pos:position pos:line="71" pos:column="56"/></name><operator pos:line="71" pos:column="56">)<pos:position pos:line="71" pos:column="57"/></operator> <operator pos:line="71" pos:column="58">&amp;&amp;<pos:position pos:line="71" pos:column="68"/></operator> <operator pos:line="71" pos:column="61">!<pos:position pos:line="71" pos:column="62"/></operator><call><name><name pos:line="71" pos:column="62">Ip<pos:position pos:line="71" pos:column="64"/></name><operator pos:line="71" pos:column="64">::<pos:position pos:line="71" pos:column="66"/></operator><name pos:line="71" pos:column="66">Interceptor<pos:position pos:line="71" pos:column="77"/></name><operator pos:line="71" pos:column="77">.<pos:position pos:line="71" pos:column="78"/></operator><name pos:line="71" pos:column="78">Lookup<pos:position pos:line="71" pos:column="84"/></name></name><argument_list pos:line="71" pos:column="84">(<argument><expr><name pos:line="71" pos:column="85">details<pos:position pos:line="71" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="94">conn<pos:position pos:line="71" pos:column="98"/></name></expr></argument>)<pos:position pos:line="71" pos:column="99"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="100"/></condition><then pos:line="71" pos:column="100"> <block pos:line="71" pos:column="101">{
        <comment type="line" pos:line="72" pos:column="9">// Failed.</comment>
        <return pos:line="73" pos:column="9">return <expr><name pos:line="73" pos:column="16">COMM_ERROR<pos:position pos:line="73" pos:column="26"/></name></expr>;<pos:position pos:line="73" pos:column="27"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="76" pos:column="5">PROF_stop<pos:position pos:line="76" pos:column="14"/></name><argument_list pos:line="76" pos:column="14">(<argument><expr><name pos:line="76" pos:column="15">comm_accept<pos:position pos:line="76" pos:column="26"/></name></expr></argument>)<pos:position pos:line="76" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="28"/></expr_stmt>
    <return pos:line="77" pos:column="5">return <expr><name pos:line="77" pos:column="12">COMM_OK<pos:position pos:line="77" pos:column="19"/></name></expr>;<pos:position pos:line="77" pos:column="20"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

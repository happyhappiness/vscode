<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_316_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">get_netbios_name<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name><name pos:line="2" pos:column="18">struct<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">main_args<pos:position pos:line="2" pos:column="34"/></name></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">margs<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">netbios<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">ndstruct<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">nd<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">nd<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <name><name pos:line="6" pos:column="10">margs<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">ndoms<pos:position pos:line="6" pos:column="22"/></name></name></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">nd<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">&amp;&amp;<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="18">netbios<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition> <block pos:line="7" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debug<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">char<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator> <literal type="string" pos:line="8" pos:column="24">"%s| %s: DEBUG: Netbios domain loop: netbios@domain %s@%s\n"<pos:position pos:line="8" pos:column="84"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="86">LogTime<pos:position pos:line="8" pos:column="93"/></name><argument_list pos:line="8" pos:column="93">()<pos:position pos:line="8" pos:column="95"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="97">PROGRAM<pos:position pos:line="8" pos:column="104"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="106">nd<pos:position pos:line="8" pos:column="108"/></name><operator pos:line="8" pos:column="108">-&gt;<pos:position pos:line="8" pos:column="113"/></operator><name pos:line="8" pos:column="110">netbios<pos:position pos:line="8" pos:column="117"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="119">nd<pos:position pos:line="8" pos:column="121"/></name><operator pos:line="8" pos:column="121">-&gt;<pos:position pos:line="8" pos:column="126"/></operator><name pos:line="8" pos:column="123">domain<pos:position pos:line="8" pos:column="129"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="131"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">nd<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">netbios<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">&amp;&amp;<pos:position pos:line="9" pos:column="35"/></operator> <operator pos:line="9" pos:column="28">!<pos:position pos:line="9" pos:column="29"/></operator><call><name pos:line="9" pos:column="29">strcasecmp<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name><name pos:line="9" pos:column="40">nd<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">netbios<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="53">netbios<pos:position pos:line="9" pos:column="60"/></name></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="62"/></condition><then pos:line="9" pos:column="62"> <block pos:line="9" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debug<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><operator pos:line="10" pos:column="19">(<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">char<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator> <literal type="string" pos:line="10" pos:column="28">"%s| %s: DEBUG: Found netbios@domain %s@%s\n"<pos:position pos:line="10" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="75">LogTime<pos:position pos:line="10" pos:column="82"/></name><argument_list pos:line="10" pos:column="82">()<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="86">PROGRAM<pos:position pos:line="10" pos:column="93"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="95">nd<pos:position pos:line="10" pos:column="97"/></name><operator pos:line="10" pos:column="97">-&gt;<pos:position pos:line="10" pos:column="102"/></operator><name pos:line="10" pos:column="99">netbios<pos:position pos:line="10" pos:column="106"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="108">nd<pos:position pos:line="10" pos:column="110"/></name><operator pos:line="10" pos:column="110">-&gt;<pos:position pos:line="10" pos:column="115"/></operator><name pos:line="10" pos:column="112">domain<pos:position pos:line="10" pos:column="118"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="120"/></expr_stmt>
            <return pos:line="11" pos:column="13">return <expr><operator pos:line="11" pos:column="20">(<pos:position pos:line="11" pos:column="21"/></operator><name><name pos:line="11" pos:column="21">nd<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">domain<pos:position pos:line="11" pos:column="31"/></name></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator></expr>;<pos:position pos:line="11" pos:column="33"/></return>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="13" pos:column="9">nd<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name><name pos:line="13" pos:column="14">nd<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">next<pos:position pos:line="13" pos:column="22"/></name></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></while>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">NULL<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

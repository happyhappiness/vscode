<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7656_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HMODULE<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">LoadSecurityDll<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">mode<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="35">const<pos:position pos:line="1" pos:column="40"/></specifier> <name pos:line="1" pos:column="41">char<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type> <name pos:line="1" pos:column="48">SSP_Package<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">TCHAR<pos:position pos:line="3" pos:column="10"/></name></type> <name><name pos:line="3" pos:column="11">lpszDLL<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">MAX_PATH<pos:position pos:line="3" pos:column="27"/></name></expr>]<pos:position pos:line="3" pos:column="28"/></index></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">OSVERSIONINFO<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">VerInfo<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">PSecPkgInfo<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">pSPI<pos:position pos:line="5" pos:column="21"/></name>       <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/*
    *  Find out which security DLL to use, depending on
    *  whether we are on NT or 2000 or XP or 2003 Server
    *  We have to use security.dll on Windows NT 4.0.
    *  All other operating systems, we have to use Secur32.dll
    */</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">hModule<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">NULL<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">mode<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">SSP_BASIC<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator> <operator pos:line="14" pos:column="29">&amp;&amp;<pos:position pos:line="14" pos:column="39"/></operator> <operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">mode<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">!=<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">SSP_NTLM<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">)<pos:position pos:line="14" pos:column="50"/></operator></expr>)<pos:position pos:line="14" pos:column="51"/></condition><then pos:line="14" pos:column="51">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">hModule<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="16" pos:column="5">NTLM_mode<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">mode<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">VerInfo<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">dwOSVersionInfoSize<pos:position pos:line="17" pos:column="32"/></name></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <sizeof pos:line="17" pos:column="35">sizeof <argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">OSVERSIONINFO<pos:position pos:line="17" pos:column="56"/></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></sizeof></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">GetVersionEx<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="25">VerInfo<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{   <comment type="block" pos:line="18" pos:column="39">/* If this fails, something has gone wrong */</comment>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">hModule<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">VerInfo<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">.<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">dwPlatformId<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">==<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">VER_PLATFORM_WIN32_NT<pos:position pos:line="21" pos:column="54"/></name> <operator pos:line="21" pos:column="55">&amp;&amp;<pos:position pos:line="21" pos:column="65"/></operator>
            <name><name pos:line="22" pos:column="13">VerInfo<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">dwMajorVersion<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">==<pos:position pos:line="22" pos:column="38"/></operator> <literal type="number" pos:line="22" pos:column="39">4<pos:position pos:line="22" pos:column="40"/></literal> <operator pos:line="22" pos:column="41">&amp;&amp;<pos:position pos:line="22" pos:column="51"/></operator>
            <name><name pos:line="23" pos:column="13">VerInfo<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">dwMinorVersion<pos:position pos:line="23" pos:column="35"/></name></name> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <literal type="number" pos:line="23" pos:column="39">0<pos:position pos:line="23" pos:column="40"/></literal></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">lstrcpy<pos:position pos:line="24" pos:column="16"/></name> <argument_list pos:line="24" pos:column="17">(<argument><expr><name pos:line="24" pos:column="18">lpszDLL<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="27">_T<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">WINNT_SECURITY_DLL<pos:position pos:line="24" pos:column="48"/></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">lstrcpy<pos:position pos:line="26" pos:column="16"/></name> <argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">lpszDLL<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="27">_T<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">WIN2K_SECURITY_DLL<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">hModule<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">LoadLibrary<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">lpszDLL<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">hModule<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">hModule<pos:position pos:line="30" pos:column="23"/></name></expr>;<pos:position pos:line="30" pos:column="24"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="31" pos:column="5">_AcceptSecurityContext<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <operator pos:line="31" pos:column="30">(<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">ACCEPT_SECURITY_CONTEXT_FN<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">)<pos:position pos:line="31" pos:column="58"/></operator>
                             <call><name pos:line="32" pos:column="30">GetProcAddress<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">hModule<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="54">"AcceptSecurityContext"<pos:position pos:line="32" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="79"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">_AcceptSecurityContext<pos:position pos:line="33" pos:column="32"/></name></expr>)<pos:position pos:line="33" pos:column="33"/></condition><then pos:line="33" pos:column="33"> <block pos:line="33" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">UnloadSecurityDll<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">()<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">hModule<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">NULL<pos:position pos:line="35" pos:column="23"/></name></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">hModule<pos:position pos:line="36" pos:column="23"/></name></expr>;<pos:position pos:line="36" pos:column="24"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">UNICODE<pos:position pos:line="38" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="39" pos:column="5">_AcquireCredentialsHandle<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <operator pos:line="39" pos:column="33">(<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">ACQUIRE_CREDENTIALS_HANDLE_FN<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">)<pos:position pos:line="39" pos:column="64"/></operator>
                                <call><name pos:line="40" pos:column="33">GetProcAddress<pos:position pos:line="40" pos:column="47"/></name><argument_list pos:line="40" pos:column="47">(<argument><expr><name pos:line="40" pos:column="48">hModule<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="57">"AcquireCredentialsHandleW"<pos:position pos:line="40" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="86"/></expr_stmt>
<cpp:else pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">else<pos:position pos:line="41" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="42" pos:column="5">_AcquireCredentialsHandle<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">=<pos:position pos:line="42" pos:column="32"/></operator> <operator pos:line="42" pos:column="33">(<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">ACQUIRE_CREDENTIALS_HANDLE_FN<pos:position pos:line="42" pos:column="63"/></name><operator pos:line="42" pos:column="63">)<pos:position pos:line="42" pos:column="64"/></operator>
                                <call><name pos:line="43" pos:column="33">GetProcAddress<pos:position pos:line="43" pos:column="47"/></name><argument_list pos:line="43" pos:column="47">(<argument><expr><name pos:line="43" pos:column="48">hModule<pos:position pos:line="43" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="57">"AcquireCredentialsHandleA"<pos:position pos:line="43" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="86"/></expr_stmt>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">_AcquireCredentialsHandle<pos:position pos:line="45" pos:column="35"/></name></expr>)<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36"> <block pos:line="45" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">UnloadSecurityDll<pos:position pos:line="46" pos:column="26"/></name><argument_list pos:line="46" pos:column="26">()<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">hModule<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <name pos:line="47" pos:column="19">NULL<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">hModule<pos:position pos:line="48" pos:column="23"/></name></expr>;<pos:position pos:line="48" pos:column="24"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="50" pos:column="5">_CompleteAuthToken<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">=<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="26">(<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">COMPLETE_AUTH_TOKEN_FN<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">)<pos:position pos:line="50" pos:column="50"/></operator>
                         <call><name pos:line="51" pos:column="26">GetProcAddress<pos:position pos:line="51" pos:column="40"/></name><argument_list pos:line="51" pos:column="40">(<argument><expr><name pos:line="51" pos:column="41">hModule<pos:position pos:line="51" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="50">"CompleteAuthToken"<pos:position pos:line="51" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="71"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">_CompleteAuthToken<pos:position pos:line="52" pos:column="28"/></name></expr>)<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29"> <block pos:line="52" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">UnloadSecurityDll<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">()<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">hModule<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">NULL<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">hModule<pos:position pos:line="55" pos:column="23"/></name></expr>;<pos:position pos:line="55" pos:column="24"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="57" pos:column="5">_DeleteSecurityContext<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">=<pos:position pos:line="57" pos:column="29"/></operator> <operator pos:line="57" pos:column="30">(<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="31">DELETE_SECURITY_CONTEXT_FN<pos:position pos:line="57" pos:column="57"/></name><operator pos:line="57" pos:column="57">)<pos:position pos:line="57" pos:column="58"/></operator>
                             <call><name pos:line="58" pos:column="30">GetProcAddress<pos:position pos:line="58" pos:column="44"/></name><argument_list pos:line="58" pos:column="44">(<argument><expr><name pos:line="58" pos:column="45">hModule<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="54">"DeleteSecurityContext"<pos:position pos:line="58" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="79"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><operator pos:line="59" pos:column="9">!<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">_DeleteSecurityContext<pos:position pos:line="59" pos:column="32"/></name></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33"> <block pos:line="59" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">UnloadSecurityDll<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">()<pos:position pos:line="60" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">hModule<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name pos:line="61" pos:column="19">NULL<pos:position pos:line="61" pos:column="23"/></name></expr>;<pos:position pos:line="61" pos:column="24"/></expr_stmt>
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">hModule<pos:position pos:line="62" pos:column="23"/></name></expr>;<pos:position pos:line="62" pos:column="24"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="64" pos:column="5">_FreeContextBuffer<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <operator pos:line="64" pos:column="26">(<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="27">FREE_CONTEXT_BUFFER_FN<pos:position pos:line="64" pos:column="49"/></name><operator pos:line="64" pos:column="49">)<pos:position pos:line="64" pos:column="50"/></operator>
                         <call><name pos:line="65" pos:column="26">GetProcAddress<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><name pos:line="65" pos:column="41">hModule<pos:position pos:line="65" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="50">"FreeContextBuffer"<pos:position pos:line="65" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="71"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><operator pos:line="66" pos:column="9">!<pos:position pos:line="66" pos:column="10"/></operator><name pos:line="66" pos:column="10">_FreeContextBuffer<pos:position pos:line="66" pos:column="28"/></name></expr>)<pos:position pos:line="66" pos:column="29"/></condition><then pos:line="66" pos:column="29"> <block pos:line="66" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">UnloadSecurityDll<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">()<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="68" pos:column="9">hModule<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <name pos:line="68" pos:column="19">NULL<pos:position pos:line="68" pos:column="23"/></name></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>
        <return pos:line="69" pos:column="9">return <expr><name pos:line="69" pos:column="16">hModule<pos:position pos:line="69" pos:column="23"/></name></expr>;<pos:position pos:line="69" pos:column="24"/></return>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="71" pos:column="5">_FreeCredentialsHandle<pos:position pos:line="71" pos:column="27"/></name> <operator pos:line="71" pos:column="28">=<pos:position pos:line="71" pos:column="29"/></operator> <operator pos:line="71" pos:column="30">(<pos:position pos:line="71" pos:column="31"/></operator><name pos:line="71" pos:column="31">FREE_CREDENTIALS_HANDLE_FN<pos:position pos:line="71" pos:column="57"/></name><operator pos:line="71" pos:column="57">)<pos:position pos:line="71" pos:column="58"/></operator>
                             <call><name pos:line="72" pos:column="30">GetProcAddress<pos:position pos:line="72" pos:column="44"/></name><argument_list pos:line="72" pos:column="44">(<argument><expr><name pos:line="72" pos:column="45">hModule<pos:position pos:line="72" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="54">"FreeCredentialsHandle"<pos:position pos:line="72" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="79"/></expr_stmt>
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><operator pos:line="73" pos:column="9">!<pos:position pos:line="73" pos:column="10"/></operator><name pos:line="73" pos:column="10">_FreeCredentialsHandle<pos:position pos:line="73" pos:column="32"/></name></expr>)<pos:position pos:line="73" pos:column="33"/></condition><then pos:line="73" pos:column="33"> <block pos:line="73" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">UnloadSecurityDll<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">()<pos:position pos:line="74" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="75" pos:column="9">hModule<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="19">NULL<pos:position pos:line="75" pos:column="23"/></name></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">hModule<pos:position pos:line="76" pos:column="23"/></name></expr>;<pos:position pos:line="76" pos:column="24"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
<cpp:ifdef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifdef<pos:position pos:line="78" pos:column="7"/></cpp:directive> <name pos:line="78" pos:column="8">UNICODE<pos:position pos:line="78" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="79" pos:column="5">_InitializeSecurityContext<pos:position pos:line="79" pos:column="31"/></name> <operator pos:line="79" pos:column="32">=<pos:position pos:line="79" pos:column="33"/></operator> <operator pos:line="79" pos:column="34">(<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="35">INITIALIZE_SECURITY_CONTEXT_FN<pos:position pos:line="79" pos:column="65"/></name><operator pos:line="79" pos:column="65">)<pos:position pos:line="79" pos:column="66"/></operator>
                                 <call><name pos:line="80" pos:column="34">GetProcAddress<pos:position pos:line="80" pos:column="48"/></name><argument_list pos:line="80" pos:column="48">(<argument><expr><name pos:line="80" pos:column="49">hModule<pos:position pos:line="80" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="58">"InitializeSecurityContextW"<pos:position pos:line="80" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="88"/></expr_stmt>
<cpp:else pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">else<pos:position pos:line="81" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="82" pos:column="5">_InitializeSecurityContext<pos:position pos:line="82" pos:column="31"/></name> <operator pos:line="82" pos:column="32">=<pos:position pos:line="82" pos:column="33"/></operator> <operator pos:line="82" pos:column="34">(<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="35">INITIALIZE_SECURITY_CONTEXT_FN<pos:position pos:line="82" pos:column="65"/></name><operator pos:line="82" pos:column="65">)<pos:position pos:line="82" pos:column="66"/></operator>
                                 <call><name pos:line="83" pos:column="34">GetProcAddress<pos:position pos:line="83" pos:column="48"/></name><argument_list pos:line="83" pos:column="48">(<argument><expr><name pos:line="83" pos:column="49">hModule<pos:position pos:line="83" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="58">"InitializeSecurityContextA"<pos:position pos:line="83" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="88"/></expr_stmt>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><operator pos:line="85" pos:column="9">!<pos:position pos:line="85" pos:column="10"/></operator><name pos:line="85" pos:column="10">_InitializeSecurityContext<pos:position pos:line="85" pos:column="36"/></name></expr>)<pos:position pos:line="85" pos:column="37"/></condition><then pos:line="85" pos:column="37"> <block pos:line="85" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">UnloadSecurityDll<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">()<pos:position pos:line="86" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">hModule<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <name pos:line="87" pos:column="19">NULL<pos:position pos:line="87" pos:column="23"/></name></expr>;<pos:position pos:line="87" pos:column="24"/></expr_stmt>
        <return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">hModule<pos:position pos:line="88" pos:column="23"/></name></expr>;<pos:position pos:line="88" pos:column="24"/></return>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if>
<cpp:ifdef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">ifdef<pos:position pos:line="90" pos:column="7"/></cpp:directive> <name pos:line="90" pos:column="8">UNICODE<pos:position pos:line="90" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="91" pos:column="5">_QuerySecurityPackageInfo<pos:position pos:line="91" pos:column="30"/></name> <operator pos:line="91" pos:column="31">=<pos:position pos:line="91" pos:column="32"/></operator> <operator pos:line="91" pos:column="33">(<pos:position pos:line="91" pos:column="34"/></operator><name pos:line="91" pos:column="34">QUERY_SECURITY_PACKAGE_INFO_FN<pos:position pos:line="91" pos:column="64"/></name><operator pos:line="91" pos:column="64">)<pos:position pos:line="91" pos:column="65"/></operator>
                                <call><name pos:line="92" pos:column="33">GetProcAddress<pos:position pos:line="92" pos:column="47"/></name><argument_list pos:line="92" pos:column="47">(<argument><expr><name pos:line="92" pos:column="48">hModule<pos:position pos:line="92" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="57">"QuerySecurityPackageInfoW"<pos:position pos:line="92" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="86"/></expr_stmt>
<cpp:else pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">else<pos:position pos:line="93" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="94" pos:column="5">_QuerySecurityPackageInfo<pos:position pos:line="94" pos:column="30"/></name> <operator pos:line="94" pos:column="31">=<pos:position pos:line="94" pos:column="32"/></operator> <operator pos:line="94" pos:column="33">(<pos:position pos:line="94" pos:column="34"/></operator><name pos:line="94" pos:column="34">QUERY_SECURITY_PACKAGE_INFO_FN<pos:position pos:line="94" pos:column="64"/></name><operator pos:line="94" pos:column="64">)<pos:position pos:line="94" pos:column="65"/></operator>
                                <call><name pos:line="95" pos:column="33">GetProcAddress<pos:position pos:line="95" pos:column="47"/></name><argument_list pos:line="95" pos:column="47">(<argument><expr><name pos:line="95" pos:column="48">hModule<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="57">"QuerySecurityPackageInfoA"<pos:position pos:line="95" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="86"/></expr_stmt>
<cpp:endif pos:line="96" pos:column="1">#<cpp:directive pos:line="96" pos:column="2">endif<pos:position pos:line="96" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">_QuerySecurityPackageInfo<pos:position pos:line="97" pos:column="35"/></name></expr>)<pos:position pos:line="97" pos:column="36"/></condition><then pos:line="97" pos:column="36"> <block pos:line="97" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">UnloadSecurityDll<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">()<pos:position pos:line="98" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="99" pos:column="9">hModule<pos:position pos:line="99" pos:column="16"/></name> <operator pos:line="99" pos:column="17">=<pos:position pos:line="99" pos:column="18"/></operator> <name pos:line="99" pos:column="19">NULL<pos:position pos:line="99" pos:column="23"/></name></expr>;<pos:position pos:line="99" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">ifdef<pos:position pos:line="102" pos:column="7"/></cpp:directive> <name pos:line="102" pos:column="8">UNICODE<pos:position pos:line="102" pos:column="15"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="103" pos:column="5">_QueryContextAttributes<pos:position pos:line="103" pos:column="28"/></name> <operator pos:line="103" pos:column="29">=<pos:position pos:line="103" pos:column="30"/></operator> <operator pos:line="103" pos:column="31">(<pos:position pos:line="103" pos:column="32"/></operator><name pos:line="103" pos:column="32">QUERY_CONTEXT_ATTRIBUTES_FN_W<pos:position pos:line="103" pos:column="61"/></name><operator pos:line="103" pos:column="61">)<pos:position pos:line="103" pos:column="62"/></operator>
                              <call><name pos:line="104" pos:column="31">GetProcAddress<pos:position pos:line="104" pos:column="45"/></name><argument_list pos:line="104" pos:column="45">(<argument><expr><name pos:line="104" pos:column="46">hModule<pos:position pos:line="104" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="55">"QueryContextAttributesW"<pos:position pos:line="104" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="82"/></expr_stmt>
<cpp:else pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">else<pos:position pos:line="105" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="106" pos:column="5">_QueryContextAttributes<pos:position pos:line="106" pos:column="28"/></name> <operator pos:line="106" pos:column="29">=<pos:position pos:line="106" pos:column="30"/></operator> <operator pos:line="106" pos:column="31">(<pos:position pos:line="106" pos:column="32"/></operator><name pos:line="106" pos:column="32">QUERY_CONTEXT_ATTRIBUTES_FN_A<pos:position pos:line="106" pos:column="61"/></name><operator pos:line="106" pos:column="61">)<pos:position pos:line="106" pos:column="62"/></operator>
                              <call><name pos:line="107" pos:column="31">GetProcAddress<pos:position pos:line="107" pos:column="45"/></name><argument_list pos:line="107" pos:column="45">(<argument><expr><name pos:line="107" pos:column="46">hModule<pos:position pos:line="107" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="55">"QueryContextAttributesA"<pos:position pos:line="107" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="82"/></expr_stmt>
<cpp:endif pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">endif<pos:position pos:line="108" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><operator pos:line="109" pos:column="9">!<pos:position pos:line="109" pos:column="10"/></operator><name pos:line="109" pos:column="10">_QueryContextAttributes<pos:position pos:line="109" pos:column="33"/></name></expr>)<pos:position pos:line="109" pos:column="34"/></condition><then pos:line="109" pos:column="34"> <block pos:line="109" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">UnloadSecurityDll<pos:position pos:line="110" pos:column="26"/></name><argument_list pos:line="110" pos:column="26">()<pos:position pos:line="110" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="111" pos:column="9">hModule<pos:position pos:line="111" pos:column="16"/></name> <operator pos:line="111" pos:column="17">=<pos:position pos:line="111" pos:column="18"/></operator> <name pos:line="111" pos:column="19">NULL<pos:position pos:line="111" pos:column="23"/></name></expr>;<pos:position pos:line="111" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="114" pos:column="5">/* Get max token size */</comment>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">_QuerySecurityPackageInfo<pos:position pos:line="115" pos:column="30"/></name><argument_list pos:line="115" pos:column="30">(<argument><expr><operator pos:line="115" pos:column="31">(<pos:position pos:line="115" pos:column="32"/></operator><name pos:line="115" pos:column="32">SEC_CHAR<pos:position pos:line="115" pos:column="40"/></name><operator pos:line="115" pos:column="40">*<pos:position pos:line="115" pos:column="41"/></operator><operator pos:line="115" pos:column="41">)<pos:position pos:line="115" pos:column="42"/></operator><call><name pos:line="115" pos:column="42">_T<pos:position pos:line="115" pos:column="44"/></name><argument_list pos:line="115" pos:column="44">(<argument><expr><name pos:line="115" pos:column="45">SSP_Package<pos:position pos:line="115" pos:column="56"/></name></expr></argument>)<pos:position pos:line="115" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="115" pos:column="59">&amp;<pos:position pos:line="115" pos:column="64"/></operator><name pos:line="115" pos:column="60">pSPI<pos:position pos:line="115" pos:column="64"/></name></expr></argument>)<pos:position pos:line="115" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><name pos:line="116" pos:column="5">cbMaxToken<pos:position pos:line="116" pos:column="15"/></name> <operator pos:line="116" pos:column="16">=<pos:position pos:line="116" pos:column="17"/></operator> <name><name pos:line="116" pos:column="18">pSPI<pos:position pos:line="116" pos:column="22"/></name><operator pos:line="116" pos:column="22">-&gt;<pos:position pos:line="116" pos:column="27"/></operator><name pos:line="116" pos:column="24">cbMaxToken<pos:position pos:line="116" pos:column="34"/></name></name></expr>;<pos:position pos:line="116" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">_FreeContextBuffer<pos:position pos:line="117" pos:column="23"/></name><argument_list pos:line="117" pos:column="23">(<argument><expr><name pos:line="117" pos:column="24">pSPI<pos:position pos:line="117" pos:column="28"/></name></expr></argument>)<pos:position pos:line="117" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="119" pos:column="5">/* Allocate buffers for client and server messages */</comment>
    <expr_stmt><expr><name pos:line="120" pos:column="5">pClientBuf<pos:position pos:line="120" pos:column="15"/></name> <operator pos:line="120" pos:column="16">=<pos:position pos:line="120" pos:column="17"/></operator> <call><name pos:line="120" pos:column="18">xcalloc<pos:position pos:line="120" pos:column="25"/></name><argument_list pos:line="120" pos:column="25">(<argument><expr><name pos:line="120" pos:column="26">cbMaxToken<pos:position pos:line="120" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="120" pos:column="38">sizeof<argument_list pos:line="120" pos:column="44">(<argument><expr><name pos:line="120" pos:column="45">char<pos:position pos:line="120" pos:column="49"/></name></expr></argument>)<pos:position pos:line="120" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="121" pos:column="5">pServerBuf<pos:position pos:line="121" pos:column="15"/></name> <operator pos:line="121" pos:column="16">=<pos:position pos:line="121" pos:column="17"/></operator> <call><name pos:line="121" pos:column="18">xcalloc<pos:position pos:line="121" pos:column="25"/></name><argument_list pos:line="121" pos:column="25">(<argument><expr><name pos:line="121" pos:column="26">cbMaxToken<pos:position pos:line="121" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="38">sizeof<argument_list pos:line="121" pos:column="44">(<argument><expr><name pos:line="121" pos:column="45">char<pos:position pos:line="121" pos:column="49"/></name></expr></argument>)<pos:position pos:line="121" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name pos:line="122" pos:column="5">SSP_Package_InUse<pos:position pos:line="122" pos:column="22"/></name> <operator pos:line="122" pos:column="23">=<pos:position pos:line="122" pos:column="24"/></operator> <call><name pos:line="122" pos:column="25">xstrdup<pos:position pos:line="122" pos:column="32"/></name><argument_list pos:line="122" pos:column="32">(<argument><expr><name pos:line="122" pos:column="33">SSP_Package<pos:position pos:line="122" pos:column="44"/></name></expr></argument>)<pos:position pos:line="122" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="46"/></expr_stmt>

    <return pos:line="124" pos:column="5">return <expr><name pos:line="124" pos:column="12">hModule<pos:position pos:line="124" pos:column="19"/></name></expr>;<pos:position pos:line="124" pos:column="20"/></return>
}<pos:position pos:line="125" pos:column="2"/></block></function></unit>

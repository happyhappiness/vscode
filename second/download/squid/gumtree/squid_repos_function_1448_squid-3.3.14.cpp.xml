<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1448_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeSwapOutFileClosed<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">data<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">errflag<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">StoreIOState<pos:position pos:line="2" pos:column="61"/></name><operator pos:line="2" pos:column="61">::<pos:position pos:line="2" pos:column="63"/></operator><name pos:line="2" pos:column="63">Pointer<pos:position pos:line="2" pos:column="70"/></name></name></type> <name pos:line="2" pos:column="71">self<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">generic_cbdata<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">c<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">generic_cbdata<pos:position pos:line="4" pos:column="40"/></name> <operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">data<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><operator pos:line="5" pos:column="21">(<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">StoreEntry<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator><name><name pos:line="5" pos:column="35">c<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">data<pos:position pos:line="5" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">MemObject<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">mem<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name><name pos:line="6" pos:column="22">e<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">mem_obj<pos:position pos:line="6" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">mem<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">swapout<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">sio<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">==<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">self<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">e<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">swap_status<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">==<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">SWAPOUT_WRITING<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">cbdataFree<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">c<pos:position pos:line="9" pos:column="17"/></name></expr></argument>)<pos:position pos:line="9" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>

    <comment type="line" pos:line="11" pos:column="5">// if object_size is still unknown, the entry was probably aborted</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">errflag<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">||<pos:position pos:line="12" pos:column="19"/></operator> <call><name><name pos:line="12" pos:column="20">e<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">objectLen<pos:position pos:line="12" pos:column="32"/></name></name><argument_list pos:line="12" pos:column="32">()<pos:position pos:line="12" pos:column="34"/></argument_list></call> <operator pos:line="12" pos:column="35">&lt;<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="37">0<pos:position pos:line="12" pos:column="38"/></literal></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">20<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">2<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"storeSwapOutFileClosed: dirno "<pos:position pos:line="13" pos:column="55"/></literal> <operator pos:line="13" pos:column="56">&lt;&lt;<pos:position pos:line="13" pos:column="64"/></operator> <name><name pos:line="13" pos:column="59">e<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">swap_dirn<pos:position pos:line="13" pos:column="71"/></name></name> <operator pos:line="13" pos:column="72">&lt;&lt;<pos:position pos:line="13" pos:column="80"/></operator> <literal type="string" pos:line="13" pos:column="75">", swapfile "<pos:position pos:line="13" pos:column="88"/></literal> <operator pos:line="13" pos:column="89">&lt;&lt;<pos:position pos:line="13" pos:column="97"/></operator>
               <name><name pos:line="14" pos:column="16">std<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">::<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">hex<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">&lt;&lt;<pos:position pos:line="14" pos:column="33"/></operator> <call><name><name pos:line="14" pos:column="28">std<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">::<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">setw<pos:position pos:line="14" pos:column="37"/></name></name><argument_list pos:line="14" pos:column="37">(<argument><expr><literal type="number" pos:line="14" pos:column="38">8<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call> <operator pos:line="14" pos:column="41">&lt;&lt;<pos:position pos:line="14" pos:column="49"/></operator> <call><name><name pos:line="14" pos:column="44">std<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">::<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">setfill<pos:position pos:line="14" pos:column="56"/></name></name><argument_list pos:line="14" pos:column="56">(<argument><expr><literal type="char" pos:line="14" pos:column="57">'0'<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call> <operator pos:line="14" pos:column="62">&lt;&lt;<pos:position pos:line="14" pos:column="70"/></operator> <name><name pos:line="14" pos:column="65">std<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">::<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="70">uppercase<pos:position pos:line="14" pos:column="79"/></name></name> <operator pos:line="14" pos:column="80">&lt;&lt;<pos:position pos:line="14" pos:column="88"/></operator>
               <name><name pos:line="15" pos:column="16">e<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">swap_filen<pos:position pos:line="15" pos:column="29"/></name></name> <operator pos:line="15" pos:column="30">&lt;&lt;<pos:position pos:line="15" pos:column="38"/></operator> <literal type="string" pos:line="15" pos:column="33">", errflag="<pos:position pos:line="15" pos:column="45"/></literal> <operator pos:line="15" pos:column="46">&lt;&lt;<pos:position pos:line="15" pos:column="54"/></operator> <name pos:line="15" pos:column="49">errflag<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">errflag<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">==<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">DISK_NO_SPACE_LEFT<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
            <comment type="block" pos:line="18" pos:column="13">/* FIXME: this should be handle by the link from store IO to
             * Store, rather than being a top level API call.
             */</comment>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">e<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">store<pos:position pos:line="21" pos:column="21"/></name></name><argument_list pos:line="21" pos:column="21">()<pos:position pos:line="21" pos:column="23"/></argument_list></call><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><call><name pos:line="21" pos:column="25">diskFull<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">()<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">storeConfigure<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">()<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">e<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">swap_filen<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">&gt;=<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="30">0<pos:position pos:line="25" pos:column="31"/></literal></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="26" pos:column="13">e<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">unlink<pos:position pos:line="26" pos:column="22"/></name></name><argument_list pos:line="26" pos:column="22">()<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">assert<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name><name pos:line="28" pos:column="16">e<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">swap_status<pos:position pos:line="28" pos:column="30"/></name></name> <operator pos:line="28" pos:column="31">==<pos:position pos:line="28" pos:column="33"/></operator> <name pos:line="28" pos:column="34">SWAPOUT_NONE<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="30" pos:column="9">e<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">releaseRequest<pos:position pos:line="30" pos:column="26"/></name></name><argument_list pos:line="30" pos:column="26">()<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
        <comment type="block" pos:line="32" pos:column="9">/* swapping complete */</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">debugs<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">20<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="20">3<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="23">"storeSwapOutFileClosed: SwapOut complete: '"<pos:position pos:line="33" pos:column="68"/></literal> <operator pos:line="33" pos:column="69">&lt;&lt;<pos:position pos:line="33" pos:column="77"/></operator> <call><name><name pos:line="33" pos:column="72">e<pos:position pos:line="33" pos:column="73"/></name><operator pos:line="33" pos:column="73">-&gt;<pos:position pos:line="33" pos:column="78"/></operator><name pos:line="33" pos:column="75">url<pos:position pos:line="33" pos:column="78"/></name></name><argument_list pos:line="33" pos:column="78">()<pos:position pos:line="33" pos:column="80"/></argument_list></call> <operator pos:line="33" pos:column="81">&lt;&lt;<pos:position pos:line="33" pos:column="89"/></operator> <literal type="string" pos:line="33" pos:column="84">"' to "<pos:position pos:line="33" pos:column="91"/></literal> <operator pos:line="33" pos:column="92">&lt;&lt;<pos:position pos:line="33" pos:column="100"/></operator>
               <name><name pos:line="34" pos:column="16">e<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">-&gt;<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="19">swap_dirn<pos:position pos:line="34" pos:column="28"/></name></name>  <operator pos:line="34" pos:column="30">&lt;&lt;<pos:position pos:line="34" pos:column="38"/></operator> <literal type="string" pos:line="34" pos:column="33">", "<pos:position pos:line="34" pos:column="37"/></literal> <operator pos:line="34" pos:column="38">&lt;&lt;<pos:position pos:line="34" pos:column="46"/></operator> <name><name pos:line="34" pos:column="41">std<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">::<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="46">hex<pos:position pos:line="34" pos:column="49"/></name></name> <operator pos:line="34" pos:column="50">&lt;&lt;<pos:position pos:line="34" pos:column="58"/></operator> <call><name><name pos:line="34" pos:column="53">std<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">::<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="58">setw<pos:position pos:line="34" pos:column="62"/></name></name><argument_list pos:line="34" pos:column="62">(<argument><expr><literal type="number" pos:line="34" pos:column="63">8<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call> <operator pos:line="34" pos:column="66">&lt;&lt;<pos:position pos:line="34" pos:column="74"/></operator> <call><name><name pos:line="34" pos:column="69">std<pos:position pos:line="34" pos:column="72"/></name><operator pos:line="34" pos:column="72">::<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="74">setfill<pos:position pos:line="34" pos:column="81"/></name></name><argument_list pos:line="34" pos:column="81">(<argument><expr><literal type="char" pos:line="34" pos:column="82">'0'<pos:position pos:line="34" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="86"/></argument_list></call> <operator pos:line="34" pos:column="87">&lt;&lt;<pos:position pos:line="34" pos:column="95"/></operator>
               <name><name pos:line="35" pos:column="16">std<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">::<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">uppercase<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">&lt;&lt;<pos:position pos:line="35" pos:column="39"/></operator> <name><name pos:line="35" pos:column="34">e<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">swap_filen<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">20<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">5<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="23">HERE<pos:position pos:line="36" pos:column="27"/></name> <operator pos:line="36" pos:column="28">&lt;&lt;<pos:position pos:line="36" pos:column="36"/></operator> <literal type="string" pos:line="36" pos:column="31">"swap_file_sz = "<pos:position pos:line="36" pos:column="48"/></literal> <operator pos:line="36" pos:column="49">&lt;&lt;<pos:position pos:line="36" pos:column="57"/></operator>
               <call><name><name pos:line="37" pos:column="16">e<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">objectLen<pos:position pos:line="37" pos:column="28"/></name></name><argument_list pos:line="37" pos:column="28">()<pos:position pos:line="37" pos:column="30"/></argument_list></call> <operator pos:line="37" pos:column="31">&lt;&lt;<pos:position pos:line="37" pos:column="39"/></operator> <literal type="string" pos:line="37" pos:column="34">" + "<pos:position pos:line="37" pos:column="39"/></literal> <operator pos:line="37" pos:column="40">&lt;&lt;<pos:position pos:line="37" pos:column="48"/></operator> <name><name pos:line="37" pos:column="43">mem<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">-&gt;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="48">swap_hdr_sz<pos:position pos:line="37" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="39" pos:column="9">e<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">swap_file_sz<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">=<pos:position pos:line="39" pos:column="26"/></operator> <call><name><name pos:line="39" pos:column="27">e<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">objectLen<pos:position pos:line="39" pos:column="39"/></name></name><argument_list pos:line="39" pos:column="39">()<pos:position pos:line="39" pos:column="41"/></argument_list></call> <operator pos:line="39" pos:column="42">+<pos:position pos:line="39" pos:column="43"/></operator> <name><name pos:line="39" pos:column="44">mem<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">swap_hdr_sz<pos:position pos:line="39" pos:column="60"/></name></name></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">e<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">swap_status<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">SWAPOUT_DONE<pos:position pos:line="40" pos:column="38"/></name></expr>;<pos:position pos:line="40" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="41" pos:column="9">e<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">store<pos:position pos:line="41" pos:column="17"/></name></name><argument_list pos:line="41" pos:column="17">()<pos:position pos:line="41" pos:column="19"/></argument_list></call><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><call><name pos:line="41" pos:column="21">swappedOut<pos:position pos:line="41" pos:column="31"/></name><argument_list pos:line="41" pos:column="31">(<argument><expr><operator pos:line="41" pos:column="32">*<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">e<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt>

        <comment type="line" pos:line="43" pos:column="9">// XXX: For some Stores, it is pointless to re-check cachability here</comment>
        <comment type="line" pos:line="44" pos:column="9">// and it leads to double counts in store_check_cachable_hist. We need</comment>
        <comment type="line" pos:line="45" pos:column="9">// another way to signal a completed but failed swapout. Or, better,</comment>
        <comment type="line" pos:line="46" pos:column="9">// each Store should handle its own logging and LOG state setting.</comment>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name><name pos:line="47" pos:column="13">e<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">checkCachable<pos:position pos:line="47" pos:column="29"/></name></name><argument_list pos:line="47" pos:column="29">()<pos:position pos:line="47" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="32"/></condition><then pos:line="47" pos:column="32"> <block pos:line="47" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">storeLog<pos:position pos:line="48" pos:column="21"/></name><argument_list pos:line="48" pos:column="21">(<argument><expr><name pos:line="48" pos:column="22">STORE_LOG_SWAPOUT<pos:position pos:line="48" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="41">e<pos:position pos:line="48" pos:column="42"/></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">storeDirSwapLog<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">e<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">SWAP_LOG_ADD<pos:position pos:line="49" pos:column="44"/></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>

        <expr_stmt><expr><operator pos:line="52" pos:column="9">++<pos:position pos:line="52" pos:column="11"/></operator><name><name pos:line="52" pos:column="11">statCounter<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">swap<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">outs<pos:position pos:line="52" pos:column="32"/></name></name></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">debugs<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><literal type="number" pos:line="55" pos:column="12">20<pos:position pos:line="55" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="16">3<pos:position pos:line="55" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="19">"storeSwapOutFileClosed: "<pos:position pos:line="55" pos:column="45"/></literal> <operator pos:line="55" pos:column="46">&lt;&lt;<pos:position pos:line="55" pos:column="54"/></operator> <name pos:line="55" pos:column="49">__FILE__<pos:position pos:line="55" pos:column="57"/></name> <operator pos:line="55" pos:column="58">&lt;&lt;<pos:position pos:line="55" pos:column="66"/></operator> <literal type="string" pos:line="55" pos:column="61">":"<pos:position pos:line="55" pos:column="64"/></literal> <operator pos:line="55" pos:column="65">&lt;&lt;<pos:position pos:line="55" pos:column="73"/></operator> <name pos:line="55" pos:column="68">__LINE__<pos:position pos:line="55" pos:column="76"/></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">mem<pos:position pos:line="56" pos:column="8"/></name><operator pos:line="56" pos:column="8">-&gt;<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="10">swapout<pos:position pos:line="56" pos:column="17"/></name><operator pos:line="56" pos:column="17">.<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="18">sio<pos:position pos:line="56" pos:column="21"/></name></name> <operator pos:line="56" pos:column="22">=<pos:position pos:line="56" pos:column="23"/></operator> <name pos:line="56" pos:column="24">NULL<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="57" pos:column="5">e<pos:position pos:line="57" pos:column="6"/></name><operator pos:line="57" pos:column="6">-&gt;<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="8">unlock<pos:position pos:line="57" pos:column="14"/></name></name><argument_list pos:line="57" pos:column="14">()<pos:position pos:line="57" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

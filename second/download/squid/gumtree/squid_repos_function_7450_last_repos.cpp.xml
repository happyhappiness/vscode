<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7450_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseClientHelloHandshakeMessage<pos:position pos:line="2" pos:column="60"/></name></name><parameter_list pos:line="2" pos:column="60">(<parameter><decl><type><specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier> <name pos:line="2" pos:column="67">SBuf<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">&amp;<pos:position pos:line="2" pos:column="77"/></modifier></type><name pos:line="2" pos:column="73">raw<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Parser<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">::<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">BinaryTokenizer<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">tk<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">raw<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Parser<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">::<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">BinaryTokenizerContext<pos:position pos:line="5" pos:column="35"/></name></name></type> <name pos:line="5" pos:column="36">hello<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">tk<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="46">"ClientHello"<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></decl>;<pos:position pos:line="5" pos:column="61"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">details<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">tlsSupportedVersion<pos:position pos:line="6" pos:column="33"/></name></name> <operator pos:line="6" pos:column="34">=<pos:position pos:line="6" pos:column="35"/></operator> <call><name pos:line="6" pos:column="36">ParseProtocolVersion<pos:position pos:line="6" pos:column="56"/></name><argument_list pos:line="6" pos:column="56">(<argument><expr><name pos:line="6" pos:column="57">tk<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">details<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">clientRandom<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <call><name><name pos:line="7" pos:column="29">tk<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">area<pos:position pos:line="7" pos:column="36"/></name></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">HelloRandomSize<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="54">".random"<pos:position pos:line="7" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">details<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">sessionId<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name><name pos:line="8" pos:column="26">tk<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">.<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">pstring8<pos:position pos:line="8" pos:column="37"/></name></name><argument_list pos:line="8" pos:column="37">(<argument><expr><literal type="string" pos:line="8" pos:column="38">".session_id"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">parseCiphers<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><call><name><name pos:line="9" pos:column="18">tk<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">pstring16<pos:position pos:line="9" pos:column="30"/></name></name><argument_list pos:line="9" pos:column="30">(<argument><expr><literal type="string" pos:line="9" pos:column="31">".cipher_suites"<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">details<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">compressionSupported<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">=<pos:position pos:line="10" pos:column="36"/></operator> <call><name pos:line="10" pos:column="37">parseCompressionMethods<pos:position pos:line="10" pos:column="60"/></name><argument_list pos:line="10" pos:column="60">(<argument><expr><call><name><name pos:line="10" pos:column="61">tk<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">.<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="64">pstring8<pos:position pos:line="10" pos:column="72"/></name></name><argument_list pos:line="10" pos:column="72">(<argument><expr><literal type="string" pos:line="10" pos:column="73">".compression_methods"<pos:position pos:line="10" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="98"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name><name pos:line="11" pos:column="10">tk<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">.<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">atEnd<pos:position pos:line="11" pos:column="18"/></name></name><argument_list pos:line="11" pos:column="18">()<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <comment type="line" pos:line="11" pos:column="22">// extension-free message ends here</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">parseExtensions<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><call><name><name pos:line="12" pos:column="25">tk<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">pstring16<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">(<argument><expr><literal type="string" pos:line="12" pos:column="38">".extensions"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">hello<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">.<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">success<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">()<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

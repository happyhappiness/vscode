<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_109.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_memcachemode<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">entry<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">SquidConfig<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">config<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><name pos:line="4" pos:column="23">entry<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="30">"%s "<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="37">name<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">Config<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">onoff<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">memory_cache_first<pos:position pos:line="5" pos:column="40"/></name></name> <operator pos:line="5" pos:column="41">&amp;&amp;<pos:position pos:line="5" pos:column="51"/></operator> <name><name pos:line="5" pos:column="44">Config<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">.<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">onoff<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">.<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">memory_cache_disk<pos:position pos:line="5" pos:column="74"/></name></name></expr>)<pos:position pos:line="5" pos:column="75"/></condition><then pos:line="5" pos:column="75">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">storeAppendPrintf<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">entry<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"always"<pos:position pos:line="6" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt></block></then>
    <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><operator pos:line="7" pos:column="14">!<pos:position pos:line="7" pos:column="15"/></operator><name><name pos:line="7" pos:column="15">Config<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">onoff<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">.<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">memory_cache_first<pos:position pos:line="7" pos:column="46"/></name></name> <operator pos:line="7" pos:column="47">&amp;&amp;<pos:position pos:line="7" pos:column="57"/></operator> <name><name pos:line="7" pos:column="50">Config<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">.<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">onoff<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">.<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="63">memory_cache_disk<pos:position pos:line="7" pos:column="80"/></name></name></expr>)<pos:position pos:line="7" pos:column="81"/></condition><then pos:line="7" pos:column="81">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">entry<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"disk"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name><name pos:line="9" pos:column="14">Config<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">onoff<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">memory_cache_first<pos:position pos:line="9" pos:column="45"/></name></name> <operator pos:line="9" pos:column="46">&amp;&amp;<pos:position pos:line="9" pos:column="56"/></operator> <operator pos:line="9" pos:column="49">!<pos:position pos:line="9" pos:column="50"/></operator><name><name pos:line="9" pos:column="50">Config<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">.<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">onoff<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">.<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="63">memory_cache_disk<pos:position pos:line="9" pos:column="80"/></name></name></expr>)<pos:position pos:line="9" pos:column="81"/></condition><then pos:line="9" pos:column="81">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">storeAppendPrintf<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">entry<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"network"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><operator pos:line="11" pos:column="14">!<pos:position pos:line="11" pos:column="15"/></operator><name><name pos:line="11" pos:column="15">Config<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">onoff<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">memory_cache_first<pos:position pos:line="11" pos:column="46"/></name></name> <operator pos:line="11" pos:column="47">&amp;&amp;<pos:position pos:line="11" pos:column="57"/></operator> <operator pos:line="11" pos:column="50">!<pos:position pos:line="11" pos:column="51"/></operator><name><name pos:line="11" pos:column="51">Config<pos:position pos:line="11" pos:column="57"/></name><operator pos:line="11" pos:column="57">.<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="58">onoff<pos:position pos:line="11" pos:column="63"/></name><operator pos:line="11" pos:column="63">.<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="64">memory_cache_disk<pos:position pos:line="11" pos:column="81"/></name></name></expr>)<pos:position pos:line="11" pos:column="82"/></condition><then pos:line="11" pos:column="82">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">storeAppendPrintf<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">entry<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"none"<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt></block></then></if></elseif></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">storeAppendPrintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">entry<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="30">"\n"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2760_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelTimeout<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">CommTimeoutCbParams<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="42">io<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><cast type="static" pos:line="4" pos:column="36">static_cast<argument_list type="generic" pos:line="4" pos:column="47">&lt;<argument><expr><name pos:line="4" pos:column="48">TunnelStateData<pos:position pos:line="4" pos:column="63"/></name> <operator pos:line="4" pos:column="64">*<pos:position pos:line="4" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="69"/></argument_list><argument_list pos:line="4" pos:column="66">(<argument><expr><name><name pos:line="4" pos:column="67">io<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">.<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="70">data<pos:position pos:line="4" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">26<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <name><name pos:line="5" pos:column="27">io<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* Temporary lock to protect our own feets (comm_close -&gt; tunnelClientClosed -&gt; Free) */</comment>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">CbcPointer<pos:position pos:line="7" pos:column="15"/></name><argument_list type="generic" pos:line="7" pos:column="15">&lt;<argument><expr><name pos:line="7" pos:column="16">TunnelStateData<pos:position pos:line="7" pos:column="31"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="35"/></argument_list></name></type> <name pos:line="7" pos:column="33">safetyLock<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">tunnelState<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">tunnelState<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">client<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">closeIfOpen<pos:position pos:line="9" pos:column="36"/></name></name><argument_list pos:line="9" pos:column="36">()<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">tunnelState<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">server<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">closeIfOpen<pos:position pos:line="10" pos:column="36"/></name></name><argument_list pos:line="10" pos:column="36">()<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

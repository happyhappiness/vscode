<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2796_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">urlMakeAbsolute<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">HttpRequest<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">req<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">relUrl<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">req<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">method<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">.<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">id<pos:position pos:line="5" pos:column="23"/></name></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call> <operator pos:line="5" pos:column="26">==<pos:position pos:line="5" pos:column="28"/></operator> <name><name pos:line="5" pos:column="29">Http<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">::<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">METHOD_CONNECT<pos:position pos:line="5" pos:column="49"/></name></name></expr>)<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50"> <block pos:line="5" pos:column="51">{
        <return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">)<pos:position pos:line="6" pos:column="22"/></operator></expr>;<pos:position pos:line="6" pos:column="23"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">urlbuf<pos:position pos:line="9" pos:column="17"/></name> <init pos:line="9" pos:column="18">= <expr><operator pos:line="9" pos:column="20">(<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">char<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></operator><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator><call><name pos:line="9" pos:column="28">xmalloc<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">MAX_URL<pos:position pos:line="9" pos:column="43"/></name> <operator pos:line="9" pos:column="44">*<pos:position pos:line="9" pos:column="45"/></operator> <sizeof pos:line="9" pos:column="46">sizeof<argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">char<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="60"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name><name pos:line="11" pos:column="9">req<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">url<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">getScheme<pos:position pos:line="11" pos:column="27"/></name></name><argument_list pos:line="11" pos:column="27">()<pos:position pos:line="11" pos:column="29"/></argument_list></call> <operator pos:line="11" pos:column="30">==<pos:position pos:line="11" pos:column="32"/></operator> <name><name pos:line="11" pos:column="33">AnyP<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">::<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">PROTO_URN<pos:position pos:line="11" pos:column="48"/></name></name></expr>)<pos:position pos:line="11" pos:column="49"/></condition><then pos:line="11" pos:column="49"> <block pos:line="11" pos:column="50">{
        <comment type="line" pos:line="12" pos:column="9">// XXX: this is what the original code did, but it seems to break the</comment>
        <comment type="line" pos:line="13" pos:column="9">// intended behaviour of this function. It returns the stored URN path,</comment>
        <comment type="line" pos:line="14" pos:column="9">// not converting the given one into a URN...</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">snprintf<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">urlbuf<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">MAX_URL<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">SQUIDSBUFPH<pos:position pos:line="15" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="48">SQUIDSBUFPRINT<pos:position pos:line="15" pos:column="62"/></name><argument_list pos:line="15" pos:column="62">(<argument><expr><call><name><name pos:line="15" pos:column="63">req<pos:position pos:line="15" pos:column="66"/></name><operator pos:line="15" pos:column="66">-&gt;<pos:position pos:line="15" pos:column="71"/></operator><name pos:line="15" pos:column="68">url<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">.<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="72">absolute<pos:position pos:line="15" pos:column="80"/></name></name><argument_list pos:line="15" pos:column="80">()<pos:position pos:line="15" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="85"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">urlbuf<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">)<pos:position pos:line="16" pos:column="24"/></operator></expr>;<pos:position pos:line="16" pos:column="25"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">SBuf<pos:position pos:line="19" pos:column="9"/></name></type> <name pos:line="19" pos:column="10">authorityForm<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><call><name><name pos:line="19" pos:column="26">req<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">url<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">authority<pos:position pos:line="19" pos:column="44"/></name></name><argument_list pos:line="19" pos:column="44">()<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="47"/></decl_stmt> <comment type="line" pos:line="19" pos:column="48">// host[:port]</comment>
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">SBuf<pos:position pos:line="20" pos:column="15"/></name> <modifier pos:line="20" pos:column="16">&amp;<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="17">scheme<pos:position pos:line="20" pos:column="23"/></name> <init pos:line="20" pos:column="24">= <expr><call><name><name pos:line="20" pos:column="26">req<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">url<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">.<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">getScheme<pos:position pos:line="20" pos:column="44"/></name></name><argument_list pos:line="20" pos:column="44">()<pos:position pos:line="20" pos:column="46"/></argument_list></call><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><call><name pos:line="20" pos:column="47">image<pos:position pos:line="20" pos:column="52"/></name><argument_list pos:line="20" pos:column="52">()<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">urllen<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><call><name pos:line="21" pos:column="21">snprintf<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">urlbuf<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">MAX_URL<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">SQUIDSBUFPH<pos:position pos:line="21" pos:column="58"/></name> <literal type="string" pos:line="21" pos:column="59">"://"<pos:position pos:line="21" pos:column="64"/></literal> <name pos:line="21" pos:column="65">SQUIDSBUFPH<pos:position pos:line="21" pos:column="76"/></name> <literal type="string" pos:line="21" pos:column="77">"%s"<pos:position pos:line="21" pos:column="81"/></literal> <name pos:line="21" pos:column="82">SQUIDSBUFPH<pos:position pos:line="21" pos:column="93"/></name></expr></argument>,
                             <argument><expr><call><name pos:line="22" pos:column="30">SQUIDSBUFPRINT<pos:position pos:line="22" pos:column="44"/></name><argument_list pos:line="22" pos:column="44">(<argument><expr><name pos:line="22" pos:column="45">scheme<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr></argument>,
                             <argument><expr><call><name pos:line="23" pos:column="30">SQUIDSBUFPRINT<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><call><name><name pos:line="23" pos:column="45">req<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">url<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">userInfo<pos:position pos:line="23" pos:column="62"/></name></name><argument_list pos:line="23" pos:column="62">()<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></argument>,
                             <argument><expr><ternary><condition><expr><operator pos:line="24" pos:column="30">!<pos:position pos:line="24" pos:column="31"/></operator><call><name><name pos:line="24" pos:column="31">req<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">url<pos:position pos:line="24" pos:column="39"/></name><operator pos:line="24" pos:column="39">.<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="40">userInfo<pos:position pos:line="24" pos:column="48"/></name></name><argument_list pos:line="24" pos:column="48">()<pos:position pos:line="24" pos:column="50"/></argument_list></call><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><call><name pos:line="24" pos:column="51">isEmpty<pos:position pos:line="24" pos:column="58"/></name><argument_list pos:line="24" pos:column="58">()<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr> ?<pos:position pos:line="24" pos:column="62"/></condition><then pos:line="24" pos:column="62"> <expr><literal type="string" pos:line="24" pos:column="63">"@"<pos:position pos:line="24" pos:column="66"/></literal></expr> <pos:position pos:line="24" pos:column="67"/></then><else pos:line="24" pos:column="67">: <expr><literal type="string" pos:line="24" pos:column="69">""<pos:position pos:line="24" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
                             <argument><expr><call><name pos:line="25" pos:column="30">SQUIDSBUFPRINT<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">authorityForm<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="61"/></decl_stmt>

    <comment type="line" pos:line="27" pos:column="5">// if the first char is '/' assume its a relative path</comment>
    <comment type="line" pos:line="28" pos:column="5">// XXX: this breaks on scheme-relative URLs,</comment>
    <comment type="line" pos:line="29" pos:column="5">// but we should not see those outside ESI, and rarely there.</comment>
    <comment type="line" pos:line="30" pos:column="5">// XXX: also breaks on any URL containing a '/' in the query-string portion</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">relUrl<pos:position pos:line="31" pos:column="15"/></name><index pos:line="31" pos:column="15">[<expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>]<pos:position pos:line="31" pos:column="18"/></index></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <literal type="char" pos:line="31" pos:column="22">'/'<pos:position pos:line="31" pos:column="25"/></literal></expr>)<pos:position pos:line="31" pos:column="26"/></condition><then pos:line="31" pos:column="26"> <block pos:line="31" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">xstrncpy<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><operator pos:line="32" pos:column="18">&amp;<pos:position pos:line="32" pos:column="23"/></operator><name><name pos:line="32" pos:column="19">urlbuf<pos:position pos:line="32" pos:column="25"/></name><index pos:line="32" pos:column="25">[<expr><name pos:line="32" pos:column="26">urllen<pos:position pos:line="32" pos:column="32"/></name></expr>]<pos:position pos:line="32" pos:column="33"/></index></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="35">relUrl<pos:position pos:line="32" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="43">MAX_URL<pos:position pos:line="32" pos:column="50"/></name> <operator pos:line="32" pos:column="51">-<pos:position pos:line="32" pos:column="52"/></operator> <name pos:line="32" pos:column="53">urllen<pos:position pos:line="32" pos:column="59"/></name> <operator pos:line="32" pos:column="60">-<pos:position pos:line="32" pos:column="61"/></operator> <literal type="number" pos:line="32" pos:column="62">1<pos:position pos:line="32" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="34" pos:column="9">SBuf<pos:position pos:line="34" pos:column="13"/></name></type> <name pos:line="34" pos:column="14">path<pos:position pos:line="34" pos:column="18"/></name> <init pos:line="34" pos:column="19">= <expr><call><name><name pos:line="34" pos:column="21">req<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">url<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">.<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="30">path<pos:position pos:line="34" pos:column="34"/></name></name><argument_list pos:line="34" pos:column="34">()<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="35" pos:column="9">SBuf<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">::<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">size_type<pos:position pos:line="35" pos:column="24"/></name></name></type> <name pos:line="35" pos:column="25">lastSlashPos<pos:position pos:line="35" pos:column="37"/></name> <init pos:line="35" pos:column="38">= <expr><call><name><name pos:line="35" pos:column="40">path<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">.<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="45">rfind<pos:position pos:line="35" pos:column="50"/></name></name><argument_list pos:line="35" pos:column="50">(<argument><expr><literal type="char" pos:line="35" pos:column="51">'/'<pos:position pos:line="35" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="56"/></decl_stmt>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">lastSlashPos<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">==<pos:position pos:line="37" pos:column="28"/></operator> <name><name pos:line="37" pos:column="29">SBuf<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">::<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">npos<pos:position pos:line="37" pos:column="39"/></name></name></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
            <comment type="line" pos:line="38" pos:column="13">// replace the whole path with the given bit(s)</comment>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">urlbuf<pos:position pos:line="39" pos:column="19"/></name><index pos:line="39" pos:column="19">[<expr><name pos:line="39" pos:column="20">urllen<pos:position pos:line="39" pos:column="26"/></name></expr>]<pos:position pos:line="39" pos:column="27"/></index></name> <operator pos:line="39" pos:column="28">=<pos:position pos:line="39" pos:column="29"/></operator> <literal type="char" pos:line="39" pos:column="30">'/'<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">urllen<pos:position pos:line="40" pos:column="21"/></name></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">xstrncpy<pos:position pos:line="41" pos:column="21"/></name><argument_list pos:line="41" pos:column="21">(<argument><expr><operator pos:line="41" pos:column="22">&amp;<pos:position pos:line="41" pos:column="27"/></operator><name><name pos:line="41" pos:column="23">urlbuf<pos:position pos:line="41" pos:column="29"/></name><index pos:line="41" pos:column="29">[<expr><name pos:line="41" pos:column="30">urllen<pos:position pos:line="41" pos:column="36"/></name></expr>]<pos:position pos:line="41" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="39">relUrl<pos:position pos:line="41" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="47">MAX_URL<pos:position pos:line="41" pos:column="54"/></name> <operator pos:line="41" pos:column="55">-<pos:position pos:line="41" pos:column="56"/></operator> <name pos:line="41" pos:column="57">urllen<pos:position pos:line="41" pos:column="63"/></name> <operator pos:line="41" pos:column="64">-<pos:position pos:line="41" pos:column="65"/></operator> <literal type="number" pos:line="41" pos:column="66">1<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else <block pos:line="42" pos:column="16">{
            <comment type="line" pos:line="43" pos:column="13">// replace only the last (file?) segment with the given bit(s)</comment>
            <expr_stmt><expr><operator pos:line="44" pos:column="13">++<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">lastSlashPos<pos:position pos:line="44" pos:column="27"/></name></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">lastSlashPos<pos:position pos:line="45" pos:column="29"/></name> <operator pos:line="45" pos:column="30">&gt;<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="32">MAX_URL<pos:position pos:line="45" pos:column="39"/></name> <operator pos:line="45" pos:column="40">-<pos:position pos:line="45" pos:column="41"/></operator> <name pos:line="45" pos:column="42">urllen<pos:position pos:line="45" pos:column="48"/></name> <operator pos:line="45" pos:column="49">-<pos:position pos:line="45" pos:column="50"/></operator> <literal type="number" pos:line="45" pos:column="51">1<pos:position pos:line="45" pos:column="52"/></literal></expr>)<pos:position pos:line="45" pos:column="53"/></condition><then pos:line="45" pos:column="53"> <block pos:line="45" pos:column="54">{
                <comment type="line" pos:line="46" pos:column="17">// XXX: crops bits in the middle of the combined URL.</comment>
                <expr_stmt><expr><name pos:line="47" pos:column="17">lastSlashPos<pos:position pos:line="47" pos:column="29"/></name> <operator pos:line="47" pos:column="30">=<pos:position pos:line="47" pos:column="31"/></operator> <name pos:line="47" pos:column="32">MAX_URL<pos:position pos:line="47" pos:column="39"/></name> <operator pos:line="47" pos:column="40">-<pos:position pos:line="47" pos:column="41"/></operator> <name pos:line="47" pos:column="42">urllen<pos:position pos:line="47" pos:column="48"/></name> <operator pos:line="47" pos:column="49">-<pos:position pos:line="47" pos:column="50"/></operator> <literal type="number" pos:line="47" pos:column="51">1<pos:position pos:line="47" pos:column="52"/></literal></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">SBufToCstring<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><operator pos:line="49" pos:column="27">&amp;<pos:position pos:line="49" pos:column="32"/></operator><name><name pos:line="49" pos:column="28">urlbuf<pos:position pos:line="49" pos:column="34"/></name><index pos:line="49" pos:column="34">[<expr><name pos:line="49" pos:column="35">urllen<pos:position pos:line="49" pos:column="41"/></name></expr>]<pos:position pos:line="49" pos:column="42"/></index></name></expr></argument>, <argument><expr><call><name><name pos:line="49" pos:column="44">path<pos:position pos:line="49" pos:column="48"/></name><operator pos:line="49" pos:column="48">.<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="49">substr<pos:position pos:line="49" pos:column="55"/></name></name><argument_list pos:line="49" pos:column="55">(<argument><expr><literal type="number" pos:line="49" pos:column="56">0<pos:position pos:line="49" pos:column="57"/></literal></expr></argument>,<argument><expr><name pos:line="49" pos:column="58">lastSlashPos<pos:position pos:line="49" pos:column="70"/></name></expr></argument>)<pos:position pos:line="49" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><name pos:line="50" pos:column="13">urllen<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">+=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">lastSlashPos<pos:position pos:line="50" pos:column="35"/></name></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>
            <if pos:line="51" pos:column="13">if <condition pos:line="51" pos:column="16">(<expr><name pos:line="51" pos:column="17">urllen<pos:position pos:line="51" pos:column="23"/></name> <operator pos:line="51" pos:column="24">+<pos:position pos:line="51" pos:column="25"/></operator> <literal type="number" pos:line="51" pos:column="26">1<pos:position pos:line="51" pos:column="27"/></literal> <operator pos:line="51" pos:column="28">&lt;<pos:position pos:line="51" pos:column="32"/></operator> <name pos:line="51" pos:column="30">MAX_URL<pos:position pos:line="51" pos:column="37"/></name></expr>)<pos:position pos:line="51" pos:column="38"/></condition><then pos:line="51" pos:column="38"> <block pos:line="51" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">xstrncpy<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><operator pos:line="52" pos:column="26">&amp;<pos:position pos:line="52" pos:column="31"/></operator><name><name pos:line="52" pos:column="27">urlbuf<pos:position pos:line="52" pos:column="33"/></name><index pos:line="52" pos:column="33">[<expr><name pos:line="52" pos:column="34">urllen<pos:position pos:line="52" pos:column="40"/></name></expr>]<pos:position pos:line="52" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">relUrl<pos:position pos:line="52" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="51">MAX_URL<pos:position pos:line="52" pos:column="58"/></name> <operator pos:line="52" pos:column="59">-<pos:position pos:line="52" pos:column="60"/></operator> <name pos:line="52" pos:column="61">urllen<pos:position pos:line="52" pos:column="67"/></name> <operator pos:line="52" pos:column="68">-<pos:position pos:line="52" pos:column="69"/></operator> <literal type="number" pos:line="52" pos:column="70">1<pos:position pos:line="52" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
        }<pos:position pos:line="54" pos:column="10"/></block></else></if>
    }<pos:position pos:line="55" pos:column="6"/></block></else></if>

    <return pos:line="57" pos:column="5">return <expr><operator pos:line="57" pos:column="12">(<pos:position pos:line="57" pos:column="13"/></operator><name pos:line="57" pos:column="13">urlbuf<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">)<pos:position pos:line="57" pos:column="20"/></operator></expr>;<pos:position pos:line="57" pos:column="21"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

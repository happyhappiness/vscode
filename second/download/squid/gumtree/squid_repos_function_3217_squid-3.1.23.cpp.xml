<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3217_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IdleConnList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">removeFD<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">fd<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">index<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name pos:line="4" pos:column="17">findFDIndex<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">fd<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">index<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&lt;<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19"> <block pos:line="5" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">48<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">2<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"IdleConnList::removeFD: FD "<pos:position pos:line="6" pos:column="52"/></literal> <operator pos:line="6" pos:column="53">&lt;&lt;<pos:position pos:line="6" pos:column="61"/></operator> <name pos:line="6" pos:column="56">fd<pos:position pos:line="6" pos:column="58"/></name> <operator pos:line="6" pos:column="59">&lt;&lt;<pos:position pos:line="6" pos:column="67"/></operator> <literal type="string" pos:line="6" pos:column="62">" NOT FOUND!"<pos:position pos:line="6" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="77"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">48<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"IdleConnList::removeFD: found FD "<pos:position pos:line="9" pos:column="54"/></literal> <operator pos:line="9" pos:column="55">&lt;&lt;<pos:position pos:line="9" pos:column="63"/></operator> <name pos:line="9" pos:column="58">fd<pos:position pos:line="9" pos:column="60"/></name> <operator pos:line="9" pos:column="61">&lt;&lt;<pos:position pos:line="9" pos:column="69"/></operator> <literal type="string" pos:line="9" pos:column="64">" at index "<pos:position pos:line="9" pos:column="76"/></literal> <operator pos:line="9" pos:column="77">&lt;&lt;<pos:position pos:line="9" pos:column="85"/></operator> <name pos:line="9" pos:column="80">index<pos:position pos:line="9" pos:column="85"/></name></expr></argument>)<pos:position pos:line="9" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="87"/></expr_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init pos:line="11" pos:column="10">;<pos:position pos:line="11" pos:column="11"/></init> <condition><expr><name pos:line="11" pos:column="12">index<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&lt;<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="20">nfds<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></condition> <incr><expr><name pos:line="11" pos:column="30">index<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">++<pos:position pos:line="11" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="38"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="9">fds<pos:position pos:line="12" pos:column="12"/></name><index pos:line="12" pos:column="12">[<expr><name pos:line="12" pos:column="13">index<pos:position pos:line="12" pos:column="18"/></name></expr>]<pos:position pos:line="12" pos:column="19"/></index></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="22">fds<pos:position pos:line="12" pos:column="25"/></name><index pos:line="12" pos:column="25">[<expr><name pos:line="12" pos:column="26">index<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">+<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">1<pos:position pos:line="12" pos:column="35"/></literal></expr>]<pos:position pos:line="12" pos:column="36"/></index></name></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt></block></for>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">--<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">nfds<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">48<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">3<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"IdleConnList::removeFD: deleting "<pos:position pos:line="15" pos:column="58"/></literal> <operator pos:line="15" pos:column="59">&lt;&lt;<pos:position pos:line="15" pos:column="67"/></operator> <call><name pos:line="15" pos:column="62">hashKeyStr<pos:position pos:line="15" pos:column="72"/></name><argument_list pos:line="15" pos:column="72">(<argument><expr><operator pos:line="15" pos:column="73">&amp;<pos:position pos:line="15" pos:column="78"/></operator><name pos:line="15" pos:column="74">hash<pos:position pos:line="15" pos:column="78"/></name></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="16" pos:column="9">delete<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">this<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

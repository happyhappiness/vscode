<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5851_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">int<pos:position pos:line="1" pos:column="13"/></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Var<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">asTimeTicks<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list> <specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">type<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">SMI_TIMETICKS<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name><name pos:line="5" pos:column="10">val<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">.<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">integer<pos:position pos:line="5" pos:column="21"/></name></name> <operator pos:line="5" pos:column="22">!=<pos:position pos:line="5" pos:column="24"/></operator> <name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">&amp;&amp;<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="33">val_len<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">==<pos:position pos:line="5" pos:column="43"/></operator> sizeof<operator pos:line="5" pos:column="50">(<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">unsigned<pos:position pos:line="5" pos:column="59"/></name> <name pos:line="5" pos:column="60">int<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">)<pos:position pos:line="5" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="66"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></operator><cast type="reinterpret" pos:line="6" pos:column="13">reinterpret_cast<argument_list type="generic" pos:line="6" pos:column="29">&lt;<argument><expr><name pos:line="6" pos:column="30">unsigned<pos:position pos:line="6" pos:column="38"/></name> <name pos:line="6" pos:column="39">int<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="47"/></argument_list><argument_list pos:line="6" pos:column="44">(<argument><expr><name><name pos:line="6" pos:column="45">val<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">.<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">integer<pos:position pos:line="6" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="58"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

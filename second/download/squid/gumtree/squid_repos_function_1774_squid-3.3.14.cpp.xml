<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1774_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">fdDumpOpen<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fde<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">F<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="21">Squid_MaxFD<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></condition> <incr><expr><operator pos:line="7" pos:column="34">++<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">i<pos:position pos:line="7" pos:column="37"/></name></expr></incr>)<pos:position pos:line="7" pos:column="38"/></control> <block pos:line="7" pos:column="39">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">F<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">&amp;<pos:position pos:line="8" pos:column="18"/></operator><name><name pos:line="8" pos:column="14">fd_table<pos:position pos:line="8" pos:column="22"/></name><index pos:line="8" pos:column="22">[<expr><name pos:line="8" pos:column="23">i<pos:position pos:line="8" pos:column="24"/></name></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name><name pos:line="10" pos:column="14">F<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">flags<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">open<pos:position pos:line="10" pos:column="27"/></name></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
            <block type="pseudo"><continue pos:line="11" pos:column="13">continue;<pos:position pos:line="11" pos:column="22"/></continue></block></then></if>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">==<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">fileno<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">debug_log<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36">
            <block type="pseudo"><continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">51<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_IMPORTANT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"Open FD "<pos:position pos:line="16" pos:column="45"/></literal><operator pos:line="16" pos:column="45">&lt;&lt;<pos:position pos:line="16" pos:column="53"/></operator> <name><name pos:line="16" pos:column="48">std<pos:position pos:line="16" pos:column="51"/></name><operator pos:line="16" pos:column="51">::<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="53">left<pos:position pos:line="16" pos:column="57"/></name></name><operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <call><name><name pos:line="16" pos:column="60">std<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">::<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="65">setw<pos:position pos:line="16" pos:column="69"/></name></name><argument_list pos:line="16" pos:column="69">(<argument><expr><literal type="number" pos:line="16" pos:column="70">10<pos:position pos:line="16" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call> <operator pos:line="16" pos:column="74">&lt;&lt;<pos:position pos:line="16" pos:column="82"/></operator>
               <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="17" pos:column="17">F<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">bytes_read<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">&amp;&amp;<pos:position pos:line="17" pos:column="41"/></operator> <name><name pos:line="17" pos:column="34">F<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">bytes_written<pos:position pos:line="17" pos:column="50"/></name></name></expr> ?<pos:position pos:line="17" pos:column="52"/></condition><then pos:line="17" pos:column="52"> <expr><literal type="string" pos:line="17" pos:column="53">"READ/WRITE"<pos:position pos:line="17" pos:column="65"/></literal></expr> <pos:position pos:line="17" pos:column="66"/></then><else pos:line="17" pos:column="66">:
                <expr><ternary><condition><expr><name><name pos:line="18" pos:column="17">F<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">bytes_read<pos:position pos:line="18" pos:column="30"/></name></name></expr> ?<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> <expr><literal type="string" pos:line="18" pos:column="33">"READING"<pos:position pos:line="18" pos:column="42"/></literal></expr> <pos:position pos:line="18" pos:column="43"/></then><else pos:line="18" pos:column="43">: <expr><ternary><condition><expr><name><name pos:line="18" pos:column="45">F<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">-&gt;<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="48">bytes_written<pos:position pos:line="18" pos:column="61"/></name></name></expr> ?<pos:position pos:line="18" pos:column="63"/></condition><then pos:line="18" pos:column="63"> <expr><literal type="string" pos:line="18" pos:column="64">"WRITING"<pos:position pos:line="18" pos:column="73"/></literal></expr> <pos:position pos:line="18" pos:column="74"/></then><else pos:line="18" pos:column="74">:
                <expr><literal type="string" pos:line="19" pos:column="17">"UNSTARTED"<pos:position pos:line="19" pos:column="28"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator>  <operator pos:line="19" pos:column="31">&lt;&lt;<pos:position pos:line="19" pos:column="39"/></operator>
               <literal type="string" pos:line="20" pos:column="16">" "<pos:position pos:line="20" pos:column="19"/></literal><operator pos:line="20" pos:column="19">&lt;&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name><name pos:line="20" pos:column="22">std<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">::<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">right<pos:position pos:line="20" pos:column="32"/></name></name> <operator pos:line="20" pos:column="33">&lt;&lt;<pos:position pos:line="20" pos:column="41"/></operator> <call><name><name pos:line="20" pos:column="36">std<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">::<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="41">setw<pos:position pos:line="20" pos:column="45"/></name></name><argument_list pos:line="20" pos:column="45">(<argument><expr><literal type="number" pos:line="20" pos:column="46">4<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call> <operator pos:line="20" pos:column="49">&lt;&lt;<pos:position pos:line="20" pos:column="57"/></operator> <name pos:line="20" pos:column="52">i<pos:position pos:line="20" pos:column="53"/></name>  <operator pos:line="20" pos:column="55">&lt;&lt;<pos:position pos:line="20" pos:column="63"/></operator> <literal type="string" pos:line="20" pos:column="58">" "<pos:position pos:line="20" pos:column="61"/></literal> <operator pos:line="20" pos:column="62">&lt;&lt;<pos:position pos:line="20" pos:column="70"/></operator> <name><name pos:line="20" pos:column="65">F<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">-&gt;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="68">desc<pos:position pos:line="20" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7466_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Security<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">ContextPointer<pos:position pos:line="1" pos:column="25"/></name></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerOptions<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">createClientContext<pos:position pos:line="2" pos:column="43"/></name></name><parameter_list pos:line="2" pos:column="43">(<parameter><decl><type><name pos:line="2" pos:column="44">bool<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">setOptions<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">updateTlsVersionLimits<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Security<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">::<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">ContextPointer<pos:position pos:line="6" pos:column="29"/></name></name></type> <name pos:line="6" pos:column="30">t<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><call><name pos:line="6" pos:column="32">createBlankContext<pos:position pos:line="6" pos:column="50"/></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">t<pos:position pos:line="7" pos:column="10"/></name></expr>)<pos:position pos:line="7" pos:column="11"/></condition><then pos:line="7" pos:column="11"> <block pos:line="7" pos:column="12">{
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_OPENSSL<pos:position pos:line="8" pos:column="16"/></name></expr></cpp:if>
        <comment type="line" pos:line="9" pos:column="9">// NP: GnuTLS uses 'priorities' which are set per-session instead.</comment>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">SSL_CTX_set_options<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><call><name><name pos:line="10" pos:column="29">t<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">get<pos:position pos:line="10" pos:column="34"/></name></name><argument_list pos:line="10" pos:column="34">()<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><ternary><condition><expr><name pos:line="10" pos:column="39">setOptions<pos:position pos:line="10" pos:column="49"/></name></expr> ?<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51"> <expr><name pos:line="10" pos:column="52">parsedOptions<pos:position pos:line="10" pos:column="65"/></name></expr> <pos:position pos:line="10" pos:column="66"/></then><else pos:line="10" pos:column="66">: <expr><literal type="number" pos:line="10" pos:column="68">0<pos:position pos:line="10" pos:column="69"/></literal></expr></else></ternary><operator pos:line="10" pos:column="69">)<pos:position pos:line="10" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="72"/></expr_stmt>

        <comment type="line" pos:line="12" pos:column="9">// XXX: temporary performance regression. c_str() data copies and prevents this being a const method</comment>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">Ssl<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">::<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">InitClientContext<pos:position pos:line="13" pos:column="31"/></name></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">t<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="36">this<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">parsedFlags<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">updateContextNpn<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">t<pos:position pos:line="15" pos:column="27"/></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">updateContextCa<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">t<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">updateContextCrl<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">t<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">t<pos:position pos:line="20" pos:column="13"/></name></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3681_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">IpAddress<pos:position pos:line="1" pos:column="15"/></name><operator pos:line="1" pos:column="15">::<pos:position pos:line="1" pos:column="17"/></operator><name pos:line="1" pos:column="17">GetSockAddr<pos:position pos:line="1" pos:column="28"/></name></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name><name pos:line="1" pos:column="29">struct<pos:position pos:line="1" pos:column="35"/></name> <name pos:line="1" pos:column="36">sockaddr_in6<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">&amp;<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="50">buf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">memcpy<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><operator pos:line="3" pos:column="12">&amp;<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="13">buf<pos:position pos:line="3" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="18">&amp;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="19">m_SocketAddr<pos:position pos:line="3" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="33">sizeof<argument_list pos:line="3" pos:column="39">(<argument><expr pos:line="3" pos:column="40">struct <name pos:line="3" pos:column="47">sockaddr_in6<pos:position pos:line="3" pos:column="59"/></name></expr></argument>)<pos:position pos:line="3" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="62"/></expr_stmt>
    <comment type="block" pos:line="4" pos:column="5">/* maintain address family. It may have changed inside us. */</comment>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">buf<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">sin6_family<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">AF_INET6<pos:position pos:line="5" pos:column="31"/></name></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_SIN6_LEN_IN_SAI<pos:position pos:line="7" pos:column="25"/></name></expr></cpp:if>
    <comment type="block" pos:line="8" pos:column="5">/* not all OS have this field, BUT when they do it can be a problem if set wrong */</comment>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">buf<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">.<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">sin6_len<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <sizeof pos:line="9" pos:column="20">sizeof<argument_list pos:line="9" pos:column="26">(<argument><expr pos:line="9" pos:column="27">struct <name pos:line="9" pos:column="34">sockaddr_in6<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></sizeof></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1658_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">cbdataInternalInitType<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">cbdata_type<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">type<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="54">name<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">size<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">label<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">type<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">==<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">cbdata_types<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">+<pos:position pos:line="5" pos:column="35"/></operator> <literal type="number" pos:line="5" pos:column="36">1<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">cbdata_index<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">CBDataIndex<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator><call><name pos:line="7" pos:column="35">xrealloc<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name pos:line="7" pos:column="44">cbdata_index<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="58">(<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="59">type<pos:position pos:line="7" pos:column="63"/></name> <operator pos:line="7" pos:column="64">+<pos:position pos:line="7" pos:column="65"/></operator> <literal type="number" pos:line="7" pos:column="66">1<pos:position pos:line="7" pos:column="67"/></literal><operator pos:line="7" pos:column="67">)<pos:position pos:line="7" pos:column="68"/></operator> <operator pos:line="7" pos:column="69">*<pos:position pos:line="7" pos:column="70"/></operator> <sizeof pos:line="7" pos:column="71">sizeof<argument_list pos:line="7" pos:column="77">(<argument><expr><operator pos:line="7" pos:column="78">*<pos:position pos:line="7" pos:column="79"/></operator><name pos:line="7" pos:column="79">cbdata_index<pos:position pos:line="7" pos:column="91"/></name></expr></argument>)<pos:position pos:line="7" pos:column="92"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">memset<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><operator pos:line="8" pos:column="12">&amp;<pos:position pos:line="8" pos:column="17"/></operator><name><name pos:line="8" pos:column="13">cbdata_index<pos:position pos:line="8" pos:column="25"/></name><index pos:line="8" pos:column="25">[<expr><name pos:line="8" pos:column="26">type<pos:position pos:line="8" pos:column="30"/></name></expr>]<pos:position pos:line="8" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="36">sizeof<argument_list pos:line="8" pos:column="42">(<argument><expr><operator pos:line="8" pos:column="43">*<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">cbdata_index<pos:position pos:line="8" pos:column="56"/></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">cbdata_types<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">type<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="11" pos:column="5">label<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">char<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><operator pos:line="11" pos:column="20">)<pos:position pos:line="11" pos:column="21"/></operator><call><name pos:line="11" pos:column="21">xmalloc<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><call><name pos:line="11" pos:column="29">strlen<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">name<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call> <operator pos:line="11" pos:column="42">+<pos:position pos:line="11" pos:column="43"/></operator> <literal type="number" pos:line="11" pos:column="44">20<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">snprintf<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">label<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="21">strlen<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">name<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call> <operator pos:line="13" pos:column="34">+<pos:position pos:line="13" pos:column="35"/></operator> <literal type="number" pos:line="13" pos:column="36">20<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"cbdata %s (%d)"<pos:position pos:line="13" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">name<pos:position pos:line="13" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="64">(<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="65">int<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">)<pos:position pos:line="13" pos:column="69"/></operator> <name pos:line="13" pos:column="70">type<pos:position pos:line="13" pos:column="74"/></name></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="76"/></expr_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><operator pos:line="15" pos:column="5">!<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">WITH_VALGRIND<pos:position pos:line="15" pos:column="19"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">size_t<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator><name><name pos:line="16" pos:column="20">cbdata<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">::<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">Offset<pos:position pos:line="16" pos:column="34"/></name></name> <operator pos:line="16" pos:column="35">==<pos:position pos:line="16" pos:column="37"/></operator> <operator pos:line="16" pos:column="38">(<pos:position pos:line="16" pos:column="39"/></operator><sizeof pos:line="16" pos:column="39">sizeof<argument_list pos:line="16" pos:column="45">(<argument><expr><name pos:line="16" pos:column="46">cbdata<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></sizeof> <operator pos:line="16" pos:column="54">-<pos:position pos:line="16" pos:column="55"/></operator> <operator pos:line="16" pos:column="56">(<pos:position pos:line="16" pos:column="57"/></operator><operator pos:line="16" pos:column="57">(<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">cbdata<pos:position pos:line="16" pos:column="64"/></name> <operator pos:line="16" pos:column="65">*<pos:position pos:line="16" pos:column="66"/></operator><operator pos:line="16" pos:column="66">)<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="67">NULL<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator><operator pos:line="16" pos:column="72">-&gt;<pos:position pos:line="16" pos:column="77"/></operator><call><name pos:line="16" pos:column="74">dataSize<pos:position pos:line="16" pos:column="82"/></name><argument_list pos:line="16" pos:column="82">()<pos:position pos:line="16" pos:column="84"/></argument_list></call><operator pos:line="16" pos:column="84">)<pos:position pos:line="16" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">size<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">+=<pos:position pos:line="17" pos:column="12"/></operator> <name><name pos:line="17" pos:column="13">cbdata<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">::<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">Offset<pos:position pos:line="17" pos:column="27"/></name></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">cbdata_index<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><name pos:line="20" pos:column="18">type<pos:position pos:line="20" pos:column="22"/></name></expr>]<pos:position pos:line="20" pos:column="23"/></index></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">pool<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">memPoolCreate<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><name pos:line="20" pos:column="45">label<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">size<pos:position pos:line="20" pos:column="56"/></name></expr></argument>)<pos:position pos:line="20" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="58"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

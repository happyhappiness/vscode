<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3836_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">InitServerContext<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">Security<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">ContextPointer<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">ctx<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="55">AnyP<pos:position pos:line="2" pos:column="59"/></name><operator pos:line="2" pos:column="59">::<pos:position pos:line="2" pos:column="61"/></operator><name pos:line="2" pos:column="61">PortCfg<pos:position pos:line="2" pos:column="68"/></name></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">port<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">ctx<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">SSL_CTX_use_certificate<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><call><name><name pos:line="7" pos:column="34">ctx<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">.<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">get<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="45">port<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">.<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">signingCert<pos:position pos:line="7" pos:column="61"/></name><operator pos:line="7" pos:column="61">.<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">get<pos:position pos:line="7" pos:column="65"/></name></name><argument_list pos:line="7" pos:column="65">()<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="69"/></condition><then pos:line="7" pos:column="69"> <block pos:line="7" pos:column="70">{
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">int<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">ssl_error<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><call><name pos:line="8" pos:column="31">ERR_get_error<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">()<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <specifier pos:line="9" pos:column="15">auto<pos:position pos:line="9" pos:column="19"/></specifier> <modifier pos:line="9" pos:column="20">&amp;<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="21">keys<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><call><name><name pos:line="9" pos:column="28">port<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">secure<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">.<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">certs<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">front<pos:position pos:line="9" pos:column="51"/></name></name><argument_list pos:line="9" pos:column="51">()<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">83<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_CRITICAL<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"ERROR: Failed to acquire TLS certificate '"<pos:position pos:line="10" pos:column="78"/></literal> <operator pos:line="10" pos:column="79">&lt;&lt;<pos:position pos:line="10" pos:column="87"/></operator> <name><name pos:line="10" pos:column="82">keys<pos:position pos:line="10" pos:column="86"/></name><operator pos:line="10" pos:column="86">.<pos:position pos:line="10" pos:column="87"/></operator><name pos:line="10" pos:column="87">certFile<pos:position pos:line="10" pos:column="95"/></name></name> <operator pos:line="10" pos:column="96">&lt;&lt;<pos:position pos:line="10" pos:column="104"/></operator> <literal type="string" pos:line="10" pos:column="99">"': "<pos:position pos:line="10" pos:column="104"/></literal> <operator pos:line="10" pos:column="105">&lt;&lt;<pos:position pos:line="10" pos:column="113"/></operator> <call><name><name pos:line="10" pos:column="108">Security<pos:position pos:line="10" pos:column="116"/></name><operator pos:line="10" pos:column="116">::<pos:position pos:line="10" pos:column="118"/></operator><name pos:line="10" pos:column="118">ErrorString<pos:position pos:line="10" pos:column="129"/></name></name><argument_list pos:line="10" pos:column="129">(<argument><expr><name pos:line="10" pos:column="130">ssl_error<pos:position pos:line="10" pos:column="139"/></name></expr></argument>)<pos:position pos:line="10" pos:column="140"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="142"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">SSL_CTX_use_PrivateKey<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><call><name><name pos:line="14" pos:column="33">ctx<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">get<pos:position pos:line="14" pos:column="40"/></name></name><argument_list pos:line="14" pos:column="40">()<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="44">port<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">.<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">signPkey<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">.<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="58">get<pos:position pos:line="14" pos:column="61"/></name></name><argument_list pos:line="14" pos:column="61">()<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="65"/></condition><then pos:line="14" pos:column="65"> <block pos:line="14" pos:column="66">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">int<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">ssl_error<pos:position pos:line="15" pos:column="28"/></name> <init pos:line="15" pos:column="29">= <expr><call><name pos:line="15" pos:column="31">ERR_get_error<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">()<pos:position pos:line="15" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <specifier pos:line="16" pos:column="15">auto<pos:position pos:line="16" pos:column="19"/></specifier> <modifier pos:line="16" pos:column="20">&amp;<pos:position pos:line="16" pos:column="25"/></modifier></type><name pos:line="16" pos:column="21">keys<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><call><name><name pos:line="16" pos:column="28">port<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">.<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">secure<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">.<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">certs<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">.<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">front<pos:position pos:line="16" pos:column="51"/></name></name><argument_list pos:line="16" pos:column="51">()<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="54"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">83<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">DBG_CRITICAL<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="34">"ERROR: Failed to acquire TLS private key '"<pos:position pos:line="17" pos:column="78"/></literal> <operator pos:line="17" pos:column="79">&lt;&lt;<pos:position pos:line="17" pos:column="87"/></operator> <name><name pos:line="17" pos:column="82">keys<pos:position pos:line="17" pos:column="86"/></name><operator pos:line="17" pos:column="86">.<pos:position pos:line="17" pos:column="87"/></operator><name pos:line="17" pos:column="87">privateKeyFile<pos:position pos:line="17" pos:column="101"/></name></name> <operator pos:line="17" pos:column="102">&lt;&lt;<pos:position pos:line="17" pos:column="110"/></operator> <literal type="string" pos:line="17" pos:column="105">"': "<pos:position pos:line="17" pos:column="110"/></literal> <operator pos:line="17" pos:column="111">&lt;&lt;<pos:position pos:line="17" pos:column="119"/></operator> <call><name><name pos:line="17" pos:column="114">Security<pos:position pos:line="17" pos:column="122"/></name><operator pos:line="17" pos:column="122">::<pos:position pos:line="17" pos:column="124"/></operator><name pos:line="17" pos:column="124">ErrorString<pos:position pos:line="17" pos:column="135"/></name></name><argument_list pos:line="17" pos:column="135">(<argument><expr><name pos:line="17" pos:column="136">ssl_error<pos:position pos:line="17" pos:column="145"/></name></expr></argument>)<pos:position pos:line="17" pos:column="146"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="147"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="148"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><literal type="boolean" pos:line="18" pos:column="16">false<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">Ssl<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">::<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">addChainToSslContext<pos:position pos:line="21" pos:column="30"/></name></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">ctx<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="36">port<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">certsToChain<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">get<pos:position pos:line="21" pos:column="57"/></name></name><argument_list pos:line="21" pos:column="57">()<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Alternate code;
        debugs(83, DBG_IMPORTANT, "Using certificate in " &lt;&lt; certfile);

        if (!SSL_CTX_use_certificate_chain_file(ctx.get(), certfile)) {
            ssl_error = ERR_get_error();
            debugs(83, DBG_CRITICAL, "ERROR: Failed to acquire SSL certificate '" &lt;&lt; certfile &lt;&lt; "': " &lt;&lt; Security::ErrorString(ssl_error));
            return false;
        }

        debugs(83, DBG_IMPORTANT, "Using private key in " &lt;&lt; keyfile);
        ssl_ask_password(ctx.get(), keyfile);

        if (!SSL_CTX_use_PrivateKey_file(ctx.get(), keyfile, SSL_FILETYPE_PEM)) {
            ssl_error = ERR_get_error();
            debugs(83, DBG_CRITICAL, "ERROR: Failed to acquire SSL private key '" &lt;&lt; keyfile &lt;&lt; "': " &lt;&lt; Security::ErrorString(ssl_error));
            return false;
        }

        debugs(83, 5, "Comparing private and public SSL keys.");

        if (!SSL_CTX_check_private_key(ctx.get())) {
            ssl_error = ERR_get_error();
            debugs(83, DBG_CRITICAL, "ERROR: SSL private key '" &lt;&lt; certfile &lt;&lt; "' does not match public key '" &lt;&lt;
                   keyfile &lt;&lt; "': " &lt;&lt; Security::ErrorString(ssl_error));
            return false;
        }
    */</comment>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">!<pos:position pos:line="51" pos:column="10"/></operator><call><name pos:line="51" pos:column="10">configureSslContext<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">ctx<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">port<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="41"/></condition><then pos:line="51" pos:column="41"> <block pos:line="51" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="number" pos:line="52" pos:column="16">83<pos:position pos:line="52" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="20">DBG_CRITICAL<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="34">"ERROR: Configuring static SSL context"<pos:position pos:line="52" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="75"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><literal type="boolean" pos:line="53" pos:column="16">false<pos:position pos:line="53" pos:column="21"/></literal></expr>;<pos:position pos:line="53" pos:column="22"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <return pos:line="56" pos:column="5">return <expr><literal type="boolean" pos:line="56" pos:column="12">true<pos:position pos:line="56" pos:column="16"/></literal></expr>;<pos:position pos:line="56" pos:column="17"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

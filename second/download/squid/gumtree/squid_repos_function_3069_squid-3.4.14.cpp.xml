<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3069_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">timestampsSet<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">HttpReply<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">reply<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><call><name pos:line="4" pos:column="30">getReply<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">()<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">served_date<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name><name pos:line="5" pos:column="26">reply<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">date<pos:position pos:line="5" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">age<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><call><name><name pos:line="6" pos:column="15">reply<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">header<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">getInt<pos:position pos:line="6" pos:column="35"/></name></name><argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">HDR_AGE<pos:position pos:line="6" pos:column="43"/></name></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Compute the timestamp, mimicking RFC2616 section 13.2.3. */</comment>
    <comment type="block" pos:line="8" pos:column="5">/* make sure that 0 &lt;= served_date &lt;= squid_curtime */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">served_date<pos:position pos:line="10" pos:column="20"/></name> <argument_list type="generic" pos:line="10" pos:column="21">&lt; <argument><expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal> <operator pos:line="10" pos:column="25">||<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">served_date<pos:position pos:line="10" pos:column="39"/></name></expr></argument> &gt;<pos:position pos:line="10" pos:column="44"/></argument_list></name> <name pos:line="10" pos:column="42">squid_curtime<pos:position pos:line="10" pos:column="55"/></name></expr>)<pos:position pos:line="10" pos:column="56"/></condition><then pos:line="10" pos:column="56">
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">served_date<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">squid_curtime<pos:position pos:line="11" pos:column="36"/></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt></block></then>

    <comment type="block" pos:line="13" pos:column="5">/* Bug 1791:
     * If the returned Date: is more than 24 hours older than
     * the squid_curtime, then one of us needs to use NTP to set our
     * clock.  We'll pretend that our clock is right.
     */</comment>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name pos:line="18" pos:column="14">served_date<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">&lt;<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="28">(<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">squid_curtime<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">-<pos:position pos:line="18" pos:column="44"/></operator> <literal type="number" pos:line="18" pos:column="45">24<pos:position pos:line="18" pos:column="47"/></literal> <operator pos:line="18" pos:column="48">*<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">60<pos:position pos:line="18" pos:column="52"/></literal> <operator pos:line="18" pos:column="53">*<pos:position pos:line="18" pos:column="54"/></operator> <literal type="number" pos:line="18" pos:column="55">60<pos:position pos:line="18" pos:column="57"/></literal><operator pos:line="18" pos:column="57">)<pos:position pos:line="18" pos:column="58"/></operator></expr> )<pos:position pos:line="18" pos:column="60"/></condition><then pos:line="18" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">served_date<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name pos:line="19" pos:column="23">squid_curtime<pos:position pos:line="19" pos:column="36"/></name></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt></block></then></if></elseif></if>

    <comment type="block" pos:line="21" pos:column="5">/*
     * Compensate with Age header if origin server clock is ahead
     * of us and there is a cache in between us and the origin
     * server.  But DONT compensate if the age value is larger than
     * squid_curtime because it results in a negative served_date.
     */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">age<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">&gt;<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="15">squid_curtime<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">-<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">served_date<pos:position pos:line="27" pos:column="42"/></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
        <block type="pseudo"><if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">squid_curtime<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">&gt;<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="29">age<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">served_date<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <name pos:line="29" pos:column="27">squid_curtime<pos:position pos:line="29" pos:column="40"/></name> <operator pos:line="29" pos:column="41">-<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">age<pos:position pos:line="29" pos:column="46"/></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt></block></then></if></block></then></if>

    <comment type="line" pos:line="31" pos:column="5">// compensate for Squid-to-server and server-to-Squid delays</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">mem_obj<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&amp;&amp;<pos:position pos:line="32" pos:column="27"/></operator> <name><name pos:line="32" pos:column="20">mem_obj<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">request<pos:position pos:line="32" pos:column="36"/></name></name></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37"> <block pos:line="32" pos:column="38">{
        <decl_stmt><decl><type><specifier pos:line="33" pos:column="9">const<pos:position pos:line="33" pos:column="14"/></specifier> <name pos:line="33" pos:column="15">time_t<pos:position pos:line="33" pos:column="21"/></name></type> <name pos:line="33" pos:column="22">request_sent<pos:position pos:line="33" pos:column="34"/></name> <init pos:line="33" pos:column="35">=
            <expr><name><name pos:line="34" pos:column="13">mem_obj<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">request<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">hier<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">.<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">peer_http_request_sent<pos:position pos:line="34" pos:column="58"/></name><operator pos:line="34" pos:column="58">.<pos:position pos:line="34" pos:column="59"/></operator><name pos:line="34" pos:column="59">tv_sec<pos:position pos:line="34" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="34" pos:column="66"/></decl_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><literal type="number" pos:line="35" pos:column="13">0<pos:position pos:line="35" pos:column="14"/></literal> <operator pos:line="35" pos:column="15">&lt;<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="17">request_sent<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">&amp;&amp;<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="33">request_sent<pos:position pos:line="35" pos:column="45"/></name> <operator pos:line="35" pos:column="46">&lt;<pos:position pos:line="35" pos:column="50"/></operator> <name pos:line="35" pos:column="48">squid_curtime<pos:position pos:line="35" pos:column="61"/></name></expr>)<pos:position pos:line="35" pos:column="62"/></condition><then pos:line="35" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="13">served_date<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">-=<pos:position pos:line="36" pos:column="27"/></operator> <operator pos:line="36" pos:column="28">(<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="29">squid_curtime<pos:position pos:line="36" pos:column="42"/></name> <operator pos:line="36" pos:column="43">-<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">request_sent<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">reply<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">expires<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">&gt;<pos:position pos:line="39" pos:column="28"/></operator> <literal type="number" pos:line="39" pos:column="26">0<pos:position pos:line="39" pos:column="27"/></literal> <operator pos:line="39" pos:column="28">&amp;&amp;<pos:position pos:line="39" pos:column="38"/></operator> <name><name pos:line="39" pos:column="31">reply<pos:position pos:line="39" pos:column="36"/></name><operator pos:line="39" pos:column="36">-&gt;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="38">date<pos:position pos:line="39" pos:column="42"/></name></name> <operator pos:line="39" pos:column="43">&gt;<pos:position pos:line="39" pos:column="47"/></operator> <operator pos:line="39" pos:column="45">-<pos:position pos:line="39" pos:column="46"/></operator><literal type="number" pos:line="39" pos:column="46">1<pos:position pos:line="39" pos:column="47"/></literal></expr>)<pos:position pos:line="39" pos:column="48"/></condition><then pos:line="39" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">expires<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name pos:line="40" pos:column="19">served_date<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">+<pos:position pos:line="40" pos:column="32"/></operator> <operator pos:line="40" pos:column="33">(<pos:position pos:line="40" pos:column="34"/></operator><name><name pos:line="40" pos:column="34">reply<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">expires<pos:position pos:line="40" pos:column="48"/></name></name> <operator pos:line="40" pos:column="49">-<pos:position pos:line="40" pos:column="50"/></operator> <name><name pos:line="40" pos:column="51">reply<pos:position pos:line="40" pos:column="56"/></name><operator pos:line="40" pos:column="56">-&gt;<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="58">date<pos:position pos:line="40" pos:column="62"/></name></name><operator pos:line="40" pos:column="62">)<pos:position pos:line="40" pos:column="63"/></operator></expr>;<pos:position pos:line="40" pos:column="64"/></expr_stmt></block></then>
    <else pos:line="41" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">expires<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name><name pos:line="42" pos:column="19">reply<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">-&gt;<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="26">expires<pos:position pos:line="42" pos:column="33"/></name></name></expr>;<pos:position pos:line="42" pos:column="34"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="44" pos:column="5">lastmod<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <name><name pos:line="44" pos:column="15">reply<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">last_modified<pos:position pos:line="44" pos:column="35"/></name></name></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">timestamp<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">served_date<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

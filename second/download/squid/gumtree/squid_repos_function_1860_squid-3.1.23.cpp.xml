<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1860_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">storeDirSwapLog<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">StoreEntry<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">e<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">op<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">e<pos:position pos:line="4" pos:column="14"/></name></expr></argument>)<pos:position pos:line="4" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><call><name pos:line="5" pos:column="13">EBIT_TEST<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name><name pos:line="5" pos:column="23">e<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">-&gt;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="26">flags<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">KEY_PRIVATE<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">e<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">swap_filen<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">&gt;=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/*
     * icons and such; don't write them to the swap log
     */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">EBIT_TEST<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name><name pos:line="11" pos:column="19">e<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">flags<pos:position pos:line="11" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">ENTRY_SPECIAL<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">op<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&gt;<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="17">SWAP_LOG_NOP<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="33">op<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">&lt;<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="38">SWAP_LOG_MAX<pos:position pos:line="14" pos:column="50"/></name></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">20<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"storeDirSwapLog: "<pos:position pos:line="16" pos:column="38"/></literal> <operator pos:line="16" pos:column="39">&lt;&lt;<pos:position pos:line="16" pos:column="47"/></operator>
           <name><name pos:line="17" pos:column="12">swap_log_op_str<pos:position pos:line="17" pos:column="27"/></name><index pos:line="17" pos:column="27">[<expr><name pos:line="17" pos:column="28">op<pos:position pos:line="17" pos:column="30"/></name></expr>]<pos:position pos:line="17" pos:column="31"/></index></name> <operator pos:line="17" pos:column="32">&lt;&lt;<pos:position pos:line="17" pos:column="40"/></operator> <literal type="string" pos:line="17" pos:column="35">" "<pos:position pos:line="17" pos:column="38"/></literal> <operator pos:line="17" pos:column="39">&lt;&lt;<pos:position pos:line="17" pos:column="47"/></operator>
           <call><name><name pos:line="18" pos:column="12">e<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">getMD5Text<pos:position pos:line="18" pos:column="25"/></name></name><argument_list pos:line="18" pos:column="25">()<pos:position pos:line="18" pos:column="27"/></argument_list></call> <operator pos:line="18" pos:column="28">&lt;&lt;<pos:position pos:line="18" pos:column="36"/></operator> <literal type="string" pos:line="18" pos:column="31">" "<pos:position pos:line="18" pos:column="34"/></literal> <operator pos:line="18" pos:column="35">&lt;&lt;<pos:position pos:line="18" pos:column="43"/></operator>
           <name><name pos:line="19" pos:column="12">e<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">swap_dirn<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">&lt;&lt;<pos:position pos:line="19" pos:column="33"/></operator> <literal type="string" pos:line="19" pos:column="28">" "<pos:position pos:line="19" pos:column="31"/></literal> <operator pos:line="19" pos:column="32">&lt;&lt;<pos:position pos:line="19" pos:column="40"/></operator>
           <name><name pos:line="20" pos:column="12">std<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">::<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">hex<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">&lt;&lt;<pos:position pos:line="20" pos:column="29"/></operator> <name><name pos:line="20" pos:column="24">std<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">::<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">uppercase<pos:position pos:line="20" pos:column="38"/></name></name> <operator pos:line="20" pos:column="39">&lt;&lt;<pos:position pos:line="20" pos:column="47"/></operator> <call><name><name pos:line="20" pos:column="42">std<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">::<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">setfill<pos:position pos:line="20" pos:column="54"/></name></name><argument_list pos:line="20" pos:column="54">(<argument><expr><literal type="char" pos:line="20" pos:column="55">'0'<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call> <operator pos:line="20" pos:column="60">&lt;&lt;<pos:position pos:line="20" pos:column="68"/></operator> <call><name><name pos:line="20" pos:column="63">std<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">::<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">setw<pos:position pos:line="20" pos:column="72"/></name></name><argument_list pos:line="20" pos:column="72">(<argument><expr><literal type="number" pos:line="20" pos:column="73">8<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call> <operator pos:line="20" pos:column="76">&lt;&lt;<pos:position pos:line="20" pos:column="84"/></operator> <name><name pos:line="20" pos:column="79">e<pos:position pos:line="20" pos:column="80"/></name><operator pos:line="20" pos:column="80">-&gt;<pos:position pos:line="20" pos:column="85"/></operator><name pos:line="20" pos:column="82">swap_filen<pos:position pos:line="20" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="94"/></expr_stmt>

    <expr_stmt><expr><cast type="dynamic" pos:line="22" pos:column="5">dynamic_cast<argument_list type="generic" pos:line="22" pos:column="17">&lt;<argument><expr><name pos:line="22" pos:column="18">SwapDir<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></operator></expr></argument>&gt;<pos:position pos:line="22" pos:column="31"/></argument_list><argument_list pos:line="22" pos:column="28">(<argument><expr><call><name pos:line="22" pos:column="29">INDEXSD<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">e<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">swap_dirn<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></cast><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><call><name pos:line="22" pos:column="53">logEntry<pos:position pos:line="22" pos:column="61"/></name><argument_list pos:line="22" pos:column="61">(<argument><expr><operator pos:line="22" pos:column="62">*<pos:position pos:line="22" pos:column="63"/></operator><name pos:line="22" pos:column="63">e<pos:position pos:line="22" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="66">op<pos:position pos:line="22" pos:column="68"/></name></expr></argument>)<pos:position pos:line="22" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="70"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

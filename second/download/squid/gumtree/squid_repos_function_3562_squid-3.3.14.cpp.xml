<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3562_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ConnStateData<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type>
<name pos:line="2" pos:column="1">connStateCreate<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">Comm<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">ConnectionPointer<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">client<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="56">AnyP<pos:position pos:line="2" pos:column="60"/></name><operator pos:line="2" pos:column="60">::<pos:position pos:line="2" pos:column="62"/></operator><name pos:line="2" pos:column="62">PortCfg<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">port<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">result<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">new<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="33">ConnStateData<pos:position pos:line="4" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="6" pos:column="5">result<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">clientConnection<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="32">client<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">result<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">log_addr<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <name><name pos:line="7" pos:column="24">client<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">remote<pos:position pos:line="7" pos:column="38"/></name></name></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">result<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">log_addr<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">ApplyMask<pos:position pos:line="8" pos:column="31"/></name></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name><name pos:line="8" pos:column="32">Config<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">Addrs<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">client_netmask<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">result<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">in<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">buf<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">char<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator><call><name pos:line="9" pos:column="30">memAllocBuf<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name pos:line="9" pos:column="42">CLIENT_REQ_BUF_SZ<pos:position pos:line="9" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="61">&amp;<pos:position pos:line="9" pos:column="66"/></operator><name><name pos:line="9" pos:column="62">result<pos:position pos:line="9" pos:column="68"/></name><operator pos:line="9" pos:column="68">-&gt;<pos:position pos:line="9" pos:column="73"/></operator><name pos:line="9" pos:column="70">in<pos:position pos:line="9" pos:column="72"/></name><operator pos:line="9" pos:column="72">.<pos:position pos:line="9" pos:column="73"/></operator><name pos:line="9" pos:column="73">allocatedSize<pos:position pos:line="9" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">result<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">port<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">cbdataReference<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">port<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">port<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">disable_pmtu_discovery<pos:position pos:line="12" pos:column="37"/></name></name> <operator pos:line="12" pos:column="38">!=<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">DISABLE_PMTU_OFF<pos:position pos:line="12" pos:column="57"/></name> <operator pos:line="12" pos:column="58">&amp;&amp;<pos:position pos:line="12" pos:column="68"/></operator>
            <operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><call><name><name pos:line="13" pos:column="14">result<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">transparent<pos:position pos:line="13" pos:column="33"/></name></name><argument_list pos:line="13" pos:column="33">()<pos:position pos:line="13" pos:column="35"/></argument_list></call> <operator pos:line="13" pos:column="36">||<pos:position pos:line="13" pos:column="38"/></operator> <name><name pos:line="13" pos:column="39">port<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">disable_pmtu_discovery<pos:position pos:line="13" pos:column="67"/></name></name> <operator pos:line="13" pos:column="68">==<pos:position pos:line="13" pos:column="70"/></operator> <name pos:line="13" pos:column="71">DISABLE_PMTU_ALWAYS<pos:position pos:line="13" pos:column="90"/></name><operator pos:line="13" pos:column="90">)<pos:position pos:line="13" pos:column="91"/></operator></expr>)<pos:position pos:line="13" pos:column="92"/></condition><then pos:line="13" pos:column="92"> <block pos:line="13" pos:column="93">{
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><call><name pos:line="14" pos:column="5">defined<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">IP_MTU_DISCOVER<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <call><name pos:line="14" pos:column="33">defined<pos:position pos:line="14" pos:column="40"/></name><argument_list pos:line="14" pos:column="40">(<argument><expr><name pos:line="14" pos:column="41">IP_PMTUDISC_DONT<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name> <init pos:line="15" pos:column="15">= <expr><name pos:line="15" pos:column="17">IP_PMTUDISC_DONT<pos:position pos:line="15" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="34"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">setsockopt<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name><name pos:line="16" pos:column="24">client<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">fd<pos:position pos:line="16" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">SOL_IP<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">IP_MTU_DISCOVER<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="61">&amp;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="62">i<pos:position pos:line="16" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="65">sizeof<argument_list pos:line="16" pos:column="71">(<argument><expr><name pos:line="16" pos:column="72">i<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call> <operator pos:line="16" pos:column="76">&lt;<pos:position pos:line="16" pos:column="80"/></operator> <literal type="number" pos:line="16" pos:column="78">0<pos:position pos:line="16" pos:column="79"/></literal></expr>)<pos:position pos:line="16" pos:column="80"/></condition><then pos:line="16" pos:column="80">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">33<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="24">2<pos:position pos:line="17" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="27">"WARNING: Path MTU discovery disabling failed on "<pos:position pos:line="17" pos:column="77"/></literal> <operator pos:line="17" pos:column="78">&lt;&lt;<pos:position pos:line="17" pos:column="86"/></operator> <name pos:line="17" pos:column="81">client<pos:position pos:line="17" pos:column="87"/></name> <operator pos:line="17" pos:column="88">&lt;&lt;<pos:position pos:line="17" pos:column="96"/></operator> <literal type="string" pos:line="17" pos:column="91">" : "<pos:position pos:line="17" pos:column="96"/></literal> <operator pos:line="17" pos:column="97">&lt;&lt;<pos:position pos:line="17" pos:column="105"/></operator> <call><name pos:line="17" pos:column="100">xstrerror<pos:position pos:line="17" pos:column="109"/></name><argument_list pos:line="17" pos:column="109">()<pos:position pos:line="17" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="113"/></expr_stmt></block></then></if>
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><specifier pos:line="19" pos:column="9">static<pos:position pos:line="19" pos:column="15"/></specifier> <type><name pos:line="19" pos:column="16">bool<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">reported<pos:position pos:line="19" pos:column="29"/></name> <init pos:line="19" pos:column="30">= <expr><literal type="boolean" pos:line="19" pos:column="32">false<pos:position pos:line="19" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="38"/></decl_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">reported<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">33<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="24">DBG_IMPORTANT<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">"NOTICE: Path MTU discovery disabling is not supported on your platform."<pos:position pos:line="22" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="114"/></expr_stmt>
            <expr_stmt><expr><name pos:line="23" pos:column="13">reported<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="boolean" pos:line="23" pos:column="24">true<pos:position pos:line="23" pos:column="28"/></literal></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <typedef pos:line="28" pos:column="5">typedef <type><name><name pos:line="28" pos:column="13">CommCbMemFunT<pos:position pos:line="28" pos:column="26"/></name><argument_list type="generic" pos:line="28" pos:column="26">&lt;<argument><expr><name pos:line="28" pos:column="27">ConnStateData<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="42">CommCloseCbParams<pos:position pos:line="28" pos:column="59"/></name></expr></argument>&gt;<pos:position pos:line="28" pos:column="63"/></argument_list></name></type> <name pos:line="28" pos:column="61">Dialer<pos:position pos:line="28" pos:column="67"/></name>;<pos:position pos:line="28" pos:column="68"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">AsyncCall<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">::<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">Pointer<pos:position pos:line="29" pos:column="23"/></name></name></type> <name pos:line="29" pos:column="24">call<pos:position pos:line="29" pos:column="28"/></name> <init pos:line="29" pos:column="29">= <expr><call><name pos:line="29" pos:column="31">JobCallback<pos:position pos:line="29" pos:column="42"/></name><argument_list pos:line="29" pos:column="42">(<argument><expr><literal type="number" pos:line="29" pos:column="43">33<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="47">5<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="50">Dialer<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">result<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="66">ConnStateData<pos:position pos:line="29" pos:column="79"/></name><operator pos:line="29" pos:column="79">::<pos:position pos:line="29" pos:column="81"/></operator><name pos:line="29" pos:column="81">connStateClosed<pos:position pos:line="29" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="97"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="98"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">comm_add_close_handler<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">client<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">fd<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">call<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">Config<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">.<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">onoff<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">.<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">log_fqdn<pos:position pos:line="32" pos:column="30"/></name></name></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">fqdncache_gethostbyaddr<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name><name pos:line="33" pos:column="33">client<pos:position pos:line="33" pos:column="39"/></name><operator pos:line="33" pos:column="39">-&gt;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="41">remote<pos:position pos:line="33" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="49">FQDN_LOOKUP_IF_MISS<pos:position pos:line="33" pos:column="68"/></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt></block></then></if>

<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><name pos:line="35" pos:column="5">USE_IDENT<pos:position pos:line="35" pos:column="14"/></name></expr></cpp:if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">Ident<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">::<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">TheConfig<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">.<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">identLookup<pos:position pos:line="36" pos:column="37"/></name></name></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38"> <block pos:line="36" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="37" pos:column="9">ACLFilledChecklist<pos:position pos:line="37" pos:column="27"/></name></type> <name pos:line="37" pos:column="28">identChecklist<pos:position pos:line="37" pos:column="42"/></name><argument_list pos:line="37" pos:column="42">(<argument><expr><name><name pos:line="37" pos:column="43">Ident<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">::<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">TheConfig<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">.<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="60">identLookup<pos:position pos:line="37" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="73">NULL<pos:position pos:line="37" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="79">NULL<pos:position pos:line="37" pos:column="83"/></name></expr></argument>)<pos:position pos:line="37" pos:column="84"/></argument_list></decl>;<pos:position pos:line="37" pos:column="85"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">identChecklist<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">.<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">src_addr<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <name><name pos:line="38" pos:column="35">client<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name pos:line="38" pos:column="43">remote<pos:position pos:line="38" pos:column="49"/></name></name></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">identChecklist<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">my_addr<pos:position pos:line="39" pos:column="31"/></name></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <name><name pos:line="39" pos:column="34">client<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">local<pos:position pos:line="39" pos:column="47"/></name></name></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name><name pos:line="40" pos:column="13">identChecklist<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">fastCheck<pos:position pos:line="40" pos:column="37"/></name></name><argument_list pos:line="40" pos:column="37">()<pos:position pos:line="40" pos:column="39"/></argument_list></call> <operator pos:line="40" pos:column="40">==<pos:position pos:line="40" pos:column="42"/></operator> <name pos:line="40" pos:column="43">ACCESS_ALLOWED<pos:position pos:line="40" pos:column="57"/></name></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="41" pos:column="13">Ident<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">::<pos:position pos:line="41" pos:column="20"/></operator><name pos:line="41" pos:column="20">Start<pos:position pos:line="41" pos:column="25"/></name></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">client<pos:position pos:line="41" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="34">clientIdentDone<pos:position pos:line="41" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="51">result<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="59"/></expr_stmt></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if<pos:position pos:line="45" pos:column="4"/></cpp:directive> <expr><name pos:line="45" pos:column="5">USE_SQUID_EUI<pos:position pos:line="45" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">Eui<pos:position pos:line="46" pos:column="12"/></name><operator pos:line="46" pos:column="12">::<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">TheConfig<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">.<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">euiLookup<pos:position pos:line="46" pos:column="33"/></name></name></expr>)<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <block pos:line="46" pos:column="35">{
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name><name pos:line="47" pos:column="13">client<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">remote<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">IsIPv4<pos:position pos:line="47" pos:column="34"/></name></name><argument_list pos:line="47" pos:column="34">()<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="37"/></condition><then pos:line="47" pos:column="37"> <block pos:line="47" pos:column="38">{
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">result<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">-&gt;<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="21">clientConnection<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">-&gt;<pos:position pos:line="48" pos:column="42"/></operator><name pos:line="48" pos:column="39">remoteEui48<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">.<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="51">lookup<pos:position pos:line="48" pos:column="57"/></name></name><argument_list pos:line="48" pos:column="57">(<argument><expr><name><name pos:line="48" pos:column="58">client<pos:position pos:line="48" pos:column="64"/></name><operator pos:line="48" pos:column="64">-&gt;<pos:position pos:line="48" pos:column="69"/></operator><name pos:line="48" pos:column="66">remote<pos:position pos:line="48" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then> <elseif pos:line="49" pos:column="11">else <if pos:line="49" pos:column="16">if <condition pos:line="49" pos:column="19">(<expr><call><name><name pos:line="49" pos:column="20">client<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">remote<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">.<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="35">IsIPv6<pos:position pos:line="49" pos:column="41"/></name></name><argument_list pos:line="49" pos:column="41">()<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="44"/></condition><then pos:line="49" pos:column="44"> <block pos:line="49" pos:column="45">{
            <expr_stmt><expr><call><name><name pos:line="50" pos:column="13">result<pos:position pos:line="50" pos:column="19"/></name><operator pos:line="50" pos:column="19">-&gt;<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="21">clientConnection<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">remoteEui64<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">.<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="51">lookup<pos:position pos:line="50" pos:column="57"/></name></name><argument_list pos:line="50" pos:column="57">(<argument><expr><name><name pos:line="50" pos:column="58">client<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">-&gt;<pos:position pos:line="50" pos:column="69"/></operator><name pos:line="50" pos:column="66">remote<pos:position pos:line="50" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">clientdbEstablished<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><name><name pos:line="55" pos:column="25">client<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">remote<pos:position pos:line="55" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="41">1<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="57" pos:column="5">result<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">flags<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">readMore<pos:position pos:line="57" pos:column="27"/></name></name> <operator pos:line="57" pos:column="28">=<pos:position pos:line="57" pos:column="29"/></operator> <literal type="boolean" pos:line="57" pos:column="30">true<pos:position pos:line="57" pos:column="34"/></literal></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">result<pos:position pos:line="58" pos:column="18"/></name></expr>;<pos:position pos:line="58" pos:column="19"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

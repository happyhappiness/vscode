<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5043_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">dial<pos:position pos:line="1" pos:column="10"/></name><parameter_list pos:line="1" pos:column="10">(<parameter><decl><type><name pos:line="1" pos:column="11">AsyncCall<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">&amp;<pos:position pos:line="1" pos:column="26"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list> <block pos:line="1" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="2" pos:column="9">void<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">cbd<pos:position pos:line="2" pos:column="18"/></name></decl>;<pos:position pos:line="2" pos:column="19"/></decl_stmt>
        <if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">cbdataReferenceValidDone<pos:position pos:line="3" pos:column="37"/></name><argument_list pos:line="3" pos:column="37">(<argument><expr><name pos:line="3" pos:column="38">callback_data<pos:position pos:line="3" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="53">&amp;<pos:position pos:line="3" pos:column="58"/></operator><name pos:line="3" pos:column="54">cbd<pos:position pos:line="3" pos:column="57"/></name></expr></argument>)<pos:position pos:line="3" pos:column="58"/></argument_list></call> <operator pos:line="3" pos:column="59">&amp;&amp;<pos:position pos:line="3" pos:column="69"/></operator> <name pos:line="3" pos:column="62">callback<pos:position pos:line="3" pos:column="70"/></name></expr>)<pos:position pos:line="3" pos:column="71"/></condition><then pos:line="3" pos:column="71">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="13">callback<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">cbd<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">errflag<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="36">sio<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">getRaw<pos:position pos:line="4" pos:column="46"/></name></name><argument_list pos:line="4" pos:column="46">()<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt></block></then></if>
    }<pos:position pos:line="5" pos:column="6"/></block></function></unit>

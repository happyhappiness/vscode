<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_982_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">icpHandleIcpV3<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">fd<pos:position pos:line="2" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="24">Ip<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">Address<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">from<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">buf<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">len<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">&lt;=<pos:position pos:line="4" pos:column="18"/></operator> <literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <block pos:line="4" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">12<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"icpHandleIcpV3: ICP message is too small"<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="67"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">icp_common_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">header<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">buf<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">len<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
    <comment type="block" pos:line="10" pos:column="5">/*
     * Length field should match the number of bytes read
     */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">!=<pos:position pos:line="14" pos:column="15"/></operator> <name><name pos:line="14" pos:column="16">header<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">.<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">length<pos:position pos:line="14" pos:column="29"/></name></name></expr>)<pos:position pos:line="14" pos:column="30"/></condition><then pos:line="14" pos:column="30"> <block pos:line="14" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">12<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">3<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"icpHandleIcpV3: ICP message is too small"<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <switch pos:line="19" pos:column="5">switch <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">header<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">opcode<pos:position pos:line="19" pos:column="26"/></name></name></expr>)<pos:position pos:line="19" pos:column="27"/></condition> <block pos:line="19" pos:column="28">{

    <case pos:line="21" pos:column="5">case <expr><name pos:line="21" pos:column="10">ICP_QUERY<pos:position pos:line="21" pos:column="19"/></name></expr>:<pos:position pos:line="21" pos:column="20"/></case>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">doV3Query<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">fd<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">from<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">buf<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">header<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        <break pos:line="23" pos:column="9">break;<pos:position pos:line="23" pos:column="15"/></break>

    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">ICP_HIT<pos:position pos:line="25" pos:column="17"/></name></expr>:<pos:position pos:line="25" pos:column="18"/></case>

    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">ICP_DECHO<pos:position pos:line="27" pos:column="19"/></name></expr>:<pos:position pos:line="27" pos:column="20"/></case>

    <case pos:line="29" pos:column="5">case <expr><name pos:line="29" pos:column="10">ICP_MISS<pos:position pos:line="29" pos:column="18"/></name></expr>:<pos:position pos:line="29" pos:column="19"/></case>

    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">ICP_DENIED<pos:position pos:line="31" pos:column="20"/></name></expr>:<pos:position pos:line="31" pos:column="21"/></case>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">ICP_MISS_NOFETCH<pos:position pos:line="33" pos:column="26"/></name></expr>:<pos:position pos:line="33" pos:column="27"/></case>
        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">header<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">.<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">handleReply<pos:position pos:line="34" pos:column="27"/></name></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">buf<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="33">from<pos:position pos:line="34" pos:column="37"/></name></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>

    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">ICP_INVALID<pos:position pos:line="37" pos:column="21"/></name></expr>:<pos:position pos:line="37" pos:column="22"/></case>

    <case pos:line="39" pos:column="5">case <expr><name pos:line="39" pos:column="10">ICP_ERR<pos:position pos:line="39" pos:column="17"/></name></expr>:<pos:position pos:line="39" pos:column="18"/></case>
        <break pos:line="40" pos:column="9">break;<pos:position pos:line="40" pos:column="15"/></break>

    <default pos:line="42" pos:column="5">default:<pos:position pos:line="42" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">12<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">DBG_CRITICAL<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="34">"icpHandleIcpV3: UNKNOWN OPCODE: "<pos:position pos:line="43" pos:column="68"/></literal> <operator pos:line="43" pos:column="69">&lt;&lt;<pos:position pos:line="43" pos:column="77"/></operator> <name><name pos:line="43" pos:column="72">header<pos:position pos:line="43" pos:column="78"/></name><operator pos:line="43" pos:column="78">.<pos:position pos:line="43" pos:column="79"/></operator><name pos:line="43" pos:column="79">opcode<pos:position pos:line="43" pos:column="85"/></name></name> <operator pos:line="43" pos:column="86">&lt;&lt;<pos:position pos:line="43" pos:column="94"/></operator> <literal type="string" pos:line="43" pos:column="89">" from "<pos:position pos:line="43" pos:column="97"/></literal> <operator pos:line="43" pos:column="98">&lt;&lt;<pos:position pos:line="43" pos:column="106"/></operator> <name pos:line="43" pos:column="101">from<pos:position pos:line="43" pos:column="105"/></name></expr></argument>)<pos:position pos:line="43" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="107"/></expr_stmt>
        <break pos:line="44" pos:column="9">break;<pos:position pos:line="44" pos:column="15"/></break>
    }<pos:position pos:line="45" pos:column="6"/></block></switch>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_744.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">dump_sslproxy_cert_adapt<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">StoreEntry<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">entry<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <name pos:line="1" pos:column="63">char<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">name<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="75">sslproxy_cert_adapt<pos:position pos:line="1" pos:column="94"/></name> <modifier pos:line="1" pos:column="95">*<pos:position pos:line="1" pos:column="96"/></modifier></type><name pos:line="1" pos:column="96">cert_adapt<pos:position pos:line="1" pos:column="106"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="107"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <for pos:line="3" pos:column="5">for <control pos:line="3" pos:column="9">(<init><decl><type><name pos:line="3" pos:column="10">sslproxy_cert_adapt<pos:position pos:line="3" pos:column="29"/></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">ca<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><name pos:line="3" pos:column="36">cert_adapt<pos:position pos:line="3" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="47"/></init> <condition><expr><name pos:line="3" pos:column="48">ca<pos:position pos:line="3" pos:column="50"/></name> <operator pos:line="3" pos:column="51">!=<pos:position pos:line="3" pos:column="53"/></operator> <name pos:line="3" pos:column="54">NULL<pos:position pos:line="3" pos:column="58"/></name></expr>;<pos:position pos:line="3" pos:column="59"/></condition> <incr><expr><name pos:line="3" pos:column="60">ca<pos:position pos:line="3" pos:column="62"/></name> <operator pos:line="3" pos:column="63">=<pos:position pos:line="3" pos:column="64"/></operator> <name><name pos:line="3" pos:column="65">ca<pos:position pos:line="3" pos:column="67"/></name><operator pos:line="3" pos:column="67">-&gt;<pos:position pos:line="3" pos:column="72"/></operator><name pos:line="3" pos:column="69">next<pos:position pos:line="3" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="3" pos:column="74"/></control> <block pos:line="3" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">storeAppendPrintf<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">entry<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"%s "<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="41">name<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">storeAppendPrintf<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">entry<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"%s{%s} "<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="45">Ssl<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">::<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="50">sslCertAdaptAlgoritm<pos:position pos:line="5" pos:column="70"/></name></name><argument_list pos:line="5" pos:column="70">(<argument><expr><name><name pos:line="5" pos:column="71">ca<pos:position pos:line="5" pos:column="73"/></name><operator pos:line="5" pos:column="73">-&gt;<pos:position pos:line="5" pos:column="78"/></operator><name pos:line="5" pos:column="75">alg<pos:position pos:line="5" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="81">ca<pos:position pos:line="5" pos:column="83"/></name><operator pos:line="5" pos:column="83">-&gt;<pos:position pos:line="5" pos:column="88"/></operator><name pos:line="5" pos:column="85">param<pos:position pos:line="5" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="92"/></expr_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">ca<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">aclList<pos:position pos:line="6" pos:column="24"/></name></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="13">dump_acl_list<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">entry<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="34">ca<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">aclList<pos:position pos:line="7" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">entry<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"\n"<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

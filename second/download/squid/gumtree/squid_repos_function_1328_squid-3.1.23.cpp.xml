<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1328_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">DelayUserUpdateWalkee<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name><name pos:line="2" pos:column="23">DelayUserBucket<pos:position pos:line="2" pos:column="38"/></name><operator pos:line="2" pos:column="38">::<pos:position pos:line="2" pos:column="40"/></operator><name pos:line="2" pos:column="40">Pointer<pos:position pos:line="2" pos:column="47"/></name></name> <specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier> <modifier pos:line="2" pos:column="54">&amp;<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="55">current<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">void<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">state<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DelayUserUpdater<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">t<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">DelayUserUpdater<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator><operator pos:line="4" pos:column="46">)<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">state<pos:position pos:line="4" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* This doesn't change the value of the DelayUserBucket, so is safe */</comment>
    <expr_stmt><expr><cast type="const" pos:line="6" pos:column="5">const_cast<argument_list type="generic" pos:line="6" pos:column="15">&lt;<argument><expr><name pos:line="6" pos:column="16">DelayUserBucket<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="37"/></argument_list><argument_list pos:line="6" pos:column="34">(<argument><expr><call><name><name pos:line="6" pos:column="35">current<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">getRaw<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></cast><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><call><name><name pos:line="6" pos:column="54">theBucket<pos:position pos:line="6" pos:column="63"/></name><operator pos:line="6" pos:column="63">.<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="64">update<pos:position pos:line="6" pos:column="70"/></name></name><argument_list pos:line="6" pos:column="70">(<argument><expr><name><name pos:line="6" pos:column="71">t<pos:position pos:line="6" pos:column="72"/></name><operator pos:line="6" pos:column="72">-&gt;<pos:position pos:line="6" pos:column="77"/></operator><name pos:line="6" pos:column="74">spec<pos:position pos:line="6" pos:column="78"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="80">t<pos:position pos:line="6" pos:column="81"/></name><operator pos:line="6" pos:column="81">-&gt;<pos:position pos:line="6" pos:column="86"/></operator><name pos:line="6" pos:column="83">incr<pos:position pos:line="6" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="89"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

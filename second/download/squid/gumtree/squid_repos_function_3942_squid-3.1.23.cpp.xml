<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3942_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">fillDoneStatus<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">MemBuf<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">&amp;<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="56">buf<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">Adaptation<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">::<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">Icap<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">::<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">Xaction<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">::<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="32">fillDoneStatus<pos:position pos:line="3" pos:column="46"/></name></name><argument_list pos:line="3" pos:column="46">(<argument><expr><name pos:line="3" pos:column="47">buf<pos:position pos:line="3" pos:column="50"/></name></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="52"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">virgin<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">body_pipe<pos:position pos:line="5" pos:column="26"/></name></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">.<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">append<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="string" pos:line="6" pos:column="20">"R"<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">state<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">doneWriting<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="9">buf<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">.<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">append<pos:position pos:line="9" pos:column="19"/></name></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="string" pos:line="9" pos:column="20">"w"<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name><name pos:line="11" pos:column="9">preview<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">.<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">enabled<pos:position pos:line="11" pos:column="24"/></name></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="27"/></condition><then pos:line="11" pos:column="27"> <block pos:line="11" pos:column="28">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name><name pos:line="12" pos:column="13">preview<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">done<pos:position pos:line="12" pos:column="25"/></name></name><argument_list pos:line="12" pos:column="25">()<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="13">buf<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">Printf<pos:position pos:line="13" pos:column="23"/></name></name><argument_list pos:line="13" pos:column="23">(<argument><expr><literal type="string" pos:line="13" pos:column="24">"P%s"<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><call><name><name pos:line="13" pos:column="31">preview<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">ieof<pos:position pos:line="13" pos:column="43"/></name></name><argument_list pos:line="13" pos:column="43">()<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr> ?<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <expr><literal type="string" pos:line="13" pos:column="48">"(ieof)"<pos:position pos:line="13" pos:column="56"/></literal></expr> <pos:position pos:line="13" pos:column="57"/></then><else pos:line="13" pos:column="57">: <expr><literal type="string" pos:line="13" pos:column="59">""<pos:position pos:line="13" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">doneReading<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">()<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="9">buf<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">append<pos:position pos:line="17" pos:column="19"/></name></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="string" pos:line="17" pos:column="20">"r"<pos:position pos:line="17" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name><name pos:line="19" pos:column="9">state<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">doneParsing<pos:position pos:line="19" pos:column="26"/></name></name><argument_list pos:line="19" pos:column="26">()<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="20" pos:column="9">buf<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">append<pos:position pos:line="20" pos:column="19"/></name></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="string" pos:line="20" pos:column="20">"p"<pos:position pos:line="20" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">doneSending<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">()<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="23"/></condition><then pos:line="22" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="23" pos:column="9">buf<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">append<pos:position pos:line="23" pos:column="19"/></name></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="string" pos:line="23" pos:column="20">"S"<pos:position pos:line="23" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt></block></then></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

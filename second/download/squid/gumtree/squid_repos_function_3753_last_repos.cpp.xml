<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3753_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Helper<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">Reply<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">accumulate<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">buf<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">size_t<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">len<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">other_<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">isNull<pos:position pos:line="4" pos:column="22"/></name></name><argument_list pos:line="4" pos:column="22">()<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">other_<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">init<pos:position pos:line="5" pos:column="20"/></name></name><argument_list pos:line="5" pos:column="20">(<argument><expr><literal type="number" pos:line="5" pos:column="21">4<pos:position pos:line="5" pos:column="22"/></literal><operator pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></operator><literal type="number" pos:line="5" pos:column="23">1024<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="29">1<pos:position pos:line="5" pos:column="30"/></literal><operator pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></operator><literal type="number" pos:line="5" pos:column="31">1024<pos:position pos:line="5" pos:column="35"/></literal><operator pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></operator><literal type="number" pos:line="5" pos:column="36">1024<pos:position pos:line="5" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">other_<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">potentialSpaceSize<pos:position pos:line="7" pos:column="34"/></name></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call> <operator pos:line="7" pos:column="37">&lt;<pos:position pos:line="7" pos:column="41"/></operator> <cast type="static" pos:line="7" pos:column="39">static_cast<argument_list type="generic" pos:line="7" pos:column="50">&lt;<argument><expr><name pos:line="7" pos:column="51">mb_size_t<pos:position pos:line="7" pos:column="60"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="64"/></argument_list><argument_list pos:line="7" pos:column="61">(<argument><expr><name pos:line="7" pos:column="62">len<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></cast></expr>)<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="8" pos:column="23">// no space left</comment>

    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">other_<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">append<pos:position pos:line="10" pos:column="18"/></name></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">buf<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">len<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><literal type="boolean" pos:line="11" pos:column="12">true<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

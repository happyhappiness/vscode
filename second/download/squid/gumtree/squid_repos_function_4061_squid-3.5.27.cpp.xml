<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4061_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">libecap<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">Area<pos:position pos:line="1" pos:column="20"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">option<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name><name pos:line="2" pos:column="44">libecap<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">Name<pos:position pos:line="2" pos:column="57"/></name></name> <modifier pos:line="2" pos:column="58">&amp;<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="59">name<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <specifier pos:line="2" pos:column="65">const<pos:position pos:line="2" pos:column="70"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">name<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <name><name pos:line="4" pos:column="17">libecap<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">::<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">metaClientIp<pos:position pos:line="4" pos:column="38"/></name></name></expr>)<pos:position pos:line="4" pos:column="39"/></condition><then pos:line="4" pos:column="39">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><call><name pos:line="5" pos:column="16">clientIpValue<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">()<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></return></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">name<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="17">libecap<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">::<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">metaUserName<pos:position pos:line="6" pos:column="38"/></name></name></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">usernameValue<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></return></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">Adaptation<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">::<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">Config<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">::<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">masterx_shared_name<pos:position pos:line="8" pos:column="48"/></name></name> <operator pos:line="8" pos:column="49">&amp;&amp;<pos:position pos:line="8" pos:column="59"/></operator> <name pos:line="8" pos:column="52">name<pos:position pos:line="8" pos:column="56"/></name> <operator pos:line="8" pos:column="57">==<pos:position pos:line="8" pos:column="59"/></operator> <name><name pos:line="8" pos:column="60">Adaptation<pos:position pos:line="8" pos:column="70"/></name><operator pos:line="8" pos:column="70">::<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="72">Config<pos:position pos:line="8" pos:column="78"/></name><operator pos:line="8" pos:column="78">::<pos:position pos:line="8" pos:column="80"/></operator><name pos:line="8" pos:column="80">masterx_shared_name<pos:position pos:line="8" pos:column="99"/></name></name></expr>)<pos:position pos:line="8" pos:column="100"/></condition><then pos:line="8" pos:column="100">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><call><name pos:line="9" pos:column="16">masterxSharedValue<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">name<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></return></block></then></if>

    <comment type="line" pos:line="11" pos:column="5">// TODO: metaServerIp, metaAuthenticatedUser, and metaAuthenticatedGroups</comment>

    <comment type="line" pos:line="13" pos:column="5">// If the name is unknown, metaValue returns an emtpy area</comment>
    <return pos:line="14" pos:column="5">return <expr><call><name pos:line="14" pos:column="12">metaValue<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">name<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

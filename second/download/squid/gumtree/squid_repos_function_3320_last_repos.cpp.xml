<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3320_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">History<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">sumLogString<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">serviceId<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">SBuf<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">&amp;<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="69">s<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">s<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">.<pos:position pos:line="3" pos:column="7"/></operator><name pos:line="3" pos:column="7">clear<pos:position pos:line="3" pos:column="12"/></name></name><argument_list pos:line="3" pos:column="12">()<pos:position pos:line="3" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">retriedRptm<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt> <comment type="line" pos:line="4" pos:column="26">// sum of rptm times of retried transactions</comment>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">auto<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&amp;<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="17">i<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">:<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">theEntries<pos:position pos:line="5" pos:column="31"/></name></expr></init>)<pos:position pos:line="5" pos:column="32"/></control> <block pos:line="5" pos:column="33">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">retried<pos:position pos:line="6" pos:column="22"/></name></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{ <comment type="line" pos:line="6" pos:column="26">// do not log retried xact but accumulate their time</comment>
            <expr_stmt><expr><name pos:line="7" pos:column="13">retriedRptm<pos:position pos:line="7" pos:column="24"/></name> <operator pos:line="7" pos:column="25">+=<pos:position pos:line="7" pos:column="27"/></operator> <call><name><name pos:line="7" pos:column="28">i<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">rptm<pos:position pos:line="7" pos:column="34"/></name></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="8" pos:column="10"/></block></then> <elseif pos:line="8" pos:column="11">else <if pos:line="8" pos:column="16">if <condition pos:line="8" pos:column="19">(<expr><operator pos:line="8" pos:column="20">!<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">serviceId<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">||<pos:position pos:line="8" pos:column="33"/></operator> <name><name pos:line="8" pos:column="34">i<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">service<pos:position pos:line="8" pos:column="43"/></name></name> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">serviceId<pos:position pos:line="8" pos:column="56"/></name></expr>)<pos:position pos:line="8" pos:column="57"/></condition><then pos:line="8" pos:column="57"> <block pos:line="8" pos:column="58">{
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><operator pos:line="9" pos:column="17">!<pos:position pos:line="9" pos:column="18"/></operator><call><name><name pos:line="9" pos:column="18">s<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">isEmpty<pos:position pos:line="9" pos:column="27"/></name></name><argument_list pos:line="9" pos:column="27">()<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30"> <comment type="line" pos:line="9" pos:column="31">// not the first logged time, must delimit</comment>
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="17">s<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">append<pos:position pos:line="10" pos:column="25"/></name></name><argument_list pos:line="10" pos:column="25">(<argument><expr><literal type="char" pos:line="10" pos:column="26">','<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="11" pos:column="13">s<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">appendf<pos:position pos:line="11" pos:column="22"/></name></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"%d"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">retriedRptm<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">+<pos:position pos:line="11" pos:column="42"/></operator> <call><name><name pos:line="11" pos:column="43">i<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">.<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="45">rptm<pos:position pos:line="11" pos:column="49"/></name></name><argument_list pos:line="11" pos:column="49">()<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
            <comment type="line" pos:line="12" pos:column="13">// continue; we may have two identical services (e.g., for retries)</comment>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><name><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">retried<pos:position pos:line="15" pos:column="23"/></name></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="13">retriedRptm<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

    <comment type="line" pos:line="19" pos:column="5">// the last transaction is never retried or it would not be the last</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">Must<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><operator pos:line="20" pos:column="10">!<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">retriedRptm<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

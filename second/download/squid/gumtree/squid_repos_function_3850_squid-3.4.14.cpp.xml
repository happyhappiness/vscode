<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3850_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">AccessCheck<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">isCandidate<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><name pos:line="2" pos:column="38">AccessRule<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">r<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">7<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>,<argument><expr><name pos:line="4" pos:column="17">HERE<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&lt;&lt;<pos:position pos:line="4" pos:column="30"/></operator> <literal type="string" pos:line="4" pos:column="25">"checking candidacy of "<pos:position pos:line="4" pos:column="49"/></literal> <operator pos:line="4" pos:column="50">&lt;&lt;<pos:position pos:line="4" pos:column="58"/></operator> <name><name pos:line="4" pos:column="53">r<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">.<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">id<pos:position pos:line="4" pos:column="57"/></name></name> <operator pos:line="4" pos:column="58">&lt;&lt;<pos:position pos:line="4" pos:column="66"/></operator> <literal type="string" pos:line="4" pos:column="61">", group "<pos:position pos:line="4" pos:column="71"/></literal> <operator pos:line="4" pos:column="72">&lt;&lt;<pos:position pos:line="4" pos:column="80"/></operator>
           <name><name pos:line="5" pos:column="12">r<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">.<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">groupId<pos:position pos:line="5" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ServiceGroupPointer<pos:position pos:line="7" pos:column="24"/></name></type> <name pos:line="7" pos:column="25">g<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><call><name pos:line="7" pos:column="29">FindGroup<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">r<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">.<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">groupId<pos:position pos:line="7" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">g<pos:position pos:line="9" pos:column="11"/></name></expr>)<pos:position pos:line="9" pos:column="12"/></condition><then pos:line="9" pos:column="12"> <block pos:line="9" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">93<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="19">7<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="10" pos:column="21">HERE<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">&lt;&lt;<pos:position pos:line="10" pos:column="34"/></operator> <literal type="string" pos:line="10" pos:column="29">"lost "<pos:position pos:line="10" pos:column="36"/></literal> <operator pos:line="10" pos:column="37">&lt;&lt;<pos:position pos:line="10" pos:column="45"/></operator> <name><name pos:line="10" pos:column="40">r<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">groupId<pos:position pos:line="10" pos:column="49"/></name></name> <operator pos:line="10" pos:column="50">&lt;&lt;<pos:position pos:line="10" pos:column="58"/></operator> <literal type="string" pos:line="10" pos:column="53">" group in rule"<pos:position pos:line="10" pos:column="69"/></literal> <operator pos:line="10" pos:column="70">&lt;&lt;<pos:position pos:line="10" pos:column="78"/></operator> <name><name pos:line="10" pos:column="73">r<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">.<pos:position pos:line="10" pos:column="75"/></operator><name pos:line="10" pos:column="75">id<pos:position pos:line="10" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">bool<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">wants<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><call><name><name pos:line="14" pos:column="24">g<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">wants<pos:position pos:line="14" pos:column="32"/></name></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">filter<pos:position pos:line="14" pos:column="39"/></name></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">93<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="15">7<pos:position pos:line="15" pos:column="16"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="17">HERE<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">&lt;&lt;<pos:position pos:line="15" pos:column="30"/></operator> <name><name pos:line="15" pos:column="25">r<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">.<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">groupId<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">&lt;&lt;<pos:position pos:line="15" pos:column="43"/></operator> <operator pos:line="15" pos:column="38">(<pos:position pos:line="15" pos:column="39"/></operator><ternary><condition><expr><name pos:line="15" pos:column="39">wants<pos:position pos:line="15" pos:column="44"/></name></expr> ?<pos:position pos:line="15" pos:column="46"/></condition><then pos:line="15" pos:column="46"> <expr><literal type="string" pos:line="15" pos:column="47">" wants"<pos:position pos:line="15" pos:column="55"/></literal></expr> <pos:position pos:line="15" pos:column="56"/></then><else pos:line="15" pos:column="56">: <expr><literal type="string" pos:line="15" pos:column="58">" ignores"<pos:position pos:line="15" pos:column="68"/></literal></expr></else></ternary><operator pos:line="15" pos:column="68">)<pos:position pos:line="15" pos:column="69"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">wants<pos:position pos:line="16" pos:column="17"/></name></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4736_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">RebuildState<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">rebuildFromSwapLog<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">currentEntry<pos:position pos:line="4" pos:column="17"/></name> <argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">double<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">x<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* load a number of objects per invocation */</comment>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name pos:line="8" pos:column="10">int<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">count<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="24"/></init> <condition><expr><name pos:line="8" pos:column="25">count<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;<pos:position pos:line="8" pos:column="35"/></operator> <name pos:line="8" pos:column="33">speed<pos:position pos:line="8" pos:column="38"/></name></expr>;<pos:position pos:line="8" pos:column="39"/></condition> <incr><expr><name pos:line="8" pos:column="40">count<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">++<pos:position pos:line="8" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="48"/></control> <block pos:line="8" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">StoreSwapLogData<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">swapData<pos:position pos:line="9" pos:column="34"/></name></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">LogParser<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="24">ReadRecord<pos:position pos:line="11" pos:column="34"/></name></name><argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">swapData<pos:position pos:line="11" pos:column="43"/></name></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call> <operator pos:line="11" pos:column="45">!=<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">1<pos:position pos:line="11" pos:column="49"/></literal></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50"> <block pos:line="11" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">47<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"Done reading "<pos:position pos:line="12" pos:column="42"/></literal> <operator pos:line="12" pos:column="43">&lt;&lt;<pos:position pos:line="12" pos:column="51"/></operator> <name><name pos:line="12" pos:column="46">sd<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">path<pos:position pos:line="12" pos:column="54"/></name></name> <operator pos:line="12" pos:column="55">&lt;&lt;<pos:position pos:line="12" pos:column="63"/></operator> <literal type="string" pos:line="12" pos:column="58">" swaplog ("<pos:position pos:line="12" pos:column="70"/></literal> <operator pos:line="12" pos:column="71">&lt;&lt;<pos:position pos:line="12" pos:column="79"/></operator> <name pos:line="12" pos:column="74">n_read<pos:position pos:line="12" pos:column="80"/></name> <operator pos:line="12" pos:column="81">&lt;&lt;<pos:position pos:line="12" pos:column="89"/></operator> <literal type="string" pos:line="12" pos:column="84">" entries)"<pos:position pos:line="12" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="97"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="13" pos:column="13">LogParser<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">Close<pos:position pos:line="13" pos:column="29"/></name></name><argument_list pos:line="13" pos:column="29">()<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="14" pos:column="13">delete<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">LogParser<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">LogParser<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">_done<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="boolean" pos:line="16" pos:column="21">true<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
            <return pos:line="17" pos:column="13">return;<pos:position pos:line="17" pos:column="20"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="20" pos:column="9">n_read<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">++<pos:position pos:line="20" pos:column="17"/></operator></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name><name pos:line="22" pos:column="14">swapData<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">sane<pos:position pos:line="22" pos:column="27"/></name></name><argument_list pos:line="22" pos:column="27">()<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">counts<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">invalid<pos:position pos:line="23" pos:column="27"/></name></name><operator pos:line="23" pos:column="27">++<pos:position pos:line="23" pos:column="29"/></operator></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
            <continue pos:line="24" pos:column="13">continue;<pos:position pos:line="24" pos:column="22"/></continue>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/*
         * BC: during 2.4 development, we changed the way swap file
         * numbers are assigned and stored.  The high 16 bits used
         * to encode the SD index number.  There used to be a call
         * to storeDirProperFileno here that re-assigned the index
         * bits.  Now, for backwards compatibility, we just need
         * to mask it off.
         */</comment>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">swapData<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">.<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">swap_filen<pos:position pos:line="35" pos:column="28"/></name></name> <operator pos:line="35" pos:column="29">&amp;=<pos:position pos:line="35" pos:column="35"/></operator> <literal type="number" pos:line="35" pos:column="32">0x00FFFFFF<pos:position pos:line="35" pos:column="42"/></literal></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="37" pos:column="9">debugs<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="number" pos:line="37" pos:column="16">47<pos:position pos:line="37" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="20">3<pos:position pos:line="37" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="23">"commonUfsDirRebuildFromSwapLog: "<pos:position pos:line="37" pos:column="57"/></literal> <operator pos:line="37" pos:column="58">&lt;&lt;<pos:position pos:line="37" pos:column="66"/></operator>
               <name><name pos:line="38" pos:column="16">swap_log_op_str<pos:position pos:line="38" pos:column="31"/></name><index pos:line="38" pos:column="31">[<expr><operator pos:line="38" pos:column="32">(<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">int<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">)<pos:position pos:line="38" pos:column="37"/></operator> <name><name pos:line="38" pos:column="38">swapData<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">.<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">op<pos:position pos:line="38" pos:column="49"/></name></name></expr>]<pos:position pos:line="38" pos:column="50"/></index></name>  <operator pos:line="38" pos:column="52">&lt;&lt;<pos:position pos:line="38" pos:column="60"/></operator> <literal type="string" pos:line="38" pos:column="55">" "<pos:position pos:line="38" pos:column="58"/></literal> <operator pos:line="38" pos:column="59">&lt;&lt;<pos:position pos:line="38" pos:column="67"/></operator>
               <call><name pos:line="39" pos:column="16">storeKeyText<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">swapData<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">.<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">key<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call>  <operator pos:line="39" pos:column="44">&lt;&lt;<pos:position pos:line="39" pos:column="52"/></operator> <literal type="string" pos:line="39" pos:column="47">" "<pos:position pos:line="39" pos:column="50"/></literal><operator pos:line="39" pos:column="50">&lt;&lt;<pos:position pos:line="39" pos:column="58"/></operator> <call><name><name pos:line="39" pos:column="53">std<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">::<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="58">setfill<pos:position pos:line="39" pos:column="65"/></name></name><argument_list pos:line="39" pos:column="65">(<argument><expr><literal type="char" pos:line="39" pos:column="66">'0'<pos:position pos:line="39" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="70"/></argument_list></call> <operator pos:line="39" pos:column="71">&lt;&lt;<pos:position pos:line="39" pos:column="79"/></operator>
               <name><name pos:line="40" pos:column="16">std<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">::<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">hex<pos:position pos:line="40" pos:column="24"/></name></name> <operator pos:line="40" pos:column="25">&lt;&lt;<pos:position pos:line="40" pos:column="33"/></operator> <name><name pos:line="40" pos:column="28">std<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">::<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">uppercase<pos:position pos:line="40" pos:column="42"/></name></name> <operator pos:line="40" pos:column="43">&lt;&lt;<pos:position pos:line="40" pos:column="51"/></operator> <call><name><name pos:line="40" pos:column="46">std<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">::<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">setw<pos:position pos:line="40" pos:column="55"/></name></name><argument_list pos:line="40" pos:column="55">(<argument><expr><literal type="number" pos:line="40" pos:column="56">8<pos:position pos:line="40" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call> <operator pos:line="40" pos:column="59">&lt;&lt;<pos:position pos:line="40" pos:column="67"/></operator>
               <name><name pos:line="41" pos:column="16">swapData<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">swap_filen<pos:position pos:line="41" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">swapData<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">op<pos:position pos:line="43" pos:column="24"/></name></name> <operator pos:line="43" pos:column="25">==<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">SWAP_LOG_ADD<pos:position pos:line="43" pos:column="40"/></name></expr>)<pos:position pos:line="43" pos:column="41"/></condition><then pos:line="43" pos:column="41"> <block pos:line="43" pos:column="42">{
            <expr_stmt><expr><operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">void<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">)<pos:position pos:line="44" pos:column="19"/></operator> <literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then> <elseif pos:line="45" pos:column="11">else <if pos:line="45" pos:column="16">if <condition pos:line="45" pos:column="19">(<expr><name><name pos:line="45" pos:column="20">swapData<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">.<pos:position pos:line="45" pos:column="29"/></operator><name pos:line="45" pos:column="29">op<pos:position pos:line="45" pos:column="31"/></name></name> <operator pos:line="45" pos:column="32">==<pos:position pos:line="45" pos:column="34"/></operator> <name pos:line="45" pos:column="35">SWAP_LOG_DEL<pos:position pos:line="45" pos:column="47"/></name></expr>)<pos:position pos:line="45" pos:column="48"/></condition><then pos:line="45" pos:column="48"> <block pos:line="45" pos:column="49">{
            <comment type="block" pos:line="46" pos:column="13">/* Delete unless we already have a newer copy anywhere in any store */</comment>
            <comment type="block" pos:line="47" pos:column="13">/* this needs to become
             * 1) unpack url
             * 2) make synthetic request with headers ?? or otherwise search
             * for a matching object in the store
             * TODO FIXME change to new async api
             */</comment>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">currentEntry<pos:position pos:line="53" pos:column="25"/></name> <argument_list pos:line="53" pos:column="26">(<argument><expr><call><name><name pos:line="53" pos:column="27">Store<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">::<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="34">Root<pos:position pos:line="53" pos:column="38"/></name></name><argument_list pos:line="53" pos:column="38">()<pos:position pos:line="53" pos:column="40"/></argument_list></call><operator pos:line="53" pos:column="40">.<pos:position pos:line="53" pos:column="41"/></operator><call><name pos:line="53" pos:column="41">get<pos:position pos:line="53" pos:column="44"/></name><argument_list pos:line="53" pos:column="44">(<argument><expr><name><name pos:line="53" pos:column="45">swapData<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">.<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="54">key<pos:position pos:line="53" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="60"/></expr_stmt>

            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><call><name pos:line="55" pos:column="17">currentEntry<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">()<pos:position pos:line="55" pos:column="31"/></argument_list></call> <operator pos:line="55" pos:column="32">!=<pos:position pos:line="55" pos:column="34"/></operator> <name pos:line="55" pos:column="35">NULL<pos:position pos:line="55" pos:column="39"/></name> <operator pos:line="55" pos:column="40">&amp;&amp;<pos:position pos:line="55" pos:column="50"/></operator> <name><name pos:line="55" pos:column="43">swapData<pos:position pos:line="55" pos:column="51"/></name><operator pos:line="55" pos:column="51">.<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="52">lastref<pos:position pos:line="55" pos:column="59"/></name></name> <operator pos:line="55" pos:column="60">&gt;=<pos:position pos:line="55" pos:column="65"/></operator> <name><name pos:line="55" pos:column="63">e<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">-&gt;<pos:position pos:line="55" pos:column="69"/></operator><name pos:line="55" pos:column="66">lastref<pos:position pos:line="55" pos:column="73"/></name></name></expr>)<pos:position pos:line="55" pos:column="74"/></condition><then pos:line="55" pos:column="74"> <block pos:line="55" pos:column="75">{
                <comment type="block" pos:line="56" pos:column="17">/*
                 * Make sure we don't unlink the file, it might be
                 * in use by a subsequent entry.  Also note that
                 * we don't have to subtract from store_swap_size
                 * because adding to store_swap_size happens in
                 * the cleanup procedure.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">currentEntry<pos:position pos:line="63" pos:column="29"/></name><argument_list pos:line="63" pos:column="29">()<pos:position pos:line="63" pos:column="31"/></argument_list></call><operator pos:line="63" pos:column="31">-&gt;<pos:position pos:line="63" pos:column="36"/></operator><call><name pos:line="63" pos:column="33">expireNow<pos:position pos:line="63" pos:column="42"/></name><argument_list pos:line="63" pos:column="42">()<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">currentEntry<pos:position pos:line="64" pos:column="29"/></name><argument_list pos:line="64" pos:column="29">()<pos:position pos:line="64" pos:column="31"/></argument_list></call><operator pos:line="64" pos:column="31">-&gt;<pos:position pos:line="64" pos:column="36"/></operator><call><name pos:line="64" pos:column="33">releaseRequest<pos:position pos:line="64" pos:column="47"/></name><argument_list pos:line="64" pos:column="47">()<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>

                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><call><name pos:line="66" pos:column="21">currentEntry<pos:position pos:line="66" pos:column="33"/></name><argument_list pos:line="66" pos:column="33">()<pos:position pos:line="66" pos:column="35"/></argument_list></call><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">swap_filen<pos:position pos:line="66" pos:column="47"/></name> <operator pos:line="66" pos:column="48">&gt;<pos:position pos:line="66" pos:column="52"/></operator> <operator pos:line="66" pos:column="50">-<pos:position pos:line="66" pos:column="51"/></operator><literal type="number" pos:line="66" pos:column="51">1<pos:position pos:line="66" pos:column="52"/></literal></expr>)<pos:position pos:line="66" pos:column="53"/></condition><then pos:line="66" pos:column="53"> <block pos:line="66" pos:column="54">{
                    <decl_stmt><decl><type><name pos:line="67" pos:column="21">UFSSwapDir<pos:position pos:line="67" pos:column="31"/></name> <modifier pos:line="67" pos:column="32">*<pos:position pos:line="67" pos:column="33"/></modifier></type><name pos:line="67" pos:column="33">sdForThisEntry<pos:position pos:line="67" pos:column="47"/></name> <init pos:line="67" pos:column="48">= <expr><cast type="dynamic" pos:line="67" pos:column="50">dynamic_cast<argument_list type="generic" pos:line="67" pos:column="62">&lt;<argument><expr><name pos:line="67" pos:column="63">UFSSwapDir<pos:position pos:line="67" pos:column="73"/></name> <operator pos:line="67" pos:column="74">*<pos:position pos:line="67" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="67" pos:column="79"/></argument_list><argument_list pos:line="67" pos:column="76">(<argument><expr><call><name pos:line="67" pos:column="77">INDEXSD<pos:position pos:line="67" pos:column="84"/></name><argument_list pos:line="67" pos:column="84">(<argument><expr><call><name pos:line="67" pos:column="85">currentEntry<pos:position pos:line="67" pos:column="97"/></name><argument_list pos:line="67" pos:column="97">()<pos:position pos:line="67" pos:column="99"/></argument_list></call><operator pos:line="67" pos:column="99">-&gt;<pos:position pos:line="67" pos:column="104"/></operator><name pos:line="67" pos:column="101">swap_dirn<pos:position pos:line="67" pos:column="110"/></name></expr></argument>)<pos:position pos:line="67" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="112"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="67" pos:column="113"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="68" pos:column="21">assert<pos:position pos:line="68" pos:column="27"/></name> <argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">sdForThisEntry<pos:position pos:line="68" pos:column="43"/></name></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="45"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="69" pos:column="21">sdForThisEntry<pos:position pos:line="69" pos:column="35"/></name><operator pos:line="69" pos:column="35">-&gt;<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="37">replacementRemove<pos:position pos:line="69" pos:column="54"/></name></name><argument_list pos:line="69" pos:column="54">(<argument><expr><call><name pos:line="69" pos:column="55">currentEntry<pos:position pos:line="69" pos:column="67"/></name><argument_list pos:line="69" pos:column="67">()<pos:position pos:line="69" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="70" pos:column="21">sdForThisEntry<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">mapBitReset<pos:position pos:line="70" pos:column="48"/></name></name><argument_list pos:line="70" pos:column="48">(<argument><expr><call><name pos:line="70" pos:column="49">currentEntry<pos:position pos:line="70" pos:column="61"/></name><argument_list pos:line="70" pos:column="61">()<pos:position pos:line="70" pos:column="63"/></argument_list></call><operator pos:line="70" pos:column="63">-&gt;<pos:position pos:line="70" pos:column="68"/></operator><name pos:line="70" pos:column="65">swap_filen<pos:position pos:line="70" pos:column="75"/></name></expr></argument>)<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="77"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">currentEntry<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">()<pos:position pos:line="71" pos:column="35"/></argument_list></call><operator pos:line="71" pos:column="35">-&gt;<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="37">swap_filen<pos:position pos:line="71" pos:column="47"/></name> <operator pos:line="71" pos:column="48">=<pos:position pos:line="71" pos:column="49"/></operator> <operator pos:line="71" pos:column="50">-<pos:position pos:line="71" pos:column="51"/></operator><literal type="number" pos:line="71" pos:column="51">1<pos:position pos:line="71" pos:column="52"/></literal></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="72" pos:column="21">currentEntry<pos:position pos:line="72" pos:column="33"/></name><argument_list pos:line="72" pos:column="33">()<pos:position pos:line="72" pos:column="35"/></argument_list></call><operator pos:line="72" pos:column="35">-&gt;<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="37">swap_dirn<pos:position pos:line="72" pos:column="46"/></name> <operator pos:line="72" pos:column="47">=<pos:position pos:line="72" pos:column="48"/></operator> <operator pos:line="72" pos:column="49">-<pos:position pos:line="72" pos:column="50"/></operator><literal type="number" pos:line="72" pos:column="50">1<pos:position pos:line="72" pos:column="51"/></literal></expr>;<pos:position pos:line="72" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="73" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name pos:line="75" pos:column="17">currentEntry<pos:position pos:line="75" pos:column="29"/></name><argument_list pos:line="75" pos:column="29">()<pos:position pos:line="75" pos:column="31"/></argument_list></call><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><call><name pos:line="75" pos:column="33">release<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">()<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="76" pos:column="17">counts<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">objcount<pos:position pos:line="76" pos:column="32"/></name></name><operator pos:line="76" pos:column="32">--<pos:position pos:line="76" pos:column="34"/></operator></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="77" pos:column="17">counts<pos:position pos:line="77" pos:column="23"/></name><operator pos:line="77" pos:column="23">.<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="24">cancelcount<pos:position pos:line="77" pos:column="35"/></name></name><operator pos:line="77" pos:column="35">++<pos:position pos:line="77" pos:column="37"/></operator></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="78" pos:column="14"/></block></then></if>
            <continue pos:line="79" pos:column="13">continue;<pos:position pos:line="79" pos:column="22"/></continue>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if></elseif> <else pos:line="80" pos:column="11">else <block pos:line="80" pos:column="16">{
            <expr_stmt><expr><name pos:line="81" pos:column="13">x<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <call><name><operator pos:line="81" pos:column="17">::<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">log<pos:position pos:line="81" pos:column="22"/></name></name><argument_list pos:line="81" pos:column="22">(<argument><expr><cast type="static" pos:line="81" pos:column="23">static_cast<argument_list type="generic" pos:line="81" pos:column="34">&lt;<argument><expr><name pos:line="81" pos:column="35">double<pos:position pos:line="81" pos:column="41"/></name></expr></argument>&gt;<pos:position pos:line="81" pos:column="45"/></argument_list><argument_list pos:line="81" pos:column="42">(<argument><expr><operator pos:line="81" pos:column="43">++<pos:position pos:line="81" pos:column="45"/></operator><name><name pos:line="81" pos:column="45">counts<pos:position pos:line="81" pos:column="51"/></name><operator pos:line="81" pos:column="51">.<pos:position pos:line="81" pos:column="52"/></operator><name pos:line="81" pos:column="52">bad_log_op<pos:position pos:line="81" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="63"/></argument_list></cast></expr></argument>)<pos:position pos:line="81" pos:column="64"/></argument_list></call> <operator pos:line="81" pos:column="65">/<pos:position pos:line="81" pos:column="66"/></operator> <call><name><operator pos:line="81" pos:column="67">::<pos:position pos:line="81" pos:column="69"/></operator><name pos:line="81" pos:column="69">log<pos:position pos:line="81" pos:column="72"/></name></name><argument_list pos:line="81" pos:column="72">(<argument><expr><literal type="number" pos:line="81" pos:column="73">10.0<pos:position pos:line="81" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="79"/></expr_stmt>

            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><literal type="number" pos:line="83" pos:column="17">0.0<pos:position pos:line="83" pos:column="20"/></literal> <operator pos:line="83" pos:column="21">==<pos:position pos:line="83" pos:column="23"/></operator> <name pos:line="83" pos:column="24">x<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">-<pos:position pos:line="83" pos:column="27"/></operator> <operator pos:line="83" pos:column="28">(<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="29">double<pos:position pos:line="83" pos:column="35"/></name><operator pos:line="83" pos:column="35">)<pos:position pos:line="83" pos:column="36"/></operator> <operator pos:line="83" pos:column="37">(<pos:position pos:line="83" pos:column="38"/></operator><name pos:line="83" pos:column="38">int<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">)<pos:position pos:line="83" pos:column="42"/></operator> <name pos:line="83" pos:column="43">x<pos:position pos:line="83" pos:column="44"/></name></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="17">debugs<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><literal type="number" pos:line="84" pos:column="24">47<pos:position pos:line="84" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="28">1<pos:position pos:line="84" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="31">"WARNING: "<pos:position pos:line="84" pos:column="42"/></literal> <operator pos:line="84" pos:column="43">&lt;&lt;<pos:position pos:line="84" pos:column="51"/></operator> <name><name pos:line="84" pos:column="46">counts<pos:position pos:line="84" pos:column="52"/></name><operator pos:line="84" pos:column="52">.<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="53">bad_log_op<pos:position pos:line="84" pos:column="63"/></name></name> <operator pos:line="84" pos:column="64">&lt;&lt;<pos:position pos:line="84" pos:column="72"/></operator> <literal type="string" pos:line="84" pos:column="67">" invalid swap log entries found"<pos:position pos:line="84" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="102"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name><name pos:line="86" pos:column="13">counts<pos:position pos:line="86" pos:column="19"/></name><operator pos:line="86" pos:column="19">.<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="20">invalid<pos:position pos:line="86" pos:column="27"/></name></name><operator pos:line="86" pos:column="27">++<pos:position pos:line="86" pos:column="29"/></operator></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>

            <continue pos:line="88" pos:column="13">continue;<pos:position pos:line="88" pos:column="22"/></continue>
        }<pos:position pos:line="89" pos:column="10"/></block></else></if>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">(<pos:position pos:line="91" pos:column="14"/></operator><operator pos:line="91" pos:column="14">++<pos:position pos:line="91" pos:column="16"/></operator><name><name pos:line="91" pos:column="16">counts<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">.<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="23">scancount<pos:position pos:line="91" pos:column="32"/></name></name> <operator pos:line="91" pos:column="33">&amp;<pos:position pos:line="91" pos:column="38"/></operator> <literal type="number" pos:line="91" pos:column="35">0xFFF<pos:position pos:line="91" pos:column="40"/></literal><operator pos:line="91" pos:column="40">)<pos:position pos:line="91" pos:column="41"/></operator> <operator pos:line="91" pos:column="42">==<pos:position pos:line="91" pos:column="44"/></operator> <literal type="number" pos:line="91" pos:column="45">0<pos:position pos:line="91" pos:column="46"/></literal></expr>)<pos:position pos:line="91" pos:column="47"/></condition><then pos:line="91" pos:column="47"> <block pos:line="91" pos:column="48">{

            <decl_stmt><decl><type><name pos:line="93" pos:column="13">int<pos:position pos:line="93" pos:column="16"/></name></type> <name pos:line="93" pos:column="17">swap_entries<pos:position pos:line="93" pos:column="29"/></name> <init pos:line="93" pos:column="30">= <expr><call><name><name pos:line="93" pos:column="32">LogParser<pos:position pos:line="93" pos:column="41"/></name><operator pos:line="93" pos:column="41">-&gt;<pos:position pos:line="93" pos:column="46"/></operator><name pos:line="93" pos:column="43">SwapLogEntries<pos:position pos:line="93" pos:column="57"/></name></name><argument_list pos:line="93" pos:column="57">()<pos:position pos:line="93" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="93" pos:column="60"/></decl_stmt>

            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><literal type="number" pos:line="95" pos:column="17">0<pos:position pos:line="95" pos:column="18"/></literal> <operator pos:line="95" pos:column="19">!=<pos:position pos:line="95" pos:column="21"/></operator> <name pos:line="95" pos:column="22">swap_entries<pos:position pos:line="95" pos:column="34"/></name></expr> )<pos:position pos:line="95" pos:column="36"/></condition><then pos:line="95" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="96" pos:column="17">storeRebuildProgress<pos:position pos:line="96" pos:column="37"/></name><argument_list pos:line="96" pos:column="37">(<argument><expr><name><name pos:line="96" pos:column="38">sd<pos:position pos:line="96" pos:column="40"/></name><operator pos:line="96" pos:column="40">-&gt;<pos:position pos:line="96" pos:column="45"/></operator><name pos:line="96" pos:column="42">index<pos:position pos:line="96" pos:column="47"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="97" pos:column="38">swap_entries<pos:position pos:line="97" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="52">n_read<pos:position pos:line="97" pos:column="58"/></name></expr></argument>)<pos:position pos:line="97" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="60"/></expr_stmt></block></then></if>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><operator pos:line="100" pos:column="13">!<pos:position pos:line="100" pos:column="14"/></operator><call><name><name pos:line="100" pos:column="14">sd<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">-&gt;<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="18">validFileno<pos:position pos:line="100" pos:column="29"/></name></name><argument_list pos:line="100" pos:column="29">(<argument><expr><name><name pos:line="100" pos:column="30">swapData<pos:position pos:line="100" pos:column="38"/></name><operator pos:line="100" pos:column="38">.<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="39">swap_filen<pos:position pos:line="100" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="100" pos:column="51">0<pos:position pos:line="100" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="54"/></condition><then pos:line="100" pos:column="54"> <block pos:line="100" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">counts<pos:position pos:line="101" pos:column="19"/></name><operator pos:line="101" pos:column="19">.<pos:position pos:line="101" pos:column="20"/></operator><name pos:line="101" pos:column="20">invalid<pos:position pos:line="101" pos:column="27"/></name></name><operator pos:line="101" pos:column="27">++<pos:position pos:line="101" pos:column="29"/></operator></expr>;<pos:position pos:line="101" pos:column="30"/></expr_stmt>
            <continue pos:line="102" pos:column="13">continue;<pos:position pos:line="102" pos:column="22"/></continue>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><call><name pos:line="105" pos:column="13">EBIT_TEST<pos:position pos:line="105" pos:column="22"/></name><argument_list pos:line="105" pos:column="22">(<argument><expr><name><name pos:line="105" pos:column="23">swapData<pos:position pos:line="105" pos:column="31"/></name><operator pos:line="105" pos:column="31">.<pos:position pos:line="105" pos:column="32"/></operator><name pos:line="105" pos:column="32">flags<pos:position pos:line="105" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="39">KEY_PRIVATE<pos:position pos:line="105" pos:column="50"/></name></expr></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="52"/></condition><then pos:line="105" pos:column="52"> <block pos:line="105" pos:column="53">{
            <expr_stmt><expr><name><name pos:line="106" pos:column="13">counts<pos:position pos:line="106" pos:column="19"/></name><operator pos:line="106" pos:column="19">.<pos:position pos:line="106" pos:column="20"/></operator><name pos:line="106" pos:column="20">badflags<pos:position pos:line="106" pos:column="28"/></name></name><operator pos:line="106" pos:column="28">++<pos:position pos:line="106" pos:column="30"/></operator></expr>;<pos:position pos:line="106" pos:column="31"/></expr_stmt>
            <continue pos:line="107" pos:column="13">continue;<pos:position pos:line="107" pos:column="22"/></continue>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="110" pos:column="9">/* this needs to become
         * 1) unpack url
         * 2) make synthetic request with headers ?? or otherwise search
         * for a matching object in the store
         * TODO FIXME change to new async api
         */</comment>
        <expr_stmt><expr><call><name pos:line="116" pos:column="9">currentEntry<pos:position pos:line="116" pos:column="21"/></name> <argument_list pos:line="116" pos:column="22">(<argument><expr><call><name><name pos:line="116" pos:column="23">Store<pos:position pos:line="116" pos:column="28"/></name><operator pos:line="116" pos:column="28">::<pos:position pos:line="116" pos:column="30"/></operator><name pos:line="116" pos:column="30">Root<pos:position pos:line="116" pos:column="34"/></name></name><argument_list pos:line="116" pos:column="34">()<pos:position pos:line="116" pos:column="36"/></argument_list></call><operator pos:line="116" pos:column="36">.<pos:position pos:line="116" pos:column="37"/></operator><call><name pos:line="116" pos:column="37">get<pos:position pos:line="116" pos:column="40"/></name><argument_list pos:line="116" pos:column="40">(<argument><expr><name><name pos:line="116" pos:column="41">swapData<pos:position pos:line="116" pos:column="49"/></name><operator pos:line="116" pos:column="49">.<pos:position pos:line="116" pos:column="50"/></operator><name pos:line="116" pos:column="50">key<pos:position pos:line="116" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="56"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="118" pos:column="9">int<pos:position pos:line="118" pos:column="12"/></name></type> <name pos:line="118" pos:column="13">used<pos:position pos:line="118" pos:column="17"/></name></decl>;<pos:position pos:line="118" pos:column="18"/></decl_stmt>			<comment type="block" pos:line="118" pos:column="41">/* is swapfile already in use? */</comment>

        <expr_stmt><expr><name pos:line="120" pos:column="9">used<pos:position pos:line="120" pos:column="13"/></name> <operator pos:line="120" pos:column="14">=<pos:position pos:line="120" pos:column="15"/></operator> <call><name><name pos:line="120" pos:column="16">sd<pos:position pos:line="120" pos:column="18"/></name><operator pos:line="120" pos:column="18">-&gt;<pos:position pos:line="120" pos:column="23"/></operator><name pos:line="120" pos:column="20">mapBitTest<pos:position pos:line="120" pos:column="30"/></name></name><argument_list pos:line="120" pos:column="30">(<argument><expr><name><name pos:line="120" pos:column="31">swapData<pos:position pos:line="120" pos:column="39"/></name><operator pos:line="120" pos:column="39">.<pos:position pos:line="120" pos:column="40"/></operator><name pos:line="120" pos:column="40">swap_filen<pos:position pos:line="120" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="52"/></expr_stmt>

        <comment type="block" pos:line="122" pos:column="9">/* If this URL already exists in the cache, does the swap log
         * appear to have a newer entry?  Compare 'lastref' from the
         * swap log to e-&gt;lastref. */</comment>
        <comment type="block" pos:line="125" pos:column="9">/* is the log entry newer than current entry? */</comment>
        <decl_stmt><decl><type><name pos:line="126" pos:column="9">int<pos:position pos:line="126" pos:column="12"/></name></type> <name pos:line="126" pos:column="13">disk_entry_newer<pos:position pos:line="126" pos:column="29"/></name> <init pos:line="126" pos:column="30">= <expr><ternary><condition><expr><call><name pos:line="126" pos:column="32">currentEntry<pos:position pos:line="126" pos:column="44"/></name><argument_list pos:line="126" pos:column="44">()<pos:position pos:line="126" pos:column="46"/></argument_list></call></expr> ?<pos:position pos:line="126" pos:column="48"/></condition><then pos:line="126" pos:column="48"> <expr><operator pos:line="126" pos:column="49">(<pos:position pos:line="126" pos:column="50"/></operator><ternary><condition><expr><name><name pos:line="126" pos:column="50">swapData<pos:position pos:line="126" pos:column="58"/></name><operator pos:line="126" pos:column="58">.<pos:position pos:line="126" pos:column="59"/></operator><name pos:line="126" pos:column="59">lastref<pos:position pos:line="126" pos:column="66"/></name></name> <operator pos:line="126" pos:column="67">&gt;<pos:position pos:line="126" pos:column="71"/></operator> <call><name pos:line="126" pos:column="69">currentEntry<pos:position pos:line="126" pos:column="81"/></name><argument_list pos:line="126" pos:column="81">()<pos:position pos:line="126" pos:column="83"/></argument_list></call><operator pos:line="126" pos:column="83">-&gt;<pos:position pos:line="126" pos:column="88"/></operator><name pos:line="126" pos:column="85">lastref<pos:position pos:line="126" pos:column="92"/></name></expr> ?<pos:position pos:line="126" pos:column="94"/></condition><then pos:line="126" pos:column="94"> <expr><literal type="number" pos:line="126" pos:column="95">1<pos:position pos:line="126" pos:column="96"/></literal></expr> <pos:position pos:line="126" pos:column="97"/></then><else pos:line="126" pos:column="97">: <expr><literal type="number" pos:line="126" pos:column="99">0<pos:position pos:line="126" pos:column="100"/></literal></expr></else></ternary><operator pos:line="126" pos:column="100">)<pos:position pos:line="126" pos:column="101"/></operator></expr> <pos:position pos:line="126" pos:column="102"/></then><else pos:line="126" pos:column="102">: <expr><literal type="number" pos:line="126" pos:column="104">0<pos:position pos:line="126" pos:column="105"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="126" pos:column="106"/></decl_stmt>

        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><name pos:line="128" pos:column="13">used<pos:position pos:line="128" pos:column="17"/></name> <operator pos:line="128" pos:column="18">&amp;&amp;<pos:position pos:line="128" pos:column="28"/></operator> <operator pos:line="128" pos:column="21">!<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="22">disk_entry_newer<pos:position pos:line="128" pos:column="38"/></name></expr>)<pos:position pos:line="128" pos:column="39"/></condition><then pos:line="128" pos:column="39"> <block pos:line="128" pos:column="40">{
            <comment type="block" pos:line="129" pos:column="13">/* log entry is old, ignore it */</comment>
            <expr_stmt><expr><name><name pos:line="130" pos:column="13">counts<pos:position pos:line="130" pos:column="19"/></name><operator pos:line="130" pos:column="19">.<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="20">clashcount<pos:position pos:line="130" pos:column="30"/></name></name><operator pos:line="130" pos:column="30">++<pos:position pos:line="130" pos:column="32"/></operator></expr>;<pos:position pos:line="130" pos:column="33"/></expr_stmt>
            <continue pos:line="131" pos:column="13">continue;<pos:position pos:line="131" pos:column="22"/></continue>
        }<pos:position pos:line="132" pos:column="10"/></block></then> <elseif pos:line="132" pos:column="11">else <if pos:line="132" pos:column="16">if <condition pos:line="132" pos:column="19">(<expr><name pos:line="132" pos:column="20">used<pos:position pos:line="132" pos:column="24"/></name> <operator pos:line="132" pos:column="25">&amp;&amp;<pos:position pos:line="132" pos:column="35"/></operator> <call><name pos:line="132" pos:column="28">currentEntry<pos:position pos:line="132" pos:column="40"/></name><argument_list pos:line="132" pos:column="40">()<pos:position pos:line="132" pos:column="42"/></argument_list></call> <operator pos:line="132" pos:column="43">&amp;&amp;<pos:position pos:line="132" pos:column="53"/></operator> <call><name pos:line="132" pos:column="46">currentEntry<pos:position pos:line="132" pos:column="58"/></name><argument_list pos:line="132" pos:column="58">()<pos:position pos:line="132" pos:column="60"/></argument_list></call><operator pos:line="132" pos:column="60">-&gt;<pos:position pos:line="132" pos:column="65"/></operator><name pos:line="132" pos:column="62">swap_filen<pos:position pos:line="132" pos:column="72"/></name> <operator pos:line="132" pos:column="73">==<pos:position pos:line="132" pos:column="75"/></operator> <name><name pos:line="132" pos:column="76">swapData<pos:position pos:line="132" pos:column="84"/></name><operator pos:line="132" pos:column="84">.<pos:position pos:line="132" pos:column="85"/></operator><name pos:line="132" pos:column="85">swap_filen<pos:position pos:line="132" pos:column="95"/></name></name> <operator pos:line="132" pos:column="96">&amp;&amp;<pos:position pos:line="132" pos:column="106"/></operator> <call><name pos:line="132" pos:column="99">currentEntry<pos:position pos:line="132" pos:column="111"/></name><argument_list pos:line="132" pos:column="111">()<pos:position pos:line="132" pos:column="113"/></argument_list></call><operator pos:line="132" pos:column="113">-&gt;<pos:position pos:line="132" pos:column="118"/></operator><name pos:line="132" pos:column="115">swap_dirn<pos:position pos:line="132" pos:column="124"/></name> <operator pos:line="132" pos:column="125">==<pos:position pos:line="132" pos:column="127"/></operator> <name><name pos:line="132" pos:column="128">sd<pos:position pos:line="132" pos:column="130"/></name><operator pos:line="132" pos:column="130">-&gt;<pos:position pos:line="132" pos:column="135"/></operator><name pos:line="132" pos:column="132">index<pos:position pos:line="132" pos:column="137"/></name></name></expr>)<pos:position pos:line="132" pos:column="138"/></condition><then pos:line="132" pos:column="138"> <block pos:line="132" pos:column="139">{
            <comment type="block" pos:line="133" pos:column="13">/* swapfile taken, same URL, newer, update meta */</comment>

            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><call><name pos:line="135" pos:column="17">currentEntry<pos:position pos:line="135" pos:column="29"/></name><argument_list pos:line="135" pos:column="29">()<pos:position pos:line="135" pos:column="31"/></argument_list></call><operator pos:line="135" pos:column="31">-&gt;<pos:position pos:line="135" pos:column="36"/></operator><name pos:line="135" pos:column="33">store_status<pos:position pos:line="135" pos:column="45"/></name> <operator pos:line="135" pos:column="46">==<pos:position pos:line="135" pos:column="48"/></operator> <name pos:line="135" pos:column="49">STORE_OK<pos:position pos:line="135" pos:column="57"/></name></expr>)<pos:position pos:line="135" pos:column="58"/></condition><then pos:line="135" pos:column="58"> <block pos:line="135" pos:column="59">{
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">currentEntry<pos:position pos:line="136" pos:column="29"/></name><argument_list pos:line="136" pos:column="29">()<pos:position pos:line="136" pos:column="31"/></argument_list></call><operator pos:line="136" pos:column="31">-&gt;<pos:position pos:line="136" pos:column="36"/></operator><name pos:line="136" pos:column="33">lastref<pos:position pos:line="136" pos:column="40"/></name> <operator pos:line="136" pos:column="41">=<pos:position pos:line="136" pos:column="42"/></operator> <name><name pos:line="136" pos:column="43">swapData<pos:position pos:line="136" pos:column="51"/></name><operator pos:line="136" pos:column="51">.<pos:position pos:line="136" pos:column="52"/></operator><name pos:line="136" pos:column="52">timestamp<pos:position pos:line="136" pos:column="61"/></name></name></expr>;<pos:position pos:line="136" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="137" pos:column="17">currentEntry<pos:position pos:line="137" pos:column="29"/></name><argument_list pos:line="137" pos:column="29">()<pos:position pos:line="137" pos:column="31"/></argument_list></call><operator pos:line="137" pos:column="31">-&gt;<pos:position pos:line="137" pos:column="36"/></operator><name pos:line="137" pos:column="33">timestamp<pos:position pos:line="137" pos:column="42"/></name> <operator pos:line="137" pos:column="43">=<pos:position pos:line="137" pos:column="44"/></operator> <name><name pos:line="137" pos:column="45">swapData<pos:position pos:line="137" pos:column="53"/></name><operator pos:line="137" pos:column="53">.<pos:position pos:line="137" pos:column="54"/></operator><name pos:line="137" pos:column="54">timestamp<pos:position pos:line="137" pos:column="63"/></name></name></expr>;<pos:position pos:line="137" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="138" pos:column="17">currentEntry<pos:position pos:line="138" pos:column="29"/></name><argument_list pos:line="138" pos:column="29">()<pos:position pos:line="138" pos:column="31"/></argument_list></call><operator pos:line="138" pos:column="31">-&gt;<pos:position pos:line="138" pos:column="36"/></operator><name pos:line="138" pos:column="33">expires<pos:position pos:line="138" pos:column="40"/></name> <operator pos:line="138" pos:column="41">=<pos:position pos:line="138" pos:column="42"/></operator> <name><name pos:line="138" pos:column="43">swapData<pos:position pos:line="138" pos:column="51"/></name><operator pos:line="138" pos:column="51">.<pos:position pos:line="138" pos:column="52"/></operator><name pos:line="138" pos:column="52">expires<pos:position pos:line="138" pos:column="59"/></name></name></expr>;<pos:position pos:line="138" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="139" pos:column="17">currentEntry<pos:position pos:line="139" pos:column="29"/></name><argument_list pos:line="139" pos:column="29">()<pos:position pos:line="139" pos:column="31"/></argument_list></call><operator pos:line="139" pos:column="31">-&gt;<pos:position pos:line="139" pos:column="36"/></operator><name pos:line="139" pos:column="33">lastmod<pos:position pos:line="139" pos:column="40"/></name> <operator pos:line="139" pos:column="41">=<pos:position pos:line="139" pos:column="42"/></operator> <name><name pos:line="139" pos:column="43">swapData<pos:position pos:line="139" pos:column="51"/></name><operator pos:line="139" pos:column="51">.<pos:position pos:line="139" pos:column="52"/></operator><name pos:line="139" pos:column="52">lastmod<pos:position pos:line="139" pos:column="59"/></name></name></expr>;<pos:position pos:line="139" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="140" pos:column="17">currentEntry<pos:position pos:line="140" pos:column="29"/></name><argument_list pos:line="140" pos:column="29">()<pos:position pos:line="140" pos:column="31"/></argument_list></call><operator pos:line="140" pos:column="31">-&gt;<pos:position pos:line="140" pos:column="36"/></operator><name pos:line="140" pos:column="33">flags<pos:position pos:line="140" pos:column="38"/></name> <operator pos:line="140" pos:column="39">=<pos:position pos:line="140" pos:column="40"/></operator> <name><name pos:line="140" pos:column="41">swapData<pos:position pos:line="140" pos:column="49"/></name><operator pos:line="140" pos:column="49">.<pos:position pos:line="140" pos:column="50"/></operator><name pos:line="140" pos:column="50">flags<pos:position pos:line="140" pos:column="55"/></name></name></expr>;<pos:position pos:line="140" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">currentEntry<pos:position pos:line="141" pos:column="29"/></name><argument_list pos:line="141" pos:column="29">()<pos:position pos:line="141" pos:column="31"/></argument_list></call><operator pos:line="141" pos:column="31">-&gt;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="33">refcount<pos:position pos:line="141" pos:column="41"/></name> <operator pos:line="141" pos:column="42">+=<pos:position pos:line="141" pos:column="44"/></operator> <name><name pos:line="141" pos:column="45">swapData<pos:position pos:line="141" pos:column="53"/></name><operator pos:line="141" pos:column="53">.<pos:position pos:line="141" pos:column="54"/></operator><name pos:line="141" pos:column="54">refcount<pos:position pos:line="141" pos:column="62"/></name></name></expr>;<pos:position pos:line="141" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="142" pos:column="17">sd<pos:position pos:line="142" pos:column="19"/></name><operator pos:line="142" pos:column="19">-&gt;<pos:position pos:line="142" pos:column="24"/></operator><name pos:line="142" pos:column="21">dereference<pos:position pos:line="142" pos:column="32"/></name></name><argument_list pos:line="142" pos:column="32">(<argument><expr><operator pos:line="142" pos:column="33">*<pos:position pos:line="142" pos:column="34"/></operator><call><name pos:line="142" pos:column="34">currentEntry<pos:position pos:line="142" pos:column="46"/></name><argument_list pos:line="142" pos:column="46">()<pos:position pos:line="142" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="50"/></expr_stmt>
            }<pos:position pos:line="143" pos:column="14"/></block></then> <else pos:line="143" pos:column="15">else <block pos:line="143" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">debug_trap<pos:position pos:line="144" pos:column="27"/></name><argument_list pos:line="144" pos:column="27">(<argument><expr><literal type="string" pos:line="144" pos:column="28">"commonUfsDirRebuildFromSwapLog: bad condition"<pos:position pos:line="144" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="145" pos:column="17">debugs<pos:position pos:line="145" pos:column="23"/></name><argument_list pos:line="145" pos:column="23">(<argument><expr><literal type="number" pos:line="145" pos:column="24">47<pos:position pos:line="145" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="28">1<pos:position pos:line="145" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="31">"\tSee "<pos:position pos:line="145" pos:column="39"/></literal> <operator pos:line="145" pos:column="40">&lt;&lt;<pos:position pos:line="145" pos:column="48"/></operator> <name pos:line="145" pos:column="43">__FILE__<pos:position pos:line="145" pos:column="51"/></name> <operator pos:line="145" pos:column="52">&lt;&lt;<pos:position pos:line="145" pos:column="60"/></operator> <literal type="string" pos:line="145" pos:column="55">":"<pos:position pos:line="145" pos:column="58"/></literal> <operator pos:line="145" pos:column="59">&lt;&lt;<pos:position pos:line="145" pos:column="67"/></operator> <name pos:line="145" pos:column="62">__LINE__<pos:position pos:line="145" pos:column="70"/></name></expr></argument>)<pos:position pos:line="145" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="146" pos:column="14"/></block></else></if>
            <continue pos:line="147" pos:column="13">continue;<pos:position pos:line="147" pos:column="22"/></continue>
        }<pos:position pos:line="148" pos:column="10"/></block></then></if></elseif> <elseif pos:line="148" pos:column="11">else <if pos:line="148" pos:column="16">if <condition pos:line="148" pos:column="19">(<expr><name pos:line="148" pos:column="20">used<pos:position pos:line="148" pos:column="24"/></name></expr>)<pos:position pos:line="148" pos:column="25"/></condition><then pos:line="148" pos:column="25"> <block pos:line="148" pos:column="26">{
            <comment type="block" pos:line="149" pos:column="13">/* swapfile in use, not by this URL, log entry is newer */</comment>
            <comment type="block" pos:line="150" pos:column="13">/* This is sorta bad: the log entry should NOT be newer at this
             * point.  If the log is dirty, the filesize check should have
             * caught this.  If the log is clean, there should never be a
             * newer entry. */</comment>
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">debugs<pos:position pos:line="154" pos:column="19"/></name><argument_list pos:line="154" pos:column="19">(<argument><expr><literal type="number" pos:line="154" pos:column="20">47<pos:position pos:line="154" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="24">1<pos:position pos:line="154" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="27">"WARNING: newer swaplog entry for dirno "<pos:position pos:line="154" pos:column="68"/></literal> <operator pos:line="154" pos:column="69">&lt;&lt;<pos:position pos:line="154" pos:column="77"/></operator>
                   <name><name pos:line="155" pos:column="20">sd<pos:position pos:line="155" pos:column="22"/></name><operator pos:line="155" pos:column="22">-&gt;<pos:position pos:line="155" pos:column="27"/></operator><name pos:line="155" pos:column="24">index<pos:position pos:line="155" pos:column="29"/></name></name>  <operator pos:line="155" pos:column="31">&lt;&lt;<pos:position pos:line="155" pos:column="39"/></operator> <literal type="string" pos:line="155" pos:column="34">", fileno "<pos:position pos:line="155" pos:column="45"/></literal><operator pos:line="155" pos:column="45">&lt;&lt;<pos:position pos:line="155" pos:column="53"/></operator> <call><name><name pos:line="155" pos:column="48">std<pos:position pos:line="155" pos:column="51"/></name><operator pos:line="155" pos:column="51">::<pos:position pos:line="155" pos:column="53"/></operator><name pos:line="155" pos:column="53">setfill<pos:position pos:line="155" pos:column="60"/></name></name><argument_list pos:line="155" pos:column="60">(<argument><expr><literal type="char" pos:line="155" pos:column="61">'0'<pos:position pos:line="155" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="65"/></argument_list></call> <operator pos:line="155" pos:column="66">&lt;&lt;<pos:position pos:line="155" pos:column="74"/></operator> <name><name pos:line="155" pos:column="69">std<pos:position pos:line="155" pos:column="72"/></name><operator pos:line="155" pos:column="72">::<pos:position pos:line="155" pos:column="74"/></operator><name pos:line="155" pos:column="74">hex<pos:position pos:line="155" pos:column="77"/></name></name> <operator pos:line="155" pos:column="78">&lt;&lt;<pos:position pos:line="155" pos:column="86"/></operator>
                   <name><name pos:line="156" pos:column="20">std<pos:position pos:line="156" pos:column="23"/></name><operator pos:line="156" pos:column="23">::<pos:position pos:line="156" pos:column="25"/></operator><name pos:line="156" pos:column="25">uppercase<pos:position pos:line="156" pos:column="34"/></name></name> <operator pos:line="156" pos:column="35">&lt;&lt;<pos:position pos:line="156" pos:column="43"/></operator> <call><name><name pos:line="156" pos:column="38">std<pos:position pos:line="156" pos:column="41"/></name><operator pos:line="156" pos:column="41">::<pos:position pos:line="156" pos:column="43"/></operator><name pos:line="156" pos:column="43">setw<pos:position pos:line="156" pos:column="47"/></name></name><argument_list pos:line="156" pos:column="47">(<argument><expr><literal type="number" pos:line="156" pos:column="48">8<pos:position pos:line="156" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="50"/></argument_list></call> <operator pos:line="156" pos:column="51">&lt;&lt;<pos:position pos:line="156" pos:column="59"/></operator> <name><name pos:line="156" pos:column="54">swapData<pos:position pos:line="156" pos:column="62"/></name><operator pos:line="156" pos:column="62">.<pos:position pos:line="156" pos:column="63"/></operator><name pos:line="156" pos:column="63">swap_filen<pos:position pos:line="156" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="75"/></expr_stmt>

            <comment type="block" pos:line="158" pos:column="13">/* I'm tempted to remove the swapfile here just to be safe,
             * but there is a bad race condition in the NOVM version if
             * the swapfile has recently been opened for writing, but
             * not yet opened for reading.  Because we can't map
             * swapfiles back to StoreEntrys, we don't know the state
             * of the entry using that file.  */</comment>
            <comment type="block" pos:line="164" pos:column="13">/* We'll assume the existing entry is valid, probably because
             * were in a slow rebuild and the the swap file number got taken
             * and the validation procedure hasn't run. */</comment>
            <expr_stmt><expr><call><name pos:line="167" pos:column="13">assert<pos:position pos:line="167" pos:column="19"/></name><argument_list pos:line="167" pos:column="19">(<argument><expr><name><name pos:line="167" pos:column="20">flags<pos:position pos:line="167" pos:column="25"/></name><operator pos:line="167" pos:column="25">.<pos:position pos:line="167" pos:column="26"/></operator><name pos:line="167" pos:column="26">need_to_validate<pos:position pos:line="167" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="167" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="168" pos:column="13">counts<pos:position pos:line="168" pos:column="19"/></name><operator pos:line="168" pos:column="19">.<pos:position pos:line="168" pos:column="20"/></operator><name pos:line="168" pos:column="20">clashcount<pos:position pos:line="168" pos:column="30"/></name></name><operator pos:line="168" pos:column="30">++<pos:position pos:line="168" pos:column="32"/></operator></expr>;<pos:position pos:line="168" pos:column="33"/></expr_stmt>
            <continue pos:line="169" pos:column="13">continue;<pos:position pos:line="169" pos:column="22"/></continue>
        }<pos:position pos:line="170" pos:column="10"/></block></then></if></elseif> <elseif pos:line="170" pos:column="11">else <if pos:line="170" pos:column="16">if <condition pos:line="170" pos:column="19">(<expr><call><name pos:line="170" pos:column="20">currentEntry<pos:position pos:line="170" pos:column="32"/></name><argument_list pos:line="170" pos:column="32">()<pos:position pos:line="170" pos:column="34"/></argument_list></call> <operator pos:line="170" pos:column="35">&amp;&amp;<pos:position pos:line="170" pos:column="45"/></operator> <operator pos:line="170" pos:column="38">!<pos:position pos:line="170" pos:column="39"/></operator><name pos:line="170" pos:column="39">disk_entry_newer<pos:position pos:line="170" pos:column="55"/></name></expr>)<pos:position pos:line="170" pos:column="56"/></condition><then pos:line="170" pos:column="56"> <block pos:line="170" pos:column="57">{
            <comment type="block" pos:line="171" pos:column="13">/* key already exists, current entry is newer */</comment>
            <comment type="block" pos:line="172" pos:column="13">/* keep old, ignore new */</comment>
            <expr_stmt><expr><name><name pos:line="173" pos:column="13">counts<pos:position pos:line="173" pos:column="19"/></name><operator pos:line="173" pos:column="19">.<pos:position pos:line="173" pos:column="20"/></operator><name pos:line="173" pos:column="20">dupcount<pos:position pos:line="173" pos:column="28"/></name></name><operator pos:line="173" pos:column="28">++<pos:position pos:line="173" pos:column="30"/></operator></expr>;<pos:position pos:line="173" pos:column="31"/></expr_stmt>
            <continue pos:line="174" pos:column="13">continue;<pos:position pos:line="174" pos:column="22"/></continue>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if></elseif> <elseif pos:line="175" pos:column="11">else <if pos:line="175" pos:column="16">if <condition pos:line="175" pos:column="19">(<expr><call><name pos:line="175" pos:column="20">currentEntry<pos:position pos:line="175" pos:column="32"/></name><argument_list pos:line="175" pos:column="32">()<pos:position pos:line="175" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="35"/></condition><then pos:line="175" pos:column="35"> <block pos:line="175" pos:column="36">{
            <comment type="block" pos:line="176" pos:column="13">/* key already exists, this swapfile not being used */</comment>
            <comment type="block" pos:line="177" pos:column="13">/* junk old, load new */</comment>
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">currentEntry<pos:position pos:line="178" pos:column="25"/></name><argument_list pos:line="178" pos:column="25">()<pos:position pos:line="178" pos:column="27"/></argument_list></call><operator pos:line="178" pos:column="27">-&gt;<pos:position pos:line="178" pos:column="32"/></operator><call><name pos:line="178" pos:column="29">expireNow<pos:position pos:line="178" pos:column="38"/></name><argument_list pos:line="178" pos:column="38">()<pos:position pos:line="178" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="179" pos:column="13">currentEntry<pos:position pos:line="179" pos:column="25"/></name><argument_list pos:line="179" pos:column="25">()<pos:position pos:line="179" pos:column="27"/></argument_list></call><operator pos:line="179" pos:column="27">-&gt;<pos:position pos:line="179" pos:column="32"/></operator><call><name pos:line="179" pos:column="29">releaseRequest<pos:position pos:line="179" pos:column="43"/></name><argument_list pos:line="179" pos:column="43">()<pos:position pos:line="179" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="46"/></expr_stmt>

            <if pos:line="181" pos:column="13">if <condition pos:line="181" pos:column="16">(<expr><call><name pos:line="181" pos:column="17">currentEntry<pos:position pos:line="181" pos:column="29"/></name><argument_list pos:line="181" pos:column="29">()<pos:position pos:line="181" pos:column="31"/></argument_list></call><operator pos:line="181" pos:column="31">-&gt;<pos:position pos:line="181" pos:column="36"/></operator><name pos:line="181" pos:column="33">swap_filen<pos:position pos:line="181" pos:column="43"/></name> <operator pos:line="181" pos:column="44">&gt;<pos:position pos:line="181" pos:column="48"/></operator> <operator pos:line="181" pos:column="46">-<pos:position pos:line="181" pos:column="47"/></operator><literal type="number" pos:line="181" pos:column="47">1<pos:position pos:line="181" pos:column="48"/></literal></expr>)<pos:position pos:line="181" pos:column="49"/></condition><then pos:line="181" pos:column="49"> <block pos:line="181" pos:column="50">{
                <decl_stmt><decl><type><name pos:line="182" pos:column="17">UFSSwapDir<pos:position pos:line="182" pos:column="27"/></name> <modifier pos:line="182" pos:column="28">*<pos:position pos:line="182" pos:column="29"/></modifier></type><name pos:line="182" pos:column="29">sdForThisEntry<pos:position pos:line="182" pos:column="43"/></name> <init pos:line="182" pos:column="44">= <expr><cast type="dynamic" pos:line="182" pos:column="46">dynamic_cast<argument_list type="generic" pos:line="182" pos:column="58">&lt;<argument><expr><name pos:line="182" pos:column="59">UFSSwapDir<pos:position pos:line="182" pos:column="69"/></name> <operator pos:line="182" pos:column="70">*<pos:position pos:line="182" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="182" pos:column="75"/></argument_list><argument_list pos:line="182" pos:column="72">(<argument><expr><call><name pos:line="182" pos:column="73">INDEXSD<pos:position pos:line="182" pos:column="80"/></name><argument_list pos:line="182" pos:column="80">(<argument><expr><call><name pos:line="182" pos:column="81">currentEntry<pos:position pos:line="182" pos:column="93"/></name><argument_list pos:line="182" pos:column="93">()<pos:position pos:line="182" pos:column="95"/></argument_list></call><operator pos:line="182" pos:column="95">-&gt;<pos:position pos:line="182" pos:column="100"/></operator><name pos:line="182" pos:column="97">swap_dirn<pos:position pos:line="182" pos:column="106"/></name></expr></argument>)<pos:position pos:line="182" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="182" pos:column="108"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="182" pos:column="109"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="183" pos:column="17">sdForThisEntry<pos:position pos:line="183" pos:column="31"/></name><operator pos:line="183" pos:column="31">-&gt;<pos:position pos:line="183" pos:column="36"/></operator><name pos:line="183" pos:column="33">replacementRemove<pos:position pos:line="183" pos:column="50"/></name></name><argument_list pos:line="183" pos:column="50">(<argument><expr><call><name pos:line="183" pos:column="51">currentEntry<pos:position pos:line="183" pos:column="63"/></name><argument_list pos:line="183" pos:column="63">()<pos:position pos:line="183" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="67"/></expr_stmt>
                <comment type="block" pos:line="184" pos:column="17">/* Make sure we don't actually unlink the file */</comment>
                <expr_stmt><expr><call><name><name pos:line="185" pos:column="17">sdForThisEntry<pos:position pos:line="185" pos:column="31"/></name><operator pos:line="185" pos:column="31">-&gt;<pos:position pos:line="185" pos:column="36"/></operator><name pos:line="185" pos:column="33">mapBitReset<pos:position pos:line="185" pos:column="44"/></name></name><argument_list pos:line="185" pos:column="44">(<argument><expr><call><name pos:line="185" pos:column="45">currentEntry<pos:position pos:line="185" pos:column="57"/></name><argument_list pos:line="185" pos:column="57">()<pos:position pos:line="185" pos:column="59"/></argument_list></call><operator pos:line="185" pos:column="59">-&gt;<pos:position pos:line="185" pos:column="64"/></operator><name pos:line="185" pos:column="61">swap_filen<pos:position pos:line="185" pos:column="71"/></name></expr></argument>)<pos:position pos:line="185" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="186" pos:column="17">currentEntry<pos:position pos:line="186" pos:column="29"/></name><argument_list pos:line="186" pos:column="29">()<pos:position pos:line="186" pos:column="31"/></argument_list></call><operator pos:line="186" pos:column="31">-&gt;<pos:position pos:line="186" pos:column="36"/></operator><name pos:line="186" pos:column="33">swap_filen<pos:position pos:line="186" pos:column="43"/></name> <operator pos:line="186" pos:column="44">=<pos:position pos:line="186" pos:column="45"/></operator> <operator pos:line="186" pos:column="46">-<pos:position pos:line="186" pos:column="47"/></operator><literal type="number" pos:line="186" pos:column="47">1<pos:position pos:line="186" pos:column="48"/></literal></expr>;<pos:position pos:line="186" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="187" pos:column="17">currentEntry<pos:position pos:line="187" pos:column="29"/></name><argument_list pos:line="187" pos:column="29">()<pos:position pos:line="187" pos:column="31"/></argument_list></call><operator pos:line="187" pos:column="31">-&gt;<pos:position pos:line="187" pos:column="36"/></operator><name pos:line="187" pos:column="33">swap_dirn<pos:position pos:line="187" pos:column="42"/></name> <operator pos:line="187" pos:column="43">=<pos:position pos:line="187" pos:column="44"/></operator> <operator pos:line="187" pos:column="45">-<pos:position pos:line="187" pos:column="46"/></operator><literal type="number" pos:line="187" pos:column="46">1<pos:position pos:line="187" pos:column="47"/></literal></expr>;<pos:position pos:line="187" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="188" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="190" pos:column="13">currentEntry<pos:position pos:line="190" pos:column="25"/></name><argument_list pos:line="190" pos:column="25">()<pos:position pos:line="190" pos:column="27"/></argument_list></call><operator pos:line="190" pos:column="27">-&gt;<pos:position pos:line="190" pos:column="32"/></operator><call><name pos:line="190" pos:column="29">release<pos:position pos:line="190" pos:column="36"/></name><argument_list pos:line="190" pos:column="36">()<pos:position pos:line="190" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="191" pos:column="13">counts<pos:position pos:line="191" pos:column="19"/></name><operator pos:line="191" pos:column="19">.<pos:position pos:line="191" pos:column="20"/></operator><name pos:line="191" pos:column="20">dupcount<pos:position pos:line="191" pos:column="28"/></name></name><operator pos:line="191" pos:column="28">++<pos:position pos:line="191" pos:column="30"/></operator></expr>;<pos:position pos:line="191" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="192" pos:column="10"/></block></then></if></elseif> <else pos:line="192" pos:column="11">else <block pos:line="192" pos:column="16">{
            <comment type="block" pos:line="193" pos:column="13">/* URL doesnt exist, swapfile not in use */</comment>
            <comment type="block" pos:line="194" pos:column="13">/* load new */</comment>
            <expr_stmt><expr><operator pos:line="195" pos:column="13">(<pos:position pos:line="195" pos:column="14"/></operator><name pos:line="195" pos:column="14">void<pos:position pos:line="195" pos:column="18"/></name><operator pos:line="195" pos:column="18">)<pos:position pos:line="195" pos:column="19"/></operator> <literal type="number" pos:line="195" pos:column="20">0<pos:position pos:line="195" pos:column="21"/></literal></expr>;<pos:position pos:line="195" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="196" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="198" pos:column="9">/* update store_swap_size */</comment>
        <expr_stmt><expr><name><name pos:line="199" pos:column="9">counts<pos:position pos:line="199" pos:column="15"/></name><operator pos:line="199" pos:column="15">.<pos:position pos:line="199" pos:column="16"/></operator><name pos:line="199" pos:column="16">objcount<pos:position pos:line="199" pos:column="24"/></name></name><operator pos:line="199" pos:column="24">++<pos:position pos:line="199" pos:column="26"/></operator></expr>;<pos:position pos:line="199" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="201" pos:column="9">currentEntry<pos:position pos:line="201" pos:column="21"/></name><argument_list pos:line="201" pos:column="21">(<argument><expr><call><name><name pos:line="201" pos:column="22">sd<pos:position pos:line="201" pos:column="24"/></name><operator pos:line="201" pos:column="24">-&gt;<pos:position pos:line="201" pos:column="29"/></operator><name pos:line="201" pos:column="26">addDiskRestore<pos:position pos:line="201" pos:column="40"/></name></name><argument_list pos:line="201" pos:column="40">(<argument><expr><name><name pos:line="201" pos:column="41">swapData<pos:position pos:line="201" pos:column="49"/></name><operator pos:line="201" pos:column="49">.<pos:position pos:line="201" pos:column="50"/></operator><name pos:line="201" pos:column="50">key<pos:position pos:line="201" pos:column="53"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="202" pos:column="41">swapData<pos:position pos:line="202" pos:column="49"/></name><operator pos:line="202" pos:column="49">.<pos:position pos:line="202" pos:column="50"/></operator><name pos:line="202" pos:column="50">swap_filen<pos:position pos:line="202" pos:column="60"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="203" pos:column="41">swapData<pos:position pos:line="203" pos:column="49"/></name><operator pos:line="203" pos:column="49">.<pos:position pos:line="203" pos:column="50"/></operator><name pos:line="203" pos:column="50">swap_file_sz<pos:position pos:line="203" pos:column="62"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="204" pos:column="41">swapData<pos:position pos:line="204" pos:column="49"/></name><operator pos:line="204" pos:column="49">.<pos:position pos:line="204" pos:column="50"/></operator><name pos:line="204" pos:column="50">expires<pos:position pos:line="204" pos:column="57"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="205" pos:column="41">swapData<pos:position pos:line="205" pos:column="49"/></name><operator pos:line="205" pos:column="49">.<pos:position pos:line="205" pos:column="50"/></operator><name pos:line="205" pos:column="50">timestamp<pos:position pos:line="205" pos:column="59"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="206" pos:column="41">swapData<pos:position pos:line="206" pos:column="49"/></name><operator pos:line="206" pos:column="49">.<pos:position pos:line="206" pos:column="50"/></operator><name pos:line="206" pos:column="50">lastref<pos:position pos:line="206" pos:column="57"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="207" pos:column="41">swapData<pos:position pos:line="207" pos:column="49"/></name><operator pos:line="207" pos:column="49">.<pos:position pos:line="207" pos:column="50"/></operator><name pos:line="207" pos:column="50">lastmod<pos:position pos:line="207" pos:column="57"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="208" pos:column="41">swapData<pos:position pos:line="208" pos:column="49"/></name><operator pos:line="208" pos:column="49">.<pos:position pos:line="208" pos:column="50"/></operator><name pos:line="208" pos:column="50">refcount<pos:position pos:line="208" pos:column="58"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="209" pos:column="41">swapData<pos:position pos:line="209" pos:column="49"/></name><operator pos:line="209" pos:column="49">.<pos:position pos:line="209" pos:column="50"/></operator><name pos:line="209" pos:column="50">flags<pos:position pos:line="209" pos:column="55"/></name></name></expr></argument>,
                                        <argument><expr><operator pos:line="210" pos:column="41">(<pos:position pos:line="210" pos:column="42"/></operator><name pos:line="210" pos:column="42">int<pos:position pos:line="210" pos:column="45"/></name><operator pos:line="210" pos:column="45">)<pos:position pos:line="210" pos:column="46"/></operator> <name><name pos:line="210" pos:column="47">flags<pos:position pos:line="210" pos:column="52"/></name><operator pos:line="210" pos:column="52">.<pos:position pos:line="210" pos:column="53"/></operator><name pos:line="210" pos:column="53">clean<pos:position pos:line="210" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="210" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="210" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="212" pos:column="9">storeDirSwapLog<pos:position pos:line="212" pos:column="24"/></name><argument_list pos:line="212" pos:column="24">(<argument><expr><call><name pos:line="212" pos:column="25">currentEntry<pos:position pos:line="212" pos:column="37"/></name><argument_list pos:line="212" pos:column="37">()<pos:position pos:line="212" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="212" pos:column="41">SWAP_LOG_ADD<pos:position pos:line="212" pos:column="53"/></name></expr></argument>)<pos:position pos:line="212" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="213" pos:column="6"/></block></for>

}<pos:position pos:line="215" pos:column="2"/></block></function></unit>

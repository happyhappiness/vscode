<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6236_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TypedMsgHdr<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">prepForReading<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">memset<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">this<pos:position pos:line="4" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="21">sizeof<argument_list pos:line="4" pos:column="27">(<argument><expr><operator pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">this<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">allocName<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">()<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">allocData<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">()<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">allocControl<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">()<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

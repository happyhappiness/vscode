<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_599_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">commSetCloseOnExec<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">FD_CLOEXEC<pos:position pos:line="4" pos:column="18"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">flags<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">dummy<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">flags<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">fcntl<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">fd<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="28">F_GETFD<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">dummy<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="45">&lt;<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">xerrno<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">errno<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">50<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_CRITICAL<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">MYNAME<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">&lt;&lt;<pos:position pos:line="10" pos:column="49"/></operator> <literal type="string" pos:line="10" pos:column="44">"FD "<pos:position pos:line="10" pos:column="49"/></literal> <operator pos:line="10" pos:column="50">&lt;&lt;<pos:position pos:line="10" pos:column="58"/></operator> <name pos:line="10" pos:column="53">fd<pos:position pos:line="10" pos:column="55"/></name> <operator pos:line="10" pos:column="56">&lt;&lt;<pos:position pos:line="10" pos:column="64"/></operator> <literal type="string" pos:line="10" pos:column="59">": fcntl F_GETFD: "<pos:position pos:line="10" pos:column="78"/></literal> <operator pos:line="10" pos:column="79">&lt;&lt;<pos:position pos:line="10" pos:column="87"/></operator> <call><name pos:line="10" pos:column="82">xstrerr<pos:position pos:line="10" pos:column="89"/></name><argument_list pos:line="10" pos:column="89">(<argument><expr><name pos:line="10" pos:column="90">xerrno<pos:position pos:line="10" pos:column="96"/></name></expr></argument>)<pos:position pos:line="10" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="99"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">fcntl<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">fd<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">F_SETFD<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">flags<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">|<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="36">FD_CLOEXEC<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call> <operator pos:line="14" pos:column="48">&lt;<pos:position pos:line="14" pos:column="52"/></operator> <literal type="number" pos:line="14" pos:column="50">0<pos:position pos:line="14" pos:column="51"/></literal></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52"> <block pos:line="14" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">xerrno<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><name pos:line="15" pos:column="22">errno<pos:position pos:line="15" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">50<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_CRITICAL<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">MYNAME<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">&lt;&lt;<pos:position pos:line="16" pos:column="49"/></operator> <literal type="string" pos:line="16" pos:column="44">"FD "<pos:position pos:line="16" pos:column="49"/></literal> <operator pos:line="16" pos:column="50">&lt;&lt;<pos:position pos:line="16" pos:column="58"/></operator> <name pos:line="16" pos:column="53">fd<pos:position pos:line="16" pos:column="55"/></name> <operator pos:line="16" pos:column="56">&lt;&lt;<pos:position pos:line="16" pos:column="64"/></operator> <literal type="string" pos:line="16" pos:column="59">": set close-on-exec failed: "<pos:position pos:line="16" pos:column="89"/></literal> <operator pos:line="16" pos:column="90">&lt;&lt;<pos:position pos:line="16" pos:column="98"/></operator> <call><name pos:line="16" pos:column="93">xstrerr<pos:position pos:line="16" pos:column="100"/></name><argument_list pos:line="16" pos:column="100">(<argument><expr><name pos:line="16" pos:column="101">xerrno<pos:position pos:line="16" pos:column="107"/></name></expr></argument>)<pos:position pos:line="16" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="110"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">fd_table<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><name pos:line="19" pos:column="14">fd<pos:position pos:line="19" pos:column="16"/></name></expr>]<pos:position pos:line="19" pos:column="17"/></index></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="18">flags<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">close_on_exec<pos:position pos:line="19" pos:column="37"/></name></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <literal type="boolean" pos:line="19" pos:column="40">true<pos:position pos:line="19" pos:column="44"/></literal></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>

<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

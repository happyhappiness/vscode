<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4075_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">shouldAllow206any<pos:position pos:line="1" pos:column="50"/></name></name><parameter_list pos:line="1" pos:column="50">()<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <return pos:line="3" pos:column="5">return <expr><name><name pos:line="3" pos:column="12">TheConfig<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">.<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">allow206_enable<pos:position pos:line="3" pos:column="37"/></name></name> <operator pos:line="3" pos:column="38">&amp;&amp;<pos:position pos:line="3" pos:column="48"/></operator> <call><name pos:line="3" pos:column="41">service<pos:position pos:line="3" pos:column="48"/></name><argument_list pos:line="3" pos:column="48">()<pos:position pos:line="3" pos:column="50"/></argument_list></call><operator pos:line="3" pos:column="50">.<pos:position pos:line="3" pos:column="51"/></operator><call><name pos:line="3" pos:column="51">allows206<pos:position pos:line="3" pos:column="60"/></name><argument_list pos:line="3" pos:column="60">()<pos:position pos:line="3" pos:column="62"/></argument_list></call> <operator pos:line="3" pos:column="63">&amp;&amp;<pos:position pos:line="3" pos:column="73"/></operator>
           <call><name><name pos:line="4" pos:column="12">virginBody<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">expected<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></return> <comment type="line" pos:line="4" pos:column="35">// no need for 206 without a body</comment>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

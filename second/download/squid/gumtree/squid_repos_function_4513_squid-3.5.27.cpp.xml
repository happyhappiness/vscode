<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4513_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeerConnector<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">initializeSsl<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SSL_CTX<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">sslContext<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">CachePeer<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">peer<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">serverConnection<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">()<pos:position pos:line="5" pos:column="47"/></argument_list></call><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><call><name pos:line="5" pos:column="49">getPeer<pos:position pos:line="5" pos:column="56"/></name><argument_list pos:line="5" pos:column="56">()<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">int<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">fd<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><call><name pos:line="6" pos:column="20">serverConnection<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">fd<pos:position pos:line="6" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">peer<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14"> <block pos:line="8" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name><name pos:line="9" pos:column="16">peer<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">use_ssl<pos:position pos:line="9" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">sslContext<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="22">peer<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">sslContext<pos:position pos:line="10" pos:column="38"/></name></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else <block pos:line="11" pos:column="12">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">sslContext<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name><operator pos:line="12" pos:column="22">::<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">Config<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">ssl_client<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">sslContext<pos:position pos:line="12" pos:column="52"/></name></name></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">sslContext<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">SSL<pos:position pos:line="17" pos:column="8"/></name> <modifier pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></modifier></type><name pos:line="17" pos:column="10">ssl<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><call><name><name pos:line="17" pos:column="16">Ssl<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">::<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">CreateClient<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">sslContext<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">fd<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="50">"server https start"<pos:position pos:line="17" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="72"/></decl_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">ssl<pos:position pos:line="18" pos:column="13"/></name></expr>)<pos:position pos:line="18" pos:column="14"/></condition><then pos:line="18" pos:column="14"> <block pos:line="18" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">ErrorState<pos:position pos:line="19" pos:column="19"/></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">anErr<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><operator pos:line="19" pos:column="29">new<pos:position pos:line="19" pos:column="32"/></operator> <call><name pos:line="19" pos:column="33">ErrorState<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">ERR_SOCKET_FAILURE<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="64">Http<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">::<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="70">scInternalServerError<pos:position pos:line="19" pos:column="91"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="93">request<pos:position pos:line="19" pos:column="100"/></name><operator pos:line="19" pos:column="100">.<pos:position pos:line="19" pos:column="101"/></operator><name pos:line="19" pos:column="101">getRaw<pos:position pos:line="19" pos:column="107"/></name></name><argument_list pos:line="19" pos:column="107">()<pos:position pos:line="19" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="110"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="111"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">anErr<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">xerrno<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">errno<pos:position pos:line="20" pos:column="30"/></name></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">83<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="20">DBG_IMPORTANT<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"Error allocating SSL handle: "<pos:position pos:line="21" pos:column="66"/></literal> <operator pos:line="21" pos:column="67">&lt;&lt;<pos:position pos:line="21" pos:column="75"/></operator> <call><name pos:line="21" pos:column="70">ERR_error_string<pos:position pos:line="21" pos:column="86"/></name><argument_list pos:line="21" pos:column="86">(<argument><expr><call><name pos:line="21" pos:column="87">ERR_get_error<pos:position pos:line="21" pos:column="100"/></name><argument_list pos:line="21" pos:column="100">()<pos:position pos:line="21" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="104">NULL<pos:position pos:line="21" pos:column="108"/></name></expr></argument>)<pos:position pos:line="21" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="111"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">bail<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">anErr<pos:position pos:line="22" pos:column="19"/></name></expr></argument>)<pos:position pos:line="22" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">peer<pos:position pos:line="26" pos:column="13"/></name></expr>)<pos:position pos:line="26" pos:column="14"/></condition><then pos:line="26" pos:column="14"> <block pos:line="26" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">SBuf<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type><name pos:line="27" pos:column="15">host<pos:position pos:line="27" pos:column="19"/></name> <init pos:line="27" pos:column="20">= <expr><operator pos:line="27" pos:column="22">new<pos:position pos:line="27" pos:column="25"/></operator> <call><name pos:line="27" pos:column="26">SBuf<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><ternary><condition><expr><name><name pos:line="27" pos:column="31">peer<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">ssldomain<pos:position pos:line="27" pos:column="46"/></name></name></expr> ?<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48"> <expr><name><name pos:line="27" pos:column="49">peer<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">ssldomain<pos:position pos:line="27" pos:column="64"/></name></name></expr> <pos:position pos:line="27" pos:column="65"/></then><else pos:line="27" pos:column="65">: <expr><name><name pos:line="27" pos:column="67">peer<pos:position pos:line="27" pos:column="71"/></name><operator pos:line="27" pos:column="71">-&gt;<pos:position pos:line="27" pos:column="76"/></operator><name pos:line="27" pos:column="73">host<pos:position pos:line="27" pos:column="77"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="79"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">SSL_set_ex_data<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">ssl<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">ssl_ex_index_server<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">host<pos:position pos:line="28" pos:column="55"/></name></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">peer<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">sslSession<pos:position pos:line="30" pos:column="29"/></name></name></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">SSL_set_session<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">ssl<pos:position pos:line="31" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="34">peer<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">sslSession<pos:position pos:line="31" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<decl><type><name pos:line="32" pos:column="16">ConnStateData<pos:position pos:line="32" pos:column="29"/></name> <modifier pos:line="32" pos:column="30">*<pos:position pos:line="32" pos:column="31"/></modifier></type><name pos:line="32" pos:column="31">csd<pos:position pos:line="32" pos:column="34"/></name> <init pos:line="32" pos:column="35">= <expr><call><name><name pos:line="32" pos:column="37">request<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">clientConnectionManager<pos:position pos:line="32" pos:column="69"/></name><operator pos:line="32" pos:column="69">.<pos:position pos:line="32" pos:column="70"/></operator><name pos:line="32" pos:column="70">valid<pos:position pos:line="32" pos:column="75"/></name></name><argument_list pos:line="32" pos:column="75">()<pos:position pos:line="32" pos:column="77"/></argument_list></call></expr></init></decl>)<pos:position pos:line="32" pos:column="78"/></condition><then pos:line="32" pos:column="78"> <block pos:line="32" pos:column="79">{
        <comment type="line" pos:line="33" pos:column="9">// client connection is required in the case we need to splice</comment>
        <comment type="line" pos:line="34" pos:column="9">// or terminate client and server connections</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">assert<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">clientConn<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">!=<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">NULL<pos:position pos:line="35" pos:column="34"/></name></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">SBuf<pos:position pos:line="36" pos:column="13"/></name> <modifier pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></modifier></type><name pos:line="36" pos:column="15">hostName<pos:position pos:line="36" pos:column="23"/></name> <init pos:line="36" pos:column="24">= <expr><name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="37" pos:column="9">Ssl<pos:position pos:line="37" pos:column="12"/></name><operator pos:line="37" pos:column="12">::<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">ClientBio<pos:position pos:line="37" pos:column="23"/></name></name> <modifier pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></modifier></type><name pos:line="37" pos:column="25">cltBio<pos:position pos:line="37" pos:column="31"/></name> <init pos:line="37" pos:column="32">= <expr><name pos:line="37" pos:column="34">NULL<pos:position pos:line="37" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="39"/></decl_stmt>

        <comment type="line" pos:line="39" pos:column="9">//Enable Status_request tls extension, required to bump some clients</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">SSL_set_tlsext_status_type<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">ssl<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">TLSEXT_STATUSTYPE_ocsp<pos:position pos:line="40" pos:column="63"/></name></expr></argument>)<pos:position pos:line="40" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="65"/></expr_stmt>

        <comment type="line" pos:line="42" pos:column="9">// In server-first bumping mode, clientSsl is NULL.</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<decl><type><name pos:line="43" pos:column="13">SSL<pos:position pos:line="43" pos:column="16"/></name> <modifier pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></modifier></type><name pos:line="43" pos:column="18">clientSsl<pos:position pos:line="43" pos:column="27"/></name> <init pos:line="43" pos:column="28">= <expr><name><name pos:line="43" pos:column="30">fd_table<pos:position pos:line="43" pos:column="38"/></name><index pos:line="43" pos:column="38">[<expr><name><name pos:line="43" pos:column="39">clientConn<pos:position pos:line="43" pos:column="49"/></name><operator pos:line="43" pos:column="49">-&gt;<pos:position pos:line="43" pos:column="54"/></operator><name pos:line="43" pos:column="51">fd<pos:position pos:line="43" pos:column="53"/></name></name></expr>]<pos:position pos:line="43" pos:column="54"/></index></name><operator pos:line="43" pos:column="54">.<pos:position pos:line="43" pos:column="55"/></operator><name pos:line="43" pos:column="55">ssl<pos:position pos:line="43" pos:column="58"/></name></expr></init></decl>)<pos:position pos:line="43" pos:column="59"/></condition><then pos:line="43" pos:column="59"> <block pos:line="43" pos:column="60">{
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">BIO<pos:position pos:line="44" pos:column="16"/></name> <modifier pos:line="44" pos:column="17">*<pos:position pos:line="44" pos:column="18"/></modifier></type><name pos:line="44" pos:column="18">b<pos:position pos:line="44" pos:column="19"/></name> <init pos:line="44" pos:column="20">= <expr><call><name pos:line="44" pos:column="22">SSL_get_rbio<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">clientSsl<pos:position pos:line="44" pos:column="44"/></name></expr></argument>)<pos:position pos:line="44" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="46"/></decl_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">cltBio<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <cast type="static" pos:line="45" pos:column="22">static_cast<argument_list type="generic" pos:line="45" pos:column="33">&lt;<argument><expr><name><name pos:line="45" pos:column="34">Ssl<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">::<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">ClientBio<pos:position pos:line="45" pos:column="48"/></name></name> <operator pos:line="45" pos:column="49">*<pos:position pos:line="45" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="45" pos:column="54"/></argument_list><argument_list pos:line="45" pos:column="51">(<argument><expr><name><name pos:line="45" pos:column="52">b<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">ptr<pos:position pos:line="45" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></cast></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="46" pos:column="13">const<pos:position pos:line="46" pos:column="18"/></specifier> <name><name pos:line="46" pos:column="19">Ssl<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">::<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">Bio<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">::<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">sslFeatures<pos:position pos:line="46" pos:column="40"/></name></name> <modifier pos:line="46" pos:column="41">&amp;<pos:position pos:line="46" pos:column="46"/></modifier></type><name pos:line="46" pos:column="42">features<pos:position pos:line="46" pos:column="50"/></name> <init pos:line="46" pos:column="51">= <expr><call><name><name pos:line="46" pos:column="53">cltBio<pos:position pos:line="46" pos:column="59"/></name><operator pos:line="46" pos:column="59">-&gt;<pos:position pos:line="46" pos:column="64"/></operator><name pos:line="46" pos:column="61">getFeatures<pos:position pos:line="46" pos:column="72"/></name></name><argument_list pos:line="46" pos:column="72">()<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="75"/></decl_stmt>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><call><name><name pos:line="47" pos:column="18">features<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">.<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">serverName<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">.<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">isEmpty<pos:position pos:line="47" pos:column="45"/></name></name><argument_list pos:line="47" pos:column="45">()<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="48"/></condition><then pos:line="47" pos:column="48">
                <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="17">hostName<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <operator pos:line="48" pos:column="28">new<pos:position pos:line="48" pos:column="31"/></operator> <call><name pos:line="48" pos:column="32">SBuf<pos:position pos:line="48" pos:column="36"/></name><argument_list pos:line="48" pos:column="36">(<argument><expr><name><name pos:line="48" pos:column="37">features<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">.<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">serverName<pos:position pos:line="48" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="58"/></expr_stmt></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">hostName<pos:position pos:line="51" pos:column="22"/></name></expr>)<pos:position pos:line="51" pos:column="23"/></condition><then pos:line="51" pos:column="23"> <block pos:line="51" pos:column="24">{
            <comment type="line" pos:line="52" pos:column="13">// While we are peeking at the certificate, we may not know the server</comment>
            <comment type="line" pos:line="53" pos:column="13">// name that the client will request (after interception or CONNECT)</comment>
            <comment type="line" pos:line="54" pos:column="13">// unless it was the CONNECT request with a user-typed address.</comment>
            <decl_stmt><decl><type><specifier pos:line="55" pos:column="13">const<pos:position pos:line="55" pos:column="18"/></specifier> <name pos:line="55" pos:column="19">bool<pos:position pos:line="55" pos:column="23"/></name></type> <name pos:line="55" pos:column="24">isConnectRequest<pos:position pos:line="55" pos:column="40"/></name> <init pos:line="55" pos:column="41">= <expr><operator pos:line="55" pos:column="43">!<pos:position pos:line="55" pos:column="44"/></operator><call><name><name pos:line="55" pos:column="44">csd<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">-&gt;<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="49">port<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">-&gt;<pos:position pos:line="55" pos:column="58"/></operator><name pos:line="55" pos:column="55">flags<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">.<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">isIntercepted<pos:position pos:line="55" pos:column="74"/></name></name><argument_list pos:line="55" pos:column="74">()<pos:position pos:line="55" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="77"/></decl_stmt>
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><operator pos:line="56" pos:column="17">!<pos:position pos:line="56" pos:column="18"/></operator><name><name pos:line="56" pos:column="18">request<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">flags<pos:position pos:line="56" pos:column="32"/></name><operator pos:line="56" pos:column="32">.<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">sslPeek<pos:position pos:line="56" pos:column="40"/></name></name> <operator pos:line="56" pos:column="41">||<pos:position pos:line="56" pos:column="43"/></operator> <name pos:line="56" pos:column="44">isConnectRequest<pos:position pos:line="56" pos:column="60"/></name></expr>)<pos:position pos:line="56" pos:column="61"/></condition><then pos:line="56" pos:column="61">
                <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="17">hostName<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">=<pos:position pos:line="57" pos:column="27"/></operator> <operator pos:line="57" pos:column="28">new<pos:position pos:line="57" pos:column="31"/></operator> <call><name pos:line="57" pos:column="32">SBuf<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><call><name><name pos:line="57" pos:column="37">request<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">-&gt;<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="46">GetHost<pos:position pos:line="57" pos:column="53"/></name></name><argument_list pos:line="57" pos:column="53">()<pos:position pos:line="57" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="57"/></expr_stmt></block></then></if>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">hostName<pos:position pos:line="60" pos:column="21"/></name></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="13">SSL_set_ex_data<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">ssl<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">ssl_ex_index_server<pos:position pos:line="61" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="55">(<pos:position pos:line="61" pos:column="56"/></operator><name pos:line="61" pos:column="56">void<pos:position pos:line="61" pos:column="60"/></name><operator pos:line="61" pos:column="60">*<pos:position pos:line="61" pos:column="61"/></operator><operator pos:line="61" pos:column="61">)<pos:position pos:line="61" pos:column="62"/></operator><name pos:line="61" pos:column="62">hostName<pos:position pos:line="61" pos:column="70"/></name></expr></argument>)<pos:position pos:line="61" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="63" pos:column="9">Must<pos:position pos:line="63" pos:column="13"/></name><argument_list pos:line="63" pos:column="13">(<argument><expr><operator pos:line="63" pos:column="14">!<pos:position pos:line="63" pos:column="15"/></operator><call><name><name pos:line="63" pos:column="15">csd<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">-&gt;<pos:position pos:line="63" pos:column="23"/></operator><name pos:line="63" pos:column="20">serverBump<pos:position pos:line="63" pos:column="30"/></name></name><argument_list pos:line="63" pos:column="30">()<pos:position pos:line="63" pos:column="32"/></argument_list></call> <operator pos:line="63" pos:column="33">||<pos:position pos:line="63" pos:column="35"/></operator> <call><name><name pos:line="63" pos:column="36">csd<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">-&gt;<pos:position pos:line="63" pos:column="44"/></operator><name pos:line="63" pos:column="41">serverBump<pos:position pos:line="63" pos:column="51"/></name></name><argument_list pos:line="63" pos:column="51">()<pos:position pos:line="63" pos:column="53"/></argument_list></call><operator pos:line="63" pos:column="53">-&gt;<pos:position pos:line="63" pos:column="58"/></operator><name pos:line="63" pos:column="55">step<pos:position pos:line="63" pos:column="59"/></name> <operator pos:line="63" pos:column="60">&lt;=<pos:position pos:line="63" pos:column="65"/></operator> <name><name pos:line="63" pos:column="63">Ssl<pos:position pos:line="63" pos:column="66"/></name><operator pos:line="63" pos:column="66">::<pos:position pos:line="63" pos:column="68"/></operator><name pos:line="63" pos:column="68">bumpStep2<pos:position pos:line="63" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">csd<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">sslBumpMode<pos:position pos:line="64" pos:column="29"/></name></name> <operator pos:line="64" pos:column="30">==<pos:position pos:line="64" pos:column="32"/></operator> <name><name pos:line="64" pos:column="33">Ssl<pos:position pos:line="64" pos:column="36"/></name><operator pos:line="64" pos:column="36">::<pos:position pos:line="64" pos:column="38"/></operator><name pos:line="64" pos:column="38">bumpPeek<pos:position pos:line="64" pos:column="46"/></name></name> <operator pos:line="64" pos:column="47">||<pos:position pos:line="64" pos:column="49"/></operator> <name><name pos:line="64" pos:column="50">csd<pos:position pos:line="64" pos:column="53"/></name><operator pos:line="64" pos:column="53">-&gt;<pos:position pos:line="64" pos:column="58"/></operator><name pos:line="64" pos:column="55">sslBumpMode<pos:position pos:line="64" pos:column="66"/></name></name> <operator pos:line="64" pos:column="67">==<pos:position pos:line="64" pos:column="69"/></operator> <name><name pos:line="64" pos:column="70">Ssl<pos:position pos:line="64" pos:column="73"/></name><operator pos:line="64" pos:column="73">::<pos:position pos:line="64" pos:column="75"/></operator><name pos:line="64" pos:column="75">bumpStare<pos:position pos:line="64" pos:column="84"/></name></name></expr>)<pos:position pos:line="64" pos:column="85"/></condition><then pos:line="64" pos:column="85"> <block pos:line="64" pos:column="86">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">assert<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><name pos:line="65" pos:column="20">cltBio<pos:position pos:line="65" pos:column="26"/></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="66" pos:column="13">const<pos:position pos:line="66" pos:column="18"/></specifier> <name><name pos:line="66" pos:column="19">Ssl<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">::<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">Bio<pos:position pos:line="66" pos:column="27"/></name><operator pos:line="66" pos:column="27">::<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">sslFeatures<pos:position pos:line="66" pos:column="40"/></name></name> <modifier pos:line="66" pos:column="41">&amp;<pos:position pos:line="66" pos:column="46"/></modifier></type><name pos:line="66" pos:column="42">features<pos:position pos:line="66" pos:column="50"/></name> <init pos:line="66" pos:column="51">= <expr><call><name><name pos:line="66" pos:column="53">cltBio<pos:position pos:line="66" pos:column="59"/></name><operator pos:line="66" pos:column="59">-&gt;<pos:position pos:line="66" pos:column="64"/></operator><name pos:line="66" pos:column="61">getFeatures<pos:position pos:line="66" pos:column="72"/></name></name><argument_list pos:line="66" pos:column="72">()<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="75"/></decl_stmt>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><name><name pos:line="67" pos:column="17">features<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">.<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="26">sslVersion<pos:position pos:line="67" pos:column="36"/></name></name> <operator pos:line="67" pos:column="37">!=<pos:position pos:line="67" pos:column="39"/></operator> <operator pos:line="67" pos:column="40">-<pos:position pos:line="67" pos:column="41"/></operator><literal type="number" pos:line="67" pos:column="41">1<pos:position pos:line="67" pos:column="42"/></literal></expr>)<pos:position pos:line="67" pos:column="43"/></condition><then pos:line="67" pos:column="43">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="68" pos:column="17">features<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">.<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">applyToSSL<pos:position pos:line="68" pos:column="36"/></name></name><argument_list pos:line="68" pos:column="36">(<argument><expr><name pos:line="68" pos:column="37">ssl<pos:position pos:line="68" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="42">csd<pos:position pos:line="68" pos:column="45"/></name><operator pos:line="68" pos:column="45">-&gt;<pos:position pos:line="68" pos:column="50"/></operator><name pos:line="68" pos:column="47">sslBumpMode<pos:position pos:line="68" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="60"/></expr_stmt></block></then></if>

            <decl_stmt><decl><type><name pos:line="70" pos:column="13">BIO<pos:position pos:line="70" pos:column="16"/></name> <modifier pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></modifier></type><name pos:line="70" pos:column="18">b<pos:position pos:line="70" pos:column="19"/></name> <init pos:line="70" pos:column="20">= <expr><call><name pos:line="70" pos:column="22">SSL_get_rbio<pos:position pos:line="70" pos:column="34"/></name><argument_list pos:line="70" pos:column="34">(<argument><expr><name pos:line="70" pos:column="35">ssl<pos:position pos:line="70" pos:column="38"/></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="70" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="71" pos:column="13">Ssl<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">::<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">ServerBio<pos:position pos:line="71" pos:column="27"/></name></name> <modifier pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></modifier></type><name pos:line="71" pos:column="29">srvBio<pos:position pos:line="71" pos:column="35"/></name> <init pos:line="71" pos:column="36">= <expr><cast type="static" pos:line="71" pos:column="38">static_cast<argument_list type="generic" pos:line="71" pos:column="49">&lt;<argument><expr><name><name pos:line="71" pos:column="50">Ssl<pos:position pos:line="71" pos:column="53"/></name><operator pos:line="71" pos:column="53">::<pos:position pos:line="71" pos:column="55"/></operator><name pos:line="71" pos:column="55">ServerBio<pos:position pos:line="71" pos:column="64"/></name></name> <operator pos:line="71" pos:column="65">*<pos:position pos:line="71" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="71" pos:column="70"/></argument_list><argument_list pos:line="71" pos:column="67">(<argument><expr><name><name pos:line="71" pos:column="68">b<pos:position pos:line="71" pos:column="69"/></name><operator pos:line="71" pos:column="69">-&gt;<pos:position pos:line="71" pos:column="74"/></operator><name pos:line="71" pos:column="71">ptr<pos:position pos:line="71" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="71" pos:column="76"/></decl_stmt>
            <comment type="line" pos:line="72" pos:column="13">// Inherite client features, like SSL version, SNI and other</comment>
            <expr_stmt><expr><call><name><name pos:line="73" pos:column="13">srvBio<pos:position pos:line="73" pos:column="19"/></name><operator pos:line="73" pos:column="19">-&gt;<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="21">setClientFeatures<pos:position pos:line="73" pos:column="38"/></name></name><argument_list pos:line="73" pos:column="38">(<argument><expr><name pos:line="73" pos:column="39">features<pos:position pos:line="73" pos:column="47"/></name></expr></argument>)<pos:position pos:line="73" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="74" pos:column="13">srvBio<pos:position pos:line="74" pos:column="19"/></name><operator pos:line="74" pos:column="19">-&gt;<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="21">recordInput<pos:position pos:line="74" pos:column="32"/></name></name><argument_list pos:line="74" pos:column="32">(<argument><expr><literal type="boolean" pos:line="74" pos:column="33">true<pos:position pos:line="74" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="75" pos:column="13">srvBio<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">-&gt;<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="21">mode<pos:position pos:line="75" pos:column="25"/></name></name><argument_list pos:line="75" pos:column="25">(<argument><expr><name><name pos:line="75" pos:column="26">csd<pos:position pos:line="75" pos:column="29"/></name><operator pos:line="75" pos:column="29">-&gt;<pos:position pos:line="75" pos:column="34"/></operator><name pos:line="75" pos:column="31">sslBumpMode<pos:position pos:line="75" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="76" pos:column="10"/></block></then> <else pos:line="76" pos:column="11">else <block pos:line="76" pos:column="16">{
            <comment type="line" pos:line="77" pos:column="13">// Set client SSL options</comment>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">SSL_set_options<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">ssl<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name><operator pos:line="78" pos:column="34">::<pos:position pos:line="78" pos:column="36"/></operator><name pos:line="78" pos:column="36">Config<pos:position pos:line="78" pos:column="42"/></name><operator pos:line="78" pos:column="42">.<pos:position pos:line="78" pos:column="43"/></operator><name pos:line="78" pos:column="43">ssl_client<pos:position pos:line="78" pos:column="53"/></name><operator pos:line="78" pos:column="53">.<pos:position pos:line="78" pos:column="54"/></operator><name pos:line="78" pos:column="54">parsedOptions<pos:position pos:line="78" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>

            <comment type="line" pos:line="80" pos:column="13">// Use SNI TLS extension only when we connect directly</comment>
            <comment type="line" pos:line="81" pos:column="13">// to the origin server and we know the server host name.</comment>
            <decl_stmt><decl><type><specifier pos:line="82" pos:column="13">const<pos:position pos:line="82" pos:column="18"/></specifier> <name pos:line="82" pos:column="19">char<pos:position pos:line="82" pos:column="23"/></name> <modifier pos:line="82" pos:column="24">*<pos:position pos:line="82" pos:column="25"/></modifier></type><name pos:line="82" pos:column="25">sniServer<pos:position pos:line="82" pos:column="34"/></name> <init pos:line="82" pos:column="35">= <expr><name pos:line="82" pos:column="37">NULL<pos:position pos:line="82" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="82" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="83" pos:column="13">const<pos:position pos:line="83" pos:column="18"/></specifier> <name pos:line="83" pos:column="19">bool<pos:position pos:line="83" pos:column="23"/></name></type> <name pos:line="83" pos:column="24">redirected<pos:position pos:line="83" pos:column="34"/></name> <init pos:line="83" pos:column="35">= <expr><name><name pos:line="83" pos:column="37">request<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">flags<pos:position pos:line="83" pos:column="51"/></name><operator pos:line="83" pos:column="51">.<pos:position pos:line="83" pos:column="52"/></operator><name pos:line="83" pos:column="52">redirected<pos:position pos:line="83" pos:column="62"/></name></name> <operator pos:line="83" pos:column="63">&amp;&amp;<pos:position pos:line="83" pos:column="73"/></operator> <name><operator pos:line="83" pos:column="66">::<pos:position pos:line="83" pos:column="68"/></operator><name pos:line="83" pos:column="68">Config<pos:position pos:line="83" pos:column="74"/></name><operator pos:line="83" pos:column="74">.<pos:position pos:line="83" pos:column="75"/></operator><name pos:line="83" pos:column="75">onoff<pos:position pos:line="83" pos:column="80"/></name><operator pos:line="83" pos:column="80">.<pos:position pos:line="83" pos:column="81"/></operator><name pos:line="83" pos:column="81">redir_rewrites_host<pos:position pos:line="83" pos:column="100"/></name></name></expr></init></decl>;<pos:position pos:line="83" pos:column="101"/></decl_stmt>
            <if pos:line="84" pos:column="13">if <condition pos:line="84" pos:column="16">(<expr><operator pos:line="84" pos:column="17">!<pos:position pos:line="84" pos:column="18"/></operator><name pos:line="84" pos:column="18">hostName<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">||<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">redirected<pos:position pos:line="84" pos:column="40"/></name></expr>)<pos:position pos:line="84" pos:column="41"/></condition><then pos:line="84" pos:column="41">
                <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="17">sniServer<pos:position pos:line="85" pos:column="26"/></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <ternary><condition><expr><operator pos:line="85" pos:column="29">!<pos:position pos:line="85" pos:column="30"/></operator><call><name><name pos:line="85" pos:column="30">request<pos:position pos:line="85" pos:column="37"/></name><operator pos:line="85" pos:column="37">-&gt;<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="39">GetHostIsNumeric<pos:position pos:line="85" pos:column="55"/></name></name><argument_list pos:line="85" pos:column="55">()<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr> ?<pos:position pos:line="85" pos:column="59"/></condition><then pos:line="85" pos:column="59"> <expr><call><name><name pos:line="85" pos:column="60">request<pos:position pos:line="85" pos:column="67"/></name><operator pos:line="85" pos:column="67">-&gt;<pos:position pos:line="85" pos:column="72"/></operator><name pos:line="85" pos:column="69">GetHost<pos:position pos:line="85" pos:column="76"/></name></name><argument_list pos:line="85" pos:column="76">()<pos:position pos:line="85" pos:column="78"/></argument_list></call></expr> <pos:position pos:line="85" pos:column="79"/></then><else pos:line="85" pos:column="79">: <expr><name pos:line="85" pos:column="81">NULL<pos:position pos:line="85" pos:column="85"/></name></expr></else></ternary></expr>;<pos:position pos:line="85" pos:column="86"/></expr_stmt></block></then>
            <else pos:line="86" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="17">sniServer<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <call><name><name pos:line="87" pos:column="29">hostName<pos:position pos:line="87" pos:column="37"/></name><operator pos:line="87" pos:column="37">-&gt;<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="39">c_str<pos:position pos:line="87" pos:column="44"/></name></name><argument_list pos:line="87" pos:column="44">()<pos:position pos:line="87" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="47"/></expr_stmt></block></else></if>

            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">sniServer<pos:position pos:line="89" pos:column="26"/></name></expr>)<pos:position pos:line="89" pos:column="27"/></condition><then pos:line="89" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="90" pos:column="17">Ssl<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">::<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="22">setClientSNI<pos:position pos:line="90" pos:column="34"/></name></name><argument_list pos:line="90" pos:column="34">(<argument><expr><name pos:line="90" pos:column="35">ssl<pos:position pos:line="90" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="40">sniServer<pos:position pos:line="90" pos:column="49"/></name></expr></argument>)<pos:position pos:line="90" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="51"/></expr_stmt></block></then></if>
        }<pos:position pos:line="91" pos:column="10"/></block></else></if>

        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<decl><type><name><name pos:line="93" pos:column="13">Ssl<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">::<pos:position pos:line="93" pos:column="18"/></operator><name pos:line="93" pos:column="18">ServerBump<pos:position pos:line="93" pos:column="28"/></name></name> <modifier pos:line="93" pos:column="29">*<pos:position pos:line="93" pos:column="30"/></modifier></type><name pos:line="93" pos:column="30">serverBump<pos:position pos:line="93" pos:column="40"/></name> <init pos:line="93" pos:column="41">= <expr><call><name><name pos:line="93" pos:column="43">csd<pos:position pos:line="93" pos:column="46"/></name><operator pos:line="93" pos:column="46">-&gt;<pos:position pos:line="93" pos:column="51"/></operator><name pos:line="93" pos:column="48">serverBump<pos:position pos:line="93" pos:column="58"/></name></name><argument_list pos:line="93" pos:column="58">()<pos:position pos:line="93" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="93" pos:column="61"/></condition><then pos:line="93" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="94" pos:column="13">serverBump<pos:position pos:line="94" pos:column="23"/></name><operator pos:line="94" pos:column="23">-&gt;<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="25">attachServerSSL<pos:position pos:line="94" pos:column="40"/></name></name><argument_list pos:line="94" pos:column="40">(<argument><expr><name pos:line="94" pos:column="41">ssl<pos:position pos:line="94" pos:column="44"/></name></expr></argument>)<pos:position pos:line="94" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="46"/></expr_stmt></block></then></if>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if></elseif></if>

    <comment type="line" pos:line="97" pos:column="5">// If CertValidation Helper used do not lookup checklist for errors,</comment>
    <comment type="line" pos:line="98" pos:column="5">// but keep a list of errors to send it to CertValidator</comment>
    <if pos:line="99" pos:column="5">if <condition pos:line="99" pos:column="8">(<expr><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><name><name pos:line="99" pos:column="10">Ssl<pos:position pos:line="99" pos:column="13"/></name><operator pos:line="99" pos:column="13">::<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="15">TheConfig<pos:position pos:line="99" pos:column="24"/></name><operator pos:line="99" pos:column="24">.<pos:position pos:line="99" pos:column="25"/></operator><name pos:line="99" pos:column="25">ssl_crt_validator<pos:position pos:line="99" pos:column="42"/></name></name></expr>)<pos:position pos:line="99" pos:column="43"/></condition><then pos:line="99" pos:column="43"> <block pos:line="99" pos:column="44">{
        <comment type="line" pos:line="100" pos:column="9">// Create the ACL check list now, while we have access to more info.</comment>
        <comment type="line" pos:line="101" pos:column="9">// The list is used in ssl_verify_cb() and is freed in ssl_free().</comment>
        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<decl><type><name pos:line="102" pos:column="13">acl_access<pos:position pos:line="102" pos:column="23"/></name> <modifier pos:line="102" pos:column="24">*<pos:position pos:line="102" pos:column="25"/></modifier></type><name pos:line="102" pos:column="25">acl<pos:position pos:line="102" pos:column="28"/></name> <init pos:line="102" pos:column="29">= <expr><name><operator pos:line="102" pos:column="31">::<pos:position pos:line="102" pos:column="33"/></operator><name pos:line="102" pos:column="33">Config<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">.<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="40">ssl_client<pos:position pos:line="102" pos:column="50"/></name><operator pos:line="102" pos:column="50">.<pos:position pos:line="102" pos:column="51"/></operator><name pos:line="102" pos:column="51">cert_error<pos:position pos:line="102" pos:column="61"/></name></name></expr></init></decl>)<pos:position pos:line="102" pos:column="62"/></condition><then pos:line="102" pos:column="62"> <block pos:line="102" pos:column="63">{
            <decl_stmt><decl><type><name pos:line="103" pos:column="13">ACLFilledChecklist<pos:position pos:line="103" pos:column="31"/></name> <modifier pos:line="103" pos:column="32">*<pos:position pos:line="103" pos:column="33"/></modifier></type><name pos:line="103" pos:column="33">check<pos:position pos:line="103" pos:column="38"/></name> <init pos:line="103" pos:column="39">= <expr><operator pos:line="103" pos:column="41">new<pos:position pos:line="103" pos:column="44"/></operator> <call><name pos:line="103" pos:column="45">ACLFilledChecklist<pos:position pos:line="103" pos:column="63"/></name><argument_list pos:line="103" pos:column="63">(<argument><expr><name pos:line="103" pos:column="64">acl<pos:position pos:line="103" pos:column="67"/></name></expr></argument>, <argument><expr><call><name><name pos:line="103" pos:column="69">request<pos:position pos:line="103" pos:column="76"/></name><operator pos:line="103" pos:column="76">.<pos:position pos:line="103" pos:column="77"/></operator><name pos:line="103" pos:column="77">getRaw<pos:position pos:line="103" pos:column="83"/></name></name><argument_list pos:line="103" pos:column="83">()<pos:position pos:line="103" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="103" pos:column="87">dash_str<pos:position pos:line="103" pos:column="95"/></name></expr></argument>)<pos:position pos:line="103" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="103" pos:column="97"/></decl_stmt>
            <comment type="line" pos:line="104" pos:column="13">// check-&gt;fd(fd); XXX: need client FD here</comment>
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">SSL_set_ex_data<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><name pos:line="105" pos:column="29">ssl<pos:position pos:line="105" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="34">ssl_ex_index_cert_error_check<pos:position pos:line="105" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="65">check<pos:position pos:line="105" pos:column="70"/></name></expr></argument>)<pos:position pos:line="105" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>
    }<pos:position pos:line="107" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="109" pos:column="5">// store peeked cert to check SQUID_X509_V_ERR_CERT_CHANGE</comment>
    <decl_stmt><decl><type><name pos:line="110" pos:column="5">X509<pos:position pos:line="110" pos:column="9"/></name> <modifier pos:line="110" pos:column="10">*<pos:position pos:line="110" pos:column="11"/></modifier></type><name pos:line="110" pos:column="11">peeked_cert<pos:position pos:line="110" pos:column="22"/></name></decl>;<pos:position pos:line="110" pos:column="23"/></decl_stmt>
    <if pos:line="111" pos:column="5">if <condition pos:line="111" pos:column="8">(<expr><call><name><name pos:line="111" pos:column="9">request<pos:position pos:line="111" pos:column="16"/></name><operator pos:line="111" pos:column="16">-&gt;<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="18">clientConnectionManager<pos:position pos:line="111" pos:column="41"/></name><operator pos:line="111" pos:column="41">.<pos:position pos:line="111" pos:column="42"/></operator><name pos:line="111" pos:column="42">valid<pos:position pos:line="111" pos:column="47"/></name></name><argument_list pos:line="111" pos:column="47">()<pos:position pos:line="111" pos:column="49"/></argument_list></call> <operator pos:line="111" pos:column="50">&amp;&amp;<pos:position pos:line="111" pos:column="60"/></operator>
            <call><name><name pos:line="112" pos:column="13">request<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">-&gt;<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="22">clientConnectionManager<pos:position pos:line="112" pos:column="45"/></name><operator pos:line="112" pos:column="45">-&gt;<pos:position pos:line="112" pos:column="50"/></operator><name pos:line="112" pos:column="47">serverBump<pos:position pos:line="112" pos:column="57"/></name></name><argument_list pos:line="112" pos:column="57">()<pos:position pos:line="112" pos:column="59"/></argument_list></call> <operator pos:line="112" pos:column="60">&amp;&amp;<pos:position pos:line="112" pos:column="70"/></operator>
            <operator pos:line="113" pos:column="13">(<pos:position pos:line="113" pos:column="14"/></operator><name pos:line="113" pos:column="14">peeked_cert<pos:position pos:line="113" pos:column="25"/></name> <operator pos:line="113" pos:column="26">=<pos:position pos:line="113" pos:column="27"/></operator> <call><name><name pos:line="113" pos:column="28">request<pos:position pos:line="113" pos:column="35"/></name><operator pos:line="113" pos:column="35">-&gt;<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="37">clientConnectionManager<pos:position pos:line="113" pos:column="60"/></name><operator pos:line="113" pos:column="60">-&gt;<pos:position pos:line="113" pos:column="65"/></operator><name pos:line="113" pos:column="62">serverBump<pos:position pos:line="113" pos:column="72"/></name></name><argument_list pos:line="113" pos:column="72">()<pos:position pos:line="113" pos:column="74"/></argument_list></call><operator pos:line="113" pos:column="74">-&gt;<pos:position pos:line="113" pos:column="79"/></operator><call><name><name pos:line="113" pos:column="76">serverCert<pos:position pos:line="113" pos:column="86"/></name><operator pos:line="113" pos:column="86">.<pos:position pos:line="113" pos:column="87"/></operator><name pos:line="113" pos:column="87">get<pos:position pos:line="113" pos:column="90"/></name></name><argument_list pos:line="113" pos:column="90">()<pos:position pos:line="113" pos:column="92"/></argument_list></call><operator pos:line="113" pos:column="92">)<pos:position pos:line="113" pos:column="93"/></operator></expr>)<pos:position pos:line="113" pos:column="94"/></condition><then pos:line="113" pos:column="94"> <block pos:line="113" pos:column="95">{
        <expr_stmt><expr><call><name pos:line="114" pos:column="9">CRYPTO_add<pos:position pos:line="114" pos:column="19"/></name><argument_list pos:line="114" pos:column="19">(<argument><expr><operator pos:line="114" pos:column="20">&amp;<pos:position pos:line="114" pos:column="25"/></operator><operator pos:line="114" pos:column="21">(<pos:position pos:line="114" pos:column="22"/></operator><name><name pos:line="114" pos:column="22">peeked_cert<pos:position pos:line="114" pos:column="33"/></name><operator pos:line="114" pos:column="33">-&gt;<pos:position pos:line="114" pos:column="38"/></operator><name pos:line="114" pos:column="35">references<pos:position pos:line="114" pos:column="45"/></name></name><operator pos:line="114" pos:column="45">)<pos:position pos:line="114" pos:column="46"/></operator></expr></argument>,<argument><expr><literal type="number" pos:line="114" pos:column="47">1<pos:position pos:line="114" pos:column="48"/></literal></expr></argument>,<argument><expr><name pos:line="114" pos:column="49">CRYPTO_LOCK_X509<pos:position pos:line="114" pos:column="65"/></name></expr></argument>)<pos:position pos:line="114" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">SSL_set_ex_data<pos:position pos:line="115" pos:column="24"/></name><argument_list pos:line="115" pos:column="24">(<argument><expr><name pos:line="115" pos:column="25">ssl<pos:position pos:line="115" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="30">ssl_ex_index_ssl_peeked_cert<pos:position pos:line="115" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="60">peeked_cert<pos:position pos:line="115" pos:column="71"/></name></expr></argument>)<pos:position pos:line="115" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

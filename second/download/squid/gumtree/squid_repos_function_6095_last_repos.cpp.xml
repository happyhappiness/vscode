<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6095_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">File<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">open<pos:position pos:line="2" pos:column="11"/></name></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">FileOpeningConfig<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">cfg<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="5" pos:column="5">fd_<pos:position pos:line="5" pos:column="8"/></name> <operator pos:line="5" pos:column="9">=<pos:position pos:line="5" pos:column="10"/></operator> <call><name pos:line="5" pos:column="11">CreateFile<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><call><name pos:line="5" pos:column="22">TEXT<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><call><name><name pos:line="5" pos:column="27">name_<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">c_str<pos:position pos:line="5" pos:column="38"/></name></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">desiredAccess<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="58">shareMode<pos:position pos:line="5" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="5" pos:column="69">nullptr<pos:position pos:line="5" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="78">creationDisposition<pos:position pos:line="5" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="99">FILE_ATTRIBUTE_NORMAL<pos:position pos:line="5" pos:column="120"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="5" pos:column="122">nullptr<pos:position pos:line="5" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="131"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">fd_<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">InvalidHandle<pos:position pos:line="6" pos:column="29"/></name></expr>)<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30"> <block pos:line="6" pos:column="31">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <specifier pos:line="7" pos:column="15">auto<pos:position pos:line="7" pos:column="19"/></specifier></type> <name pos:line="7" pos:column="20">savedError<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><call><name pos:line="7" pos:column="33">GetLastError<pos:position pos:line="7" pos:column="45"/></name><argument_list pos:line="7" pos:column="45">()<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
        <throw pos:line="8" pos:column="9">throw <expr><call><name pos:line="8" pos:column="15">TexcHere<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><call><name pos:line="8" pos:column="24">sysCallFailure<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><literal type="string" pos:line="8" pos:column="39">"CreateFile"<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="53">WindowsErrorMessage<pos:position pos:line="8" pos:column="72"/></name><argument_list pos:line="8" pos:column="72">(<argument><expr><name pos:line="8" pos:column="73">savedError<pos:position pos:line="8" pos:column="83"/></name></expr></argument>)<pos:position pos:line="8" pos:column="84"/></argument_list></call><operator pos:line="8" pos:column="84">.<pos:position pos:line="8" pos:column="85"/></operator><call><name pos:line="8" pos:column="85">c_str<pos:position pos:line="8" pos:column="90"/></name><argument_list pos:line="8" pos:column="90">()<pos:position pos:line="8" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="95"/></throw>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">mode_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">oldCreationMask<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><literal type="number" pos:line="11" pos:column="30">0<pos:position pos:line="11" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <specifier pos:line="12" pos:column="11">auto<pos:position pos:line="12" pos:column="15"/></specifier></type> <name pos:line="12" pos:column="16">filename<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><call><name><name pos:line="12" pos:column="27">name_<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">c_str<pos:position pos:line="12" pos:column="38"/></name></name><argument_list pos:line="12" pos:column="38">()<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt> <comment type="line" pos:line="12" pos:column="42">// avoid complex operations inside enter_suid()</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">enter_suid<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">()<pos:position pos:line="13" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">cfg<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">.<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">creationMask<pos:position pos:line="14" pos:column="25"/></name></name></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">oldCreationMask<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <call><name pos:line="15" pos:column="27">umask<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name><name pos:line="15" pos:column="33">cfg<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">.<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="37">creationMask<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt></block></then></if> <comment type="line" pos:line="15" pos:column="52">// XXX: Why here? Should not this be set for the whole Squid?</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">fd_<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">=<pos:position pos:line="16" pos:column="10"/></operator> <call><name><operator pos:line="16" pos:column="11">::<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">open<pos:position pos:line="16" pos:column="17"/></name></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">filename<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="28">cfg<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">openFlags<pos:position pos:line="16" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="43">cfg<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">openMode<pos:position pos:line="16" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <specifier pos:line="17" pos:column="11">auto<pos:position pos:line="17" pos:column="15"/></specifier></type> <name pos:line="17" pos:column="16">savedErrno<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><name pos:line="17" pos:column="29">errno<pos:position pos:line="17" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">cfg<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">creationMask<pos:position pos:line="18" pos:column="25"/></name></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">umask<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">oldCreationMask<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">leave_suid<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">()<pos:position pos:line="20" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">fd_<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">&lt;<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17">
        <block type="pseudo"><throw pos:line="22" pos:column="9">throw <expr><call><name pos:line="22" pos:column="15">TexcHere<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><call><name pos:line="22" pos:column="24">sysCallError<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><literal type="string" pos:line="22" pos:column="37">"open"<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">savedErrno<pos:position pos:line="22" pos:column="55"/></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></throw></block></then></if>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

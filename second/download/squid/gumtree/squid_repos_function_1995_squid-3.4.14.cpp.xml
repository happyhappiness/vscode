<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1995_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">BodyPipe<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">getMoreData<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">MemBuf<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">&amp;<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="31">aMemBuffer<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">theBuf<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">hasContent<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if> <comment type="line" pos:line="5" pos:column="19">// did not touch the possibly uninitialized buf</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">aMemBuffer<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">isNull<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">()<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">aMemBuffer<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">init<pos:position pos:line="8" pos:column="24"/></name></name><argument_list pos:line="8" pos:column="24">()<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt></block></then></if>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">size_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">size<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><call><name pos:line="9" pos:column="25">min<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><call><name><name pos:line="9" pos:column="29">theBuf<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">.<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">contentSize<pos:position pos:line="9" pos:column="47"/></name></name><argument_list pos:line="9" pos:column="47">()<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="51">aMemBuffer<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">.<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="62">potentialSpaceSize<pos:position pos:line="9" pos:column="80"/></name></name><argument_list pos:line="9" pos:column="80">()<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="84"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">aMemBuffer<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">append<pos:position pos:line="10" pos:column="22"/></name></name><argument_list pos:line="10" pos:column="22">(<argument><expr><call><name><name pos:line="10" pos:column="23">theBuf<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">content<pos:position pos:line="10" pos:column="37"/></name></name><argument_list pos:line="10" pos:column="37">()<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">size<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">theBuf<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">consume<pos:position pos:line="11" pos:column="19"/></name></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">size<pos:position pos:line="11" pos:column="24"/></name></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">postConsume<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">size<pos:position pos:line="12" pos:column="21"/></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">size<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return> <comment type="line" pos:line="13" pos:column="18">// cannot be zero if we called buf.init above</comment>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

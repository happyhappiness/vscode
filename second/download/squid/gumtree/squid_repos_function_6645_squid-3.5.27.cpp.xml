<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6645_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIVarState<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">Variable<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">eval<pos:position pos:line="2" pos:column="28"/></name></name> <parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">ESIVarState<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">state<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">subref<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">char<pos:position pos:line="2" pos:column="74"/></name> <specifier pos:line="2" pos:column="75">const<pos:position pos:line="2" pos:column="80"/></specifier> <modifier pos:line="2" pos:column="81">*<pos:position pos:line="2" pos:column="82"/></modifier></type><name pos:line="2" pos:column="82">found_default<pos:position pos:line="2" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="96"/></parameter_list> <specifier pos:line="2" pos:column="97">const<pos:position pos:line="2" pos:column="102"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* No-op. We swallow it */</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">found_default<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="9">ESISegment<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">::<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">ListAppend<pos:position pos:line="7" pos:column="31"/></name></name> <argument_list pos:line="7" pos:column="32">(<argument><expr><call><name><name pos:line="7" pos:column="33">state<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">getOutput<pos:position pos:line="7" pos:column="48"/></name></name><argument_list pos:line="7" pos:column="48">()<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="52">found_default<pos:position pos:line="7" pos:column="65"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="67">strlen<pos:position pos:line="7" pos:column="73"/></name> <argument_list pos:line="7" pos:column="74">(<argument><expr><name pos:line="7" pos:column="75">found_default<pos:position pos:line="7" pos:column="88"/></name></expr></argument>)<pos:position pos:line="7" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="91"/></expr_stmt></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

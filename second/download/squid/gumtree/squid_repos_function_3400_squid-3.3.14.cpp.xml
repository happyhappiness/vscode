<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3400_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">clientStream_status_t<pos:position pos:line="1" pos:column="22"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">replyStatus<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">done<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* Here because lower nodes don't need it */</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">http<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">storeEntry<pos:position pos:line="7" pos:column="25"/></name></name><argument_list pos:line="7" pos:column="25">()<pos:position pos:line="7" pos:column="27"/></argument_list></call> <operator pos:line="7" pos:column="28">==<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <block pos:line="7" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">88<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">5<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"clientReplyStatus: no storeEntry"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">STREAM_FAILED<pos:position pos:line="9" pos:column="29"/></name></expr>;<pos:position pos:line="9" pos:column="30"/></return>	<comment type="block" pos:line="9" pos:column="33">/* yuck, but what can we do? */</comment>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">EBIT_TEST<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><call><name><name pos:line="12" pos:column="19">http<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">storeEntry<pos:position pos:line="12" pos:column="35"/></name></name><argument_list pos:line="12" pos:column="35">()<pos:position pos:line="12" pos:column="37"/></argument_list></call><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">flags<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="46">ENTRY_ABORTED<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="61"/></condition><then pos:line="12" pos:column="61"> <block pos:line="12" pos:column="62">{
        <comment type="block" pos:line="13" pos:column="9">/* TODO: Could upstream read errors (result.flags.error) be
         * lost, and result in undersize requests being considered
         * complete. Should we tcp reset such connections ?
         */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">88<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">5<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"clientReplyStatus: aborted storeEntry"<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">STREAM_FAILED<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">done<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">checkTransferDone<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">()<pos:position pos:line="21" pos:column="36"/></argument_list></call><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="38">!=<pos:position pos:line="21" pos:column="40"/></operator> <literal type="number" pos:line="21" pos:column="41">0<pos:position pos:line="21" pos:column="42"/></literal> <operator pos:line="21" pos:column="43">||<pos:position pos:line="21" pos:column="45"/></operator> <name><name pos:line="21" pos:column="46">flags<pos:position pos:line="21" pos:column="51"/></name><operator pos:line="21" pos:column="51">.<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">complete<pos:position pos:line="21" pos:column="60"/></name></name></expr>)<pos:position pos:line="21" pos:column="61"/></condition><then pos:line="21" pos:column="61"> <block pos:line="21" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">88<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">5<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"clientReplyStatus: transfer is DONE"<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
        <comment type="block" pos:line="23" pos:column="9">/* Ok we're finished, but how? */</comment>

        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name pos:line="25" pos:column="15">int64_t<pos:position pos:line="25" pos:column="22"/></name></type> <name pos:line="25" pos:column="23">expectedBodySize<pos:position pos:line="25" pos:column="39"/></name> <init pos:line="25" pos:column="40">=
            <expr><call><name><name pos:line="26" pos:column="13">http<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">storeEntry<pos:position pos:line="26" pos:column="29"/></name></name><argument_list pos:line="26" pos:column="29">()<pos:position pos:line="26" pos:column="31"/></argument_list></call><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><call><name pos:line="26" pos:column="33">getReply<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">()<pos:position pos:line="26" pos:column="43"/></argument_list></call><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><call><name pos:line="26" pos:column="45">bodySize<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name><name pos:line="26" pos:column="54">http<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">request<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">-&gt;<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="69">method<pos:position pos:line="26" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="77"/></decl_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">http<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">request<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">flags<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">.<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">proxyKeepalive<pos:position pos:line="27" pos:column="49"/></name></name> <operator pos:line="27" pos:column="50">&amp;&amp;<pos:position pos:line="27" pos:column="60"/></operator> <name pos:line="27" pos:column="53">expectedBodySize<pos:position pos:line="27" pos:column="69"/></name> <operator pos:line="27" pos:column="70">&lt;<pos:position pos:line="27" pos:column="74"/></operator> <literal type="number" pos:line="27" pos:column="72">0<pos:position pos:line="27" pos:column="73"/></literal></expr>)<pos:position pos:line="27" pos:column="74"/></condition><then pos:line="27" pos:column="74"> <block pos:line="27" pos:column="75">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">debugs<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="number" pos:line="28" pos:column="20">88<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="24">5<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="27">"clientReplyStatus: closing, content_length &lt; 0"<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
            <return pos:line="29" pos:column="13">return <expr><name pos:line="29" pos:column="20">STREAM_FAILED<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">done<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19"> <block pos:line="32" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">debugs<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="number" pos:line="33" pos:column="20">88<pos:position pos:line="33" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="24">5<pos:position pos:line="33" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="27">"clientReplyStatus: closing, !done, but read 0 bytes"<pos:position pos:line="33" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="82"/></expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><name pos:line="34" pos:column="20">STREAM_FAILED<pos:position pos:line="34" pos:column="33"/></name></expr>;<pos:position pos:line="34" pos:column="34"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">expectedBodySize<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">&gt;=<pos:position pos:line="37" pos:column="35"/></operator> <literal type="number" pos:line="37" pos:column="33">0<pos:position pos:line="37" pos:column="34"/></literal> <operator pos:line="37" pos:column="35">&amp;&amp;<pos:position pos:line="37" pos:column="45"/></operator> <operator pos:line="37" pos:column="38">!<pos:position pos:line="37" pos:column="39"/></operator><call><name><name pos:line="37" pos:column="39">http<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">-&gt;<pos:position pos:line="37" pos:column="48"/></operator><name pos:line="37" pos:column="45">gotEnough<pos:position pos:line="37" pos:column="54"/></name></name><argument_list pos:line="37" pos:column="54">()<pos:position pos:line="37" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57"> <block pos:line="37" pos:column="58">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">88<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="24">5<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"clientReplyStatus: client didn't get all it expected"<pos:position pos:line="38" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="83"/></expr_stmt>
            <return pos:line="39" pos:column="13">return <expr><name pos:line="39" pos:column="20">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="39" pos:column="45"/></name></expr>;<pos:position pos:line="39" pos:column="46"/></return>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name><name pos:line="42" pos:column="13">http<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">request<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">flags<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">.<pos:position pos:line="42" pos:column="34"/></operator><name pos:line="42" pos:column="34">proxyKeepalive<pos:position pos:line="42" pos:column="48"/></name></name></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49"> <block pos:line="42" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">debugs<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="number" pos:line="43" pos:column="20">88<pos:position pos:line="43" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="24">5<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="27">"clientReplyStatus: stream complete and can keepalive"<pos:position pos:line="43" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="83"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">STREAM_COMPLETE<pos:position pos:line="44" pos:column="35"/></name></expr>;<pos:position pos:line="44" pos:column="36"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="47" pos:column="9">debugs<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><literal type="number" pos:line="47" pos:column="16">88<pos:position pos:line="47" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="20">5<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"clientReplyStatus: stream was not expected to complete!"<pos:position pos:line="47" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="82"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="48" pos:column="41"/></name></expr>;<pos:position pos:line="48" pos:column="42"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="51" pos:column="5">// XXX: Should this be checked earlier? We could return above w/o checking.</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name><name pos:line="52" pos:column="9">reply<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">-&gt;<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="16">receivedBodyTooLarge<pos:position pos:line="52" pos:column="36"/></name></name><argument_list pos:line="52" pos:column="36">(<argument><expr><operator pos:line="52" pos:column="37">*<pos:position pos:line="52" pos:column="38"/></operator><name><name pos:line="52" pos:column="38">http<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">-&gt;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="44">request<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="53">http<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">-&gt;<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="59">out<pos:position pos:line="52" pos:column="62"/></name><operator pos:line="52" pos:column="62">.<pos:position pos:line="52" pos:column="63"/></operator><name pos:line="52" pos:column="63">offset<pos:position pos:line="52" pos:column="69"/></name></name> <operator pos:line="52" pos:column="70">-<pos:position pos:line="52" pos:column="71"/></operator> <literal type="number" pos:line="52" pos:column="72">4096<pos:position pos:line="52" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="78"/></condition><then pos:line="52" pos:column="78"> <block pos:line="52" pos:column="79">{
        <comment type="block" pos:line="53" pos:column="9">/* 4096 is a margin for the HTTP headers included in out.offset */</comment>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">debugs<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><literal type="number" pos:line="54" pos:column="16">88<pos:position pos:line="54" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="20">5<pos:position pos:line="54" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="23">"clientReplyStatus: client reply body is too large"<pos:position pos:line="54" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
        <return pos:line="55" pos:column="9">return <expr><name pos:line="55" pos:column="16">STREAM_FAILED<pos:position pos:line="55" pos:column="29"/></name></expr>;<pos:position pos:line="55" pos:column="30"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">STREAM_NONE<pos:position pos:line="58" pos:column="23"/></name></expr>;<pos:position pos:line="58" pos:column="24"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

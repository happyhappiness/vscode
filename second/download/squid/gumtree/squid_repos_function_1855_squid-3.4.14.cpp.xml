<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1855_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CachePeer<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">getWeightedRoundRobinParent<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">HttpRequest<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">request<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">p<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CachePeer<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">q<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">weighted_rtt<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">p<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name><name pos:line="8" pos:column="14">Config<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">peers<pos:position pos:line="8" pos:column="26"/></name></name></expr>;<pos:position pos:line="8" pos:column="27"/></init> <condition><expr><name pos:line="8" pos:column="28">p<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></condition> <incr><expr><name pos:line="8" pos:column="31">p<pos:position pos:line="8" pos:column="32"/></name> <operator pos:line="8" pos:column="33">=<pos:position pos:line="8" pos:column="34"/></operator> <name><name pos:line="8" pos:column="35">p<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">next<pos:position pos:line="8" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="43"/></control> <block pos:line="8" pos:column="44">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">p<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">options<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">weighted_roundrobin<pos:position pos:line="9" pos:column="44"/></name></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
            <block type="pseudo"><continue pos:line="10" pos:column="13">continue;<pos:position pos:line="10" pos:column="22"/></continue></block></then></if>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">neighborType<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">request<pos:position pos:line="12" pos:column="36"/></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">!=<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">PEER_PARENT<pos:position pos:line="12" pos:column="52"/></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
            <block type="pseudo"><continue pos:line="13" pos:column="13">continue;<pos:position pos:line="13" pos:column="22"/></continue></block></then></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name pos:line="15" pos:column="14">peerHTTPOkay<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">p<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">request<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
            <block type="pseudo"><continue pos:line="16" pos:column="13">continue;<pos:position pos:line="16" pos:column="22"/></continue></block></then></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">q<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&amp;&amp;<pos:position pos:line="18" pos:column="25"/></operator> <name><name pos:line="18" pos:column="18">q<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">rr_count<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">&lt;<pos:position pos:line="18" pos:column="34"/></operator> <name><name pos:line="18" pos:column="32">p<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">rr_count<pos:position pos:line="18" pos:column="43"/></name></name></expr>)<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44">
            <block type="pseudo"><continue pos:line="19" pos:column="13">continue;<pos:position pos:line="19" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="21" pos:column="9">q<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">p<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></for>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">q<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">&amp;&amp;<pos:position pos:line="24" pos:column="21"/></operator> <name><name pos:line="24" pos:column="14">q<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">rr_count<pos:position pos:line="24" pos:column="25"/></name></name> <operator pos:line="24" pos:column="26">&gt;<pos:position pos:line="24" pos:column="30"/></operator> <literal type="number" pos:line="24" pos:column="28">1000000<pos:position pos:line="24" pos:column="35"/></literal></expr>)<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36">
        <block type="pseudo"><for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">p<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name><name pos:line="25" pos:column="18">Config<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">peers<pos:position pos:line="25" pos:column="30"/></name></name></expr>;<pos:position pos:line="25" pos:column="31"/></init> <condition><expr><name pos:line="25" pos:column="32">p<pos:position pos:line="25" pos:column="33"/></name></expr>;<pos:position pos:line="25" pos:column="34"/></condition> <incr><expr><name pos:line="25" pos:column="35">p<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">=<pos:position pos:line="25" pos:column="38"/></operator> <name><name pos:line="25" pos:column="39">p<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">next<pos:position pos:line="25" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="25" pos:column="47"/></control> <block pos:line="25" pos:column="48">{
            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><operator pos:line="26" pos:column="17">!<pos:position pos:line="26" pos:column="18"/></operator><name><name pos:line="26" pos:column="18">p<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">options<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">weighted_roundrobin<pos:position pos:line="26" pos:column="48"/></name></name></expr>)<pos:position pos:line="26" pos:column="49"/></condition><then pos:line="26" pos:column="49">
                <block type="pseudo"><continue pos:line="27" pos:column="17">continue;<pos:position pos:line="27" pos:column="26"/></continue></block></then></if>

            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><call><name pos:line="29" pos:column="17">neighborType<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">p<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">request<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call> <operator pos:line="29" pos:column="42">!=<pos:position pos:line="29" pos:column="44"/></operator> <name pos:line="29" pos:column="45">PEER_PARENT<pos:position pos:line="29" pos:column="56"/></name></expr>)<pos:position pos:line="29" pos:column="57"/></condition><then pos:line="29" pos:column="57">
                <block type="pseudo"><continue pos:line="30" pos:column="17">continue;<pos:position pos:line="30" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><name><name pos:line="32" pos:column="13">p<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">rr_count<pos:position pos:line="32" pos:column="24"/></name></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <literal type="number" pos:line="32" pos:column="27">0<pos:position pos:line="32" pos:column="28"/></literal></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></for></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">q<pos:position pos:line="35" pos:column="10"/></name></expr>)<pos:position pos:line="35" pos:column="11"/></condition><then pos:line="35" pos:column="11"> <block pos:line="35" pos:column="12">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">weighted_rtt<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name><name pos:line="36" pos:column="25">q<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">-&gt;<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="28">stats<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">.<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">rtt<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">-<pos:position pos:line="36" pos:column="39"/></operator> <name><name pos:line="36" pos:column="40">q<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">-&gt;<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="43">basetime<pos:position pos:line="36" pos:column="51"/></name></name><operator pos:line="36" pos:column="51">)<pos:position pos:line="36" pos:column="52"/></operator> <operator pos:line="36" pos:column="53">/<pos:position pos:line="36" pos:column="54"/></operator> <name><name pos:line="36" pos:column="55">q<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">-&gt;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="58">weight<pos:position pos:line="36" pos:column="64"/></name></name></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">weighted_rtt<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">&lt;<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="13">weighted_rtt<pos:position pos:line="39" pos:column="25"/></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="41" pos:column="9">q<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">rr_count<pos:position pos:line="41" pos:column="20"/></name></name> <operator pos:line="41" pos:column="21">+=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="24">weighted_rtt<pos:position pos:line="41" pos:column="36"/></name></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">15<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="20">3<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="23">"getWeightedRoundRobinParent: weighted_rtt "<pos:position pos:line="43" pos:column="67"/></literal> <operator pos:line="43" pos:column="68">&lt;&lt;<pos:position pos:line="43" pos:column="76"/></operator> <name pos:line="43" pos:column="71">weighted_rtt<pos:position pos:line="43" pos:column="83"/></name></expr></argument>)<pos:position pos:line="43" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="85"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">debugs<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><literal type="number" pos:line="46" pos:column="12">15<pos:position pos:line="46" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="16">3<pos:position pos:line="46" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="19">"getWeightedRoundRobinParent: returning "<pos:position pos:line="46" pos:column="60"/></literal> <operator pos:line="46" pos:column="61">&lt;&lt;<pos:position pos:line="46" pos:column="69"/></operator> <operator pos:line="46" pos:column="64">(<pos:position pos:line="46" pos:column="65"/></operator><ternary><condition><expr><name pos:line="46" pos:column="65">q<pos:position pos:line="46" pos:column="66"/></name></expr> ?<pos:position pos:line="46" pos:column="68"/></condition><then pos:line="46" pos:column="68"> <expr><name><name pos:line="46" pos:column="69">q<pos:position pos:line="46" pos:column="70"/></name><operator pos:line="46" pos:column="70">-&gt;<pos:position pos:line="46" pos:column="75"/></operator><name pos:line="46" pos:column="72">host<pos:position pos:line="46" pos:column="76"/></name></name></expr> <pos:position pos:line="46" pos:column="77"/></then><else pos:line="46" pos:column="77">: <expr><literal type="string" pos:line="46" pos:column="79">"NULL"<pos:position pos:line="46" pos:column="85"/></literal></expr></else></ternary><operator pos:line="46" pos:column="85">)<pos:position pos:line="46" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="88"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">q<pos:position pos:line="47" pos:column="13"/></name></expr>;<pos:position pos:line="47" pos:column="14"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

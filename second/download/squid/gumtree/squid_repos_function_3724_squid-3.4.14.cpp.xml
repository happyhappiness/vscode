<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3724_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">url_entry<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name pos:line="2" pos:column="1">urnParseReply<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">inbuf<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">HttpRequestMethod<pos:position pos:line="2" pos:column="57"/></name><modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type> <name pos:line="2" pos:column="59">m<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">buf<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name pos:line="4" pos:column="17">xstrdup<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">inbuf<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">token<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">url<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">host<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">url_entry<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">list<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">url_entry<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier></type><name pos:line="9" pos:column="16">old<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">n<pos:position pos:line="10" pos:column="10"/></name> <init pos:line="10" pos:column="11">= <expr><literal type="number" pos:line="10" pos:column="13">32<pos:position pos:line="10" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name> <init pos:line="11" pos:column="11">= <expr><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">52<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"urnParseReply"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">list<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">url_entry<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></operator><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator><call><name pos:line="13" pos:column="25">xcalloc<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">n<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">+<pos:position pos:line="13" pos:column="36"/></operator> <literal type="number" pos:line="13" pos:column="37">1<pos:position pos:line="13" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="40">sizeof<argument_list pos:line="13" pos:column="46">(<argument><expr><operator pos:line="13" pos:column="47">*<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">list<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">token<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">strtok<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">buf<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">crlf<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></init> <condition><expr><name pos:line="15" pos:column="37">token<pos:position pos:line="15" pos:column="42"/></name></expr>;<pos:position pos:line="15" pos:column="43"/></condition> <incr><expr><name pos:line="15" pos:column="44">token<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">=<pos:position pos:line="15" pos:column="51"/></operator> <call><name pos:line="15" pos:column="52">strtok<pos:position pos:line="15" pos:column="58"/></name><argument_list pos:line="15" pos:column="58">(<argument><expr><name pos:line="15" pos:column="59">NULL<pos:position pos:line="15" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="65">crlf<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></incr>)<pos:position pos:line="15" pos:column="71"/></control> <block pos:line="15" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">52<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">3<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"urnParseReply: got '"<pos:position pos:line="16" pos:column="45"/></literal> <operator pos:line="16" pos:column="46">&lt;&lt;<pos:position pos:line="16" pos:column="54"/></operator> <name pos:line="16" pos:column="49">token<pos:position pos:line="16" pos:column="54"/></name> <operator pos:line="16" pos:column="55">&lt;&lt;<pos:position pos:line="16" pos:column="63"/></operator> <literal type="string" pos:line="16" pos:column="58">"'"<pos:position pos:line="16" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">i<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">n<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block pos:line="18" pos:column="21">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">old<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">list<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">n<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&lt;&lt;=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="19">2<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">list<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="20">(<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">url_entry<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator><call><name pos:line="21" pos:column="33">xcalloc<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name pos:line="21" pos:column="41">n<pos:position pos:line="21" pos:column="42"/></name> <operator pos:line="21" pos:column="43">+<pos:position pos:line="21" pos:column="44"/></operator> <literal type="number" pos:line="21" pos:column="45">1<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="48">sizeof<argument_list pos:line="21" pos:column="54">(<argument><expr><operator pos:line="21" pos:column="55">*<pos:position pos:line="21" pos:column="56"/></operator><name pos:line="21" pos:column="56">list<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">memcpy<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">list<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="26">old<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">i<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">*<pos:position pos:line="22" pos:column="34"/></operator> <sizeof pos:line="22" pos:column="35">sizeof<argument_list pos:line="22" pos:column="41">(<argument><expr><operator pos:line="22" pos:column="42">*<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">list<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">safe_free<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">old<pos:position pos:line="23" pos:column="26"/></name></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="26" pos:column="9">url<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">=<pos:position pos:line="26" pos:column="14"/></operator> <call><name pos:line="26" pos:column="15">xstrdup<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">token<pos:position pos:line="26" pos:column="28"/></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">host<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">urlHostname<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">url<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">NULL<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">==<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">host<pos:position pos:line="29" pos:column="25"/></name></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26">
            <block type="pseudo"><continue pos:line="30" pos:column="13">continue;<pos:position pos:line="30" pos:column="22"/></continue></block></then></if>

<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><name pos:line="32" pos:column="5">USE_ICMP<pos:position pos:line="32" pos:column="13"/></name></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">list<pos:position pos:line="33" pos:column="13"/></name><index pos:line="33" pos:column="13">[<expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name></expr>]<pos:position pos:line="33" pos:column="16"/></index></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">rtt<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">netdbHostRtt<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">host<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><literal type="number" pos:line="35" pos:column="13">0<pos:position pos:line="35" pos:column="14"/></literal> <operator pos:line="35" pos:column="15">==<pos:position pos:line="35" pos:column="17"/></operator> <name><name pos:line="35" pos:column="18">list<pos:position pos:line="35" pos:column="22"/></name><index pos:line="35" pos:column="22">[<expr><name pos:line="35" pos:column="23">i<pos:position pos:line="35" pos:column="24"/></name></expr>]<pos:position pos:line="35" pos:column="25"/></index></name><operator pos:line="35" pos:column="25">.<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">rtt<pos:position pos:line="35" pos:column="29"/></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">52<pos:position pos:line="36" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="24">3<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">"urnParseReply: Pinging "<pos:position pos:line="36" pos:column="52"/></literal> <operator pos:line="36" pos:column="53">&lt;&lt;<pos:position pos:line="36" pos:column="61"/></operator> <name pos:line="36" pos:column="56">host<pos:position pos:line="36" pos:column="60"/></name></expr></argument>)<pos:position pos:line="36" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">netdbPingSite<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">host<pos:position pos:line="37" pos:column="31"/></name></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">list<pos:position pos:line="40" pos:column="13"/></name><index pos:line="40" pos:column="13">[<expr><name pos:line="40" pos:column="14">i<pos:position pos:line="40" pos:column="15"/></name></expr>]<pos:position pos:line="40" pos:column="16"/></index></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">rtt<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><name><name pos:line="43" pos:column="9">list<pos:position pos:line="43" pos:column="13"/></name><index pos:line="43" pos:column="13">[<expr><name pos:line="43" pos:column="14">i<pos:position pos:line="43" pos:column="15"/></name></expr>]<pos:position pos:line="43" pos:column="16"/></index></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">url<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="23">url<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">list<pos:position pos:line="44" pos:column="13"/></name><index pos:line="44" pos:column="13">[<expr><name pos:line="44" pos:column="14">i<pos:position pos:line="44" pos:column="15"/></name></expr>]<pos:position pos:line="44" pos:column="16"/></index></name><operator pos:line="44" pos:column="16">.<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">host<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <call><name pos:line="44" pos:column="24">xstrdup<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">host<pos:position pos:line="44" pos:column="36"/></name></expr></argument>)<pos:position pos:line="44" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="38"/></expr_stmt>
        <comment type="line" pos:line="45" pos:column="9">// TODO: Use storeHas() or lock/unlock entry to avoid creating unlocked</comment>
        <comment type="line" pos:line="46" pos:column="9">// ones.</comment>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">list<pos:position pos:line="47" pos:column="13"/></name><index pos:line="47" pos:column="13">[<expr><name pos:line="47" pos:column="14">i<pos:position pos:line="47" pos:column="15"/></name></expr>]<pos:position pos:line="47" pos:column="16"/></index></name><operator pos:line="47" pos:column="16">.<pos:position pos:line="47" pos:column="17"/></operator><name><name pos:line="47" pos:column="17">flags<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">cached<pos:position pos:line="47" pos:column="29"/></name></name> <operator pos:line="47" pos:column="30">=<pos:position pos:line="47" pos:column="31"/></operator> <ternary><condition><expr><call><name pos:line="47" pos:column="32">storeGetPublic<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><name pos:line="47" pos:column="47">url<pos:position pos:line="47" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="52">m<pos:position pos:line="47" pos:column="53"/></name></expr></argument>)<pos:position pos:line="47" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="47" pos:column="56"/></condition><then pos:line="47" pos:column="56"> <expr><literal type="number" pos:line="47" pos:column="57">1<pos:position pos:line="47" pos:column="58"/></literal></expr> <pos:position pos:line="47" pos:column="59"/></then><else pos:line="47" pos:column="59">: <expr><literal type="number" pos:line="47" pos:column="61">0<pos:position pos:line="47" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="48" pos:column="9">++<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="11">i<pos:position pos:line="48" pos:column="12"/></name></expr>;<pos:position pos:line="48" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="51" pos:column="5">debugs<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><literal type="number" pos:line="51" pos:column="12">52<pos:position pos:line="51" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="16">3<pos:position pos:line="51" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="19">"urnParseReply: Found "<pos:position pos:line="51" pos:column="42"/></literal> <operator pos:line="51" pos:column="43">&lt;&lt;<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="46">i<pos:position pos:line="51" pos:column="47"/></name> <operator pos:line="51" pos:column="48">&lt;&lt;<pos:position pos:line="51" pos:column="56"/></operator> <literal type="string" pos:line="51" pos:column="51">" URLs"<pos:position pos:line="51" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><name pos:line="52" pos:column="12">list<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

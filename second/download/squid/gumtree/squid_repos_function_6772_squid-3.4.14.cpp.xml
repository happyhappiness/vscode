<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6772_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">rfc1035QuestionPack<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">buf<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">size_t<pos:position pos:line="3" pos:column="33"/></name></type> <name pos:line="3" pos:column="34">sz<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="4" pos:column="21">const<pos:position pos:line="4" pos:column="26"/></specifier> <name pos:line="4" pos:column="27">char<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">name<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="5" pos:column="21">const<pos:position pos:line="5" pos:column="26"/></specifier> <name pos:line="5" pos:column="27">unsigned<pos:position pos:line="5" pos:column="35"/></name> <name pos:line="5" pos:column="36">short<pos:position pos:line="5" pos:column="41"/></name></type> <name pos:line="5" pos:column="42">type<pos:position pos:line="5" pos:column="46"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="6" pos:column="21">const<pos:position pos:line="6" pos:column="26"/></specifier> <name pos:line="6" pos:column="27">unsigned<pos:position pos:line="6" pos:column="35"/></name> <name pos:line="6" pos:column="36">short<pos:position pos:line="6" pos:column="41"/></name></type> <name pos:line="6" pos:column="42">_class<pos:position pos:line="6" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="49"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">off<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">short<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">s<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">off<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">+=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">rfc1035NamePack<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">buf<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">+<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="34">off<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">sz<pos:position pos:line="10" pos:column="41"/></name> <operator pos:line="10" pos:column="42">-<pos:position pos:line="10" pos:column="43"/></operator> <name pos:line="10" pos:column="44">off<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">name<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">s<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">htons<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">type<pos:position pos:line="11" pos:column="19"/></name></expr></argument>)<pos:position pos:line="11" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">memcpy<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">buf<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">+<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">off<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="24">s<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="27">sizeof<argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">s<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">off<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">+=<pos:position pos:line="13" pos:column="11"/></operator> <sizeof pos:line="13" pos:column="12">sizeof<argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">s<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">s<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">htons<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">_class<pos:position pos:line="14" pos:column="21"/></name></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memcpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">buf<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">+<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">off<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="23">&amp;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="24">s<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="27">sizeof<argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">s<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">off<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">+=<pos:position pos:line="16" pos:column="11"/></operator> <sizeof pos:line="16" pos:column="12">sizeof<argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">s<pos:position pos:line="16" pos:column="20"/></name></expr></argument>)<pos:position pos:line="16" pos:column="21"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">off<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&lt;=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="19">sz<pos:position pos:line="17" pos:column="21"/></name></expr></argument>)<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">off<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

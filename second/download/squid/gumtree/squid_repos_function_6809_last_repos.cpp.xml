<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6809_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIExpatParser<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">End<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">data<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>,<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">XML_Char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">el<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">XML_Parser<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">parser<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><cast type="static" pos:line="4" pos:column="25">static_cast<argument_list type="generic" pos:line="4" pos:column="36">&lt;<argument><expr><name pos:line="4" pos:column="37">XML_Parser<pos:position pos:line="4" pos:column="47"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="51"/></argument_list><argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">data<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ESIExpatParser<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">me<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">ESIExpatParser<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></operator><operator pos:line="5" pos:column="43">)<pos:position pos:line="5" pos:column="44"/></operator><call><name pos:line="5" pos:column="44">XML_GetUserData<pos:position pos:line="5" pos:column="59"/></name><argument_list pos:line="5" pos:column="59">(<argument><expr><name pos:line="5" pos:column="60">parser<pos:position pos:line="5" pos:column="66"/></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">me<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">-&gt;<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="9">theClient<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">end<pos:position pos:line="6" pos:column="23"/></name></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">el<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1483_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dump_externalAclHelper<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">StoreEntry<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">sentry<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">name<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">external_acl<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type> <name pos:line="2" pos:column="84">list<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">external_acl<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">node<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">wordlist<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">word<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">node<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">list<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></init> <condition><expr><name pos:line="7" pos:column="23">node<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></condition> <incr><expr><name pos:line="7" pos:column="29">node<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <name><name pos:line="7" pos:column="36">node<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">-&gt;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="42">next<pos:position pos:line="7" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="47"/></control> <block pos:line="7" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">sentry<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"%s %s"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">name<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="50">node<pos:position pos:line="8" pos:column="54"/></name><operator pos:line="8" pos:column="54">-&gt;<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="56">name<pos:position pos:line="8" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name><name pos:line="10" pos:column="14">node<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">local_addr<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">isIPv6<pos:position pos:line="10" pos:column="37"/></name></name><argument_list pos:line="10" pos:column="37">()<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="13">storeAppendPrintf<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">sentry<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="39">" ipv4"<pos:position pos:line="11" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt></block></then>
        <else pos:line="12" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="13">storeAppendPrintf<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">sentry<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="39">" ipv6"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt></block></else></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">node<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">ttl<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">!=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">DEFAULT_EXTERNAL_ACL_TTL<pos:position pos:line="15" pos:column="50"/></name></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="13">storeAppendPrintf<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">sentry<pos:position pos:line="16" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="39">" ttl=%d"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="50">node<pos:position pos:line="16" pos:column="54"/></name><operator pos:line="16" pos:column="54">-&gt;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="56">ttl<pos:position pos:line="16" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></then></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">node<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">negative_ttl<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">!=<pos:position pos:line="18" pos:column="34"/></operator> <name><name pos:line="18" pos:column="35">node<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">ttl<pos:position pos:line="18" pos:column="44"/></name></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="13">storeAppendPrintf<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">sentry<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">" negative_ttl=%d"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="59">node<pos:position pos:line="19" pos:column="63"/></name><operator pos:line="19" pos:column="63">-&gt;<pos:position pos:line="19" pos:column="68"/></operator><name pos:line="19" pos:column="65">negative_ttl<pos:position pos:line="19" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt></block></then></if>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">node<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">grace<pos:position pos:line="21" pos:column="24"/></name></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition><then pos:line="21" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="13">storeAppendPrintf<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">sentry<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="39">" grace=%d"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="52">node<pos:position pos:line="22" pos:column="56"/></name><operator pos:line="22" pos:column="56">-&gt;<pos:position pos:line="22" pos:column="61"/></operator><name pos:line="22" pos:column="58">grace<pos:position pos:line="22" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt></block></then></if>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">node<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">children<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">n_max<pos:position pos:line="24" pos:column="33"/></name></name> <operator pos:line="24" pos:column="34">!=<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">DEFAULT_EXTERNAL_ACL_CHILDREN<pos:position pos:line="24" pos:column="66"/></name></expr>)<pos:position pos:line="24" pos:column="67"/></condition><then pos:line="24" pos:column="67">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">storeAppendPrintf<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">sentry<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">" children-max=%d"<pos:position pos:line="25" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="59">node<pos:position pos:line="25" pos:column="63"/></name><operator pos:line="25" pos:column="63">-&gt;<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="65">children<pos:position pos:line="25" pos:column="73"/></name><operator pos:line="25" pos:column="73">.<pos:position pos:line="25" pos:column="74"/></operator><name pos:line="25" pos:column="74">n_max<pos:position pos:line="25" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt></block></then></if>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name><name pos:line="27" pos:column="13">node<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">-&gt;<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="19">children<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">n_startup<pos:position pos:line="27" pos:column="37"/></name></name> <operator pos:line="27" pos:column="38">!=<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="41">0<pos:position pos:line="27" pos:column="42"/></literal></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <comment type="line" pos:line="27" pos:column="44">// sync with helper/ChildConfig.cc default</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">storeAppendPrintf<pos:position pos:line="28" pos:column="30"/></name><argument_list pos:line="28" pos:column="30">(<argument><expr><name pos:line="28" pos:column="31">sentry<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">" children-startup=%d"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="63">node<pos:position pos:line="28" pos:column="67"/></name><operator pos:line="28" pos:column="67">-&gt;<pos:position pos:line="28" pos:column="72"/></operator><name pos:line="28" pos:column="69">children<pos:position pos:line="28" pos:column="77"/></name><operator pos:line="28" pos:column="77">.<pos:position pos:line="28" pos:column="78"/></operator><name pos:line="28" pos:column="78">n_startup<pos:position pos:line="28" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="89"/></expr_stmt></block></then></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">node<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">children<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">n_idle<pos:position pos:line="30" pos:column="34"/></name></name> <operator pos:line="30" pos:column="35">!=<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="38">1<pos:position pos:line="30" pos:column="39"/></literal></expr>)<pos:position pos:line="30" pos:column="40"/></condition><then pos:line="30" pos:column="40"> <comment type="line" pos:line="30" pos:column="41">// sync with helper/ChildConfig.cc default</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">storeAppendPrintf<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">sentry<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="39">" children-idle=%d"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="60">node<pos:position pos:line="31" pos:column="64"/></name><operator pos:line="31" pos:column="64">-&gt;<pos:position pos:line="31" pos:column="69"/></operator><name pos:line="31" pos:column="66">children<pos:position pos:line="31" pos:column="74"/></name><operator pos:line="31" pos:column="74">.<pos:position pos:line="31" pos:column="75"/></operator><name pos:line="31" pos:column="75">n_idle<pos:position pos:line="31" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="83"/></expr_stmt></block></then></if>

        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">node<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">children<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">.<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">concurrency<pos:position pos:line="33" pos:column="39"/></name></name> <operator pos:line="33" pos:column="40">!=<pos:position pos:line="33" pos:column="42"/></operator> <literal type="number" pos:line="33" pos:column="43">0<pos:position pos:line="33" pos:column="44"/></literal></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">storeAppendPrintf<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">sentry<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">" concurrency=%d"<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="58">node<pos:position pos:line="34" pos:column="62"/></name><operator pos:line="34" pos:column="62">-&gt;<pos:position pos:line="34" pos:column="67"/></operator><name pos:line="34" pos:column="64">children<pos:position pos:line="34" pos:column="72"/></name><operator pos:line="34" pos:column="72">.<pos:position pos:line="34" pos:column="73"/></operator><name pos:line="34" pos:column="73">concurrency<pos:position pos:line="34" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="86"/></expr_stmt></block></then></if>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">node<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">cache<pos:position pos:line="36" pos:column="24"/></name></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">storeAppendPrintf<pos:position pos:line="37" pos:column="30"/></name><argument_list pos:line="37" pos:column="30">(<argument><expr><name pos:line="37" pos:column="31">sentry<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="39">" cache=%d"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="52">node<pos:position pos:line="37" pos:column="56"/></name><operator pos:line="37" pos:column="56">-&gt;<pos:position pos:line="37" pos:column="61"/></operator><name pos:line="37" pos:column="58">cache_size<pos:position pos:line="37" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="70"/></expr_stmt></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">node<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">quote<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">==<pos:position pos:line="39" pos:column="27"/></operator> <name><name pos:line="39" pos:column="28">Format<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">::<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="36">LOG_QUOTE_SHELL<pos:position pos:line="39" pos:column="51"/></name></name></expr>)<pos:position pos:line="39" pos:column="52"/></condition><then pos:line="39" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="13">storeAppendPrintf<pos:position pos:line="40" pos:column="30"/></name><argument_list pos:line="40" pos:column="30">(<argument><expr><name pos:line="40" pos:column="31">sentry<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="39">" protocol=2.5"<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="42" pos:column="9">node<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">format<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">.<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">dump<pos:position pos:line="42" pos:column="26"/></name></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">sentry<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">NULL<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="42" pos:column="41">false<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>

        <for pos:line="44" pos:column="9">for <control pos:line="44" pos:column="13">(<init><expr><name pos:line="44" pos:column="14">word<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <name><name pos:line="44" pos:column="21">node<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">-&gt;<pos:position pos:line="44" pos:column="30"/></operator><name pos:line="44" pos:column="27">cmdline<pos:position pos:line="44" pos:column="34"/></name></name></expr>;<pos:position pos:line="44" pos:column="35"/></init> <condition><expr><name pos:line="44" pos:column="36">word<pos:position pos:line="44" pos:column="40"/></name></expr>;<pos:position pos:line="44" pos:column="41"/></condition> <incr><expr><name pos:line="44" pos:column="42">word<pos:position pos:line="44" pos:column="46"/></name> <operator pos:line="44" pos:column="47">=<pos:position pos:line="44" pos:column="48"/></operator> <name><name pos:line="44" pos:column="49">word<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">-&gt;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="55">next<pos:position pos:line="44" pos:column="59"/></name></name></expr></incr>)<pos:position pos:line="44" pos:column="60"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">storeAppendPrintf<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">sentry<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="39">" %s"<pos:position pos:line="45" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="46">word<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">-&gt;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="52">key<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt></block></for>

        <expr_stmt><expr><call><name pos:line="47" pos:column="9">storeAppendPrintf<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">sentry<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="35">"\n"<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></for>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

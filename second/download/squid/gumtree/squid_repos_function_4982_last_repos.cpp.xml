<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4982_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Rock<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">SwapDirRr<pos:position pos:line="1" pos:column="21"/></name><operator pos:line="1" pos:column="21">::<pos:position pos:line="1" pos:column="23"/></operator><name pos:line="1" pos:column="23">create<pos:position pos:line="1" pos:column="29"/></name></name><parameter_list pos:line="1" pos:column="29">()<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name><name pos:line="3" pos:column="10">mapOwners<pos:position pos:line="3" pos:column="19"/></name><operator pos:line="3" pos:column="19">.<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="20">empty<pos:position pos:line="3" pos:column="25"/></name></name><argument_list pos:line="3" pos:column="25">()<pos:position pos:line="3" pos:column="27"/></argument_list></call> <operator pos:line="3" pos:column="28">&amp;&amp;<pos:position pos:line="3" pos:column="38"/></operator> <call><name><name pos:line="3" pos:column="31">freeSlotsOwners<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">.<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">empty<pos:position pos:line="3" pos:column="52"/></name></name><argument_list pos:line="3" pos:column="52">()<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="56"/></expr_stmt>
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="25">Config<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">cacheSwap<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">n_configured<pos:position pos:line="4" pos:column="54"/></name></name></expr>;<pos:position pos:line="4" pos:column="55"/></condition> <incr><expr><operator pos:line="4" pos:column="56">++<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">i<pos:position pos:line="4" pos:column="59"/></name></expr></incr>)<pos:position pos:line="4" pos:column="60"/></control> <block pos:line="4" pos:column="61">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<decl><type><specifier pos:line="5" pos:column="13">const<pos:position pos:line="5" pos:column="18"/></specifier> <name><name pos:line="5" pos:column="19">Rock<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">::<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">SwapDir<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><specifier pos:line="5" pos:column="34">const<pos:position pos:line="5" pos:column="39"/></specifier></type> <name pos:line="5" pos:column="40">sd<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><cast type="dynamic" pos:line="5" pos:column="45">dynamic_cast<argument_list type="generic" pos:line="5" pos:column="57">&lt;<argument><expr><name><name pos:line="5" pos:column="58">Rock<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">::<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">SwapDir<pos:position pos:line="5" pos:column="71"/></name></name> <operator pos:line="5" pos:column="72">*<pos:position pos:line="5" pos:column="73"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="77"/></argument_list><argument_list pos:line="5" pos:column="74">(<argument><expr><call><name pos:line="5" pos:column="75">INDEXSD<pos:position pos:line="5" pos:column="82"/></name><argument_list pos:line="5" pos:column="82">(<argument><expr><name pos:line="5" pos:column="83">i<pos:position pos:line="5" pos:column="84"/></name></expr></argument>)<pos:position pos:line="5" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="86"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="5" pos:column="87"/></condition><then pos:line="5" pos:column="87"> <block pos:line="5" pos:column="88">{
            <decl_stmt><decl><type><specifier pos:line="6" pos:column="13">const<pos:position pos:line="6" pos:column="18"/></specifier> <name pos:line="6" pos:column="19">int64_t<pos:position pos:line="6" pos:column="26"/></name></type> <name pos:line="6" pos:column="27">capacity<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><call><name><name pos:line="6" pos:column="38">sd<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">slotLimitActual<pos:position pos:line="6" pos:column="57"/></name></name><argument_list pos:line="6" pos:column="57">()<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="8" pos:column="13">SwapDir<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">::<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">DirMap<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">::<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">Owner<pos:position pos:line="8" pos:column="35"/></name></name> <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier><specifier pos:line="8" pos:column="37">const<pos:position pos:line="8" pos:column="42"/></specifier></type> <name pos:line="8" pos:column="43">mapOwner<pos:position pos:line="8" pos:column="51"/></name> <init pos:line="8" pos:column="52">=
                <expr><call><name><name pos:line="9" pos:column="17">SwapDir<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">::<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">DirMap<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">::<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">Init<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">(<argument><expr><call><name><name pos:line="9" pos:column="39">sd<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">inodeMapPath<pos:position pos:line="9" pos:column="55"/></name></name><argument_list pos:line="9" pos:column="55">()<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">capacity<pos:position pos:line="9" pos:column="67"/></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="69"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">mapOwners<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">push_back<pos:position pos:line="10" pos:column="32"/></name></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">mapOwner<pos:position pos:line="10" pos:column="41"/></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>

            <comment type="line" pos:line="12" pos:column="13">// TODO: somehow remove pool id and counters from PageStack?</comment>
            <decl_stmt><decl><type><name><name pos:line="13" pos:column="13">Ipc<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">::<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">Mem<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">::<pos:position pos:line="13" pos:column="23"/></operator><name><name pos:line="13" pos:column="23">Owner<pos:position pos:line="13" pos:column="28"/></name><argument_list type="generic" pos:line="13" pos:column="28">&lt;<argument><expr><name><name pos:line="13" pos:column="29">Ipc<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">::<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">Mem<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">::<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">PageStack<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="52"/></argument_list></name></name> <modifier pos:line="13" pos:column="50">*<pos:position pos:line="13" pos:column="51"/></modifier><specifier pos:line="13" pos:column="51">const<pos:position pos:line="13" pos:column="56"/></specifier></type> <name pos:line="13" pos:column="57">freeSlotsOwner<pos:position pos:line="13" pos:column="71"/></name> <init pos:line="13" pos:column="72">=
                <expr><call><call><name pos:line="14" pos:column="17">shm_new<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name><name pos:line="14" pos:column="25">Ipc<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">::<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">Mem<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">::<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">PageStack<pos:position pos:line="14" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call><argument_list pos:line="14" pos:column="45">(<argument><expr><call><name><name pos:line="14" pos:column="46">sd<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">freeSlotsPath<pos:position pos:line="14" pos:column="63"/></name></name><argument_list pos:line="14" pos:column="63">()<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr></argument>,
                                             <argument><expr><name pos:line="15" pos:column="46">i<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">+<pos:position pos:line="15" pos:column="48"/></operator><literal type="number" pos:line="15" pos:column="48">1<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">capacity<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="61">0<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="64"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">freeSlotsOwners<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">push_back<pos:position pos:line="16" pos:column="38"/></name></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">freeSlotsOwner<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>

            <comment type="line" pos:line="18" pos:column="13">// TODO: add method to initialize PageStack with no free pages</comment>
            <while pos:line="19" pos:column="13">while <condition pos:line="19" pos:column="19">(<expr><literal type="boolean" pos:line="19" pos:column="20">true<pos:position pos:line="19" pos:column="24"/></literal></expr>)<pos:position pos:line="19" pos:column="25"/></condition> <block pos:line="19" pos:column="26">{
                <decl_stmt><decl><type><name><name pos:line="20" pos:column="17">Ipc<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">::<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">Mem<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">::<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">PageId<pos:position pos:line="20" pos:column="33"/></name></name></type> <name pos:line="20" pos:column="34">pageId<pos:position pos:line="20" pos:column="40"/></name></decl>;<pos:position pos:line="20" pos:column="41"/></decl_stmt>
                <if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">!<pos:position pos:line="21" pos:column="22"/></operator><call><name><name pos:line="21" pos:column="22">freeSlotsOwner<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">object<pos:position pos:line="21" pos:column="44"/></name></name><argument_list pos:line="21" pos:column="44">()<pos:position pos:line="21" pos:column="46"/></argument_list></call><operator pos:line="21" pos:column="46">-&gt;<pos:position pos:line="21" pos:column="51"/></operator><call><name pos:line="21" pos:column="48">pop<pos:position pos:line="21" pos:column="51"/></name><argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">pageId<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
                    <block type="pseudo"><break pos:line="22" pos:column="21">break;<pos:position pos:line="22" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="23" pos:column="14"/></block></while>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></for>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3319_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">History<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">allLogString<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><specifier pos:line="1" pos:column="40">const<pos:position pos:line="1" pos:column="45"/></specifier> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">serviceId<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">SBuf<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">&amp;<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="69">s<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">s<pos:position pos:line="3" pos:column="6"/></name><operator pos:line="3" pos:column="6">.<pos:position pos:line="3" pos:column="7"/></operator><name pos:line="3" pos:column="7">clear<pos:position pos:line="3" pos:column="12"/></name></name><argument_list pos:line="3" pos:column="12">()<pos:position pos:line="3" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">prevWasRetried<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="boolean" pos:line="4" pos:column="27">false<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><expr><name pos:line="5" pos:column="10">auto<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&amp;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">:<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">theEntries<pos:position pos:line="5" pos:column="30"/></name></expr></init>)<pos:position pos:line="5" pos:column="31"/></control> <block pos:line="5" pos:column="32">{
        <comment type="line" pos:line="6" pos:column="9">// TODO: here and below, optimize service ID comparison?</comment>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">serviceId<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">||<pos:position pos:line="7" pos:column="26"/></operator> <name><name pos:line="7" pos:column="27">i<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">service<pos:position pos:line="7" pos:column="36"/></name></name> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="40">serviceId<pos:position pos:line="7" pos:column="49"/></name></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50"> <block pos:line="7" pos:column="51">{
            <if pos:line="8" pos:column="13">if <condition pos:line="8" pos:column="16">(<expr><operator pos:line="8" pos:column="17">!<pos:position pos:line="8" pos:column="18"/></operator><call><name><name pos:line="8" pos:column="18">s<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">isEmpty<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">()<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30"> <comment type="line" pos:line="8" pos:column="31">// not the first logged time, must delimit</comment>
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">.<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">append<pos:position pos:line="9" pos:column="25"/></name></name><argument_list pos:line="9" pos:column="25">(<argument><expr><ternary><condition><expr><name pos:line="9" pos:column="26">prevWasRetried<pos:position pos:line="9" pos:column="40"/></name></expr> ?<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42"> <expr><literal type="char" pos:line="9" pos:column="43">'+'<pos:position pos:line="9" pos:column="46"/></literal></expr> <pos:position pos:line="9" pos:column="47"/></then><else pos:line="9" pos:column="47">: <expr><literal type="char" pos:line="9" pos:column="49">','<pos:position pos:line="9" pos:column="52"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">s<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">appendf<pos:position pos:line="10" pos:column="22"/></name></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="string" pos:line="10" pos:column="23">"%d"<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="29">i<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">rptm<pos:position pos:line="10" pos:column="35"/></name></name><argument_list pos:line="10" pos:column="35">()<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
            <comment type="line" pos:line="11" pos:column="13">// continue; we may have two identical services (e.g., for retries)</comment>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="13" pos:column="9">prevWasRetried<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="26">i<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">.<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">retried<pos:position pos:line="13" pos:column="35"/></name></name></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></for>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

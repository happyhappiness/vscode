<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7940_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">xstrtoul<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">s<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier><modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">end<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">unsigned<pos:position pos:line="2" pos:column="45"/></name> <name pos:line="2" pos:column="46">long<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">value<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>,
         <parameter><decl><type><name pos:line="3" pos:column="10">unsigned<pos:position pos:line="3" pos:column="18"/></name> <name pos:line="3" pos:column="19">long<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">min<pos:position pos:line="3" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="29">unsigned<pos:position pos:line="3" pos:column="37"/></name> <name pos:line="3" pos:column="38">long<pos:position pos:line="3" pos:column="42"/></name></type> <name pos:line="3" pos:column="43">max<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="47"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">my_end<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">errno<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">long<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">v<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><call><name pos:line="8" pos:column="23">strtoul<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">s<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="35">my_end<pos:position pos:line="8" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="46"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">my_end<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">s<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">end<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">!=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">end<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">my_end<pos:position pos:line="13" pos:column="22"/></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">errno<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">!=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">ERANGE<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">&amp;&amp;<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="28">min<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&lt;=<pos:position pos:line="15" pos:column="37"/></operator> <name pos:line="15" pos:column="35">v<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">&amp;&amp;<pos:position pos:line="15" pos:column="47"/></operator> <operator pos:line="15" pos:column="40">(<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">max<pos:position pos:line="15" pos:column="44"/></name> <operator pos:line="15" pos:column="45">==<pos:position pos:line="15" pos:column="47"/></operator> <literal type="number" pos:line="15" pos:column="48">0<pos:position pos:line="15" pos:column="49"/></literal> <operator pos:line="15" pos:column="50">||<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">v<pos:position pos:line="15" pos:column="54"/></name> <operator pos:line="15" pos:column="55">&lt;=<pos:position pos:line="15" pos:column="60"/></operator> <name pos:line="15" pos:column="58">max<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator></expr>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63"> <block pos:line="15" pos:column="64">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">value<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">!=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">NULL<pos:position pos:line="16" pos:column="26"/></name></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">value<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="22">v<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt></block></then></if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">end<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25">
            <block type="pseudo"><return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">my_end<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">==<pos:position pos:line="19" pos:column="30"/></operator> <literal type="char" pos:line="19" pos:column="31">'\0'<pos:position pos:line="19" pos:column="35"/></literal></expr>;<pos:position pos:line="19" pos:column="36"/></return></block></then></if>
        <return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">true<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <return pos:line="23" pos:column="5">return <expr><literal type="boolean" pos:line="23" pos:column="12">false<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

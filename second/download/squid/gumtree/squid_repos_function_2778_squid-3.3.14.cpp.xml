<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2778_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ETag<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">getETag<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">http_hdr_type<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">id<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ETag<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">etag<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><block pos:line="4" pos:column="17">{<expr><name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr>, <expr><operator pos:line="4" pos:column="24">-<pos:position pos:line="4" pos:column="25"/></operator><literal type="number" pos:line="4" pos:column="25">1<pos:position pos:line="4" pos:column="26"/></literal></expr>}<pos:position pos:line="4" pos:column="27"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeaderEntry<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">e<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">Headers<pos:position pos:line="6" pos:column="19"/></name><index pos:line="6" pos:column="19">[<expr><name pos:line="6" pos:column="20">id<pos:position pos:line="6" pos:column="22"/></name></expr>]<pos:position pos:line="6" pos:column="23"/></index></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">type<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">==<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="32">ftETag<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>		<comment type="block" pos:line="6" pos:column="49">/* must be of an appropriate type */</comment>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">e<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">findEntry<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">id<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">etagParseInit<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="24">etag<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="30">e<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">value<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">.<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="39">termedBuf<pos:position pos:line="9" pos:column="48"/></name></name><argument_list pos:line="9" pos:column="48">()<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt></block></then></if>

    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">etag<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

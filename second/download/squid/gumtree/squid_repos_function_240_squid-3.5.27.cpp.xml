<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_240_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ConvertIP<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">edui_ldap_t<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">l<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">ip<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">bufa<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">EDUI_MAXLEN<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="29">bufb<pos:position pos:line="4" pos:column="33"/></name><index pos:line="4" pos:column="33">[<expr><name pos:line="4" pos:column="34">EDUI_MAXLEN<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="48">obj<pos:position pos:line="4" pos:column="51"/></name><index pos:line="4" pos:column="51">[<expr><name pos:line="4" pos:column="52">EDUI_MAXLEN<pos:position pos:line="4" pos:column="63"/></name></expr>]<pos:position pos:line="4" pos:column="64"/></index></name></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">hexc<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><literal type="number" pos:line="5" pos:column="15">4<pos:position pos:line="5" pos:column="16"/></literal></expr>]<pos:position pos:line="5" pos:column="17"/></index></name></decl>, <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="20">p<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">void<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">y<pos:position pos:line="6" pos:column="12"/></name></decl>, <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="15">z<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">s<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">long<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">x<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">i<pos:position pos:line="9" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="12">j<pos:position pos:line="9" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="15">t<pos:position pos:line="9" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="18">swi<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>                           <comment type="block" pos:line="9" pos:column="49">/* IPv6 "::" cut over toggle */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">l<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block type="pseudo"><return pos:line="10" pos:column="20">return <expr><name pos:line="10" pos:column="27">LDAP_ERR_NULL<pos:position pos:line="10" pos:column="40"/></name></expr>;<pos:position pos:line="10" pos:column="41"/></return></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">ip<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">==<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">NULL<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block type="pseudo"><return pos:line="11" pos:column="21">return <expr><name pos:line="11" pos:column="28">LDAP_ERR_PARAM<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></return></block></then></if>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">(<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">l<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">status<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">&amp;<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="23">LDAP_INIT_S<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block type="pseudo"><return pos:line="12" pos:column="37">return <expr><name pos:line="12" pos:column="44">LDAP_ERR_INIT<pos:position pos:line="12" pos:column="57"/></name></expr>;<pos:position pos:line="12" pos:column="58"/></return></block></then></if>       <comment type="block" pos:line="12" pos:column="65">/* Not initalized */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name><name pos:line="13" pos:column="11">l<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">status<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">&amp;<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="23">LDAP_OPEN_S<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator></expr>)<pos:position pos:line="13" pos:column="36"/></condition><then pos:line="13" pos:column="36"> <block type="pseudo"><return pos:line="13" pos:column="37">return <expr><name pos:line="13" pos:column="44">LDAP_ERR_OPEN<pos:position pos:line="13" pos:column="57"/></name></expr>;<pos:position pos:line="13" pos:column="58"/></return></block></then></if>       <comment type="block" pos:line="13" pos:column="65">/* Not open */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name><name pos:line="14" pos:column="11">l<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">status<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">&amp;<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="23">LDAP_BIND_S<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator></expr>)<pos:position pos:line="14" pos:column="36"/></condition><then pos:line="14" pos:column="36"> <block type="pseudo"><return pos:line="14" pos:column="37">return <expr><name pos:line="14" pos:column="44">LDAP_ERR_BIND<pos:position pos:line="14" pos:column="57"/></name></expr>;<pos:position pos:line="14" pos:column="58"/></return></block></then></if>       <comment type="block" pos:line="14" pos:column="65">/* Not bound */</comment>

    <expr_stmt><expr><name pos:line="16" pos:column="5">y<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">memchr<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">void<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">)<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">ip<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="28">':'<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">EDUI_MAXLEN<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">z<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">memchr<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">void<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">ip<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="28">'.'<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">EDUI_MAXLEN<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">y<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">!=<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">&amp;&amp;<pos:position pos:line="18" pos:column="31"/></operator> <operator pos:line="18" pos:column="24">(<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">z<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">!=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">NULL<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">)<pos:position pos:line="18" pos:column="35"/></operator></expr>)<pos:position pos:line="18" pos:column="36"/></condition><then pos:line="18" pos:column="36"> <block pos:line="18" pos:column="37">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">y<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name></expr>;<pos:position pos:line="19" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">z<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">NULL<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">LDAP_ERR_INVALID<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">y<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">!=<pos:position pos:line="23" pos:column="14"/></operator> <name pos:line="23" pos:column="15">NULL<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><name><name pos:line="23" pos:column="25">edui_conf<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">mode<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="42">EDUI_MODE_IPV4<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">)<pos:position pos:line="23" pos:column="57"/></operator></expr>)<pos:position pos:line="23" pos:column="58"/></condition><then pos:line="23" pos:column="58"> <block pos:line="23" pos:column="59">{
        <comment type="block" pos:line="24" pos:column="9">/* IPv4 Mode forced */</comment>
        <return pos:line="25" pos:column="9">return <expr><name pos:line="25" pos:column="16">LDAP_ERR_INVALID<pos:position pos:line="25" pos:column="32"/></name></expr>;<pos:position pos:line="25" pos:column="33"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><name pos:line="26" pos:column="16">y<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">!=<pos:position pos:line="26" pos:column="20"/></operator> <name pos:line="26" pos:column="21">NULL<pos:position pos:line="26" pos:column="25"/></name></expr>)<pos:position pos:line="26" pos:column="26"/></condition><then pos:line="26" pos:column="26"> <block pos:line="26" pos:column="27">{
        <comment type="block" pos:line="27" pos:column="9">/* Set IPv6 mode */</comment>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">l<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">status<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">&amp;<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="25">LDAP_IPV4_S<pos:position pos:line="28" pos:column="36"/></name></expr>)<pos:position pos:line="28" pos:column="37"/></condition><then pos:line="28" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">l<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">status<pos:position pos:line="29" pos:column="22"/></name></name> <operator pos:line="29" pos:column="23">&amp;=<pos:position pos:line="29" pos:column="29"/></operator> <operator pos:line="29" pos:column="26">~<pos:position pos:line="29" pos:column="27"/></operator><operator pos:line="29" pos:column="27">(<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">LDAP_IPV4_S<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">)<pos:position pos:line="29" pos:column="40"/></operator></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt></block></then></if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name><name pos:line="30" pos:column="15">l<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">status<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">&amp;<pos:position pos:line="30" pos:column="30"/></operator> <name pos:line="30" pos:column="27">LDAP_IPV6_S<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">)<pos:position pos:line="30" pos:column="39"/></operator></expr>)<pos:position pos:line="30" pos:column="40"/></condition><then pos:line="30" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="13">l<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">status<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">|=<pos:position pos:line="31" pos:column="25"/></operator> <operator pos:line="31" pos:column="26">(<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">LDAP_IPV6_S<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">)<pos:position pos:line="31" pos:column="39"/></operator></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">y<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <name pos:line="32" pos:column="13">NULL<pos:position pos:line="32" pos:column="17"/></name></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">z<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">!=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">NULL<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">)<pos:position pos:line="34" pos:column="20"/></operator> <operator pos:line="34" pos:column="21">&amp;&amp;<pos:position pos:line="34" pos:column="31"/></operator> <operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><name><name pos:line="34" pos:column="25">edui_conf<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">mode<pos:position pos:line="34" pos:column="39"/></name></name> <operator pos:line="34" pos:column="40">&amp;<pos:position pos:line="34" pos:column="45"/></operator> <name pos:line="34" pos:column="42">EDUI_MODE_IPV6<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">)<pos:position pos:line="34" pos:column="57"/></operator></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58"> <block pos:line="34" pos:column="59">{
        <comment type="block" pos:line="35" pos:column="9">/* IPv6 Mode forced */</comment>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">LDAP_ERR_INVALID<pos:position pos:line="36" pos:column="32"/></name></expr>;<pos:position pos:line="36" pos:column="33"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then> <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if <condition pos:line="37" pos:column="15">(<expr><name pos:line="37" pos:column="16">z<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">!=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">NULL<pos:position pos:line="37" pos:column="25"/></name></expr>)<pos:position pos:line="37" pos:column="26"/></condition><then pos:line="37" pos:column="26"> <block pos:line="37" pos:column="27">{
        <comment type="block" pos:line="38" pos:column="9">/* Set IPv4 mode */</comment>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">l<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">status<pos:position pos:line="39" pos:column="22"/></name></name> <operator pos:line="39" pos:column="23">&amp;<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="25">LDAP_IPV6_S<pos:position pos:line="39" pos:column="36"/></name></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="13">l<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">status<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">&amp;=<pos:position pos:line="40" pos:column="29"/></operator> <operator pos:line="40" pos:column="26">~<pos:position pos:line="40" pos:column="27"/></operator><operator pos:line="40" pos:column="27">(<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">LDAP_IPV6_S<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">)<pos:position pos:line="40" pos:column="40"/></operator></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt></block></then></if>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><name><name pos:line="41" pos:column="15">l<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">status<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">&amp;<pos:position pos:line="41" pos:column="30"/></operator> <name pos:line="41" pos:column="27">LDAP_IPV4_S<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">)<pos:position pos:line="41" pos:column="39"/></operator></expr>)<pos:position pos:line="41" pos:column="40"/></condition><then pos:line="41" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="42" pos:column="13">l<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">status<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">|=<pos:position pos:line="42" pos:column="25"/></operator> <operator pos:line="42" pos:column="26">(<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">LDAP_IPV4_S<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">)<pos:position pos:line="42" pos:column="39"/></operator></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="43" pos:column="9">z<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name pos:line="43" pos:column="13">NULL<pos:position pos:line="43" pos:column="17"/></name></expr>;<pos:position pos:line="43" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif></if>
    <expr_stmt><expr><name pos:line="45" pos:column="5">s<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <call><name pos:line="45" pos:column="9">strlen<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">ip<pos:position pos:line="45" pos:column="18"/></name></expr></argument>)<pos:position pos:line="45" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="46" pos:column="5">*<pos:position pos:line="46" pos:column="6"/></operator><operator pos:line="46" pos:column="6">(<pos:position pos:line="46" pos:column="7"/></operator><name pos:line="46" pos:column="7">bufa<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">)<pos:position pos:line="46" pos:column="12"/></operator> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <literal type="char" pos:line="46" pos:column="15">'\0'<pos:position pos:line="46" pos:column="19"/></literal></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="47" pos:column="5">*<pos:position pos:line="47" pos:column="6"/></operator><operator pos:line="47" pos:column="6">(<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">bufb<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">)<pos:position pos:line="47" pos:column="12"/></operator> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <literal type="char" pos:line="47" pos:column="15">'\0'<pos:position pos:line="47" pos:column="19"/></literal></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="48" pos:column="5">*<pos:position pos:line="48" pos:column="6"/></operator><operator pos:line="48" pos:column="6">(<pos:position pos:line="48" pos:column="7"/></operator><name pos:line="48" pos:column="7">obj<pos:position pos:line="48" pos:column="10"/></name><operator pos:line="48" pos:column="10">)<pos:position pos:line="48" pos:column="11"/></operator> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <literal type="char" pos:line="48" pos:column="14">'\0'<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="49" pos:column="5">/* StringSplit() will zero out bufa &amp; obj at each call */</comment>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">memset<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name><name pos:line="50" pos:column="12">l<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">search_ip<pos:position pos:line="50" pos:column="24"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="50" pos:column="26">'\0'<pos:position pos:line="50" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="32">sizeof<argument_list pos:line="50" pos:column="38">(<argument><expr><name><name pos:line="50" pos:column="39">l<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">search_ip<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">xstrncpy<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">bufa<pos:position pos:line="51" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="20">ip<pos:position pos:line="51" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="24">sizeof<argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">bufa<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>                       <comment type="block" pos:line="51" pos:column="61">/* To avoid segfaults, use bufa instead of ip */</comment>
    <expr_stmt><expr><name pos:line="52" pos:column="5">swi<pos:position pos:line="52" pos:column="8"/></name> <operator pos:line="52" pos:column="9">=<pos:position pos:line="52" pos:column="10"/></operator> <literal type="number" pos:line="52" pos:column="11">0<pos:position pos:line="52" pos:column="12"/></literal></expr>;<pos:position pos:line="52" pos:column="13"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name><name pos:line="53" pos:column="9">l<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">status<pos:position pos:line="53" pos:column="18"/></name></name> <operator pos:line="53" pos:column="19">&amp;<pos:position pos:line="53" pos:column="24"/></operator> <name pos:line="53" pos:column="21">LDAP_IPV6_S<pos:position pos:line="53" pos:column="32"/></name></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33"> <block pos:line="53" pos:column="34">{
        <comment type="block" pos:line="54" pos:column="9">/* Search for :: in string */</comment>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">(<pos:position pos:line="55" pos:column="14"/></operator><name><name pos:line="55" pos:column="14">bufa<pos:position pos:line="55" pos:column="18"/></name><index pos:line="55" pos:column="18">[<expr><literal type="number" pos:line="55" pos:column="19">0<pos:position pos:line="55" pos:column="20"/></literal></expr>]<pos:position pos:line="55" pos:column="21"/></index></name> <operator pos:line="55" pos:column="22">==<pos:position pos:line="55" pos:column="24"/></operator> <literal type="char" pos:line="55" pos:column="25">':'<pos:position pos:line="55" pos:column="28"/></literal><operator pos:line="55" pos:column="28">)<pos:position pos:line="55" pos:column="29"/></operator> <operator pos:line="55" pos:column="30">&amp;&amp;<pos:position pos:line="55" pos:column="40"/></operator> <operator pos:line="55" pos:column="33">(<pos:position pos:line="55" pos:column="34"/></operator><name><name pos:line="55" pos:column="34">bufa<pos:position pos:line="55" pos:column="38"/></name><index pos:line="55" pos:column="38">[<expr><literal type="number" pos:line="55" pos:column="39">1<pos:position pos:line="55" pos:column="40"/></literal></expr>]<pos:position pos:line="55" pos:column="41"/></index></name> <operator pos:line="55" pos:column="42">==<pos:position pos:line="55" pos:column="44"/></operator> <literal type="char" pos:line="55" pos:column="45">':'<pos:position pos:line="55" pos:column="48"/></literal><operator pos:line="55" pos:column="48">)<pos:position pos:line="55" pos:column="49"/></operator></expr>)<pos:position pos:line="55" pos:column="50"/></condition><then pos:line="55" pos:column="50"> <block pos:line="55" pos:column="51">{
            <comment type="block" pos:line="56" pos:column="13">/* bufa starts with a ::, so just copy and clear */</comment>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">xstrncpy<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">bufb<pos:position pos:line="57" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="28">bufa<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="57" pos:column="34">sizeof<argument_list pos:line="57" pos:column="40">(<argument><expr><name pos:line="57" pos:column="41">bufb<pos:position pos:line="57" pos:column="45"/></name></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="58" pos:column="13">*<pos:position pos:line="58" pos:column="14"/></operator><operator pos:line="58" pos:column="14">(<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="15">bufa<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">)<pos:position pos:line="58" pos:column="20"/></operator> <operator pos:line="58" pos:column="21">=<pos:position pos:line="58" pos:column="22"/></operator> <literal type="char" pos:line="58" pos:column="23">'\0'<pos:position pos:line="58" pos:column="27"/></literal></expr>;<pos:position pos:line="58" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="59" pos:column="13">++<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="15">swi<pos:position pos:line="59" pos:column="18"/></name></expr>;<pos:position pos:line="59" pos:column="19"/></expr_stmt>                              <comment type="block" pos:line="59" pos:column="49">/* Indicates that there is a bufb */</comment>
        }<pos:position pos:line="60" pos:column="10"/></block></then> <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if <condition pos:line="60" pos:column="19">(<expr><operator pos:line="60" pos:column="20">(<pos:position pos:line="60" pos:column="21"/></operator><name><name pos:line="60" pos:column="21">bufa<pos:position pos:line="60" pos:column="25"/></name><index pos:line="60" pos:column="25">[<expr><literal type="number" pos:line="60" pos:column="26">0<pos:position pos:line="60" pos:column="27"/></literal></expr>]<pos:position pos:line="60" pos:column="28"/></index></name> <operator pos:line="60" pos:column="29">==<pos:position pos:line="60" pos:column="31"/></operator> <literal type="char" pos:line="60" pos:column="32">':'<pos:position pos:line="60" pos:column="35"/></literal><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator> <operator pos:line="60" pos:column="37">&amp;&amp;<pos:position pos:line="60" pos:column="47"/></operator> <operator pos:line="60" pos:column="40">(<pos:position pos:line="60" pos:column="41"/></operator><name><name pos:line="60" pos:column="41">bufa<pos:position pos:line="60" pos:column="45"/></name><index pos:line="60" pos:column="45">[<expr><literal type="number" pos:line="60" pos:column="46">1<pos:position pos:line="60" pos:column="47"/></literal></expr>]<pos:position pos:line="60" pos:column="48"/></index></name> <operator pos:line="60" pos:column="49">!=<pos:position pos:line="60" pos:column="51"/></operator> <literal type="char" pos:line="60" pos:column="52">':'<pos:position pos:line="60" pos:column="55"/></literal><operator pos:line="60" pos:column="55">)<pos:position pos:line="60" pos:column="56"/></operator></expr>)<pos:position pos:line="60" pos:column="57"/></condition><then pos:line="60" pos:column="57"> <block pos:line="60" pos:column="58">{
            <comment type="block" pos:line="61" pos:column="13">/* bufa starts with a :, a typo so just fill in a ':', cat and clear */</comment>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">bufb<pos:position pos:line="62" pos:column="17"/></name><index pos:line="62" pos:column="17">[<expr><literal type="number" pos:line="62" pos:column="18">0<pos:position pos:line="62" pos:column="19"/></literal></expr>]<pos:position pos:line="62" pos:column="20"/></index></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <literal type="char" pos:line="62" pos:column="23">':'<pos:position pos:line="62" pos:column="26"/></literal></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">strncat<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">bufb<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="27">bufa<pos:position pos:line="63" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="33">strlen<pos:position pos:line="63" pos:column="39"/></name><argument_list pos:line="63" pos:column="39">(<argument><expr><name pos:line="63" pos:column="40">bufa<pos:position pos:line="63" pos:column="44"/></name></expr></argument>)<pos:position pos:line="63" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="64" pos:column="13">*<pos:position pos:line="64" pos:column="14"/></operator><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">bufa<pos:position pos:line="64" pos:column="19"/></name><operator pos:line="64" pos:column="19">)<pos:position pos:line="64" pos:column="20"/></operator> <operator pos:line="64" pos:column="21">=<pos:position pos:line="64" pos:column="22"/></operator> <literal type="char" pos:line="64" pos:column="23">'\0'<pos:position pos:line="64" pos:column="27"/></literal></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="65" pos:column="13">++<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="15">swi<pos:position pos:line="65" pos:column="18"/></name></expr>;<pos:position pos:line="65" pos:column="19"/></expr_stmt>                              <comment type="block" pos:line="65" pos:column="49">/* Indicates that there is a bufb */</comment>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if></elseif> <else pos:line="66" pos:column="11">else <block pos:line="66" pos:column="16">{
            <expr_stmt><expr><name pos:line="67" pos:column="13">p<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <call><name pos:line="67" pos:column="17">strstr<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><name pos:line="67" pos:column="24">bufa<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="30">"::"<pos:position pos:line="67" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">p<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">!=<pos:position pos:line="68" pos:column="21"/></operator> <name pos:line="68" pos:column="22">NULL<pos:position pos:line="68" pos:column="26"/></name></expr>)<pos:position pos:line="68" pos:column="27"/></condition><then pos:line="68" pos:column="27"> <block pos:line="68" pos:column="28">{
                <comment type="block" pos:line="69" pos:column="17">/* Found it, break bufa down and split into bufb here */</comment>
                <expr_stmt><expr><operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><operator pos:line="70" pos:column="18">(<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="19">bufb<pos:position pos:line="70" pos:column="23"/></name><operator pos:line="70" pos:column="23">)<pos:position pos:line="70" pos:column="24"/></operator> <operator pos:line="70" pos:column="25">=<pos:position pos:line="70" pos:column="26"/></operator> <literal type="char" pos:line="70" pos:column="27">'\0'<pos:position pos:line="70" pos:column="31"/></literal></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><name pos:line="71" pos:column="17">i<pos:position pos:line="71" pos:column="18"/></name> <operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator> <call><name pos:line="71" pos:column="21">strlen<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">p<pos:position pos:line="71" pos:column="29"/></name></expr></argument>)<pos:position pos:line="71" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">memcpy<pos:position pos:line="72" pos:column="23"/></name><argument_list pos:line="72" pos:column="23">(<argument><expr><name pos:line="72" pos:column="24">bufb<pos:position pos:line="72" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">p<pos:position pos:line="72" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="33">i<pos:position pos:line="72" pos:column="34"/></name></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="73" pos:column="17">*<pos:position pos:line="73" pos:column="18"/></operator><name pos:line="73" pos:column="18">p<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <literal type="char" pos:line="73" pos:column="22">'\0'<pos:position pos:line="73" pos:column="26"/></literal></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">bufb<pos:position pos:line="74" pos:column="21"/></name><index pos:line="74" pos:column="21">[<expr><name pos:line="74" pos:column="22">i<pos:position pos:line="74" pos:column="23"/></name></expr>]<pos:position pos:line="74" pos:column="24"/></index></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <literal type="char" pos:line="74" pos:column="27">'\0'<pos:position pos:line="74" pos:column="31"/></literal></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="75" pos:column="17">++<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="19">swi<pos:position pos:line="75" pos:column="22"/></name></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>                              <comment type="block" pos:line="75" pos:column="53">/* Indicates that there is a bufb */</comment>
            }<pos:position pos:line="76" pos:column="14"/></block></then></if>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="79" pos:column="5">s<pos:position pos:line="79" pos:column="6"/></name> <operator pos:line="79" pos:column="7">=<pos:position pos:line="79" pos:column="8"/></operator> <call><name pos:line="79" pos:column="9">strlen<pos:position pos:line="79" pos:column="15"/></name><argument_list pos:line="79" pos:column="15">(<argument><expr><name pos:line="79" pos:column="16">bufa<pos:position pos:line="79" pos:column="20"/></name></expr></argument>)<pos:position pos:line="79" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="22"/></expr_stmt>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">s<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">&lt;<pos:position pos:line="80" pos:column="15"/></operator> <literal type="number" pos:line="80" pos:column="13">1<pos:position pos:line="80" pos:column="14"/></literal></expr>)<pos:position pos:line="80" pos:column="15"/></condition><then pos:line="80" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="9">s<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <call><name pos:line="81" pos:column="13">strlen<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">(<argument><expr><name pos:line="81" pos:column="20">bufb<pos:position pos:line="81" pos:column="24"/></name></expr></argument>)<pos:position pos:line="81" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="26"/></expr_stmt></block></then></if>
    <while pos:line="82" pos:column="5">while <condition pos:line="82" pos:column="11">(<expr><name pos:line="82" pos:column="12">s<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">&gt;<pos:position pos:line="82" pos:column="18"/></operator> <literal type="number" pos:line="82" pos:column="16">0<pos:position pos:line="82" pos:column="17"/></literal></expr>)<pos:position pos:line="82" pos:column="18"/></condition> <block pos:line="82" pos:column="19">{
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><operator pos:line="83" pos:column="13">(<pos:position pos:line="83" pos:column="14"/></operator><name><name pos:line="83" pos:column="14">l<pos:position pos:line="83" pos:column="15"/></name><operator pos:line="83" pos:column="15">-&gt;<pos:position pos:line="83" pos:column="20"/></operator><name pos:line="83" pos:column="17">status<pos:position pos:line="83" pos:column="23"/></name></name> <operator pos:line="83" pos:column="24">&amp;<pos:position pos:line="83" pos:column="29"/></operator> <name pos:line="83" pos:column="26">LDAP_IPV4_S<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">)<pos:position pos:line="83" pos:column="38"/></operator> <operator pos:line="83" pos:column="39">&amp;&amp;<pos:position pos:line="83" pos:column="49"/></operator> <operator pos:line="83" pos:column="42">(<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="43">swi<pos:position pos:line="83" pos:column="46"/></name> <operator pos:line="83" pos:column="47">==<pos:position pos:line="83" pos:column="49"/></operator> <literal type="number" pos:line="83" pos:column="50">0<pos:position pos:line="83" pos:column="51"/></literal><operator pos:line="83" pos:column="51">)<pos:position pos:line="83" pos:column="52"/></operator></expr>)<pos:position pos:line="83" pos:column="53"/></condition><then pos:line="83" pos:column="53"> <block pos:line="83" pos:column="54">{
            <comment type="block" pos:line="84" pos:column="13">/* Break down IPv4 address  */</comment>
            <expr_stmt><expr><name pos:line="85" pos:column="13">t<pos:position pos:line="85" pos:column="14"/></name> <operator pos:line="85" pos:column="15">=<pos:position pos:line="85" pos:column="16"/></operator> <call><name pos:line="85" pos:column="17">StringSplit<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">bufa<pos:position pos:line="85" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="35">'.'<pos:position pos:line="85" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="40">obj<pos:position pos:line="85" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="45">sizeof<argument_list pos:line="85" pos:column="51">(<argument><expr><name pos:line="85" pos:column="52">obj<pos:position pos:line="85" pos:column="55"/></name></expr></argument>)<pos:position pos:line="85" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="58"/></expr_stmt>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">t<pos:position pos:line="86" pos:column="18"/></name> <operator pos:line="86" pos:column="19">&gt;<pos:position pos:line="86" pos:column="23"/></operator> <literal type="number" pos:line="86" pos:column="21">0<pos:position pos:line="86" pos:column="22"/></literal></expr>)<pos:position pos:line="86" pos:column="23"/></condition><then pos:line="86" pos:column="23"> <block pos:line="86" pos:column="24">{
                <expr_stmt><expr><name pos:line="87" pos:column="17">errno<pos:position pos:line="87" pos:column="22"/></name> <operator pos:line="87" pos:column="23">=<pos:position pos:line="87" pos:column="24"/></operator> <literal type="number" pos:line="87" pos:column="25">0<pos:position pos:line="87" pos:column="26"/></literal></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="88" pos:column="17">x<pos:position pos:line="88" pos:column="18"/></name> <operator pos:line="88" pos:column="19">=<pos:position pos:line="88" pos:column="20"/></operator> <call><name pos:line="88" pos:column="21">strtol<pos:position pos:line="88" pos:column="27"/></name><argument_list pos:line="88" pos:column="27">(<argument><expr><name pos:line="88" pos:column="28">obj<pos:position pos:line="88" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="33">(<pos:position pos:line="88" pos:column="34"/></operator><name pos:line="88" pos:column="34">char<pos:position pos:line="88" pos:column="38"/></name> <operator pos:line="88" pos:column="39">*<pos:position pos:line="88" pos:column="40"/></operator><operator pos:line="88" pos:column="40">*<pos:position pos:line="88" pos:column="41"/></operator><operator pos:line="88" pos:column="41">)<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="42">NULL<pos:position pos:line="88" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="48">10<pos:position pos:line="88" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="52"/></expr_stmt>
                <if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><operator pos:line="89" pos:column="21">(<pos:position pos:line="89" pos:column="22"/></operator><operator pos:line="89" pos:column="22">(<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="23">x<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">&lt;<pos:position pos:line="89" pos:column="29"/></operator> <literal type="number" pos:line="89" pos:column="27">0<pos:position pos:line="89" pos:column="28"/></literal><operator pos:line="89" pos:column="28">)<pos:position pos:line="89" pos:column="29"/></operator> <operator pos:line="89" pos:column="30">||<pos:position pos:line="89" pos:column="32"/></operator> <operator pos:line="89" pos:column="33">(<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="34">x<pos:position pos:line="89" pos:column="35"/></name> <operator pos:line="89" pos:column="36">&gt;<pos:position pos:line="89" pos:column="40"/></operator> <literal type="number" pos:line="89" pos:column="38">255<pos:position pos:line="89" pos:column="41"/></literal><operator pos:line="89" pos:column="41">)<pos:position pos:line="89" pos:column="42"/></operator><operator pos:line="89" pos:column="42">)<pos:position pos:line="89" pos:column="43"/></operator> <operator pos:line="89" pos:column="44">||<pos:position pos:line="89" pos:column="46"/></operator> <operator pos:line="89" pos:column="47">(<pos:position pos:line="89" pos:column="48"/></operator><operator pos:line="89" pos:column="48">(<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="49">errno<pos:position pos:line="89" pos:column="54"/></name> <operator pos:line="89" pos:column="55">!=<pos:position pos:line="89" pos:column="57"/></operator> <literal type="number" pos:line="89" pos:column="58">0<pos:position pos:line="89" pos:column="59"/></literal><operator pos:line="89" pos:column="59">)<pos:position pos:line="89" pos:column="60"/></operator> <operator pos:line="89" pos:column="61">&amp;&amp;<pos:position pos:line="89" pos:column="71"/></operator> <operator pos:line="89" pos:column="64">(<pos:position pos:line="89" pos:column="65"/></operator><name pos:line="89" pos:column="65">x<pos:position pos:line="89" pos:column="66"/></name> <operator pos:line="89" pos:column="67">==<pos:position pos:line="89" pos:column="69"/></operator> <literal type="number" pos:line="89" pos:column="70">0<pos:position pos:line="89" pos:column="71"/></literal><operator pos:line="89" pos:column="71">)<pos:position pos:line="89" pos:column="72"/></operator><operator pos:line="89" pos:column="72">)<pos:position pos:line="89" pos:column="73"/></operator> <operator pos:line="89" pos:column="74">||<pos:position pos:line="89" pos:column="76"/></operator> <operator pos:line="89" pos:column="77">(<pos:position pos:line="89" pos:column="78"/></operator><operator pos:line="89" pos:column="78">(<pos:position pos:line="89" pos:column="79"/></operator><name><name pos:line="89" pos:column="79">obj<pos:position pos:line="89" pos:column="82"/></name><index pos:line="89" pos:column="82">[<expr><literal type="number" pos:line="89" pos:column="83">0<pos:position pos:line="89" pos:column="84"/></literal></expr>]<pos:position pos:line="89" pos:column="85"/></index></name> <operator pos:line="89" pos:column="86">!=<pos:position pos:line="89" pos:column="88"/></operator> <literal type="char" pos:line="89" pos:column="89">'0'<pos:position pos:line="89" pos:column="92"/></literal><operator pos:line="89" pos:column="92">)<pos:position pos:line="89" pos:column="93"/></operator> <operator pos:line="89" pos:column="94">&amp;&amp;<pos:position pos:line="89" pos:column="104"/></operator> <operator pos:line="89" pos:column="97">(<pos:position pos:line="89" pos:column="98"/></operator><name pos:line="89" pos:column="98">x<pos:position pos:line="89" pos:column="99"/></name> <operator pos:line="89" pos:column="100">==<pos:position pos:line="89" pos:column="102"/></operator> <literal type="number" pos:line="89" pos:column="103">0<pos:position pos:line="89" pos:column="104"/></literal><operator pos:line="89" pos:column="104">)<pos:position pos:line="89" pos:column="105"/></operator><operator pos:line="89" pos:column="105">)<pos:position pos:line="89" pos:column="106"/></operator></expr>)<pos:position pos:line="89" pos:column="107"/></condition><then pos:line="89" pos:column="107">
                    <block type="pseudo"><return pos:line="90" pos:column="21">return <expr><name pos:line="90" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="90" pos:column="40"/></name></expr>;<pos:position pos:line="90" pos:column="41"/></return></block></then></if>                        <comment type="block" pos:line="90" pos:column="65">/* Out of bounds -- Invalid address */</comment>
                <expr_stmt><expr><call><name pos:line="91" pos:column="17">memset<pos:position pos:line="91" pos:column="23"/></name><argument_list pos:line="91" pos:column="23">(<argument><expr><name pos:line="91" pos:column="24">hexc<pos:position pos:line="91" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="91" pos:column="30">'\0'<pos:position pos:line="91" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="36">sizeof<argument_list pos:line="91" pos:column="42">(<argument><expr><name pos:line="91" pos:column="43">hexc<pos:position pos:line="91" pos:column="47"/></name></expr></argument>)<pos:position pos:line="91" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="50"/></expr_stmt>
                <decl_stmt><decl><type><name pos:line="92" pos:column="17">int<pos:position pos:line="92" pos:column="20"/></name></type> <name pos:line="92" pos:column="21">hlen<pos:position pos:line="92" pos:column="25"/></name> <init pos:line="92" pos:column="26">= <expr><call><name pos:line="92" pos:column="28">snprintf<pos:position pos:line="92" pos:column="36"/></name><argument_list pos:line="92" pos:column="36">(<argument><expr><name pos:line="92" pos:column="37">hexc<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="43">sizeof<argument_list pos:line="92" pos:column="49">(<argument><expr><name pos:line="92" pos:column="50">hexc<pos:position pos:line="92" pos:column="54"/></name></expr></argument>)<pos:position pos:line="92" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="57">"%02X"<pos:position pos:line="92" pos:column="63"/></literal></expr></argument>, <argument><expr><operator pos:line="92" pos:column="65">(<pos:position pos:line="92" pos:column="66"/></operator><name pos:line="92" pos:column="66">int<pos:position pos:line="92" pos:column="69"/></name><operator pos:line="92" pos:column="69">)<pos:position pos:line="92" pos:column="70"/></operator><name pos:line="92" pos:column="70">x<pos:position pos:line="92" pos:column="71"/></name></expr></argument>)<pos:position pos:line="92" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="92" pos:column="73"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">strncat<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name><name pos:line="93" pos:column="25">l<pos:position pos:line="93" pos:column="26"/></name><operator pos:line="93" pos:column="26">-&gt;<pos:position pos:line="93" pos:column="31"/></operator><name pos:line="93" pos:column="28">search_ip<pos:position pos:line="93" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="39">hexc<pos:position pos:line="93" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="45">hlen<pos:position pos:line="93" pos:column="49"/></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="94" pos:column="14"/></block></then> <else pos:line="94" pos:column="15">else
                <block type="pseudo"><break pos:line="95" pos:column="17">break;<pos:position pos:line="95" pos:column="23"/></break></block></else></if>                              <comment type="block" pos:line="95" pos:column="53">/* reached end of octet */</comment>
        }<pos:position pos:line="96" pos:column="10"/></block></then> <elseif pos:line="96" pos:column="11">else <if pos:line="96" pos:column="16">if <condition pos:line="96" pos:column="19">(<expr><name><name pos:line="96" pos:column="20">l<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">status<pos:position pos:line="96" pos:column="29"/></name></name> <operator pos:line="96" pos:column="30">&amp;<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="32">LDAP_IPV6_S<pos:position pos:line="96" pos:column="43"/></name></expr>)<pos:position pos:line="96" pos:column="44"/></condition><then pos:line="96" pos:column="44"> <block pos:line="96" pos:column="45">{
            <comment type="block" pos:line="97" pos:column="13">/* Break down IPv6 address */</comment>
            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><name pos:line="98" pos:column="17">swi<pos:position pos:line="98" pos:column="20"/></name> <operator pos:line="98" pos:column="21">&gt;<pos:position pos:line="98" pos:column="25"/></operator> <literal type="number" pos:line="98" pos:column="23">1<pos:position pos:line="98" pos:column="24"/></literal></expr>)<pos:position pos:line="98" pos:column="25"/></condition><then pos:line="98" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="17">t<pos:position pos:line="99" pos:column="18"/></name> <operator pos:line="99" pos:column="19">=<pos:position pos:line="99" pos:column="20"/></operator> <call><name pos:line="99" pos:column="21">StringSplit<pos:position pos:line="99" pos:column="32"/></name><argument_list pos:line="99" pos:column="32">(<argument><expr><name pos:line="99" pos:column="33">bufb<pos:position pos:line="99" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="99" pos:column="39">':'<pos:position pos:line="99" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="44">obj<pos:position pos:line="99" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="49">sizeof<argument_list pos:line="99" pos:column="55">(<argument><expr><name pos:line="99" pos:column="56">obj<pos:position pos:line="99" pos:column="59"/></name></expr></argument>)<pos:position pos:line="99" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="62"/></expr_stmt></block></then>           <comment type="block" pos:line="99" pos:column="73">/* After "::" */</comment>
            <else pos:line="100" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="17">t<pos:position pos:line="101" pos:column="18"/></name> <operator pos:line="101" pos:column="19">=<pos:position pos:line="101" pos:column="20"/></operator> <call><name pos:line="101" pos:column="21">StringSplit<pos:position pos:line="101" pos:column="32"/></name><argument_list pos:line="101" pos:column="32">(<argument><expr><name pos:line="101" pos:column="33">bufa<pos:position pos:line="101" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="101" pos:column="39">':'<pos:position pos:line="101" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="44">obj<pos:position pos:line="101" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="101" pos:column="49">sizeof<argument_list pos:line="101" pos:column="55">(<argument><expr><name pos:line="101" pos:column="56">obj<pos:position pos:line="101" pos:column="59"/></name></expr></argument>)<pos:position pos:line="101" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="62"/></expr_stmt></block></else></if>           <comment type="block" pos:line="101" pos:column="73">/* Before "::" */</comment>
            <comment type="block" pos:line="102" pos:column="13">/* Convert octet by size (t) - and fill 0's */</comment>
            <switch pos:line="103" pos:column="13">switch <condition pos:line="103" pos:column="20">(<expr><name pos:line="103" pos:column="21">t<pos:position pos:line="103" pos:column="22"/></name></expr>)<pos:position pos:line="103" pos:column="23"/></condition> <block pos:line="103" pos:column="24">{                            <comment type="block" pos:line="103" pos:column="53">/* IPv6 is already in HEX, copy contents */</comment>
            <case pos:line="104" pos:column="13">case <expr><literal type="number" pos:line="104" pos:column="18">4<pos:position pos:line="104" pos:column="19"/></literal></expr>:<pos:position pos:line="104" pos:column="20"/></case>
                <expr_stmt><expr><name><name pos:line="105" pos:column="17">hexc<pos:position pos:line="105" pos:column="21"/></name><index pos:line="105" pos:column="21">[<expr><literal type="number" pos:line="105" pos:column="22">0<pos:position pos:line="105" pos:column="23"/></literal></expr>]<pos:position pos:line="105" pos:column="24"/></index></name> <operator pos:line="105" pos:column="25">=<pos:position pos:line="105" pos:column="26"/></operator> <operator pos:line="105" pos:column="27">(<pos:position pos:line="105" pos:column="28"/></operator><name pos:line="105" pos:column="28">char<pos:position pos:line="105" pos:column="32"/></name><operator pos:line="105" pos:column="32">)<pos:position pos:line="105" pos:column="33"/></operator> <call><name pos:line="105" pos:column="34">toupper<pos:position pos:line="105" pos:column="41"/></name><argument_list pos:line="105" pos:column="41">(<argument><expr><operator pos:line="105" pos:column="42">(<pos:position pos:line="105" pos:column="43"/></operator><name pos:line="105" pos:column="43">int<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">)<pos:position pos:line="105" pos:column="47"/></operator><name><name pos:line="105" pos:column="47">obj<pos:position pos:line="105" pos:column="50"/></name><index pos:line="105" pos:column="50">[<expr><literal type="number" pos:line="105" pos:column="51">0<pos:position pos:line="105" pos:column="52"/></literal></expr>]<pos:position pos:line="105" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="106" pos:column="17">i<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <operator pos:line="106" pos:column="21">(<pos:position pos:line="106" pos:column="22"/></operator><name pos:line="106" pos:column="22">int<pos:position pos:line="106" pos:column="25"/></name><operator pos:line="106" pos:column="25">)<pos:position pos:line="106" pos:column="26"/></operator><name><name pos:line="106" pos:column="26">hexc<pos:position pos:line="106" pos:column="30"/></name><index pos:line="106" pos:column="30">[<expr><literal type="number" pos:line="106" pos:column="31">0<pos:position pos:line="106" pos:column="32"/></literal></expr>]<pos:position pos:line="106" pos:column="33"/></index></name></expr>;<pos:position pos:line="106" pos:column="34"/></expr_stmt>
                <if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><operator pos:line="107" pos:column="21">!<pos:position pos:line="107" pos:column="22"/></operator><call><name pos:line="107" pos:column="22">isxdigit<pos:position pos:line="107" pos:column="30"/></name><argument_list pos:line="107" pos:column="30">(<argument><expr><name pos:line="107" pos:column="31">i<pos:position pos:line="107" pos:column="32"/></name></expr></argument>)<pos:position pos:line="107" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="34"/></condition><then pos:line="107" pos:column="34">
                    <block type="pseudo"><return pos:line="108" pos:column="21">return <expr><name pos:line="108" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="108" pos:column="40"/></name></expr>;<pos:position pos:line="108" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="108" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="109" pos:column="17">hexc<pos:position pos:line="109" pos:column="21"/></name><index pos:line="109" pos:column="21">[<expr><literal type="number" pos:line="109" pos:column="22">1<pos:position pos:line="109" pos:column="23"/></literal></expr>]<pos:position pos:line="109" pos:column="24"/></index></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <operator pos:line="109" pos:column="27">(<pos:position pos:line="109" pos:column="28"/></operator><name pos:line="109" pos:column="28">char<pos:position pos:line="109" pos:column="32"/></name><operator pos:line="109" pos:column="32">)<pos:position pos:line="109" pos:column="33"/></operator> <call><name pos:line="109" pos:column="34">toupper<pos:position pos:line="109" pos:column="41"/></name><argument_list pos:line="109" pos:column="41">(<argument><expr><operator pos:line="109" pos:column="42">(<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="43">int<pos:position pos:line="109" pos:column="46"/></name><operator pos:line="109" pos:column="46">)<pos:position pos:line="109" pos:column="47"/></operator><name><name pos:line="109" pos:column="47">obj<pos:position pos:line="109" pos:column="50"/></name><index pos:line="109" pos:column="50">[<expr><literal type="number" pos:line="109" pos:column="51">1<pos:position pos:line="109" pos:column="52"/></literal></expr>]<pos:position pos:line="109" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="109" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="110" pos:column="17">i<pos:position pos:line="110" pos:column="18"/></name> <operator pos:line="110" pos:column="19">=<pos:position pos:line="110" pos:column="20"/></operator> <operator pos:line="110" pos:column="21">(<pos:position pos:line="110" pos:column="22"/></operator><name pos:line="110" pos:column="22">int<pos:position pos:line="110" pos:column="25"/></name><operator pos:line="110" pos:column="25">)<pos:position pos:line="110" pos:column="26"/></operator><name><name pos:line="110" pos:column="26">hexc<pos:position pos:line="110" pos:column="30"/></name><index pos:line="110" pos:column="30">[<expr><literal type="number" pos:line="110" pos:column="31">1<pos:position pos:line="110" pos:column="32"/></literal></expr>]<pos:position pos:line="110" pos:column="33"/></index></name></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt>
                <if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><operator pos:line="111" pos:column="21">!<pos:position pos:line="111" pos:column="22"/></operator><call><name pos:line="111" pos:column="22">isxdigit<pos:position pos:line="111" pos:column="30"/></name><argument_list pos:line="111" pos:column="30">(<argument><expr><name pos:line="111" pos:column="31">i<pos:position pos:line="111" pos:column="32"/></name></expr></argument>)<pos:position pos:line="111" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="34"/></condition><then pos:line="111" pos:column="34">
                    <block type="pseudo"><return pos:line="112" pos:column="21">return <expr><name pos:line="112" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="112" pos:column="40"/></name></expr>;<pos:position pos:line="112" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="112" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="113" pos:column="17">hexc<pos:position pos:line="113" pos:column="21"/></name><index pos:line="113" pos:column="21">[<expr><literal type="number" pos:line="113" pos:column="22">2<pos:position pos:line="113" pos:column="23"/></literal></expr>]<pos:position pos:line="113" pos:column="24"/></index></name> <operator pos:line="113" pos:column="25">=<pos:position pos:line="113" pos:column="26"/></operator> <literal type="char" pos:line="113" pos:column="27">'\0'<pos:position pos:line="113" pos:column="31"/></literal></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="114" pos:column="17">strncat<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name><name pos:line="114" pos:column="25">l<pos:position pos:line="114" pos:column="26"/></name><operator pos:line="114" pos:column="26">-&gt;<pos:position pos:line="114" pos:column="31"/></operator><name pos:line="114" pos:column="28">search_ip<pos:position pos:line="114" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="39">hexc<pos:position pos:line="114" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="45">2<pos:position pos:line="114" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="115" pos:column="17">hexc<pos:position pos:line="115" pos:column="21"/></name><index pos:line="115" pos:column="21">[<expr><literal type="number" pos:line="115" pos:column="22">0<pos:position pos:line="115" pos:column="23"/></literal></expr>]<pos:position pos:line="115" pos:column="24"/></index></name> <operator pos:line="115" pos:column="25">=<pos:position pos:line="115" pos:column="26"/></operator> <operator pos:line="115" pos:column="27">(<pos:position pos:line="115" pos:column="28"/></operator><name pos:line="115" pos:column="28">char<pos:position pos:line="115" pos:column="32"/></name><operator pos:line="115" pos:column="32">)<pos:position pos:line="115" pos:column="33"/></operator> <call><name pos:line="115" pos:column="34">toupper<pos:position pos:line="115" pos:column="41"/></name><argument_list pos:line="115" pos:column="41">(<argument><expr><operator pos:line="115" pos:column="42">(<pos:position pos:line="115" pos:column="43"/></operator><name pos:line="115" pos:column="43">int<pos:position pos:line="115" pos:column="46"/></name><operator pos:line="115" pos:column="46">)<pos:position pos:line="115" pos:column="47"/></operator><name><name pos:line="115" pos:column="47">obj<pos:position pos:line="115" pos:column="50"/></name><index pos:line="115" pos:column="50">[<expr><literal type="number" pos:line="115" pos:column="51">2<pos:position pos:line="115" pos:column="52"/></literal></expr>]<pos:position pos:line="115" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="115" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="116" pos:column="17">i<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">=<pos:position pos:line="116" pos:column="20"/></operator> <operator pos:line="116" pos:column="21">(<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="22">int<pos:position pos:line="116" pos:column="25"/></name><operator pos:line="116" pos:column="25">)<pos:position pos:line="116" pos:column="26"/></operator><name><name pos:line="116" pos:column="26">hexc<pos:position pos:line="116" pos:column="30"/></name><index pos:line="116" pos:column="30">[<expr><literal type="number" pos:line="116" pos:column="31">0<pos:position pos:line="116" pos:column="32"/></literal></expr>]<pos:position pos:line="116" pos:column="33"/></index></name></expr>;<pos:position pos:line="116" pos:column="34"/></expr_stmt>
                <if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><operator pos:line="117" pos:column="21">!<pos:position pos:line="117" pos:column="22"/></operator><call><name pos:line="117" pos:column="22">isxdigit<pos:position pos:line="117" pos:column="30"/></name><argument_list pos:line="117" pos:column="30">(<argument><expr><name pos:line="117" pos:column="31">i<pos:position pos:line="117" pos:column="32"/></name></expr></argument>)<pos:position pos:line="117" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="34"/></condition><then pos:line="117" pos:column="34">
                    <block type="pseudo"><return pos:line="118" pos:column="21">return <expr><name pos:line="118" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="118" pos:column="40"/></name></expr>;<pos:position pos:line="118" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="118" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="119" pos:column="17">hexc<pos:position pos:line="119" pos:column="21"/></name><index pos:line="119" pos:column="21">[<expr><literal type="number" pos:line="119" pos:column="22">1<pos:position pos:line="119" pos:column="23"/></literal></expr>]<pos:position pos:line="119" pos:column="24"/></index></name> <operator pos:line="119" pos:column="25">=<pos:position pos:line="119" pos:column="26"/></operator> <operator pos:line="119" pos:column="27">(<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="28">char<pos:position pos:line="119" pos:column="32"/></name><operator pos:line="119" pos:column="32">)<pos:position pos:line="119" pos:column="33"/></operator> <call><name pos:line="119" pos:column="34">toupper<pos:position pos:line="119" pos:column="41"/></name><argument_list pos:line="119" pos:column="41">(<argument><expr><operator pos:line="119" pos:column="42">(<pos:position pos:line="119" pos:column="43"/></operator><name pos:line="119" pos:column="43">int<pos:position pos:line="119" pos:column="46"/></name><operator pos:line="119" pos:column="46">)<pos:position pos:line="119" pos:column="47"/></operator><name><name pos:line="119" pos:column="47">obj<pos:position pos:line="119" pos:column="50"/></name><index pos:line="119" pos:column="50">[<expr><literal type="number" pos:line="119" pos:column="51">3<pos:position pos:line="119" pos:column="52"/></literal></expr>]<pos:position pos:line="119" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="119" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="120" pos:column="17">i<pos:position pos:line="120" pos:column="18"/></name> <operator pos:line="120" pos:column="19">=<pos:position pos:line="120" pos:column="20"/></operator> <operator pos:line="120" pos:column="21">(<pos:position pos:line="120" pos:column="22"/></operator><name pos:line="120" pos:column="22">int<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">)<pos:position pos:line="120" pos:column="26"/></operator><name><name pos:line="120" pos:column="26">hexc<pos:position pos:line="120" pos:column="30"/></name><index pos:line="120" pos:column="30">[<expr><literal type="number" pos:line="120" pos:column="31">1<pos:position pos:line="120" pos:column="32"/></literal></expr>]<pos:position pos:line="120" pos:column="33"/></index></name></expr>;<pos:position pos:line="120" pos:column="34"/></expr_stmt>
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><call><name pos:line="121" pos:column="22">isxdigit<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><name pos:line="121" pos:column="31">i<pos:position pos:line="121" pos:column="32"/></name></expr></argument>)<pos:position pos:line="121" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="34"/></condition><then pos:line="121" pos:column="34">
                    <block type="pseudo"><return pos:line="122" pos:column="21">return <expr><name pos:line="122" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="122" pos:column="40"/></name></expr>;<pos:position pos:line="122" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="122" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="123" pos:column="17">hexc<pos:position pos:line="123" pos:column="21"/></name><index pos:line="123" pos:column="21">[<expr><literal type="number" pos:line="123" pos:column="22">2<pos:position pos:line="123" pos:column="23"/></literal></expr>]<pos:position pos:line="123" pos:column="24"/></index></name> <operator pos:line="123" pos:column="25">=<pos:position pos:line="123" pos:column="26"/></operator> <literal type="char" pos:line="123" pos:column="27">'\0'<pos:position pos:line="123" pos:column="31"/></literal></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="124" pos:column="17">strncat<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name><name pos:line="124" pos:column="25">l<pos:position pos:line="124" pos:column="26"/></name><operator pos:line="124" pos:column="26">-&gt;<pos:position pos:line="124" pos:column="31"/></operator><name pos:line="124" pos:column="28">search_ip<pos:position pos:line="124" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="39">hexc<pos:position pos:line="124" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="45">2<pos:position pos:line="124" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="48"/></expr_stmt>
                <break pos:line="125" pos:column="17">break;<pos:position pos:line="125" pos:column="23"/></break>
            <case pos:line="126" pos:column="13">case <expr><literal type="number" pos:line="126" pos:column="18">3<pos:position pos:line="126" pos:column="19"/></literal></expr>:<pos:position pos:line="126" pos:column="20"/></case>
                <expr_stmt><expr><name><name pos:line="127" pos:column="17">hexc<pos:position pos:line="127" pos:column="21"/></name><index pos:line="127" pos:column="21">[<expr><literal type="number" pos:line="127" pos:column="22">0<pos:position pos:line="127" pos:column="23"/></literal></expr>]<pos:position pos:line="127" pos:column="24"/></index></name> <operator pos:line="127" pos:column="25">=<pos:position pos:line="127" pos:column="26"/></operator> <literal type="char" pos:line="127" pos:column="27">'0'<pos:position pos:line="127" pos:column="30"/></literal></expr>;<pos:position pos:line="127" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="128" pos:column="17">hexc<pos:position pos:line="128" pos:column="21"/></name><index pos:line="128" pos:column="21">[<expr><literal type="number" pos:line="128" pos:column="22">1<pos:position pos:line="128" pos:column="23"/></literal></expr>]<pos:position pos:line="128" pos:column="24"/></index></name> <operator pos:line="128" pos:column="25">=<pos:position pos:line="128" pos:column="26"/></operator> <operator pos:line="128" pos:column="27">(<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="28">char<pos:position pos:line="128" pos:column="32"/></name><operator pos:line="128" pos:column="32">)<pos:position pos:line="128" pos:column="33"/></operator> <call><name pos:line="128" pos:column="34">toupper<pos:position pos:line="128" pos:column="41"/></name><argument_list pos:line="128" pos:column="41">(<argument><expr><operator pos:line="128" pos:column="42">(<pos:position pos:line="128" pos:column="43"/></operator><name pos:line="128" pos:column="43">int<pos:position pos:line="128" pos:column="46"/></name><operator pos:line="128" pos:column="46">)<pos:position pos:line="128" pos:column="47"/></operator><name><name pos:line="128" pos:column="47">obj<pos:position pos:line="128" pos:column="50"/></name><index pos:line="128" pos:column="50">[<expr><literal type="number" pos:line="128" pos:column="51">0<pos:position pos:line="128" pos:column="52"/></literal></expr>]<pos:position pos:line="128" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="129" pos:column="17">i<pos:position pos:line="129" pos:column="18"/></name> <operator pos:line="129" pos:column="19">=<pos:position pos:line="129" pos:column="20"/></operator> <operator pos:line="129" pos:column="21">(<pos:position pos:line="129" pos:column="22"/></operator><name pos:line="129" pos:column="22">int<pos:position pos:line="129" pos:column="25"/></name><operator pos:line="129" pos:column="25">)<pos:position pos:line="129" pos:column="26"/></operator><name><name pos:line="129" pos:column="26">hexc<pos:position pos:line="129" pos:column="30"/></name><index pos:line="129" pos:column="30">[<expr><literal type="number" pos:line="129" pos:column="31">1<pos:position pos:line="129" pos:column="32"/></literal></expr>]<pos:position pos:line="129" pos:column="33"/></index></name></expr>;<pos:position pos:line="129" pos:column="34"/></expr_stmt>
                <if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><operator pos:line="130" pos:column="21">!<pos:position pos:line="130" pos:column="22"/></operator><call><name pos:line="130" pos:column="22">isxdigit<pos:position pos:line="130" pos:column="30"/></name><argument_list pos:line="130" pos:column="30">(<argument><expr><name pos:line="130" pos:column="31">i<pos:position pos:line="130" pos:column="32"/></name></expr></argument>)<pos:position pos:line="130" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="34"/></condition><then pos:line="130" pos:column="34">
                    <block type="pseudo"><return pos:line="131" pos:column="21">return <expr><name pos:line="131" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="131" pos:column="40"/></name></expr>;<pos:position pos:line="131" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="131" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="132" pos:column="17">hexc<pos:position pos:line="132" pos:column="21"/></name><index pos:line="132" pos:column="21">[<expr><literal type="number" pos:line="132" pos:column="22">2<pos:position pos:line="132" pos:column="23"/></literal></expr>]<pos:position pos:line="132" pos:column="24"/></index></name> <operator pos:line="132" pos:column="25">=<pos:position pos:line="132" pos:column="26"/></operator> <literal type="char" pos:line="132" pos:column="27">'\0'<pos:position pos:line="132" pos:column="31"/></literal></expr>;<pos:position pos:line="132" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="133" pos:column="17">strncat<pos:position pos:line="133" pos:column="24"/></name><argument_list pos:line="133" pos:column="24">(<argument><expr><name><name pos:line="133" pos:column="25">l<pos:position pos:line="133" pos:column="26"/></name><operator pos:line="133" pos:column="26">-&gt;<pos:position pos:line="133" pos:column="31"/></operator><name pos:line="133" pos:column="28">search_ip<pos:position pos:line="133" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">hexc<pos:position pos:line="133" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="45">2<pos:position pos:line="133" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="134" pos:column="17">hexc<pos:position pos:line="134" pos:column="21"/></name><index pos:line="134" pos:column="21">[<expr><literal type="number" pos:line="134" pos:column="22">0<pos:position pos:line="134" pos:column="23"/></literal></expr>]<pos:position pos:line="134" pos:column="24"/></index></name> <operator pos:line="134" pos:column="25">=<pos:position pos:line="134" pos:column="26"/></operator> <operator pos:line="134" pos:column="27">(<pos:position pos:line="134" pos:column="28"/></operator><name pos:line="134" pos:column="28">char<pos:position pos:line="134" pos:column="32"/></name><operator pos:line="134" pos:column="32">)<pos:position pos:line="134" pos:column="33"/></operator> <call><name pos:line="134" pos:column="34">toupper<pos:position pos:line="134" pos:column="41"/></name><argument_list pos:line="134" pos:column="41">(<argument><expr><operator pos:line="134" pos:column="42">(<pos:position pos:line="134" pos:column="43"/></operator><name pos:line="134" pos:column="43">int<pos:position pos:line="134" pos:column="46"/></name><operator pos:line="134" pos:column="46">)<pos:position pos:line="134" pos:column="47"/></operator><name><name pos:line="134" pos:column="47">obj<pos:position pos:line="134" pos:column="50"/></name><index pos:line="134" pos:column="50">[<expr><literal type="number" pos:line="134" pos:column="51">1<pos:position pos:line="134" pos:column="52"/></literal></expr>]<pos:position pos:line="134" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="134" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="135" pos:column="17">i<pos:position pos:line="135" pos:column="18"/></name> <operator pos:line="135" pos:column="19">=<pos:position pos:line="135" pos:column="20"/></operator> <operator pos:line="135" pos:column="21">(<pos:position pos:line="135" pos:column="22"/></operator><name pos:line="135" pos:column="22">int<pos:position pos:line="135" pos:column="25"/></name><operator pos:line="135" pos:column="25">)<pos:position pos:line="135" pos:column="26"/></operator><name><name pos:line="135" pos:column="26">hexc<pos:position pos:line="135" pos:column="30"/></name><index pos:line="135" pos:column="30">[<expr><literal type="number" pos:line="135" pos:column="31">0<pos:position pos:line="135" pos:column="32"/></literal></expr>]<pos:position pos:line="135" pos:column="33"/></index></name></expr>;<pos:position pos:line="135" pos:column="34"/></expr_stmt>
                <if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><call><name pos:line="136" pos:column="22">isxdigit<pos:position pos:line="136" pos:column="30"/></name><argument_list pos:line="136" pos:column="30">(<argument><expr><name pos:line="136" pos:column="31">i<pos:position pos:line="136" pos:column="32"/></name></expr></argument>)<pos:position pos:line="136" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="34"/></condition><then pos:line="136" pos:column="34">
                    <block type="pseudo"><return pos:line="137" pos:column="21">return <expr><name pos:line="137" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="137" pos:column="40"/></name></expr>;<pos:position pos:line="137" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="137" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="138" pos:column="17">hexc<pos:position pos:line="138" pos:column="21"/></name><index pos:line="138" pos:column="21">[<expr><literal type="number" pos:line="138" pos:column="22">1<pos:position pos:line="138" pos:column="23"/></literal></expr>]<pos:position pos:line="138" pos:column="24"/></index></name> <operator pos:line="138" pos:column="25">=<pos:position pos:line="138" pos:column="26"/></operator> <operator pos:line="138" pos:column="27">(<pos:position pos:line="138" pos:column="28"/></operator><name pos:line="138" pos:column="28">char<pos:position pos:line="138" pos:column="32"/></name><operator pos:line="138" pos:column="32">)<pos:position pos:line="138" pos:column="33"/></operator> <call><name pos:line="138" pos:column="34">toupper<pos:position pos:line="138" pos:column="41"/></name><argument_list pos:line="138" pos:column="41">(<argument><expr><operator pos:line="138" pos:column="42">(<pos:position pos:line="138" pos:column="43"/></operator><name pos:line="138" pos:column="43">int<pos:position pos:line="138" pos:column="46"/></name><operator pos:line="138" pos:column="46">)<pos:position pos:line="138" pos:column="47"/></operator><name><name pos:line="138" pos:column="47">obj<pos:position pos:line="138" pos:column="50"/></name><index pos:line="138" pos:column="50">[<expr><literal type="number" pos:line="138" pos:column="51">2<pos:position pos:line="138" pos:column="52"/></literal></expr>]<pos:position pos:line="138" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="138" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="139" pos:column="17">i<pos:position pos:line="139" pos:column="18"/></name> <operator pos:line="139" pos:column="19">=<pos:position pos:line="139" pos:column="20"/></operator> <operator pos:line="139" pos:column="21">(<pos:position pos:line="139" pos:column="22"/></operator><name pos:line="139" pos:column="22">int<pos:position pos:line="139" pos:column="25"/></name><operator pos:line="139" pos:column="25">)<pos:position pos:line="139" pos:column="26"/></operator><name><name pos:line="139" pos:column="26">hexc<pos:position pos:line="139" pos:column="30"/></name><index pos:line="139" pos:column="30">[<expr><literal type="number" pos:line="139" pos:column="31">1<pos:position pos:line="139" pos:column="32"/></literal></expr>]<pos:position pos:line="139" pos:column="33"/></index></name></expr>;<pos:position pos:line="139" pos:column="34"/></expr_stmt>
                <if pos:line="140" pos:column="17">if <condition pos:line="140" pos:column="20">(<expr><operator pos:line="140" pos:column="21">!<pos:position pos:line="140" pos:column="22"/></operator><call><name pos:line="140" pos:column="22">isxdigit<pos:position pos:line="140" pos:column="30"/></name><argument_list pos:line="140" pos:column="30">(<argument><expr><name pos:line="140" pos:column="31">i<pos:position pos:line="140" pos:column="32"/></name></expr></argument>)<pos:position pos:line="140" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="34"/></condition><then pos:line="140" pos:column="34">
                    <block type="pseudo"><return pos:line="141" pos:column="21">return <expr><name pos:line="141" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="141" pos:column="40"/></name></expr>;<pos:position pos:line="141" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="141" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="142" pos:column="17">hexc<pos:position pos:line="142" pos:column="21"/></name><index pos:line="142" pos:column="21">[<expr><literal type="number" pos:line="142" pos:column="22">2<pos:position pos:line="142" pos:column="23"/></literal></expr>]<pos:position pos:line="142" pos:column="24"/></index></name> <operator pos:line="142" pos:column="25">=<pos:position pos:line="142" pos:column="26"/></operator> <literal type="char" pos:line="142" pos:column="27">'\0'<pos:position pos:line="142" pos:column="31"/></literal></expr>;<pos:position pos:line="142" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="143" pos:column="17">strncat<pos:position pos:line="143" pos:column="24"/></name><argument_list pos:line="143" pos:column="24">(<argument><expr><name><name pos:line="143" pos:column="25">l<pos:position pos:line="143" pos:column="26"/></name><operator pos:line="143" pos:column="26">-&gt;<pos:position pos:line="143" pos:column="31"/></operator><name pos:line="143" pos:column="28">search_ip<pos:position pos:line="143" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="39">hexc<pos:position pos:line="143" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="143" pos:column="45">2<pos:position pos:line="143" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="48"/></expr_stmt>
                <break pos:line="144" pos:column="17">break;<pos:position pos:line="144" pos:column="23"/></break>
            <case pos:line="145" pos:column="13">case <expr><literal type="number" pos:line="145" pos:column="18">2<pos:position pos:line="145" pos:column="19"/></literal></expr>:<pos:position pos:line="145" pos:column="20"/></case>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">strncat<pos:position pos:line="146" pos:column="24"/></name><argument_list pos:line="146" pos:column="24">(<argument><expr><name><name pos:line="146" pos:column="25">l<pos:position pos:line="146" pos:column="26"/></name><operator pos:line="146" pos:column="26">-&gt;<pos:position pos:line="146" pos:column="31"/></operator><name pos:line="146" pos:column="28">search_ip<pos:position pos:line="146" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="39">"00"<pos:position pos:line="146" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="45">2<pos:position pos:line="146" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="147" pos:column="17">hexc<pos:position pos:line="147" pos:column="21"/></name><index pos:line="147" pos:column="21">[<expr><literal type="number" pos:line="147" pos:column="22">0<pos:position pos:line="147" pos:column="23"/></literal></expr>]<pos:position pos:line="147" pos:column="24"/></index></name> <operator pos:line="147" pos:column="25">=<pos:position pos:line="147" pos:column="26"/></operator> <operator pos:line="147" pos:column="27">(<pos:position pos:line="147" pos:column="28"/></operator><name pos:line="147" pos:column="28">char<pos:position pos:line="147" pos:column="32"/></name><operator pos:line="147" pos:column="32">)<pos:position pos:line="147" pos:column="33"/></operator> <call><name pos:line="147" pos:column="34">toupper<pos:position pos:line="147" pos:column="41"/></name><argument_list pos:line="147" pos:column="41">(<argument><expr><operator pos:line="147" pos:column="42">(<pos:position pos:line="147" pos:column="43"/></operator><name pos:line="147" pos:column="43">int<pos:position pos:line="147" pos:column="46"/></name><operator pos:line="147" pos:column="46">)<pos:position pos:line="147" pos:column="47"/></operator><name><name pos:line="147" pos:column="47">obj<pos:position pos:line="147" pos:column="50"/></name><index pos:line="147" pos:column="50">[<expr><literal type="number" pos:line="147" pos:column="51">0<pos:position pos:line="147" pos:column="52"/></literal></expr>]<pos:position pos:line="147" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="147" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="148" pos:column="17">i<pos:position pos:line="148" pos:column="18"/></name> <operator pos:line="148" pos:column="19">=<pos:position pos:line="148" pos:column="20"/></operator> <operator pos:line="148" pos:column="21">(<pos:position pos:line="148" pos:column="22"/></operator><name pos:line="148" pos:column="22">int<pos:position pos:line="148" pos:column="25"/></name><operator pos:line="148" pos:column="25">)<pos:position pos:line="148" pos:column="26"/></operator><name><name pos:line="148" pos:column="26">hexc<pos:position pos:line="148" pos:column="30"/></name><index pos:line="148" pos:column="30">[<expr><literal type="number" pos:line="148" pos:column="31">0<pos:position pos:line="148" pos:column="32"/></literal></expr>]<pos:position pos:line="148" pos:column="33"/></index></name></expr>;<pos:position pos:line="148" pos:column="34"/></expr_stmt>
                <if pos:line="149" pos:column="17">if <condition pos:line="149" pos:column="20">(<expr><operator pos:line="149" pos:column="21">!<pos:position pos:line="149" pos:column="22"/></operator><call><name pos:line="149" pos:column="22">isxdigit<pos:position pos:line="149" pos:column="30"/></name><argument_list pos:line="149" pos:column="30">(<argument><expr><name pos:line="149" pos:column="31">i<pos:position pos:line="149" pos:column="32"/></name></expr></argument>)<pos:position pos:line="149" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="34"/></condition><then pos:line="149" pos:column="34">
                    <block type="pseudo"><return pos:line="150" pos:column="21">return <expr><name pos:line="150" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="150" pos:column="40"/></name></expr>;<pos:position pos:line="150" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="150" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="151" pos:column="17">hexc<pos:position pos:line="151" pos:column="21"/></name><index pos:line="151" pos:column="21">[<expr><literal type="number" pos:line="151" pos:column="22">1<pos:position pos:line="151" pos:column="23"/></literal></expr>]<pos:position pos:line="151" pos:column="24"/></index></name> <operator pos:line="151" pos:column="25">=<pos:position pos:line="151" pos:column="26"/></operator> <operator pos:line="151" pos:column="27">(<pos:position pos:line="151" pos:column="28"/></operator><name pos:line="151" pos:column="28">char<pos:position pos:line="151" pos:column="32"/></name><operator pos:line="151" pos:column="32">)<pos:position pos:line="151" pos:column="33"/></operator> <call><name pos:line="151" pos:column="34">toupper<pos:position pos:line="151" pos:column="41"/></name><argument_list pos:line="151" pos:column="41">(<argument><expr><operator pos:line="151" pos:column="42">(<pos:position pos:line="151" pos:column="43"/></operator><name pos:line="151" pos:column="43">int<pos:position pos:line="151" pos:column="46"/></name><operator pos:line="151" pos:column="46">)<pos:position pos:line="151" pos:column="47"/></operator><name><name pos:line="151" pos:column="47">obj<pos:position pos:line="151" pos:column="50"/></name><index pos:line="151" pos:column="50">[<expr><literal type="number" pos:line="151" pos:column="51">1<pos:position pos:line="151" pos:column="52"/></literal></expr>]<pos:position pos:line="151" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="151" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="152" pos:column="17">i<pos:position pos:line="152" pos:column="18"/></name> <operator pos:line="152" pos:column="19">=<pos:position pos:line="152" pos:column="20"/></operator> <operator pos:line="152" pos:column="21">(<pos:position pos:line="152" pos:column="22"/></operator><name pos:line="152" pos:column="22">int<pos:position pos:line="152" pos:column="25"/></name><operator pos:line="152" pos:column="25">)<pos:position pos:line="152" pos:column="26"/></operator><name><name pos:line="152" pos:column="26">hexc<pos:position pos:line="152" pos:column="30"/></name><index pos:line="152" pos:column="30">[<expr><literal type="number" pos:line="152" pos:column="31">1<pos:position pos:line="152" pos:column="32"/></literal></expr>]<pos:position pos:line="152" pos:column="33"/></index></name></expr>;<pos:position pos:line="152" pos:column="34"/></expr_stmt>
                <if pos:line="153" pos:column="17">if <condition pos:line="153" pos:column="20">(<expr><operator pos:line="153" pos:column="21">!<pos:position pos:line="153" pos:column="22"/></operator><call><name pos:line="153" pos:column="22">isxdigit<pos:position pos:line="153" pos:column="30"/></name><argument_list pos:line="153" pos:column="30">(<argument><expr><name pos:line="153" pos:column="31">i<pos:position pos:line="153" pos:column="32"/></name></expr></argument>)<pos:position pos:line="153" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="34"/></condition><then pos:line="153" pos:column="34">
                    <block type="pseudo"><return pos:line="154" pos:column="21">return <expr><name pos:line="154" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="154" pos:column="40"/></name></expr>;<pos:position pos:line="154" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="154" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="155" pos:column="17">hexc<pos:position pos:line="155" pos:column="21"/></name><index pos:line="155" pos:column="21">[<expr><literal type="number" pos:line="155" pos:column="22">2<pos:position pos:line="155" pos:column="23"/></literal></expr>]<pos:position pos:line="155" pos:column="24"/></index></name> <operator pos:line="155" pos:column="25">=<pos:position pos:line="155" pos:column="26"/></operator> <literal type="char" pos:line="155" pos:column="27">'\0'<pos:position pos:line="155" pos:column="31"/></literal></expr>;<pos:position pos:line="155" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="156" pos:column="17">strncat<pos:position pos:line="156" pos:column="24"/></name><argument_list pos:line="156" pos:column="24">(<argument><expr><name><name pos:line="156" pos:column="25">l<pos:position pos:line="156" pos:column="26"/></name><operator pos:line="156" pos:column="26">-&gt;<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="28">search_ip<pos:position pos:line="156" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="156" pos:column="39">hexc<pos:position pos:line="156" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="156" pos:column="45">2<pos:position pos:line="156" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="48"/></expr_stmt>
                <break pos:line="157" pos:column="17">break;<pos:position pos:line="157" pos:column="23"/></break>
            <case pos:line="158" pos:column="13">case <expr><literal type="number" pos:line="158" pos:column="18">1<pos:position pos:line="158" pos:column="19"/></literal></expr>:<pos:position pos:line="158" pos:column="20"/></case>
                <expr_stmt><expr><call><name pos:line="159" pos:column="17">strncat<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><name><name pos:line="159" pos:column="25">l<pos:position pos:line="159" pos:column="26"/></name><operator pos:line="159" pos:column="26">-&gt;<pos:position pos:line="159" pos:column="31"/></operator><name pos:line="159" pos:column="28">search_ip<pos:position pos:line="159" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="39">"00"<pos:position pos:line="159" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="159" pos:column="45">2<pos:position pos:line="159" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="160" pos:column="17">hexc<pos:position pos:line="160" pos:column="21"/></name><index pos:line="160" pos:column="21">[<expr><literal type="number" pos:line="160" pos:column="22">0<pos:position pos:line="160" pos:column="23"/></literal></expr>]<pos:position pos:line="160" pos:column="24"/></index></name> <operator pos:line="160" pos:column="25">=<pos:position pos:line="160" pos:column="26"/></operator> <literal type="char" pos:line="160" pos:column="27">'0'<pos:position pos:line="160" pos:column="30"/></literal></expr>;<pos:position pos:line="160" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="161" pos:column="17">hexc<pos:position pos:line="161" pos:column="21"/></name><index pos:line="161" pos:column="21">[<expr><literal type="number" pos:line="161" pos:column="22">1<pos:position pos:line="161" pos:column="23"/></literal></expr>]<pos:position pos:line="161" pos:column="24"/></index></name> <operator pos:line="161" pos:column="25">=<pos:position pos:line="161" pos:column="26"/></operator> <operator pos:line="161" pos:column="27">(<pos:position pos:line="161" pos:column="28"/></operator><name pos:line="161" pos:column="28">char<pos:position pos:line="161" pos:column="32"/></name><operator pos:line="161" pos:column="32">)<pos:position pos:line="161" pos:column="33"/></operator> <call><name pos:line="161" pos:column="34">toupper<pos:position pos:line="161" pos:column="41"/></name><argument_list pos:line="161" pos:column="41">(<argument><expr><operator pos:line="161" pos:column="42">(<pos:position pos:line="161" pos:column="43"/></operator><name pos:line="161" pos:column="43">int<pos:position pos:line="161" pos:column="46"/></name><operator pos:line="161" pos:column="46">)<pos:position pos:line="161" pos:column="47"/></operator><name><name pos:line="161" pos:column="47">obj<pos:position pos:line="161" pos:column="50"/></name><index pos:line="161" pos:column="50">[<expr><literal type="number" pos:line="161" pos:column="51">0<pos:position pos:line="161" pos:column="52"/></literal></expr>]<pos:position pos:line="161" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="161" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><name pos:line="162" pos:column="17">i<pos:position pos:line="162" pos:column="18"/></name> <operator pos:line="162" pos:column="19">=<pos:position pos:line="162" pos:column="20"/></operator> <operator pos:line="162" pos:column="21">(<pos:position pos:line="162" pos:column="22"/></operator><name pos:line="162" pos:column="22">int<pos:position pos:line="162" pos:column="25"/></name><operator pos:line="162" pos:column="25">)<pos:position pos:line="162" pos:column="26"/></operator><name><name pos:line="162" pos:column="26">hexc<pos:position pos:line="162" pos:column="30"/></name><index pos:line="162" pos:column="30">[<expr><literal type="number" pos:line="162" pos:column="31">1<pos:position pos:line="162" pos:column="32"/></literal></expr>]<pos:position pos:line="162" pos:column="33"/></index></name></expr>;<pos:position pos:line="162" pos:column="34"/></expr_stmt>
                <if pos:line="163" pos:column="17">if <condition pos:line="163" pos:column="20">(<expr><operator pos:line="163" pos:column="21">!<pos:position pos:line="163" pos:column="22"/></operator><call><name pos:line="163" pos:column="22">isxdigit<pos:position pos:line="163" pos:column="30"/></name><argument_list pos:line="163" pos:column="30">(<argument><expr><name pos:line="163" pos:column="31">i<pos:position pos:line="163" pos:column="32"/></name></expr></argument>)<pos:position pos:line="163" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="163" pos:column="34"/></condition><then pos:line="163" pos:column="34">
                    <block type="pseudo"><return pos:line="164" pos:column="21">return <expr><name pos:line="164" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="164" pos:column="40"/></name></expr>;<pos:position pos:line="164" pos:column="41"/></return></block></then></if>                    <comment type="block" pos:line="164" pos:column="61">/* Out of bounds */</comment>
                <expr_stmt><expr><name><name pos:line="165" pos:column="17">hexc<pos:position pos:line="165" pos:column="21"/></name><index pos:line="165" pos:column="21">[<expr><literal type="number" pos:line="165" pos:column="22">2<pos:position pos:line="165" pos:column="23"/></literal></expr>]<pos:position pos:line="165" pos:column="24"/></index></name> <operator pos:line="165" pos:column="25">=<pos:position pos:line="165" pos:column="26"/></operator> <literal type="char" pos:line="165" pos:column="27">'\0'<pos:position pos:line="165" pos:column="31"/></literal></expr>;<pos:position pos:line="165" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="166" pos:column="17">strncat<pos:position pos:line="166" pos:column="24"/></name><argument_list pos:line="166" pos:column="24">(<argument><expr><name><name pos:line="166" pos:column="25">l<pos:position pos:line="166" pos:column="26"/></name><operator pos:line="166" pos:column="26">-&gt;<pos:position pos:line="166" pos:column="31"/></operator><name pos:line="166" pos:column="28">search_ip<pos:position pos:line="166" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="39">hexc<pos:position pos:line="166" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="45">2<pos:position pos:line="166" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="48"/></expr_stmt>
                <break pos:line="167" pos:column="17">break;<pos:position pos:line="167" pos:column="23"/></break>
            <default pos:line="168" pos:column="13">default:<pos:position pos:line="168" pos:column="21"/></default>
                <if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><name pos:line="169" pos:column="21">t<pos:position pos:line="169" pos:column="22"/></name> <operator pos:line="169" pos:column="23">&gt;<pos:position pos:line="169" pos:column="27"/></operator> <literal type="number" pos:line="169" pos:column="25">4<pos:position pos:line="169" pos:column="26"/></literal></expr>)<pos:position pos:line="169" pos:column="27"/></condition><then pos:line="169" pos:column="27">
                    <block type="pseudo"><return pos:line="170" pos:column="21">return <expr><name pos:line="170" pos:column="28">LDAP_ERR_OOB<pos:position pos:line="170" pos:column="40"/></name></expr>;<pos:position pos:line="170" pos:column="41"/></return></block></then></if>
                <break pos:line="171" pos:column="17">break;<pos:position pos:line="171" pos:column="23"/></break>
            }<pos:position pos:line="172" pos:column="14"/></block></switch>
            <comment type="block" pos:line="173" pos:column="13">/* Code to pad the address with 0's between a '::' */</comment>
            <if pos:line="174" pos:column="13">if <condition pos:line="174" pos:column="16">(<expr><operator pos:line="174" pos:column="17">(<pos:position pos:line="174" pos:column="18"/></operator><call><name pos:line="174" pos:column="18">strlen<pos:position pos:line="174" pos:column="24"/></name><argument_list pos:line="174" pos:column="24">(<argument><expr><name pos:line="174" pos:column="25">bufa<pos:position pos:line="174" pos:column="29"/></name></expr></argument>)<pos:position pos:line="174" pos:column="30"/></argument_list></call> <operator pos:line="174" pos:column="31">==<pos:position pos:line="174" pos:column="33"/></operator> <literal type="number" pos:line="174" pos:column="34">0<pos:position pos:line="174" pos:column="35"/></literal><operator pos:line="174" pos:column="35">)<pos:position pos:line="174" pos:column="36"/></operator> <operator pos:line="174" pos:column="37">&amp;&amp;<pos:position pos:line="174" pos:column="47"/></operator> <operator pos:line="174" pos:column="40">(<pos:position pos:line="174" pos:column="41"/></operator><name pos:line="174" pos:column="41">swi<pos:position pos:line="174" pos:column="44"/></name> <operator pos:line="174" pos:column="45">==<pos:position pos:line="174" pos:column="47"/></operator> <literal type="number" pos:line="174" pos:column="48">1<pos:position pos:line="174" pos:column="49"/></literal><operator pos:line="174" pos:column="49">)<pos:position pos:line="174" pos:column="50"/></operator></expr>)<pos:position pos:line="174" pos:column="51"/></condition><then pos:line="174" pos:column="51"> <block pos:line="174" pos:column="52">{
                <comment type="block" pos:line="175" pos:column="17">/* We are *AT* the split, pad in some 0000 */</comment>
                <expr_stmt><expr><name pos:line="176" pos:column="17">t<pos:position pos:line="176" pos:column="18"/></name> <operator pos:line="176" pos:column="19">=<pos:position pos:line="176" pos:column="20"/></operator> <call><name pos:line="176" pos:column="21">strlen<pos:position pos:line="176" pos:column="27"/></name><argument_list pos:line="176" pos:column="27">(<argument><expr><name pos:line="176" pos:column="28">bufb<pos:position pos:line="176" pos:column="32"/></name></expr></argument>)<pos:position pos:line="176" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="34"/></expr_stmt>
                <comment type="block" pos:line="177" pos:column="17">/* How many ':' exist in bufb ? */</comment>
                <expr_stmt><expr><name pos:line="178" pos:column="17">j<pos:position pos:line="178" pos:column="18"/></name> <operator pos:line="178" pos:column="19">=<pos:position pos:line="178" pos:column="20"/></operator> <literal type="number" pos:line="178" pos:column="21">0<pos:position pos:line="178" pos:column="22"/></literal></expr>;<pos:position pos:line="178" pos:column="23"/></expr_stmt>
                <for pos:line="179" pos:column="17">for <control pos:line="179" pos:column="21">(<init><expr><name pos:line="179" pos:column="22">i<pos:position pos:line="179" pos:column="23"/></name> <operator pos:line="179" pos:column="24">=<pos:position pos:line="179" pos:column="25"/></operator> <literal type="number" pos:line="179" pos:column="26">0<pos:position pos:line="179" pos:column="27"/></literal></expr>;<pos:position pos:line="179" pos:column="28"/></init> <condition><expr><name pos:line="179" pos:column="29">i<pos:position pos:line="179" pos:column="30"/></name> <operator pos:line="179" pos:column="31">&lt;<pos:position pos:line="179" pos:column="35"/></operator> <name pos:line="179" pos:column="33">t<pos:position pos:line="179" pos:column="34"/></name></expr>;<pos:position pos:line="179" pos:column="35"/></condition> <incr><expr><operator pos:line="179" pos:column="36">++<pos:position pos:line="179" pos:column="38"/></operator><name pos:line="179" pos:column="38">i<pos:position pos:line="179" pos:column="39"/></name></expr></incr>)<pos:position pos:line="179" pos:column="40"/></control> <block pos:line="179" pos:column="41">{
                    <if pos:line="180" pos:column="21">if <condition pos:line="180" pos:column="24">(<expr><name><name pos:line="180" pos:column="25">bufb<pos:position pos:line="180" pos:column="29"/></name><index pos:line="180" pos:column="29">[<expr><name pos:line="180" pos:column="30">i<pos:position pos:line="180" pos:column="31"/></name></expr>]<pos:position pos:line="180" pos:column="32"/></index></name> <operator pos:line="180" pos:column="33">==<pos:position pos:line="180" pos:column="35"/></operator> <literal type="char" pos:line="180" pos:column="36">':'<pos:position pos:line="180" pos:column="39"/></literal></expr>)<pos:position pos:line="180" pos:column="40"/></condition><then pos:line="180" pos:column="40">
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="181" pos:column="25">++<pos:position pos:line="181" pos:column="27"/></operator><name pos:line="181" pos:column="27">j<pos:position pos:line="181" pos:column="28"/></name></expr>;<pos:position pos:line="181" pos:column="29"/></expr_stmt></block></then></if>
                }<pos:position pos:line="182" pos:column="18"/></block></for>
                <expr_stmt><expr><operator pos:line="183" pos:column="17">--<pos:position pos:line="183" pos:column="19"/></operator><name pos:line="183" pos:column="19">j<pos:position pos:line="183" pos:column="20"/></name></expr>;<pos:position pos:line="183" pos:column="21"/></expr_stmt>                                <comment type="block" pos:line="183" pos:column="53">/* Preceding "::" doesn't count */</comment>
                <expr_stmt><expr><name pos:line="184" pos:column="17">t<pos:position pos:line="184" pos:column="18"/></name> <operator pos:line="184" pos:column="19">=<pos:position pos:line="184" pos:column="20"/></operator> <literal type="number" pos:line="184" pos:column="21">8<pos:position pos:line="184" pos:column="22"/></literal> <operator pos:line="184" pos:column="23">-<pos:position pos:line="184" pos:column="24"/></operator> <operator pos:line="184" pos:column="25">(<pos:position pos:line="184" pos:column="26"/></operator><call><name pos:line="184" pos:column="26">strlen<pos:position pos:line="184" pos:column="32"/></name><argument_list pos:line="184" pos:column="32">(<argument><expr><name><name pos:line="184" pos:column="33">l<pos:position pos:line="184" pos:column="34"/></name><operator pos:line="184" pos:column="34">-&gt;<pos:position pos:line="184" pos:column="39"/></operator><name pos:line="184" pos:column="36">search_ip<pos:position pos:line="184" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="184" pos:column="46"/></argument_list></call> <operator pos:line="184" pos:column="47">/<pos:position pos:line="184" pos:column="48"/></operator> <literal type="number" pos:line="184" pos:column="49">4<pos:position pos:line="184" pos:column="50"/></literal><operator pos:line="184" pos:column="50">)<pos:position pos:line="184" pos:column="51"/></operator> <operator pos:line="184" pos:column="52">-<pos:position pos:line="184" pos:column="53"/></operator> <name pos:line="184" pos:column="54">j<pos:position pos:line="184" pos:column="55"/></name></expr>;<pos:position pos:line="184" pos:column="56"/></expr_stmt>         <comment type="block" pos:line="184" pos:column="65">/* Remainder */</comment>
                <if pos:line="185" pos:column="17">if <condition pos:line="185" pos:column="20">(<expr><name pos:line="185" pos:column="21">t<pos:position pos:line="185" pos:column="22"/></name> <operator pos:line="185" pos:column="23">&gt;<pos:position pos:line="185" pos:column="27"/></operator> <literal type="number" pos:line="185" pos:column="25">0<pos:position pos:line="185" pos:column="26"/></literal></expr>)<pos:position pos:line="185" pos:column="27"/></condition><then pos:line="185" pos:column="27"> <block pos:line="185" pos:column="28">{
                    <for pos:line="186" pos:column="21">for <control pos:line="186" pos:column="25">(<init><expr><name pos:line="186" pos:column="26">i<pos:position pos:line="186" pos:column="27"/></name> <operator pos:line="186" pos:column="28">=<pos:position pos:line="186" pos:column="29"/></operator> <literal type="number" pos:line="186" pos:column="30">0<pos:position pos:line="186" pos:column="31"/></literal></expr>;<pos:position pos:line="186" pos:column="32"/></init> <condition><expr><name pos:line="186" pos:column="33">i<pos:position pos:line="186" pos:column="34"/></name> <operator pos:line="186" pos:column="35">&lt;<pos:position pos:line="186" pos:column="39"/></operator> <name pos:line="186" pos:column="37">t<pos:position pos:line="186" pos:column="38"/></name></expr>;<pos:position pos:line="186" pos:column="39"/></condition> <incr><expr><operator pos:line="186" pos:column="40">++<pos:position pos:line="186" pos:column="42"/></operator><name pos:line="186" pos:column="42">i<pos:position pos:line="186" pos:column="43"/></name></expr></incr>)<pos:position pos:line="186" pos:column="44"/></control>
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="187" pos:column="25">strncat<pos:position pos:line="187" pos:column="32"/></name><argument_list pos:line="187" pos:column="32">(<argument><expr><name><name pos:line="187" pos:column="33">l<pos:position pos:line="187" pos:column="34"/></name><operator pos:line="187" pos:column="34">-&gt;<pos:position pos:line="187" pos:column="39"/></operator><name pos:line="187" pos:column="36">search_ip<pos:position pos:line="187" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="187" pos:column="47">"0000"<pos:position pos:line="187" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="187" pos:column="55">4<pos:position pos:line="187" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="58"/></expr_stmt></block></for>
                }<pos:position pos:line="188" pos:column="18"/></block></then></if>
            }<pos:position pos:line="189" pos:column="14"/></block></then></if>
        }<pos:position pos:line="190" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="191" pos:column="9">if <condition pos:line="191" pos:column="12">(<expr><operator pos:line="191" pos:column="13">(<pos:position pos:line="191" pos:column="14"/></operator><name><name pos:line="191" pos:column="14">bufa<pos:position pos:line="191" pos:column="18"/></name><index pos:line="191" pos:column="18">[<expr><literal type="number" pos:line="191" pos:column="19">0<pos:position pos:line="191" pos:column="20"/></literal></expr>]<pos:position pos:line="191" pos:column="21"/></index></name> <operator pos:line="191" pos:column="22">==<pos:position pos:line="191" pos:column="24"/></operator> <literal type="char" pos:line="191" pos:column="25">'\0'<pos:position pos:line="191" pos:column="29"/></literal><operator pos:line="191" pos:column="29">)<pos:position pos:line="191" pos:column="30"/></operator> <operator pos:line="191" pos:column="31">&amp;&amp;<pos:position pos:line="191" pos:column="41"/></operator> <operator pos:line="191" pos:column="34">(<pos:position pos:line="191" pos:column="35"/></operator><name pos:line="191" pos:column="35">swi<pos:position pos:line="191" pos:column="38"/></name> <operator pos:line="191" pos:column="39">&gt;<pos:position pos:line="191" pos:column="43"/></operator> <literal type="number" pos:line="191" pos:column="41">0<pos:position pos:line="191" pos:column="42"/></literal><operator pos:line="191" pos:column="42">)<pos:position pos:line="191" pos:column="43"/></operator></expr>)<pos:position pos:line="191" pos:column="44"/></condition><then pos:line="191" pos:column="44"> <block pos:line="191" pos:column="45">{
            <expr_stmt><expr><name pos:line="192" pos:column="13">s<pos:position pos:line="192" pos:column="14"/></name> <operator pos:line="192" pos:column="15">=<pos:position pos:line="192" pos:column="16"/></operator> <call><name pos:line="192" pos:column="17">strlen<pos:position pos:line="192" pos:column="23"/></name><argument_list pos:line="192" pos:column="23">(<argument><expr><name pos:line="192" pos:column="24">bufb<pos:position pos:line="192" pos:column="28"/></name></expr></argument>)<pos:position pos:line="192" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="193" pos:column="13">++<pos:position pos:line="193" pos:column="15"/></operator><name pos:line="193" pos:column="15">swi<pos:position pos:line="193" pos:column="18"/></name></expr>;<pos:position pos:line="193" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="194" pos:column="10"/></block></then> <else pos:line="194" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="195" pos:column="13">s<pos:position pos:line="195" pos:column="14"/></name> <operator pos:line="195" pos:column="15">=<pos:position pos:line="195" pos:column="16"/></operator> <call><name pos:line="195" pos:column="17">strlen<pos:position pos:line="195" pos:column="23"/></name><argument_list pos:line="195" pos:column="23">(<argument><expr><name pos:line="195" pos:column="24">bufa<pos:position pos:line="195" pos:column="28"/></name></expr></argument>)<pos:position pos:line="195" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="30"/></expr_stmt></block></else></if>
    }<pos:position pos:line="196" pos:column="6"/></block></while>
    <expr_stmt><expr><name pos:line="197" pos:column="5">s<pos:position pos:line="197" pos:column="6"/></name> <operator pos:line="197" pos:column="7">=<pos:position pos:line="197" pos:column="8"/></operator> <call><name pos:line="197" pos:column="9">strlen<pos:position pos:line="197" pos:column="15"/></name><argument_list pos:line="197" pos:column="15">(<argument><expr><name><name pos:line="197" pos:column="16">l<pos:position pos:line="197" pos:column="17"/></name><operator pos:line="197" pos:column="17">-&gt;<pos:position pos:line="197" pos:column="22"/></operator><name pos:line="197" pos:column="19">search_ip<pos:position pos:line="197" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="197" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="199" pos:column="5">/* CHECK sizes of address, truncate or pad */</comment>
    <comment type="block" pos:line="200" pos:column="5">/* if "::" is at end of ip, then pad another block or two */</comment>
    <while pos:line="201" pos:column="5">while <condition pos:line="201" pos:column="11">(<expr><operator pos:line="201" pos:column="12">(<pos:position pos:line="201" pos:column="13"/></operator><name><name pos:line="201" pos:column="13">l<pos:position pos:line="201" pos:column="14"/></name><operator pos:line="201" pos:column="14">-&gt;<pos:position pos:line="201" pos:column="19"/></operator><name pos:line="201" pos:column="16">status<pos:position pos:line="201" pos:column="22"/></name></name> <operator pos:line="201" pos:column="23">&amp;<pos:position pos:line="201" pos:column="28"/></operator> <name pos:line="201" pos:column="25">LDAP_IPV6_S<pos:position pos:line="201" pos:column="36"/></name><operator pos:line="201" pos:column="36">)<pos:position pos:line="201" pos:column="37"/></operator> <operator pos:line="201" pos:column="38">&amp;&amp;<pos:position pos:line="201" pos:column="48"/></operator> <operator pos:line="201" pos:column="41">(<pos:position pos:line="201" pos:column="42"/></operator><name pos:line="201" pos:column="42">s<pos:position pos:line="201" pos:column="43"/></name> <operator pos:line="201" pos:column="44">&lt;<pos:position pos:line="201" pos:column="48"/></operator> <literal type="number" pos:line="201" pos:column="46">32<pos:position pos:line="201" pos:column="48"/></literal><operator pos:line="201" pos:column="48">)<pos:position pos:line="201" pos:column="49"/></operator></expr>)<pos:position pos:line="201" pos:column="50"/></condition> <block pos:line="201" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">strncat<pos:position pos:line="202" pos:column="16"/></name><argument_list pos:line="202" pos:column="16">(<argument><expr><name><name pos:line="202" pos:column="17">l<pos:position pos:line="202" pos:column="18"/></name><operator pos:line="202" pos:column="18">-&gt;<pos:position pos:line="202" pos:column="23"/></operator><name pos:line="202" pos:column="20">search_ip<pos:position pos:line="202" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="31">"0000"<pos:position pos:line="202" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="39">4<pos:position pos:line="202" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="203" pos:column="9">s<pos:position pos:line="203" pos:column="10"/></name> <operator pos:line="203" pos:column="11">=<pos:position pos:line="203" pos:column="12"/></operator> <call><name pos:line="203" pos:column="13">strlen<pos:position pos:line="203" pos:column="19"/></name><argument_list pos:line="203" pos:column="19">(<argument><expr><name><name pos:line="203" pos:column="20">l<pos:position pos:line="203" pos:column="21"/></name><operator pos:line="203" pos:column="21">-&gt;<pos:position pos:line="203" pos:column="26"/></operator><name pos:line="203" pos:column="23">search_ip<pos:position pos:line="203" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="204" pos:column="6"/></block></while>
    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">(<expr><operator pos:line="205" pos:column="9">(<pos:position pos:line="205" pos:column="10"/></operator><name><name pos:line="205" pos:column="10">l<pos:position pos:line="205" pos:column="11"/></name><operator pos:line="205" pos:column="11">-&gt;<pos:position pos:line="205" pos:column="16"/></operator><name pos:line="205" pos:column="13">status<pos:position pos:line="205" pos:column="19"/></name></name> <operator pos:line="205" pos:column="20">&amp;<pos:position pos:line="205" pos:column="25"/></operator> <name pos:line="205" pos:column="22">LDAP_IPV6_S<pos:position pos:line="205" pos:column="33"/></name><operator pos:line="205" pos:column="33">)<pos:position pos:line="205" pos:column="34"/></operator> <operator pos:line="205" pos:column="35">&amp;&amp;<pos:position pos:line="205" pos:column="45"/></operator> <operator pos:line="205" pos:column="38">(<pos:position pos:line="205" pos:column="39"/></operator><name pos:line="205" pos:column="39">s<pos:position pos:line="205" pos:column="40"/></name> <operator pos:line="205" pos:column="41">&gt;<pos:position pos:line="205" pos:column="45"/></operator> <literal type="number" pos:line="205" pos:column="43">32<pos:position pos:line="205" pos:column="45"/></literal><operator pos:line="205" pos:column="45">)<pos:position pos:line="205" pos:column="46"/></operator></expr>)<pos:position pos:line="205" pos:column="47"/></condition><then pos:line="205" pos:column="47"> <block pos:line="205" pos:column="48">{
        <comment type="block" pos:line="206" pos:column="9">/* Too long, truncate */</comment>
        <expr_stmt><expr><name><name pos:line="207" pos:column="9">l<pos:position pos:line="207" pos:column="10"/></name><operator pos:line="207" pos:column="10">-&gt;<pos:position pos:line="207" pos:column="15"/></operator><name pos:line="207" pos:column="12">search_ip<pos:position pos:line="207" pos:column="21"/></name><index pos:line="207" pos:column="21">[<expr><literal type="number" pos:line="207" pos:column="22">32<pos:position pos:line="207" pos:column="24"/></literal></expr>]<pos:position pos:line="207" pos:column="25"/></index></name> <operator pos:line="207" pos:column="26">=<pos:position pos:line="207" pos:column="27"/></operator> <literal type="char" pos:line="207" pos:column="28">'\0'<pos:position pos:line="207" pos:column="32"/></literal></expr>;<pos:position pos:line="207" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="208" pos:column="9">s<pos:position pos:line="208" pos:column="10"/></name> <operator pos:line="208" pos:column="11">=<pos:position pos:line="208" pos:column="12"/></operator> <call><name pos:line="208" pos:column="13">strlen<pos:position pos:line="208" pos:column="19"/></name><argument_list pos:line="208" pos:column="19">(<argument><expr><name><name pos:line="208" pos:column="20">l<pos:position pos:line="208" pos:column="21"/></name><operator pos:line="208" pos:column="21">-&gt;<pos:position pos:line="208" pos:column="26"/></operator><name pos:line="208" pos:column="23">search_ip<pos:position pos:line="208" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="208" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="210" pos:column="5">/* If at end of ip, and its not long enough, then pad another block or two */</comment>
    <while pos:line="211" pos:column="5">while <condition pos:line="211" pos:column="11">(<expr><operator pos:line="211" pos:column="12">(<pos:position pos:line="211" pos:column="13"/></operator><name><name pos:line="211" pos:column="13">l<pos:position pos:line="211" pos:column="14"/></name><operator pos:line="211" pos:column="14">-&gt;<pos:position pos:line="211" pos:column="19"/></operator><name pos:line="211" pos:column="16">status<pos:position pos:line="211" pos:column="22"/></name></name> <operator pos:line="211" pos:column="23">&amp;<pos:position pos:line="211" pos:column="28"/></operator> <name pos:line="211" pos:column="25">LDAP_IPV4_S<pos:position pos:line="211" pos:column="36"/></name><operator pos:line="211" pos:column="36">)<pos:position pos:line="211" pos:column="37"/></operator> <operator pos:line="211" pos:column="38">&amp;&amp;<pos:position pos:line="211" pos:column="48"/></operator> <operator pos:line="211" pos:column="41">(<pos:position pos:line="211" pos:column="42"/></operator><name pos:line="211" pos:column="42">s<pos:position pos:line="211" pos:column="43"/></name> <operator pos:line="211" pos:column="44">&lt;<pos:position pos:line="211" pos:column="48"/></operator> <literal type="number" pos:line="211" pos:column="46">8<pos:position pos:line="211" pos:column="47"/></literal><operator pos:line="211" pos:column="47">)<pos:position pos:line="211" pos:column="48"/></operator></expr>)<pos:position pos:line="211" pos:column="49"/></condition> <block pos:line="211" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="212" pos:column="9">strncat<pos:position pos:line="212" pos:column="16"/></name><argument_list pos:line="212" pos:column="16">(<argument><expr><name><name pos:line="212" pos:column="17">l<pos:position pos:line="212" pos:column="18"/></name><operator pos:line="212" pos:column="18">-&gt;<pos:position pos:line="212" pos:column="23"/></operator><name pos:line="212" pos:column="20">search_ip<pos:position pos:line="212" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="31">"00"<pos:position pos:line="212" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="212" pos:column="37">2<pos:position pos:line="212" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="213" pos:column="9">s<pos:position pos:line="213" pos:column="10"/></name> <operator pos:line="213" pos:column="11">=<pos:position pos:line="213" pos:column="12"/></operator> <call><name pos:line="213" pos:column="13">strlen<pos:position pos:line="213" pos:column="19"/></name><argument_list pos:line="213" pos:column="19">(<argument><expr><name><name pos:line="213" pos:column="20">l<pos:position pos:line="213" pos:column="21"/></name><operator pos:line="213" pos:column="21">-&gt;<pos:position pos:line="213" pos:column="26"/></operator><name pos:line="213" pos:column="23">search_ip<pos:position pos:line="213" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="213" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="214" pos:column="6"/></block></while>
    <if pos:line="215" pos:column="5">if <condition pos:line="215" pos:column="8">(<expr><operator pos:line="215" pos:column="9">(<pos:position pos:line="215" pos:column="10"/></operator><name><name pos:line="215" pos:column="10">l<pos:position pos:line="215" pos:column="11"/></name><operator pos:line="215" pos:column="11">-&gt;<pos:position pos:line="215" pos:column="16"/></operator><name pos:line="215" pos:column="13">status<pos:position pos:line="215" pos:column="19"/></name></name> <operator pos:line="215" pos:column="20">&amp;<pos:position pos:line="215" pos:column="25"/></operator> <name pos:line="215" pos:column="22">LDAP_IPV4_S<pos:position pos:line="215" pos:column="33"/></name><operator pos:line="215" pos:column="33">)<pos:position pos:line="215" pos:column="34"/></operator> <operator pos:line="215" pos:column="35">&amp;&amp;<pos:position pos:line="215" pos:column="45"/></operator> <operator pos:line="215" pos:column="38">(<pos:position pos:line="215" pos:column="39"/></operator><name pos:line="215" pos:column="39">s<pos:position pos:line="215" pos:column="40"/></name> <operator pos:line="215" pos:column="41">&gt;<pos:position pos:line="215" pos:column="45"/></operator> <literal type="number" pos:line="215" pos:column="43">8<pos:position pos:line="215" pos:column="44"/></literal><operator pos:line="215" pos:column="44">)<pos:position pos:line="215" pos:column="45"/></operator></expr>)<pos:position pos:line="215" pos:column="46"/></condition><then pos:line="215" pos:column="46"> <block pos:line="215" pos:column="47">{
        <comment type="block" pos:line="216" pos:column="9">/* Too long, truncate */</comment>
        <expr_stmt><expr><name><name pos:line="217" pos:column="9">l<pos:position pos:line="217" pos:column="10"/></name><operator pos:line="217" pos:column="10">-&gt;<pos:position pos:line="217" pos:column="15"/></operator><name pos:line="217" pos:column="12">search_ip<pos:position pos:line="217" pos:column="21"/></name><index pos:line="217" pos:column="21">[<expr><literal type="number" pos:line="217" pos:column="22">8<pos:position pos:line="217" pos:column="23"/></literal></expr>]<pos:position pos:line="217" pos:column="24"/></index></name> <operator pos:line="217" pos:column="25">=<pos:position pos:line="217" pos:column="26"/></operator> <literal type="char" pos:line="217" pos:column="27">'\0'<pos:position pos:line="217" pos:column="31"/></literal></expr>;<pos:position pos:line="217" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="218" pos:column="9">s<pos:position pos:line="218" pos:column="10"/></name> <operator pos:line="218" pos:column="11">=<pos:position pos:line="218" pos:column="12"/></operator> <call><name pos:line="218" pos:column="13">strlen<pos:position pos:line="218" pos:column="19"/></name><argument_list pos:line="218" pos:column="19">(<argument><expr><name><name pos:line="218" pos:column="20">l<pos:position pos:line="218" pos:column="21"/></name><operator pos:line="218" pos:column="21">-&gt;<pos:position pos:line="218" pos:column="26"/></operator><name pos:line="218" pos:column="23">search_ip<pos:position pos:line="218" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="219" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="221" pos:column="5">/* Completed, s is length of address in HEX */</comment>
    <return pos:line="222" pos:column="5">return <expr><name pos:line="222" pos:column="12">s<pos:position pos:line="222" pos:column="13"/></name></expr>;<pos:position pos:line="222" pos:column="14"/></return>
}<pos:position pos:line="223" pos:column="2"/></block></function></unit>

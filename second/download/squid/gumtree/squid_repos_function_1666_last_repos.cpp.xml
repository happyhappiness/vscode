<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1666_last_repos.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">operator<name pos:line="1" pos:column="14">()<pos:position pos:line="1" pos:column="16"/></name></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">cbdata<pos:position pos:line="1" pos:column="23"/></name> <specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <modifier pos:line="1" pos:column="30">&amp;<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="31">x<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
        <function_decl type="operator"><name><name pos:line="2" pos:column="9">CBDataDumper<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">operator<name pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></name></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">x<pos:position pos:line="2" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>;<pos:position pos:line="2" pos:column="37"/></function_decl>
        <expr_stmt><expr><call><name pos:line="3" pos:column="9">storeAppendPrintf<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">where<pos:position pos:line="3" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="34">"\n"<pos:position pos:line="3" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">storeAppendPrintf<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">where<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"Action\tFile\tLine\n"<pos:position pos:line="4" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="5" pos:column="9">std<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">::<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">for_each<pos:position pos:line="5" pos:column="22"/></name></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><call><name><name pos:line="5" pos:column="24">x<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">calls<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">begin<pos:position pos:line="5" pos:column="37"/></name></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="41">x<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">calls<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="49">end<pos:position pos:line="5" pos:column="52"/></name></name><argument_list pos:line="5" pos:column="52">()<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="56">callDumper<pos:position pos:line="5" pos:column="66"/></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">storeAppendPrintf<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">where<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="34">"\n"<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></function></unit>

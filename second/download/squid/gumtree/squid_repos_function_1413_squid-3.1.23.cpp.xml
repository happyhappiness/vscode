<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1413_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">serverConnectionsOpen<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">void<pos:position pos:line="2" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">clientOpenListenSockets<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">()<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">icpConnectionsOpen<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_HTCP<pos:position pos:line="6" pos:column="13"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">htcpInit<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">()<pos:position pos:line="8" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">SQUID_SNMP<pos:position pos:line="10" pos:column="18"/></name></cpp:ifdef>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">snmpConnectionOpen<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">USE_WCCP<pos:position pos:line="14" pos:column="13"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">wccpConnectionOpen<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">USE_WCCPv2<pos:position pos:line="19" pos:column="15"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">wccp2ConnectionOpen<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">()<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">clientdbInit<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">()<pos:position pos:line="24" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">icmpEngine<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">Open<pos:position pos:line="25" pos:column="20"/></name></name><argument_list pos:line="25" pos:column="20">()<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">netdbInit<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">()<pos:position pos:line="26" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">asnInit<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">()<pos:position pos:line="27" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">ACL<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">::<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">Initialize<pos:position pos:line="28" pos:column="20"/></name></name><argument_list pos:line="28" pos:column="20">()<pos:position pos:line="28" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">peerSelectInit<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">()<pos:position pos:line="29" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">carpInit<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">()<pos:position pos:line="31" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">peerUserHashInit<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">()<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">peerSourceHashInit<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">()<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1975_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CachePeer<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">neighborsDigestSelect<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">HttpRequest<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">request<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">best_p<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="5" pos:column="22"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">best_rtt<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">choice_count<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ichoice_count<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">CachePeer<pos:position pos:line="10" pos:column="14"/></name> <modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">p<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">p_rtt<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">request<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">flags<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">.<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">hierarchical<pos:position pos:line="14" pos:column="37"/></name></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">storeKeyPublicByRequest<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">request<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>

    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">i<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr><operator pos:line="19" pos:column="15">,<pos:position pos:line="19" pos:column="16"/></operator> <expr><name pos:line="19" pos:column="17">p<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">first_ping<pos:position pos:line="19" pos:column="31"/></name></expr>;<pos:position pos:line="19" pos:column="32"/></init> <condition><expr><name pos:line="19" pos:column="33">i<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">++<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="37">&lt;<pos:position pos:line="19" pos:column="41"/></operator> <name><name pos:line="19" pos:column="39">Config<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">npeers<pos:position pos:line="19" pos:column="52"/></name></name></expr>;<pos:position pos:line="19" pos:column="53"/></condition> <incr><expr><name pos:line="19" pos:column="54">p<pos:position pos:line="19" pos:column="55"/></name> <operator pos:line="19" pos:column="56">=<pos:position pos:line="19" pos:column="57"/></operator> <name><name pos:line="19" pos:column="58">p<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">next<pos:position pos:line="19" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="66"/></control> <block pos:line="19" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">lookup_t<pos:position pos:line="20" pos:column="17"/></name></type> <name pos:line="20" pos:column="18">lookup<pos:position pos:line="20" pos:column="24"/></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">p<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16">
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">p<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name><name pos:line="23" pos:column="17">Config<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">peers<pos:position pos:line="23" pos:column="29"/></name></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt></block></then></if>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">==<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="13">first_ping<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">p<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="28" pos:column="9">lookup<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">peerDigestLookup<pos:position pos:line="28" pos:column="34"/></name><argument_list pos:line="28" pos:column="34">(<argument><expr><name pos:line="28" pos:column="35">p<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">request<pos:position pos:line="28" pos:column="45"/></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">lookup<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">LOOKUP_NONE<pos:position pos:line="30" pos:column="34"/></name></expr>)<pos:position pos:line="30" pos:column="35"/></condition><then pos:line="30" pos:column="35">
            <block type="pseudo"><continue pos:line="31" pos:column="13">continue;<pos:position pos:line="31" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><operator pos:line="33" pos:column="9">++<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">choice_count<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">lookup<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">==<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">LOOKUP_MISS<pos:position pos:line="35" pos:column="34"/></name></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35">
            <block type="pseudo"><continue pos:line="36" pos:column="13">continue;<pos:position pos:line="36" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="38" pos:column="9">p_rtt<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">netdbHostRtt<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name><name pos:line="38" pos:column="30">p<pos:position pos:line="38" pos:column="31"/></name><operator pos:line="38" pos:column="31">-&gt;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="33">host<pos:position pos:line="38" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debugs<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="number" pos:line="40" pos:column="16">15<pos:position pos:line="40" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="20">5<pos:position pos:line="40" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="23">"neighborsDigestSelect: peer "<pos:position pos:line="40" pos:column="53"/></literal> <operator pos:line="40" pos:column="54">&lt;&lt;<pos:position pos:line="40" pos:column="62"/></operator> <name><name pos:line="40" pos:column="57">p<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">-&gt;<pos:position pos:line="40" pos:column="63"/></operator><name pos:line="40" pos:column="60">host<pos:position pos:line="40" pos:column="64"/></name></name> <operator pos:line="40" pos:column="65">&lt;&lt;<pos:position pos:line="40" pos:column="73"/></operator> <literal type="string" pos:line="40" pos:column="68">" rtt: "<pos:position pos:line="40" pos:column="76"/></literal> <operator pos:line="40" pos:column="77">&lt;&lt;<pos:position pos:line="40" pos:column="85"/></operator> <name pos:line="40" pos:column="80">p_rtt<pos:position pos:line="40" pos:column="85"/></name></expr></argument>)<pos:position pos:line="40" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="87"/></expr_stmt>

        <comment type="block" pos:line="42" pos:column="9">/* is this CachePeer better than others in terms of rtt ? */</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">best_p<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">||<pos:position pos:line="43" pos:column="23"/></operator> <operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">p_rtt<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&amp;&amp;<pos:position pos:line="43" pos:column="41"/></operator> <name pos:line="43" pos:column="34">p_rtt<pos:position pos:line="43" pos:column="39"/></name> <operator pos:line="43" pos:column="40">&lt;<pos:position pos:line="43" pos:column="44"/></operator> <name pos:line="43" pos:column="42">best_rtt<pos:position pos:line="43" pos:column="50"/></name><operator pos:line="43" pos:column="50">)<pos:position pos:line="43" pos:column="51"/></operator></expr>)<pos:position pos:line="43" pos:column="52"/></condition><then pos:line="43" pos:column="52"> <block pos:line="43" pos:column="53">{
            <expr_stmt><expr><name pos:line="44" pos:column="13">best_p<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">p<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="45" pos:column="13">best_rtt<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">p_rtt<pos:position pos:line="45" pos:column="29"/></name></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name pos:line="47" pos:column="17">p_rtt<pos:position pos:line="47" pos:column="22"/></name></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23">      <comment type="block" pos:line="47" pos:column="29">/* informative choice (aka educated guess) */</comment>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="48" pos:column="17">++<pos:position pos:line="48" pos:column="19"/></operator><name pos:line="48" pos:column="19">ichoice_count<pos:position pos:line="48" pos:column="32"/></name></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="50" pos:column="13">debugs<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><literal type="number" pos:line="50" pos:column="20">15<pos:position pos:line="50" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="24">4<pos:position pos:line="50" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="27">"neighborsDigestSelect: peer "<pos:position pos:line="50" pos:column="57"/></literal> <operator pos:line="50" pos:column="58">&lt;&lt;<pos:position pos:line="50" pos:column="66"/></operator> <name><name pos:line="50" pos:column="61">p<pos:position pos:line="50" pos:column="62"/></name><operator pos:line="50" pos:column="62">-&gt;<pos:position pos:line="50" pos:column="67"/></operator><name pos:line="50" pos:column="64">host<pos:position pos:line="50" pos:column="68"/></name></name> <operator pos:line="50" pos:column="69">&lt;&lt;<pos:position pos:line="50" pos:column="77"/></operator> <literal type="string" pos:line="50" pos:column="72">" leads with rtt "<pos:position pos:line="50" pos:column="90"/></literal> <operator pos:line="50" pos:column="91">&lt;&lt;<pos:position pos:line="50" pos:column="99"/></operator> <name pos:line="50" pos:column="94">best_rtt<pos:position pos:line="50" pos:column="102"/></name></expr></argument>)<pos:position pos:line="50" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="104"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">debugs<pos:position pos:line="54" pos:column="11"/></name><argument_list pos:line="54" pos:column="11">(<argument><expr><literal type="number" pos:line="54" pos:column="12">15<pos:position pos:line="54" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="16">4<pos:position pos:line="54" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="19">"neighborsDigestSelect: choices: "<pos:position pos:line="54" pos:column="53"/></literal> <operator pos:line="54" pos:column="54">&lt;&lt;<pos:position pos:line="54" pos:column="62"/></operator> <name pos:line="54" pos:column="57">choice_count<pos:position pos:line="54" pos:column="69"/></name> <operator pos:line="54" pos:column="70">&lt;&lt;<pos:position pos:line="54" pos:column="78"/></operator> <literal type="string" pos:line="54" pos:column="73">" ("<pos:position pos:line="54" pos:column="77"/></literal> <operator pos:line="54" pos:column="78">&lt;&lt;<pos:position pos:line="54" pos:column="86"/></operator> <name pos:line="54" pos:column="81">ichoice_count<pos:position pos:line="54" pos:column="94"/></name> <operator pos:line="54" pos:column="95">&lt;&lt;<pos:position pos:line="54" pos:column="103"/></operator> <literal type="string" pos:line="54" pos:column="98">")"<pos:position pos:line="54" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="103"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">peerNoteDigestLookup<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">request<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="35">best_p<pos:position pos:line="55" pos:column="41"/></name></expr></argument>,
                         <argument><expr><ternary><condition><expr><name pos:line="56" pos:column="26">best_p<pos:position pos:line="56" pos:column="32"/></name></expr> ?<pos:position pos:line="56" pos:column="34"/></condition><then pos:line="56" pos:column="34"> <expr><name pos:line="56" pos:column="35">LOOKUP_HIT<pos:position pos:line="56" pos:column="45"/></name></expr> <pos:position pos:line="56" pos:column="46"/></then><else pos:line="56" pos:column="46">: <expr><operator pos:line="56" pos:column="48">(<pos:position pos:line="56" pos:column="49"/></operator><ternary><condition><expr><name pos:line="56" pos:column="49">choice_count<pos:position pos:line="56" pos:column="61"/></name></expr> ?<pos:position pos:line="56" pos:column="63"/></condition><then pos:line="56" pos:column="63"> <expr><name pos:line="56" pos:column="64">LOOKUP_MISS<pos:position pos:line="56" pos:column="75"/></name></expr> <pos:position pos:line="56" pos:column="76"/></then><else pos:line="56" pos:column="76">: <expr><name pos:line="56" pos:column="78">LOOKUP_NONE<pos:position pos:line="56" pos:column="89"/></name></expr></else></ternary><operator pos:line="56" pos:column="89">)<pos:position pos:line="56" pos:column="90"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="56" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">request<pos:position pos:line="57" pos:column="12"/></name><operator pos:line="57" pos:column="12">-&gt;<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="14">hier<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">.<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="19">n_choices<pos:position pos:line="57" pos:column="28"/></name></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="31">choice_count<pos:position pos:line="57" pos:column="43"/></name></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">request<pos:position pos:line="58" pos:column="12"/></name><operator pos:line="58" pos:column="12">-&gt;<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="14">hier<pos:position pos:line="58" pos:column="18"/></name><operator pos:line="58" pos:column="18">.<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="19">n_ichoices<pos:position pos:line="58" pos:column="29"/></name></name> <operator pos:line="58" pos:column="30">=<pos:position pos:line="58" pos:column="31"/></operator> <name pos:line="58" pos:column="32">ichoice_count<pos:position pos:line="58" pos:column="45"/></name></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">best_p<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2726_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConfigParser<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">CfgFile<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">getFileLine<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Else get the next line</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">fgets<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><name pos:line="5" pos:column="15">parseBuffer<pos:position pos:line="5" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="28">CONFIG_LINE_LIMIT<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">wordFile<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call> <operator pos:line="5" pos:column="57">==<pos:position pos:line="5" pos:column="59"/></operator> <name pos:line="5" pos:column="60">NULL<pos:position pos:line="5" pos:column="64"/></name></expr>)<pos:position pos:line="5" pos:column="65"/></condition><then pos:line="5" pos:column="65"> <block pos:line="5" pos:column="66">{
        <comment type="block" pos:line="6" pos:column="9">/* stop reading from file */</comment>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">fclose<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">wordFile<pos:position pos:line="7" pos:column="24"/></name></expr></argument>)<pos:position pos:line="7" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">wordFile<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">parseBuffer<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr>]<pos:position pos:line="9" pos:column="23"/></index></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <literal type="char" pos:line="9" pos:column="26">'\0'<pos:position pos:line="9" pos:column="30"/></literal></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">parsePos<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">parseBuffer<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">currentLine<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">parseBuffer<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">lineNo<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">++<pos:position pos:line="14" pos:column="13"/></operator></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><literal type="boolean" pos:line="15" pos:column="12">true<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

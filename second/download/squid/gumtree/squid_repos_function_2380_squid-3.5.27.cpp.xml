<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2380_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">getOutgoingAddress<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">HttpRequest<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">request<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">Comm<pos:position pos:line="2" pos:column="47"/></name><operator pos:line="2" pos:column="47">::<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">ConnectionPointer<pos:position pos:line="2" pos:column="66"/></name></name></type> <name pos:line="2" pos:column="67">conn<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// skip if an outgoing address is already set.</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">conn<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">local<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">isAnyAddr<pos:position pos:line="5" pos:column="31"/></name></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <block type="pseudo"><return pos:line="5" pos:column="35">return;<pos:position pos:line="5" pos:column="42"/></return></block></then></if>

    <comment type="line" pos:line="7" pos:column="5">// ensure that at minimum the wildcard local matches remote protocol</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">conn<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">remote<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">isIPv4<pos:position pos:line="8" pos:column="28"/></name></name><argument_list pos:line="8" pos:column="28">()<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="9">conn<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">local<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">setIPv4<pos:position pos:line="9" pos:column="28"/></name></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="11" pos:column="5">// maybe use TPROXY client address</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">request<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&amp;&amp;<pos:position pos:line="12" pos:column="27"/></operator> <name><name pos:line="12" pos:column="20">request<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">flags<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">.<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">spoofClientIp<pos:position pos:line="12" pos:column="48"/></name></name></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name><name pos:line="13" pos:column="14">conn<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">getPeer<pos:position pos:line="13" pos:column="27"/></name></name><argument_list pos:line="13" pos:column="27">()<pos:position pos:line="13" pos:column="29"/></argument_list></call> <operator pos:line="13" pos:column="30">||<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="33">!<pos:position pos:line="13" pos:column="34"/></operator><call><name><name pos:line="13" pos:column="34">conn<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">getPeer<pos:position pos:line="13" pos:column="47"/></name></name><argument_list pos:line="13" pos:column="47">()<pos:position pos:line="13" pos:column="49"/></argument_list></call><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name><name pos:line="13" pos:column="51">options<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">.<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">no_tproxy<pos:position pos:line="13" pos:column="68"/></name></name></expr>)<pos:position pos:line="13" pos:column="69"/></condition><then pos:line="13" pos:column="69"> <block pos:line="13" pos:column="70">{
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="31">LINUX_NETFILTER<pos:position pos:line="14" pos:column="46"/></name></expr></cpp:if>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">Config<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">onoff<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">tproxy_uses_indirect_client<pos:position pos:line="15" pos:column="57"/></name></name></expr>)<pos:position pos:line="15" pos:column="58"/></condition><then pos:line="15" pos:column="58">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">conn<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">local<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name><name pos:line="16" pos:column="31">request<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">indirect_client_addr<pos:position pos:line="16" pos:column="60"/></name></name></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt></block></then>
            <else pos:line="17" pos:column="13">else
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">conn<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">local<pos:position pos:line="19" pos:column="28"/></name></name> <operator pos:line="19" pos:column="29">=<pos:position pos:line="19" pos:column="30"/></operator> <name><name pos:line="19" pos:column="31">request<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">-&gt;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="40">client_addr<pos:position pos:line="19" pos:column="51"/></name></name></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt></block></else></if>
            <comment type="line" pos:line="20" pos:column="13">// some flags need setting on the socket to use this address</comment>
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">conn<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">flags<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">|=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">COMM_DOBIND<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">conn<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">flags<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">|=<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">COMM_TRANSPARENT<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
            <return pos:line="23" pos:column="13">return;<pos:position pos:line="23" pos:column="20"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="25" pos:column="9">// else no tproxy today ...</comment>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name><name pos:line="28" pos:column="10">Config<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">.<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">accessList<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">outgoing_address<pos:position pos:line="28" pos:column="44"/></name></name></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45"> <block pos:line="28" pos:column="46">{
        <return pos:line="29" pos:column="9">return;<pos:position pos:line="29" pos:column="16"/></return> <comment type="line" pos:line="29" pos:column="17">// anything will do.</comment>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="32" pos:column="5">ACLFilledChecklist<pos:position pos:line="32" pos:column="23"/></name></type> <name pos:line="32" pos:column="24">ch<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">request<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">NULL<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></decl>;<pos:position pos:line="32" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">ch<pos:position pos:line="33" pos:column="7"/></name><operator pos:line="33" pos:column="7">.<pos:position pos:line="33" pos:column="8"/></operator><name pos:line="33" pos:column="8">dst_peer<pos:position pos:line="33" pos:column="16"/></name></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <call><name><name pos:line="33" pos:column="19">conn<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">getPeer<pos:position pos:line="33" pos:column="32"/></name></name><argument_list pos:line="33" pos:column="32">()<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">ch<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">.<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">dst_addr<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">=<pos:position pos:line="34" pos:column="18"/></operator> <name><name pos:line="34" pos:column="19">conn<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">remote<pos:position pos:line="34" pos:column="31"/></name></name></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>

    <comment type="line" pos:line="36" pos:column="5">// TODO use the connection details in ACL.</comment>
    <comment type="line" pos:line="37" pos:column="5">// needs a bit of rework in ACLFilledChecklist to use Comm::Connection instead of ConnStateData</comment>

    <decl_stmt><decl><type><name pos:line="39" pos:column="5">AclAddress<pos:position pos:line="39" pos:column="15"/></name> <modifier pos:line="39" pos:column="16">*<pos:position pos:line="39" pos:column="17"/></modifier></type><name pos:line="39" pos:column="17">l<pos:position pos:line="39" pos:column="18"/></name></decl>;<pos:position pos:line="39" pos:column="19"/></decl_stmt>
    <for pos:line="40" pos:column="5">for <control pos:line="40" pos:column="9">(<init><expr><name pos:line="40" pos:column="10">l<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">=<pos:position pos:line="40" pos:column="13"/></operator> <name><name pos:line="40" pos:column="14">Config<pos:position pos:line="40" pos:column="20"/></name><operator pos:line="40" pos:column="20">.<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">accessList<pos:position pos:line="40" pos:column="31"/></name><operator pos:line="40" pos:column="31">.<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="32">outgoing_address<pos:position pos:line="40" pos:column="48"/></name></name></expr>;<pos:position pos:line="40" pos:column="49"/></init> <condition><expr><name pos:line="40" pos:column="50">l<pos:position pos:line="40" pos:column="51"/></name></expr>;<pos:position pos:line="40" pos:column="52"/></condition> <incr><expr><name pos:line="40" pos:column="53">l<pos:position pos:line="40" pos:column="54"/></name> <operator pos:line="40" pos:column="55">=<pos:position pos:line="40" pos:column="56"/></operator> <name><name pos:line="40" pos:column="57">l<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">-&gt;<pos:position pos:line="40" pos:column="63"/></operator><name pos:line="40" pos:column="60">next<pos:position pos:line="40" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="40" pos:column="65"/></control> <block pos:line="40" pos:column="66">{

        <comment type="block" pos:line="42" pos:column="9">/* check if the outgoing address is usable to the destination */</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name><name pos:line="43" pos:column="13">conn<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">remote<pos:position pos:line="43" pos:column="25"/></name><operator pos:line="43" pos:column="25">.<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="26">isIPv4<pos:position pos:line="43" pos:column="32"/></name></name><argument_list pos:line="43" pos:column="32">()<pos:position pos:line="43" pos:column="34"/></argument_list></call> <operator pos:line="43" pos:column="35">!=<pos:position pos:line="43" pos:column="37"/></operator> <call><name><name pos:line="43" pos:column="38">l<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">addr<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">.<pos:position pos:line="43" pos:column="46"/></operator><name pos:line="43" pos:column="46">isIPv4<pos:position pos:line="43" pos:column="52"/></name></name><argument_list pos:line="43" pos:column="52">()<pos:position pos:line="43" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="55"/></condition><then pos:line="43" pos:column="55"> <block type="pseudo"><continue pos:line="43" pos:column="56">continue;<pos:position pos:line="43" pos:column="65"/></continue></block></then></if>

        <comment type="block" pos:line="45" pos:column="9">/* check ACLs for this outgoing address */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name><name pos:line="46" pos:column="14">l<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">aclList<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">||<pos:position pos:line="46" pos:column="27"/></operator> <call><name><name pos:line="46" pos:column="28">ch<pos:position pos:line="46" pos:column="30"/></name><operator pos:line="46" pos:column="30">.<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">fastCheck<pos:position pos:line="46" pos:column="40"/></name></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name><name pos:line="46" pos:column="41">l<pos:position pos:line="46" pos:column="42"/></name><operator pos:line="46" pos:column="42">-&gt;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="44">aclList<pos:position pos:line="46" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call> <operator pos:line="46" pos:column="53">==<pos:position pos:line="46" pos:column="55"/></operator> <name pos:line="46" pos:column="56">ACCESS_ALLOWED<pos:position pos:line="46" pos:column="70"/></name></expr>)<pos:position pos:line="46" pos:column="71"/></condition><then pos:line="46" pos:column="71"> <block pos:line="46" pos:column="72">{
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">conn<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">-&gt;<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="19">local<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <name><name pos:line="47" pos:column="27">l<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">addr<pos:position pos:line="47" pos:column="34"/></name></name></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
            <return pos:line="48" pos:column="13">return;<pos:position pos:line="48" pos:column="20"/></return>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></for>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

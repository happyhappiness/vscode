<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2220_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">mb_size_t<pos:position pos:line="1" pos:column="10"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">buildRequestPrefix<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name pos:line="2" pos:column="35">MemBuf<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">mb<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">offset<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">mb<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">-&gt;<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="28">size<pos:position pos:line="4" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* Uses a local httpver variable to print the HTTP/1.1 label
     * since the HttpRequest may have an older version label.
     * XXX: This could create protocol bugs as the headers sent and
     * flow control should all be based on the HttpRequest version
     * not the one we are sending. Needs checking.
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">Http<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">::<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">ProtocolVersion<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">httpver<pos:position pos:line="11" pos:column="34"/></name><argument_list pos:line="11" pos:column="34">(<argument><expr><literal type="number" pos:line="11" pos:column="35">1<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="37">1<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></decl>;<pos:position pos:line="11" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type> <name pos:line="12" pos:column="18">url<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">_peer<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&amp;&amp;<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="18">!<pos:position pos:line="13" pos:column="19"/></operator><name><name pos:line="13" pos:column="19">_peer<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">options<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">originserver<pos:position pos:line="13" pos:column="46"/></name></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47">
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">url<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">urlCanonical<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">request<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="15" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">url<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name><name pos:line="16" pos:column="15">request<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">urlpath<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">termedBuf<pos:position pos:line="16" pos:column="41"/></name></name><argument_list pos:line="16" pos:column="41">()<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">mb<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">Printf<pos:position pos:line="17" pos:column="15"/></name></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">SQUIDSBUFPH<pos:position pos:line="17" pos:column="27"/></name> <literal type="string" pos:line="17" pos:column="28">" %s %s/%d.%d\r\n"<pos:position pos:line="17" pos:column="46"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="18" pos:column="16">SQUIDSBUFPRINT<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><call><name><name pos:line="18" pos:column="31">request<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">method<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">.<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">image<pos:position pos:line="18" pos:column="52"/></name></name><argument_list pos:line="18" pos:column="52">()<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call></expr></argument>,
               <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="16">url<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">&amp;&amp;<pos:position pos:line="19" pos:column="30"/></operator> <operator pos:line="19" pos:column="23">*<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">url<pos:position pos:line="19" pos:column="27"/></name></expr> ?<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <expr><name pos:line="19" pos:column="30">url<pos:position pos:line="19" pos:column="33"/></name></expr> <pos:position pos:line="19" pos:column="34"/></then><else pos:line="19" pos:column="34">: <expr><literal type="string" pos:line="19" pos:column="36">"/"<pos:position pos:line="19" pos:column="39"/></literal></expr></else></ternary></expr></argument>,
               <argument><expr><name><name pos:line="20" pos:column="16">AnyP<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">::<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">ProtocolType_str<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name><name pos:line="20" pos:column="39">httpver<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">protocol<pos:position pos:line="20" pos:column="55"/></name></name></expr>]<pos:position pos:line="20" pos:column="56"/></index></name></expr></argument>,
               <argument><expr><name><name pos:line="21" pos:column="16">httpver<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">major<pos:position pos:line="21" pos:column="29"/></name></name></expr></argument>,<argument><expr><name><name pos:line="21" pos:column="30">httpver<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">.<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">minor<pos:position pos:line="21" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
    <comment type="block" pos:line="22" pos:column="5">/* build and pack headers */</comment>
    <block pos:line="23" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">HttpHeader<pos:position pos:line="24" pos:column="19"/></name></type> <name pos:line="24" pos:column="20">hdr<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">hoRequest<pos:position pos:line="24" pos:column="33"/></name></expr></argument>)<pos:position pos:line="24" pos:column="34"/></argument_list></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">Packer<pos:position pos:line="25" pos:column="15"/></name></type> <name pos:line="25" pos:column="16">p<pos:position pos:line="25" pos:column="17"/></name></decl>;<pos:position pos:line="25" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">httpBuildRequestHeader<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">request<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">entry<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="48">fwd<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">-&gt;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="53">al<pos:position pos:line="26" pos:column="55"/></name></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="57">&amp;<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="58">hdr<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">flags<pos:position pos:line="26" pos:column="68"/></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">request<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">flags<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">.<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="28">pinned<pos:position pos:line="28" pos:column="34"/></name></name> <operator pos:line="28" pos:column="35">&amp;&amp;<pos:position pos:line="28" pos:column="45"/></operator> <name><name pos:line="28" pos:column="38">request<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">flags<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">.<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="53">connectionAuth<pos:position pos:line="28" pos:column="67"/></name></name></expr>)<pos:position pos:line="28" pos:column="68"/></condition><then pos:line="28" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="13">request<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">flags<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">.<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="28">authSent<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="boolean" pos:line="29" pos:column="39">true<pos:position pos:line="29" pos:column="43"/></literal></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt></block></then>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><call><name><name pos:line="30" pos:column="18">hdr<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">.<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">has<pos:position pos:line="30" pos:column="25"/></name></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">HDR_AUTHORIZATION<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="45"/></condition><then pos:line="30" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="13">request<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">flags<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">authSent<pos:position pos:line="31" pos:column="36"/></name></name> <operator pos:line="31" pos:column="37">=<pos:position pos:line="31" pos:column="38"/></operator> <literal type="boolean" pos:line="31" pos:column="39">true<pos:position pos:line="31" pos:column="43"/></literal></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">packerToMemInit<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">&amp;<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="26">p<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">mb<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">hdr<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">packInto<pos:position pos:line="34" pos:column="21"/></name></name><argument_list pos:line="34" pos:column="21">(<argument><expr><operator pos:line="34" pos:column="22">&amp;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="23">p<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="35" pos:column="9">hdr<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">.<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">clean<pos:position pos:line="35" pos:column="18"/></name></name><argument_list pos:line="35" pos:column="18">()<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">packerClean<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><operator pos:line="36" pos:column="21">&amp;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="22">p<pos:position pos:line="36" pos:column="23"/></name></expr></argument>)<pos:position pos:line="36" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block>
    <comment type="block" pos:line="38" pos:column="5">/* append header terminator */</comment>
    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">mb<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">append<pos:position pos:line="39" pos:column="15"/></name></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">crlf<pos:position pos:line="39" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="22">2<pos:position pos:line="39" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name><name pos:line="40" pos:column="12">mb<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">size<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">-<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">offset<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3419_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">processReplyAccess<pos:position pos:line="2" pos:column="39"/></name></name> <parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* NP: this should probably soft-fail to a zero-sized-reply error ?? */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">reply<pos:position pos:line="5" pos:column="17"/></name></expr></argument>)<pos:position pos:line="5" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="7" pos:column="5">/** Don't block our own responses or HTTP status messages */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">http<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">logType<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">==<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">LOG_TCP_DENIED<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">||<pos:position pos:line="8" pos:column="43"/></operator>
            <name><name pos:line="9" pos:column="13">http<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">logType<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">LOG_TCP_DENIED_REPLY<pos:position pos:line="9" pos:column="50"/></name> <operator pos:line="9" pos:column="51">||<pos:position pos:line="9" pos:column="53"/></operator>
            <call><name pos:line="10" pos:column="13">alwaysAllowResponse<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name><name pos:line="10" pos:column="33">reply<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">sline<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">.<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">status<pos:position pos:line="10" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54"> <block pos:line="10" pos:column="55">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">headers_sz<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="22">reply<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">hdr_sz<pos:position pos:line="11" pos:column="35"/></name></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">processReplyAccessResult<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">ACCESS_ALLOWED<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="16" pos:column="5">/** Check for reply to big error */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">reply<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">expectedBodyTooLarge<pos:position pos:line="17" pos:column="36"/></name></name><argument_list pos:line="17" pos:column="36">(<argument><expr><operator pos:line="17" pos:column="37">*<pos:position pos:line="17" pos:column="38"/></operator><name><name pos:line="17" pos:column="38">http<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">request<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="53"/></condition><then pos:line="17" pos:column="53"> <block pos:line="17" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">sendBodyTooLargeError<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">()<pos:position pos:line="18" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">headers_sz<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name><name pos:line="22" pos:column="18">reply<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">hdr_sz<pos:position pos:line="22" pos:column="31"/></name></name></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="24" pos:column="5">/** check for absent access controls (permit by default) */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">!<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">Config<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">accessList<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">.<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">reply<pos:position pos:line="25" pos:column="33"/></name></name></expr>)<pos:position pos:line="25" pos:column="34"/></condition><then pos:line="25" pos:column="34"> <block pos:line="25" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">processReplyAccessResult<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">ACCESS_ALLOWED<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="50"/></expr_stmt>
        <return pos:line="27" pos:column="9">return;<pos:position pos:line="27" pos:column="16"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="30" pos:column="5">/** Process http_reply_access lists */</comment>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">ACLFilledChecklist<pos:position pos:line="31" pos:column="23"/></name> <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier></type><name pos:line="31" pos:column="25">replyChecklist<pos:position pos:line="31" pos:column="39"/></name> <init pos:line="31" pos:column="40">=
        <expr><call><name pos:line="32" pos:column="9">clientAclChecklistCreate<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">Config<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">accessList<pos:position pos:line="32" pos:column="51"/></name><operator pos:line="32" pos:column="51">.<pos:position pos:line="32" pos:column="52"/></operator><name pos:line="32" pos:column="52">reply<pos:position pos:line="32" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="59">http<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="65"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">replyChecklist<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">reply<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">=<pos:position pos:line="33" pos:column="28"/></operator> <call><name pos:line="33" pos:column="29">HTTPMSGLOCK<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">reply<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">replyChecklist<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">nonBlockingCheck<pos:position pos:line="34" pos:column="37"/></name></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">ProcessReplyAccessResult<pos:position pos:line="34" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="64">this<pos:position pos:line="34" pos:column="68"/></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

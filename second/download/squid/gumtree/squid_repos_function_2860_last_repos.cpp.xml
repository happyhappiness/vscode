<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2860_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">snmpOpenPorts<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">49<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"snmpConnectionOpen: Called"<pos:position pos:line="4" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">Config<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Port<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">snmp<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">&lt;=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">snmpIncomingConn<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">new<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="28">Comm<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">::<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">Connection<pos:position pos:line="9" pos:column="44"/></name></name></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">snmpIncomingConn<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">local<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <name><name pos:line="10" pos:column="31">Config<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">.<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">Addrs<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">.<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">snmp_incoming<pos:position pos:line="10" pos:column="57"/></name></name></expr>;<pos:position pos:line="10" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">snmpIncomingConn<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">local<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">port<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name><name pos:line="11" pos:column="34">Config<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">Port<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">.<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">snmp<pos:position pos:line="11" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">Ip<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">::<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">EnableIpv6<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="28">!<pos:position pos:line="13" pos:column="29"/></operator><call><name><name pos:line="13" pos:column="29">snmpIncomingConn<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">local<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">setIPv4<pos:position pos:line="13" pos:column="60"/></name></name><argument_list pos:line="13" pos:column="60">()<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="63"/></condition><then pos:line="13" pos:column="63"> <block pos:line="13" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">49<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">DBG_CRITICAL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"ERROR: IPv6 is disabled. "<pos:position pos:line="14" pos:column="61"/></literal> <operator pos:line="14" pos:column="62">&lt;&lt;<pos:position pos:line="14" pos:column="70"/></operator> <name><name pos:line="14" pos:column="65">snmpIncomingConn<pos:position pos:line="14" pos:column="81"/></name><operator pos:line="14" pos:column="81">-&gt;<pos:position pos:line="14" pos:column="86"/></operator><name pos:line="14" pos:column="83">local<pos:position pos:line="14" pos:column="88"/></name></name> <operator pos:line="14" pos:column="89">&lt;&lt;<pos:position pos:line="14" pos:column="97"/></operator> <literal type="string" pos:line="14" pos:column="92">" is not an IPv4 address."<pos:position pos:line="14" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="120"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">fatal<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">"SNMP port cannot be opened."<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="17" pos:column="5">/* split-stack for now requires IPv4-only SNMP */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">Ip<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">::<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">EnableIpv6<pos:position pos:line="18" pos:column="23"/></name></name><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">&amp;&amp;<pos:position pos:line="18" pos:column="58"/></operator> <call><name><name pos:line="18" pos:column="51">snmpIncomingConn<pos:position pos:line="18" pos:column="67"/></name><operator pos:line="18" pos:column="67">-&gt;<pos:position pos:line="18" pos:column="72"/></operator><name pos:line="18" pos:column="69">local<pos:position pos:line="18" pos:column="74"/></name><operator pos:line="18" pos:column="74">.<pos:position pos:line="18" pos:column="75"/></operator><name pos:line="18" pos:column="75">isAnyAddr<pos:position pos:line="18" pos:column="84"/></name></name><argument_list pos:line="18" pos:column="84">()<pos:position pos:line="18" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="87"/></condition><then pos:line="18" pos:column="87"> <block pos:line="18" pos:column="88">{
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">snmpIncomingConn<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">-&gt;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="27">local<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">setIPv4<pos:position pos:line="19" pos:column="40"/></name></name><argument_list pos:line="19" pos:column="40">()<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="22" pos:column="5">AsyncCall<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">::<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">Pointer<pos:position pos:line="22" pos:column="23"/></name></name></type> <name pos:line="22" pos:column="24">call<pos:position pos:line="22" pos:column="28"/></name> <init pos:line="22" pos:column="29">= <expr><call><name pos:line="22" pos:column="31">asyncCall<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><literal type="number" pos:line="22" pos:column="41">49<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="45">2<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="48">"snmpIncomingConnectionOpened"<pos:position pos:line="22" pos:column="78"/></literal></expr></argument>,
                                        <argument><expr><call><name><name pos:line="23" pos:column="41">Comm<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">::<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">UdpOpenDialer<pos:position pos:line="23" pos:column="60"/></name></name><argument_list pos:line="23" pos:column="60">(<argument><expr><operator pos:line="23" pos:column="61">&amp;<pos:position pos:line="23" pos:column="66"/></operator><name pos:line="23" pos:column="62">snmpPortOpened<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="79"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">Ipc<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">::<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">StartListening<pos:position pos:line="24" pos:column="24"/></name></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">SOCK_DGRAM<pos:position pos:line="24" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="37">IPPROTO_UDP<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">snmpIncomingConn<pos:position pos:line="24" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="68">Ipc<pos:position pos:line="24" pos:column="71"/></name><operator pos:line="24" pos:column="71">::<pos:position pos:line="24" pos:column="73"/></operator><name pos:line="24" pos:column="73">fdnInSnmpSocket<pos:position pos:line="24" pos:column="88"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="90">call<pos:position pos:line="24" pos:column="94"/></name></expr></argument>)<pos:position pos:line="24" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="96"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name><name pos:line="26" pos:column="10">Config<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">.<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">Addrs<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">snmp_outgoing<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">isNoAddr<pos:position pos:line="26" pos:column="45"/></name></name><argument_list pos:line="26" pos:column="45">()<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="48"/></condition><then pos:line="26" pos:column="48"> <block pos:line="26" pos:column="49">{
        <expr_stmt><expr><name pos:line="27" pos:column="9">snmpOutgoingConn<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <operator pos:line="27" pos:column="28">new<pos:position pos:line="27" pos:column="31"/></operator> <name><name pos:line="27" pos:column="32">Comm<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">::<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">Connection<pos:position pos:line="27" pos:column="48"/></name></name></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">snmpOutgoingConn<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">local<pos:position pos:line="28" pos:column="32"/></name></name> <operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name><name pos:line="28" pos:column="35">Config<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">.<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">Addrs<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">.<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">snmp_outgoing<pos:position pos:line="28" pos:column="61"/></name></name></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="29" pos:column="9">snmpOutgoingConn<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">local<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">port<pos:position pos:line="29" pos:column="37"/></name></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name><name pos:line="29" pos:column="38">Config<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">.<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">Port<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">.<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">snmp<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">!<pos:position pos:line="31" pos:column="14"/></operator><name><name pos:line="31" pos:column="14">Ip<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">::<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">EnableIpv6<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">&amp;&amp;<pos:position pos:line="31" pos:column="39"/></operator> <operator pos:line="31" pos:column="32">!<pos:position pos:line="31" pos:column="33"/></operator><call><name><name pos:line="31" pos:column="33">snmpOutgoingConn<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">local<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">.<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="57">setIPv4<pos:position pos:line="31" pos:column="64"/></name></name><argument_list pos:line="31" pos:column="64">()<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="67"/></condition><then pos:line="31" pos:column="67"> <block pos:line="31" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">debugs<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><literal type="number" pos:line="32" pos:column="20">49<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">DBG_CRITICAL<pos:position pos:line="32" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="38">"ERROR: IPv6 is disabled. "<pos:position pos:line="32" pos:column="65"/></literal> <operator pos:line="32" pos:column="66">&lt;&lt;<pos:position pos:line="32" pos:column="74"/></operator> <name><name pos:line="32" pos:column="69">snmpOutgoingConn<pos:position pos:line="32" pos:column="85"/></name><operator pos:line="32" pos:column="85">-&gt;<pos:position pos:line="32" pos:column="90"/></operator><name pos:line="32" pos:column="87">local<pos:position pos:line="32" pos:column="92"/></name></name> <operator pos:line="32" pos:column="93">&lt;&lt;<pos:position pos:line="32" pos:column="101"/></operator> <literal type="string" pos:line="32" pos:column="96">" is not an IPv4 address."<pos:position pos:line="32" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">fatal<pos:position pos:line="33" pos:column="18"/></name><argument_list pos:line="33" pos:column="18">(<argument><expr><literal type="string" pos:line="33" pos:column="19">"SNMP port cannot be opened."<pos:position pos:line="33" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="35" pos:column="9">/* split-stack for now requires IPv4-only SNMP */</comment>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">Ip<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">::<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">EnableIpv6<pos:position pos:line="36" pos:column="27"/></name></name><operator pos:line="36" pos:column="27">&amp;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="28">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="36" pos:column="51"/></name> <operator pos:line="36" pos:column="52">&amp;&amp;<pos:position pos:line="36" pos:column="62"/></operator> <call><name><name pos:line="36" pos:column="55">snmpOutgoingConn<pos:position pos:line="36" pos:column="71"/></name><operator pos:line="36" pos:column="71">-&gt;<pos:position pos:line="36" pos:column="76"/></operator><name pos:line="36" pos:column="73">local<pos:position pos:line="36" pos:column="78"/></name><operator pos:line="36" pos:column="78">.<pos:position pos:line="36" pos:column="79"/></operator><name pos:line="36" pos:column="79">isAnyAddr<pos:position pos:line="36" pos:column="88"/></name></name><argument_list pos:line="36" pos:column="88">()<pos:position pos:line="36" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="91"/></condition><then pos:line="36" pos:column="91"> <block pos:line="36" pos:column="92">{
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">snmpOutgoingConn<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">local<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">.<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">setIPv4<pos:position pos:line="37" pos:column="44"/></name></name><argument_list pos:line="37" pos:column="44">()<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name><name pos:line="39" pos:column="9">AsyncCall<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">::<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">Pointer<pos:position pos:line="39" pos:column="27"/></name></name></type> <name pos:line="39" pos:column="28">c<pos:position pos:line="39" pos:column="29"/></name> <init pos:line="39" pos:column="30">= <expr><call><name pos:line="39" pos:column="32">asyncCall<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><literal type="number" pos:line="39" pos:column="42">49<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="46">2<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="49">"snmpOutgoingConnectionOpened"<pos:position pos:line="39" pos:column="79"/></literal></expr></argument>,
                                         <argument><expr><call><name><name pos:line="40" pos:column="42">Comm<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">::<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">UdpOpenDialer<pos:position pos:line="40" pos:column="61"/></name></name><argument_list pos:line="40" pos:column="61">(<argument><expr><operator pos:line="40" pos:column="62">&amp;<pos:position pos:line="40" pos:column="67"/></operator><name pos:line="40" pos:column="63">snmpPortOpened<pos:position pos:line="40" pos:column="77"/></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="80"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="41" pos:column="9">Ipc<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">::<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">StartListening<pos:position pos:line="41" pos:column="28"/></name></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">SOCK_DGRAM<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="41">IPPROTO_UDP<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">snmpOutgoingConn<pos:position pos:line="41" pos:column="70"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="72">Ipc<pos:position pos:line="41" pos:column="75"/></name><operator pos:line="41" pos:column="75">::<pos:position pos:line="41" pos:column="77"/></operator><name pos:line="41" pos:column="77">fdnOutSnmpSocket<pos:position pos:line="41" pos:column="93"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="95">c<pos:position pos:line="41" pos:column="96"/></name></expr></argument>)<pos:position pos:line="41" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="98"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then> <else pos:line="42" pos:column="7">else <block pos:line="42" pos:column="12">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">snmpOutgoingConn<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">=<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="28">snmpIncomingConn<pos:position pos:line="43" pos:column="44"/></name></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="19">DBG_IMPORTANT<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="34">"Sending SNMP messages from "<pos:position pos:line="44" pos:column="63"/></literal> <operator pos:line="44" pos:column="64">&lt;&lt;<pos:position pos:line="44" pos:column="72"/></operator> <name><name pos:line="44" pos:column="67">snmpOutgoingConn<pos:position pos:line="44" pos:column="83"/></name><operator pos:line="44" pos:column="83">-&gt;<pos:position pos:line="44" pos:column="88"/></operator><name pos:line="44" pos:column="85">local<pos:position pos:line="44" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></else></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5973_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">logfileQueueWrite<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">Logfile<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">lf<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">l_daemon_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ll<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">l_daemon_t<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator> <name><name pos:line="4" pos:column="37">lf<pos:position pos:line="4" pos:column="39"/></name><operator pos:line="4" pos:column="39">-&gt;<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="41">data<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">ll<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">flush_pending<pos:position pos:line="5" pos:column="26"/></name></name> <operator pos:line="5" pos:column="27">||<pos:position pos:line="5" pos:column="29"/></operator> <name><name pos:line="5" pos:column="30">ll<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">bufs<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">.<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">head<pos:position pos:line="5" pos:column="43"/></name></name> <operator pos:line="5" pos:column="44">==<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="47">NULL<pos:position pos:line="5" pos:column="51"/></name></expr>)<pos:position pos:line="5" pos:column="52"/></condition><then pos:line="5" pos:column="52"> <block pos:line="5" pos:column="53">{
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ll<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">flush_pending<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ll<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">bufs<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">head<pos:position pos:line="9" pos:column="22"/></name></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">logfile_buffer_t<pos:position pos:line="10" pos:column="25"/></name> <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier></type><name pos:line="10" pos:column="27">b<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><cast type="static" pos:line="10" pos:column="31">static_cast<argument_list type="generic" pos:line="10" pos:column="42">&lt;<argument><expr><name pos:line="10" pos:column="43">logfile_buffer_t<pos:position pos:line="10" pos:column="59"/></name><operator pos:line="10" pos:column="59">*<pos:position pos:line="10" pos:column="60"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="64"/></argument_list><argument_list pos:line="10" pos:column="61">(<argument><expr><name><name pos:line="10" pos:column="62">ll<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">-&gt;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="66">bufs<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">.<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">head<pos:position pos:line="10" pos:column="75"/></name><operator pos:line="10" pos:column="75">-&gt;<pos:position pos:line="10" pos:column="80"/></operator><name pos:line="10" pos:column="77">data<pos:position pos:line="10" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="10" pos:column="83"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">b<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">len<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">+<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="22">2<pos:position pos:line="11" pos:column="23"/></literal> <operator pos:line="11" pos:column="24">&lt;=<pos:position pos:line="11" pos:column="29"/></operator> <name><name pos:line="11" pos:column="27">b<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">size<pos:position pos:line="11" pos:column="34"/></name></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">logfile_mod_daemon_append<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">lf<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="43">"F\n"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="50">2<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="14" pos:column="5">/* Ok, schedule a write-event */</comment>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">Comm<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">::<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">SetSelect<pos:position pos:line="15" pos:column="20"/></name></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">ll<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">wfd<pos:position pos:line="15" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">COMM_SELECT_WRITE<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">logfileHandleWrite<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">lf<pos:position pos:line="15" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="73">0<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

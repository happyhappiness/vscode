<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6598_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemPoolChunked<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">convertFreeCacheToChunkFreeCache<pos:position pos:line="2" pos:column="49"/></name></name><parameter_list pos:line="2" pos:column="49">()<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">void<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">Free<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/*
     * OK, so we have to go through all the global freeCache and find the Chunk
     * any given Free belongs to, and stuff it into that Chunk's freelist
     */</comment>

    <while pos:line="10" pos:column="5">while <condition pos:line="10" pos:column="11">(<expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">Free<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">freeCache<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">!=<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="34">NULL<pos:position pos:line="10" pos:column="38"/></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition> <block pos:line="10" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">MemChunk<pos:position pos:line="11" pos:column="17"/></name> <modifier pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></modifier></type><name pos:line="11" pos:column="19">chunk<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name pos:line="11" pos:column="27">NULL<pos:position pos:line="11" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">chunk<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <cast type="const" pos:line="12" pos:column="17">const_cast<argument_list type="generic" pos:line="12" pos:column="27">&lt;<argument><expr><name pos:line="12" pos:column="28">MemChunk<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">*<pos:position pos:line="12" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="42"/></argument_list><argument_list pos:line="12" pos:column="39">(<argument><expr><operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator><call><name><name pos:line="12" pos:column="41">allChunks<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">.<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">find<pos:position pos:line="12" pos:column="55"/></name></name><argument_list pos:line="12" pos:column="55">(<argument><expr><name pos:line="12" pos:column="56">Free<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="62">memCompObjChunks<pos:position pos:line="12" pos:column="78"/></name></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="80"/></argument_list></cast></expr>;<pos:position pos:line="12" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">assert<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">splayLastResult<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">==<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">assert<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name><name pos:line="14" pos:column="16">chunk<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">inuse_count<pos:position pos:line="14" pos:column="34"/></name></name> <operator pos:line="14" pos:column="35">&gt;<pos:position pos:line="14" pos:column="39"/></operator> <literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">--<pos:position pos:line="15" pos:column="11"/></operator> <name><name pos:line="15" pos:column="12">chunk<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">inuse_count<pos:position pos:line="15" pos:column="30"/></name></name></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">void<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">VALGRIND_MAKE_MEM_DEFINED<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">Free<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="48">sizeof<argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">void<pos:position pos:line="16" pos:column="59"/></name> <operator pos:line="16" pos:column="60">*<pos:position pos:line="16" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">freeCache<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">void<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></operator><operator pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></operator><operator pos:line="17" pos:column="30">)<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">Free<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>	<comment type="block" pos:line="17" pos:column="41">/* remove from global cache */</comment>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">void<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></operator><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><operator pos:line="18" pos:column="18">)<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">Free<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <name><name pos:line="18" pos:column="26">chunk<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">-&gt;<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="33">freeList<pos:position pos:line="18" pos:column="41"/></name></name></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>	<comment type="block" pos:line="18" pos:column="49">/* stuff into chunks freelist */</comment>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">void<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">)<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">VALGRIND_MAKE_MEM_NOACCESS<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><name pos:line="19" pos:column="43">Free<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="49">sizeof<argument_list pos:line="19" pos:column="55">(<argument><expr><name pos:line="19" pos:column="56">void<pos:position pos:line="19" pos:column="60"/></name> <operator pos:line="19" pos:column="61">*<pos:position pos:line="19" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">chunk<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">freeList<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <name pos:line="20" pos:column="27">Free<pos:position pos:line="20" pos:column="31"/></name></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">chunk<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">lastref<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">squid_curtime<pos:position pos:line="21" pos:column="39"/></name></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></while>

}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

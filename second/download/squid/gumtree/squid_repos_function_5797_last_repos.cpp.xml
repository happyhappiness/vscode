<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5797_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier></type> <name><name pos:line="2" pos:column="28">argv<pos:position pos:line="2" pos:column="32"/></name><index pos:line="2" pos:column="32">[]<pos:position pos:line="2" pos:column="34"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">nstart<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">kstart<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">nend<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="19">kend<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier><modifier pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></modifier></type><name pos:line="6" pos:column="12">nargs<pos:position pos:line="6" pos:column="17"/></name></decl>, <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier><modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="21">kargs<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">fpid<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name><name pos:line="8" pos:column="9">pkin<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><literal type="number" pos:line="8" pos:column="14">2<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name><name pos:line="9" pos:column="9">pkout<pos:position pos:line="9" pos:column="14"/></name><index pos:line="9" pos:column="14">[<expr><literal type="number" pos:line="9" pos:column="15">2<pos:position pos:line="9" pos:column="16"/></literal></expr>]<pos:position pos:line="9" pos:column="17"/></index></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name><name pos:line="10" pos:column="9">pnin<pos:position pos:line="10" pos:column="13"/></name><index pos:line="10" pos:column="13">[<expr><literal type="number" pos:line="10" pos:column="14">2<pos:position pos:line="10" pos:column="15"/></literal></expr>]<pos:position pos:line="10" pos:column="16"/></index></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name><name pos:line="11" pos:column="9">pnout<pos:position pos:line="11" pos:column="14"/></name><index pos:line="11" pos:column="14">[<expr><literal type="number" pos:line="11" pos:column="15">2<pos:position pos:line="11" pos:column="16"/></literal></expr>]<pos:position pos:line="11" pos:column="17"/></index></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">setbuf<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">stdout<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">setbuf<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">stdin<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">NULL<pos:position pos:line="14" pos:column="23"/></name></expr></argument>)<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">argc<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal> <operator pos:line="16" pos:column="18">||<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">strncasecmp<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name><name pos:line="16" pos:column="34">argv<pos:position pos:line="16" pos:column="38"/></name><index pos:line="16" pos:column="38">[<expr><literal type="number" pos:line="16" pos:column="39">1<pos:position pos:line="16" pos:column="40"/></literal></expr>]<pos:position pos:line="16" pos:column="41"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="42">"-h"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="47">2<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="50"/></condition><then pos:line="16" pos:column="50"> <block pos:line="16" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">usage<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">()<pos:position pos:line="17" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">j<pos:position pos:line="21" pos:column="10"/></name> <init pos:line="21" pos:column="11">= <expr><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="15"/></decl_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">strncasecmp<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name><name pos:line="22" pos:column="22">argv<pos:position pos:line="22" pos:column="26"/></name><index pos:line="22" pos:column="26">[<expr><literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr>]<pos:position pos:line="22" pos:column="29"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="22" pos:column="30">"-d"<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="22" pos:column="35">2<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38"> <block pos:line="22" pos:column="39">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">debug_enabled<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">j<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <literal type="number" pos:line="24" pos:column="13">2<pos:position pos:line="24" pos:column="14"/></literal></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><decl><type><name pos:line="27" pos:column="10">int<pos:position pos:line="27" pos:column="13"/></name></type> <name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name><init pos:line="27" pos:column="15">=<expr><name pos:line="27" pos:column="16">j<pos:position pos:line="27" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="18"/></init> <condition><expr><name pos:line="27" pos:column="19">i<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">&lt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">argc<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></condition> <incr><expr><operator pos:line="27" pos:column="27">++<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name></expr></incr>)<pos:position pos:line="27" pos:column="31"/></control> <block pos:line="27" pos:column="32">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><call><name pos:line="28" pos:column="14">strncasecmp<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name><name pos:line="28" pos:column="26">argv<pos:position pos:line="28" pos:column="30"/></name><index pos:line="28" pos:column="30">[<expr><name pos:line="28" pos:column="31">i<pos:position pos:line="28" pos:column="32"/></name></expr>]<pos:position pos:line="28" pos:column="33"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="34">"--ntlm"<pos:position pos:line="28" pos:column="42"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="28" pos:column="43">6<pos:position pos:line="28" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="46"/></condition><then pos:line="28" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">nstart<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">i<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt></block></then></if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">strncasecmp<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">argv<pos:position pos:line="30" pos:column="30"/></name><index pos:line="30" pos:column="30">[<expr><name pos:line="30" pos:column="31">i<pos:position pos:line="30" pos:column="32"/></name></expr>]<pos:position pos:line="30" pos:column="33"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="30" pos:column="34">"--kerberos"<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="30" pos:column="47">10<pos:position pos:line="30" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="13">kstart<pos:position pos:line="31" pos:column="19"/></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">i<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></for>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">nstart<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&gt;<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="18">kstart<pos:position pos:line="33" pos:column="24"/></name></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">kend<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">nstart<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-<pos:position pos:line="34" pos:column="23"/></operator><literal type="number" pos:line="34" pos:column="23">1<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">nend<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name pos:line="35" pos:column="16">argc<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-<pos:position pos:line="35" pos:column="21"/></operator><literal type="number" pos:line="35" pos:column="21">1<pos:position pos:line="35" pos:column="22"/></literal></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then> <else pos:line="36" pos:column="7">else <block pos:line="36" pos:column="12">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">kend<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name pos:line="37" pos:column="16">argc<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-<pos:position pos:line="37" pos:column="21"/></operator><literal type="number" pos:line="37" pos:column="21">1<pos:position pos:line="37" pos:column="22"/></literal></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">nend<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">kstart<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-<pos:position pos:line="38" pos:column="23"/></operator><literal type="number" pos:line="38" pos:column="23">1<pos:position pos:line="38" pos:column="24"/></literal></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">nstart<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">==<pos:position pos:line="40" pos:column="18"/></operator> <literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal> <operator pos:line="40" pos:column="21">||<pos:position pos:line="40" pos:column="23"/></operator> <name pos:line="40" pos:column="24">kstart<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">==<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="34">0<pos:position pos:line="40" pos:column="35"/></literal> <operator pos:line="40" pos:column="36">||<pos:position pos:line="40" pos:column="38"/></operator> <name pos:line="40" pos:column="39">kend<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">kstart<pos:position pos:line="40" pos:column="50"/></name> <operator pos:line="40" pos:column="51">&lt;=<pos:position pos:line="40" pos:column="56"/></operator> <literal type="number" pos:line="40" pos:column="54">0<pos:position pos:line="40" pos:column="55"/></literal> <operator pos:line="40" pos:column="56">||<pos:position pos:line="40" pos:column="58"/></operator> <name pos:line="40" pos:column="59">nend<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">-<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="64">nstart<pos:position pos:line="40" pos:column="70"/></name> <operator pos:line="40" pos:column="71">&lt;=<pos:position pos:line="40" pos:column="76"/></operator> <literal type="number" pos:line="40" pos:column="74">0<pos:position pos:line="40" pos:column="75"/></literal></expr> )<pos:position pos:line="40" pos:column="77"/></condition><then pos:line="40" pos:column="77"> <block pos:line="40" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">usage<pos:position pos:line="41" pos:column="14"/></name><argument_list pos:line="41" pos:column="14">()<pos:position pos:line="41" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="17"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>;<pos:position pos:line="42" pos:column="18"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">debug_enabled<pos:position pos:line="45" pos:column="22"/></name></expr>)<pos:position pos:line="45" pos:column="23"/></condition><then pos:line="45" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="9">fprintf<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">stderr<pos:position pos:line="46" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="25">"%s| %s: Starting version %s\n"<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="58">LogTime<pos:position pos:line="46" pos:column="65"/></name><argument_list pos:line="46" pos:column="65">()<pos:position pos:line="46" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="46" pos:column="69">PROGRAM<pos:position pos:line="46" pos:column="76"/></name></expr></argument>,
                <argument><expr><name pos:line="47" pos:column="17">VERSION<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt></block></then></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">(<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">nargs<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <operator pos:line="49" pos:column="18">(<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">char<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">*<pos:position pos:line="49" pos:column="25"/></operator><operator pos:line="49" pos:column="25">*<pos:position pos:line="49" pos:column="26"/></operator><operator pos:line="49" pos:column="26">)<pos:position pos:line="49" pos:column="27"/></operator><call><name pos:line="49" pos:column="27">xmalloc<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><operator pos:line="49" pos:column="35">(<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">nend<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-<pos:position pos:line="49" pos:column="41"/></operator><name pos:line="49" pos:column="41">nstart<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">+<pos:position pos:line="49" pos:column="48"/></operator><literal type="number" pos:line="49" pos:column="48">1<pos:position pos:line="49" pos:column="49"/></literal><operator pos:line="49" pos:column="49">)<pos:position pos:line="49" pos:column="50"/></operator><operator pos:line="49" pos:column="50">*<pos:position pos:line="49" pos:column="51"/></operator><sizeof pos:line="49" pos:column="51">sizeof<argument_list pos:line="49" pos:column="57">(<argument><expr><name pos:line="49" pos:column="58">char<pos:position pos:line="49" pos:column="62"/></name> <operator pos:line="49" pos:column="63">*<pos:position pos:line="49" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call><operator pos:line="49" pos:column="66">)<pos:position pos:line="49" pos:column="67"/></operator> <operator pos:line="49" pos:column="68">==<pos:position pos:line="49" pos:column="70"/></operator> <name pos:line="49" pos:column="71">NULL<pos:position pos:line="49" pos:column="75"/></name></expr>)<pos:position pos:line="49" pos:column="76"/></condition><then pos:line="49" pos:column="76"> <block pos:line="49" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">stderr<pos:position pos:line="50" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="25">"%s| %s: Error allocating memory for ntlm helper\n"<pos:position pos:line="50" pos:column="76"/></literal></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="78">LogTime<pos:position pos:line="50" pos:column="85"/></name><argument_list pos:line="50" pos:column="85">()<pos:position pos:line="50" pos:column="87"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="89">PROGRAM<pos:position pos:line="50" pos:column="96"/></name></expr></argument>)<pos:position pos:line="50" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="98"/></expr_stmt>
        <return pos:line="51" pos:column="9">return <expr><literal type="number" pos:line="51" pos:column="16">1<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">memcpy<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name pos:line="53" pos:column="12">nargs<pos:position pos:line="53" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="18">argv<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">+<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">nstart<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">+<pos:position pos:line="53" pos:column="30"/></operator><literal type="number" pos:line="53" pos:column="30">1<pos:position pos:line="53" pos:column="31"/></literal></expr></argument>,<argument><expr><operator pos:line="53" pos:column="32">(<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">nend<pos:position pos:line="53" pos:column="37"/></name><operator pos:line="53" pos:column="37">-<pos:position pos:line="53" pos:column="38"/></operator><name pos:line="53" pos:column="38">nstart<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">)<pos:position pos:line="53" pos:column="45"/></operator><operator pos:line="53" pos:column="45">*<pos:position pos:line="53" pos:column="46"/></operator><sizeof pos:line="53" pos:column="46">sizeof<argument_list pos:line="53" pos:column="52">(<argument><expr><name pos:line="53" pos:column="53">char<pos:position pos:line="53" pos:column="57"/></name> <operator pos:line="53" pos:column="58">*<pos:position pos:line="53" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">nargs<pos:position pos:line="54" pos:column="10"/></name><index pos:line="54" pos:column="10">[<expr><name pos:line="54" pos:column="11">nend<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">-<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">nstart<pos:position pos:line="54" pos:column="22"/></name></expr>]<pos:position pos:line="54" pos:column="23"/></index></name><operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">NULL<pos:position pos:line="54" pos:column="28"/></name></expr>;<pos:position pos:line="54" pos:column="29"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">debug_enabled<pos:position pos:line="55" pos:column="22"/></name></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23"> <block pos:line="55" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">fprintf<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">stderr<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="25">"%s| %s: NTLM command: "<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="56" pos:column="51">LogTime<pos:position pos:line="56" pos:column="58"/></name><argument_list pos:line="56" pos:column="58">()<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="56" pos:column="62">PROGRAM<pos:position pos:line="56" pos:column="69"/></name></expr></argument>)<pos:position pos:line="56" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="71"/></expr_stmt>
        <for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><decl><type><name pos:line="57" pos:column="14">int<pos:position pos:line="57" pos:column="17"/></name></type> <name pos:line="57" pos:column="18">i<pos:position pos:line="57" pos:column="19"/></name><init pos:line="57" pos:column="19">=<expr><literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="57" pos:column="22"/></init> <condition><expr><name pos:line="57" pos:column="23">i<pos:position pos:line="57" pos:column="24"/></name><operator pos:line="57" pos:column="24">&lt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">nend<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="30">nstart<pos:position pos:line="57" pos:column="36"/></name></expr>;<pos:position pos:line="57" pos:column="37"/></condition> <incr><expr><operator pos:line="57" pos:column="38">++<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">i<pos:position pos:line="57" pos:column="41"/></name></expr></incr>)<pos:position pos:line="57" pos:column="42"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="13">fprintf<pos:position pos:line="58" pos:column="20"/></name><argument_list pos:line="58" pos:column="20">(<argument><expr><name pos:line="58" pos:column="21">stderr<pos:position pos:line="58" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="29">"%s "<pos:position pos:line="58" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="36">nargs<pos:position pos:line="58" pos:column="41"/></name><index pos:line="58" pos:column="41">[<expr><name pos:line="58" pos:column="42">i<pos:position pos:line="58" pos:column="43"/></name></expr>]<pos:position pos:line="58" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt></block></for>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">fprintf<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">stderr<pos:position pos:line="59" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="25">"\n"<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><operator pos:line="61" pos:column="9">(<pos:position pos:line="61" pos:column="10"/></operator><name pos:line="61" pos:column="10">kargs<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <operator pos:line="61" pos:column="18">(<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="19">char<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">*<pos:position pos:line="61" pos:column="25"/></operator><operator pos:line="61" pos:column="25">*<pos:position pos:line="61" pos:column="26"/></operator><operator pos:line="61" pos:column="26">)<pos:position pos:line="61" pos:column="27"/></operator><call><name pos:line="61" pos:column="27">xmalloc<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><operator pos:line="61" pos:column="35">(<pos:position pos:line="61" pos:column="36"/></operator><name pos:line="61" pos:column="36">kend<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">-<pos:position pos:line="61" pos:column="41"/></operator><name pos:line="61" pos:column="41">kstart<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">+<pos:position pos:line="61" pos:column="48"/></operator><literal type="number" pos:line="61" pos:column="48">1<pos:position pos:line="61" pos:column="49"/></literal><operator pos:line="61" pos:column="49">)<pos:position pos:line="61" pos:column="50"/></operator><operator pos:line="61" pos:column="50">*<pos:position pos:line="61" pos:column="51"/></operator><sizeof pos:line="61" pos:column="51">sizeof<argument_list pos:line="61" pos:column="57">(<argument><expr><name pos:line="61" pos:column="58">char<pos:position pos:line="61" pos:column="62"/></name> <operator pos:line="61" pos:column="63">*<pos:position pos:line="61" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call><operator pos:line="61" pos:column="66">)<pos:position pos:line="61" pos:column="67"/></operator> <operator pos:line="61" pos:column="68">==<pos:position pos:line="61" pos:column="70"/></operator> <name pos:line="61" pos:column="71">NULL<pos:position pos:line="61" pos:column="75"/></name></expr>)<pos:position pos:line="61" pos:column="76"/></condition><then pos:line="61" pos:column="76"> <block pos:line="61" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">fprintf<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">stderr<pos:position pos:line="62" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="25">"%s| %s: Error allocating memory for kerberos helper\n"<pos:position pos:line="62" pos:column="80"/></literal></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="82">LogTime<pos:position pos:line="62" pos:column="89"/></name><argument_list pos:line="62" pos:column="89">()<pos:position pos:line="62" pos:column="91"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="93">PROGRAM<pos:position pos:line="62" pos:column="100"/></name></expr></argument>)<pos:position pos:line="62" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="102"/></expr_stmt>
        <return pos:line="63" pos:column="9">return <expr><literal type="number" pos:line="63" pos:column="16">1<pos:position pos:line="63" pos:column="17"/></literal></expr>;<pos:position pos:line="63" pos:column="18"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">memcpy<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name pos:line="65" pos:column="12">kargs<pos:position pos:line="65" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="65" pos:column="18">argv<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">+<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="23">kstart<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">+<pos:position pos:line="65" pos:column="30"/></operator><literal type="number" pos:line="65" pos:column="30">1<pos:position pos:line="65" pos:column="31"/></literal></expr></argument>,<argument><expr><operator pos:line="65" pos:column="32">(<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">kend<pos:position pos:line="65" pos:column="37"/></name><operator pos:line="65" pos:column="37">-<pos:position pos:line="65" pos:column="38"/></operator><name pos:line="65" pos:column="38">kstart<pos:position pos:line="65" pos:column="44"/></name><operator pos:line="65" pos:column="44">)<pos:position pos:line="65" pos:column="45"/></operator><operator pos:line="65" pos:column="45">*<pos:position pos:line="65" pos:column="46"/></operator><sizeof pos:line="65" pos:column="46">sizeof<argument_list pos:line="65" pos:column="52">(<argument><expr><name pos:line="65" pos:column="53">char<pos:position pos:line="65" pos:column="57"/></name> <operator pos:line="65" pos:column="58">*<pos:position pos:line="65" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="65" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="66" pos:column="5">kargs<pos:position pos:line="66" pos:column="10"/></name><index pos:line="66" pos:column="10">[<expr><name pos:line="66" pos:column="11">kend<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">-<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">kstart<pos:position pos:line="66" pos:column="22"/></name></expr>]<pos:position pos:line="66" pos:column="23"/></index></name><operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">NULL<pos:position pos:line="66" pos:column="28"/></name></expr>;<pos:position pos:line="66" pos:column="29"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">debug_enabled<pos:position pos:line="67" pos:column="22"/></name></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23"> <block pos:line="67" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">fprintf<pos:position pos:line="68" pos:column="16"/></name><argument_list pos:line="68" pos:column="16">(<argument><expr><name pos:line="68" pos:column="17">stderr<pos:position pos:line="68" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="25">"%s| %s: Kerberos command: "<pos:position pos:line="68" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="55">LogTime<pos:position pos:line="68" pos:column="62"/></name><argument_list pos:line="68" pos:column="62">()<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">PROGRAM<pos:position pos:line="68" pos:column="73"/></name></expr></argument>)<pos:position pos:line="68" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="75"/></expr_stmt>
        <for pos:line="69" pos:column="9">for <control pos:line="69" pos:column="13">(<init><decl><type><name pos:line="69" pos:column="14">int<pos:position pos:line="69" pos:column="17"/></name></type> <name pos:line="69" pos:column="18">i<pos:position pos:line="69" pos:column="19"/></name><init pos:line="69" pos:column="19">=<expr><literal type="number" pos:line="69" pos:column="20">0<pos:position pos:line="69" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="69" pos:column="22"/></init> <condition><expr><name pos:line="69" pos:column="23">i<pos:position pos:line="69" pos:column="24"/></name><operator pos:line="69" pos:column="24">&lt;<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="25">kend<pos:position pos:line="69" pos:column="29"/></name><operator pos:line="69" pos:column="29">-<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">kstart<pos:position pos:line="69" pos:column="36"/></name></expr>;<pos:position pos:line="69" pos:column="37"/></condition> <incr><expr><operator pos:line="69" pos:column="38">++<pos:position pos:line="69" pos:column="40"/></operator><name pos:line="69" pos:column="40">i<pos:position pos:line="69" pos:column="41"/></name></expr></incr>)<pos:position pos:line="69" pos:column="42"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="13">fprintf<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name pos:line="70" pos:column="21">stderr<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">"%s "<pos:position pos:line="70" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="36">kargs<pos:position pos:line="70" pos:column="41"/></name><index pos:line="70" pos:column="41">[<expr><name pos:line="70" pos:column="42">i<pos:position pos:line="70" pos:column="43"/></name></expr>]<pos:position pos:line="70" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="46"/></expr_stmt></block></for>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">fprintf<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">stderr<pos:position pos:line="71" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="25">"\n"<pos:position pos:line="71" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="73" pos:column="5">/*
       Fork Kerberos helper and NTLM helper and manage IO to send NTLM requests
       to the right helper. squid must keep session state
    */</comment>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><call><name pos:line="78" pos:column="9">pipe<pos:position pos:line="78" pos:column="13"/></name><argument_list pos:line="78" pos:column="13">(<argument><expr><name pos:line="78" pos:column="14">pkin<pos:position pos:line="78" pos:column="18"/></name></expr></argument>)<pos:position pos:line="78" pos:column="19"/></argument_list></call> <operator pos:line="78" pos:column="20">&lt;<pos:position pos:line="78" pos:column="24"/></operator> <literal type="number" pos:line="78" pos:column="22">0<pos:position pos:line="78" pos:column="23"/></literal></expr>)<pos:position pos:line="78" pos:column="24"/></condition><then pos:line="78" pos:column="24"> <block pos:line="78" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="79" pos:column="9">fprintf<pos:position pos:line="79" pos:column="16"/></name><argument_list pos:line="79" pos:column="16">(<argument><expr><name pos:line="79" pos:column="17">stderr<pos:position pos:line="79" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="25">"%s| %s: Could not assign streams for pkin\n"<pos:position pos:line="79" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="72">LogTime<pos:position pos:line="79" pos:column="79"/></name><argument_list pos:line="79" pos:column="79">()<pos:position pos:line="79" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="79" pos:column="83">PROGRAM<pos:position pos:line="79" pos:column="90"/></name></expr></argument>)<pos:position pos:line="79" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="92"/></expr_stmt>
        <return pos:line="80" pos:column="9">return <expr><literal type="number" pos:line="80" pos:column="16">1<pos:position pos:line="80" pos:column="17"/></literal></expr>;<pos:position pos:line="80" pos:column="18"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><call><name pos:line="82" pos:column="9">pipe<pos:position pos:line="82" pos:column="13"/></name><argument_list pos:line="82" pos:column="13">(<argument><expr><name pos:line="82" pos:column="14">pkout<pos:position pos:line="82" pos:column="19"/></name></expr></argument>)<pos:position pos:line="82" pos:column="20"/></argument_list></call> <operator pos:line="82" pos:column="21">&lt;<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="23">0<pos:position pos:line="82" pos:column="24"/></literal></expr>)<pos:position pos:line="82" pos:column="25"/></condition><then pos:line="82" pos:column="25"> <block pos:line="82" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">fprintf<pos:position pos:line="83" pos:column="16"/></name><argument_list pos:line="83" pos:column="16">(<argument><expr><name pos:line="83" pos:column="17">stderr<pos:position pos:line="83" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="25">"%s| %s: Could not assign streams for pkout\n"<pos:position pos:line="83" pos:column="71"/></literal></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="73">LogTime<pos:position pos:line="83" pos:column="80"/></name><argument_list pos:line="83" pos:column="80">()<pos:position pos:line="83" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="83" pos:column="84">PROGRAM<pos:position pos:line="83" pos:column="91"/></name></expr></argument>)<pos:position pos:line="83" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="93"/></expr_stmt>
        <return pos:line="84" pos:column="9">return <expr><literal type="number" pos:line="84" pos:column="16">1<pos:position pos:line="84" pos:column="17"/></literal></expr>;<pos:position pos:line="84" pos:column="18"/></return>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <if pos:line="87" pos:column="5">if  <condition pos:line="87" pos:column="9">(<expr><operator pos:line="87" pos:column="10">(<pos:position pos:line="87" pos:column="11"/></operator> <name pos:line="87" pos:column="12">fpid<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <call><name pos:line="87" pos:column="19">vfork<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">()<pos:position pos:line="87" pos:column="26"/></argument_list></call><operator pos:line="87" pos:column="26">)<pos:position pos:line="87" pos:column="27"/></operator> <operator pos:line="87" pos:column="28">&lt;<pos:position pos:line="87" pos:column="32"/></operator> <literal type="number" pos:line="87" pos:column="30">0<pos:position pos:line="87" pos:column="31"/></literal></expr> )<pos:position pos:line="87" pos:column="33"/></condition><then pos:line="87" pos:column="33"> <block pos:line="87" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">fprintf<pos:position pos:line="88" pos:column="16"/></name><argument_list pos:line="88" pos:column="16">(<argument><expr><name pos:line="88" pos:column="17">stderr<pos:position pos:line="88" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="25">"%s| %s: Failed first fork\n"<pos:position pos:line="88" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="88" pos:column="56">LogTime<pos:position pos:line="88" pos:column="63"/></name><argument_list pos:line="88" pos:column="63">()<pos:position pos:line="88" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="88" pos:column="67">PROGRAM<pos:position pos:line="88" pos:column="74"/></name></expr></argument>)<pos:position pos:line="88" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="76"/></expr_stmt>
        <return pos:line="89" pos:column="9">return <expr><literal type="number" pos:line="89" pos:column="16">1<pos:position pos:line="89" pos:column="17"/></literal></expr>;<pos:position pos:line="89" pos:column="18"/></return>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>

    <if pos:line="92" pos:column="5">if <condition pos:line="92" pos:column="8">( <expr><name pos:line="92" pos:column="10">fpid<pos:position pos:line="92" pos:column="14"/></name> <operator pos:line="92" pos:column="15">==<pos:position pos:line="92" pos:column="17"/></operator> <literal type="number" pos:line="92" pos:column="18">0<pos:position pos:line="92" pos:column="19"/></literal></expr> )<pos:position pos:line="92" pos:column="21"/></condition><then pos:line="92" pos:column="21"> <block pos:line="92" pos:column="22">{
        <comment type="block" pos:line="93" pos:column="9">/* First Child for Kerberos helper */</comment>

        <expr_stmt><expr><call><name pos:line="95" pos:column="9">close<pos:position pos:line="95" pos:column="14"/></name><argument_list pos:line="95" pos:column="14">(<argument><expr><name><name pos:line="95" pos:column="15">pkin<pos:position pos:line="95" pos:column="19"/></name><index pos:line="95" pos:column="19">[<expr><literal type="number" pos:line="95" pos:column="20">1<pos:position pos:line="95" pos:column="21"/></literal></expr>]<pos:position pos:line="95" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="95" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">dup2<pos:position pos:line="96" pos:column="13"/></name><argument_list pos:line="96" pos:column="13">(<argument><expr><name><name pos:line="96" pos:column="14">pkin<pos:position pos:line="96" pos:column="18"/></name><index pos:line="96" pos:column="18">[<expr><literal type="number" pos:line="96" pos:column="19">0<pos:position pos:line="96" pos:column="20"/></literal></expr>]<pos:position pos:line="96" pos:column="21"/></index></name></expr></argument>,<argument><expr><name pos:line="96" pos:column="22">STDIN_FILENO<pos:position pos:line="96" pos:column="34"/></name></expr></argument>)<pos:position pos:line="96" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">close<pos:position pos:line="97" pos:column="14"/></name><argument_list pos:line="97" pos:column="14">(<argument><expr><name><name pos:line="97" pos:column="15">pkin<pos:position pos:line="97" pos:column="19"/></name><index pos:line="97" pos:column="19">[<expr><literal type="number" pos:line="97" pos:column="20">0<pos:position pos:line="97" pos:column="21"/></literal></expr>]<pos:position pos:line="97" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="97" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="99" pos:column="9">close<pos:position pos:line="99" pos:column="14"/></name><argument_list pos:line="99" pos:column="14">(<argument><expr><name><name pos:line="99" pos:column="15">pkout<pos:position pos:line="99" pos:column="20"/></name><index pos:line="99" pos:column="20">[<expr><literal type="number" pos:line="99" pos:column="21">0<pos:position pos:line="99" pos:column="22"/></literal></expr>]<pos:position pos:line="99" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="99" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">dup2<pos:position pos:line="100" pos:column="13"/></name><argument_list pos:line="100" pos:column="13">(<argument><expr><name><name pos:line="100" pos:column="14">pkout<pos:position pos:line="100" pos:column="19"/></name><index pos:line="100" pos:column="19">[<expr><literal type="number" pos:line="100" pos:column="20">1<pos:position pos:line="100" pos:column="21"/></literal></expr>]<pos:position pos:line="100" pos:column="22"/></index></name></expr></argument>,<argument><expr><name pos:line="100" pos:column="23">STDOUT_FILENO<pos:position pos:line="100" pos:column="36"/></name></expr></argument>)<pos:position pos:line="100" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="101" pos:column="9">close<pos:position pos:line="101" pos:column="14"/></name><argument_list pos:line="101" pos:column="14">(<argument><expr><name><name pos:line="101" pos:column="15">pkout<pos:position pos:line="101" pos:column="20"/></name><index pos:line="101" pos:column="20">[<expr><literal type="number" pos:line="101" pos:column="21">1<pos:position pos:line="101" pos:column="22"/></literal></expr>]<pos:position pos:line="101" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="101" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="103" pos:column="9">setbuf<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><name pos:line="103" pos:column="16">stdin<pos:position pos:line="103" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="23">NULL<pos:position pos:line="103" pos:column="27"/></name></expr></argument>)<pos:position pos:line="103" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="104" pos:column="9">setbuf<pos:position pos:line="104" pos:column="15"/></name><argument_list pos:line="104" pos:column="15">(<argument><expr><name pos:line="104" pos:column="16">stdout<pos:position pos:line="104" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="24">NULL<pos:position pos:line="104" pos:column="28"/></name></expr></argument>)<pos:position pos:line="104" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="106" pos:column="9">execv<pos:position pos:line="106" pos:column="14"/></name><argument_list pos:line="106" pos:column="14">(<argument><expr><name><name pos:line="106" pos:column="15">kargs<pos:position pos:line="106" pos:column="20"/></name><index pos:line="106" pos:column="20">[<expr><literal type="number" pos:line="106" pos:column="21">0<pos:position pos:line="106" pos:column="22"/></literal></expr>]<pos:position pos:line="106" pos:column="23"/></index></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="25">kargs<pos:position pos:line="106" pos:column="30"/></name></expr></argument>)<pos:position pos:line="106" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">fprintf<pos:position pos:line="107" pos:column="16"/></name><argument_list pos:line="107" pos:column="16">(<argument><expr><name pos:line="107" pos:column="17">stderr<pos:position pos:line="107" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="25">"%s| %s: Failed execv for %s: %s\n"<pos:position pos:line="107" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="62">LogTime<pos:position pos:line="107" pos:column="69"/></name><argument_list pos:line="107" pos:column="69">()<pos:position pos:line="107" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="107" pos:column="73">PROGRAM<pos:position pos:line="107" pos:column="80"/></name></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="82">kargs<pos:position pos:line="107" pos:column="87"/></name><index pos:line="107" pos:column="87">[<expr><literal type="number" pos:line="107" pos:column="88">0<pos:position pos:line="107" pos:column="89"/></literal></expr>]<pos:position pos:line="107" pos:column="90"/></index></name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="92">strerror<pos:position pos:line="107" pos:column="100"/></name><argument_list pos:line="107" pos:column="100">(<argument><expr><name pos:line="107" pos:column="101">errno<pos:position pos:line="107" pos:column="106"/></name></expr></argument>)<pos:position pos:line="107" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="109"/></expr_stmt>
        <return pos:line="108" pos:column="9">return <expr><literal type="number" pos:line="108" pos:column="16">1<pos:position pos:line="108" pos:column="17"/></literal></expr>;<pos:position pos:line="108" pos:column="18"/></return>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="111" pos:column="5">close<pos:position pos:line="111" pos:column="10"/></name><argument_list pos:line="111" pos:column="10">(<argument><expr><name><name pos:line="111" pos:column="11">pkin<pos:position pos:line="111" pos:column="15"/></name><index pos:line="111" pos:column="15">[<expr><literal type="number" pos:line="111" pos:column="16">0<pos:position pos:line="111" pos:column="17"/></literal></expr>]<pos:position pos:line="111" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="111" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="112" pos:column="5">close<pos:position pos:line="112" pos:column="10"/></name><argument_list pos:line="112" pos:column="10">(<argument><expr><name><name pos:line="112" pos:column="11">pkout<pos:position pos:line="112" pos:column="16"/></name><index pos:line="112" pos:column="16">[<expr><literal type="number" pos:line="112" pos:column="17">1<pos:position pos:line="112" pos:column="18"/></literal></expr>]<pos:position pos:line="112" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="112" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="21"/></expr_stmt>

    <if pos:line="114" pos:column="5">if <condition pos:line="114" pos:column="8">(<expr><call><name pos:line="114" pos:column="9">pipe<pos:position pos:line="114" pos:column="13"/></name><argument_list pos:line="114" pos:column="13">(<argument><expr><name pos:line="114" pos:column="14">pnin<pos:position pos:line="114" pos:column="18"/></name></expr></argument>)<pos:position pos:line="114" pos:column="19"/></argument_list></call> <operator pos:line="114" pos:column="20">&lt;<pos:position pos:line="114" pos:column="24"/></operator> <literal type="number" pos:line="114" pos:column="22">0<pos:position pos:line="114" pos:column="23"/></literal></expr>)<pos:position pos:line="114" pos:column="24"/></condition><then pos:line="114" pos:column="24"> <block pos:line="114" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="115" pos:column="9">fprintf<pos:position pos:line="115" pos:column="16"/></name><argument_list pos:line="115" pos:column="16">(<argument><expr><name pos:line="115" pos:column="17">stderr<pos:position pos:line="115" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="25">"%s| %s: Could not assign streams for pnin\n"<pos:position pos:line="115" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="72">LogTime<pos:position pos:line="115" pos:column="79"/></name><argument_list pos:line="115" pos:column="79">()<pos:position pos:line="115" pos:column="81"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="115" pos:column="83">PROGRAM<pos:position pos:line="115" pos:column="90"/></name></expr></argument>)<pos:position pos:line="115" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="92"/></expr_stmt>
        <return pos:line="116" pos:column="9">return <expr><literal type="number" pos:line="116" pos:column="16">1<pos:position pos:line="116" pos:column="17"/></literal></expr>;<pos:position pos:line="116" pos:column="18"/></return>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if>
    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><call><name pos:line="118" pos:column="9">pipe<pos:position pos:line="118" pos:column="13"/></name><argument_list pos:line="118" pos:column="13">(<argument><expr><name pos:line="118" pos:column="14">pnout<pos:position pos:line="118" pos:column="19"/></name></expr></argument>)<pos:position pos:line="118" pos:column="20"/></argument_list></call> <operator pos:line="118" pos:column="21">&lt;<pos:position pos:line="118" pos:column="25"/></operator> <literal type="number" pos:line="118" pos:column="23">0<pos:position pos:line="118" pos:column="24"/></literal></expr>)<pos:position pos:line="118" pos:column="25"/></condition><then pos:line="118" pos:column="25"> <block pos:line="118" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">fprintf<pos:position pos:line="119" pos:column="16"/></name><argument_list pos:line="119" pos:column="16">(<argument><expr><name pos:line="119" pos:column="17">stderr<pos:position pos:line="119" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="25">"%s| %s: Could not assign streams for pnout\n"<pos:position pos:line="119" pos:column="71"/></literal></expr></argument>, <argument><expr><call><name pos:line="119" pos:column="73">LogTime<pos:position pos:line="119" pos:column="80"/></name><argument_list pos:line="119" pos:column="80">()<pos:position pos:line="119" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="119" pos:column="84">PROGRAM<pos:position pos:line="119" pos:column="91"/></name></expr></argument>)<pos:position pos:line="119" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="93"/></expr_stmt>
        <return pos:line="120" pos:column="9">return <expr><literal type="number" pos:line="120" pos:column="16">1<pos:position pos:line="120" pos:column="17"/></literal></expr>;<pos:position pos:line="120" pos:column="18"/></return>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>

    <if pos:line="123" pos:column="5">if  <condition pos:line="123" pos:column="9">(<expr><operator pos:line="123" pos:column="10">(<pos:position pos:line="123" pos:column="11"/></operator> <name pos:line="123" pos:column="12">fpid<pos:position pos:line="123" pos:column="16"/></name> <operator pos:line="123" pos:column="17">=<pos:position pos:line="123" pos:column="18"/></operator> <call><name pos:line="123" pos:column="19">vfork<pos:position pos:line="123" pos:column="24"/></name><argument_list pos:line="123" pos:column="24">()<pos:position pos:line="123" pos:column="26"/></argument_list></call><operator pos:line="123" pos:column="26">)<pos:position pos:line="123" pos:column="27"/></operator> <operator pos:line="123" pos:column="28">&lt;<pos:position pos:line="123" pos:column="32"/></operator> <literal type="number" pos:line="123" pos:column="30">0<pos:position pos:line="123" pos:column="31"/></literal></expr> )<pos:position pos:line="123" pos:column="33"/></condition><then pos:line="123" pos:column="33"> <block pos:line="123" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">fprintf<pos:position pos:line="124" pos:column="16"/></name><argument_list pos:line="124" pos:column="16">(<argument><expr><name pos:line="124" pos:column="17">stderr<pos:position pos:line="124" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="25">"%s| %s: Failed second fork\n"<pos:position pos:line="124" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="57">LogTime<pos:position pos:line="124" pos:column="64"/></name><argument_list pos:line="124" pos:column="64">()<pos:position pos:line="124" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="124" pos:column="68">PROGRAM<pos:position pos:line="124" pos:column="75"/></name></expr></argument>)<pos:position pos:line="124" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="77"/></expr_stmt>
        <return pos:line="125" pos:column="9">return <expr><literal type="number" pos:line="125" pos:column="16">1<pos:position pos:line="125" pos:column="17"/></literal></expr>;<pos:position pos:line="125" pos:column="18"/></return>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>

    <if pos:line="128" pos:column="5">if <condition pos:line="128" pos:column="8">( <expr><name pos:line="128" pos:column="10">fpid<pos:position pos:line="128" pos:column="14"/></name> <operator pos:line="128" pos:column="15">==<pos:position pos:line="128" pos:column="17"/></operator> <literal type="number" pos:line="128" pos:column="18">0<pos:position pos:line="128" pos:column="19"/></literal></expr> )<pos:position pos:line="128" pos:column="21"/></condition><then pos:line="128" pos:column="21"> <block pos:line="128" pos:column="22">{
        <comment type="block" pos:line="129" pos:column="9">/* Second Child for NTLM helper */</comment>

        <expr_stmt><expr><call><name pos:line="131" pos:column="9">close<pos:position pos:line="131" pos:column="14"/></name><argument_list pos:line="131" pos:column="14">(<argument><expr><name><name pos:line="131" pos:column="15">pnin<pos:position pos:line="131" pos:column="19"/></name><index pos:line="131" pos:column="19">[<expr><literal type="number" pos:line="131" pos:column="20">1<pos:position pos:line="131" pos:column="21"/></literal></expr>]<pos:position pos:line="131" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="131" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">dup2<pos:position pos:line="132" pos:column="13"/></name><argument_list pos:line="132" pos:column="13">(<argument><expr><name><name pos:line="132" pos:column="14">pnin<pos:position pos:line="132" pos:column="18"/></name><index pos:line="132" pos:column="18">[<expr><literal type="number" pos:line="132" pos:column="19">0<pos:position pos:line="132" pos:column="20"/></literal></expr>]<pos:position pos:line="132" pos:column="21"/></index></name></expr></argument>,<argument><expr><name pos:line="132" pos:column="22">STDIN_FILENO<pos:position pos:line="132" pos:column="34"/></name></expr></argument>)<pos:position pos:line="132" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="133" pos:column="9">close<pos:position pos:line="133" pos:column="14"/></name><argument_list pos:line="133" pos:column="14">(<argument><expr><name><name pos:line="133" pos:column="15">pnin<pos:position pos:line="133" pos:column="19"/></name><index pos:line="133" pos:column="19">[<expr><literal type="number" pos:line="133" pos:column="20">0<pos:position pos:line="133" pos:column="21"/></literal></expr>]<pos:position pos:line="133" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="133" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="135" pos:column="9">close<pos:position pos:line="135" pos:column="14"/></name><argument_list pos:line="135" pos:column="14">(<argument><expr><name><name pos:line="135" pos:column="15">pnout<pos:position pos:line="135" pos:column="20"/></name><index pos:line="135" pos:column="20">[<expr><literal type="number" pos:line="135" pos:column="21">0<pos:position pos:line="135" pos:column="22"/></literal></expr>]<pos:position pos:line="135" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="136" pos:column="9">dup2<pos:position pos:line="136" pos:column="13"/></name><argument_list pos:line="136" pos:column="13">(<argument><expr><name><name pos:line="136" pos:column="14">pnout<pos:position pos:line="136" pos:column="19"/></name><index pos:line="136" pos:column="19">[<expr><literal type="number" pos:line="136" pos:column="20">1<pos:position pos:line="136" pos:column="21"/></literal></expr>]<pos:position pos:line="136" pos:column="22"/></index></name></expr></argument>,<argument><expr><name pos:line="136" pos:column="23">STDOUT_FILENO<pos:position pos:line="136" pos:column="36"/></name></expr></argument>)<pos:position pos:line="136" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">close<pos:position pos:line="137" pos:column="14"/></name><argument_list pos:line="137" pos:column="14">(<argument><expr><name><name pos:line="137" pos:column="15">pnout<pos:position pos:line="137" pos:column="20"/></name><index pos:line="137" pos:column="20">[<expr><literal type="number" pos:line="137" pos:column="21">1<pos:position pos:line="137" pos:column="22"/></literal></expr>]<pos:position pos:line="137" pos:column="23"/></index></name></expr></argument>)<pos:position pos:line="137" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="139" pos:column="9">setbuf<pos:position pos:line="139" pos:column="15"/></name><argument_list pos:line="139" pos:column="15">(<argument><expr><name pos:line="139" pos:column="16">stdin<pos:position pos:line="139" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="139" pos:column="23">NULL<pos:position pos:line="139" pos:column="27"/></name></expr></argument>)<pos:position pos:line="139" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">setbuf<pos:position pos:line="140" pos:column="15"/></name><argument_list pos:line="140" pos:column="15">(<argument><expr><name pos:line="140" pos:column="16">stdout<pos:position pos:line="140" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="24">NULL<pos:position pos:line="140" pos:column="28"/></name></expr></argument>)<pos:position pos:line="140" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="142" pos:column="9">execv<pos:position pos:line="142" pos:column="14"/></name><argument_list pos:line="142" pos:column="14">(<argument><expr><name><name pos:line="142" pos:column="15">nargs<pos:position pos:line="142" pos:column="20"/></name><index pos:line="142" pos:column="20">[<expr><literal type="number" pos:line="142" pos:column="21">0<pos:position pos:line="142" pos:column="22"/></literal></expr>]<pos:position pos:line="142" pos:column="23"/></index></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="25">nargs<pos:position pos:line="142" pos:column="30"/></name></expr></argument>)<pos:position pos:line="142" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="143" pos:column="9">fprintf<pos:position pos:line="143" pos:column="16"/></name><argument_list pos:line="143" pos:column="16">(<argument><expr><name pos:line="143" pos:column="17">stderr<pos:position pos:line="143" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="25">"%s| %s: Failed execv for %s: %s\n"<pos:position pos:line="143" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="62">LogTime<pos:position pos:line="143" pos:column="69"/></name><argument_list pos:line="143" pos:column="69">()<pos:position pos:line="143" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="143" pos:column="73">PROGRAM<pos:position pos:line="143" pos:column="80"/></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="82">nargs<pos:position pos:line="143" pos:column="87"/></name><index pos:line="143" pos:column="87">[<expr><literal type="number" pos:line="143" pos:column="88">0<pos:position pos:line="143" pos:column="89"/></literal></expr>]<pos:position pos:line="143" pos:column="90"/></index></name></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="92">strerror<pos:position pos:line="143" pos:column="100"/></name><argument_list pos:line="143" pos:column="100">(<argument><expr><name pos:line="143" pos:column="101">errno<pos:position pos:line="143" pos:column="106"/></name></expr></argument>)<pos:position pos:line="143" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="143" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="109"/></expr_stmt>
        <return pos:line="144" pos:column="9">return <expr><literal type="number" pos:line="144" pos:column="16">1<pos:position pos:line="144" pos:column="17"/></literal></expr>;<pos:position pos:line="144" pos:column="18"/></return>
    }<pos:position pos:line="145" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="147" pos:column="5">close<pos:position pos:line="147" pos:column="10"/></name><argument_list pos:line="147" pos:column="10">(<argument><expr><name><name pos:line="147" pos:column="11">pnin<pos:position pos:line="147" pos:column="15"/></name><index pos:line="147" pos:column="15">[<expr><literal type="number" pos:line="147" pos:column="16">0<pos:position pos:line="147" pos:column="17"/></literal></expr>]<pos:position pos:line="147" pos:column="18"/></index></name></expr></argument>)<pos:position pos:line="147" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="148" pos:column="5">close<pos:position pos:line="148" pos:column="10"/></name><argument_list pos:line="148" pos:column="10">(<argument><expr><name><name pos:line="148" pos:column="11">pnout<pos:position pos:line="148" pos:column="16"/></name><index pos:line="148" pos:column="16">[<expr><literal type="number" pos:line="148" pos:column="17">1<pos:position pos:line="148" pos:column="18"/></literal></expr>]<pos:position pos:line="148" pos:column="19"/></index></name></expr></argument>)<pos:position pos:line="148" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="21"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="150" pos:column="5">FILE<pos:position pos:line="150" pos:column="9"/></name> <modifier pos:line="150" pos:column="10">*<pos:position pos:line="150" pos:column="11"/></modifier></type><name pos:line="150" pos:column="11">FDKIN<pos:position pos:line="150" pos:column="16"/></name><init pos:line="150" pos:column="16">=<expr><call><name pos:line="150" pos:column="17">fdopen<pos:position pos:line="150" pos:column="23"/></name><argument_list pos:line="150" pos:column="23">(<argument><expr><name><name pos:line="150" pos:column="24">pkin<pos:position pos:line="150" pos:column="28"/></name><index pos:line="150" pos:column="28">[<expr><literal type="number" pos:line="150" pos:column="29">1<pos:position pos:line="150" pos:column="30"/></literal></expr>]<pos:position pos:line="150" pos:column="31"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="150" pos:column="32">"w"<pos:position pos:line="150" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="150" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="151" pos:column="5">FILE<pos:position pos:line="151" pos:column="9"/></name> <modifier pos:line="151" pos:column="10">*<pos:position pos:line="151" pos:column="11"/></modifier></type><name pos:line="151" pos:column="11">FDKOUT<pos:position pos:line="151" pos:column="17"/></name><init pos:line="151" pos:column="17">=<expr><call><name pos:line="151" pos:column="18">fdopen<pos:position pos:line="151" pos:column="24"/></name><argument_list pos:line="151" pos:column="24">(<argument><expr><name><name pos:line="151" pos:column="25">pkout<pos:position pos:line="151" pos:column="30"/></name><index pos:line="151" pos:column="30">[<expr><literal type="number" pos:line="151" pos:column="31">0<pos:position pos:line="151" pos:column="32"/></literal></expr>]<pos:position pos:line="151" pos:column="33"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="151" pos:column="34">"r"<pos:position pos:line="151" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="151" pos:column="39"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="153" pos:column="5">FILE<pos:position pos:line="153" pos:column="9"/></name> <modifier pos:line="153" pos:column="10">*<pos:position pos:line="153" pos:column="11"/></modifier></type><name pos:line="153" pos:column="11">FDNIN<pos:position pos:line="153" pos:column="16"/></name><init pos:line="153" pos:column="16">=<expr><call><name pos:line="153" pos:column="17">fdopen<pos:position pos:line="153" pos:column="23"/></name><argument_list pos:line="153" pos:column="23">(<argument><expr><name><name pos:line="153" pos:column="24">pnin<pos:position pos:line="153" pos:column="28"/></name><index pos:line="153" pos:column="28">[<expr><literal type="number" pos:line="153" pos:column="29">1<pos:position pos:line="153" pos:column="30"/></literal></expr>]<pos:position pos:line="153" pos:column="31"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="153" pos:column="32">"w"<pos:position pos:line="153" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="153" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="154" pos:column="5">FILE<pos:position pos:line="154" pos:column="9"/></name> <modifier pos:line="154" pos:column="10">*<pos:position pos:line="154" pos:column="11"/></modifier></type><name pos:line="154" pos:column="11">FDNOUT<pos:position pos:line="154" pos:column="17"/></name><init pos:line="154" pos:column="17">=<expr><call><name pos:line="154" pos:column="18">fdopen<pos:position pos:line="154" pos:column="24"/></name><argument_list pos:line="154" pos:column="24">(<argument><expr><name><name pos:line="154" pos:column="25">pnout<pos:position pos:line="154" pos:column="30"/></name><index pos:line="154" pos:column="30">[<expr><literal type="number" pos:line="154" pos:column="31">0<pos:position pos:line="154" pos:column="32"/></literal></expr>]<pos:position pos:line="154" pos:column="33"/></index></name></expr></argument>,<argument><expr><literal type="string" pos:line="154" pos:column="34">"r"<pos:position pos:line="154" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="154" pos:column="39"/></decl_stmt>

    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><operator pos:line="156" pos:column="9">!<pos:position pos:line="156" pos:column="10"/></operator><name pos:line="156" pos:column="10">FDKIN<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">||<pos:position pos:line="156" pos:column="18"/></operator> <operator pos:line="156" pos:column="19">!<pos:position pos:line="156" pos:column="20"/></operator><name pos:line="156" pos:column="20">FDKOUT<pos:position pos:line="156" pos:column="26"/></name> <operator pos:line="156" pos:column="27">||<pos:position pos:line="156" pos:column="29"/></operator> <operator pos:line="156" pos:column="30">!<pos:position pos:line="156" pos:column="31"/></operator><name pos:line="156" pos:column="31">FDNIN<pos:position pos:line="156" pos:column="36"/></name> <operator pos:line="156" pos:column="37">||<pos:position pos:line="156" pos:column="39"/></operator> <operator pos:line="156" pos:column="40">!<pos:position pos:line="156" pos:column="41"/></operator><name pos:line="156" pos:column="41">FDNOUT<pos:position pos:line="156" pos:column="47"/></name></expr>)<pos:position pos:line="156" pos:column="48"/></condition><then pos:line="156" pos:column="48"> <block pos:line="156" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">fprintf<pos:position pos:line="157" pos:column="16"/></name><argument_list pos:line="157" pos:column="16">(<argument><expr><name pos:line="157" pos:column="17">stderr<pos:position pos:line="157" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="25">"%s| %s: Could not assign streams for FDKIN/FDKOUT/FDNIN/FDNOUT\n"<pos:position pos:line="157" pos:column="91"/></literal></expr></argument>, <argument><expr><call><name pos:line="157" pos:column="93">LogTime<pos:position pos:line="157" pos:column="100"/></name><argument_list pos:line="157" pos:column="100">()<pos:position pos:line="157" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="157" pos:column="104">PROGRAM<pos:position pos:line="157" pos:column="111"/></name></expr></argument>)<pos:position pos:line="157" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="158" pos:column="9">closeFds<pos:position pos:line="158" pos:column="17"/></name><argument_list pos:line="158" pos:column="17">(<argument><expr><name pos:line="158" pos:column="18">FDKIN<pos:position pos:line="158" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="25">FDKOUT<pos:position pos:line="158" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="33">FDNIN<pos:position pos:line="158" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="40">FDNOUT<pos:position pos:line="158" pos:column="46"/></name></expr></argument>)<pos:position pos:line="158" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="48"/></expr_stmt>
        <return pos:line="159" pos:column="9">return <expr><literal type="number" pos:line="159" pos:column="16">1<pos:position pos:line="159" pos:column="17"/></literal></expr>;<pos:position pos:line="159" pos:column="18"/></return>
    }<pos:position pos:line="160" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="162" pos:column="5">setbuf<pos:position pos:line="162" pos:column="11"/></name><argument_list pos:line="162" pos:column="11">(<argument><expr><name pos:line="162" pos:column="12">FDKIN<pos:position pos:line="162" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="19">NULL<pos:position pos:line="162" pos:column="23"/></name></expr></argument>)<pos:position pos:line="162" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="163" pos:column="5">setbuf<pos:position pos:line="163" pos:column="11"/></name><argument_list pos:line="163" pos:column="11">(<argument><expr><name pos:line="163" pos:column="12">FDKOUT<pos:position pos:line="163" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="20">NULL<pos:position pos:line="163" pos:column="24"/></name></expr></argument>)<pos:position pos:line="163" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="164" pos:column="5">setbuf<pos:position pos:line="164" pos:column="11"/></name><argument_list pos:line="164" pos:column="11">(<argument><expr><name pos:line="164" pos:column="12">FDNIN<pos:position pos:line="164" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="19">NULL<pos:position pos:line="164" pos:column="23"/></name></expr></argument>)<pos:position pos:line="164" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="165" pos:column="5">setbuf<pos:position pos:line="165" pos:column="11"/></name><argument_list pos:line="165" pos:column="11">(<argument><expr><name pos:line="165" pos:column="12">FDNOUT<pos:position pos:line="165" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="20">NULL<pos:position pos:line="165" pos:column="24"/></name></expr></argument>)<pos:position pos:line="165" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="26"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="167" pos:column="5">int<pos:position pos:line="167" pos:column="8"/></name></type> <name pos:line="167" pos:column="9">result<pos:position pos:line="167" pos:column="15"/></name> <init pos:line="167" pos:column="16">= <expr><call><name pos:line="167" pos:column="18">processingLoop<pos:position pos:line="167" pos:column="32"/></name><argument_list pos:line="167" pos:column="32">(<argument><expr><name pos:line="167" pos:column="33">FDKIN<pos:position pos:line="167" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="40">FDKOUT<pos:position pos:line="167" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="48">FDNIN<pos:position pos:line="167" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="55">FDNOUT<pos:position pos:line="167" pos:column="61"/></name></expr></argument>)<pos:position pos:line="167" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="167" pos:column="63"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="168" pos:column="5">closeFds<pos:position pos:line="168" pos:column="13"/></name><argument_list pos:line="168" pos:column="13">(<argument><expr><name pos:line="168" pos:column="14">FDKIN<pos:position pos:line="168" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="21">FDKOUT<pos:position pos:line="168" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="29">FDNIN<pos:position pos:line="168" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="36">FDNOUT<pos:position pos:line="168" pos:column="42"/></name></expr></argument>)<pos:position pos:line="168" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="44"/></expr_stmt>
    <return pos:line="169" pos:column="5">return <expr><name pos:line="169" pos:column="12">result<pos:position pos:line="169" pos:column="18"/></name></expr>;<pos:position pos:line="169" pos:column="19"/></return>
}<pos:position pos:line="170" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2292_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsParseWIN32Registry<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">token<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HKEY<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">hndKey<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">hndKey2<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">WIN32_OS_version<pos:position pos:line="8" pos:column="29"/></name></expr>)<pos:position pos:line="8" pos:column="30"/></condition> <block pos:line="8" pos:column="31">{

    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">_WIN_OS_WINNT<pos:position pos:line="10" pos:column="23"/></name></expr>:<pos:position pos:line="10" pos:column="24"/></case>
        <comment type="block" pos:line="11" pos:column="9">/* get nameservers from the Windows NT registry */</comment>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">RegOpenKeyEx<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">HKEY_LOCAL_MACHINE<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">REG_TCPIP_PARA<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="62">0<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="65">KEY_QUERY_VALUE<pos:position pos:line="13" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="82">&amp;<pos:position pos:line="13" pos:column="87"/></operator><name pos:line="13" pos:column="83">hndKey<pos:position pos:line="13" pos:column="89"/></name></expr></argument>)<pos:position pos:line="13" pos:column="90"/></argument_list></call> <operator pos:line="13" pos:column="91">==<pos:position pos:line="13" pos:column="93"/></operator> <name pos:line="13" pos:column="94">ERROR_SUCCESS<pos:position pos:line="13" pos:column="107"/></name></expr>)<pos:position pos:line="13" pos:column="108"/></condition><then pos:line="13" pos:column="108"> <block pos:line="13" pos:column="109">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">DWORD<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">Type<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="15" pos:column="13">DWORD<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">Size<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">LONG<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">Result<pos:position pos:line="16" pos:column="24"/></name></decl>;<pos:position pos:line="16" pos:column="25"/></decl_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">Result<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <call><name pos:line="17" pos:column="22">RegQueryValueEx<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">hndKey<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"DhcpNameServer"<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">NULL<pos:position pos:line="17" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="70">&amp;<pos:position pos:line="17" pos:column="75"/></operator><name pos:line="17" pos:column="71">Type<pos:position pos:line="17" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="77">NULL<pos:position pos:line="17" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="83">&amp;<pos:position pos:line="17" pos:column="88"/></operator><name pos:line="17" pos:column="84">Size<pos:position pos:line="17" pos:column="88"/></name></expr></argument>)<pos:position pos:line="17" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="90"/></expr_stmt>

            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">Result<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">==<pos:position pos:line="19" pos:column="26"/></operator> <name pos:line="19" pos:column="27">ERROR_SUCCESS<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">&amp;&amp;<pos:position pos:line="19" pos:column="51"/></operator> <name pos:line="19" pos:column="44">Size<pos:position pos:line="19" pos:column="48"/></name></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">t<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">char<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">*<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">)<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">xmalloc<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">Size<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">RegQueryValueEx<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">hndKey<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="41">"DhcpNameServer"<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="59">NULL<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="65">&amp;<pos:position pos:line="21" pos:column="70"/></operator><name pos:line="21" pos:column="66">Type<pos:position pos:line="21" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="72">(<pos:position pos:line="21" pos:column="73"/></operator><name pos:line="21" pos:column="73">LPBYTE<pos:position pos:line="21" pos:column="79"/></name><operator pos:line="21" pos:column="79">)<pos:position pos:line="21" pos:column="80"/></operator> <name pos:line="21" pos:column="81">t<pos:position pos:line="21" pos:column="82"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="84">&amp;<pos:position pos:line="21" pos:column="89"/></operator><name pos:line="21" pos:column="85">Size<pos:position pos:line="21" pos:column="89"/></name></expr></argument>)<pos:position pos:line="21" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="91"/></expr_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">token<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <call><name pos:line="22" pos:column="25">strtok<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">t<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="35">", "<pos:position pos:line="22" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>

                <while pos:line="24" pos:column="17">while <condition pos:line="24" pos:column="23">(<expr><name pos:line="24" pos:column="24">token<pos:position pos:line="24" pos:column="29"/></name></expr>)<pos:position pos:line="24" pos:column="30"/></condition> <block pos:line="24" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="25" pos:column="21">idnsAddNameserver<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">token<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="26" pos:column="21">debugs<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><literal type="number" pos:line="26" pos:column="28">78<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">DBG_IMPORTANT<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="47">"Adding DHCP nameserver "<pos:position pos:line="26" pos:column="72"/></literal> <operator pos:line="26" pos:column="73">&lt;&lt;<pos:position pos:line="26" pos:column="81"/></operator> <name pos:line="26" pos:column="76">token<pos:position pos:line="26" pos:column="81"/></name> <operator pos:line="26" pos:column="82">&lt;&lt;<pos:position pos:line="26" pos:column="90"/></operator> <literal type="string" pos:line="26" pos:column="85">" from Registry"<pos:position pos:line="26" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="103"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="27" pos:column="21">token<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <call><name pos:line="27" pos:column="29">strtok<pos:position pos:line="27" pos:column="35"/></name><argument_list pos:line="27" pos:column="35">(<argument><expr><name pos:line="27" pos:column="36">NULL<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="42">","<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="28" pos:column="18"/></block></while>
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">xfree<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">t<pos:position pos:line="29" pos:column="24"/></name></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="32" pos:column="13">Result<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <call><name pos:line="32" pos:column="22">RegQueryValueEx<pos:position pos:line="32" pos:column="37"/></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">hndKey<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="46">"NameServer"<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">NULL<pos:position pos:line="32" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="66">&amp;<pos:position pos:line="32" pos:column="71"/></operator><name pos:line="32" pos:column="67">Type<pos:position pos:line="32" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="73">NULL<pos:position pos:line="32" pos:column="77"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="79">&amp;<pos:position pos:line="32" pos:column="84"/></operator><name pos:line="32" pos:column="80">Size<pos:position pos:line="32" pos:column="84"/></name></expr></argument>)<pos:position pos:line="32" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="86"/></expr_stmt>

            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">Result<pos:position pos:line="34" pos:column="23"/></name> <operator pos:line="34" pos:column="24">==<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="27">ERROR_SUCCESS<pos:position pos:line="34" pos:column="40"/></name> <operator pos:line="34" pos:column="41">&amp;&amp;<pos:position pos:line="34" pos:column="51"/></operator> <name pos:line="34" pos:column="44">Size<pos:position pos:line="34" pos:column="48"/></name></expr>)<pos:position pos:line="34" pos:column="49"/></condition><then pos:line="34" pos:column="49"> <block pos:line="34" pos:column="50">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">t<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">char<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator> <call><name pos:line="35" pos:column="30">xmalloc<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">Size<pos:position pos:line="35" pos:column="42"/></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="36" pos:column="17">RegQueryValueEx<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">hndKey<pos:position pos:line="36" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="41">"NameServer"<pos:position pos:line="36" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="55">NULL<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="61">&amp;<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="62">Type<pos:position pos:line="36" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="68">(<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="69">LPBYTE<pos:position pos:line="36" pos:column="75"/></name><operator pos:line="36" pos:column="75">)<pos:position pos:line="36" pos:column="76"/></operator> <name pos:line="36" pos:column="77">t<pos:position pos:line="36" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="80">&amp;<pos:position pos:line="36" pos:column="85"/></operator><name pos:line="36" pos:column="81">Size<pos:position pos:line="36" pos:column="85"/></name></expr></argument>)<pos:position pos:line="36" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="87"/></expr_stmt>
                <expr_stmt><expr><name pos:line="37" pos:column="17">token<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <call><name pos:line="37" pos:column="25">strtok<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">t<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="35">", "<pos:position pos:line="37" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>

                <while pos:line="39" pos:column="17">while <condition pos:line="39" pos:column="23">(<expr><name pos:line="39" pos:column="24">token<pos:position pos:line="39" pos:column="29"/></name></expr>)<pos:position pos:line="39" pos:column="30"/></condition> <block pos:line="39" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="40" pos:column="21">debugs<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><literal type="number" pos:line="40" pos:column="28">78<pos:position pos:line="40" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">DBG_IMPORTANT<pos:position pos:line="40" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="47">"Adding nameserver "<pos:position pos:line="40" pos:column="67"/></literal> <operator pos:line="40" pos:column="68">&lt;&lt;<pos:position pos:line="40" pos:column="76"/></operator> <name pos:line="40" pos:column="71">token<pos:position pos:line="40" pos:column="76"/></name> <operator pos:line="40" pos:column="77">&lt;&lt;<pos:position pos:line="40" pos:column="85"/></operator> <literal type="string" pos:line="40" pos:column="80">" from Registry"<pos:position pos:line="40" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="98"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="41" pos:column="21">idnsAddNameserver<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">token<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="42" pos:column="21">token<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <call><name pos:line="42" pos:column="29">strtok<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">NULL<pos:position pos:line="42" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="42">", "<pos:position pos:line="42" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="43" pos:column="18"/></block></while>
                <expr_stmt><expr><call><name pos:line="44" pos:column="17">xfree<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">t<pos:position pos:line="44" pos:column="24"/></name></expr></argument>)<pos:position pos:line="44" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="45" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="47" pos:column="13">RegCloseKey<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">hndKey<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="50" pos:column="9">idnsParseWIN32SearchList<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><literal type="string" pos:line="50" pos:column="34">" "<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>

        <break pos:line="52" pos:column="9">break;<pos:position pos:line="52" pos:column="15"/></break>

    <case pos:line="54" pos:column="5">case <expr><name pos:line="54" pos:column="10">_WIN_OS_WIN2K<pos:position pos:line="54" pos:column="23"/></name></expr>:<pos:position pos:line="54" pos:column="24"/></case>

    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">_WIN_OS_WINXP<pos:position pos:line="56" pos:column="23"/></name></expr>:<pos:position pos:line="56" pos:column="24"/></case>

    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">_WIN_OS_WINNET<pos:position pos:line="58" pos:column="24"/></name></expr>:<pos:position pos:line="58" pos:column="25"/></case>

    <case pos:line="60" pos:column="5">case <expr><name pos:line="60" pos:column="10">_WIN_OS_WINLON<pos:position pos:line="60" pos:column="24"/></name></expr>:<pos:position pos:line="60" pos:column="25"/></case>

    <case pos:line="62" pos:column="5">case <expr><name pos:line="62" pos:column="10">_WIN_OS_WIN7<pos:position pos:line="62" pos:column="22"/></name></expr>:<pos:position pos:line="62" pos:column="23"/></case>
        <comment type="block" pos:line="63" pos:column="9">/* get nameservers from the Windows 2000 registry */</comment>
        <comment type="block" pos:line="64" pos:column="9">/* search all interfaces for DNS server addresses */</comment>

        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><call><name pos:line="66" pos:column="13">RegOpenKeyEx<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name pos:line="66" pos:column="26">HKEY_LOCAL_MACHINE<pos:position pos:line="66" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="46">REG_TCPIP_PARA_INTERFACES<pos:position pos:line="66" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="73">0<pos:position pos:line="66" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="76">KEY_READ<pos:position pos:line="66" pos:column="84"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="86">&amp;<pos:position pos:line="66" pos:column="91"/></operator><name pos:line="66" pos:column="87">hndKey<pos:position pos:line="66" pos:column="93"/></name></expr></argument>)<pos:position pos:line="66" pos:column="94"/></argument_list></call> <operator pos:line="66" pos:column="95">==<pos:position pos:line="66" pos:column="97"/></operator> <name pos:line="66" pos:column="98">ERROR_SUCCESS<pos:position pos:line="66" pos:column="111"/></name></expr>)<pos:position pos:line="66" pos:column="112"/></condition><then pos:line="66" pos:column="112"> <block pos:line="66" pos:column="113">{
            <decl_stmt><decl><type><name pos:line="67" pos:column="13">int<pos:position pos:line="67" pos:column="16"/></name></type> <name pos:line="67" pos:column="17">i<pos:position pos:line="67" pos:column="18"/></name></decl>;<pos:position pos:line="67" pos:column="19"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="68" pos:column="13">DWORD<pos:position pos:line="68" pos:column="18"/></name></type> <name pos:line="68" pos:column="19">MaxSubkeyLen<pos:position pos:line="68" pos:column="31"/></name></decl>, <decl><type ref="prev"/><name pos:line="68" pos:column="33">InterfacesCount<pos:position pos:line="68" pos:column="48"/></name></decl>;<pos:position pos:line="68" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="69" pos:column="13">char<pos:position pos:line="69" pos:column="17"/></name> <modifier pos:line="69" pos:column="18">*<pos:position pos:line="69" pos:column="19"/></modifier></type><name pos:line="69" pos:column="19">keyname<pos:position pos:line="69" pos:column="26"/></name></decl>;<pos:position pos:line="69" pos:column="27"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="70" pos:column="13">FILETIME<pos:position pos:line="70" pos:column="21"/></name></type> <name pos:line="70" pos:column="22">ftLastWriteTime<pos:position pos:line="70" pos:column="37"/></name></decl>;<pos:position pos:line="70" pos:column="38"/></decl_stmt>

            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><call><name pos:line="72" pos:column="17">RegQueryInfoKey<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name pos:line="72" pos:column="33">hndKey<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="41">NULL<pos:position pos:line="72" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="47">NULL<pos:position pos:line="72" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="53">NULL<pos:position pos:line="72" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="59">&amp;<pos:position pos:line="72" pos:column="64"/></operator><name pos:line="72" pos:column="60">InterfacesCount<pos:position pos:line="72" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="77">&amp;<pos:position pos:line="72" pos:column="82"/></operator><name pos:line="72" pos:column="78">MaxSubkeyLen<pos:position pos:line="72" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="92">NULL<pos:position pos:line="72" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="98">NULL<pos:position pos:line="72" pos:column="102"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="104">NULL<pos:position pos:line="72" pos:column="108"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="110">NULL<pos:position pos:line="72" pos:column="114"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="116">NULL<pos:position pos:line="72" pos:column="120"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="122">NULL<pos:position pos:line="72" pos:column="126"/></name></expr></argument>)<pos:position pos:line="72" pos:column="127"/></argument_list></call> <operator pos:line="72" pos:column="128">==<pos:position pos:line="72" pos:column="130"/></operator> <name pos:line="72" pos:column="131">ERROR_SUCCESS<pos:position pos:line="72" pos:column="144"/></name></expr>)<pos:position pos:line="72" pos:column="145"/></condition><then pos:line="72" pos:column="145"> <block pos:line="72" pos:column="146">{
                <expr_stmt><expr><name pos:line="73" pos:column="17">keyname<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <operator pos:line="73" pos:column="27">(<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="28">char<pos:position pos:line="73" pos:column="32"/></name> <operator pos:line="73" pos:column="33">*<pos:position pos:line="73" pos:column="34"/></operator><operator pos:line="73" pos:column="34">)<pos:position pos:line="73" pos:column="35"/></operator> <call><name pos:line="73" pos:column="36">xmalloc<pos:position pos:line="73" pos:column="43"/></name><argument_list pos:line="73" pos:column="43">(<argument><expr><operator pos:line="73" pos:column="44">++<pos:position pos:line="73" pos:column="46"/></operator><name pos:line="73" pos:column="46">MaxSubkeyLen<pos:position pos:line="73" pos:column="58"/></name></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>
                <for pos:line="74" pos:column="17">for <control pos:line="74" pos:column="21">(<init><expr><name pos:line="74" pos:column="22">i<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">=<pos:position pos:line="74" pos:column="25"/></operator> <literal type="number" pos:line="74" pos:column="26">0<pos:position pos:line="74" pos:column="27"/></literal></expr>;<pos:position pos:line="74" pos:column="28"/></init> <condition><expr><name pos:line="74" pos:column="29">i<pos:position pos:line="74" pos:column="30"/></name> <operator pos:line="74" pos:column="31">&lt;<pos:position pos:line="74" pos:column="35"/></operator> <operator pos:line="74" pos:column="33">(<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">int<pos:position pos:line="74" pos:column="37"/></name><operator pos:line="74" pos:column="37">)<pos:position pos:line="74" pos:column="38"/></operator> <name pos:line="74" pos:column="39">InterfacesCount<pos:position pos:line="74" pos:column="54"/></name></expr>;<pos:position pos:line="74" pos:column="55"/></condition> <incr><expr><operator pos:line="74" pos:column="56">++<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="58">i<pos:position pos:line="74" pos:column="59"/></name></expr></incr>)<pos:position pos:line="74" pos:column="60"/></control> <block pos:line="74" pos:column="61">{
                    <decl_stmt><decl><type><name pos:line="75" pos:column="21">DWORD<pos:position pos:line="75" pos:column="26"/></name></type> <name pos:line="75" pos:column="27">j<pos:position pos:line="75" pos:column="28"/></name></decl>;<pos:position pos:line="75" pos:column="29"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="76" pos:column="21">j<pos:position pos:line="76" pos:column="22"/></name> <operator pos:line="76" pos:column="23">=<pos:position pos:line="76" pos:column="24"/></operator> <name pos:line="76" pos:column="25">MaxSubkeyLen<pos:position pos:line="76" pos:column="37"/></name></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt>
                    <if pos:line="77" pos:column="21">if <condition pos:line="77" pos:column="24">(<expr><call><name pos:line="77" pos:column="25">RegEnumKeyEx<pos:position pos:line="77" pos:column="37"/></name><argument_list pos:line="77" pos:column="37">(<argument><expr><name pos:line="77" pos:column="38">hndKey<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">i<pos:position pos:line="77" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="49">keyname<pos:position pos:line="77" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="58">&amp;<pos:position pos:line="77" pos:column="63"/></operator><name pos:line="77" pos:column="59">j<pos:position pos:line="77" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="62">NULL<pos:position pos:line="77" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="68">NULL<pos:position pos:line="77" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="74">NULL<pos:position pos:line="77" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="80">&amp;<pos:position pos:line="77" pos:column="85"/></operator><name pos:line="77" pos:column="81">ftLastWriteTime<pos:position pos:line="77" pos:column="96"/></name></expr></argument>)<pos:position pos:line="77" pos:column="97"/></argument_list></call> <operator pos:line="77" pos:column="98">==<pos:position pos:line="77" pos:column="100"/></operator> <name pos:line="77" pos:column="101">ERROR_SUCCESS<pos:position pos:line="77" pos:column="114"/></name></expr>)<pos:position pos:line="77" pos:column="115"/></condition><then pos:line="77" pos:column="115"> <block pos:line="77" pos:column="116">{
                        <decl_stmt><decl><type><name pos:line="78" pos:column="25">char<pos:position pos:line="78" pos:column="29"/></name> <modifier pos:line="78" pos:column="30">*<pos:position pos:line="78" pos:column="31"/></modifier></type><name pos:line="78" pos:column="31">newkeyname<pos:position pos:line="78" pos:column="41"/></name></decl>;<pos:position pos:line="78" pos:column="42"/></decl_stmt>
                        <expr_stmt><expr><name pos:line="79" pos:column="25">newkeyname<pos:position pos:line="79" pos:column="35"/></name> <operator pos:line="79" pos:column="36">=<pos:position pos:line="79" pos:column="37"/></operator> <operator pos:line="79" pos:column="38">(<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="39">char<pos:position pos:line="79" pos:column="43"/></name> <operator pos:line="79" pos:column="44">*<pos:position pos:line="79" pos:column="45"/></operator><operator pos:line="79" pos:column="45">)<pos:position pos:line="79" pos:column="46"/></operator> <call><name pos:line="79" pos:column="47">xmalloc<pos:position pos:line="79" pos:column="54"/></name><argument_list pos:line="79" pos:column="54">(<argument><expr><sizeof pos:line="79" pos:column="55">sizeof<argument_list pos:line="79" pos:column="61">(<argument><expr><name pos:line="79" pos:column="62">REG_TCPIP_PARA_INTERFACES<pos:position pos:line="79" pos:column="87"/></name></expr></argument>)<pos:position pos:line="79" pos:column="88"/></argument_list></sizeof> <operator pos:line="79" pos:column="89">+<pos:position pos:line="79" pos:column="90"/></operator> <name pos:line="79" pos:column="91">j<pos:position pos:line="79" pos:column="92"/></name> <operator pos:line="79" pos:column="93">+<pos:position pos:line="79" pos:column="94"/></operator> <literal type="number" pos:line="79" pos:column="95">2<pos:position pos:line="79" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="98"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="80" pos:column="25">strcpy<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">newkeyname<pos:position pos:line="80" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="44">REG_TCPIP_PARA_INTERFACES<pos:position pos:line="80" pos:column="69"/></name></expr></argument>)<pos:position pos:line="80" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="71"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="81" pos:column="25">strcat<pos:position pos:line="81" pos:column="31"/></name><argument_list pos:line="81" pos:column="31">(<argument><expr><name pos:line="81" pos:column="32">newkeyname<pos:position pos:line="81" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="44">"\\"<pos:position pos:line="81" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="82" pos:column="25">strcat<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">newkeyname<pos:position pos:line="82" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="44">keyname<pos:position pos:line="82" pos:column="51"/></name></expr></argument>)<pos:position pos:line="82" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="53"/></expr_stmt>
                        <if pos:line="83" pos:column="25">if <condition pos:line="83" pos:column="28">(<expr><call><name pos:line="83" pos:column="29">RegOpenKeyEx<pos:position pos:line="83" pos:column="41"/></name><argument_list pos:line="83" pos:column="41">(<argument><expr><name pos:line="83" pos:column="42">HKEY_LOCAL_MACHINE<pos:position pos:line="83" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="62">newkeyname<pos:position pos:line="83" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="74">0<pos:position pos:line="83" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="77">KEY_QUERY_VALUE<pos:position pos:line="83" pos:column="92"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="94">&amp;<pos:position pos:line="83" pos:column="99"/></operator><name pos:line="83" pos:column="95">hndKey2<pos:position pos:line="83" pos:column="102"/></name></expr></argument>)<pos:position pos:line="83" pos:column="103"/></argument_list></call> <operator pos:line="83" pos:column="104">==<pos:position pos:line="83" pos:column="106"/></operator> <name pos:line="83" pos:column="107">ERROR_SUCCESS<pos:position pos:line="83" pos:column="120"/></name></expr>)<pos:position pos:line="83" pos:column="121"/></condition><then pos:line="83" pos:column="121"> <block pos:line="83" pos:column="122">{
                            <decl_stmt><decl><type><name pos:line="84" pos:column="29">DWORD<pos:position pos:line="84" pos:column="34"/></name></type> <name pos:line="84" pos:column="35">Type<pos:position pos:line="84" pos:column="39"/></name> <init pos:line="84" pos:column="40">= <expr><literal type="number" pos:line="84" pos:column="42">0<pos:position pos:line="84" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="84" pos:column="44"/></decl_stmt>
                            <decl_stmt><decl><type><name pos:line="85" pos:column="29">DWORD<pos:position pos:line="85" pos:column="34"/></name></type> <name pos:line="85" pos:column="35">Size<pos:position pos:line="85" pos:column="39"/></name> <init pos:line="85" pos:column="40">= <expr><literal type="number" pos:line="85" pos:column="42">0<pos:position pos:line="85" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="85" pos:column="44"/></decl_stmt>
                            <decl_stmt><decl><type><name pos:line="86" pos:column="29">LONG<pos:position pos:line="86" pos:column="33"/></name></type> <name pos:line="86" pos:column="34">Result<pos:position pos:line="86" pos:column="40"/></name></decl>;<pos:position pos:line="86" pos:column="41"/></decl_stmt>
                            <expr_stmt><expr><name pos:line="87" pos:column="29">Result<pos:position pos:line="87" pos:column="35"/></name> <operator pos:line="87" pos:column="36">=<pos:position pos:line="87" pos:column="37"/></operator> <call><name pos:line="87" pos:column="38">RegQueryValueEx<pos:position pos:line="87" pos:column="53"/></name><argument_list pos:line="87" pos:column="53">(<argument><expr><name pos:line="87" pos:column="54">hndKey2<pos:position pos:line="87" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="63">"DhcpNameServer"<pos:position pos:line="87" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="87" pos:column="81">NULL<pos:position pos:line="87" pos:column="85"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="87">&amp;<pos:position pos:line="87" pos:column="92"/></operator><name pos:line="87" pos:column="88">Type<pos:position pos:line="87" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="94">NULL<pos:position pos:line="87" pos:column="98"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="100">&amp;<pos:position pos:line="87" pos:column="105"/></operator><name pos:line="87" pos:column="101">Size<pos:position pos:line="87" pos:column="105"/></name></expr></argument>)<pos:position pos:line="87" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="107"/></expr_stmt>
                            <if pos:line="88" pos:column="29">if <condition pos:line="88" pos:column="32">(<expr><name pos:line="88" pos:column="33">Result<pos:position pos:line="88" pos:column="39"/></name> <operator pos:line="88" pos:column="40">==<pos:position pos:line="88" pos:column="42"/></operator> <name pos:line="88" pos:column="43">ERROR_SUCCESS<pos:position pos:line="88" pos:column="56"/></name> <operator pos:line="88" pos:column="57">&amp;&amp;<pos:position pos:line="88" pos:column="67"/></operator> <name pos:line="88" pos:column="60">Size<pos:position pos:line="88" pos:column="64"/></name></expr>)<pos:position pos:line="88" pos:column="65"/></condition><then pos:line="88" pos:column="65"> <block pos:line="88" pos:column="66">{
                                <expr_stmt><expr><name pos:line="89" pos:column="33">t<pos:position pos:line="89" pos:column="34"/></name> <operator pos:line="89" pos:column="35">=<pos:position pos:line="89" pos:column="36"/></operator> <operator pos:line="89" pos:column="37">(<pos:position pos:line="89" pos:column="38"/></operator><name pos:line="89" pos:column="38">char<pos:position pos:line="89" pos:column="42"/></name> <operator pos:line="89" pos:column="43">*<pos:position pos:line="89" pos:column="44"/></operator><operator pos:line="89" pos:column="44">)<pos:position pos:line="89" pos:column="45"/></operator> <call><name pos:line="89" pos:column="46">xmalloc<pos:position pos:line="89" pos:column="53"/></name><argument_list pos:line="89" pos:column="53">(<argument><expr><name pos:line="89" pos:column="54">Size<pos:position pos:line="89" pos:column="58"/></name></expr></argument>)<pos:position pos:line="89" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="60"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="90" pos:column="33">RegQueryValueEx<pos:position pos:line="90" pos:column="48"/></name><argument_list pos:line="90" pos:column="48">(<argument><expr><name pos:line="90" pos:column="49">hndKey2<pos:position pos:line="90" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="58">"DhcpNameServer"<pos:position pos:line="90" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="76">NULL<pos:position pos:line="90" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="82">&amp;<pos:position pos:line="90" pos:column="87"/></operator><name pos:line="90" pos:column="83">Type<pos:position pos:line="90" pos:column="87"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="89">(<pos:position pos:line="90" pos:column="90"/></operator><name pos:line="90" pos:column="90">LPBYTE<pos:position pos:line="90" pos:column="96"/></name><operator pos:line="90" pos:column="96">)<pos:position pos:line="90" pos:column="97"/></operator><name pos:line="90" pos:column="97">t<pos:position pos:line="90" pos:column="98"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="100">&amp;<pos:position pos:line="90" pos:column="105"/></operator><name pos:line="90" pos:column="101">Size<pos:position pos:line="90" pos:column="105"/></name></expr></argument>)<pos:position pos:line="90" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="107"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="91" pos:column="33">token<pos:position pos:line="91" pos:column="38"/></name> <operator pos:line="91" pos:column="39">=<pos:position pos:line="91" pos:column="40"/></operator> <call><name pos:line="91" pos:column="41">strtok<pos:position pos:line="91" pos:column="47"/></name><argument_list pos:line="91" pos:column="47">(<argument><expr><name pos:line="91" pos:column="48">t<pos:position pos:line="91" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="51">", "<pos:position pos:line="91" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="57"/></expr_stmt>
                                <while pos:line="92" pos:column="33">while <condition pos:line="92" pos:column="39">(<expr><name pos:line="92" pos:column="40">token<pos:position pos:line="92" pos:column="45"/></name></expr>)<pos:position pos:line="92" pos:column="46"/></condition> <block pos:line="92" pos:column="47">{
                                    <expr_stmt><expr><call><name pos:line="93" pos:column="37">debugs<pos:position pos:line="93" pos:column="43"/></name><argument_list pos:line="93" pos:column="43">(<argument><expr><literal type="number" pos:line="93" pos:column="44">78<pos:position pos:line="93" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="48">DBG_IMPORTANT<pos:position pos:line="93" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="63">"Adding DHCP nameserver "<pos:position pos:line="93" pos:column="88"/></literal> <operator pos:line="93" pos:column="89">&lt;&lt;<pos:position pos:line="93" pos:column="97"/></operator> <name pos:line="93" pos:column="92">token<pos:position pos:line="93" pos:column="97"/></name> <operator pos:line="93" pos:column="98">&lt;&lt;<pos:position pos:line="93" pos:column="106"/></operator> <literal type="string" pos:line="93" pos:column="101">" from Registry"<pos:position pos:line="93" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="119"/></expr_stmt>
                                    <expr_stmt><expr><call><name pos:line="94" pos:column="37">idnsAddNameserver<pos:position pos:line="94" pos:column="54"/></name><argument_list pos:line="94" pos:column="54">(<argument><expr><name pos:line="94" pos:column="55">token<pos:position pos:line="94" pos:column="60"/></name></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="62"/></expr_stmt>
                                    <expr_stmt><expr><name pos:line="95" pos:column="37">token<pos:position pos:line="95" pos:column="42"/></name> <operator pos:line="95" pos:column="43">=<pos:position pos:line="95" pos:column="44"/></operator> <call><name pos:line="95" pos:column="45">strtok<pos:position pos:line="95" pos:column="51"/></name><argument_list pos:line="95" pos:column="51">(<argument><expr><name pos:line="95" pos:column="52">NULL<pos:position pos:line="95" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="58">", "<pos:position pos:line="95" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="64"/></expr_stmt>
                                }<pos:position pos:line="96" pos:column="34"/></block></while>
                                <expr_stmt><expr><call><name pos:line="97" pos:column="33">xfree<pos:position pos:line="97" pos:column="38"/></name><argument_list pos:line="97" pos:column="38">(<argument><expr><name pos:line="97" pos:column="39">t<pos:position pos:line="97" pos:column="40"/></name></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>
                            }<pos:position pos:line="98" pos:column="30"/></block></then></if>

                            <expr_stmt><expr><name pos:line="100" pos:column="29">Result<pos:position pos:line="100" pos:column="35"/></name> <operator pos:line="100" pos:column="36">=<pos:position pos:line="100" pos:column="37"/></operator> <call><name pos:line="100" pos:column="38">RegQueryValueEx<pos:position pos:line="100" pos:column="53"/></name><argument_list pos:line="100" pos:column="53">(<argument><expr><name pos:line="100" pos:column="54">hndKey2<pos:position pos:line="100" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="63">"NameServer"<pos:position pos:line="100" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="77">NULL<pos:position pos:line="100" pos:column="81"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="83">&amp;<pos:position pos:line="100" pos:column="88"/></operator><name pos:line="100" pos:column="84">Type<pos:position pos:line="100" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="100" pos:column="90">NULL<pos:position pos:line="100" pos:column="94"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="96">&amp;<pos:position pos:line="100" pos:column="101"/></operator><name pos:line="100" pos:column="97">Size<pos:position pos:line="100" pos:column="101"/></name></expr></argument>)<pos:position pos:line="100" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="103"/></expr_stmt>
                            <if pos:line="101" pos:column="29">if <condition pos:line="101" pos:column="32">(<expr><name pos:line="101" pos:column="33">Result<pos:position pos:line="101" pos:column="39"/></name> <operator pos:line="101" pos:column="40">==<pos:position pos:line="101" pos:column="42"/></operator> <name pos:line="101" pos:column="43">ERROR_SUCCESS<pos:position pos:line="101" pos:column="56"/></name> <operator pos:line="101" pos:column="57">&amp;&amp;<pos:position pos:line="101" pos:column="67"/></operator> <name pos:line="101" pos:column="60">Size<pos:position pos:line="101" pos:column="64"/></name></expr>)<pos:position pos:line="101" pos:column="65"/></condition><then pos:line="101" pos:column="65"> <block pos:line="101" pos:column="66">{
                                <expr_stmt><expr><name pos:line="102" pos:column="33">t<pos:position pos:line="102" pos:column="34"/></name> <operator pos:line="102" pos:column="35">=<pos:position pos:line="102" pos:column="36"/></operator> <operator pos:line="102" pos:column="37">(<pos:position pos:line="102" pos:column="38"/></operator><name pos:line="102" pos:column="38">char<pos:position pos:line="102" pos:column="42"/></name> <operator pos:line="102" pos:column="43">*<pos:position pos:line="102" pos:column="44"/></operator><operator pos:line="102" pos:column="44">)<pos:position pos:line="102" pos:column="45"/></operator> <call><name pos:line="102" pos:column="46">xmalloc<pos:position pos:line="102" pos:column="53"/></name><argument_list pos:line="102" pos:column="53">(<argument><expr><name pos:line="102" pos:column="54">Size<pos:position pos:line="102" pos:column="58"/></name></expr></argument>)<pos:position pos:line="102" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="60"/></expr_stmt>
                                <expr_stmt><expr><call><name pos:line="103" pos:column="33">RegQueryValueEx<pos:position pos:line="103" pos:column="48"/></name><argument_list pos:line="103" pos:column="48">(<argument><expr><name pos:line="103" pos:column="49">hndKey2<pos:position pos:line="103" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="58">"NameServer"<pos:position pos:line="103" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="72">NULL<pos:position pos:line="103" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="78">&amp;<pos:position pos:line="103" pos:column="83"/></operator><name pos:line="103" pos:column="79">Type<pos:position pos:line="103" pos:column="83"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="85">(<pos:position pos:line="103" pos:column="86"/></operator><name pos:line="103" pos:column="86">LPBYTE<pos:position pos:line="103" pos:column="92"/></name><operator pos:line="103" pos:column="92">)<pos:position pos:line="103" pos:column="93"/></operator><name pos:line="103" pos:column="93">t<pos:position pos:line="103" pos:column="94"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="96">&amp;<pos:position pos:line="103" pos:column="101"/></operator><name pos:line="103" pos:column="97">Size<pos:position pos:line="103" pos:column="101"/></name></expr></argument>)<pos:position pos:line="103" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="103"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="104" pos:column="33">token<pos:position pos:line="104" pos:column="38"/></name> <operator pos:line="104" pos:column="39">=<pos:position pos:line="104" pos:column="40"/></operator> <call><name pos:line="104" pos:column="41">strtok<pos:position pos:line="104" pos:column="47"/></name><argument_list pos:line="104" pos:column="47">(<argument><expr><name pos:line="104" pos:column="48">t<pos:position pos:line="104" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="51">", "<pos:position pos:line="104" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="57"/></expr_stmt>
                                <while pos:line="105" pos:column="33">while <condition pos:line="105" pos:column="39">(<expr><name pos:line="105" pos:column="40">token<pos:position pos:line="105" pos:column="45"/></name></expr>)<pos:position pos:line="105" pos:column="46"/></condition> <block pos:line="105" pos:column="47">{
                                    <expr_stmt><expr><call><name pos:line="106" pos:column="37">debugs<pos:position pos:line="106" pos:column="43"/></name><argument_list pos:line="106" pos:column="43">(<argument><expr><literal type="number" pos:line="106" pos:column="44">78<pos:position pos:line="106" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="48">DBG_IMPORTANT<pos:position pos:line="106" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="63">"Adding nameserver "<pos:position pos:line="106" pos:column="83"/></literal> <operator pos:line="106" pos:column="84">&lt;&lt;<pos:position pos:line="106" pos:column="92"/></operator> <name pos:line="106" pos:column="87">token<pos:position pos:line="106" pos:column="92"/></name> <operator pos:line="106" pos:column="93">&lt;&lt;<pos:position pos:line="106" pos:column="101"/></operator> <literal type="string" pos:line="106" pos:column="96">" from Registry"<pos:position pos:line="106" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="114"/></expr_stmt>
                                    <expr_stmt><expr><call><name pos:line="107" pos:column="37">idnsAddNameserver<pos:position pos:line="107" pos:column="54"/></name><argument_list pos:line="107" pos:column="54">(<argument><expr><name pos:line="107" pos:column="55">token<pos:position pos:line="107" pos:column="60"/></name></expr></argument>)<pos:position pos:line="107" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="62"/></expr_stmt>
                                    <expr_stmt><expr><name pos:line="108" pos:column="37">token<pos:position pos:line="108" pos:column="42"/></name> <operator pos:line="108" pos:column="43">=<pos:position pos:line="108" pos:column="44"/></operator> <call><name pos:line="108" pos:column="45">strtok<pos:position pos:line="108" pos:column="51"/></name><argument_list pos:line="108" pos:column="51">(<argument><expr><name pos:line="108" pos:column="52">NULL<pos:position pos:line="108" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="58">", "<pos:position pos:line="108" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="64"/></expr_stmt>
                                }<pos:position pos:line="109" pos:column="34"/></block></while>

                                <expr_stmt><expr><call><name pos:line="111" pos:column="33">xfree<pos:position pos:line="111" pos:column="38"/></name><argument_list pos:line="111" pos:column="38">(<argument><expr><name pos:line="111" pos:column="39">t<pos:position pos:line="111" pos:column="40"/></name></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt>
                            }<pos:position pos:line="112" pos:column="30"/></block></then></if>

                            <expr_stmt><expr><call><name pos:line="114" pos:column="29">RegCloseKey<pos:position pos:line="114" pos:column="40"/></name><argument_list pos:line="114" pos:column="40">(<argument><expr><name pos:line="114" pos:column="41">hndKey2<pos:position pos:line="114" pos:column="48"/></name></expr></argument>)<pos:position pos:line="114" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="50"/></expr_stmt>
                        }<pos:position pos:line="115" pos:column="26"/></block></then></if>

                        <expr_stmt><expr><call><name pos:line="117" pos:column="25">xfree<pos:position pos:line="117" pos:column="30"/></name><argument_list pos:line="117" pos:column="30">(<argument><expr><name pos:line="117" pos:column="31">newkeyname<pos:position pos:line="117" pos:column="41"/></name></expr></argument>)<pos:position pos:line="117" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="43"/></expr_stmt>
                    }<pos:position pos:line="118" pos:column="22"/></block></then></if>
                }<pos:position pos:line="119" pos:column="18"/></block></for>

                <expr_stmt><expr><call><name pos:line="121" pos:column="17">xfree<pos:position pos:line="121" pos:column="22"/></name><argument_list pos:line="121" pos:column="22">(<argument><expr><name pos:line="121" pos:column="23">keyname<pos:position pos:line="121" pos:column="30"/></name></expr></argument>)<pos:position pos:line="121" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="122" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="124" pos:column="13">RegCloseKey<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">hndKey<pos:position pos:line="124" pos:column="31"/></name></expr></argument>)<pos:position pos:line="124" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="125" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="127" pos:column="9">idnsParseWIN32SearchList<pos:position pos:line="127" pos:column="33"/></name><argument_list pos:line="127" pos:column="33">(<argument><expr><literal type="string" pos:line="127" pos:column="34">", "<pos:position pos:line="127" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>

        <break pos:line="129" pos:column="9">break;<pos:position pos:line="129" pos:column="15"/></break>

    <case pos:line="131" pos:column="5">case <expr><name pos:line="131" pos:column="10">_WIN_OS_WIN95<pos:position pos:line="131" pos:column="23"/></name></expr>:<pos:position pos:line="131" pos:column="24"/></case>

    <case pos:line="133" pos:column="5">case <expr><name pos:line="133" pos:column="10">_WIN_OS_WIN98<pos:position pos:line="133" pos:column="23"/></name></expr>:<pos:position pos:line="133" pos:column="24"/></case>

    <case pos:line="135" pos:column="5">case <expr><name pos:line="135" pos:column="10">_WIN_OS_WINME<pos:position pos:line="135" pos:column="23"/></name></expr>:<pos:position pos:line="135" pos:column="24"/></case>
        <comment type="block" pos:line="136" pos:column="9">/* get nameservers from the Windows 9X registry */</comment>

        <if pos:line="138" pos:column="9">if <condition pos:line="138" pos:column="12">(<expr><call><name pos:line="138" pos:column="13">RegOpenKeyEx<pos:position pos:line="138" pos:column="25"/></name><argument_list pos:line="138" pos:column="25">(<argument><expr><name pos:line="138" pos:column="26">HKEY_LOCAL_MACHINE<pos:position pos:line="138" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="46">REG_VXD_MSTCP<pos:position pos:line="138" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="61">0<pos:position pos:line="138" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="64">KEY_QUERY_VALUE<pos:position pos:line="138" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="138" pos:column="81">&amp;<pos:position pos:line="138" pos:column="86"/></operator><name pos:line="138" pos:column="82">hndKey<pos:position pos:line="138" pos:column="88"/></name></expr></argument>)<pos:position pos:line="138" pos:column="89"/></argument_list></call> <operator pos:line="138" pos:column="90">==<pos:position pos:line="138" pos:column="92"/></operator> <name pos:line="138" pos:column="93">ERROR_SUCCESS<pos:position pos:line="138" pos:column="106"/></name></expr>)<pos:position pos:line="138" pos:column="107"/></condition><then pos:line="138" pos:column="107"> <block pos:line="138" pos:column="108">{
            <decl_stmt><decl><type><name pos:line="139" pos:column="13">DWORD<pos:position pos:line="139" pos:column="18"/></name></type> <name pos:line="139" pos:column="19">Type<pos:position pos:line="139" pos:column="23"/></name> <init pos:line="139" pos:column="24">= <expr><literal type="number" pos:line="139" pos:column="26">0<pos:position pos:line="139" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="139" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="140" pos:column="13">DWORD<pos:position pos:line="140" pos:column="18"/></name></type> <name pos:line="140" pos:column="19">Size<pos:position pos:line="140" pos:column="23"/></name> <init pos:line="140" pos:column="24">= <expr><literal type="number" pos:line="140" pos:column="26">0<pos:position pos:line="140" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="140" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="141" pos:column="13">LONG<pos:position pos:line="141" pos:column="17"/></name></type> <name pos:line="141" pos:column="18">Result<pos:position pos:line="141" pos:column="24"/></name></decl>;<pos:position pos:line="141" pos:column="25"/></decl_stmt>
            <expr_stmt><expr><name pos:line="142" pos:column="13">Result<pos:position pos:line="142" pos:column="19"/></name> <operator pos:line="142" pos:column="20">=<pos:position pos:line="142" pos:column="21"/></operator> <call><name pos:line="142" pos:column="22">RegQueryValueEx<pos:position pos:line="142" pos:column="37"/></name><argument_list pos:line="142" pos:column="37">(<argument><expr><name pos:line="142" pos:column="38">hndKey<pos:position pos:line="142" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="46">"NameServer"<pos:position pos:line="142" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="60">NULL<pos:position pos:line="142" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="66">&amp;<pos:position pos:line="142" pos:column="71"/></operator><name pos:line="142" pos:column="67">Type<pos:position pos:line="142" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="73">NULL<pos:position pos:line="142" pos:column="77"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="79">&amp;<pos:position pos:line="142" pos:column="84"/></operator><name pos:line="142" pos:column="80">Size<pos:position pos:line="142" pos:column="84"/></name></expr></argument>)<pos:position pos:line="142" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="86"/></expr_stmt>

            <if pos:line="144" pos:column="13">if <condition pos:line="144" pos:column="16">(<expr><name pos:line="144" pos:column="17">Result<pos:position pos:line="144" pos:column="23"/></name> <operator pos:line="144" pos:column="24">==<pos:position pos:line="144" pos:column="26"/></operator> <name pos:line="144" pos:column="27">ERROR_SUCCESS<pos:position pos:line="144" pos:column="40"/></name> <operator pos:line="144" pos:column="41">&amp;&amp;<pos:position pos:line="144" pos:column="51"/></operator> <name pos:line="144" pos:column="44">Size<pos:position pos:line="144" pos:column="48"/></name></expr>)<pos:position pos:line="144" pos:column="49"/></condition><then pos:line="144" pos:column="49"> <block pos:line="144" pos:column="50">{
                <expr_stmt><expr><name pos:line="145" pos:column="17">t<pos:position pos:line="145" pos:column="18"/></name> <operator pos:line="145" pos:column="19">=<pos:position pos:line="145" pos:column="20"/></operator> <operator pos:line="145" pos:column="21">(<pos:position pos:line="145" pos:column="22"/></operator><name pos:line="145" pos:column="22">char<pos:position pos:line="145" pos:column="26"/></name> <operator pos:line="145" pos:column="27">*<pos:position pos:line="145" pos:column="28"/></operator><operator pos:line="145" pos:column="28">)<pos:position pos:line="145" pos:column="29"/></operator> <call><name pos:line="145" pos:column="30">xmalloc<pos:position pos:line="145" pos:column="37"/></name><argument_list pos:line="145" pos:column="37">(<argument><expr><name pos:line="145" pos:column="38">Size<pos:position pos:line="145" pos:column="42"/></name></expr></argument>)<pos:position pos:line="145" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">RegQueryValueEx<pos:position pos:line="146" pos:column="32"/></name><argument_list pos:line="146" pos:column="32">(<argument><expr><name pos:line="146" pos:column="33">hndKey<pos:position pos:line="146" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="41">"NameServer"<pos:position pos:line="146" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="55">NULL<pos:position pos:line="146" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="61">&amp;<pos:position pos:line="146" pos:column="66"/></operator><name pos:line="146" pos:column="62">Type<pos:position pos:line="146" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="68">(<pos:position pos:line="146" pos:column="69"/></operator><name pos:line="146" pos:column="69">LPBYTE<pos:position pos:line="146" pos:column="75"/></name><operator pos:line="146" pos:column="75">)<pos:position pos:line="146" pos:column="76"/></operator> <name pos:line="146" pos:column="77">t<pos:position pos:line="146" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="80">&amp;<pos:position pos:line="146" pos:column="85"/></operator><name pos:line="146" pos:column="81">Size<pos:position pos:line="146" pos:column="85"/></name></expr></argument>)<pos:position pos:line="146" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="87"/></expr_stmt>
                <expr_stmt><expr><name pos:line="147" pos:column="17">token<pos:position pos:line="147" pos:column="22"/></name> <operator pos:line="147" pos:column="23">=<pos:position pos:line="147" pos:column="24"/></operator> <call><name pos:line="147" pos:column="25">strtok<pos:position pos:line="147" pos:column="31"/></name><argument_list pos:line="147" pos:column="31">(<argument><expr><name pos:line="147" pos:column="32">t<pos:position pos:line="147" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="35">", "<pos:position pos:line="147" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>

                <while pos:line="149" pos:column="17">while <condition pos:line="149" pos:column="23">(<expr><name pos:line="149" pos:column="24">token<pos:position pos:line="149" pos:column="29"/></name></expr>)<pos:position pos:line="149" pos:column="30"/></condition> <block pos:line="149" pos:column="31">{
                    <expr_stmt><expr><call><name pos:line="150" pos:column="21">debugs<pos:position pos:line="150" pos:column="27"/></name><argument_list pos:line="150" pos:column="27">(<argument><expr><literal type="number" pos:line="150" pos:column="28">78<pos:position pos:line="150" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="32">DBG_IMPORTANT<pos:position pos:line="150" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="47">"Adding nameserver "<pos:position pos:line="150" pos:column="67"/></literal> <operator pos:line="150" pos:column="68">&lt;&lt;<pos:position pos:line="150" pos:column="76"/></operator> <name pos:line="150" pos:column="71">token<pos:position pos:line="150" pos:column="76"/></name> <operator pos:line="150" pos:column="77">&lt;&lt;<pos:position pos:line="150" pos:column="85"/></operator> <literal type="string" pos:line="150" pos:column="80">" from Registry"<pos:position pos:line="150" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="98"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="151" pos:column="21">idnsAddNameserver<pos:position pos:line="151" pos:column="38"/></name><argument_list pos:line="151" pos:column="38">(<argument><expr><name pos:line="151" pos:column="39">token<pos:position pos:line="151" pos:column="44"/></name></expr></argument>)<pos:position pos:line="151" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="46"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="152" pos:column="21">token<pos:position pos:line="152" pos:column="26"/></name> <operator pos:line="152" pos:column="27">=<pos:position pos:line="152" pos:column="28"/></operator> <call><name pos:line="152" pos:column="29">strtok<pos:position pos:line="152" pos:column="35"/></name><argument_list pos:line="152" pos:column="35">(<argument><expr><name pos:line="152" pos:column="36">NULL<pos:position pos:line="152" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="42">", "<pos:position pos:line="152" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="153" pos:column="18"/></block></while>
                <expr_stmt><expr><call><name pos:line="154" pos:column="17">xfree<pos:position pos:line="154" pos:column="22"/></name><argument_list pos:line="154" pos:column="22">(<argument><expr><name pos:line="154" pos:column="23">t<pos:position pos:line="154" pos:column="24"/></name></expr></argument>)<pos:position pos:line="154" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="155" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="157" pos:column="13">RegCloseKey<pos:position pos:line="157" pos:column="24"/></name><argument_list pos:line="157" pos:column="24">(<argument><expr><name pos:line="157" pos:column="25">hndKey<pos:position pos:line="157" pos:column="31"/></name></expr></argument>)<pos:position pos:line="157" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="158" pos:column="10"/></block></then></if>

        <break pos:line="160" pos:column="9">break;<pos:position pos:line="160" pos:column="15"/></break>

    <default pos:line="162" pos:column="5">default:<pos:position pos:line="162" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="163" pos:column="9">debugs<pos:position pos:line="163" pos:column="15"/></name><argument_list pos:line="163" pos:column="15">(<argument><expr><literal type="number" pos:line="163" pos:column="16">78<pos:position pos:line="163" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="20">DBG_IMPORTANT<pos:position pos:line="163" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="35">"Failed to read nameserver from Registry: Unknown System Type."<pos:position pos:line="163" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="100"/></expr_stmt>
        <return pos:line="164" pos:column="9">return;<pos:position pos:line="164" pos:column="16"/></return>
    }<pos:position pos:line="165" pos:column="6"/></block></switch>
}<pos:position pos:line="166" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7464_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerOptions<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">updateTlsVersionLimits<pos:position pos:line="2" pos:column="46"/></name></name><parameter_list pos:line="2" pos:column="46">()<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">tlsMinVersion<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">isEmpty<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34"> <block pos:line="4" pos:column="35">{
        <decl_stmt><decl><type><name><operator pos:line="5" pos:column="9">::<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">Parser<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">Tokenizer<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">tok<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">tlsMinVersion<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int64_t<pos:position pos:line="6" pos:column="16"/></name></type> <name pos:line="6" pos:column="17">v<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name><name pos:line="7" pos:column="13">tok<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">skip<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">(<argument><expr><literal type="char" pos:line="7" pos:column="22">'1'<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call> <operator pos:line="7" pos:column="27">&amp;&amp;<pos:position pos:line="7" pos:column="37"/></operator> <call><name><name pos:line="7" pos:column="30">tok<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">skip<pos:position pos:line="7" pos:column="38"/></name></name><argument_list pos:line="7" pos:column="38">(<argument><expr><literal type="char" pos:line="7" pos:column="39">'.'<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call> <operator pos:line="7" pos:column="44">&amp;&amp;<pos:position pos:line="7" pos:column="54"/></operator> <call><name><name pos:line="7" pos:column="47">tok<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">.<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">int64<pos:position pos:line="7" pos:column="56"/></name></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">v<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="60">10<pos:position pos:line="7" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="7" pos:column="64">false<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="71">1<pos:position pos:line="7" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="73"/></argument_list></call> <operator pos:line="7" pos:column="74">&amp;&amp;<pos:position pos:line="7" pos:column="84"/></operator> <name pos:line="7" pos:column="77">v<pos:position pos:line="7" pos:column="78"/></name> <operator pos:line="7" pos:column="79">&lt;=<pos:position pos:line="7" pos:column="84"/></operator> <literal type="number" pos:line="7" pos:column="82">3<pos:position pos:line="7" pos:column="83"/></literal></expr>)<pos:position pos:line="7" pos:column="84"/></condition><then pos:line="7" pos:column="84"> <block pos:line="7" pos:column="85">{
            <comment type="line" pos:line="8" pos:column="13">// only account for TLS here - SSL versions are handled by options= parameter</comment>
            <comment type="line" pos:line="9" pos:column="13">// avoid affecting options= parameter in cachemgr config report</comment>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">USE_OPENSSL<pos:position pos:line="10" pos:column="16"/></name></expr></cpp:if>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">SSL_OP_NO_TLSv1<pos:position pos:line="11" pos:column="20"/></name></expr></cpp:if>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">v<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">&gt;<pos:position pos:line="12" pos:column="23"/></operator> <literal type="number" pos:line="12" pos:column="21">0<pos:position pos:line="12" pos:column="22"/></literal></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">parsedOptions<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">|=<pos:position pos:line="13" pos:column="33"/></operator> <name pos:line="13" pos:column="34">SSL_OP_NO_TLSv1<pos:position pos:line="13" pos:column="49"/></name></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt></block></then></if>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">SSL_OP_NO_TLSv1_1<pos:position pos:line="15" pos:column="22"/></name></expr></cpp:if>
            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><name pos:line="16" pos:column="17">v<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">&gt;<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">parsedOptions<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">|=<pos:position pos:line="17" pos:column="33"/></operator> <name pos:line="17" pos:column="34">SSL_OP_NO_TLSv1_1<pos:position pos:line="17" pos:column="51"/></name></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">SSL_OP_NO_TLSv1_2<pos:position pos:line="19" pos:column="22"/></name></expr></cpp:if>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">v<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&gt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="21">2<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">parsedOptions<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">|=<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">SSL_OP_NO_TLSv1_2<pos:position pos:line="21" pos:column="51"/></name></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:elif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">elif<pos:position pos:line="24" pos:column="6"/></cpp:directive> <expr><name pos:line="24" pos:column="7">USE_GNUTLS<pos:position pos:line="24" pos:column="17"/></name></expr></cpp:elif>
            <comment type="line" pos:line="25" pos:column="13">// XXX: update parsedOptions directly to avoid polluting 'options=' dumps</comment>
            <decl_stmt><decl><type><name pos:line="26" pos:column="13">SBuf<pos:position pos:line="26" pos:column="17"/></name></type> <name pos:line="26" pos:column="18">add<pos:position pos:line="26" pos:column="21"/></name></decl>;<pos:position pos:line="26" pos:column="22"/></decl_stmt>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><name pos:line="27" pos:column="17">v<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&gt;<pos:position pos:line="27" pos:column="23"/></operator> <literal type="number" pos:line="27" pos:column="21">0<pos:position pos:line="27" pos:column="22"/></literal></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="28" pos:column="17">add<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">append<pos:position pos:line="28" pos:column="27"/></name></name><argument_list pos:line="28" pos:column="27">(<argument><expr><literal type="string" pos:line="28" pos:column="28">":-VERS-TLS1.0"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt></block></then></if>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">v<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&gt;<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="21">1<pos:position pos:line="29" pos:column="22"/></literal></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="17">add<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">append<pos:position pos:line="30" pos:column="27"/></name></name><argument_list pos:line="30" pos:column="27">(<argument><expr><literal type="string" pos:line="30" pos:column="28">":-VERS-TLS1.1"<pos:position pos:line="30" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt></block></then></if>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">v<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">&gt;<pos:position pos:line="31" pos:column="23"/></operator> <literal type="number" pos:line="31" pos:column="21">2<pos:position pos:line="31" pos:column="22"/></literal></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="32" pos:column="17">add<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">append<pos:position pos:line="32" pos:column="27"/></name></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">":-VERS-TLS1.2"<pos:position pos:line="32" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt></block></then></if>

            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><call><name><name pos:line="34" pos:column="17">sslOptions<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">isEmpty<pos:position pos:line="34" pos:column="35"/></name></name><argument_list pos:line="34" pos:column="35">()<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="35" pos:column="17">add<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">.<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">chop<pos:position pos:line="35" pos:column="25"/></name></name><argument_list pos:line="35" pos:column="25">(<argument><expr><literal type="number" pos:line="35" pos:column="26">1<pos:position pos:line="35" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt></block></then></if> <comment type="line" pos:line="35" pos:column="30">// remove the initial ':'</comment>
            <expr_stmt><expr><call><name><name pos:line="36" pos:column="13">sslOptions<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">.<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">append<pos:position pos:line="36" pos:column="30"/></name></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">add<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="39" pos:column="10"/></block></then> <else pos:line="39" pos:column="11">else <block pos:line="39" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">debugs<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="23">DBG_PARSE_NOTE<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><literal type="number" pos:line="40" pos:column="38">1<pos:position pos:line="40" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="42">"WARNING: Unknown TLS minimum version: "<pos:position pos:line="40" pos:column="82"/></literal> <operator pos:line="40" pos:column="83">&lt;&lt;<pos:position pos:line="40" pos:column="91"/></operator> <name pos:line="40" pos:column="86">tlsMinVersion<pos:position pos:line="40" pos:column="99"/></name></expr></argument>)<pos:position pos:line="40" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="101"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>

        <return pos:line="43" pos:column="9">return;<pos:position pos:line="43" pos:column="16"/></return>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">sslVersion<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">&gt;<pos:position pos:line="46" pos:column="24"/></operator> <literal type="number" pos:line="46" pos:column="22">2<pos:position pos:line="46" pos:column="23"/></literal></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
        <comment type="line" pos:line="47" pos:column="9">// backward compatibility hack for sslversion= configuration</comment>
        <comment type="line" pos:line="48" pos:column="9">// only use if tls-min-version=N.N is not present</comment>
        <comment type="line" pos:line="49" pos:column="9">// values 0-2 for auto and SSLv2 are not supported any longer.</comment>
        <comment type="line" pos:line="50" pos:column="9">// Do it this way so we DO cause changes to options= in cachemgr config report</comment>
        <decl_stmt><decl><type><specifier pos:line="51" pos:column="9">const<pos:position pos:line="51" pos:column="14"/></specifier> <name pos:line="51" pos:column="15">char<pos:position pos:line="51" pos:column="19"/></name> <modifier pos:line="51" pos:column="20">*<pos:position pos:line="51" pos:column="21"/></modifier></type><name pos:line="51" pos:column="21">add<pos:position pos:line="51" pos:column="24"/></name> <init pos:line="51" pos:column="25">= <expr><literal type="null" pos:line="51" pos:column="27">nullptr<pos:position pos:line="51" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="51" pos:column="35"/></decl_stmt>
        <switch pos:line="52" pos:column="9">switch <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">sslVersion<pos:position pos:line="52" pos:column="27"/></name></expr>)<pos:position pos:line="52" pos:column="28"/></condition> <block pos:line="52" pos:column="29">{
        <case pos:line="53" pos:column="9">case <expr><literal type="number" pos:line="53" pos:column="14">3<pos:position pos:line="53" pos:column="15"/></literal></expr>:<pos:position pos:line="53" pos:column="16"/></case>
<cpp:if pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">if<pos:position pos:line="54" pos:column="4"/></cpp:directive> <expr><name pos:line="54" pos:column="5">USE_OPENSSL<pos:position pos:line="54" pos:column="16"/></name></expr></cpp:if>
            <expr_stmt><expr><name pos:line="55" pos:column="13">parsedOptions<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">|=<pos:position pos:line="55" pos:column="29"/></operator> <operator pos:line="55" pos:column="30">(<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">SSL_OP_NO_TLSv1<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">|<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">SSL_OP_NO_TLSv1_1<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">|<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="65">SSL_OP_NO_TLSv1_2<pos:position pos:line="55" pos:column="82"/></name><operator pos:line="55" pos:column="82">)<pos:position pos:line="55" pos:column="83"/></operator></expr>;<pos:position pos:line="55" pos:column="84"/></expr_stmt>
<cpp:elif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">elif<pos:position pos:line="56" pos:column="6"/></cpp:directive> <expr><name pos:line="56" pos:column="7">USE_GNUTLS<pos:position pos:line="56" pos:column="17"/></name></expr></cpp:elif>
            <expr_stmt><expr><name pos:line="57" pos:column="13">add<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">=<pos:position pos:line="57" pos:column="18"/></operator> <literal type="string" pos:line="57" pos:column="19">":-VERS-TLS1.0:-VERS-TLS1.1:-VERS-TLS1.2"<pos:position pos:line="57" pos:column="60"/></literal></expr>;<pos:position pos:line="57" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break>
        <case pos:line="60" pos:column="9">case <expr><literal type="number" pos:line="60" pos:column="14">4<pos:position pos:line="60" pos:column="15"/></literal></expr>:<pos:position pos:line="60" pos:column="16"/></case>
<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><name pos:line="61" pos:column="5">USE_OPENSSL<pos:position pos:line="61" pos:column="16"/></name></expr></cpp:if>
            <expr_stmt><expr><name pos:line="62" pos:column="13">parsedOptions<pos:position pos:line="62" pos:column="26"/></name> <operator pos:line="62" pos:column="27">|=<pos:position pos:line="62" pos:column="29"/></operator> <operator pos:line="62" pos:column="30">(<pos:position pos:line="62" pos:column="31"/></operator><name pos:line="62" pos:column="31">SSL_OP_NO_SSLv3<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">|<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">SSL_OP_NO_TLSv1_1<pos:position pos:line="62" pos:column="64"/></name><operator pos:line="62" pos:column="64">|<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="65">SSL_OP_NO_TLSv1_2<pos:position pos:line="62" pos:column="82"/></name><operator pos:line="62" pos:column="82">)<pos:position pos:line="62" pos:column="83"/></operator></expr>;<pos:position pos:line="62" pos:column="84"/></expr_stmt>
<cpp:elif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">elif<pos:position pos:line="63" pos:column="6"/></cpp:directive> <expr><name pos:line="63" pos:column="7">USE_GNUTLS<pos:position pos:line="63" pos:column="17"/></name></expr></cpp:elif>
            <expr_stmt><expr><name pos:line="64" pos:column="13">add<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">=<pos:position pos:line="64" pos:column="18"/></operator> <literal type="string" pos:line="64" pos:column="19">":+VERS-TLS1.0:-VERS-TLS1.1:-VERS-TLS1.2"<pos:position pos:line="64" pos:column="60"/></literal></expr>;<pos:position pos:line="64" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="66" pos:column="13">break;<pos:position pos:line="66" pos:column="19"/></break>
        <case pos:line="67" pos:column="9">case <expr><literal type="number" pos:line="67" pos:column="14">5<pos:position pos:line="67" pos:column="15"/></literal></expr>:<pos:position pos:line="67" pos:column="16"/></case>
<cpp:if pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">if<pos:position pos:line="68" pos:column="4"/></cpp:directive> <expr><name pos:line="68" pos:column="5">USE_OPENSSL<pos:position pos:line="68" pos:column="16"/></name></expr></cpp:if>
            <expr_stmt><expr><name pos:line="69" pos:column="13">parsedOptions<pos:position pos:line="69" pos:column="26"/></name> <operator pos:line="69" pos:column="27">|=<pos:position pos:line="69" pos:column="29"/></operator> <operator pos:line="69" pos:column="30">(<pos:position pos:line="69" pos:column="31"/></operator><name pos:line="69" pos:column="31">SSL_OP_NO_SSLv3<pos:position pos:line="69" pos:column="46"/></name><operator pos:line="69" pos:column="46">|<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="47">SSL_OP_NO_TLSv1<pos:position pos:line="69" pos:column="62"/></name><operator pos:line="69" pos:column="62">|<pos:position pos:line="69" pos:column="63"/></operator><name pos:line="69" pos:column="63">SSL_OP_NO_TLSv1_2<pos:position pos:line="69" pos:column="80"/></name><operator pos:line="69" pos:column="80">)<pos:position pos:line="69" pos:column="81"/></operator></expr>;<pos:position pos:line="69" pos:column="82"/></expr_stmt>
<cpp:elif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">elif<pos:position pos:line="70" pos:column="6"/></cpp:directive> <expr><name pos:line="70" pos:column="7">USE_GNUTLS<pos:position pos:line="70" pos:column="17"/></name></expr></cpp:elif>
            <expr_stmt><expr><name pos:line="71" pos:column="13">add<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">=<pos:position pos:line="71" pos:column="18"/></operator> <literal type="string" pos:line="71" pos:column="19">":-VERS-TLS1.0:+VERS-TLS1.1:-VERS-TLS1.2"<pos:position pos:line="71" pos:column="60"/></literal></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="72" pos:column="1">#<cpp:directive pos:line="72" pos:column="2">endif<pos:position pos:line="72" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="73" pos:column="13">break;<pos:position pos:line="73" pos:column="19"/></break>
        <case pos:line="74" pos:column="9">case <expr><literal type="number" pos:line="74" pos:column="14">6<pos:position pos:line="74" pos:column="15"/></literal></expr>:<pos:position pos:line="74" pos:column="16"/></case>
<cpp:if pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">if<pos:position pos:line="75" pos:column="4"/></cpp:directive> <expr><name pos:line="75" pos:column="5">USE_OPENSSL<pos:position pos:line="75" pos:column="16"/></name></expr></cpp:if>
            <expr_stmt><expr><name pos:line="76" pos:column="13">parsedOptions<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">|=<pos:position pos:line="76" pos:column="29"/></operator> <operator pos:line="76" pos:column="30">(<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="31">SSL_OP_NO_SSLv3<pos:position pos:line="76" pos:column="46"/></name><operator pos:line="76" pos:column="46">|<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="47">SSL_OP_NO_TLSv1<pos:position pos:line="76" pos:column="62"/></name><operator pos:line="76" pos:column="62">|<pos:position pos:line="76" pos:column="63"/></operator><name pos:line="76" pos:column="63">SSL_OP_NO_TLSv1_1<pos:position pos:line="76" pos:column="80"/></name><operator pos:line="76" pos:column="80">)<pos:position pos:line="76" pos:column="81"/></operator></expr>;<pos:position pos:line="76" pos:column="82"/></expr_stmt>
<cpp:elif pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">elif<pos:position pos:line="77" pos:column="6"/></cpp:directive> <expr><name pos:line="77" pos:column="7">USE_GNUTLS<pos:position pos:line="77" pos:column="17"/></name></expr></cpp:elif>
            <expr_stmt><expr><name pos:line="78" pos:column="13">add<pos:position pos:line="78" pos:column="16"/></name> <operator pos:line="78" pos:column="17">=<pos:position pos:line="78" pos:column="18"/></operator> <literal type="string" pos:line="78" pos:column="19">":-VERS-TLS1.0:-VERS-TLS1.1"<pos:position pos:line="78" pos:column="47"/></literal></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="80" pos:column="13">break;<pos:position pos:line="80" pos:column="19"/></break>
        <default pos:line="81" pos:column="9">default:<pos:position pos:line="81" pos:column="17"/></default> <comment type="line" pos:line="81" pos:column="18">// nothing</comment>
            <break pos:line="82" pos:column="13">break;<pos:position pos:line="82" pos:column="19"/></break>
        }<pos:position pos:line="83" pos:column="10"/></block></switch>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">add<pos:position pos:line="84" pos:column="16"/></name></expr>)<pos:position pos:line="84" pos:column="17"/></condition><then pos:line="84" pos:column="17"> <block pos:line="84" pos:column="18">{
<cpp:if pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">if<pos:position pos:line="85" pos:column="4"/></cpp:directive> <expr><name pos:line="85" pos:column="5">USE_GNUTLS<pos:position pos:line="85" pos:column="15"/></name></expr></cpp:if> <comment type="line" pos:line="85" pos:column="16">// dont bother otherwise</comment>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><call><name><name pos:line="86" pos:column="17">sslOptions<pos:position pos:line="86" pos:column="27"/></name><operator pos:line="86" pos:column="27">.<pos:position pos:line="86" pos:column="28"/></operator><name pos:line="86" pos:column="28">isEmpty<pos:position pos:line="86" pos:column="35"/></name></name><argument_list pos:line="86" pos:column="35">()<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="86" pos:column="38"/></condition><then pos:line="86" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="87" pos:column="17">sslOptions<pos:position pos:line="87" pos:column="27"/></name><operator pos:line="87" pos:column="27">.<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="28">append<pos:position pos:line="87" pos:column="34"/></name></name><argument_list pos:line="87" pos:column="34">(<argument><expr><name pos:line="87" pos:column="35">add<pos:position pos:line="87" pos:column="38"/></name><operator pos:line="87" pos:column="38">+<pos:position pos:line="87" pos:column="39"/></operator><literal type="number" pos:line="87" pos:column="39">1<pos:position pos:line="87" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="42">strlen<pos:position pos:line="87" pos:column="48"/></name><argument_list pos:line="87" pos:column="48">(<argument><expr><name pos:line="87" pos:column="49">add<pos:position pos:line="87" pos:column="52"/></name><operator pos:line="87" pos:column="52">+<pos:position pos:line="87" pos:column="53"/></operator><literal type="number" pos:line="87" pos:column="53">1<pos:position pos:line="87" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="57"/></expr_stmt></block></then>
            <else pos:line="88" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="89" pos:column="17">sslOptions<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">.<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="28">append<pos:position pos:line="89" pos:column="34"/></name></name><argument_list pos:line="89" pos:column="34">(<argument><expr><name pos:line="89" pos:column="35">add<pos:position pos:line="89" pos:column="38"/></name></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="40">strlen<pos:position pos:line="89" pos:column="46"/></name><argument_list pos:line="89" pos:column="46">(<argument><expr><name pos:line="89" pos:column="47">add<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="53"/></expr_stmt></block></else></if>
<cpp:endif pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">endif<pos:position pos:line="90" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="91" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="92" pos:column="9">sslVersion<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">=<pos:position pos:line="92" pos:column="21"/></operator> <literal type="number" pos:line="92" pos:column="22">0<pos:position pos:line="92" pos:column="23"/></literal></expr>;<pos:position pos:line="92" pos:column="24"/></expr_stmt> <comment type="line" pos:line="92" pos:column="25">// prevent sslOptions being repeatedly appended</comment>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

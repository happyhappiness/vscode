<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2489_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">cache_key<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">calcPublicKey<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">KeyScope<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">keyScope<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">mem_obj<pos:position pos:line="4" pos:column="19"/></name></expr></argument>)<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="5" pos:column="12">mem_obj<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">request<pos:position pos:line="5" pos:column="28"/></name></name></expr> ?<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">  <expr><call><name pos:line="5" pos:column="32">storeKeyPublicByRequest<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">(<argument><expr><name><name pos:line="5" pos:column="56">mem_obj<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">-&gt;<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="65">request<pos:position pos:line="5" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="74">keyScope<pos:position pos:line="5" pos:column="82"/></name></expr></argument>)<pos:position pos:line="5" pos:column="83"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="84"/></then><else pos:line="5" pos:column="84">:
           <expr><call><name pos:line="6" pos:column="12">storeKeyPublic<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><call><name><name pos:line="6" pos:column="27">mem_obj<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">-&gt;<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="36">storeId<pos:position pos:line="6" pos:column="43"/></name></name><argument_list pos:line="6" pos:column="43">()<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="47">mem_obj<pos:position pos:line="6" pos:column="54"/></name><operator pos:line="6" pos:column="54">-&gt;<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="56">method<pos:position pos:line="6" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="64">keyScope<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="74"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

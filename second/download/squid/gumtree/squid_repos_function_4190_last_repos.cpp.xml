<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4190_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLUrlLoginStrategy<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">match<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name><name pos:line="2" pos:column="28">ACLData<pos:position pos:line="2" pos:column="35"/></name><argument_list type="generic" pos:line="2" pos:column="35">&lt;<argument><expr><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier> <operator pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="2" pos:column="52"/></argument_list></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">data<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">ACLFilledChecklist<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">checklist<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">checklist<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">request<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">url<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">.<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">userInfo<pos:position pos:line="4" pos:column="41"/></name></name><argument_list pos:line="4" pos:column="41">()<pos:position pos:line="4" pos:column="43"/></argument_list></call><operator pos:line="4" pos:column="43">.<pos:position pos:line="4" pos:column="44"/></operator><call><name pos:line="4" pos:column="44">isEmpty<pos:position pos:line="4" pos:column="51"/></name><argument_list pos:line="4" pos:column="51">()<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="54"/></condition><then pos:line="4" pos:column="54"> <block pos:line="4" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">28<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">5<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"URL has no user-info details. cannot match"<pos:position pos:line="5" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="69"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr>;<pos:position pos:line="6" pos:column="18"/></return> <comment type="line" pos:line="6" pos:column="19">// nothing can match</comment>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><specifier pos:line="9" pos:column="5">static<pos:position pos:line="9" pos:column="11"/></specifier> <type><name pos:line="9" pos:column="12">char<pos:position pos:line="9" pos:column="16"/></name></type> <name><name pos:line="9" pos:column="17">str<pos:position pos:line="9" pos:column="20"/></name><index pos:line="9" pos:column="20">[<expr><name pos:line="9" pos:column="21">MAX_URL<pos:position pos:line="9" pos:column="28"/></name></expr>]<pos:position pos:line="9" pos:column="29"/></index></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt> <comment type="line" pos:line="9" pos:column="31">// should be big enough for a single URI segment</comment>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name><name pos:line="11" pos:column="11">SBuf<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">::<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">size_type<pos:position pos:line="11" pos:column="26"/></name></name></type> <name pos:line="11" pos:column="27">len<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><call><name><name pos:line="11" pos:column="33">checklist<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">-&gt;<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="44">request<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">-&gt;<pos:position pos:line="11" pos:column="56"/></operator><name pos:line="11" pos:column="53">url<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">.<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="57">userInfo<pos:position pos:line="11" pos:column="65"/></name></name><argument_list pos:line="11" pos:column="65">()<pos:position pos:line="11" pos:column="67"/></argument_list></call><operator pos:line="11" pos:column="67">.<pos:position pos:line="11" pos:column="68"/></operator><call><name pos:line="11" pos:column="68">copy<pos:position pos:line="11" pos:column="72"/></name><argument_list pos:line="11" pos:column="72">(<argument><expr><name pos:line="11" pos:column="73">str<pos:position pos:line="11" pos:column="76"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="78">sizeof<argument_list pos:line="11" pos:column="84">(<argument><expr><name pos:line="11" pos:column="85">str<pos:position pos:line="11" pos:column="88"/></name></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></sizeof><operator pos:line="11" pos:column="89">-<pos:position pos:line="11" pos:column="90"/></operator><literal type="number" pos:line="11" pos:column="90">1<pos:position pos:line="11" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="93"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">str<pos:position pos:line="12" pos:column="8"/></name><index pos:line="12" pos:column="8">[<expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name></expr>]<pos:position pos:line="12" pos:column="13"/></index></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="char" pos:line="12" pos:column="16">'\0'<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">rfc1738_unescape<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">str<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><call><name><name pos:line="14" pos:column="12">data<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">match<pos:position pos:line="14" pos:column="23"/></name></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">str<pos:position pos:line="14" pos:column="27"/></name></expr></argument>)<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

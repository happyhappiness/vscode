<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2136_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ClientDelayConfig<pos:position pos:line="1" pos:column="23"/></name><operator pos:line="1" pos:column="23">::<pos:position pos:line="1" pos:column="25"/></operator><name pos:line="1" pos:column="25">parsePoolCount<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">()<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name><name pos:line="3" pos:column="9">pools<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">.<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">size<pos:position pos:line="3" pos:column="19"/></name></name><argument_list pos:line="3" pos:column="19">()<pos:position pos:line="3" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="22"/></condition><then pos:line="3" pos:column="22"> <block pos:line="3" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">debugs<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">DBG_CRITICAL<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"parse_client_delay_pool_count: multiple client_delay_pools lines, aborting all previous client_delay_pools config"<pos:position pos:line="4" pos:column="148"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="149"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="150"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">clean<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">()<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">short<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">pools_<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">ConfigParser<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">::<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">ParseUShort<pos:position pos:line="8" pos:column="30"/></name></name><argument_list pos:line="8" pos:column="30">(<argument><expr><operator pos:line="8" pos:column="31">&amp;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="32">pools_<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><decl><type><name pos:line="9" pos:column="10">int<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">i<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">i<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">pools_<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></condition> <incr><expr><operator pos:line="9" pos:column="33">++<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">i<pos:position pos:line="9" pos:column="36"/></name></expr></incr>)<pos:position pos:line="9" pos:column="37"/></control> <block pos:line="9" pos:column="38">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">pools<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">push_back<pos:position pos:line="10" pos:column="24"/></name></name><argument_list pos:line="10" pos:column="24">(<argument><expr><call><name pos:line="10" pos:column="25">ClientDelayPool<pos:position pos:line="10" pos:column="40"/></name><argument_list pos:line="10" pos:column="40">()<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

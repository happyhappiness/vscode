<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1926_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsAddPathComponent<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">buf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">npc<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">npc_alloc<pos:position pos:line="4" pos:column="25"/></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <block pos:line="4" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">oldalloc<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">npc_alloc<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">sp<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">oldptr<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">searchpath<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>

        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">npc_alloc<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="13">npc_alloc<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <literal type="number" pos:line="9" pos:column="25">2<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt></block></then>
        <else pos:line="10" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="13">npc_alloc<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;&lt;=<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="27">1<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name pos:line="13" pos:column="9">searchpath<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">sp<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></operator><operator pos:line="13" pos:column="27">)<pos:position pos:line="13" pos:column="28"/></operator><call><name pos:line="13" pos:column="28">xcalloc<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">npc_alloc<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="47">sizeof<argument_list pos:line="13" pos:column="53">(<argument><expr><operator pos:line="13" pos:column="54">*<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">searchpath<pos:position pos:line="13" pos:column="65"/></name></expr></argument>)<pos:position pos:line="13" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">oldptr<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&amp;&amp;<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="23">oldalloc<pos:position pos:line="15" pos:column="31"/></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="13">memcpy<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">searchpath<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">oldptr<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">oldalloc<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">*<pos:position pos:line="16" pos:column="50"/></operator> <sizeof pos:line="16" pos:column="51">sizeof<argument_list pos:line="16" pos:column="57">(<argument><expr><operator pos:line="16" pos:column="58">*<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">searchpath<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt></block></then></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">oldptr<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="13">safe_free<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">oldptr<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">npc<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&lt;<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="18">npc_alloc<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">strncpy<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name><name pos:line="23" pos:column="13">searchpath<pos:position pos:line="23" pos:column="23"/></name><index pos:line="23" pos:column="23">[<expr><name pos:line="23" pos:column="24">npc<pos:position pos:line="23" pos:column="27"/></name></expr>]<pos:position pos:line="23" pos:column="28"/></index></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">domain<pos:position pos:line="23" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="37">buf<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="42">sizeof<argument_list pos:line="23" pos:column="48">(<argument><expr><name><name pos:line="23" pos:column="49">searchpath<pos:position pos:line="23" pos:column="59"/></name><index pos:line="23" pos:column="59">[<expr><name pos:line="23" pos:column="60">npc<pos:position pos:line="23" pos:column="63"/></name></expr>]<pos:position pos:line="23" pos:column="64"/></index></name><operator pos:line="23" pos:column="64">.<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="65">domain<pos:position pos:line="23" pos:column="71"/></name></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></sizeof><operator pos:line="23" pos:column="72">-<pos:position pos:line="23" pos:column="73"/></operator><literal type="number" pos:line="23" pos:column="73">1<pos:position pos:line="23" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">searchpath<pos:position pos:line="24" pos:column="15"/></name><index pos:line="24" pos:column="15">[<expr><name pos:line="24" pos:column="16">npc<pos:position pos:line="24" pos:column="19"/></name></expr>]<pos:position pos:line="24" pos:column="20"/></index></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name><name pos:line="24" pos:column="21">domain<pos:position pos:line="24" pos:column="27"/></name><index pos:line="24" pos:column="27">[<expr><sizeof pos:line="24" pos:column="28">sizeof<argument_list pos:line="24" pos:column="34">(<argument><expr><name><name pos:line="24" pos:column="35">searchpath<pos:position pos:line="24" pos:column="45"/></name><index pos:line="24" pos:column="45">[<expr><name pos:line="24" pos:column="46">npc<pos:position pos:line="24" pos:column="49"/></name></expr>]<pos:position pos:line="24" pos:column="50"/></index></name><operator pos:line="24" pos:column="50">.<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">domain<pos:position pos:line="24" pos:column="57"/></name></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></sizeof><operator pos:line="24" pos:column="58">-<pos:position pos:line="24" pos:column="59"/></operator><literal type="number" pos:line="24" pos:column="59">1<pos:position pos:line="24" pos:column="60"/></literal></expr>]<pos:position pos:line="24" pos:column="61"/></index></name> <operator pos:line="24" pos:column="62">=<pos:position pos:line="24" pos:column="63"/></operator> <literal type="char" pos:line="24" pos:column="64">'\0'<pos:position pos:line="24" pos:column="68"/></literal></expr>;<pos:position pos:line="24" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">Tolower<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><name><name pos:line="25" pos:column="13">searchpath<pos:position pos:line="25" pos:column="23"/></name><index pos:line="25" pos:column="23">[<expr><name pos:line="25" pos:column="24">npc<pos:position pos:line="25" pos:column="27"/></name></expr>]<pos:position pos:line="25" pos:column="28"/></index></name><operator pos:line="25" pos:column="28">.<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">domain<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">78<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">3<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"idnsAddPathComponent: Added domain #"<pos:position pos:line="26" pos:column="57"/></literal> <operator pos:line="26" pos:column="58">&lt;&lt;<pos:position pos:line="26" pos:column="66"/></operator> <name pos:line="26" pos:column="61">npc<pos:position pos:line="26" pos:column="64"/></name> <operator pos:line="26" pos:column="65">&lt;&lt;<pos:position pos:line="26" pos:column="73"/></operator> <literal type="string" pos:line="26" pos:column="68">": "<pos:position pos:line="26" pos:column="72"/></literal> <operator pos:line="26" pos:column="73">&lt;&lt;<pos:position pos:line="26" pos:column="81"/></operator> <name><name pos:line="26" pos:column="76">searchpath<pos:position pos:line="26" pos:column="86"/></name><index pos:line="26" pos:column="86">[<expr><name pos:line="26" pos:column="87">npc<pos:position pos:line="26" pos:column="90"/></name></expr>]<pos:position pos:line="26" pos:column="91"/></index></name><operator pos:line="26" pos:column="91">.<pos:position pos:line="26" pos:column="92"/></operator><name pos:line="26" pos:column="92">domain<pos:position pos:line="26" pos:column="98"/></name></expr></argument>)<pos:position pos:line="26" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="100"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">++<pos:position pos:line="27" pos:column="7"/></operator><name pos:line="27" pos:column="7">npc<pos:position pos:line="27" pos:column="10"/></name></expr>;<pos:position pos:line="27" pos:column="11"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

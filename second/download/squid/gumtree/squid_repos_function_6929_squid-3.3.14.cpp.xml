<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6929_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">regerror<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">errcode<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">regex_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">preg<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">errbuf<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">size_t<pos:position pos:line="2" pos:column="64"/></name></type> <name pos:line="2" pos:column="65">errbuf_size<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">msg<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">msg_size<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">errcode<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&lt;<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal>
            <operator pos:line="8" pos:column="13">||<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">errcode<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&gt;=<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><sizeof pos:line="8" pos:column="28">sizeof<argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">re_error_msg<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></sizeof> <operator pos:line="8" pos:column="49">/<pos:position pos:line="8" pos:column="50"/></operator> <sizeof pos:line="8" pos:column="51">sizeof<argument_list pos:line="8" pos:column="57">(<argument><expr><name><name pos:line="8" pos:column="58">re_error_msg<pos:position pos:line="8" pos:column="70"/></name><index pos:line="8" pos:column="70">[<expr><literal type="number" pos:line="8" pos:column="71">0<pos:position pos:line="8" pos:column="72"/></literal></expr>]<pos:position pos:line="8" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></sizeof><operator pos:line="8" pos:column="74">)<pos:position pos:line="8" pos:column="75"/></operator></expr>)<pos:position pos:line="8" pos:column="76"/></condition><then pos:line="8" pos:column="76">
        <comment type="block" pos:line="9" pos:column="9">/* Only error codes returned by the rest of the code should be passed
         * to this routine.  If we are given anything else, or if other regex
         * code generates an invalid error code, then the program has a bug.
         * Dump core so we can fix it.  */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">abort<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">()<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="17"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">msg<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name><name pos:line="15" pos:column="11">re_error_msg<pos:position pos:line="15" pos:column="23"/></name><index pos:line="15" pos:column="23">[<expr><name pos:line="15" pos:column="24">errcode<pos:position pos:line="15" pos:column="31"/></name></expr>]<pos:position pos:line="15" pos:column="32"/></index></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* POSIX doesn't require that we do anything in this case, but why
     * not be nice.  */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">msg<pos:position pos:line="19" pos:column="13"/></name></expr>)<pos:position pos:line="19" pos:column="14"/></condition><then pos:line="19" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">msg<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="string" pos:line="20" pos:column="15">"Success"<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">msg_size<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">strlen<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">msg<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call> <operator pos:line="22" pos:column="28">+<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>	<comment type="block" pos:line="22" pos:column="33">/* Includes the null.  */</comment>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">errbuf_size<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">!=<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">msg_size<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&gt;<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="24">errbuf_size<pos:position pos:line="25" pos:column="35"/></name></expr>)<pos:position pos:line="25" pos:column="36"/></condition><then pos:line="25" pos:column="36"> <block pos:line="25" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">strncpy<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">errbuf<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">msg<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">errbuf_size<pos:position pos:line="26" pos:column="45"/></name> <operator pos:line="26" pos:column="46">-<pos:position pos:line="26" pos:column="47"/></operator> <literal type="number" pos:line="26" pos:column="48">1<pos:position pos:line="26" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">errbuf<pos:position pos:line="27" pos:column="19"/></name><index pos:line="27" pos:column="19">[<expr><name pos:line="27" pos:column="20">errbuf_size<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">-<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>]<pos:position pos:line="27" pos:column="36"/></index></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <literal type="number" pos:line="27" pos:column="39">0<pos:position pos:line="27" pos:column="40"/></literal></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="13">strcpy<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">errbuf<pos:position pos:line="29" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="28">msg<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt></block></else></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
    <return pos:line="31" pos:column="5">return <expr><name pos:line="31" pos:column="12">msg_size<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

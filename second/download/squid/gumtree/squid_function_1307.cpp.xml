<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1307.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ClientSocketContext<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name pos:line="2" pos:column="1">parseHttpRequest<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">ConnStateData<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">csd<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">HttpParser<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">hp<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">HttpRequestMethod<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type> <name pos:line="2" pos:column="74">method_p<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="84">Http<pos:position pos:line="2" pos:column="88"/></name><operator pos:line="2" pos:column="88">::<pos:position pos:line="2" pos:column="90"/></operator><name pos:line="2" pos:column="90">ProtocolVersion<pos:position pos:line="2" pos:column="105"/></name></name> <modifier pos:line="2" pos:column="106">*<pos:position pos:line="2" pos:column="107"/></modifier></type><name pos:line="2" pos:column="107">http_ver<pos:position pos:line="2" pos:column="115"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="116"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">req_hdr<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">end<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">req_sz<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ClientHttpRequest<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">http<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ClientSocketContext<pos:position pos:line="8" pos:column="24"/></name> <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier></type><name pos:line="8" pos:column="26">result<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">StoreIOBuffer<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">tempBuffer<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">r<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* pre-set these values to make aborting simpler */</comment>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">*<pos:position pos:line="13" pos:column="6"/></operator><name pos:line="13" pos:column="6">method_p<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <name><name pos:line="13" pos:column="17">Http<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">::<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">METHOD_NONE<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* NP: don't be tempted to move this down or remove again.
     * It's the only DDoS protection old-String has against long URL */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">( <expr><name><name pos:line="17" pos:column="10">hp<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">bufsiz<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">&lt;=<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">33<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">5<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"Incomplete request, waiting for end of request line"<pos:position pos:line="18" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">( <expr><operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">size_t<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">)<pos:position pos:line="20" pos:column="25"/></operator><name><name pos:line="20" pos:column="25">hp<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">bufsiz<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">&gt;=<pos:position pos:line="20" pos:column="41"/></operator> <name><name pos:line="20" pos:column="39">Config<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">maxRequestHeaderSize<pos:position pos:line="20" pos:column="66"/></name></name> <operator pos:line="20" pos:column="67">&amp;&amp;<pos:position pos:line="20" pos:column="77"/></operator> <call><name pos:line="20" pos:column="70">headersEnd<pos:position pos:line="20" pos:column="80"/></name><argument_list pos:line="20" pos:column="80">(<argument><expr><name><name pos:line="20" pos:column="81">hp<pos:position pos:line="20" pos:column="83"/></name><operator pos:line="20" pos:column="83">-&gt;<pos:position pos:line="20" pos:column="88"/></operator><name pos:line="20" pos:column="85">buf<pos:position pos:line="20" pos:column="88"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="90">Config<pos:position pos:line="20" pos:column="96"/></name><operator pos:line="20" pos:column="96">.<pos:position pos:line="20" pos:column="97"/></operator><name pos:line="20" pos:column="97">maxRequestHeaderSize<pos:position pos:line="20" pos:column="117"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="118"/></argument_list></call> <operator pos:line="20" pos:column="119">==<pos:position pos:line="20" pos:column="121"/></operator> <literal type="number" pos:line="20" pos:column="122">0<pos:position pos:line="20" pos:column="123"/></literal></expr>)<pos:position pos:line="20" pos:column="124"/></condition><then pos:line="20" pos:column="124"> <block pos:line="20" pos:column="125">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">33<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">5<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"parseHttpRequest: Too large request"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">hp<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">request_parse_status<pos:position pos:line="22" pos:column="33"/></name></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <name><name pos:line="22" pos:column="36">Http<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">::<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">scHeaderTooLarge<pos:position pos:line="22" pos:column="58"/></name></name></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><call><name><name pos:line="23" pos:column="16">csd<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">-&gt;<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="21">abortRequestParsing<pos:position pos:line="23" pos:column="40"/></name></name><argument_list pos:line="23" pos:column="40">(<argument><expr><literal type="string" pos:line="23" pos:column="41">"error:request-too-large"<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="26" pos:column="5">/* Attempt to parse the first line; this'll define the method, url, version and header begin */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">r<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">HttpParserParseReqLine<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">hp<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">r<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">==<pos:position pos:line="29" pos:column="13"/></operator> <literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal></expr>)<pos:position pos:line="29" pos:column="16"/></condition><then pos:line="29" pos:column="16"> <block pos:line="29" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">33<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">5<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"Incomplete request, waiting for end of request line"<pos:position pos:line="30" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="78"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">r<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">==<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>)<pos:position pos:line="34" pos:column="17"/></condition><then pos:line="34" pos:column="17"> <block pos:line="34" pos:column="18">{
        <return pos:line="35" pos:column="9">return <expr><call><name><name pos:line="35" pos:column="16">csd<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">abortRequestParsing<pos:position pos:line="35" pos:column="40"/></name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><literal type="string" pos:line="35" pos:column="41">"error:invalid-request"<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* Request line is valid here .. */</comment>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">http_ver<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <call><name><name pos:line="39" pos:column="17">Http<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">::<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="23">ProtocolVersion<pos:position pos:line="39" pos:column="38"/></name></name><argument_list pos:line="39" pos:column="38">(<argument><expr><name><name pos:line="39" pos:column="39">hp<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">-&gt;<pos:position pos:line="39" pos:column="46"/></operator><name pos:line="39" pos:column="43">req<pos:position pos:line="39" pos:column="46"/></name><operator pos:line="39" pos:column="46">.<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="47">v_maj<pos:position pos:line="39" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="54">hp<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">req<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">.<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="62">v_min<pos:position pos:line="39" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="41" pos:column="5">/* This call scans the entire request, not just the headers */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">hp<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">req<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">.<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">v_maj<pos:position pos:line="42" pos:column="22"/></name></name> <operator pos:line="42" pos:column="23">&gt;<pos:position pos:line="42" pos:column="27"/></operator> <literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">(<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">req_sz<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <call><name pos:line="43" pos:column="23">headersEnd<pos:position pos:line="43" pos:column="33"/></name><argument_list pos:line="43" pos:column="33">(<argument><expr><name><name pos:line="43" pos:column="34">hp<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">buf<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="43">hp<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">bufsiz<pos:position pos:line="43" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="54"/></argument_list></call><operator pos:line="43" pos:column="54">)<pos:position pos:line="43" pos:column="55"/></operator> <operator pos:line="43" pos:column="56">==<pos:position pos:line="43" pos:column="58"/></operator> <literal type="number" pos:line="43" pos:column="59">0<pos:position pos:line="43" pos:column="60"/></literal></expr>)<pos:position pos:line="43" pos:column="61"/></condition><then pos:line="43" pos:column="61"> <block pos:line="43" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">debugs<pos:position pos:line="44" pos:column="19"/></name><argument_list pos:line="44" pos:column="19">(<argument><expr><literal type="number" pos:line="44" pos:column="20">33<pos:position pos:line="44" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="24">5<pos:position pos:line="44" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"Incomplete request, waiting for end of headers"<pos:position pos:line="44" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="77"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">NULL<pos:position pos:line="45" pos:column="24"/></name></expr>;<pos:position pos:line="45" pos:column="25"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if>
    }<pos:position pos:line="47" pos:column="6"/></block></then> <else pos:line="47" pos:column="7">else <block pos:line="47" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">debugs<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="number" pos:line="48" pos:column="16">33<pos:position pos:line="48" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="20">3<pos:position pos:line="48" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="23">"parseHttpRequest: Missing HTTP identifier"<pos:position pos:line="48" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">req_sz<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name pos:line="49" pos:column="18">HttpParserReqSz<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">hp<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="52" pos:column="5">/* We know the whole request is in hp-&gt;buf now */</comment>

    <expr_stmt><expr><call><name pos:line="54" pos:column="5">assert<pos:position pos:line="54" pos:column="11"/></name><argument_list pos:line="54" pos:column="11">(<argument><expr><name pos:line="54" pos:column="12">req_sz<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&lt;=<pos:position pos:line="54" pos:column="24"/></operator> <operator pos:line="54" pos:column="22">(<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="23">size_t<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">)<pos:position pos:line="54" pos:column="30"/></operator> <name><name pos:line="54" pos:column="31">hp<pos:position pos:line="54" pos:column="33"/></name><operator pos:line="54" pos:column="33">-&gt;<pos:position pos:line="54" pos:column="38"/></operator><name pos:line="54" pos:column="35">bufsiz<pos:position pos:line="54" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="56" pos:column="5">/* Will the following be true with HTTP/0.9 requests? probably not .. */</comment>
    <comment type="block" pos:line="57" pos:column="5">/* So the rest of the code will need to deal with '0'-byte headers (ie, none, so don't try parsing em) */</comment>
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">assert<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><name pos:line="58" pos:column="12">req_sz<pos:position pos:line="58" pos:column="18"/></name> <operator pos:line="58" pos:column="19">&gt;<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="21">0<pos:position pos:line="58" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="60" pos:column="5">hp<pos:position pos:line="60" pos:column="7"/></name><operator pos:line="60" pos:column="7">-&gt;<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="9">hdr_end<pos:position pos:line="60" pos:column="16"/></name></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <name pos:line="60" pos:column="19">req_sz<pos:position pos:line="60" pos:column="25"/></name> <operator pos:line="60" pos:column="26">-<pos:position pos:line="60" pos:column="27"/></operator> <literal type="number" pos:line="60" pos:column="28">1<pos:position pos:line="60" pos:column="29"/></literal></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="62" pos:column="5">hp<pos:position pos:line="62" pos:column="7"/></name><operator pos:line="62" pos:column="7">-&gt;<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="9">hdr_start<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">=<pos:position pos:line="62" pos:column="20"/></operator> <name><name pos:line="62" pos:column="21">hp<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">req<pos:position pos:line="62" pos:column="28"/></name><operator pos:line="62" pos:column="28">.<pos:position pos:line="62" pos:column="29"/></operator><name pos:line="62" pos:column="29">end<pos:position pos:line="62" pos:column="32"/></name></name> <operator pos:line="62" pos:column="33">+<pos:position pos:line="62" pos:column="34"/></operator> <literal type="number" pos:line="62" pos:column="35">1<pos:position pos:line="62" pos:column="36"/></literal></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="64" pos:column="5">/* Enforce max_request_size */</comment>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">req_sz<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">&gt;=<pos:position pos:line="65" pos:column="21"/></operator> <name><name pos:line="65" pos:column="19">Config<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">.<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">maxRequestHeaderSize<pos:position pos:line="65" pos:column="46"/></name></name></expr>)<pos:position pos:line="65" pos:column="47"/></condition><then pos:line="65" pos:column="47"> <block pos:line="65" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">debugs<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="number" pos:line="66" pos:column="16">33<pos:position pos:line="66" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="20">5<pos:position pos:line="66" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="23">"parseHttpRequest: Too large request"<pos:position pos:line="66" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">hp<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">-&gt;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="13">request_parse_status<pos:position pos:line="67" pos:column="33"/></name></name> <operator pos:line="67" pos:column="34">=<pos:position pos:line="67" pos:column="35"/></operator> <name><name pos:line="67" pos:column="36">Http<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">::<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">scHeaderTooLarge<pos:position pos:line="67" pos:column="58"/></name></name></expr>;<pos:position pos:line="67" pos:column="59"/></expr_stmt>
        <return pos:line="68" pos:column="9">return <expr><call><name><name pos:line="68" pos:column="16">csd<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">-&gt;<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="21">abortRequestParsing<pos:position pos:line="68" pos:column="40"/></name></name><argument_list pos:line="68" pos:column="40">(<argument><expr><literal type="string" pos:line="68" pos:column="41">"error:request-too-large"<pos:position pos:line="68" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="68"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="71" pos:column="5">/* Set method_p */</comment>
    <expr_stmt><expr><operator pos:line="72" pos:column="5">*<pos:position pos:line="72" pos:column="6"/></operator><name pos:line="72" pos:column="6">method_p<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <call><name pos:line="72" pos:column="17">HttpRequestMethod<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><operator pos:line="72" pos:column="35">&amp;<pos:position pos:line="72" pos:column="40"/></operator><name><name pos:line="72" pos:column="36">hp<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">-&gt;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="40">buf<pos:position pos:line="72" pos:column="43"/></name><index pos:line="72" pos:column="43">[<expr><name><name pos:line="72" pos:column="44">hp<pos:position pos:line="72" pos:column="46"/></name><operator pos:line="72" pos:column="46">-&gt;<pos:position pos:line="72" pos:column="51"/></operator><name pos:line="72" pos:column="48">req<pos:position pos:line="72" pos:column="51"/></name><operator pos:line="72" pos:column="51">.<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="52">m_start<pos:position pos:line="72" pos:column="59"/></name></name></expr>]<pos:position pos:line="72" pos:column="60"/></index></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="62">&amp;<pos:position pos:line="72" pos:column="67"/></operator><name><name pos:line="72" pos:column="63">hp<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">-&gt;<pos:position pos:line="72" pos:column="70"/></operator><name pos:line="72" pos:column="67">buf<pos:position pos:line="72" pos:column="70"/></name><index pos:line="72" pos:column="70">[<expr><name><name pos:line="72" pos:column="71">hp<pos:position pos:line="72" pos:column="73"/></name><operator pos:line="72" pos:column="73">-&gt;<pos:position pos:line="72" pos:column="78"/></operator><name pos:line="72" pos:column="75">req<pos:position pos:line="72" pos:column="78"/></name><operator pos:line="72" pos:column="78">.<pos:position pos:line="72" pos:column="79"/></operator><name pos:line="72" pos:column="79">m_end<pos:position pos:line="72" pos:column="84"/></name></name></expr>]<pos:position pos:line="72" pos:column="85"/></index></name><operator pos:line="72" pos:column="85">+<pos:position pos:line="72" pos:column="86"/></operator><literal type="number" pos:line="72" pos:column="86">1<pos:position pos:line="72" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="89"/></expr_stmt>

    <comment type="block" pos:line="74" pos:column="5">/* deny CONNECT via accelerated ports */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">*<pos:position pos:line="75" pos:column="10"/></operator><name pos:line="75" pos:column="10">method_p<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">==<pos:position pos:line="75" pos:column="21"/></operator> <name><name pos:line="75" pos:column="22">Http<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">::<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">METHOD_CONNECT<pos:position pos:line="75" pos:column="42"/></name></name> <operator pos:line="75" pos:column="43">&amp;&amp;<pos:position pos:line="75" pos:column="53"/></operator> <name><name pos:line="75" pos:column="46">csd<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">-&gt;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="51">port<pos:position pos:line="75" pos:column="55"/></name></name> <operator pos:line="75" pos:column="56">!=<pos:position pos:line="75" pos:column="58"/></operator> <name pos:line="75" pos:column="59">NULL<pos:position pos:line="75" pos:column="63"/></name> <operator pos:line="75" pos:column="64">&amp;&amp;<pos:position pos:line="75" pos:column="74"/></operator> <name><name pos:line="75" pos:column="67">csd<pos:position pos:line="75" pos:column="70"/></name><operator pos:line="75" pos:column="70">-&gt;<pos:position pos:line="75" pos:column="75"/></operator><name pos:line="75" pos:column="72">port<pos:position pos:line="75" pos:column="76"/></name><operator pos:line="75" pos:column="76">-&gt;<pos:position pos:line="75" pos:column="81"/></operator><name pos:line="75" pos:column="78">flags<pos:position pos:line="75" pos:column="83"/></name><operator pos:line="75" pos:column="83">.<pos:position pos:line="75" pos:column="84"/></operator><name pos:line="75" pos:column="84">accelSurrogate<pos:position pos:line="75" pos:column="98"/></name></name></expr>)<pos:position pos:line="75" pos:column="99"/></condition><then pos:line="75" pos:column="99"> <block pos:line="75" pos:column="100">{
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">debugs<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="number" pos:line="76" pos:column="16">33<pos:position pos:line="76" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="20">DBG_IMPORTANT<pos:position pos:line="76" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="35">"WARNING: CONNECT method received on "<pos:position pos:line="76" pos:column="73"/></literal> <operator pos:line="76" pos:column="74">&lt;&lt;<pos:position pos:line="76" pos:column="82"/></operator> <name><name pos:line="76" pos:column="77">csd<pos:position pos:line="76" pos:column="80"/></name><operator pos:line="76" pos:column="80">-&gt;<pos:position pos:line="76" pos:column="85"/></operator><name pos:line="76" pos:column="82">port<pos:position pos:line="76" pos:column="86"/></name><operator pos:line="76" pos:column="86">-&gt;<pos:position pos:line="76" pos:column="91"/></operator><name pos:line="76" pos:column="88">transport<pos:position pos:line="76" pos:column="97"/></name><operator pos:line="76" pos:column="97">.<pos:position pos:line="76" pos:column="98"/></operator><name pos:line="76" pos:column="98">protocol<pos:position pos:line="76" pos:column="106"/></name></name> <operator pos:line="76" pos:column="107">&lt;&lt;<pos:position pos:line="76" pos:column="115"/></operator> <literal type="string" pos:line="76" pos:column="110">" Accelerator port "<pos:position pos:line="76" pos:column="130"/></literal> <operator pos:line="76" pos:column="131">&lt;&lt;<pos:position pos:line="76" pos:column="139"/></operator> <call><name><name pos:line="76" pos:column="134">csd<pos:position pos:line="76" pos:column="137"/></name><operator pos:line="76" pos:column="137">-&gt;<pos:position pos:line="76" pos:column="142"/></operator><name pos:line="76" pos:column="139">port<pos:position pos:line="76" pos:column="143"/></name><operator pos:line="76" pos:column="143">-&gt;<pos:position pos:line="76" pos:column="148"/></operator><name pos:line="76" pos:column="145">s<pos:position pos:line="76" pos:column="146"/></name><operator pos:line="76" pos:column="146">.<pos:position pos:line="76" pos:column="147"/></operator><name pos:line="76" pos:column="147">port<pos:position pos:line="76" pos:column="151"/></name></name><argument_list pos:line="76" pos:column="151">()<pos:position pos:line="76" pos:column="153"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="155"/></expr_stmt>
        <comment type="block" pos:line="77" pos:column="9">/* XXX need a way to say "this many character length string" */</comment>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">debugs<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="number" pos:line="78" pos:column="16">33<pos:position pos:line="78" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="20">DBG_IMPORTANT<pos:position pos:line="78" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="35">"WARNING: for request: "<pos:position pos:line="78" pos:column="59"/></literal> <operator pos:line="78" pos:column="60">&lt;&lt;<pos:position pos:line="78" pos:column="68"/></operator> <name><name pos:line="78" pos:column="63">hp<pos:position pos:line="78" pos:column="65"/></name><operator pos:line="78" pos:column="65">-&gt;<pos:position pos:line="78" pos:column="70"/></operator><name pos:line="78" pos:column="67">buf<pos:position pos:line="78" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">hp<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">-&gt;<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="13">request_parse_status<pos:position pos:line="79" pos:column="33"/></name></name> <operator pos:line="79" pos:column="34">=<pos:position pos:line="79" pos:column="35"/></operator> <name><name pos:line="79" pos:column="36">Http<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">::<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="42">scMethodNotAllowed<pos:position pos:line="79" pos:column="60"/></name></name></expr>;<pos:position pos:line="79" pos:column="61"/></expr_stmt>
        <return pos:line="80" pos:column="9">return <expr><call><name><name pos:line="80" pos:column="16">csd<pos:position pos:line="80" pos:column="19"/></name><operator pos:line="80" pos:column="19">-&gt;<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="21">abortRequestParsing<pos:position pos:line="80" pos:column="40"/></name></name><argument_list pos:line="80" pos:column="40">(<argument><expr><literal type="string" pos:line="80" pos:column="41">"error:method-not-allowed"<pos:position pos:line="80" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="69"/></return>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="83" pos:column="5">/* RFC 7540 section 11.6 registers the method PRI as HTTP/2 specific
     * Deny "PRI" method if used in HTTP/1.x or 0.9 versions.
     * If seen it signals a broken client or proxy has corrupted the traffic.
     */</comment>
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><operator pos:line="87" pos:column="9">*<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">method_p<pos:position pos:line="87" pos:column="18"/></name> <operator pos:line="87" pos:column="19">==<pos:position pos:line="87" pos:column="21"/></operator> <name><name pos:line="87" pos:column="22">Http<pos:position pos:line="87" pos:column="26"/></name><operator pos:line="87" pos:column="26">::<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="28">METHOD_PRI<pos:position pos:line="87" pos:column="38"/></name></name> <operator pos:line="87" pos:column="39">&amp;&amp;<pos:position pos:line="87" pos:column="49"/></operator> <operator pos:line="87" pos:column="42">*<pos:position pos:line="87" pos:column="43"/></operator><name pos:line="87" pos:column="43">http_ver<pos:position pos:line="87" pos:column="51"/></name> <operator pos:line="87" pos:column="52">&lt;<pos:position pos:line="87" pos:column="56"/></operator> <call><name><name pos:line="87" pos:column="54">Http<pos:position pos:line="87" pos:column="58"/></name><operator pos:line="87" pos:column="58">::<pos:position pos:line="87" pos:column="60"/></operator><name pos:line="87" pos:column="60">ProtocolVersion<pos:position pos:line="87" pos:column="75"/></name></name><argument_list pos:line="87" pos:column="75">(<argument><expr><literal type="number" pos:line="87" pos:column="76">2<pos:position pos:line="87" pos:column="77"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="87" pos:column="78">0<pos:position pos:line="87" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="81"/></condition><then pos:line="87" pos:column="81"> <block pos:line="87" pos:column="82">{
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">debugs<pos:position pos:line="88" pos:column="15"/></name><argument_list pos:line="88" pos:column="15">(<argument><expr><literal type="number" pos:line="88" pos:column="16">33<pos:position pos:line="88" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="20">DBG_IMPORTANT<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="35">"WARNING: PRI method received on "<pos:position pos:line="88" pos:column="69"/></literal> <operator pos:line="88" pos:column="70">&lt;&lt;<pos:position pos:line="88" pos:column="78"/></operator> <name><name pos:line="88" pos:column="73">csd<pos:position pos:line="88" pos:column="76"/></name><operator pos:line="88" pos:column="76">-&gt;<pos:position pos:line="88" pos:column="81"/></operator><name pos:line="88" pos:column="78">port<pos:position pos:line="88" pos:column="82"/></name><operator pos:line="88" pos:column="82">-&gt;<pos:position pos:line="88" pos:column="87"/></operator><name pos:line="88" pos:column="84">transport<pos:position pos:line="88" pos:column="93"/></name><operator pos:line="88" pos:column="93">.<pos:position pos:line="88" pos:column="94"/></operator><name pos:line="88" pos:column="94">protocol<pos:position pos:line="88" pos:column="102"/></name></name> <operator pos:line="88" pos:column="103">&lt;&lt;<pos:position pos:line="88" pos:column="111"/></operator> <literal type="string" pos:line="88" pos:column="106">"port "<pos:position pos:line="88" pos:column="113"/></literal> <operator pos:line="88" pos:column="114">&lt;&lt;<pos:position pos:line="88" pos:column="122"/></operator> <call><name><name pos:line="88" pos:column="117">csd<pos:position pos:line="88" pos:column="120"/></name><operator pos:line="88" pos:column="120">-&gt;<pos:position pos:line="88" pos:column="125"/></operator><name pos:line="88" pos:column="122">port<pos:position pos:line="88" pos:column="126"/></name><operator pos:line="88" pos:column="126">-&gt;<pos:position pos:line="88" pos:column="131"/></operator><name pos:line="88" pos:column="128">s<pos:position pos:line="88" pos:column="129"/></name><operator pos:line="88" pos:column="129">.<pos:position pos:line="88" pos:column="130"/></operator><name pos:line="88" pos:column="130">port<pos:position pos:line="88" pos:column="134"/></name></name><argument_list pos:line="88" pos:column="134">()<pos:position pos:line="88" pos:column="136"/></argument_list></call></expr></argument>)<pos:position pos:line="88" pos:column="137"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="138"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">debugs<pos:position pos:line="89" pos:column="15"/></name><argument_list pos:line="89" pos:column="15">(<argument><expr><literal type="number" pos:line="89" pos:column="16">33<pos:position pos:line="89" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="20">DBG_IMPORTANT<pos:position pos:line="89" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="35">"WARNING: for request: "<pos:position pos:line="89" pos:column="59"/></literal> <operator pos:line="89" pos:column="60">&lt;&lt;<pos:position pos:line="89" pos:column="68"/></operator> <name><name pos:line="89" pos:column="63">hp<pos:position pos:line="89" pos:column="65"/></name><operator pos:line="89" pos:column="65">-&gt;<pos:position pos:line="89" pos:column="70"/></operator><name pos:line="89" pos:column="67">buf<pos:position pos:line="89" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">hp<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">request_parse_status<pos:position pos:line="90" pos:column="33"/></name></name> <operator pos:line="90" pos:column="34">=<pos:position pos:line="90" pos:column="35"/></operator> <name><name pos:line="90" pos:column="36">Http<pos:position pos:line="90" pos:column="40"/></name><operator pos:line="90" pos:column="40">::<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="42">scMethodNotAllowed<pos:position pos:line="90" pos:column="60"/></name></name></expr>;<pos:position pos:line="90" pos:column="61"/></expr_stmt>
        <return pos:line="91" pos:column="9">return <expr><call><name><name pos:line="91" pos:column="16">csd<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">-&gt;<pos:position pos:line="91" pos:column="24"/></operator><name pos:line="91" pos:column="21">abortRequestParsing<pos:position pos:line="91" pos:column="40"/></name></name><argument_list pos:line="91" pos:column="40">(<argument><expr><literal type="string" pos:line="91" pos:column="41">"error:method-not-allowed"<pos:position pos:line="91" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="69"/></return>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><operator pos:line="94" pos:column="9">*<pos:position pos:line="94" pos:column="10"/></operator><name pos:line="94" pos:column="10">method_p<pos:position pos:line="94" pos:column="18"/></name> <operator pos:line="94" pos:column="19">==<pos:position pos:line="94" pos:column="21"/></operator> <name><name pos:line="94" pos:column="22">Http<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">::<pos:position pos:line="94" pos:column="28"/></operator><name pos:line="94" pos:column="28">METHOD_NONE<pos:position pos:line="94" pos:column="39"/></name></name></expr>)<pos:position pos:line="94" pos:column="40"/></condition><then pos:line="94" pos:column="40"> <block pos:line="94" pos:column="41">{
        <comment type="block" pos:line="95" pos:column="9">/* XXX need a way to say "this many character length string" */</comment>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">debugs<pos:position pos:line="96" pos:column="15"/></name><argument_list pos:line="96" pos:column="15">(<argument><expr><literal type="number" pos:line="96" pos:column="16">33<pos:position pos:line="96" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="20">DBG_IMPORTANT<pos:position pos:line="96" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="35">"clientParseRequestMethod: Unsupported method in request '"<pos:position pos:line="96" pos:column="94"/></literal> <operator pos:line="96" pos:column="95">&lt;&lt;<pos:position pos:line="96" pos:column="103"/></operator> <name><name pos:line="96" pos:column="98">hp<pos:position pos:line="96" pos:column="100"/></name><operator pos:line="96" pos:column="100">-&gt;<pos:position pos:line="96" pos:column="105"/></operator><name pos:line="96" pos:column="102">buf<pos:position pos:line="96" pos:column="105"/></name></name> <operator pos:line="96" pos:column="106">&lt;&lt;<pos:position pos:line="96" pos:column="114"/></operator> <literal type="string" pos:line="96" pos:column="109">"'"<pos:position pos:line="96" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="114"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">hp<pos:position pos:line="97" pos:column="11"/></name><operator pos:line="97" pos:column="11">-&gt;<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="13">request_parse_status<pos:position pos:line="97" pos:column="33"/></name></name> <operator pos:line="97" pos:column="34">=<pos:position pos:line="97" pos:column="35"/></operator> <name><name pos:line="97" pos:column="36">Http<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">::<pos:position pos:line="97" pos:column="42"/></operator><name pos:line="97" pos:column="42">scMethodNotAllowed<pos:position pos:line="97" pos:column="60"/></name></name></expr>;<pos:position pos:line="97" pos:column="61"/></expr_stmt>
        <return pos:line="98" pos:column="9">return <expr><call><name><name pos:line="98" pos:column="16">csd<pos:position pos:line="98" pos:column="19"/></name><operator pos:line="98" pos:column="19">-&gt;<pos:position pos:line="98" pos:column="24"/></operator><name pos:line="98" pos:column="21">abortRequestParsing<pos:position pos:line="98" pos:column="40"/></name></name><argument_list pos:line="98" pos:column="40">(<argument><expr><literal type="string" pos:line="98" pos:column="41">"error:unsupported-request-method"<pos:position pos:line="98" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="77"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="101" pos:column="5">/*
     * Process headers after request line
     * TODO: Use httpRequestParse here.
     */</comment>
    <comment type="block" pos:line="105" pos:column="5">/* XXX this code should be modified to take a const char * later! */</comment>
    <expr_stmt><expr><name pos:line="106" pos:column="5">req_hdr<pos:position pos:line="106" pos:column="12"/></name> <operator pos:line="106" pos:column="13">=<pos:position pos:line="106" pos:column="14"/></operator> <operator pos:line="106" pos:column="15">(<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="16">char<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">*<pos:position pos:line="106" pos:column="22"/></operator><operator pos:line="106" pos:column="22">)<pos:position pos:line="106" pos:column="23"/></operator> <name><name pos:line="106" pos:column="24">hp<pos:position pos:line="106" pos:column="26"/></name><operator pos:line="106" pos:column="26">-&gt;<pos:position pos:line="106" pos:column="31"/></operator><name pos:line="106" pos:column="28">buf<pos:position pos:line="106" pos:column="31"/></name></name> <operator pos:line="106" pos:column="32">+<pos:position pos:line="106" pos:column="33"/></operator> <name><name pos:line="106" pos:column="34">hp<pos:position pos:line="106" pos:column="36"/></name><operator pos:line="106" pos:column="36">-&gt;<pos:position pos:line="106" pos:column="41"/></operator><name pos:line="106" pos:column="38">req<pos:position pos:line="106" pos:column="41"/></name><operator pos:line="106" pos:column="41">.<pos:position pos:line="106" pos:column="42"/></operator><name pos:line="106" pos:column="42">end<pos:position pos:line="106" pos:column="45"/></name></name> <operator pos:line="106" pos:column="46">+<pos:position pos:line="106" pos:column="47"/></operator> <literal type="number" pos:line="106" pos:column="48">1<pos:position pos:line="106" pos:column="49"/></literal></expr>;<pos:position pos:line="106" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="108" pos:column="5">debugs<pos:position pos:line="108" pos:column="11"/></name><argument_list pos:line="108" pos:column="11">(<argument><expr><literal type="number" pos:line="108" pos:column="12">33<pos:position pos:line="108" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="16">3<pos:position pos:line="108" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="19">"parseHttpRequest: req_hdr = {"<pos:position pos:line="108" pos:column="50"/></literal> <operator pos:line="108" pos:column="51">&lt;&lt;<pos:position pos:line="108" pos:column="59"/></operator> <name pos:line="108" pos:column="54">req_hdr<pos:position pos:line="108" pos:column="61"/></name> <operator pos:line="108" pos:column="62">&lt;&lt;<pos:position pos:line="108" pos:column="70"/></operator> <literal type="string" pos:line="108" pos:column="65">"}"<pos:position pos:line="108" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name pos:line="110" pos:column="5">end<pos:position pos:line="110" pos:column="8"/></name> <operator pos:line="110" pos:column="9">=<pos:position pos:line="110" pos:column="10"/></operator> <operator pos:line="110" pos:column="11">(<pos:position pos:line="110" pos:column="12"/></operator><name pos:line="110" pos:column="12">char<pos:position pos:line="110" pos:column="16"/></name> <operator pos:line="110" pos:column="17">*<pos:position pos:line="110" pos:column="18"/></operator><operator pos:line="110" pos:column="18">)<pos:position pos:line="110" pos:column="19"/></operator> <name><name pos:line="110" pos:column="20">hp<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">-&gt;<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="24">buf<pos:position pos:line="110" pos:column="27"/></name></name> <operator pos:line="110" pos:column="28">+<pos:position pos:line="110" pos:column="29"/></operator> <name><name pos:line="110" pos:column="30">hp<pos:position pos:line="110" pos:column="32"/></name><operator pos:line="110" pos:column="32">-&gt;<pos:position pos:line="110" pos:column="37"/></operator><name pos:line="110" pos:column="34">hdr_end<pos:position pos:line="110" pos:column="41"/></name></name></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="112" pos:column="5">debugs<pos:position pos:line="112" pos:column="11"/></name><argument_list pos:line="112" pos:column="11">(<argument><expr><literal type="number" pos:line="112" pos:column="12">33<pos:position pos:line="112" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="16">3<pos:position pos:line="112" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="19">"parseHttpRequest: end = {"<pos:position pos:line="112" pos:column="46"/></literal> <operator pos:line="112" pos:column="47">&lt;&lt;<pos:position pos:line="112" pos:column="55"/></operator> <name pos:line="112" pos:column="50">end<pos:position pos:line="112" pos:column="53"/></name> <operator pos:line="112" pos:column="54">&lt;&lt;<pos:position pos:line="112" pos:column="62"/></operator> <literal type="string" pos:line="112" pos:column="57">"}"<pos:position pos:line="112" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="114" pos:column="5">debugs<pos:position pos:line="114" pos:column="11"/></name><argument_list pos:line="114" pos:column="11">(<argument><expr><literal type="number" pos:line="114" pos:column="12">33<pos:position pos:line="114" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="16">3<pos:position pos:line="114" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="19">"parseHttpRequest: prefix_sz = "<pos:position pos:line="114" pos:column="51"/></literal> <operator pos:line="114" pos:column="52">&lt;&lt;<pos:position pos:line="114" pos:column="60"/></operator>
           <operator pos:line="115" pos:column="12">(<pos:position pos:line="115" pos:column="13"/></operator><name pos:line="115" pos:column="13">int<pos:position pos:line="115" pos:column="16"/></name><operator pos:line="115" pos:column="16">)<pos:position pos:line="115" pos:column="17"/></operator> <call><name pos:line="115" pos:column="18">HttpParserRequestLen<pos:position pos:line="115" pos:column="38"/></name><argument_list pos:line="115" pos:column="38">(<argument><expr><name pos:line="115" pos:column="39">hp<pos:position pos:line="115" pos:column="41"/></name></expr></argument>)<pos:position pos:line="115" pos:column="42"/></argument_list></call> <operator pos:line="115" pos:column="43">&lt;&lt;<pos:position pos:line="115" pos:column="51"/></operator> <literal type="string" pos:line="115" pos:column="46">", req_line_sz = "<pos:position pos:line="115" pos:column="64"/></literal> <operator pos:line="115" pos:column="65">&lt;&lt;<pos:position pos:line="115" pos:column="73"/></operator>
           <call><name pos:line="116" pos:column="12">HttpParserReqSz<pos:position pos:line="116" pos:column="27"/></name><argument_list pos:line="116" pos:column="27">(<argument><expr><name pos:line="116" pos:column="28">hp<pos:position pos:line="116" pos:column="30"/></name></expr></argument>)<pos:position pos:line="116" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="118" pos:column="5">/* Ok, all headers are received */</comment>
    <expr_stmt><expr><name pos:line="119" pos:column="5">http<pos:position pos:line="119" pos:column="9"/></name> <operator pos:line="119" pos:column="10">=<pos:position pos:line="119" pos:column="11"/></operator> <operator pos:line="119" pos:column="12">new<pos:position pos:line="119" pos:column="15"/></operator> <call><name pos:line="119" pos:column="16">ClientHttpRequest<pos:position pos:line="119" pos:column="33"/></name><argument_list pos:line="119" pos:column="33">(<argument><expr><name pos:line="119" pos:column="34">csd<pos:position pos:line="119" pos:column="37"/></name></expr></argument>)<pos:position pos:line="119" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="121" pos:column="5">http<pos:position pos:line="121" pos:column="9"/></name><operator pos:line="121" pos:column="9">-&gt;<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="11">req_sz<pos:position pos:line="121" pos:column="17"/></name></name> <operator pos:line="121" pos:column="18">=<pos:position pos:line="121" pos:column="19"/></operator> <call><name pos:line="121" pos:column="20">HttpParserRequestLen<pos:position pos:line="121" pos:column="40"/></name><argument_list pos:line="121" pos:column="40">(<argument><expr><name pos:line="121" pos:column="41">hp<pos:position pos:line="121" pos:column="43"/></name></expr></argument>)<pos:position pos:line="121" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="122" pos:column="5">result<pos:position pos:line="122" pos:column="11"/></name> <operator pos:line="122" pos:column="12">=<pos:position pos:line="122" pos:column="13"/></operator> <operator pos:line="122" pos:column="14">new<pos:position pos:line="122" pos:column="17"/></operator> <call><name pos:line="122" pos:column="18">ClientSocketContext<pos:position pos:line="122" pos:column="37"/></name><argument_list pos:line="122" pos:column="37">(<argument><expr><name><name pos:line="122" pos:column="38">csd<pos:position pos:line="122" pos:column="41"/></name><operator pos:line="122" pos:column="41">-&gt;<pos:position pos:line="122" pos:column="46"/></operator><name pos:line="122" pos:column="43">clientConnection<pos:position pos:line="122" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="61">http<pos:position pos:line="122" pos:column="65"/></name></expr></argument>)<pos:position pos:line="122" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="123" pos:column="5">tempBuffer<pos:position pos:line="123" pos:column="15"/></name><operator pos:line="123" pos:column="15">.<pos:position pos:line="123" pos:column="16"/></operator><name pos:line="123" pos:column="16">data<pos:position pos:line="123" pos:column="20"/></name></name> <operator pos:line="123" pos:column="21">=<pos:position pos:line="123" pos:column="22"/></operator> <name><name pos:line="123" pos:column="23">result<pos:position pos:line="123" pos:column="29"/></name><operator pos:line="123" pos:column="29">-&gt;<pos:position pos:line="123" pos:column="34"/></operator><name pos:line="123" pos:column="31">reqbuf<pos:position pos:line="123" pos:column="37"/></name></name></expr>;<pos:position pos:line="123" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="124" pos:column="5">tempBuffer<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">length<pos:position pos:line="124" pos:column="22"/></name></name> <operator pos:line="124" pos:column="23">=<pos:position pos:line="124" pos:column="24"/></operator> <name pos:line="124" pos:column="25">HTTP_REQBUF_SZ<pos:position pos:line="124" pos:column="39"/></name></expr>;<pos:position pos:line="124" pos:column="40"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="126" pos:column="5">ClientStreamData<pos:position pos:line="126" pos:column="21"/></name></type> <name pos:line="126" pos:column="22">newServer<pos:position pos:line="126" pos:column="31"/></name> <init pos:line="126" pos:column="32">= <expr><operator pos:line="126" pos:column="34">new<pos:position pos:line="126" pos:column="37"/></operator> <call><name pos:line="126" pos:column="38">clientReplyContext<pos:position pos:line="126" pos:column="56"/></name><argument_list pos:line="126" pos:column="56">(<argument><expr><name pos:line="126" pos:column="57">http<pos:position pos:line="126" pos:column="61"/></name></expr></argument>)<pos:position pos:line="126" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="126" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="127" pos:column="5">ClientStreamData<pos:position pos:line="127" pos:column="21"/></name></type> <name pos:line="127" pos:column="22">newClient<pos:position pos:line="127" pos:column="31"/></name> <init pos:line="127" pos:column="32">= <expr><name pos:line="127" pos:column="34">result<pos:position pos:line="127" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="127" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">clientStreamInit<pos:position pos:line="128" pos:column="21"/></name><argument_list pos:line="128" pos:column="21">(<argument><expr><operator pos:line="128" pos:column="22">&amp;<pos:position pos:line="128" pos:column="27"/></operator><name><name pos:line="128" pos:column="23">http<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">-&gt;<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="29">client_stream<pos:position pos:line="128" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="44">clientGetMoreData<pos:position pos:line="128" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="63">clientReplyDetach<pos:position pos:line="128" pos:column="80"/></name></expr></argument>,
                     <argument><expr><name pos:line="129" pos:column="22">clientReplyStatus<pos:position pos:line="129" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="41">newServer<pos:position pos:line="129" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="52">clientSocketRecipient<pos:position pos:line="129" pos:column="73"/></name></expr></argument>,
                     <argument><expr><name pos:line="130" pos:column="22">clientSocketDetach<pos:position pos:line="130" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="42">newClient<pos:position pos:line="130" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="53">tempBuffer<pos:position pos:line="130" pos:column="63"/></name></expr></argument>)<pos:position pos:line="130" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="132" pos:column="5">debugs<pos:position pos:line="132" pos:column="11"/></name><argument_list pos:line="132" pos:column="11">(<argument><expr><literal type="number" pos:line="132" pos:column="12">33<pos:position pos:line="132" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="16">5<pos:position pos:line="132" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="19">"parseHttpRequest: Request Header is\n"<pos:position pos:line="132" pos:column="58"/></literal> <operator pos:line="132" pos:column="59">&lt;&lt;<pos:position pos:line="132" pos:column="67"/></operator><operator pos:line="132" pos:column="61">(<pos:position pos:line="132" pos:column="62"/></operator><name><name pos:line="132" pos:column="62">hp<pos:position pos:line="132" pos:column="64"/></name><operator pos:line="132" pos:column="64">-&gt;<pos:position pos:line="132" pos:column="69"/></operator><name pos:line="132" pos:column="66">buf<pos:position pos:line="132" pos:column="69"/></name></name><operator pos:line="132" pos:column="69">)<pos:position pos:line="132" pos:column="70"/></operator> <operator pos:line="132" pos:column="71">+<pos:position pos:line="132" pos:column="72"/></operator> <name><name pos:line="132" pos:column="73">hp<pos:position pos:line="132" pos:column="75"/></name><operator pos:line="132" pos:column="75">-&gt;<pos:position pos:line="132" pos:column="80"/></operator><name pos:line="132" pos:column="77">hdr_start<pos:position pos:line="132" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="88"/></expr_stmt>

    <comment type="block" pos:line="134" pos:column="5">/* set url */</comment>
    <comment type="block" pos:line="135" pos:column="5">/*
     * XXX this should eventually not use a malloc'ed buffer; the transformation code
     * below needs to be modified to not expect a mutable nul-terminated string.
     */</comment>
    <decl_stmt><decl><type><name pos:line="139" pos:column="5">char<pos:position pos:line="139" pos:column="9"/></name> <modifier pos:line="139" pos:column="10">*<pos:position pos:line="139" pos:column="11"/></modifier></type><name pos:line="139" pos:column="11">url<pos:position pos:line="139" pos:column="14"/></name> <init pos:line="139" pos:column="15">= <expr><operator pos:line="139" pos:column="17">(<pos:position pos:line="139" pos:column="18"/></operator><name pos:line="139" pos:column="18">char<pos:position pos:line="139" pos:column="22"/></name> <operator pos:line="139" pos:column="23">*<pos:position pos:line="139" pos:column="24"/></operator><operator pos:line="139" pos:column="24">)<pos:position pos:line="139" pos:column="25"/></operator><call><name pos:line="139" pos:column="25">xmalloc<pos:position pos:line="139" pos:column="32"/></name><argument_list pos:line="139" pos:column="32">(<argument><expr><name><name pos:line="139" pos:column="33">hp<pos:position pos:line="139" pos:column="35"/></name><operator pos:line="139" pos:column="35">-&gt;<pos:position pos:line="139" pos:column="40"/></operator><name pos:line="139" pos:column="37">req<pos:position pos:line="139" pos:column="40"/></name><operator pos:line="139" pos:column="40">.<pos:position pos:line="139" pos:column="41"/></operator><name pos:line="139" pos:column="41">u_end<pos:position pos:line="139" pos:column="46"/></name></name> <operator pos:line="139" pos:column="47">-<pos:position pos:line="139" pos:column="48"/></operator> <name><name pos:line="139" pos:column="49">hp<pos:position pos:line="139" pos:column="51"/></name><operator pos:line="139" pos:column="51">-&gt;<pos:position pos:line="139" pos:column="56"/></operator><name pos:line="139" pos:column="53">req<pos:position pos:line="139" pos:column="56"/></name><operator pos:line="139" pos:column="56">.<pos:position pos:line="139" pos:column="57"/></operator><name pos:line="139" pos:column="57">u_start<pos:position pos:line="139" pos:column="64"/></name></name> <operator pos:line="139" pos:column="65">+<pos:position pos:line="139" pos:column="66"/></operator> <literal type="number" pos:line="139" pos:column="67">16<pos:position pos:line="139" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="139" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="141" pos:column="5">memcpy<pos:position pos:line="141" pos:column="11"/></name><argument_list pos:line="141" pos:column="11">(<argument><expr><name pos:line="141" pos:column="12">url<pos:position pos:line="141" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="17">hp<pos:position pos:line="141" pos:column="19"/></name><operator pos:line="141" pos:column="19">-&gt;<pos:position pos:line="141" pos:column="24"/></operator><name pos:line="141" pos:column="21">buf<pos:position pos:line="141" pos:column="24"/></name></name> <operator pos:line="141" pos:column="25">+<pos:position pos:line="141" pos:column="26"/></operator> <name><name pos:line="141" pos:column="27">hp<pos:position pos:line="141" pos:column="29"/></name><operator pos:line="141" pos:column="29">-&gt;<pos:position pos:line="141" pos:column="34"/></operator><name pos:line="141" pos:column="31">req<pos:position pos:line="141" pos:column="34"/></name><operator pos:line="141" pos:column="34">.<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="35">u_start<pos:position pos:line="141" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="141" pos:column="44">hp<pos:position pos:line="141" pos:column="46"/></name><operator pos:line="141" pos:column="46">-&gt;<pos:position pos:line="141" pos:column="51"/></operator><name pos:line="141" pos:column="48">req<pos:position pos:line="141" pos:column="51"/></name><operator pos:line="141" pos:column="51">.<pos:position pos:line="141" pos:column="52"/></operator><name pos:line="141" pos:column="52">u_end<pos:position pos:line="141" pos:column="57"/></name></name> <operator pos:line="141" pos:column="58">-<pos:position pos:line="141" pos:column="59"/></operator> <name><name pos:line="141" pos:column="60">hp<pos:position pos:line="141" pos:column="62"/></name><operator pos:line="141" pos:column="62">-&gt;<pos:position pos:line="141" pos:column="67"/></operator><name pos:line="141" pos:column="64">req<pos:position pos:line="141" pos:column="67"/></name><operator pos:line="141" pos:column="67">.<pos:position pos:line="141" pos:column="68"/></operator><name pos:line="141" pos:column="68">u_start<pos:position pos:line="141" pos:column="75"/></name></name> <operator pos:line="141" pos:column="76">+<pos:position pos:line="141" pos:column="77"/></operator> <literal type="number" pos:line="141" pos:column="78">1<pos:position pos:line="141" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="143" pos:column="5">url<pos:position pos:line="143" pos:column="8"/></name><index pos:line="143" pos:column="8">[<expr><name><name pos:line="143" pos:column="9">hp<pos:position pos:line="143" pos:column="11"/></name><operator pos:line="143" pos:column="11">-&gt;<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="13">req<pos:position pos:line="143" pos:column="16"/></name><operator pos:line="143" pos:column="16">.<pos:position pos:line="143" pos:column="17"/></operator><name pos:line="143" pos:column="17">u_end<pos:position pos:line="143" pos:column="22"/></name></name> <operator pos:line="143" pos:column="23">-<pos:position pos:line="143" pos:column="24"/></operator> <name><name pos:line="143" pos:column="25">hp<pos:position pos:line="143" pos:column="27"/></name><operator pos:line="143" pos:column="27">-&gt;<pos:position pos:line="143" pos:column="32"/></operator><name pos:line="143" pos:column="29">req<pos:position pos:line="143" pos:column="32"/></name><operator pos:line="143" pos:column="32">.<pos:position pos:line="143" pos:column="33"/></operator><name pos:line="143" pos:column="33">u_start<pos:position pos:line="143" pos:column="40"/></name></name> <operator pos:line="143" pos:column="41">+<pos:position pos:line="143" pos:column="42"/></operator> <literal type="number" pos:line="143" pos:column="43">1<pos:position pos:line="143" pos:column="44"/></literal></expr>]<pos:position pos:line="143" pos:column="45"/></index></name> <operator pos:line="143" pos:column="46">=<pos:position pos:line="143" pos:column="47"/></operator> <literal type="char" pos:line="143" pos:column="48">'\0'<pos:position pos:line="143" pos:column="52"/></literal></expr>;<pos:position pos:line="143" pos:column="53"/></expr_stmt>

<cpp:if pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">if<pos:position pos:line="145" pos:column="4"/></cpp:directive> <expr><name pos:line="145" pos:column="5">THIS_VIOLATES_HTTP_SPECS_ON_URL_TRANSFORMATION<pos:position pos:line="145" pos:column="51"/></name></expr></cpp:if>

    <if pos:line="147" pos:column="5">if <condition pos:line="147" pos:column="8">(<expr><operator pos:line="147" pos:column="9">(<pos:position pos:line="147" pos:column="10"/></operator><name pos:line="147" pos:column="10">t<pos:position pos:line="147" pos:column="11"/></name> <operator pos:line="147" pos:column="12">=<pos:position pos:line="147" pos:column="13"/></operator> <call><name pos:line="147" pos:column="14">strchr<pos:position pos:line="147" pos:column="20"/></name><argument_list pos:line="147" pos:column="20">(<argument><expr><name pos:line="147" pos:column="21">url<pos:position pos:line="147" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="147" pos:column="26">'#'<pos:position pos:line="147" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="30"/></argument_list></call><operator pos:line="147" pos:column="30">)<pos:position pos:line="147" pos:column="31"/></operator></expr>)<pos:position pos:line="147" pos:column="32"/></condition><then pos:line="147" pos:column="32"> <comment type="block" pos:line="147" pos:column="33">/* remove HTML anchors */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="148" pos:column="9">*<pos:position pos:line="148" pos:column="10"/></operator><name pos:line="148" pos:column="10">t<pos:position pos:line="148" pos:column="11"/></name> <operator pos:line="148" pos:column="12">=<pos:position pos:line="148" pos:column="13"/></operator> <literal type="char" pos:line="148" pos:column="14">'\0'<pos:position pos:line="148" pos:column="18"/></literal></expr>;<pos:position pos:line="148" pos:column="19"/></expr_stmt></block></then></if>

<cpp:endif pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">endif<pos:position pos:line="150" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="152" pos:column="5">debugs<pos:position pos:line="152" pos:column="11"/></name><argument_list pos:line="152" pos:column="11">(<argument><expr><literal type="number" pos:line="152" pos:column="12">33<pos:position pos:line="152" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="152" pos:column="15">5<pos:position pos:line="152" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="18">"Prepare absolute URL from "<pos:position pos:line="152" pos:column="46"/></literal> <operator pos:line="152" pos:column="47">&lt;&lt;<pos:position pos:line="152" pos:column="55"/></operator>
           <operator pos:line="153" pos:column="12">(<pos:position pos:line="153" pos:column="13"/></operator><ternary><condition><expr><call><name><name pos:line="153" pos:column="13">csd<pos:position pos:line="153" pos:column="16"/></name><operator pos:line="153" pos:column="16">-&gt;<pos:position pos:line="153" pos:column="21"/></operator><name pos:line="153" pos:column="18">transparent<pos:position pos:line="153" pos:column="29"/></name></name><argument_list pos:line="153" pos:column="29">()<pos:position pos:line="153" pos:column="31"/></argument_list></call></expr>?<pos:position pos:line="153" pos:column="32"/></condition><then><expr><literal type="string" pos:line="153" pos:column="32">"intercept"<pos:position pos:line="153" pos:column="43"/></literal></expr></then><else pos:line="153" pos:column="43">:<expr><operator pos:line="153" pos:column="44">(<pos:position pos:line="153" pos:column="45"/></operator><ternary><condition><expr><name><name pos:line="153" pos:column="45">csd<pos:position pos:line="153" pos:column="48"/></name><operator pos:line="153" pos:column="48">-&gt;<pos:position pos:line="153" pos:column="53"/></operator><name pos:line="153" pos:column="50">port<pos:position pos:line="153" pos:column="54"/></name><operator pos:line="153" pos:column="54">-&gt;<pos:position pos:line="153" pos:column="59"/></operator><name pos:line="153" pos:column="56">flags<pos:position pos:line="153" pos:column="61"/></name><operator pos:line="153" pos:column="61">.<pos:position pos:line="153" pos:column="62"/></operator><name pos:line="153" pos:column="62">accelSurrogate<pos:position pos:line="153" pos:column="76"/></name></name></expr> ?<pos:position pos:line="153" pos:column="78"/></condition><then pos:line="153" pos:column="78"> <expr><literal type="string" pos:line="153" pos:column="79">"accel"<pos:position pos:line="153" pos:column="86"/></literal></expr></then><else pos:line="153" pos:column="86">:<expr><literal type="string" pos:line="153" pos:column="87">""<pos:position pos:line="153" pos:column="89"/></literal></expr></else></ternary><operator pos:line="153" pos:column="89">)<pos:position pos:line="153" pos:column="90"/></operator></expr></else></ternary><operator pos:line="153" pos:column="90">)<pos:position pos:line="153" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="153" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="93"/></expr_stmt>
    <comment type="block" pos:line="154" pos:column="5">/* Rewrite the URL in transparent or accelerator mode */</comment>
    <comment type="block" pos:line="155" pos:column="5">/* NP: there are several cases to traverse here:
     *  - standard mode (forward proxy)
     *  - transparent mode (TPROXY)
     *  - transparent mode with failures
     *  - intercept mode (NAT)
     *  - intercept mode with failures
     *  - accelerator mode (reverse proxy)
     *  - internal URL
     *  - mixed combos of the above with internal URL
     *  - remote interception with PROXY protocol
     *  - remote reverse-proxy with PROXY protocol
     */</comment>
    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">(<expr><call><name><name pos:line="167" pos:column="9">csd<pos:position pos:line="167" pos:column="12"/></name><operator pos:line="167" pos:column="12">-&gt;<pos:position pos:line="167" pos:column="17"/></operator><name pos:line="167" pos:column="14">transparent<pos:position pos:line="167" pos:column="25"/></name></name><argument_list pos:line="167" pos:column="25">()<pos:position pos:line="167" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="28"/></condition><then pos:line="167" pos:column="28"> <block pos:line="167" pos:column="29">{
        <comment type="block" pos:line="168" pos:column="9">/* intercept or transparent mode, properly working with no failures */</comment>
        <expr_stmt><expr><call><name pos:line="169" pos:column="9">prepareTransparentURL<pos:position pos:line="169" pos:column="30"/></name><argument_list pos:line="169" pos:column="30">(<argument><expr><name pos:line="169" pos:column="31">csd<pos:position pos:line="169" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="36">http<pos:position pos:line="169" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="42">url<pos:position pos:line="169" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="47">req_hdr<pos:position pos:line="169" pos:column="54"/></name></expr></argument>)<pos:position pos:line="169" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="56"/></expr_stmt>

    }<pos:position pos:line="171" pos:column="6"/></block></then> <elseif pos:line="171" pos:column="7">else <if pos:line="171" pos:column="12">if <condition pos:line="171" pos:column="15">(<expr><call><name pos:line="171" pos:column="16">internalCheck<pos:position pos:line="171" pos:column="29"/></name><argument_list pos:line="171" pos:column="29">(<argument><expr><name pos:line="171" pos:column="30">url<pos:position pos:line="171" pos:column="33"/></name></expr></argument>)<pos:position pos:line="171" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="171" pos:column="35"/></condition><then pos:line="171" pos:column="35"> <block pos:line="171" pos:column="36">{
        <comment type="block" pos:line="172" pos:column="9">/* internal URL mode */</comment>
        <comment type="block" pos:line="173" pos:column="9">/* prepend our name &amp; port */</comment>
        <expr_stmt><expr><name><name pos:line="174" pos:column="9">http<pos:position pos:line="174" pos:column="13"/></name><operator pos:line="174" pos:column="13">-&gt;<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="15">uri<pos:position pos:line="174" pos:column="18"/></name></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <call><name pos:line="174" pos:column="21">xstrdup<pos:position pos:line="174" pos:column="28"/></name><argument_list pos:line="174" pos:column="28">(<argument><expr><call><name pos:line="174" pos:column="29">internalLocalUri<pos:position pos:line="174" pos:column="45"/></name><argument_list pos:line="174" pos:column="45">(<argument><expr><name pos:line="174" pos:column="46">NULL<pos:position pos:line="174" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="174" pos:column="52">url<pos:position pos:line="174" pos:column="55"/></name></expr></argument>)<pos:position pos:line="174" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="174" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="58"/></expr_stmt>
        <comment type="line" pos:line="175" pos:column="9">// We just re-wrote the URL. Must replace the Host: header.</comment>
        <comment type="line" pos:line="176" pos:column="9">//  But have not parsed there yet!! flag for local-only handling.</comment>
        <expr_stmt><expr><name><name pos:line="177" pos:column="9">http<pos:position pos:line="177" pos:column="13"/></name><operator pos:line="177" pos:column="13">-&gt;<pos:position pos:line="177" pos:column="18"/></operator><name pos:line="177" pos:column="15">flags<pos:position pos:line="177" pos:column="20"/></name><operator pos:line="177" pos:column="20">.<pos:position pos:line="177" pos:column="21"/></operator><name pos:line="177" pos:column="21">internal<pos:position pos:line="177" pos:column="29"/></name></name> <operator pos:line="177" pos:column="30">=<pos:position pos:line="177" pos:column="31"/></operator> <literal type="boolean" pos:line="177" pos:column="32">true<pos:position pos:line="177" pos:column="36"/></literal></expr>;<pos:position pos:line="177" pos:column="37"/></expr_stmt>

    }<pos:position pos:line="179" pos:column="6"/></block></then></if></elseif> <elseif pos:line="179" pos:column="7">else <if pos:line="179" pos:column="12">if <condition pos:line="179" pos:column="15">(<expr><name><name pos:line="179" pos:column="16">csd<pos:position pos:line="179" pos:column="19"/></name><operator pos:line="179" pos:column="19">-&gt;<pos:position pos:line="179" pos:column="24"/></operator><name pos:line="179" pos:column="21">port<pos:position pos:line="179" pos:column="25"/></name><operator pos:line="179" pos:column="25">-&gt;<pos:position pos:line="179" pos:column="30"/></operator><name pos:line="179" pos:column="27">flags<pos:position pos:line="179" pos:column="32"/></name><operator pos:line="179" pos:column="32">.<pos:position pos:line="179" pos:column="33"/></operator><name pos:line="179" pos:column="33">accelSurrogate<pos:position pos:line="179" pos:column="47"/></name></name> <operator pos:line="179" pos:column="48">||<pos:position pos:line="179" pos:column="50"/></operator> <call><name><name pos:line="179" pos:column="51">csd<pos:position pos:line="179" pos:column="54"/></name><operator pos:line="179" pos:column="54">-&gt;<pos:position pos:line="179" pos:column="59"/></operator><name pos:line="179" pos:column="56">switchedToHttps<pos:position pos:line="179" pos:column="71"/></name></name><argument_list pos:line="179" pos:column="71">()<pos:position pos:line="179" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="74"/></condition><then pos:line="179" pos:column="74"> <block pos:line="179" pos:column="75">{
        <comment type="block" pos:line="180" pos:column="9">/* accelerator mode */</comment>
        <expr_stmt><expr><call><name pos:line="181" pos:column="9">prepareAcceleratedURL<pos:position pos:line="181" pos:column="30"/></name><argument_list pos:line="181" pos:column="30">(<argument><expr><name pos:line="181" pos:column="31">csd<pos:position pos:line="181" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="36">http<pos:position pos:line="181" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="42">url<pos:position pos:line="181" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="47">req_hdr<pos:position pos:line="181" pos:column="54"/></name></expr></argument>)<pos:position pos:line="181" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="184" pos:column="5">if <condition pos:line="184" pos:column="8">(<expr><operator pos:line="184" pos:column="9">!<pos:position pos:line="184" pos:column="10"/></operator><name><name pos:line="184" pos:column="10">http<pos:position pos:line="184" pos:column="14"/></name><operator pos:line="184" pos:column="14">-&gt;<pos:position pos:line="184" pos:column="19"/></operator><name pos:line="184" pos:column="16">uri<pos:position pos:line="184" pos:column="19"/></name></name></expr>)<pos:position pos:line="184" pos:column="20"/></condition><then pos:line="184" pos:column="20"> <block pos:line="184" pos:column="21">{
        <comment type="block" pos:line="185" pos:column="9">/* No special rewrites have been applied above, use the
         * requested url. may be rewritten later, so make extra room */</comment>
        <decl_stmt><decl><type><name pos:line="187" pos:column="9">int<pos:position pos:line="187" pos:column="12"/></name></type> <name pos:line="187" pos:column="13">url_sz<pos:position pos:line="187" pos:column="19"/></name> <init pos:line="187" pos:column="20">= <expr><call><name pos:line="187" pos:column="22">strlen<pos:position pos:line="187" pos:column="28"/></name><argument_list pos:line="187" pos:column="28">(<argument><expr><name pos:line="187" pos:column="29">url<pos:position pos:line="187" pos:column="32"/></name></expr></argument>)<pos:position pos:line="187" pos:column="33"/></argument_list></call> <operator pos:line="187" pos:column="34">+<pos:position pos:line="187" pos:column="35"/></operator> <name><name pos:line="187" pos:column="36">Config<pos:position pos:line="187" pos:column="42"/></name><operator pos:line="187" pos:column="42">.<pos:position pos:line="187" pos:column="43"/></operator><name pos:line="187" pos:column="43">appendDomainLen<pos:position pos:line="187" pos:column="58"/></name></name> <operator pos:line="187" pos:column="59">+<pos:position pos:line="187" pos:column="60"/></operator> <literal type="number" pos:line="187" pos:column="61">5<pos:position pos:line="187" pos:column="62"/></literal></expr></init></decl>;<pos:position pos:line="187" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="188" pos:column="9">http<pos:position pos:line="188" pos:column="13"/></name><operator pos:line="188" pos:column="13">-&gt;<pos:position pos:line="188" pos:column="18"/></operator><name pos:line="188" pos:column="15">uri<pos:position pos:line="188" pos:column="18"/></name></name> <operator pos:line="188" pos:column="19">=<pos:position pos:line="188" pos:column="20"/></operator> <operator pos:line="188" pos:column="21">(<pos:position pos:line="188" pos:column="22"/></operator><name pos:line="188" pos:column="22">char<pos:position pos:line="188" pos:column="26"/></name> <operator pos:line="188" pos:column="27">*<pos:position pos:line="188" pos:column="28"/></operator><operator pos:line="188" pos:column="28">)<pos:position pos:line="188" pos:column="29"/></operator><call><name pos:line="188" pos:column="29">xcalloc<pos:position pos:line="188" pos:column="36"/></name><argument_list pos:line="188" pos:column="36">(<argument><expr><name pos:line="188" pos:column="37">url_sz<pos:position pos:line="188" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="188" pos:column="45">1<pos:position pos:line="188" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="189" pos:column="9">strcpy<pos:position pos:line="189" pos:column="15"/></name><argument_list pos:line="189" pos:column="15">(<argument><expr><name><name pos:line="189" pos:column="16">http<pos:position pos:line="189" pos:column="20"/></name><operator pos:line="189" pos:column="20">-&gt;<pos:position pos:line="189" pos:column="25"/></operator><name pos:line="189" pos:column="22">uri<pos:position pos:line="189" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="27">url<pos:position pos:line="189" pos:column="30"/></name></expr></argument>)<pos:position pos:line="189" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="190" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="192" pos:column="5">debugs<pos:position pos:line="192" pos:column="11"/></name><argument_list pos:line="192" pos:column="11">(<argument><expr><literal type="number" pos:line="192" pos:column="12">33<pos:position pos:line="192" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="192" pos:column="16">5<pos:position pos:line="192" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="19">"parseHttpRequest: Complete request received"<pos:position pos:line="192" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="66"/></expr_stmt>

    <comment type="line" pos:line="194" pos:column="5">// XXX: crop this dump at the end of headers. No need for extras</comment>
    <expr_stmt><expr><call><name pos:line="195" pos:column="5">debugs<pos:position pos:line="195" pos:column="11"/></name><argument_list pos:line="195" pos:column="11">(<argument><expr><literal type="number" pos:line="195" pos:column="12">11<pos:position pos:line="195" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="195" pos:column="16">2<pos:position pos:line="195" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="19">"HTTP Client "<pos:position pos:line="195" pos:column="33"/></literal> <operator pos:line="195" pos:column="34">&lt;&lt;<pos:position pos:line="195" pos:column="42"/></operator> <name><name pos:line="195" pos:column="37">csd<pos:position pos:line="195" pos:column="40"/></name><operator pos:line="195" pos:column="40">-&gt;<pos:position pos:line="195" pos:column="45"/></operator><name pos:line="195" pos:column="42">clientConnection<pos:position pos:line="195" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="196" pos:column="5">debugs<pos:position pos:line="196" pos:column="11"/></name><argument_list pos:line="196" pos:column="11">(<argument><expr><literal type="number" pos:line="196" pos:column="12">11<pos:position pos:line="196" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="196" pos:column="16">2<pos:position pos:line="196" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="19">"HTTP Client REQUEST:\n---------\n"<pos:position pos:line="196" pos:column="54"/></literal> <operator pos:line="196" pos:column="55">&lt;&lt;<pos:position pos:line="196" pos:column="63"/></operator> <operator pos:line="196" pos:column="58">(<pos:position pos:line="196" pos:column="59"/></operator><name><name pos:line="196" pos:column="59">hp<pos:position pos:line="196" pos:column="61"/></name><operator pos:line="196" pos:column="61">-&gt;<pos:position pos:line="196" pos:column="66"/></operator><name pos:line="196" pos:column="63">buf<pos:position pos:line="196" pos:column="66"/></name></name><operator pos:line="196" pos:column="66">)<pos:position pos:line="196" pos:column="67"/></operator> <operator pos:line="196" pos:column="68">+<pos:position pos:line="196" pos:column="69"/></operator> <name><name pos:line="196" pos:column="70">hp<pos:position pos:line="196" pos:column="72"/></name><operator pos:line="196" pos:column="72">-&gt;<pos:position pos:line="196" pos:column="77"/></operator><name pos:line="196" pos:column="74">req<pos:position pos:line="196" pos:column="77"/></name><operator pos:line="196" pos:column="77">.<pos:position pos:line="196" pos:column="78"/></operator><name pos:line="196" pos:column="78">m_start<pos:position pos:line="196" pos:column="85"/></name></name> <operator pos:line="196" pos:column="86">&lt;&lt;<pos:position pos:line="196" pos:column="94"/></operator> <literal type="string" pos:line="196" pos:column="89">"\n----------"<pos:position pos:line="196" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="105"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="198" pos:column="5">result<pos:position pos:line="198" pos:column="11"/></name><operator pos:line="198" pos:column="11">-&gt;<pos:position pos:line="198" pos:column="16"/></operator><name pos:line="198" pos:column="13">flags<pos:position pos:line="198" pos:column="18"/></name><operator pos:line="198" pos:column="18">.<pos:position pos:line="198" pos:column="19"/></operator><name pos:line="198" pos:column="19">parsed_ok<pos:position pos:line="198" pos:column="28"/></name></name> <operator pos:line="198" pos:column="29">=<pos:position pos:line="198" pos:column="30"/></operator> <literal type="number" pos:line="198" pos:column="31">1<pos:position pos:line="198" pos:column="32"/></literal></expr>;<pos:position pos:line="198" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="199" pos:column="5">xfree<pos:position pos:line="199" pos:column="10"/></name><argument_list pos:line="199" pos:column="10">(<argument><expr><name pos:line="199" pos:column="11">url<pos:position pos:line="199" pos:column="14"/></name></expr></argument>)<pos:position pos:line="199" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="16"/></expr_stmt>
    <return pos:line="200" pos:column="5">return <expr><name pos:line="200" pos:column="12">result<pos:position pos:line="200" pos:column="18"/></name></expr>;<pos:position pos:line="200" pos:column="19"/></return>
}<pos:position pos:line="201" pos:column="2"/></block></function></unit>

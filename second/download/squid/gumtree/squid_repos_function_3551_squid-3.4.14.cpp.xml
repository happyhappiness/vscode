<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3551_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">canPackMoreRanges<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list> <specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="block" format="doxygen" pos:line="4" pos:column="5">/** first update iterator "i" if needed */</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name><name pos:line="6" pos:column="10">http<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">range_iter<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">debt<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <block pos:line="6" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">33<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">5<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HERE<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <literal type="string" pos:line="7" pos:column="31">"At end of current range spec for "<pos:position pos:line="7" pos:column="66"/></literal> <operator pos:line="7" pos:column="67">&lt;&lt;<pos:position pos:line="7" pos:column="75"/></operator> <name pos:line="7" pos:column="70">clientConnection<pos:position pos:line="7" pos:column="86"/></name></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="88"/></expr_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name><name pos:line="9" pos:column="13">http<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">range_iter<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">.<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">pos<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">.<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">incrementable<pos:position pos:line="9" pos:column="47"/></name></name><argument_list pos:line="9" pos:column="47">()<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="13">++<pos:position pos:line="10" pos:column="15"/></operator><name><name pos:line="10" pos:column="15">http<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">range_iter<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">.<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">pos<pos:position pos:line="10" pos:column="35"/></name></name></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">http<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">range_iter<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">updateSpec<pos:position pos:line="12" pos:column="36"/></name></name><argument_list pos:line="12" pos:column="36">()<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><operator pos:line="15" pos:column="12">!<pos:position pos:line="15" pos:column="13"/></operator><call><name><name pos:line="15" pos:column="13">http<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">range_iter<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">debt<pos:position pos:line="15" pos:column="34"/></name></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">==<pos:position pos:line="15" pos:column="39"/></operator> <operator pos:line="15" pos:column="40">!<pos:position pos:line="15" pos:column="41"/></operator><call><name><name pos:line="15" pos:column="41">http<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">-&gt;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="47">range_iter<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">.<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">currentSpec<pos:position pos:line="15" pos:column="69"/></name></name><argument_list pos:line="15" pos:column="69">()<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* paranoid sync condition */</comment>
    <comment type="block" pos:line="18" pos:column="5">/* continue condition: need_more_data */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">33<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">5<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"ClientSocketContext::canPackMoreRanges: returning "<pos:position pos:line="19" pos:column="71"/></literal> <operator pos:line="19" pos:column="72">&lt;&lt;<pos:position pos:line="19" pos:column="80"/></operator> <operator pos:line="19" pos:column="75">(<pos:position pos:line="19" pos:column="76"/></operator><ternary><condition><expr><call><name><name pos:line="19" pos:column="76">http<pos:position pos:line="19" pos:column="80"/></name><operator pos:line="19" pos:column="80">-&gt;<pos:position pos:line="19" pos:column="85"/></operator><name pos:line="19" pos:column="82">range_iter<pos:position pos:line="19" pos:column="92"/></name><operator pos:line="19" pos:column="92">.<pos:position pos:line="19" pos:column="93"/></operator><name pos:line="19" pos:column="93">currentSpec<pos:position pos:line="19" pos:column="104"/></name></name><argument_list pos:line="19" pos:column="104">()<pos:position pos:line="19" pos:column="106"/></argument_list></call></expr> ?<pos:position pos:line="19" pos:column="108"/></condition><then pos:line="19" pos:column="108"> <expr><literal type="boolean" pos:line="19" pos:column="109">true<pos:position pos:line="19" pos:column="113"/></literal></expr> <pos:position pos:line="19" pos:column="114"/></then><else pos:line="19" pos:column="114">: <expr><literal type="boolean" pos:line="19" pos:column="116">false<pos:position pos:line="19" pos:column="121"/></literal></expr></else></ternary><operator pos:line="19" pos:column="121">)<pos:position pos:line="19" pos:column="122"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="124"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><ternary><condition><expr><call><name><name pos:line="20" pos:column="12">http<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">range_iter<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">currentSpec<pos:position pos:line="20" pos:column="40"/></name></name><argument_list pos:line="20" pos:column="40">()<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44"> <expr><literal type="boolean" pos:line="20" pos:column="45">true<pos:position pos:line="20" pos:column="49"/></literal></expr> <pos:position pos:line="20" pos:column="50"/></then><else pos:line="20" pos:column="50">: <expr><literal type="boolean" pos:line="20" pos:column="52">false<pos:position pos:line="20" pos:column="57"/></literal></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="58"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

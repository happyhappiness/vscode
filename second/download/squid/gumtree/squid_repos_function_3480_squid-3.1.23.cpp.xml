<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3480_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">connKeepReadingIncompleteRequest<pos:position pos:line="2" pos:column="33"/></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">ConnStateData<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">conn<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// when we read chunked requests, the entire body is buffered</comment>
    <comment type="line" pos:line="5" pos:column="5">// XXX: this check ignores header size and its limits.</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">conn<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">in<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">.<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">dechunkingState<pos:position pos:line="6" pos:column="33"/></name></name> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <name><name pos:line="6" pos:column="37">ConnStateData<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">::<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="52">chunkParsing<pos:position pos:line="6" pos:column="64"/></name></name></expr>)<pos:position pos:line="6" pos:column="65"/></condition><then pos:line="6" pos:column="65">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">int64_t<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator><name><name pos:line="7" pos:column="26">conn<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">in<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">notYetUsed<pos:position pos:line="7" pos:column="45"/></name></name><operator pos:line="7" pos:column="45">)<pos:position pos:line="7" pos:column="46"/></operator> <operator pos:line="7" pos:column="47">&lt;<pos:position pos:line="7" pos:column="51"/></operator> <name><name pos:line="7" pos:column="49">Config<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">.<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">maxChunkedRequestBodySize<pos:position pos:line="7" pos:column="81"/></name></name></expr>;<pos:position pos:line="7" pos:column="82"/></return></block></then></if>

    <return pos:line="9" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="9" pos:column="12">conn<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">in<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">notYetUsed<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">&gt;=<pos:position pos:line="9" pos:column="37"/></operator> <name><name pos:line="9" pos:column="35">Config<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">.<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">maxRequestHeaderSize<pos:position pos:line="9" pos:column="62"/></name></name></expr> ?<pos:position pos:line="9" pos:column="64"/></condition><then pos:line="9" pos:column="64"> <expr><literal type="number" pos:line="9" pos:column="65">0<pos:position pos:line="9" pos:column="66"/></literal></expr> <pos:position pos:line="9" pos:column="67"/></then><else pos:line="9" pos:column="67">: <expr><literal type="number" pos:line="9" pos:column="69">1<pos:position pos:line="9" pos:column="70"/></literal></expr></else></ternary></expr>;<pos:position pos:line="9" pos:column="71"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

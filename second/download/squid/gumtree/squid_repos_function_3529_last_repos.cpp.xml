<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3529_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">parseMore<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">()<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">5<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="19">"have "<pos:position pos:line="3" pos:column="26"/></literal> <operator pos:line="3" pos:column="27">&lt;&lt;<pos:position pos:line="3" pos:column="35"/></operator> <call><name><name pos:line="3" pos:column="30">readBuf<pos:position pos:line="3" pos:column="37"/></name><operator pos:line="3" pos:column="37">.<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="38">length<pos:position pos:line="3" pos:column="44"/></name></name><argument_list pos:line="3" pos:column="44">()<pos:position pos:line="3" pos:column="46"/></argument_list></call> <operator pos:line="3" pos:column="47">&lt;&lt;<pos:position pos:line="3" pos:column="55"/></operator> <literal type="string" pos:line="3" pos:column="50">" bytes to parse"<pos:position pos:line="3" pos:column="67"/></literal> <operator pos:line="3" pos:column="68">&lt;&lt;<pos:position pos:line="3" pos:column="76"/></operator> <call><name pos:line="3" pos:column="71">status<pos:position pos:line="3" pos:column="77"/></name><argument_list pos:line="3" pos:column="77">()<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"\n"<pos:position pos:line="4" pos:column="23"/></literal> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="27">readBuf<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name><name pos:line="6" pos:column="9">state<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">parsingHeaders<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">parseHeaders<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">()<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">state<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">parsing<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">==<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="26">State<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">::<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">psBody<pos:position pos:line="9" pos:column="39"/></name></name></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">parseBody<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">()<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6897_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">esiBufferRecipient<pos:position pos:line="2" pos:column="19"/></name> <parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">clientStreamNode<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">node<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">ClientHttpRequest<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">http<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">HttpReply<pos:position pos:line="2" pos:column="79"/></name> <modifier pos:line="2" pos:column="80">*<pos:position pos:line="2" pos:column="81"/></modifier></type><name pos:line="2" pos:column="81">rep<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="86">StoreIOBuffer<pos:position pos:line="2" pos:column="99"/></name></type> <name pos:line="2" pos:column="100">receivedData<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="113"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* Test preconditions */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">node<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></argument>)<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* ESI TODO: handle thisNode rather than asserting
     * - it should only ever happen if we cause an
     * abort and the callback chain loops back to
     * here, so we can simply return. However, that
     * itself shouldn't happen, so it stays as an
     * assert for now. */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name> <argument_list pos:line="12" pos:column="12">(<argument><expr><call><name pos:line="12" pos:column="13">cbdataReferenceValid<pos:position pos:line="12" pos:column="33"/></name> <argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">node<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name> <argument_list pos:line="13" pos:column="12">(<argument><expr><name><name pos:line="13" pos:column="13">node<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">node<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">next<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">==<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name> <argument_list pos:line="14" pos:column="12">(<argument><expr><call><name><name pos:line="14" pos:column="13">http<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">getConn<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call> <operator pos:line="14" pos:column="29">==<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">NULL<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">ESIStreamContext<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">::<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">Pointer<pos:position pos:line="16" pos:column="30"/></name></name></type> <name pos:line="16" pos:column="31">esiStream<pos:position pos:line="16" pos:column="40"/></name> <init pos:line="16" pos:column="41">= <expr><cast type="dynamic" pos:line="16" pos:column="43">dynamic_cast<argument_list type="generic" pos:line="16" pos:column="55">&lt;<argument><expr><name pos:line="16" pos:column="56">ESIStreamContext<pos:position pos:line="16" pos:column="72"/></name> <operator pos:line="16" pos:column="73">*<pos:position pos:line="16" pos:column="74"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="78"/></argument_list><argument_list pos:line="16" pos:column="75">(<argument><expr><call><name><name pos:line="16" pos:column="76">node<pos:position pos:line="16" pos:column="80"/></name><operator pos:line="16" pos:column="80">-&gt;<pos:position pos:line="16" pos:column="85"/></operator><name pos:line="16" pos:column="82">data<pos:position pos:line="16" pos:column="86"/></name><operator pos:line="16" pos:column="86">.<pos:position pos:line="16" pos:column="87"/></operator><name pos:line="16" pos:column="87">getRaw<pos:position pos:line="16" pos:column="93"/></name></name><argument_list pos:line="16" pos:column="93">()<pos:position pos:line="16" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="96"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="16" pos:column="97"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name> <argument_list pos:line="17" pos:column="12">(<argument><expr><call><name><name pos:line="17" pos:column="13">esiStream<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">.<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">getRaw<pos:position pos:line="17" pos:column="29"/></name></name><argument_list pos:line="17" pos:column="29">()<pos:position pos:line="17" pos:column="31"/></argument_list></call> <operator pos:line="17" pos:column="32">!=<pos:position pos:line="17" pos:column="34"/></operator> <name pos:line="17" pos:column="35">NULL<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
    <comment type="block" pos:line="18" pos:column="5">/* If segments become more flexible, ignore thisNode */</comment>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name> <argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">receivedData<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">length<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">&lt;=<pos:position pos:line="19" pos:column="38"/></operator> <sizeof pos:line="19" pos:column="36">sizeof<argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">esiStream<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">localbuffer<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">-&gt;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="67">buf<pos:position pos:line="19" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name> <argument_list pos:line="20" pos:column="12">(<argument><expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">esiStream<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">finished<pos:position pos:line="20" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><literal type="number" pos:line="22" pos:column="13">86<pos:position pos:line="22" pos:column="15"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="22" pos:column="16">5<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">HERE<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&lt;&lt;<pos:position pos:line="22" pos:column="32"/></operator> <literal type="string" pos:line="22" pos:column="27">"rep "<pos:position pos:line="22" pos:column="33"/></literal> <operator pos:line="22" pos:column="34">&lt;&lt;<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="37">rep<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">&lt;&lt;<pos:position pos:line="22" pos:column="49"/></operator> <literal type="string" pos:line="22" pos:column="44">" body "<pos:position pos:line="22" pos:column="52"/></literal> <operator pos:line="22" pos:column="53">&lt;&lt;<pos:position pos:line="22" pos:column="61"/></operator> <name><name pos:line="22" pos:column="56">receivedData<pos:position pos:line="22" pos:column="68"/></name><operator pos:line="22" pos:column="68">.<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="69">data<pos:position pos:line="22" pos:column="73"/></name></name> <operator pos:line="22" pos:column="74">&lt;&lt;<pos:position pos:line="22" pos:column="82"/></operator> <literal type="string" pos:line="22" pos:column="77">" len "<pos:position pos:line="22" pos:column="84"/></literal> <operator pos:line="22" pos:column="85">&lt;&lt;<pos:position pos:line="22" pos:column="93"/></operator> <name><name pos:line="22" pos:column="88">receivedData<pos:position pos:line="22" pos:column="100"/></name><operator pos:line="22" pos:column="100">.<pos:position pos:line="22" pos:column="101"/></operator><name pos:line="22" pos:column="101">length<pos:position pos:line="22" pos:column="107"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="109"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name> <argument_list pos:line="23" pos:column="12">(<argument><expr><name><name pos:line="23" pos:column="13">node<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">-&gt;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="19">readBuffer<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">.<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">offset<pos:position pos:line="23" pos:column="36"/></name></name> <operator pos:line="23" pos:column="37">==<pos:position pos:line="23" pos:column="39"/></operator> <name><name pos:line="23" pos:column="40">receivedData<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">.<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">offset<pos:position pos:line="23" pos:column="59"/></name></name> <operator pos:line="23" pos:column="60">||<pos:position pos:line="23" pos:column="62"/></operator> <name><name pos:line="23" pos:column="63">receivedData<pos:position pos:line="23" pos:column="75"/></name><operator pos:line="23" pos:column="75">.<pos:position pos:line="23" pos:column="76"/></operator><name pos:line="23" pos:column="76">length<pos:position pos:line="23" pos:column="82"/></name></name> <operator pos:line="23" pos:column="83">==<pos:position pos:line="23" pos:column="85"/></operator> <literal type="number" pos:line="23" pos:column="86">0<pos:position pos:line="23" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="89"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* trivial case */</comment>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">http<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">out<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">offset<pos:position pos:line="27" pos:column="25"/></name></name> <operator pos:line="27" pos:column="26">!=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31"> <block pos:line="27" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">assert<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">rep<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">==<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">NULL<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name pos:line="30" pos:column="13">rep<pos:position pos:line="30" pos:column="16"/></name></expr>)<pos:position pos:line="30" pos:column="17"/></condition><then pos:line="30" pos:column="17"> <block pos:line="30" pos:column="18">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><call><name><name pos:line="31" pos:column="17">rep<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">sline<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">status<pos:position pos:line="31" pos:column="34"/></name></name><argument_list pos:line="31" pos:column="34">()<pos:position pos:line="31" pos:column="36"/></argument_list></call> <operator pos:line="31" pos:column="37">!=<pos:position pos:line="31" pos:column="39"/></operator> <name><name pos:line="31" pos:column="40">Http<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">::<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="46">scOkay<pos:position pos:line="31" pos:column="52"/></name></name></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53"> <block pos:line="31" pos:column="54">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">rep<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">NULL<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="33" pos:column="17">esiStream<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">-&gt;<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="28">include<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">includeFail<pos:position pos:line="33" pos:column="48"/></name></name> <argument_list pos:line="33" pos:column="49">(<argument><expr><name pos:line="33" pos:column="50">esiStream<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="34" pos:column="17">esiStream<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">finished<pos:position pos:line="34" pos:column="36"/></name></name> <operator pos:line="34" pos:column="37">=<pos:position pos:line="34" pos:column="38"/></operator> <literal type="number" pos:line="34" pos:column="39">1<pos:position pos:line="34" pos:column="40"/></literal></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="35" pos:column="17">httpRequestFree<pos:position pos:line="35" pos:column="32"/></name> <argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">http<pos:position pos:line="35" pos:column="38"/></name></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
                <return pos:line="36" pos:column="17">return;<pos:position pos:line="36" pos:column="24"/></return>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>

<cpp:if pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">if<pos:position pos:line="39" pos:column="4"/></cpp:directive> <expr><name pos:line="39" pos:column="5">HEADERS_LOG<pos:position pos:line="39" pos:column="16"/></name></expr></cpp:if>
            <comment type="block" pos:line="40" pos:column="13">/* should be done in the store rather than every recipient?  */</comment>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">headersLog<pos:position pos:line="41" pos:column="23"/></name><argument_list pos:line="41" pos:column="23">(<argument><expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="27">0<pos:position pos:line="41" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="30">http<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">-&gt;<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="36">request<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">-&gt;<pos:position pos:line="41" pos:column="48"/></operator><name pos:line="41" pos:column="45">method<pos:position pos:line="41" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">rep<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt>

<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="44" pos:column="13">rep<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">NULL<pos:position pos:line="44" pos:column="23"/></name></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">receivedData<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">.<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">data<pos:position pos:line="48" pos:column="26"/></name></name> <operator pos:line="48" pos:column="27">&amp;&amp;<pos:position pos:line="48" pos:column="37"/></operator> <name><name pos:line="48" pos:column="30">receivedData<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">.<pos:position pos:line="48" pos:column="43"/></operator><name pos:line="48" pos:column="43">length<pos:position pos:line="48" pos:column="49"/></name></name></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50"> <block pos:line="48" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">http<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">out<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">.<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">offset<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">+=<pos:position pos:line="49" pos:column="28"/></operator> <name><name pos:line="49" pos:column="29">receivedData<pos:position pos:line="49" pos:column="41"/></name><operator pos:line="49" pos:column="41">.<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="42">length<pos:position pos:line="49" pos:column="48"/></name></name></expr>;<pos:position pos:line="49" pos:column="49"/></expr_stmt>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">receivedData<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">.<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="26">data<pos:position pos:line="51" pos:column="30"/></name></name> <operator pos:line="51" pos:column="31">&gt;=<pos:position pos:line="51" pos:column="36"/></operator> <name><name pos:line="51" pos:column="34">esiStream<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">-&gt;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="45">localbuffer<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">buf<pos:position pos:line="51" pos:column="61"/></name></name> <operator pos:line="51" pos:column="62">&amp;&amp;<pos:position pos:line="51" pos:column="72"/></operator>
                <name><name pos:line="52" pos:column="17">receivedData<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">.<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="30">data<pos:position pos:line="52" pos:column="34"/></name></name> <operator pos:line="52" pos:column="35">&lt;<pos:position pos:line="52" pos:column="39"/></operator> <operator pos:line="52" pos:column="37">&amp;<pos:position pos:line="52" pos:column="42"/></operator><name><name pos:line="52" pos:column="38">esiStream<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">-&gt;<pos:position pos:line="52" pos:column="52"/></operator><name pos:line="52" pos:column="49">localbuffer<pos:position pos:line="52" pos:column="60"/></name><operator pos:line="52" pos:column="60">-&gt;<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="62">buf<pos:position pos:line="52" pos:column="65"/></name><index pos:line="52" pos:column="65">[<expr><sizeof pos:line="52" pos:column="66">sizeof<argument_list pos:line="52" pos:column="72">(<argument><expr><name><name pos:line="52" pos:column="73">esiStream<pos:position pos:line="52" pos:column="82"/></name><operator pos:line="52" pos:column="82">-&gt;<pos:position pos:line="52" pos:column="87"/></operator><name pos:line="52" pos:column="84">localbuffer<pos:position pos:line="52" pos:column="95"/></name><operator pos:line="52" pos:column="95">-&gt;<pos:position pos:line="52" pos:column="100"/></operator><name pos:line="52" pos:column="97">buf<pos:position pos:line="52" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="101"/></argument_list></sizeof></expr>]<pos:position pos:line="52" pos:column="102"/></index></name></expr>)<pos:position pos:line="52" pos:column="103"/></condition><then pos:line="52" pos:column="103"> <block pos:line="52" pos:column="104">{
            <comment type="block" pos:line="53" pos:column="13">/* original static buffer */</comment>

            <if pos:line="55" pos:column="13">if <condition pos:line="55" pos:column="16">(<expr><name><name pos:line="55" pos:column="17">receivedData<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">.<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">data<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">!=<pos:position pos:line="55" pos:column="37"/></operator> <name><name pos:line="55" pos:column="38">esiStream<pos:position pos:line="55" pos:column="47"/></name><operator pos:line="55" pos:column="47">-&gt;<pos:position pos:line="55" pos:column="52"/></operator><name pos:line="55" pos:column="49">localbuffer<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">-&gt;<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="62">buf<pos:position pos:line="55" pos:column="65"/></name></name></expr>)<pos:position pos:line="55" pos:column="66"/></condition><then pos:line="55" pos:column="66"> <block pos:line="55" pos:column="67">{
                <comment type="block" pos:line="56" pos:column="17">/* But not the start of it */</comment>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">memmove<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name><name pos:line="57" pos:column="25">esiStream<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">localbuffer<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">-&gt;<pos:position pos:line="57" pos:column="52"/></operator><name pos:line="57" pos:column="49">buf<pos:position pos:line="57" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="54">receivedData<pos:position pos:line="57" pos:column="66"/></name><operator pos:line="57" pos:column="66">.<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="67">data<pos:position pos:line="57" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="73">receivedData<pos:position pos:line="57" pos:column="85"/></name><operator pos:line="57" pos:column="85">.<pos:position pos:line="57" pos:column="86"/></operator><name pos:line="57" pos:column="86">length<pos:position pos:line="57" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="94"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="60" pos:column="13">esiStream<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">-&gt;<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="24">localbuffer<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">len<pos:position pos:line="60" pos:column="40"/></name></name> <operator pos:line="60" pos:column="41">=<pos:position pos:line="60" pos:column="42"/></operator> <name><name pos:line="60" pos:column="43">receivedData<pos:position pos:line="60" pos:column="55"/></name><operator pos:line="60" pos:column="55">.<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="56">length<pos:position pos:line="60" pos:column="62"/></name></name></expr>;<pos:position pos:line="60" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then> <else pos:line="61" pos:column="11">else <block pos:line="61" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">assert<pos:position pos:line="62" pos:column="19"/></name> <argument_list pos:line="62" pos:column="20">(<argument><expr><call><name><name pos:line="62" pos:column="21">esiStream<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">buffer<pos:position pos:line="62" pos:column="38"/></name><operator pos:line="62" pos:column="38">.<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">getRaw<pos:position pos:line="62" pos:column="45"/></name></name><argument_list pos:line="62" pos:column="45">()<pos:position pos:line="62" pos:column="47"/></argument_list></call> <operator pos:line="62" pos:column="48">!=<pos:position pos:line="62" pos:column="50"/></operator> <name pos:line="62" pos:column="51">NULL<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">esiStream<pos:position pos:line="63" pos:column="22"/></name><operator pos:line="63" pos:column="22">-&gt;<pos:position pos:line="63" pos:column="27"/></operator><name pos:line="63" pos:column="24">buffer<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">len<pos:position pos:line="63" pos:column="35"/></name></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <name><name pos:line="63" pos:column="38">receivedData<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">.<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">length<pos:position pos:line="63" pos:column="57"/></name></name></expr>;<pos:position pos:line="63" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></else></if>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="67" pos:column="5">/* EOF / Read error /  aborted entry */</comment>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name pos:line="68" pos:column="9">rep<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">==<pos:position pos:line="68" pos:column="15"/></operator> <name pos:line="68" pos:column="16">NULL<pos:position pos:line="68" pos:column="20"/></name> <operator pos:line="68" pos:column="21">&amp;&amp;<pos:position pos:line="68" pos:column="31"/></operator> <name><name pos:line="68" pos:column="24">receivedData<pos:position pos:line="68" pos:column="36"/></name><operator pos:line="68" pos:column="36">.<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="37">data<pos:position pos:line="68" pos:column="41"/></name></name> <operator pos:line="68" pos:column="42">==<pos:position pos:line="68" pos:column="44"/></operator> <name pos:line="68" pos:column="45">NULL<pos:position pos:line="68" pos:column="49"/></name> <operator pos:line="68" pos:column="50">&amp;&amp;<pos:position pos:line="68" pos:column="60"/></operator> <name><name pos:line="68" pos:column="53">receivedData<pos:position pos:line="68" pos:column="65"/></name><operator pos:line="68" pos:column="65">.<pos:position pos:line="68" pos:column="66"/></operator><name pos:line="68" pos:column="66">length<pos:position pos:line="68" pos:column="72"/></name></name> <operator pos:line="68" pos:column="73">==<pos:position pos:line="68" pos:column="75"/></operator> <literal type="number" pos:line="68" pos:column="76">0<pos:position pos:line="68" pos:column="77"/></literal></expr>)<pos:position pos:line="68" pos:column="78"/></condition><then pos:line="68" pos:column="78"> <block pos:line="68" pos:column="79">{
        <comment type="block" pos:line="69" pos:column="9">/* TODO: get stream status to test the entry for aborts */</comment>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">debugs<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="number" pos:line="70" pos:column="16">86<pos:position pos:line="70" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="20">5<pos:position pos:line="70" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="23">HERE<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">&lt;&lt;<pos:position pos:line="70" pos:column="36"/></operator> <literal type="string" pos:line="70" pos:column="31">"Finished reading upstream data in subrequest"<pos:position pos:line="70" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">esiStream<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">include<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">-&gt;<pos:position pos:line="71" pos:column="32"/></operator><name pos:line="71" pos:column="29">subRequestDone<pos:position pos:line="71" pos:column="43"/></name></name> <argument_list pos:line="71" pos:column="44">(<argument><expr><name pos:line="71" pos:column="45">esiStream<pos:position pos:line="71" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="71" pos:column="56">true<pos:position pos:line="71" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">esiStream<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">finished<pos:position pos:line="72" pos:column="28"/></name></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <literal type="number" pos:line="72" pos:column="31">1<pos:position pos:line="72" pos:column="32"/></literal></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">httpRequestFree<pos:position pos:line="73" pos:column="24"/></name> <argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">http<pos:position pos:line="73" pos:column="30"/></name></expr></argument>)<pos:position pos:line="73" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
        <return pos:line="74" pos:column="9">return;<pos:position pos:line="74" pos:column="16"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="77" pos:column="5">/* after the write to the user occurs, (ie here, or in a callback)
     * we call */</comment>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><call><name pos:line="79" pos:column="9">clientHttpRequestStatus<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><operator pos:line="79" pos:column="33">-<pos:position pos:line="79" pos:column="34"/></operator><literal type="number" pos:line="79" pos:column="34">1<pos:position pos:line="79" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="37">http<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="43"/></condition><then pos:line="79" pos:column="43"> <block pos:line="79" pos:column="44">{
        <comment type="block" pos:line="80" pos:column="9">/* TODO: Does thisNode if block leak htto ? */</comment>
        <comment type="block" pos:line="81" pos:column="9">/* XXX when reviewing ESI this is the first place to look */</comment>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">node<pos:position pos:line="82" pos:column="13"/></name><operator pos:line="82" pos:column="13">-&gt;<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="15">data<pos:position pos:line="82" pos:column="19"/></name></name> <operator pos:line="82" pos:column="20">=<pos:position pos:line="82" pos:column="21"/></operator> <name pos:line="82" pos:column="22">NULL<pos:position pos:line="82" pos:column="26"/></name></expr>;<pos:position pos:line="82" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="83" pos:column="9">esiStream<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">-&gt;<pos:position pos:line="83" pos:column="23"/></operator><name pos:line="83" pos:column="20">finished<pos:position pos:line="83" pos:column="28"/></name></name> <operator pos:line="83" pos:column="29">=<pos:position pos:line="83" pos:column="30"/></operator> <literal type="number" pos:line="83" pos:column="31">1<pos:position pos:line="83" pos:column="32"/></literal></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="84" pos:column="9">esiStream<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">-&gt;<pos:position pos:line="84" pos:column="23"/></operator><name pos:line="84" pos:column="20">include<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">-&gt;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="29">includeFail<pos:position pos:line="84" pos:column="40"/></name></name> <argument_list pos:line="84" pos:column="41">(<argument><expr><name pos:line="84" pos:column="42">esiStream<pos:position pos:line="84" pos:column="51"/></name></expr></argument>)<pos:position pos:line="84" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="53"/></expr_stmt>
        <return pos:line="85" pos:column="9">return;<pos:position pos:line="85" pos:column="16"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if><empty_stmt pos:line="86" pos:column="6">;<pos:position pos:line="86" pos:column="7"/></empty_stmt>

    <switch pos:line="88" pos:column="5">switch <condition pos:line="88" pos:column="12">(<expr><call><name pos:line="88" pos:column="13">clientStreamStatus<pos:position pos:line="88" pos:column="31"/></name> <argument_list pos:line="88" pos:column="32">(<argument><expr><name pos:line="88" pos:column="33">node<pos:position pos:line="88" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">http<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="45"/></condition> <block pos:line="88" pos:column="46">{

    <case pos:line="90" pos:column="5">case <expr><name pos:line="90" pos:column="10">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="90" pos:column="35"/></name></expr>:<pos:position pos:line="90" pos:column="36"/></case> <comment type="block" pos:line="90" pos:column="37">/* fallthru ok */</comment>

    <case pos:line="92" pos:column="5">case <expr><name pos:line="92" pos:column="10">STREAM_COMPLETE<pos:position pos:line="92" pos:column="25"/></name></expr>:<pos:position pos:line="92" pos:column="26"/></case> <comment type="block" pos:line="92" pos:column="27">/* ok */</comment>
        <expr_stmt><expr><call><name pos:line="93" pos:column="9">debugs<pos:position pos:line="93" pos:column="15"/></name><argument_list pos:line="93" pos:column="15">(<argument><expr><literal type="number" pos:line="93" pos:column="16">86<pos:position pos:line="93" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="93" pos:column="20">3<pos:position pos:line="93" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="23">"ESI subrequest finished OK"<pos:position pos:line="93" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="94" pos:column="9">esiStream<pos:position pos:line="94" pos:column="18"/></name><operator pos:line="94" pos:column="18">-&gt;<pos:position pos:line="94" pos:column="23"/></operator><name pos:line="94" pos:column="20">include<pos:position pos:line="94" pos:column="27"/></name><operator pos:line="94" pos:column="27">-&gt;<pos:position pos:line="94" pos:column="32"/></operator><name pos:line="94" pos:column="29">subRequestDone<pos:position pos:line="94" pos:column="43"/></name></name> <argument_list pos:line="94" pos:column="44">(<argument><expr><name pos:line="94" pos:column="45">esiStream<pos:position pos:line="94" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="94" pos:column="56">true<pos:position pos:line="94" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="95" pos:column="9">esiStream<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">-&gt;<pos:position pos:line="95" pos:column="23"/></operator><name pos:line="95" pos:column="20">finished<pos:position pos:line="95" pos:column="28"/></name></name> <operator pos:line="95" pos:column="29">=<pos:position pos:line="95" pos:column="30"/></operator> <literal type="number" pos:line="95" pos:column="31">1<pos:position pos:line="95" pos:column="32"/></literal></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">httpRequestFree<pos:position pos:line="96" pos:column="24"/></name> <argument_list pos:line="96" pos:column="25">(<argument><expr><name pos:line="96" pos:column="26">http<pos:position pos:line="96" pos:column="30"/></name></expr></argument>)<pos:position pos:line="96" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="32"/></expr_stmt>
        <return pos:line="97" pos:column="9">return;<pos:position pos:line="97" pos:column="16"/></return>

    <case pos:line="99" pos:column="5">case <expr><name pos:line="99" pos:column="10">STREAM_FAILED<pos:position pos:line="99" pos:column="23"/></name></expr>:<pos:position pos:line="99" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="100" pos:column="9">debugs<pos:position pos:line="100" pos:column="15"/></name><argument_list pos:line="100" pos:column="15">(<argument><expr><literal type="number" pos:line="100" pos:column="16">86<pos:position pos:line="100" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="20">DBG_IMPORTANT<pos:position pos:line="100" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="35">"ESI subrequest failed transfer"<pos:position pos:line="100" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="101" pos:column="9">esiStream<pos:position pos:line="101" pos:column="18"/></name><operator pos:line="101" pos:column="18">-&gt;<pos:position pos:line="101" pos:column="23"/></operator><name pos:line="101" pos:column="20">include<pos:position pos:line="101" pos:column="27"/></name><operator pos:line="101" pos:column="27">-&gt;<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="29">includeFail<pos:position pos:line="101" pos:column="40"/></name></name> <argument_list pos:line="101" pos:column="41">(<argument><expr><name pos:line="101" pos:column="42">esiStream<pos:position pos:line="101" pos:column="51"/></name></expr></argument>)<pos:position pos:line="101" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="102" pos:column="9">esiStream<pos:position pos:line="102" pos:column="18"/></name><operator pos:line="102" pos:column="18">-&gt;<pos:position pos:line="102" pos:column="23"/></operator><name pos:line="102" pos:column="20">finished<pos:position pos:line="102" pos:column="28"/></name></name> <operator pos:line="102" pos:column="29">=<pos:position pos:line="102" pos:column="30"/></operator> <literal type="number" pos:line="102" pos:column="31">1<pos:position pos:line="102" pos:column="32"/></literal></expr>;<pos:position pos:line="102" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="103" pos:column="9">httpRequestFree<pos:position pos:line="103" pos:column="24"/></name> <argument_list pos:line="103" pos:column="25">(<argument><expr><name pos:line="103" pos:column="26">http<pos:position pos:line="103" pos:column="30"/></name></expr></argument>)<pos:position pos:line="103" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
        <return pos:line="104" pos:column="9">return;<pos:position pos:line="104" pos:column="16"/></return>

    <case pos:line="106" pos:column="5">case <expr><name pos:line="106" pos:column="10">STREAM_NONE<pos:position pos:line="106" pos:column="21"/></name></expr>:<pos:position pos:line="106" pos:column="22"/></case> <block pos:line="106" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="107" pos:column="9">StoreIOBuffer<pos:position pos:line="107" pos:column="22"/></name></type> <name pos:line="107" pos:column="23">tempBuffer<pos:position pos:line="107" pos:column="33"/></name></decl>;<pos:position pos:line="107" pos:column="34"/></decl_stmt>

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">!<pos:position pos:line="109" pos:column="14"/></operator><call><name><name pos:line="109" pos:column="14">esiStream<pos:position pos:line="109" pos:column="23"/></name><operator pos:line="109" pos:column="23">-&gt;<pos:position pos:line="109" pos:column="28"/></operator><name pos:line="109" pos:column="25">buffer<pos:position pos:line="109" pos:column="31"/></name><operator pos:line="109" pos:column="31">.<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="32">getRaw<pos:position pos:line="109" pos:column="38"/></name></name><argument_list pos:line="109" pos:column="38">()<pos:position pos:line="109" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="41"/></condition><then pos:line="109" pos:column="41"> <block pos:line="109" pos:column="42">{
            <expr_stmt><expr><name><name pos:line="110" pos:column="13">esiStream<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">-&gt;<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="24">buffer<pos:position pos:line="110" pos:column="30"/></name></name> <operator pos:line="110" pos:column="31">=<pos:position pos:line="110" pos:column="32"/></operator> <name><name pos:line="110" pos:column="33">esiStream<pos:position pos:line="110" pos:column="42"/></name><operator pos:line="110" pos:column="42">-&gt;<pos:position pos:line="110" pos:column="47"/></operator><name pos:line="110" pos:column="44">localbuffer<pos:position pos:line="110" pos:column="55"/></name></name></expr>;<pos:position pos:line="110" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="113" pos:column="9">esiStream<pos:position pos:line="113" pos:column="18"/></name><operator pos:line="113" pos:column="18">-&gt;<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="20">buffer<pos:position pos:line="113" pos:column="26"/></name></name> <operator pos:line="113" pos:column="27">=<pos:position pos:line="113" pos:column="28"/></operator> <call><name><name pos:line="113" pos:column="29">esiStream<pos:position pos:line="113" pos:column="38"/></name><operator pos:line="113" pos:column="38">-&gt;<pos:position pos:line="113" pos:column="43"/></operator><name pos:line="113" pos:column="40">buffer<pos:position pos:line="113" pos:column="46"/></name><operator pos:line="113" pos:column="46">-&gt;<pos:position pos:line="113" pos:column="51"/></operator><name pos:line="113" pos:column="48">tail<pos:position pos:line="113" pos:column="52"/></name></name><argument_list pos:line="113" pos:column="52">()<pos:position pos:line="113" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="55"/></expr_stmt>

        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name><name pos:line="115" pos:column="13">esiStream<pos:position pos:line="115" pos:column="22"/></name><operator pos:line="115" pos:column="22">-&gt;<pos:position pos:line="115" pos:column="27"/></operator><name pos:line="115" pos:column="24">buffer<pos:position pos:line="115" pos:column="30"/></name><operator pos:line="115" pos:column="30">-&gt;<pos:position pos:line="115" pos:column="35"/></operator><name pos:line="115" pos:column="32">len<pos:position pos:line="115" pos:column="35"/></name></name></expr>)<pos:position pos:line="115" pos:column="36"/></condition><then pos:line="115" pos:column="36"> <block pos:line="115" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="116" pos:column="13">esiStream<pos:position pos:line="116" pos:column="22"/></name><operator pos:line="116" pos:column="22">-&gt;<pos:position pos:line="116" pos:column="27"/></operator><name pos:line="116" pos:column="24">buffer<pos:position pos:line="116" pos:column="30"/></name><operator pos:line="116" pos:column="30">-&gt;<pos:position pos:line="116" pos:column="35"/></operator><name pos:line="116" pos:column="32">next<pos:position pos:line="116" pos:column="36"/></name></name> <operator pos:line="116" pos:column="37">=<pos:position pos:line="116" pos:column="38"/></operator> <operator pos:line="116" pos:column="39">new<pos:position pos:line="116" pos:column="42"/></operator> <name pos:line="116" pos:column="43">ESISegment<pos:position pos:line="116" pos:column="53"/></name></expr>;<pos:position pos:line="116" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="117" pos:column="13">esiStream<pos:position pos:line="117" pos:column="22"/></name><operator pos:line="117" pos:column="22">-&gt;<pos:position pos:line="117" pos:column="27"/></operator><name pos:line="117" pos:column="24">buffer<pos:position pos:line="117" pos:column="30"/></name></name> <operator pos:line="117" pos:column="31">=<pos:position pos:line="117" pos:column="32"/></operator> <name><name pos:line="117" pos:column="33">esiStream<pos:position pos:line="117" pos:column="42"/></name><operator pos:line="117" pos:column="42">-&gt;<pos:position pos:line="117" pos:column="47"/></operator><name pos:line="117" pos:column="44">buffer<pos:position pos:line="117" pos:column="50"/></name><operator pos:line="117" pos:column="50">-&gt;<pos:position pos:line="117" pos:column="55"/></operator><name pos:line="117" pos:column="52">next<pos:position pos:line="117" pos:column="56"/></name></name></expr>;<pos:position pos:line="117" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="120" pos:column="9">tempBuffer<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">.<pos:position pos:line="120" pos:column="20"/></operator><name pos:line="120" pos:column="20">offset<pos:position pos:line="120" pos:column="26"/></name></name> <operator pos:line="120" pos:column="27">=<pos:position pos:line="120" pos:column="28"/></operator> <name><name pos:line="120" pos:column="29">http<pos:position pos:line="120" pos:column="33"/></name><operator pos:line="120" pos:column="33">-&gt;<pos:position pos:line="120" pos:column="38"/></operator><name pos:line="120" pos:column="35">out<pos:position pos:line="120" pos:column="38"/></name><operator pos:line="120" pos:column="38">.<pos:position pos:line="120" pos:column="39"/></operator><name pos:line="120" pos:column="39">offset<pos:position pos:line="120" pos:column="45"/></name></name></expr>;<pos:position pos:line="120" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="121" pos:column="9">tempBuffer<pos:position pos:line="121" pos:column="19"/></name><operator pos:line="121" pos:column="19">.<pos:position pos:line="121" pos:column="20"/></operator><name pos:line="121" pos:column="20">length<pos:position pos:line="121" pos:column="26"/></name></name> <operator pos:line="121" pos:column="27">=<pos:position pos:line="121" pos:column="28"/></operator> <sizeof pos:line="121" pos:column="29">sizeof <argument_list pos:line="121" pos:column="36">(<argument><expr><name><name pos:line="121" pos:column="37">esiStream<pos:position pos:line="121" pos:column="46"/></name><operator pos:line="121" pos:column="46">-&gt;<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="48">buffer<pos:position pos:line="121" pos:column="54"/></name><operator pos:line="121" pos:column="54">-&gt;<pos:position pos:line="121" pos:column="59"/></operator><name pos:line="121" pos:column="56">buf<pos:position pos:line="121" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="60"/></argument_list></sizeof></expr>;<pos:position pos:line="121" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="122" pos:column="9">tempBuffer<pos:position pos:line="122" pos:column="19"/></name><operator pos:line="122" pos:column="19">.<pos:position pos:line="122" pos:column="20"/></operator><name pos:line="122" pos:column="20">data<pos:position pos:line="122" pos:column="24"/></name></name> <operator pos:line="122" pos:column="25">=<pos:position pos:line="122" pos:column="26"/></operator> <name><name pos:line="122" pos:column="27">esiStream<pos:position pos:line="122" pos:column="36"/></name><operator pos:line="122" pos:column="36">-&gt;<pos:position pos:line="122" pos:column="41"/></operator><name pos:line="122" pos:column="38">buffer<pos:position pos:line="122" pos:column="44"/></name><operator pos:line="122" pos:column="44">-&gt;<pos:position pos:line="122" pos:column="49"/></operator><name pos:line="122" pos:column="46">buf<pos:position pos:line="122" pos:column="49"/></name></name></expr>;<pos:position pos:line="122" pos:column="50"/></expr_stmt>
        <comment type="block" pos:line="123" pos:column="9">/* now just read into 'buffer' */</comment>
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">clientStreamRead<pos:position pos:line="124" pos:column="25"/></name> <argument_list pos:line="124" pos:column="26">(<argument><expr><name pos:line="124" pos:column="27">node<pos:position pos:line="124" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="33">http<pos:position pos:line="124" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="39">tempBuffer<pos:position pos:line="124" pos:column="49"/></name></expr></argument>)<pos:position pos:line="124" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="125" pos:column="9">debugs<pos:position pos:line="125" pos:column="15"/></name><argument_list pos:line="125" pos:column="15">(<argument><expr><literal type="number" pos:line="125" pos:column="16">86<pos:position pos:line="125" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="20">5<pos:position pos:line="125" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="23">HERE<pos:position pos:line="125" pos:column="27"/></name> <operator pos:line="125" pos:column="28">&lt;&lt;<pos:position pos:line="125" pos:column="36"/></operator> <literal type="string" pos:line="125" pos:column="31">"Requested more data for ESI subrequest"<pos:position pos:line="125" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="126" pos:column="6"/></block>

    <break pos:line="128" pos:column="5">break;<pos:position pos:line="128" pos:column="11"/></break>

    <default pos:line="130" pos:column="5">default:<pos:position pos:line="130" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="131" pos:column="9">fatal<pos:position pos:line="131" pos:column="14"/></name> <argument_list pos:line="131" pos:column="15">(<argument><expr><literal type="string" pos:line="131" pos:column="16">"Hit unreachable code in esiBufferRecipient\n"<pos:position pos:line="131" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="132" pos:column="6"/></block></switch>

}<pos:position pos:line="134" pos:column="2"/></block></function></unit>

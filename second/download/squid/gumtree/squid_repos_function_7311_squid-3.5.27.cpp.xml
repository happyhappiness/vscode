<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7311_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">base64_encode_str<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">result<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">result_max_size<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">data<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">int<pos:position pos:line="2" pos:column="75"/></name></type> <name pos:line="2" pos:column="76">data_size<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">result_max_size<pos:position pos:line="4" pos:column="24"/></name> <operator pos:line="4" pos:column="25">&lt;<pos:position pos:line="4" pos:column="29"/></operator> <literal type="number" pos:line="4" pos:column="27">1<pos:position pos:line="4" pos:column="28"/></literal></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">used<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><call><name pos:line="7" pos:column="16">base64_encode<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">result<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">result_max_size<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">data<pos:position pos:line="7" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="61">data_size<pos:position pos:line="7" pos:column="70"/></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="72"/></decl_stmt>
    <comment type="block" pos:line="8" pos:column="5">/* terminate */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">used<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&gt;=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="17">result_max_size<pos:position pos:line="9" pos:column="32"/></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">result<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">result_max_size<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">-<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">1<pos:position pos:line="10" pos:column="35"/></literal></expr>]<pos:position pos:line="10" pos:column="36"/></index></name> <operator pos:line="10" pos:column="37">=<pos:position pos:line="10" pos:column="38"/></operator> <literal type="char" pos:line="10" pos:column="39">'\0'<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">result_max_size<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><name pos:line="13" pos:column="16">used<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">++<pos:position pos:line="13" pos:column="22"/></operator></expr>]<pos:position pos:line="13" pos:column="23"/></index></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="char" pos:line="13" pos:column="26">'\0'<pos:position pos:line="13" pos:column="30"/></literal></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">used<pos:position pos:line="15" pos:column="16"/></name></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

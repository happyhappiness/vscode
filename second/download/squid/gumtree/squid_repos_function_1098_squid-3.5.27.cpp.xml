<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1098_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_http_header_access<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">HeaderManglers<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier><modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">pm<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">t<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name><name pos:line="6" pos:column="14">ConfigParser<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">::<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">NextToken<pos:position pos:line="6" pos:column="37"/></name></name><argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator> <operator pos:line="6" pos:column="41">==<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">NULL<pos:position pos:line="6" pos:column="48"/></name></expr>)<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <block pos:line="6" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">DBG_CRITICAL<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">""<pos:position pos:line="7" pos:column="35"/></literal> <operator pos:line="7" pos:column="36">&lt;&lt;<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="39">cfg_filename<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">&lt;&lt;<pos:position pos:line="7" pos:column="60"/></operator> <literal type="string" pos:line="7" pos:column="55">" line "<pos:position pos:line="7" pos:column="63"/></literal> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator> <name pos:line="7" pos:column="67">config_lineno<pos:position pos:line="7" pos:column="80"/></name> <operator pos:line="7" pos:column="81">&lt;&lt;<pos:position pos:line="7" pos:column="89"/></operator> <literal type="string" pos:line="7" pos:column="84">": "<pos:position pos:line="7" pos:column="88"/></literal> <operator pos:line="7" pos:column="89">&lt;&lt;<pos:position pos:line="7" pos:column="97"/></operator> <name pos:line="7" pos:column="92">config_input_line<pos:position pos:line="7" pos:column="109"/></name></expr></argument>)<pos:position pos:line="7" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="111"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">3<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">DBG_CRITICAL<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="33">"parse_http_header_access: missing header name."<pos:position pos:line="8" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="83"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><operator pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">pm<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">pm<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">new<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">HeaderManglers<pos:position pos:line="13" pos:column="33"/></name></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt></block></then></if>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">HeaderManglers<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">manglers<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">pm<pos:position pos:line="14" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">headerMangler<pos:position pos:line="15" pos:column="18"/></name> <modifier pos:line="15" pos:column="19">*<pos:position pos:line="15" pos:column="20"/></modifier></type><name pos:line="15" pos:column="20">mangler<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><call><name><name pos:line="15" pos:column="30">manglers<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">track<pos:position pos:line="15" pos:column="45"/></name></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">t<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="49"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">mangler<pos:position pos:line="16" pos:column="19"/></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">std<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">::<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">string<pos:position pos:line="18" pos:column="16"/></name></name></type> <name pos:line="18" pos:column="17">directive<pos:position pos:line="18" pos:column="26"/></name> <init pos:line="18" pos:column="27">= <expr><literal type="string" pos:line="18" pos:column="29">"http_header_access "<pos:position pos:line="18" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">directive<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">+=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">t<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">aclParseAccessLine<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><call><name><name pos:line="20" pos:column="24">directive<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">c_str<pos:position pos:line="20" pos:column="39"/></name></name><argument_list pos:line="20" pos:column="39">()<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="43">LegacyParser<pos:position pos:line="20" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="57">&amp;<pos:position pos:line="20" pos:column="62"/></operator><name><name pos:line="20" pos:column="58">mangler<pos:position pos:line="20" pos:column="65"/></name><operator pos:line="20" pos:column="65">-&gt;<pos:position pos:line="20" pos:column="70"/></operator><name pos:line="20" pos:column="67">access_list<pos:position pos:line="20" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="80"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

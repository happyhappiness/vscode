<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6151_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">squidaio_queue_request<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">squidaio_request_t<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="45">request<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">high_start<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">43<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">9<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"squidaio_queue_request: "<pos:position pos:line="5" pos:column="45"/></literal> <operator pos:line="5" pos:column="46">&lt;&lt;<pos:position pos:line="5" pos:column="54"/></operator> <name pos:line="5" pos:column="49">request<pos:position pos:line="5" pos:column="56"/></name> <operator pos:line="5" pos:column="57">&lt;&lt;<pos:position pos:line="5" pos:column="65"/></operator> <literal type="string" pos:line="5" pos:column="60">" type="<pos:position pos:line="5" pos:column="68"/></literal> <operator pos:line="5" pos:column="69">&lt;&lt;<pos:position pos:line="5" pos:column="77"/></operator> <name><name pos:line="5" pos:column="72">request<pos:position pos:line="5" pos:column="79"/></name><operator pos:line="5" pos:column="79">-&gt;<pos:position pos:line="5" pos:column="84"/></operator><name pos:line="5" pos:column="81">request_type<pos:position pos:line="5" pos:column="93"/></name></name> <operator pos:line="5" pos:column="94">&lt;&lt;<pos:position pos:line="5" pos:column="102"/></operator> <literal type="string" pos:line="5" pos:column="97">" result="<pos:position pos:line="5" pos:column="107"/></literal> <operator pos:line="5" pos:column="108">&lt;&lt;<pos:position pos:line="5" pos:column="116"/></operator> <name><name pos:line="5" pos:column="111">request<pos:position pos:line="5" pos:column="118"/></name><operator pos:line="5" pos:column="118">-&gt;<pos:position pos:line="5" pos:column="123"/></operator><name pos:line="5" pos:column="120">resultp<pos:position pos:line="5" pos:column="127"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="129"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* Mark it as not executed (failing result, no error) */</comment>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">request<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">ret<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <operator pos:line="7" pos:column="20">-<pos:position pos:line="7" pos:column="21"/></operator><literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">request<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">err<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* Internal housekeeping */</comment>
    <expr_stmt><expr><name pos:line="10" pos:column="5">request_queue_len<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">+=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">request<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">resultp<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">_data<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">request<pos:position pos:line="11" pos:column="38"/></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* Play some tricks with the request_queue2 queue */</comment>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">request<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">next<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">NULL<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">WaitForSingleObject<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name><name pos:line="15" pos:column="29">request_queue<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">.<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">mutex<pos:position pos:line="15" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="50">0<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call> <operator pos:line="15" pos:column="53">==<pos:position pos:line="15" pos:column="55"/></operator> <name pos:line="15" pos:column="56">WAIT_OBJECT_0<pos:position pos:line="15" pos:column="69"/></name></expr>)<pos:position pos:line="15" pos:column="70"/></condition><then pos:line="15" pos:column="70"> <block pos:line="15" pos:column="71">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">request_queue2<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">.<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="28">head<pos:position pos:line="16" pos:column="32"/></name></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33"> <block pos:line="16" pos:column="34">{
            <comment type="block" pos:line="17" pos:column="13">/* Grab blocked requests */</comment>
            <expr_stmt><expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">request_queue<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">tailp<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">=<pos:position pos:line="18" pos:column="35"/></operator> <name><name pos:line="18" pos:column="36">request_queue2<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">.<pos:position pos:line="18" pos:column="51"/></operator><name pos:line="18" pos:column="51">head<pos:position pos:line="18" pos:column="55"/></name></name></expr>;<pos:position pos:line="18" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="19" pos:column="13">request_queue<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">tailp<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <name><name pos:line="19" pos:column="35">request_queue2<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">.<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">tailp<pos:position pos:line="19" pos:column="55"/></name></name></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="22" pos:column="9">/* Enqueue request */</comment>
        <expr_stmt><expr><operator pos:line="23" pos:column="9">*<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">request_queue<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">.<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">tailp<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">=<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="32">request<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="25" pos:column="9">request_queue<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">tailp<pos:position pos:line="25" pos:column="28"/></name></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <operator pos:line="25" pos:column="31">&amp;<pos:position pos:line="25" pos:column="36"/></operator><name><name pos:line="25" pos:column="32">request<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">next<pos:position pos:line="25" pos:column="45"/></name></name></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">!<pos:position pos:line="27" pos:column="14"/></operator><call><name pos:line="27" pos:column="14">SetEvent<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name><name pos:line="27" pos:column="23">request_queue<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">.<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="37">cond<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="13">fatal<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><literal type="string" pos:line="28" pos:column="19">"Couldn't push queue"<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt></block></then></if>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">ReleaseMutex<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name><name pos:line="30" pos:column="27">request_queue<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">.<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">mutex<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="48"/></condition><then pos:line="30" pos:column="48"> <block pos:line="30" pos:column="49">{
            <comment type="block" pos:line="31" pos:column="13">/* unexpected error */</comment>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">fatal<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><literal type="string" pos:line="32" pos:column="19">"Couldn't push queue"<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="35" pos:column="9">Sleep<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><literal type="number" pos:line="35" pos:column="15">0<pos:position pos:line="35" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">request_queue2<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">head<pos:position pos:line="37" pos:column="32"/></name></name></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33"> <block pos:line="37" pos:column="34">{
            <comment type="block" pos:line="38" pos:column="13">/* Clear queue of blocked requests */</comment>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">request_queue2<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">.<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">head<pos:position pos:line="39" pos:column="32"/></name></name> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <name pos:line="39" pos:column="35">NULL<pos:position pos:line="39" pos:column="39"/></name></expr>;<pos:position pos:line="39" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">request_queue2<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">tailp<pos:position pos:line="40" pos:column="33"/></name></name> <operator pos:line="40" pos:column="34">=<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">&amp;<pos:position pos:line="40" pos:column="41"/></operator><name><name pos:line="40" pos:column="37">request_queue2<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">.<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="52">head<pos:position pos:line="40" pos:column="56"/></name></name></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then> <else pos:line="42" pos:column="7">else <block pos:line="42" pos:column="12">{
        <comment type="block" pos:line="43" pos:column="9">/* Oops, the request queue is blocked, use request_queue2 */</comment>
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name><name pos:line="44" pos:column="10">request_queue2<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">.<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">tailp<pos:position pos:line="44" pos:column="30"/></name></name> <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">request<pos:position pos:line="44" pos:column="40"/></name></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">request_queue2<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">tailp<pos:position pos:line="45" pos:column="29"/></name></name> <operator pos:line="45" pos:column="30">=<pos:position pos:line="45" pos:column="31"/></operator> <operator pos:line="45" pos:column="32">&amp;<pos:position pos:line="45" pos:column="37"/></operator><name><name pos:line="45" pos:column="33">request<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">next<pos:position pos:line="45" pos:column="46"/></name></name></expr>;<pos:position pos:line="45" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name><name pos:line="48" pos:column="9">request_queue2<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">head<pos:position pos:line="48" pos:column="28"/></name></name></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29"> <block pos:line="48" pos:column="30">{
        <decl_stmt><decl><specifier pos:line="49" pos:column="9">static<pos:position pos:line="49" pos:column="15"/></specifier> <type><name pos:line="49" pos:column="16">uint64_t<pos:position pos:line="49" pos:column="24"/></name></type> <name pos:line="49" pos:column="25">filter<pos:position pos:line="49" pos:column="31"/></name> <init pos:line="49" pos:column="32">= <expr><literal type="number" pos:line="49" pos:column="34">0<pos:position pos:line="49" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="49" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><specifier pos:line="50" pos:column="9">static<pos:position pos:line="50" pos:column="15"/></specifier> <type><name pos:line="50" pos:column="16">uint64_t<pos:position pos:line="50" pos:column="24"/></name></type> <name pos:line="50" pos:column="25">filter_limit<pos:position pos:line="50" pos:column="37"/></name> <init pos:line="50" pos:column="38">= <expr><literal type="number" pos:line="50" pos:column="40">8196<pos:position pos:line="50" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="45"/></decl_stmt>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">++<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="15">filter<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">&gt;=<pos:position pos:line="52" pos:column="27"/></operator> <name pos:line="52" pos:column="25">filter_limit<pos:position pos:line="52" pos:column="37"/></name></expr>)<pos:position pos:line="52" pos:column="38"/></condition><then pos:line="52" pos:column="38"> <block pos:line="52" pos:column="39">{
            <expr_stmt><expr><name pos:line="53" pos:column="13">filter_limit<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">+=<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">filter<pos:position pos:line="53" pos:column="35"/></name></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">filter<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="number" pos:line="54" pos:column="22">0<pos:position pos:line="54" pos:column="23"/></literal></expr>;<pos:position pos:line="54" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">debugs<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="number" pos:line="55" pos:column="20">43<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">DBG_IMPORTANT<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"squidaio_queue_request: WARNING - Queue congestion (growing to "<pos:position pos:line="55" pos:column="104"/></literal> <operator pos:line="55" pos:column="105">&lt;&lt;<pos:position pos:line="55" pos:column="113"/></operator> <name pos:line="55" pos:column="108">filter_limit<pos:position pos:line="55" pos:column="120"/></name> <operator pos:line="55" pos:column="121">&lt;&lt;<pos:position pos:line="55" pos:column="129"/></operator> <literal type="string" pos:line="55" pos:column="124">")"<pos:position pos:line="55" pos:column="127"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="128"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="129"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="59" pos:column="5">/* Warn if out of threads */</comment>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">request_queue_len<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">&gt;<pos:position pos:line="60" pos:column="31"/></operator> <name pos:line="60" pos:column="29">MAGIC1<pos:position pos:line="60" pos:column="35"/></name></expr>)<pos:position pos:line="60" pos:column="36"/></condition><then pos:line="60" pos:column="36"> <block pos:line="60" pos:column="37">{
        <decl_stmt><decl><specifier pos:line="61" pos:column="9">static<pos:position pos:line="61" pos:column="15"/></specifier> <type><name pos:line="61" pos:column="16">int<pos:position pos:line="61" pos:column="19"/></name></type> <name pos:line="61" pos:column="20">last_warn<pos:position pos:line="61" pos:column="29"/></name> <init pos:line="61" pos:column="30">= <expr><literal type="number" pos:line="61" pos:column="32">0<pos:position pos:line="61" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="61" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><specifier pos:line="62" pos:column="9">static<pos:position pos:line="62" pos:column="15"/></specifier> <type><name pos:line="62" pos:column="16">int<pos:position pos:line="62" pos:column="19"/></name></type> <name pos:line="62" pos:column="20">queue_high<pos:position pos:line="62" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="62" pos:column="32">queue_low<pos:position pos:line="62" pos:column="41"/></name></decl>;<pos:position pos:line="62" pos:column="42"/></decl_stmt>

        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">high_start<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">==<pos:position pos:line="64" pos:column="26"/></operator> <literal type="number" pos:line="64" pos:column="27">0<pos:position pos:line="64" pos:column="28"/></literal></expr>)<pos:position pos:line="64" pos:column="29"/></condition><then pos:line="64" pos:column="29"> <block pos:line="64" pos:column="30">{
            <expr_stmt><expr><name pos:line="65" pos:column="13">high_start<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <operator pos:line="65" pos:column="26">(<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">int<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">)<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">squid_curtime<pos:position pos:line="65" pos:column="44"/></name></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="66" pos:column="13">queue_high<pos:position pos:line="66" pos:column="23"/></name> <operator pos:line="66" pos:column="24">=<pos:position pos:line="66" pos:column="25"/></operator> <name pos:line="66" pos:column="26">request_queue_len<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="67" pos:column="13">queue_low<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <name pos:line="67" pos:column="25">request_queue_len<pos:position pos:line="67" pos:column="42"/></name></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">request_queue_len<pos:position pos:line="70" pos:column="30"/></name> <operator pos:line="70" pos:column="31">&gt;<pos:position pos:line="70" pos:column="35"/></operator> <name pos:line="70" pos:column="33">queue_high<pos:position pos:line="70" pos:column="43"/></name></expr>)<pos:position pos:line="70" pos:column="44"/></condition><then pos:line="70" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="13">queue_high<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">request_queue_len<pos:position pos:line="71" pos:column="43"/></name></expr>;<pos:position pos:line="71" pos:column="44"/></expr_stmt></block></then></if>

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">request_queue_len<pos:position pos:line="73" pos:column="30"/></name> <operator pos:line="73" pos:column="31">&lt;<pos:position pos:line="73" pos:column="35"/></operator> <name pos:line="73" pos:column="33">queue_low<pos:position pos:line="73" pos:column="42"/></name></expr>)<pos:position pos:line="73" pos:column="43"/></condition><then pos:line="73" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="13">queue_low<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">=<pos:position pos:line="74" pos:column="24"/></operator> <name pos:line="74" pos:column="25">request_queue_len<pos:position pos:line="74" pos:column="42"/></name></expr>;<pos:position pos:line="74" pos:column="43"/></expr_stmt></block></then></if>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">squid_curtime<pos:position pos:line="76" pos:column="26"/></name> <operator pos:line="76" pos:column="27">&gt;=<pos:position pos:line="76" pos:column="32"/></operator> <operator pos:line="76" pos:column="30">(<pos:position pos:line="76" pos:column="31"/></operator><name pos:line="76" pos:column="31">last_warn<pos:position pos:line="76" pos:column="40"/></name> <operator pos:line="76" pos:column="41">+<pos:position pos:line="76" pos:column="42"/></operator> <literal type="number" pos:line="76" pos:column="43">15<pos:position pos:line="76" pos:column="45"/></literal><operator pos:line="76" pos:column="45">)<pos:position pos:line="76" pos:column="46"/></operator> <operator pos:line="76" pos:column="47">&amp;&amp;<pos:position pos:line="76" pos:column="57"/></operator>
                <name pos:line="77" pos:column="17">squid_curtime<pos:position pos:line="77" pos:column="30"/></name> <operator pos:line="77" pos:column="31">&gt;=<pos:position pos:line="77" pos:column="36"/></operator> <operator pos:line="77" pos:column="34">(<pos:position pos:line="77" pos:column="35"/></operator><name pos:line="77" pos:column="35">high_start<pos:position pos:line="77" pos:column="45"/></name> <operator pos:line="77" pos:column="46">+<pos:position pos:line="77" pos:column="47"/></operator> <literal type="number" pos:line="77" pos:column="48">5<pos:position pos:line="77" pos:column="49"/></literal><operator pos:line="77" pos:column="49">)<pos:position pos:line="77" pos:column="50"/></operator></expr>)<pos:position pos:line="77" pos:column="51"/></condition><then pos:line="77" pos:column="51"> <block pos:line="77" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">debugs<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><literal type="number" pos:line="78" pos:column="20">43<pos:position pos:line="78" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="24">DBG_IMPORTANT<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="39">"squidaio_queue_request: WARNING - Disk I/O overloading"<pos:position pos:line="78" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="97"/></expr_stmt>

            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><name pos:line="80" pos:column="17">squid_curtime<pos:position pos:line="80" pos:column="30"/></name> <operator pos:line="80" pos:column="31">&gt;=<pos:position pos:line="80" pos:column="36"/></operator> <operator pos:line="80" pos:column="34">(<pos:position pos:line="80" pos:column="35"/></operator><name pos:line="80" pos:column="35">high_start<pos:position pos:line="80" pos:column="45"/></name> <operator pos:line="80" pos:column="46">+<pos:position pos:line="80" pos:column="47"/></operator> <literal type="number" pos:line="80" pos:column="48">15<pos:position pos:line="80" pos:column="50"/></literal><operator pos:line="80" pos:column="50">)<pos:position pos:line="80" pos:column="51"/></operator></expr>)<pos:position pos:line="80" pos:column="52"/></condition><then pos:line="80" pos:column="52">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="81" pos:column="17">debugs<pos:position pos:line="81" pos:column="23"/></name><argument_list pos:line="81" pos:column="23">(<argument><expr><literal type="number" pos:line="81" pos:column="24">43<pos:position pos:line="81" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="28">DBG_IMPORTANT<pos:position pos:line="81" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="43">"squidaio_queue_request: Queue Length: current="<pos:position pos:line="81" pos:column="91"/></literal> <operator pos:line="81" pos:column="92">&lt;&lt;<pos:position pos:line="81" pos:column="100"/></operator>
                       <name pos:line="82" pos:column="24">request_queue_len<pos:position pos:line="82" pos:column="41"/></name> <operator pos:line="82" pos:column="42">&lt;&lt;<pos:position pos:line="82" pos:column="50"/></operator> <literal type="string" pos:line="82" pos:column="45">", high="<pos:position pos:line="82" pos:column="54"/></literal> <operator pos:line="82" pos:column="55">&lt;&lt;<pos:position pos:line="82" pos:column="63"/></operator> <name pos:line="82" pos:column="58">queue_high<pos:position pos:line="82" pos:column="68"/></name> <operator pos:line="82" pos:column="69">&lt;&lt;<pos:position pos:line="82" pos:column="77"/></operator>
                       <literal type="string" pos:line="83" pos:column="24">", low="<pos:position pos:line="83" pos:column="32"/></literal> <operator pos:line="83" pos:column="33">&lt;&lt;<pos:position pos:line="83" pos:column="41"/></operator> <name pos:line="83" pos:column="36">queue_low<pos:position pos:line="83" pos:column="45"/></name> <operator pos:line="83" pos:column="46">&lt;&lt;<pos:position pos:line="83" pos:column="54"/></operator> <literal type="string" pos:line="83" pos:column="49">", duration="<pos:position pos:line="83" pos:column="62"/></literal> <operator pos:line="83" pos:column="63">&lt;&lt;<pos:position pos:line="83" pos:column="71"/></operator>
                       <call pos:line="84" pos:column="24">(<name pos:line="84" pos:column="25">long<pos:position pos:line="84" pos:column="29"/></name> <name pos:line="84" pos:column="30">int<pos:position pos:line="84" pos:column="33"/></name>) <argument_list pos:line="84" pos:column="35">(<argument><expr><name pos:line="84" pos:column="36">squid_curtime<pos:position pos:line="84" pos:column="49"/></name> <operator pos:line="84" pos:column="50">-<pos:position pos:line="84" pos:column="51"/></operator> <name pos:line="84" pos:column="52">high_start<pos:position pos:line="84" pos:column="62"/></name></expr></argument>)<pos:position pos:line="84" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="65"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="86" pos:column="13">last_warn<pos:position pos:line="86" pos:column="22"/></name> <operator pos:line="86" pos:column="23">=<pos:position pos:line="86" pos:column="24"/></operator> <operator pos:line="86" pos:column="25">(<pos:position pos:line="86" pos:column="26"/></operator><name pos:line="86" pos:column="26">int<pos:position pos:line="86" pos:column="29"/></name><operator pos:line="86" pos:column="29">)<pos:position pos:line="86" pos:column="30"/></operator><name pos:line="86" pos:column="30">squid_curtime<pos:position pos:line="86" pos:column="43"/></name></expr>;<pos:position pos:line="86" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then> <else pos:line="88" pos:column="7">else <block pos:line="88" pos:column="12">{
        <expr_stmt><expr><name pos:line="89" pos:column="9">high_start<pos:position pos:line="89" pos:column="19"/></name> <operator pos:line="89" pos:column="20">=<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="22">0<pos:position pos:line="89" pos:column="23"/></literal></expr>;<pos:position pos:line="89" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="92" pos:column="5">/* Warn if seriously overloaded */</comment>
    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">request_queue_len<pos:position pos:line="93" pos:column="26"/></name> <operator pos:line="93" pos:column="27">&gt;<pos:position pos:line="93" pos:column="31"/></operator> <name pos:line="93" pos:column="29">RIDICULOUS_LENGTH<pos:position pos:line="93" pos:column="46"/></name></expr>)<pos:position pos:line="93" pos:column="47"/></condition><then pos:line="93" pos:column="47"> <block pos:line="93" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">debugs<pos:position pos:line="94" pos:column="15"/></name><argument_list pos:line="94" pos:column="15">(<argument><expr><literal type="number" pos:line="94" pos:column="16">43<pos:position pos:line="94" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="20">DBG_CRITICAL<pos:position pos:line="94" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="34">"squidaio_queue_request: Async request queue growing uncontrollably!"<pos:position pos:line="94" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="105"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">debugs<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><literal type="number" pos:line="95" pos:column="16">43<pos:position pos:line="95" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="20">DBG_CRITICAL<pos:position pos:line="95" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="34">"squidaio_queue_request: Syncing pending I/O operations.. (blocking)"<pos:position pos:line="95" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="105"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="96" pos:column="9">squidaio_sync<pos:position pos:line="96" pos:column="22"/></name><argument_list pos:line="96" pos:column="22">()<pos:position pos:line="96" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">debugs<pos:position pos:line="97" pos:column="15"/></name><argument_list pos:line="97" pos:column="15">(<argument><expr><literal type="number" pos:line="97" pos:column="16">43<pos:position pos:line="97" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="20">DBG_CRITICAL<pos:position pos:line="97" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="34">"squidaio_queue_request: Synced"<pos:position pos:line="97" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="98" pos:column="6"/></block></then></if>
}<pos:position pos:line="99" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_312_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">slist_foreach<pos:position pos:line="2" pos:column="14"/></name> <argument_list pos:line="2" pos:column="15">(<argument><expr><name pos:line="2" pos:column="16">SList<pos:position pos:line="2" pos:column="21"/></name> <operator pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">slist<pos:position pos:line="2" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="30">SListCallback<pos:position pos:line="2" pos:column="43"/></name> <operator pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></operator></expr></argument><foreach pos:line="2" pos:column="45">foreach<operator pos:line="2" pos:column="52">,<pos:position pos:line="2" pos:column="53"/></operator> <decl_stmt><decl><type><name pos:line="2" pos:column="54">void<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier><name pos:line="2" pos:column="60">userdata<pos:position pos:line="2" pos:column="68"/></name></type></decl>)
{
  void *result = 0;<pos:position pos:line="4" pos:column="20"/></decl_stmt></foreach></argument_list></decl></decl_stmt>

  <macro><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument pos:line="6" pos:column="11">foreach<pos:position pos:line="6" pos:column="18"/></argument>)<pos:position pos:line="6" pos:column="19"/></argument_list></macro><empty_stmt pos:line="6" pos:column="19">;<pos:position pos:line="6" pos:column="20"/></empty_stmt>

  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><name pos:line="8" pos:column="10">slist<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition>
    <block pos:line="9" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="10" pos:column="7">SList<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">next<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name><name pos:line="10" pos:column="21">slist<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">next<pos:position pos:line="10" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
      <expr_stmt><expr><name pos:line="11" pos:column="7">result<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">(<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><foreach pos:line="11" pos:column="18">foreach<pos:position pos:line="11" pos:column="25"/></foreach>) <operator pos:line="11" pos:column="27">(<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">slist<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">,<pos:position pos:line="11" pos:column="34"/></operator> <name pos:line="11" pos:column="35">userdata<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">)<pos:position pos:line="11" pos:column="44"/></operator></expr>;<pos:position pos:line="11" pos:column="45"/></expr_stmt>

      <if pos:line="13" pos:column="7">if <condition pos:line="13" pos:column="10">(<expr><name pos:line="13" pos:column="11">result<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
	<block type="pseudo"><break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break></block></then></if>

      <expr_stmt><expr><name pos:line="16" pos:column="7">slist<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">next<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>

  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">result<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}</unit>

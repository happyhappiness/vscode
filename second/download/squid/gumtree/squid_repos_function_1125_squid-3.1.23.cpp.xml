<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1125_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_uri_whitespace<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">var<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">strtok<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="32">w_space<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">token<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">==<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">self_destruct<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">strcasecmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">token<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"strip"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">var<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">URI_WHITESPACE_STRIP<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt></block></then>
    <elseif pos:line="11" pos:column="5">else <if pos:line="11" pos:column="10">if <condition pos:line="11" pos:column="13">(<expr><operator pos:line="11" pos:column="14">!<pos:position pos:line="11" pos:column="15"/></operator><call><name pos:line="11" pos:column="15">strcasecmp<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">token<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="33">"deny"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">var<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">URI_WHITESPACE_DENY<pos:position pos:line="12" pos:column="35"/></name></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><operator pos:line="13" pos:column="14">!<pos:position pos:line="13" pos:column="15"/></operator><call><name pos:line="13" pos:column="15">strcasecmp<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">token<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"allow"<pos:position pos:line="13" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">var<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">URI_WHITESPACE_ALLOW<pos:position pos:line="14" pos:column="36"/></name></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><operator pos:line="15" pos:column="14">!<pos:position pos:line="15" pos:column="15"/></operator><call><name pos:line="15" pos:column="15">strcasecmp<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">token<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"encode"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">var<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">URI_WHITESPACE_ENCODE<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><operator pos:line="17" pos:column="14">!<pos:position pos:line="17" pos:column="15"/></operator><call><name pos:line="17" pos:column="15">strcasecmp<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">token<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"chop"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">var<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">URI_WHITESPACE_CHOP<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></then></if></elseif>
    <else pos:line="19" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">self_destruct<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">()<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt></block></else></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

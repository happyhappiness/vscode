<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7397_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">noteWantRead<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">()<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">fd<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">serverConnection<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">()<pos:position pos:line="4" pos:column="38"/></argument_list></call><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">fd<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">83<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">5<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="19">serverConnection<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_OPENSSL<pos:position pos:line="6" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Security<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">::<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">SessionPointer<pos:position pos:line="7" pos:column="29"/></name></name></type> <name pos:line="7" pos:column="30">session<pos:position pos:line="7" pos:column="37"/></name><argument_list pos:line="7" pos:column="37">(<argument><expr><name><name pos:line="7" pos:column="38">fd_table<pos:position pos:line="7" pos:column="46"/></name><index pos:line="7" pos:column="46">[<expr><name pos:line="7" pos:column="47">fd<pos:position pos:line="7" pos:column="49"/></name></expr>]<pos:position pos:line="7" pos:column="50"/></index></name><operator pos:line="7" pos:column="50">.<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">ssl<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></decl>;<pos:position pos:line="7" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">BIO<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">b<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><call><name pos:line="8" pos:column="14">SSL_get_rbio<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><call><name><name pos:line="8" pos:column="27">session<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">.<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">get<pos:position pos:line="8" pos:column="38"/></name></name><argument_list pos:line="8" pos:column="38">()<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">Ssl<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">::<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">ServerBio<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">srvBio<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><cast type="static" pos:line="9" pos:column="30">static_cast<argument_list type="generic" pos:line="9" pos:column="41">&lt;<argument><expr><name><name pos:line="9" pos:column="42">Ssl<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">::<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">ServerBio<pos:position pos:line="9" pos:column="56"/></name></name> <operator pos:line="9" pos:column="57">*<pos:position pos:line="9" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="62"/></argument_list><argument_list pos:line="9" pos:column="59">(<argument><expr><call><name pos:line="9" pos:column="60">BIO_get_data<pos:position pos:line="9" pos:column="72"/></name><argument_list pos:line="9" pos:column="72">(<argument><expr><name pos:line="9" pos:column="73">b<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="77"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">srvBio<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">holdRead<pos:position pos:line="10" pos:column="25"/></name></name><argument_list pos:line="10" pos:column="25">()<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">srvBio<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">gotHello<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">()<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">checkForMissingCertificates<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">()<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47">
                <block type="pseudo"><return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return></block></then></if> <comment type="line" pos:line="13" pos:column="25">// Wait to download certificates before proceed.</comment>

            <expr_stmt><expr><call><name><name pos:line="15" pos:column="13">srvBio<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">-&gt;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="21">holdRead<pos:position pos:line="15" pos:column="29"/></name></name><argument_list pos:line="15" pos:column="29">(<argument><expr><literal type="boolean" pos:line="15" pos:column="30">false<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
            <comment type="line" pos:line="16" pos:column="13">// schedule a negotiateSSl to allow openSSL parse received data</comment>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">Security<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">::<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">PeerConnector<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">::<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">NegotiateSsl<pos:position pos:line="17" pos:column="50"/></name></name><argument_list pos:line="17" pos:column="50">(<argument><expr><name pos:line="17" pos:column="51">fd<pos:position pos:line="17" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">this<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
            <return pos:line="18" pos:column="13">return;<pos:position pos:line="18" pos:column="20"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><call><name><name pos:line="19" pos:column="20">srvBio<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">gotHelloFailed<pos:position pos:line="19" pos:column="42"/></name></name><argument_list pos:line="19" pos:column="42">()<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">srvBio<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">holdRead<pos:position pos:line="20" pos:column="29"/></name></name><argument_list pos:line="20" pos:column="29">(<argument><expr><literal type="boolean" pos:line="20" pos:column="30">false<pos:position pos:line="20" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">83<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="24">DBG_IMPORTANT<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="39">"Error parsing SSL Server Hello Message on FD "<pos:position pos:line="21" pos:column="86"/></literal> <operator pos:line="21" pos:column="87">&lt;&lt;<pos:position pos:line="21" pos:column="95"/></operator> <name pos:line="21" pos:column="90">fd<pos:position pos:line="21" pos:column="92"/></name></expr></argument>)<pos:position pos:line="21" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="94"/></expr_stmt>
            <comment type="line" pos:line="22" pos:column="13">// schedule a negotiateSSl to allow openSSL parse received data</comment>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">Security<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">::<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">PeerConnector<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">::<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">NegotiateSsl<pos:position pos:line="23" pos:column="50"/></name></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name pos:line="23" pos:column="51">fd<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">this<pos:position pos:line="23" pos:column="59"/></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="61"/></expr_stmt>
            <return pos:line="24" pos:column="13">return;<pos:position pos:line="24" pos:column="20"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">setReadTimeout<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">()<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">Comm<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">::<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">SetSelect<pos:position pos:line="29" pos:column="20"/></name></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">fd<pos:position pos:line="29" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="25">COMM_SELECT_READ<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="43">&amp;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="44">NegotiateSsl<pos:position pos:line="29" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">this<pos:position pos:line="29" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="64">0<pos:position pos:line="29" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

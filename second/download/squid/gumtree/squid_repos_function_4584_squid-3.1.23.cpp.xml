<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4584_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">sync<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CossMemBuf<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dlink_node<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">m<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">off_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">end<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* First, flush pending IO ops */</comment>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">io<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">sync<pos:position pos:line="9" pos:column="13"/></name></name><argument_list pos:line="9" pos:column="13">()<pos:position pos:line="9" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Then, flush any in-memory partial membufs */</comment>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">membufs<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">head<pos:position pos:line="13" pos:column="22"/></name></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition><then pos:line="13" pos:column="23">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><expr><name pos:line="16" pos:column="10">m<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <name><name pos:line="16" pos:column="14">membufs<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">head<pos:position pos:line="16" pos:column="26"/></name></name></expr>;<pos:position pos:line="16" pos:column="27"/></init> <condition><expr><name pos:line="16" pos:column="28">m<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></condition> <incr><expr><name pos:line="16" pos:column="31">m<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <name><name pos:line="16" pos:column="35">m<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">next<pos:position pos:line="16" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="16" pos:column="43"/></control> <block pos:line="16" pos:column="44">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">t<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">CossMemBuf<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator><name><name pos:line="17" pos:column="27">m<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">data<pos:position pos:line="17" pos:column="34"/></name></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">t<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">flags<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">.<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">writing<pos:position pos:line="19" pos:column="29"/></name></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">79<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"WARNING: sleeping for 5 seconds in storeCossSync()"<pos:position pos:line="20" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">sleep<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><literal type="number" pos:line="21" pos:column="19">5<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="21" pos:column="33">/* XXX EEEWWW! */</comment>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="24" pos:column="9">end<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">t<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">current_membuf<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">)<pos:position pos:line="24" pos:column="36"/></operator></expr> ?<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <expr><name pos:line="24" pos:column="39">current_offset<pos:position pos:line="24" pos:column="53"/></name></expr> <pos:position pos:line="24" pos:column="54"/></then><else pos:line="24" pos:column="54">: <expr><name><name pos:line="24" pos:column="56">t<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">-&gt;<pos:position pos:line="24" pos:column="62"/></operator><name pos:line="24" pos:column="59">diskend<pos:position pos:line="24" pos:column="66"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">end<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&gt;<pos:position pos:line="26" pos:column="21"/></operator> <name><name pos:line="26" pos:column="19">t<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">diskstart<pos:position pos:line="26" pos:column="31"/></name></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="27" pos:column="13">theFile<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">write<pos:position pos:line="27" pos:column="27"/></name></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">new<pos:position pos:line="27" pos:column="31"/></operator> <call><name pos:line="27" pos:column="32">CossWrite<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><call><name pos:line="27" pos:column="42">WriteRequest<pos:position pos:line="27" pos:column="54"/></name><argument_list pos:line="27" pos:column="54">(<argument><expr><operator pos:line="27" pos:column="55">(<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="56">char<pos:position pos:line="27" pos:column="60"/></name> <specifier pos:line="27" pos:column="61">const<pos:position pos:line="27" pos:column="66"/></specifier> <operator pos:line="27" pos:column="67">*<pos:position pos:line="27" pos:column="68"/></operator><operator pos:line="27" pos:column="68">)<pos:position pos:line="27" pos:column="69"/></operator><operator pos:line="27" pos:column="69">&amp;<pos:position pos:line="27" pos:column="74"/></operator><name><name pos:line="27" pos:column="70">t<pos:position pos:line="27" pos:column="71"/></name><operator pos:line="27" pos:column="71">-&gt;<pos:position pos:line="27" pos:column="76"/></operator><name pos:line="27" pos:column="73">buffer<pos:position pos:line="27" pos:column="79"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="81">t<pos:position pos:line="27" pos:column="82"/></name><operator pos:line="27" pos:column="82">-&gt;<pos:position pos:line="27" pos:column="87"/></operator><name pos:line="27" pos:column="84">diskstart<pos:position pos:line="27" pos:column="93"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="95">end<pos:position pos:line="27" pos:column="98"/></name> <operator pos:line="27" pos:column="99">-<pos:position pos:line="27" pos:column="100"/></operator> <name><name pos:line="27" pos:column="101">t<pos:position pos:line="27" pos:column="102"/></name><operator pos:line="27" pos:column="102">-&gt;<pos:position pos:line="27" pos:column="107"/></operator><name pos:line="27" pos:column="104">diskstart<pos:position pos:line="27" pos:column="113"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="115">NULL<pos:position pos:line="27" pos:column="119"/></name></expr></argument>)<pos:position pos:line="27" pos:column="120"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="122">t<pos:position pos:line="27" pos:column="123"/></name></expr></argument>)<pos:position pos:line="27" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="126"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="29" pos:column="9">/* and flush */</comment>
        <expr_stmt><expr><call><name><name pos:line="30" pos:column="9">io<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">sync<pos:position pos:line="30" pos:column="17"/></name></name><argument_list pos:line="30" pos:column="17">()<pos:position pos:line="30" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></for>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

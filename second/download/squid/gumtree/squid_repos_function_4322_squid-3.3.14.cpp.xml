<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4322_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">GlobalContextStorage<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">reconfigureFinish<pos:position pos:line="1" pos:column="50"/></name></name><parameter_list pos:line="1" pos:column="50">()<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">reconfiguring<pos:position pos:line="3" pos:column="22"/></name></expr>)<pos:position pos:line="3" pos:column="23"/></condition><then pos:line="3" pos:column="23"> <block pos:line="3" pos:column="24">{
        <expr_stmt><expr><name pos:line="4" pos:column="9">reconfiguring<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">=<pos:position pos:line="4" pos:column="24"/></operator> <literal type="boolean" pos:line="4" pos:column="25">false<pos:position pos:line="4" pos:column="30"/></literal></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>

        <comment type="line" pos:line="6" pos:column="9">// remove or change old local storages.</comment>
        <for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><decl><type><name><name pos:line="7" pos:column="14">std<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">::<pos:position pos:line="7" pos:column="19"/></operator><name><name pos:line="7" pos:column="19">map<pos:position pos:line="7" pos:column="22"/></name><argument_list type="generic" pos:line="7" pos:column="22">&lt;<argument><expr><name><name pos:line="7" pos:column="23">Ip<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">::<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">Address<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">LocalContextStorage<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="61"/></argument_list></name><operator pos:line="7" pos:column="58">::<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">iterator<pos:position pos:line="7" pos:column="68"/></name></name></type> <name pos:line="7" pos:column="69">i<pos:position pos:line="7" pos:column="70"/></name> <init pos:line="7" pos:column="71">= <expr><call><name><name pos:line="7" pos:column="73">storage<pos:position pos:line="7" pos:column="80"/></name><operator pos:line="7" pos:column="80">.<pos:position pos:line="7" pos:column="81"/></operator><name pos:line="7" pos:column="81">begin<pos:position pos:line="7" pos:column="86"/></name></name><argument_list pos:line="7" pos:column="86">()<pos:position pos:line="7" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="89"/></init> <condition><expr><name pos:line="7" pos:column="90">i<pos:position pos:line="7" pos:column="91"/></name> <operator pos:line="7" pos:column="92">!=<pos:position pos:line="7" pos:column="94"/></operator> <call><name><name pos:line="7" pos:column="95">storage<pos:position pos:line="7" pos:column="102"/></name><operator pos:line="7" pos:column="102">.<pos:position pos:line="7" pos:column="103"/></operator><name pos:line="7" pos:column="103">end<pos:position pos:line="7" pos:column="106"/></name></name><argument_list pos:line="7" pos:column="106">()<pos:position pos:line="7" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="109"/></condition> <incr><expr><operator pos:line="7" pos:column="110">++<pos:position pos:line="7" pos:column="112"/></operator><name pos:line="7" pos:column="112">i<pos:position pos:line="7" pos:column="113"/></name></expr></incr>)<pos:position pos:line="7" pos:column="114"/></control> <block pos:line="7" pos:column="115">{
            <decl_stmt><decl><type><name><name pos:line="8" pos:column="13">std<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name><name pos:line="8" pos:column="18">map<pos:position pos:line="8" pos:column="21"/></name><argument_list type="generic" pos:line="8" pos:column="21">&lt;<argument><expr><name><name pos:line="8" pos:column="22">Ip<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">::<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">Address<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">size_t<pos:position pos:line="8" pos:column="41"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="45"/></argument_list></name><operator pos:line="8" pos:column="42">::<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">iterator<pos:position pos:line="8" pos:column="52"/></name></name></type> <name pos:line="8" pos:column="53">conf_i<pos:position pos:line="8" pos:column="59"/></name> <init pos:line="8" pos:column="60">= <expr><call><name><name pos:line="8" pos:column="62">configureStorage<pos:position pos:line="8" pos:column="78"/></name><operator pos:line="8" pos:column="78">.<pos:position pos:line="8" pos:column="79"/></operator><name pos:line="8" pos:column="79">find<pos:position pos:line="8" pos:column="83"/></name></name><argument_list pos:line="8" pos:column="83">(<argument><expr><name><name pos:line="8" pos:column="84">i<pos:position pos:line="8" pos:column="85"/></name><operator pos:line="8" pos:column="85">-&gt;<pos:position pos:line="8" pos:column="90"/></operator><name pos:line="8" pos:column="87">first<pos:position pos:line="8" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="94"/></decl_stmt>
            <if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name pos:line="9" pos:column="17">conf_i<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">==<pos:position pos:line="9" pos:column="26"/></operator> <call><name><name pos:line="9" pos:column="27">configureStorage<pos:position pos:line="9" pos:column="43"/></name><operator pos:line="9" pos:column="43">.<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">end<pos:position pos:line="9" pos:column="47"/></name></name><argument_list pos:line="9" pos:column="47">()<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
                <expr_stmt><expr><call><name><name pos:line="10" pos:column="17">storage<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">erase<pos:position pos:line="10" pos:column="30"/></name></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">i<pos:position pos:line="10" pos:column="32"/></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="11" pos:column="14"/></block></then> <else pos:line="11" pos:column="15">else <block pos:line="11" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="12" pos:column="17">i<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">second<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">SetSize<pos:position pos:line="12" pos:column="35"/></name></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name><name pos:line="12" pos:column="36">conf_i<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">second<pos:position pos:line="12" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="13" pos:column="14"/></block></else></if>
        }<pos:position pos:line="14" pos:column="10"/></block></for>

        <comment type="line" pos:line="16" pos:column="9">// add new local storages.</comment>
        <for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><decl><type><name><name pos:line="17" pos:column="14">std<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">::<pos:position pos:line="17" pos:column="19"/></operator><name><name pos:line="17" pos:column="19">map<pos:position pos:line="17" pos:column="22"/></name><argument_list type="generic" pos:line="17" pos:column="22">&lt;<argument><expr><name><name pos:line="17" pos:column="23">Ip<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">::<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">Address<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">size_t<pos:position pos:line="17" pos:column="42"/></name></expr></argument>&gt;<pos:position pos:line="17" pos:column="46"/></argument_list></name><operator pos:line="17" pos:column="43">::<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="45">iterator<pos:position pos:line="17" pos:column="53"/></name></name></type> <name pos:line="17" pos:column="54">conf_i<pos:position pos:line="17" pos:column="60"/></name> <init pos:line="17" pos:column="61">= <expr><call><name><name pos:line="17" pos:column="63">configureStorage<pos:position pos:line="17" pos:column="79"/></name><operator pos:line="17" pos:column="79">.<pos:position pos:line="17" pos:column="80"/></operator><name pos:line="17" pos:column="80">begin<pos:position pos:line="17" pos:column="85"/></name></name><argument_list pos:line="17" pos:column="85">()<pos:position pos:line="17" pos:column="87"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="88"/></init> <condition><expr><name pos:line="17" pos:column="89">conf_i<pos:position pos:line="17" pos:column="95"/></name> <operator pos:line="17" pos:column="96">!=<pos:position pos:line="17" pos:column="98"/></operator> <call><name><name pos:line="17" pos:column="99">configureStorage<pos:position pos:line="17" pos:column="115"/></name><operator pos:line="17" pos:column="115">.<pos:position pos:line="17" pos:column="116"/></operator><name pos:line="17" pos:column="116">end<pos:position pos:line="17" pos:column="119"/></name></name><argument_list pos:line="17" pos:column="119">()<pos:position pos:line="17" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="122"/></condition> <incr><expr><operator pos:line="17" pos:column="123">++<pos:position pos:line="17" pos:column="125"/></operator><name pos:line="17" pos:column="125">conf_i<pos:position pos:line="17" pos:column="131"/></name></expr></incr> )<pos:position pos:line="17" pos:column="133"/></control> <block pos:line="17" pos:column="134">{
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><call><name><name pos:line="18" pos:column="17">storage<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">.<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">find<pos:position pos:line="18" pos:column="29"/></name></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name><name pos:line="18" pos:column="30">conf_i<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">first<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call> <operator pos:line="18" pos:column="45">==<pos:position pos:line="18" pos:column="47"/></operator> <call><name><name pos:line="18" pos:column="48">storage<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">.<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">end<pos:position pos:line="18" pos:column="59"/></name></name><argument_list pos:line="18" pos:column="59">()<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="62"/></condition><then pos:line="18" pos:column="62"> <block pos:line="18" pos:column="63">{
                <expr_stmt><expr><call><name><name pos:line="19" pos:column="17">storage<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">.<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">insert<pos:position pos:line="19" pos:column="31"/></name></name><argument_list pos:line="19" pos:column="31">(<argument><expr><call><name><name pos:line="19" pos:column="32">std<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">::<pos:position pos:line="19" pos:column="37"/></operator><name><name pos:line="19" pos:column="37">pair<pos:position pos:line="19" pos:column="41"/></name><argument_list type="generic" pos:line="19" pos:column="41">&lt;<argument><expr><name><name pos:line="19" pos:column="42">Ip<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">::<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">Address<pos:position pos:line="19" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">LocalContextStorage<pos:position pos:line="19" pos:column="74"/></name> <operator pos:line="19" pos:column="75">*<pos:position pos:line="19" pos:column="76"/></operator></expr></argument>&gt;<pos:position pos:line="19" pos:column="80"/></argument_list></name></name><argument_list pos:line="19" pos:column="77">(<argument><expr><name><name pos:line="19" pos:column="78">conf_i<pos:position pos:line="19" pos:column="84"/></name><operator pos:line="19" pos:column="84">-&gt;<pos:position pos:line="19" pos:column="89"/></operator><name pos:line="19" pos:column="86">first<pos:position pos:line="19" pos:column="91"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="93">new<pos:position pos:line="19" pos:column="96"/></operator> <call><name pos:line="19" pos:column="97">LocalContextStorage<pos:position pos:line="19" pos:column="116"/></name><argument_list pos:line="19" pos:column="116">(<argument><expr><name><name pos:line="19" pos:column="117">conf_i<pos:position pos:line="19" pos:column="123"/></name><operator pos:line="19" pos:column="123">-&gt;<pos:position pos:line="19" pos:column="128"/></operator><name pos:line="19" pos:column="125">second<pos:position pos:line="19" pos:column="131"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="132"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="135"/></expr_stmt>
            }<pos:position pos:line="20" pos:column="14"/></block></then></if>
        }<pos:position pos:line="21" pos:column="10"/></block></for>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

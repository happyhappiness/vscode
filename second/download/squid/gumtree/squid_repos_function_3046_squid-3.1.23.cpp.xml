<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3046_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">mimeInit<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">char<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">filename<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FILE<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">fp<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">BUFSIZ<pos:position pos:line="5" pos:column="20"/></name></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">chopbuf<pos:position pos:line="6" pos:column="17"/></name><index pos:line="6" pos:column="17">[<expr><name pos:line="6" pos:column="18">BUFSIZ<pos:position pos:line="6" pos:column="24"/></name></expr>]<pos:position pos:line="6" pos:column="25"/></index></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">t<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">pattern<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">icon<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">type<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">encoding<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">mode<pos:position pos:line="12" pos:column="15"/></name></decl>;<pos:position pos:line="12" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">option<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">view_option<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">download_option<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">regex_t<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">re<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">mimeEntry<pos:position pos:line="17" pos:column="14"/></name> <modifier pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></modifier></type><name pos:line="17" pos:column="16">m<pos:position pos:line="17" pos:column="17"/></name></decl>;<pos:position pos:line="17" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">re_flags<pos:position pos:line="18" pos:column="17"/></name> <init pos:line="18" pos:column="18">= <expr><name pos:line="18" pos:column="20">REG_EXTENDED<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">|<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="35">REG_NOSUB<pos:position pos:line="18" pos:column="44"/></name> <operator pos:line="18" pos:column="45">|<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="47">REG_ICASE<pos:position pos:line="18" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="57"/></decl_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">filename<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">==<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">NULL<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
        <block type="pseudo"><return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">fp<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">fopen<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">filename<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"r"<pos:position pos:line="23" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="35"/></argument_list></call><operator pos:line="23" pos:column="35">)<pos:position pos:line="23" pos:column="36"/></operator> <operator pos:line="23" pos:column="37">==<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">NULL<pos:position pos:line="23" pos:column="44"/></name></expr>)<pos:position pos:line="23" pos:column="45"/></condition><then pos:line="23" pos:column="45"> <block pos:line="23" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">25<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"mimeInit: "<pos:position pos:line="24" pos:column="35"/></literal> <operator pos:line="24" pos:column="36">&lt;&lt;<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="39">filename<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">&lt;&lt;<pos:position pos:line="24" pos:column="56"/></operator> <literal type="string" pos:line="24" pos:column="51">": "<pos:position pos:line="24" pos:column="55"/></literal> <operator pos:line="24" pos:column="56">&lt;&lt;<pos:position pos:line="24" pos:column="64"/></operator> <call><name pos:line="24" pos:column="59">xstrerror<pos:position pos:line="24" pos:column="68"/></name><argument_list pos:line="24" pos:column="68">()<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">ifdef<pos:position pos:line="28" pos:column="7"/></cpp:directive> <name pos:line="28" pos:column="8">_SQUID_WIN32_<pos:position pos:line="28" pos:column="21"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">setmode<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><call><name pos:line="29" pos:column="13">fileno<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">fp<pos:position pos:line="29" pos:column="22"/></name></expr></argument>)<pos:position pos:line="29" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="25">O_TEXT<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>

<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">mimeFreeMemory<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">()<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>

    <while pos:line="35" pos:column="5">while <condition pos:line="35" pos:column="11">(<expr><call><name pos:line="35" pos:column="12">fgets<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">buf<pos:position pos:line="35" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="23">BUFSIZ<pos:position pos:line="35" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="31">fp<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="35"/></condition> <block pos:line="35" pos:column="36">{
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">t<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <call><name pos:line="36" pos:column="18">strchr<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">buf<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="36" pos:column="30">'#'<pos:position pos:line="36" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="34"/></argument_list></call><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">t<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <literal type="char" pos:line="37" pos:column="18">'\0'<pos:position pos:line="37" pos:column="22"/></literal></expr>;<pos:position pos:line="37" pos:column="23"/></expr_stmt></block></then></if>

        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">(<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">t<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">strchr<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">buf<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="39" pos:column="30">'\r'<pos:position pos:line="39" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call><operator pos:line="39" pos:column="35">)<pos:position pos:line="39" pos:column="36"/></operator></expr>)<pos:position pos:line="39" pos:column="37"/></condition><then pos:line="39" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">t<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <literal type="char" pos:line="40" pos:column="18">'\0'<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt></block></then></if>

        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">t<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">strchr<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">buf<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="30">'\n'<pos:position pos:line="42" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call><operator pos:line="42" pos:column="35">)<pos:position pos:line="42" pos:column="36"/></operator></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">t<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <literal type="char" pos:line="43" pos:column="18">'\0'<pos:position pos:line="43" pos:column="22"/></literal></expr>;<pos:position pos:line="43" pos:column="23"/></expr_stmt></block></then></if>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">buf<pos:position pos:line="45" pos:column="16"/></name><index pos:line="45" pos:column="16">[<expr><literal type="number" pos:line="45" pos:column="17">0<pos:position pos:line="45" pos:column="18"/></literal></expr>]<pos:position pos:line="45" pos:column="19"/></index></name> <operator pos:line="45" pos:column="20">==<pos:position pos:line="45" pos:column="22"/></operator> <literal type="char" pos:line="45" pos:column="23">'\0'<pos:position pos:line="45" pos:column="27"/></literal></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28">
            <block type="pseudo"><continue pos:line="46" pos:column="13">continue;<pos:position pos:line="46" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="48" pos:column="9">xstrncpy<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">chopbuf<pos:position pos:line="48" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="27">buf<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="32">BUFSIZ<pos:position pos:line="48" pos:column="38"/></name></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">pattern<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <call><name pos:line="50" pos:column="24">strtok<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><name pos:line="50" pos:column="31">chopbuf<pos:position pos:line="50" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">w_space<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator> <operator pos:line="50" pos:column="50">==<pos:position pos:line="50" pos:column="52"/></operator> <name pos:line="50" pos:column="53">NULL<pos:position pos:line="50" pos:column="57"/></name></expr>)<pos:position pos:line="50" pos:column="58"/></condition><then pos:line="50" pos:column="58"> <block pos:line="50" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">debugs<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="number" pos:line="51" pos:column="20">25<pos:position pos:line="51" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="24">1<pos:position pos:line="51" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="27">"mimeInit: parse error: '"<pos:position pos:line="51" pos:column="53"/></literal> <operator pos:line="51" pos:column="54">&lt;&lt;<pos:position pos:line="51" pos:column="62"/></operator> <name pos:line="51" pos:column="57">buf<pos:position pos:line="51" pos:column="60"/></name> <operator pos:line="51" pos:column="61">&lt;&lt;<pos:position pos:line="51" pos:column="69"/></operator> <literal type="string" pos:line="51" pos:column="64">"'"<pos:position pos:line="51" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="69"/></expr_stmt>
            <continue pos:line="52" pos:column="13">continue;<pos:position pos:line="52" pos:column="22"/></continue>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>

        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">(<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">type<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">=<pos:position pos:line="55" pos:column="20"/></operator> <call><name pos:line="55" pos:column="21">strtok<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">(<argument><expr><name pos:line="55" pos:column="28">NULL<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">w_space<pos:position pos:line="55" pos:column="41"/></name></expr></argument>)<pos:position pos:line="55" pos:column="42"/></argument_list></call><operator pos:line="55" pos:column="42">)<pos:position pos:line="55" pos:column="43"/></operator> <operator pos:line="55" pos:column="44">==<pos:position pos:line="55" pos:column="46"/></operator> <name pos:line="55" pos:column="47">NULL<pos:position pos:line="55" pos:column="51"/></name></expr>)<pos:position pos:line="55" pos:column="52"/></condition><then pos:line="55" pos:column="52"> <block pos:line="55" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">debugs<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><literal type="number" pos:line="56" pos:column="20">25<pos:position pos:line="56" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="24">1<pos:position pos:line="56" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="27">"mimeInit: parse error: '"<pos:position pos:line="56" pos:column="53"/></literal> <operator pos:line="56" pos:column="54">&lt;&lt;<pos:position pos:line="56" pos:column="62"/></operator> <name pos:line="56" pos:column="57">buf<pos:position pos:line="56" pos:column="60"/></name> <operator pos:line="56" pos:column="61">&lt;&lt;<pos:position pos:line="56" pos:column="69"/></operator> <literal type="string" pos:line="56" pos:column="64">"'"<pos:position pos:line="56" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="69"/></expr_stmt>
            <continue pos:line="57" pos:column="13">continue;<pos:position pos:line="57" pos:column="22"/></continue>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>

        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">(<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="14">icon<pos:position pos:line="60" pos:column="18"/></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <call><name pos:line="60" pos:column="21">strtok<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">NULL<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="34">w_space<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call><operator pos:line="60" pos:column="42">)<pos:position pos:line="60" pos:column="43"/></operator> <operator pos:line="60" pos:column="44">==<pos:position pos:line="60" pos:column="46"/></operator> <name pos:line="60" pos:column="47">NULL<pos:position pos:line="60" pos:column="51"/></name></expr>)<pos:position pos:line="60" pos:column="52"/></condition><then pos:line="60" pos:column="52"> <block pos:line="60" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">debugs<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="number" pos:line="61" pos:column="20">25<pos:position pos:line="61" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="24">1<pos:position pos:line="61" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="27">"mimeInit: parse error: '"<pos:position pos:line="61" pos:column="53"/></literal> <operator pos:line="61" pos:column="54">&lt;&lt;<pos:position pos:line="61" pos:column="62"/></operator> <name pos:line="61" pos:column="57">buf<pos:position pos:line="61" pos:column="60"/></name> <operator pos:line="61" pos:column="61">&lt;&lt;<pos:position pos:line="61" pos:column="69"/></operator> <literal type="string" pos:line="61" pos:column="64">"'"<pos:position pos:line="61" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
            <continue pos:line="62" pos:column="13">continue;<pos:position pos:line="62" pos:column="22"/></continue>
        }<pos:position pos:line="63" pos:column="10"/></block></then></if>

        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">(<pos:position pos:line="65" pos:column="14"/></operator><name pos:line="65" pos:column="14">encoding<pos:position pos:line="65" pos:column="22"/></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <call><name pos:line="65" pos:column="25">strtok<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">NULL<pos:position pos:line="65" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="38">w_space<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call><operator pos:line="65" pos:column="46">)<pos:position pos:line="65" pos:column="47"/></operator> <operator pos:line="65" pos:column="48">==<pos:position pos:line="65" pos:column="50"/></operator> <name pos:line="65" pos:column="51">NULL<pos:position pos:line="65" pos:column="55"/></name></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56"> <block pos:line="65" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">debugs<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="number" pos:line="66" pos:column="20">25<pos:position pos:line="66" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="24">1<pos:position pos:line="66" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="27">"mimeInit: parse error: '"<pos:position pos:line="66" pos:column="53"/></literal> <operator pos:line="66" pos:column="54">&lt;&lt;<pos:position pos:line="66" pos:column="62"/></operator> <name pos:line="66" pos:column="57">buf<pos:position pos:line="66" pos:column="60"/></name> <operator pos:line="66" pos:column="61">&lt;&lt;<pos:position pos:line="66" pos:column="69"/></operator> <literal type="string" pos:line="66" pos:column="64">"'"<pos:position pos:line="66" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="69"/></expr_stmt>
            <continue pos:line="67" pos:column="13">continue;<pos:position pos:line="67" pos:column="22"/></continue>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">(<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">mode<pos:position pos:line="70" pos:column="18"/></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <call><name pos:line="70" pos:column="21">strtok<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">NULL<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="34">w_space<pos:position pos:line="70" pos:column="41"/></name></expr></argument>)<pos:position pos:line="70" pos:column="42"/></argument_list></call><operator pos:line="70" pos:column="42">)<pos:position pos:line="70" pos:column="43"/></operator> <operator pos:line="70" pos:column="44">==<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="47">NULL<pos:position pos:line="70" pos:column="51"/></name></expr>)<pos:position pos:line="70" pos:column="52"/></condition><then pos:line="70" pos:column="52"> <block pos:line="70" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">debugs<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><literal type="number" pos:line="71" pos:column="20">25<pos:position pos:line="71" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="24">1<pos:position pos:line="71" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="27">"mimeInit: parse error: '"<pos:position pos:line="71" pos:column="53"/></literal> <operator pos:line="71" pos:column="54">&lt;&lt;<pos:position pos:line="71" pos:column="62"/></operator> <name pos:line="71" pos:column="57">buf<pos:position pos:line="71" pos:column="60"/></name> <operator pos:line="71" pos:column="61">&lt;&lt;<pos:position pos:line="71" pos:column="69"/></operator> <literal type="string" pos:line="71" pos:column="64">"'"<pos:position pos:line="71" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="69"/></expr_stmt>
            <continue pos:line="72" pos:column="13">continue;<pos:position pos:line="72" pos:column="22"/></continue>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="75" pos:column="9">download_option<pos:position pos:line="75" pos:column="24"/></name> <operator pos:line="75" pos:column="25">=<pos:position pos:line="75" pos:column="26"/></operator> <literal type="number" pos:line="75" pos:column="27">0<pos:position pos:line="75" pos:column="28"/></literal></expr>;<pos:position pos:line="75" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">view_option<pos:position pos:line="76" pos:column="20"/></name> <operator pos:line="76" pos:column="21">=<pos:position pos:line="76" pos:column="22"/></operator> <literal type="number" pos:line="76" pos:column="23">0<pos:position pos:line="76" pos:column="24"/></literal></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>

        <while pos:line="78" pos:column="9">while <condition pos:line="78" pos:column="15">(<expr><operator pos:line="78" pos:column="16">(<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="17">option<pos:position pos:line="78" pos:column="23"/></name> <operator pos:line="78" pos:column="24">=<pos:position pos:line="78" pos:column="25"/></operator> <call><name pos:line="78" pos:column="26">strtok<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">NULL<pos:position pos:line="78" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="39">w_space<pos:position pos:line="78" pos:column="46"/></name></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call><operator pos:line="78" pos:column="47">)<pos:position pos:line="78" pos:column="48"/></operator> <operator pos:line="78" pos:column="49">!=<pos:position pos:line="78" pos:column="51"/></operator> <name pos:line="78" pos:column="52">NULL<pos:position pos:line="78" pos:column="56"/></name></expr>)<pos:position pos:line="78" pos:column="57"/></condition> <block pos:line="78" pos:column="58">{
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><operator pos:line="79" pos:column="17">!<pos:position pos:line="79" pos:column="18"/></operator><call><name pos:line="79" pos:column="18">strcmp<pos:position pos:line="79" pos:column="24"/></name><argument_list pos:line="79" pos:column="24">(<argument><expr><name pos:line="79" pos:column="25">option<pos:position pos:line="79" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="33">"+download"<pos:position pos:line="79" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="46"/></condition><then pos:line="79" pos:column="46">
                <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="17">download_option<pos:position pos:line="80" pos:column="32"/></name> <operator pos:line="80" pos:column="33">=<pos:position pos:line="80" pos:column="34"/></operator> <literal type="number" pos:line="80" pos:column="35">1<pos:position pos:line="80" pos:column="36"/></literal></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt></block></then>
            <elseif pos:line="81" pos:column="13">else <if pos:line="81" pos:column="18">if <condition pos:line="81" pos:column="21">(<expr><operator pos:line="81" pos:column="22">!<pos:position pos:line="81" pos:column="23"/></operator><call><name pos:line="81" pos:column="23">strcmp<pos:position pos:line="81" pos:column="29"/></name><argument_list pos:line="81" pos:column="29">(<argument><expr><name pos:line="81" pos:column="30">option<pos:position pos:line="81" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="38">"+view"<pos:position pos:line="81" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="47"/></condition><then pos:line="81" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="17">view_option<pos:position pos:line="82" pos:column="28"/></name> <operator pos:line="82" pos:column="29">=<pos:position pos:line="82" pos:column="30"/></operator> <literal type="number" pos:line="82" pos:column="31">1<pos:position pos:line="82" pos:column="32"/></literal></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt></block></then></if></elseif>
            <else pos:line="83" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="17">debugs<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><literal type="number" pos:line="84" pos:column="24">25<pos:position pos:line="84" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="28">1<pos:position pos:line="84" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="31">"mimeInit: unknown option: '"<pos:position pos:line="84" pos:column="60"/></literal> <operator pos:line="84" pos:column="61">&lt;&lt;<pos:position pos:line="84" pos:column="69"/></operator> <name pos:line="84" pos:column="64">buf<pos:position pos:line="84" pos:column="67"/></name> <operator pos:line="84" pos:column="68">&lt;&lt;<pos:position pos:line="84" pos:column="76"/></operator> <literal type="string" pos:line="84" pos:column="71">"' ("<pos:position pos:line="84" pos:column="76"/></literal> <operator pos:line="84" pos:column="77">&lt;&lt;<pos:position pos:line="84" pos:column="85"/></operator> <name pos:line="84" pos:column="80">option<pos:position pos:line="84" pos:column="86"/></name> <operator pos:line="84" pos:column="87">&lt;&lt;<pos:position pos:line="84" pos:column="95"/></operator> <literal type="string" pos:line="84" pos:column="90">")"<pos:position pos:line="84" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="95"/></expr_stmt></block></else></if>
        }<pos:position pos:line="85" pos:column="10"/></block></while>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><call><name pos:line="87" pos:column="13">regcomp<pos:position pos:line="87" pos:column="20"/></name><argument_list pos:line="87" pos:column="20">(<argument><expr><operator pos:line="87" pos:column="21">&amp;<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="22">re<pos:position pos:line="87" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="26">pattern<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="35">re_flags<pos:position pos:line="87" pos:column="43"/></name></expr></argument>)<pos:position pos:line="87" pos:column="44"/></argument_list></call> <operator pos:line="87" pos:column="45">!=<pos:position pos:line="87" pos:column="47"/></operator> <literal type="number" pos:line="87" pos:column="48">0<pos:position pos:line="87" pos:column="49"/></literal></expr>)<pos:position pos:line="87" pos:column="50"/></condition><then pos:line="87" pos:column="50"> <block pos:line="87" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">debugs<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><literal type="number" pos:line="88" pos:column="20">25<pos:position pos:line="88" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="24">1<pos:position pos:line="88" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="27">"mimeInit: regcomp error: '"<pos:position pos:line="88" pos:column="55"/></literal> <operator pos:line="88" pos:column="56">&lt;&lt;<pos:position pos:line="88" pos:column="64"/></operator> <name pos:line="88" pos:column="59">buf<pos:position pos:line="88" pos:column="62"/></name> <operator pos:line="88" pos:column="63">&lt;&lt;<pos:position pos:line="88" pos:column="71"/></operator> <literal type="string" pos:line="88" pos:column="66">"'"<pos:position pos:line="88" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="71"/></expr_stmt>
            <continue pos:line="89" pos:column="13">continue;<pos:position pos:line="89" pos:column="22"/></continue>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="92" pos:column="9">m<pos:position pos:line="92" pos:column="10"/></name> <operator pos:line="92" pos:column="11">=<pos:position pos:line="92" pos:column="12"/></operator> <operator pos:line="92" pos:column="13">new<pos:position pos:line="92" pos:column="16"/></operator> <name pos:line="92" pos:column="17">mimeEntry<pos:position pos:line="92" pos:column="26"/></name></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">m<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">pattern<pos:position pos:line="93" pos:column="19"/></name></name> <operator pos:line="93" pos:column="20">=<pos:position pos:line="93" pos:column="21"/></operator> <call><name pos:line="93" pos:column="22">xstrdup<pos:position pos:line="93" pos:column="29"/></name><argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">pattern<pos:position pos:line="93" pos:column="37"/></name></expr></argument>)<pos:position pos:line="93" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="94" pos:column="9">m<pos:position pos:line="94" pos:column="10"/></name><operator pos:line="94" pos:column="10">-&gt;<pos:position pos:line="94" pos:column="15"/></operator><name pos:line="94" pos:column="12">content_type<pos:position pos:line="94" pos:column="24"/></name></name> <operator pos:line="94" pos:column="25">=<pos:position pos:line="94" pos:column="26"/></operator> <call><name pos:line="94" pos:column="27">xstrdup<pos:position pos:line="94" pos:column="34"/></name><argument_list pos:line="94" pos:column="34">(<argument><expr><name pos:line="94" pos:column="35">type<pos:position pos:line="94" pos:column="39"/></name></expr></argument>)<pos:position pos:line="94" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="95" pos:column="9">m<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">theIcon<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">.<pos:position pos:line="95" pos:column="20"/></operator><name pos:line="95" pos:column="20">setName<pos:position pos:line="95" pos:column="27"/></name></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">icon<pos:position pos:line="95" pos:column="32"/></name></expr></argument>)<pos:position pos:line="95" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">m<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">-&gt;<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="12">content_encoding<pos:position pos:line="96" pos:column="28"/></name></name> <operator pos:line="96" pos:column="29">=<pos:position pos:line="96" pos:column="30"/></operator> <call><name pos:line="96" pos:column="31">xstrdup<pos:position pos:line="96" pos:column="38"/></name><argument_list pos:line="96" pos:column="38">(<argument><expr><name pos:line="96" pos:column="39">encoding<pos:position pos:line="96" pos:column="47"/></name></expr></argument>)<pos:position pos:line="96" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">m<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">compiled_pattern<pos:position pos:line="97" pos:column="28"/></name></name> <operator pos:line="97" pos:column="29">=<pos:position pos:line="97" pos:column="30"/></operator> <name pos:line="97" pos:column="31">re<pos:position pos:line="97" pos:column="33"/></name></expr>;<pos:position pos:line="97" pos:column="34"/></expr_stmt>

        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><operator pos:line="99" pos:column="13">!<pos:position pos:line="99" pos:column="14"/></operator><call><name pos:line="99" pos:column="14">strcasecmp<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><name pos:line="99" pos:column="25">mode<pos:position pos:line="99" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="31">"ascii"<pos:position pos:line="99" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="40"/></condition><then pos:line="99" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="100" pos:column="13">m<pos:position pos:line="100" pos:column="14"/></name><operator pos:line="100" pos:column="14">-&gt;<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="16">transfer_mode<pos:position pos:line="100" pos:column="29"/></name></name> <operator pos:line="100" pos:column="30">=<pos:position pos:line="100" pos:column="31"/></operator> <literal type="char" pos:line="100" pos:column="32">'A'<pos:position pos:line="100" pos:column="35"/></literal></expr>;<pos:position pos:line="100" pos:column="36"/></expr_stmt></block></then>
        <elseif pos:line="101" pos:column="9">else <if pos:line="101" pos:column="14">if <condition pos:line="101" pos:column="17">(<expr><operator pos:line="101" pos:column="18">!<pos:position pos:line="101" pos:column="19"/></operator><call><name pos:line="101" pos:column="19">strcasecmp<pos:position pos:line="101" pos:column="29"/></name><argument_list pos:line="101" pos:column="29">(<argument><expr><name pos:line="101" pos:column="30">mode<pos:position pos:line="101" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="36">"text"<pos:position pos:line="101" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="44"/></condition><then pos:line="101" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="13">m<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">transfer_mode<pos:position pos:line="102" pos:column="29"/></name></name> <operator pos:line="102" pos:column="30">=<pos:position pos:line="102" pos:column="31"/></operator> <literal type="char" pos:line="102" pos:column="32">'A'<pos:position pos:line="102" pos:column="35"/></literal></expr>;<pos:position pos:line="102" pos:column="36"/></expr_stmt></block></then></if></elseif>
        <else pos:line="103" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="13">m<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">transfer_mode<pos:position pos:line="104" pos:column="29"/></name></name> <operator pos:line="104" pos:column="30">=<pos:position pos:line="104" pos:column="31"/></operator> <literal type="char" pos:line="104" pos:column="32">'I'<pos:position pos:line="104" pos:column="35"/></literal></expr>;<pos:position pos:line="104" pos:column="36"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name><name pos:line="106" pos:column="9">m<pos:position pos:line="106" pos:column="10"/></name><operator pos:line="106" pos:column="10">-&gt;<pos:position pos:line="106" pos:column="15"/></operator><name pos:line="106" pos:column="12">view_option<pos:position pos:line="106" pos:column="23"/></name></name> <operator pos:line="106" pos:column="24">=<pos:position pos:line="106" pos:column="25"/></operator> <name pos:line="106" pos:column="26">view_option<pos:position pos:line="106" pos:column="37"/></name></expr>;<pos:position pos:line="106" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="108" pos:column="9">m<pos:position pos:line="108" pos:column="10"/></name><operator pos:line="108" pos:column="10">-&gt;<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="12">download_option<pos:position pos:line="108" pos:column="27"/></name></name> <operator pos:line="108" pos:column="28">=<pos:position pos:line="108" pos:column="29"/></operator> <name pos:line="108" pos:column="30">download_option<pos:position pos:line="108" pos:column="45"/></name></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="110" pos:column="9">*<pos:position pos:line="110" pos:column="10"/></operator><name pos:line="110" pos:column="10">MimeTableTail<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">=<pos:position pos:line="110" pos:column="25"/></operator> <name pos:line="110" pos:column="26">m<pos:position pos:line="110" pos:column="27"/></name></expr>;<pos:position pos:line="110" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name pos:line="112" pos:column="9">MimeTableTail<pos:position pos:line="112" pos:column="22"/></name> <operator pos:line="112" pos:column="23">=<pos:position pos:line="112" pos:column="24"/></operator> <operator pos:line="112" pos:column="25">&amp;<pos:position pos:line="112" pos:column="30"/></operator><name><name pos:line="112" pos:column="26">m<pos:position pos:line="112" pos:column="27"/></name><operator pos:line="112" pos:column="27">-&gt;<pos:position pos:line="112" pos:column="32"/></operator><name pos:line="112" pos:column="29">next<pos:position pos:line="112" pos:column="33"/></name></name></expr>;<pos:position pos:line="112" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="114" pos:column="9">debugs<pos:position pos:line="114" pos:column="15"/></name><argument_list pos:line="114" pos:column="15">(<argument><expr><literal type="number" pos:line="114" pos:column="16">25<pos:position pos:line="114" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="114" pos:column="20">5<pos:position pos:line="114" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="23">"mimeInit: added '"<pos:position pos:line="114" pos:column="42"/></literal> <operator pos:line="114" pos:column="43">&lt;&lt;<pos:position pos:line="114" pos:column="51"/></operator> <name pos:line="114" pos:column="46">buf<pos:position pos:line="114" pos:column="49"/></name> <operator pos:line="114" pos:column="50">&lt;&lt;<pos:position pos:line="114" pos:column="58"/></operator> <literal type="string" pos:line="114" pos:column="53">"'"<pos:position pos:line="114" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="115" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="117" pos:column="5">fclose<pos:position pos:line="117" pos:column="11"/></name><argument_list pos:line="117" pos:column="11">(<argument><expr><name pos:line="117" pos:column="12">fp<pos:position pos:line="117" pos:column="14"/></name></expr></argument>)<pos:position pos:line="117" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="16"/></expr_stmt>
    <comment type="block" pos:line="118" pos:column="5">/*
     * Create Icon StoreEntry's
     */</comment>

    <for pos:line="122" pos:column="5">for <control pos:line="122" pos:column="9">(<init><expr><name pos:line="122" pos:column="10">m<pos:position pos:line="122" pos:column="11"/></name> <operator pos:line="122" pos:column="12">=<pos:position pos:line="122" pos:column="13"/></operator> <name pos:line="122" pos:column="14">MimeTable<pos:position pos:line="122" pos:column="23"/></name></expr>;<pos:position pos:line="122" pos:column="24"/></init> <condition><expr><name pos:line="122" pos:column="25">m<pos:position pos:line="122" pos:column="26"/></name> <operator pos:line="122" pos:column="27">!=<pos:position pos:line="122" pos:column="29"/></operator> <name pos:line="122" pos:column="30">NULL<pos:position pos:line="122" pos:column="34"/></name></expr>;<pos:position pos:line="122" pos:column="35"/></condition> <incr><expr><name pos:line="122" pos:column="36">m<pos:position pos:line="122" pos:column="37"/></name> <operator pos:line="122" pos:column="38">=<pos:position pos:line="122" pos:column="39"/></operator> <name><name pos:line="122" pos:column="40">m<pos:position pos:line="122" pos:column="41"/></name><operator pos:line="122" pos:column="41">-&gt;<pos:position pos:line="122" pos:column="46"/></operator><name pos:line="122" pos:column="43">next<pos:position pos:line="122" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="122" pos:column="48"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="123" pos:column="9">m<pos:position pos:line="123" pos:column="10"/></name><operator pos:line="123" pos:column="10">-&gt;<pos:position pos:line="123" pos:column="15"/></operator><name pos:line="123" pos:column="12">theIcon<pos:position pos:line="123" pos:column="19"/></name><operator pos:line="123" pos:column="19">.<pos:position pos:line="123" pos:column="20"/></operator><name pos:line="123" pos:column="20">load<pos:position pos:line="123" pos:column="24"/></name></name><argument_list pos:line="123" pos:column="24">()<pos:position pos:line="123" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="27"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="125" pos:column="5">debugs<pos:position pos:line="125" pos:column="11"/></name><argument_list pos:line="125" pos:column="11">(<argument><expr><literal type="number" pos:line="125" pos:column="12">25<pos:position pos:line="125" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="125" pos:column="16">1<pos:position pos:line="125" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="125" pos:column="19">"Loaded Icons."<pos:position pos:line="125" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="36"/></expr_stmt>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

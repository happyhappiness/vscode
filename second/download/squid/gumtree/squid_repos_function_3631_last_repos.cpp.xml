<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3631_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">scheduleRead<pos:position pos:line="1" pos:column="45"/></name></name><parameter_list pos:line="1" pos:column="45">()<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name pos:line="3" pos:column="10">haveConnection<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">()<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><operator pos:line="4" pos:column="10">!<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">reader<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><call><name><name pos:line="5" pos:column="10">readBuf<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">length<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call> <operator pos:line="5" pos:column="27">&lt;<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="29">SQUID_TCP_SO_RCVBUF<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt> <comment type="line" pos:line="5" pos:column="51">// will expand later if needed</comment>

    <typedef pos:line="7" pos:column="5">typedef <type><name><name pos:line="7" pos:column="13">CommCbMemFunT<pos:position pos:line="7" pos:column="26"/></name><argument_list type="generic" pos:line="7" pos:column="26">&lt;<argument><expr><name><name pos:line="7" pos:column="27">Adaptation<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">::<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">Icap<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">::<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="45">Xaction<pos:position pos:line="7" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="54">CommIoCbParams<pos:position pos:line="7" pos:column="68"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="72"/></argument_list></name></type> <name pos:line="7" pos:column="70">Dialer<pos:position pos:line="7" pos:column="76"/></name>;<pos:position pos:line="7" pos:column="77"/></typedef>
    <expr_stmt><expr><name pos:line="8" pos:column="5">reader<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">JobCallback<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="number" pos:line="8" pos:column="26">93<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="30">3<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">Dialer<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">this<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="47">Adaptation<pos:position pos:line="8" pos:column="57"/></name><operator pos:line="8" pos:column="57">::<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">Icap<pos:position pos:line="8" pos:column="63"/></name><operator pos:line="8" pos:column="63">::<pos:position pos:line="8" pos:column="65"/></operator><name pos:line="8" pos:column="65">Xaction<pos:position pos:line="8" pos:column="72"/></name><operator pos:line="8" pos:column="72">::<pos:position pos:line="8" pos:column="74"/></operator><name pos:line="8" pos:column="74">noteCommRead<pos:position pos:line="8" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">Comm<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">::<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">Read<pos:position pos:line="9" pos:column="15"/></name></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">connection<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="28">reader<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">updateTimeout<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">()<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

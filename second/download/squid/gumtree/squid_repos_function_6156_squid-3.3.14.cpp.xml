<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6156_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Eui<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Eui48<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">lookup<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">Ip<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">Address<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">&amp;<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="39">c<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><operator pos:line="4" pos:column="5">!<pos:position pos:line="4" pos:column="6"/></operator><name pos:line="4" pos:column="6">_SQUID_WINDOWS_<pos:position pos:line="4" pos:column="21"/></name></expr></cpp:if>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="5" pos:column="8">/* !_SQUID_WINDOWS_ */</comment>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Ip<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">::<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">Address<pos:position pos:line="7" pos:column="16"/></name></name></type> <name pos:line="7" pos:column="17">ipAddr<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">c<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">ipAddr<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">SetPort<pos:position pos:line="8" pos:column="19"/></name></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">_SQUID_LINUX_<pos:position pos:line="10" pos:column="18"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name> <name pos:line="12" pos:column="14">char<pos:position pos:line="12" pos:column="18"/></name></type> <name><name pos:line="12" pos:column="19">ifbuffer<pos:position pos:line="12" pos:column="27"/></name><index pos:line="12" pos:column="27">[<expr><sizeof pos:line="12" pos:column="28">sizeof<argument_list pos:line="12" pos:column="34">(<argument><expr pos:line="12" pos:column="35">struct <name pos:line="12" pos:column="42">ifreq<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></sizeof> <operator pos:line="12" pos:column="49">*<pos:position pos:line="12" pos:column="50"/></operator> <literal type="number" pos:line="12" pos:column="51">64<pos:position pos:line="12" pos:column="53"/></literal></expr>]<pos:position pos:line="12" pos:column="54"/></index></name></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">ifconf<pos:position pos:line="13" pos:column="18"/></name></name></type> <name pos:line="13" pos:column="19">ifc<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">ifreq<pos:position pos:line="15" pos:column="17"/></name></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">ifr<pos:position pos:line="15" pos:column="22"/></name></decl>;<pos:position pos:line="15" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">offset<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* IPv6 builds do not provide the first http_port as an IPv4 socket for ARP */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">tmpSocket<pos:position pos:line="19" pos:column="18"/></name> <init pos:line="19" pos:column="19">= <expr><call><name pos:line="19" pos:column="21">socket<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">AF_INET<pos:position pos:line="19" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="36">SOCK_STREAM<pos:position pos:line="19" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="19" pos:column="48">0<pos:position pos:line="19" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="51"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">tmpSocket<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">&lt;<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">28<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="20">DBG_IMPORTANT<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="35">"Attempt to open socket for EUI retrieval failed: "<pos:position pos:line="21" pos:column="86"/></literal> <operator pos:line="21" pos:column="87">&lt;&lt;<pos:position pos:line="21" pos:column="95"/></operator> <call><name pos:line="21" pos:column="90">xstrerror<pos:position pos:line="21" pos:column="99"/></name><argument_list pos:line="21" pos:column="99">()<pos:position pos:line="21" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">clear<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">()<pos:position pos:line="22" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="boolean" pos:line="23" pos:column="16">false<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/*
     * The linux kernel 2.2 maintains per interface ARP caches and
     * thus requires an interface name when doing ARP queries.
     *
     * The older 2.0 kernels appear to use a unified ARP cache,
     * and require an empty interface name
     *
     * To support both, we attempt the lookup with a blank interface
     * name first. If that does not succeed, the try each interface
     * in turn
     */</comment>

    <comment type="block" pos:line="38" pos:column="5">/*
     * Set up structures for ARP lookup with blank interface name
     */</comment>
    <decl_stmt><decl><type><name><name pos:line="41" pos:column="5">struct<pos:position pos:line="41" pos:column="11"/></name> <name pos:line="41" pos:column="12">arpreq<pos:position pos:line="41" pos:column="18"/></name></name></type> <name pos:line="41" pos:column="19">arpReq<pos:position pos:line="41" pos:column="25"/></name></decl>;<pos:position pos:line="41" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">memset<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><operator pos:line="42" pos:column="12">&amp;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="13">arpReq<pos:position pos:line="42" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="21">'\0'<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="27">sizeof<argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">arpReq<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="44" pos:column="5">struct<pos:position pos:line="44" pos:column="11"/></name> <name pos:line="44" pos:column="12">sockaddr_in<pos:position pos:line="44" pos:column="23"/></name></name> <modifier pos:line="44" pos:column="24">*<pos:position pos:line="44" pos:column="25"/></modifier></type><name pos:line="44" pos:column="25">sa<pos:position pos:line="44" pos:column="27"/></name> <init pos:line="44" pos:column="28">= <expr><operator pos:line="44" pos:column="30">(<pos:position pos:line="44" pos:column="31"/></operator>struct <name pos:line="44" pos:column="38">sockaddr_in<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">*<pos:position pos:line="44" pos:column="50"/></operator><operator pos:line="44" pos:column="50">)<pos:position pos:line="44" pos:column="51"/></operator><operator pos:line="44" pos:column="51">&amp;<pos:position pos:line="44" pos:column="56"/></operator><name><name pos:line="44" pos:column="52">arpReq<pos:position pos:line="44" pos:column="58"/></name><operator pos:line="44" pos:column="58">.<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="59">arp_pa<pos:position pos:line="44" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="44" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="45" pos:column="5">ipAddr<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">.<pos:position pos:line="45" pos:column="12"/></operator><name pos:line="45" pos:column="12">GetSockAddr<pos:position pos:line="45" pos:column="23"/></name></name><argument_list pos:line="45" pos:column="23">(<argument><expr><operator pos:line="45" pos:column="24">*<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">sa<pos:position pos:line="45" pos:column="27"/></name></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Query ARP table */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">ioctl<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><name pos:line="48" pos:column="15">tmpSocket<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">SIOCGARP<pos:position pos:line="48" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="36">&amp;<pos:position pos:line="48" pos:column="41"/></operator><name pos:line="48" pos:column="37">arpReq<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call> <operator pos:line="48" pos:column="45">!=<pos:position pos:line="48" pos:column="47"/></operator> <operator pos:line="48" pos:column="48">-<pos:position pos:line="48" pos:column="49"/></operator><literal type="number" pos:line="48" pos:column="49">1<pos:position pos:line="48" pos:column="50"/></literal></expr>)<pos:position pos:line="48" pos:column="51"/></condition><then pos:line="48" pos:column="51"> <block pos:line="48" pos:column="52">{
        <comment type="block" pos:line="49" pos:column="9">/* Skip non-ethernet interfaces */</comment>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">close<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name pos:line="50" pos:column="15">tmpSocket<pos:position pos:line="50" pos:column="24"/></name></expr></argument>)<pos:position pos:line="50" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">arpReq<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">arp_ha<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">sa_family<pos:position pos:line="52" pos:column="36"/></name></name> <operator pos:line="52" pos:column="37">!=<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">ARPHRD_ETHER<pos:position pos:line="52" pos:column="52"/></name></expr>)<pos:position pos:line="52" pos:column="53"/></condition><then pos:line="52" pos:column="53"> <block pos:line="52" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">clear<pos:position pos:line="53" pos:column="18"/></name><argument_list pos:line="53" pos:column="18">()<pos:position pos:line="53" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
            <return pos:line="54" pos:column="13">return <expr><literal type="boolean" pos:line="54" pos:column="20">false<pos:position pos:line="54" pos:column="25"/></literal></expr>;<pos:position pos:line="54" pos:column="26"/></return>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="57" pos:column="9">debugs<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="number" pos:line="57" pos:column="16">28<pos:position pos:line="57" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="20">4<pos:position pos:line="57" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="23">"Got address "<pos:position pos:line="57" pos:column="37"/></literal><operator pos:line="57" pos:column="37">&lt;&lt;<pos:position pos:line="57" pos:column="45"/></operator> <call><name><name pos:line="57" pos:column="40">std<pos:position pos:line="57" pos:column="43"/></name><operator pos:line="57" pos:column="43">::<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="45">setfill<pos:position pos:line="57" pos:column="52"/></name></name><argument_list pos:line="57" pos:column="52">(<argument><expr><literal type="char" pos:line="57" pos:column="53">'0'<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call> <operator pos:line="57" pos:column="58">&lt;&lt;<pos:position pos:line="57" pos:column="66"/></operator> <name><name pos:line="57" pos:column="61">std<pos:position pos:line="57" pos:column="64"/></name><operator pos:line="57" pos:column="64">::<pos:position pos:line="57" pos:column="66"/></operator><name pos:line="57" pos:column="66">hex<pos:position pos:line="57" pos:column="69"/></name></name> <operator pos:line="57" pos:column="70">&lt;&lt;<pos:position pos:line="57" pos:column="78"/></operator>
               <call><name><name pos:line="58" pos:column="16">std<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">::<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">setw<pos:position pos:line="58" pos:column="25"/></name></name><argument_list pos:line="58" pos:column="25">(<argument><expr><literal type="number" pos:line="58" pos:column="26">2<pos:position pos:line="58" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="28"/></argument_list></call> <operator pos:line="58" pos:column="29">&lt;&lt;<pos:position pos:line="58" pos:column="37"/></operator> <operator pos:line="58" pos:column="32">(<pos:position pos:line="58" pos:column="33"/></operator><name><name pos:line="58" pos:column="33">arpReq<pos:position pos:line="58" pos:column="39"/></name><operator pos:line="58" pos:column="39">.<pos:position pos:line="58" pos:column="40"/></operator><name pos:line="58" pos:column="40">arp_ha<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">.<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">sa_data<pos:position pos:line="58" pos:column="54"/></name><index pos:line="58" pos:column="54">[<expr><literal type="number" pos:line="58" pos:column="55">0<pos:position pos:line="58" pos:column="56"/></literal></expr>]<pos:position pos:line="58" pos:column="57"/></index></name> <operator pos:line="58" pos:column="58">&amp;<pos:position pos:line="58" pos:column="63"/></operator> <literal type="number" pos:line="58" pos:column="60">0xff<pos:position pos:line="58" pos:column="64"/></literal><operator pos:line="58" pos:column="64">)<pos:position pos:line="58" pos:column="65"/></operator>  <operator pos:line="58" pos:column="67">&lt;&lt;<pos:position pos:line="58" pos:column="75"/></operator> <literal type="string" pos:line="58" pos:column="70">":"<pos:position pos:line="58" pos:column="73"/></literal> <operator pos:line="58" pos:column="74">&lt;&lt;<pos:position pos:line="58" pos:column="82"/></operator>
               <call><name><name pos:line="59" pos:column="16">std<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">::<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">setw<pos:position pos:line="59" pos:column="25"/></name></name><argument_list pos:line="59" pos:column="25">(<argument><expr><literal type="number" pos:line="59" pos:column="26">2<pos:position pos:line="59" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call> <operator pos:line="59" pos:column="29">&lt;&lt;<pos:position pos:line="59" pos:column="37"/></operator> <operator pos:line="59" pos:column="32">(<pos:position pos:line="59" pos:column="33"/></operator><name><name pos:line="59" pos:column="33">arpReq<pos:position pos:line="59" pos:column="39"/></name><operator pos:line="59" pos:column="39">.<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">arp_ha<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">.<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="47">sa_data<pos:position pos:line="59" pos:column="54"/></name><index pos:line="59" pos:column="54">[<expr><literal type="number" pos:line="59" pos:column="55">1<pos:position pos:line="59" pos:column="56"/></literal></expr>]<pos:position pos:line="59" pos:column="57"/></index></name> <operator pos:line="59" pos:column="58">&amp;<pos:position pos:line="59" pos:column="63"/></operator> <literal type="number" pos:line="59" pos:column="60">0xff<pos:position pos:line="59" pos:column="64"/></literal><operator pos:line="59" pos:column="64">)<pos:position pos:line="59" pos:column="65"/></operator>  <operator pos:line="59" pos:column="67">&lt;&lt;<pos:position pos:line="59" pos:column="75"/></operator> <literal type="string" pos:line="59" pos:column="70">":"<pos:position pos:line="59" pos:column="73"/></literal> <operator pos:line="59" pos:column="74">&lt;&lt;<pos:position pos:line="59" pos:column="82"/></operator>
               <call><name><name pos:line="60" pos:column="16">std<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">::<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="21">setw<pos:position pos:line="60" pos:column="25"/></name></name><argument_list pos:line="60" pos:column="25">(<argument><expr><literal type="number" pos:line="60" pos:column="26">2<pos:position pos:line="60" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="28"/></argument_list></call> <operator pos:line="60" pos:column="29">&lt;&lt;<pos:position pos:line="60" pos:column="37"/></operator> <operator pos:line="60" pos:column="32">(<pos:position pos:line="60" pos:column="33"/></operator><name><name pos:line="60" pos:column="33">arpReq<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">.<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="40">arp_ha<pos:position pos:line="60" pos:column="46"/></name><operator pos:line="60" pos:column="46">.<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="47">sa_data<pos:position pos:line="60" pos:column="54"/></name><index pos:line="60" pos:column="54">[<expr><literal type="number" pos:line="60" pos:column="55">2<pos:position pos:line="60" pos:column="56"/></literal></expr>]<pos:position pos:line="60" pos:column="57"/></index></name> <operator pos:line="60" pos:column="58">&amp;<pos:position pos:line="60" pos:column="63"/></operator> <literal type="number" pos:line="60" pos:column="60">0xff<pos:position pos:line="60" pos:column="64"/></literal><operator pos:line="60" pos:column="64">)<pos:position pos:line="60" pos:column="65"/></operator>  <operator pos:line="60" pos:column="67">&lt;&lt;<pos:position pos:line="60" pos:column="75"/></operator> <literal type="string" pos:line="60" pos:column="70">":"<pos:position pos:line="60" pos:column="73"/></literal> <operator pos:line="60" pos:column="74">&lt;&lt;<pos:position pos:line="60" pos:column="82"/></operator>
               <call><name><name pos:line="61" pos:column="16">std<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">::<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="21">setw<pos:position pos:line="61" pos:column="25"/></name></name><argument_list pos:line="61" pos:column="25">(<argument><expr><literal type="number" pos:line="61" pos:column="26">2<pos:position pos:line="61" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call> <operator pos:line="61" pos:column="29">&lt;&lt;<pos:position pos:line="61" pos:column="37"/></operator> <operator pos:line="61" pos:column="32">(<pos:position pos:line="61" pos:column="33"/></operator><name><name pos:line="61" pos:column="33">arpReq<pos:position pos:line="61" pos:column="39"/></name><operator pos:line="61" pos:column="39">.<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="40">arp_ha<pos:position pos:line="61" pos:column="46"/></name><operator pos:line="61" pos:column="46">.<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="47">sa_data<pos:position pos:line="61" pos:column="54"/></name><index pos:line="61" pos:column="54">[<expr><literal type="number" pos:line="61" pos:column="55">3<pos:position pos:line="61" pos:column="56"/></literal></expr>]<pos:position pos:line="61" pos:column="57"/></index></name> <operator pos:line="61" pos:column="58">&amp;<pos:position pos:line="61" pos:column="63"/></operator> <literal type="number" pos:line="61" pos:column="60">0xff<pos:position pos:line="61" pos:column="64"/></literal><operator pos:line="61" pos:column="64">)<pos:position pos:line="61" pos:column="65"/></operator>  <operator pos:line="61" pos:column="67">&lt;&lt;<pos:position pos:line="61" pos:column="75"/></operator> <literal type="string" pos:line="61" pos:column="70">":"<pos:position pos:line="61" pos:column="73"/></literal> <operator pos:line="61" pos:column="74">&lt;&lt;<pos:position pos:line="61" pos:column="82"/></operator>
               <call><name><name pos:line="62" pos:column="16">std<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">::<pos:position pos:line="62" pos:column="21"/></operator><name pos:line="62" pos:column="21">setw<pos:position pos:line="62" pos:column="25"/></name></name><argument_list pos:line="62" pos:column="25">(<argument><expr><literal type="number" pos:line="62" pos:column="26">2<pos:position pos:line="62" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="28"/></argument_list></call> <operator pos:line="62" pos:column="29">&lt;&lt;<pos:position pos:line="62" pos:column="37"/></operator> <operator pos:line="62" pos:column="32">(<pos:position pos:line="62" pos:column="33"/></operator><name><name pos:line="62" pos:column="33">arpReq<pos:position pos:line="62" pos:column="39"/></name><operator pos:line="62" pos:column="39">.<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="40">arp_ha<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">.<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">sa_data<pos:position pos:line="62" pos:column="54"/></name><index pos:line="62" pos:column="54">[<expr><literal type="number" pos:line="62" pos:column="55">4<pos:position pos:line="62" pos:column="56"/></literal></expr>]<pos:position pos:line="62" pos:column="57"/></index></name> <operator pos:line="62" pos:column="58">&amp;<pos:position pos:line="62" pos:column="63"/></operator> <literal type="number" pos:line="62" pos:column="60">0xff<pos:position pos:line="62" pos:column="64"/></literal><operator pos:line="62" pos:column="64">)<pos:position pos:line="62" pos:column="65"/></operator>  <operator pos:line="62" pos:column="67">&lt;&lt;<pos:position pos:line="62" pos:column="75"/></operator> <literal type="string" pos:line="62" pos:column="70">":"<pos:position pos:line="62" pos:column="73"/></literal> <operator pos:line="62" pos:column="74">&lt;&lt;<pos:position pos:line="62" pos:column="82"/></operator>
               <call><name><name pos:line="63" pos:column="16">std<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">::<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="21">setw<pos:position pos:line="63" pos:column="25"/></name></name><argument_list pos:line="63" pos:column="25">(<argument><expr><literal type="number" pos:line="63" pos:column="26">2<pos:position pos:line="63" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="28"/></argument_list></call> <operator pos:line="63" pos:column="29">&lt;&lt;<pos:position pos:line="63" pos:column="37"/></operator> <operator pos:line="63" pos:column="32">(<pos:position pos:line="63" pos:column="33"/></operator><name><name pos:line="63" pos:column="33">arpReq<pos:position pos:line="63" pos:column="39"/></name><operator pos:line="63" pos:column="39">.<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="40">arp_ha<pos:position pos:line="63" pos:column="46"/></name><operator pos:line="63" pos:column="46">.<pos:position pos:line="63" pos:column="47"/></operator><name pos:line="63" pos:column="47">sa_data<pos:position pos:line="63" pos:column="54"/></name><index pos:line="63" pos:column="54">[<expr><literal type="number" pos:line="63" pos:column="55">5<pos:position pos:line="63" pos:column="56"/></literal></expr>]<pos:position pos:line="63" pos:column="57"/></index></name> <operator pos:line="63" pos:column="58">&amp;<pos:position pos:line="63" pos:column="63"/></operator> <literal type="number" pos:line="63" pos:column="60">0xff<pos:position pos:line="63" pos:column="64"/></literal><operator pos:line="63" pos:column="64">)<pos:position pos:line="63" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="67"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="65" pos:column="9">set<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><name><name pos:line="65" pos:column="13">arpReq<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">.<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">arp_ha<pos:position pos:line="65" pos:column="26"/></name><operator pos:line="65" pos:column="26">.<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="27">sa_data<pos:position pos:line="65" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="36">6<pos:position pos:line="65" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>
        <return pos:line="66" pos:column="9">return <expr><literal type="boolean" pos:line="66" pos:column="16">true<pos:position pos:line="66" pos:column="20"/></literal></expr>;<pos:position pos:line="66" pos:column="21"/></return>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="69" pos:column="5">/* lookup list of interface names */</comment>
    <expr_stmt><expr><name><name pos:line="70" pos:column="5">ifc<pos:position pos:line="70" pos:column="8"/></name><operator pos:line="70" pos:column="8">.<pos:position pos:line="70" pos:column="9"/></operator><name pos:line="70" pos:column="9">ifc_len<pos:position pos:line="70" pos:column="16"/></name></name> <operator pos:line="70" pos:column="17">=<pos:position pos:line="70" pos:column="18"/></operator> <sizeof pos:line="70" pos:column="19">sizeof<argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">ifbuffer<pos:position pos:line="70" pos:column="34"/></name></expr></argument>)<pos:position pos:line="70" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="72" pos:column="5">ifc<pos:position pos:line="72" pos:column="8"/></name><operator pos:line="72" pos:column="8">.<pos:position pos:line="72" pos:column="9"/></operator><name pos:line="72" pos:column="9">ifc_buf<pos:position pos:line="72" pos:column="16"/></name></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <operator pos:line="72" pos:column="19">(<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="20">char<pos:position pos:line="72" pos:column="24"/></name> <operator pos:line="72" pos:column="25">*<pos:position pos:line="72" pos:column="26"/></operator><operator pos:line="72" pos:column="26">)<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="27">ifbuffer<pos:position pos:line="72" pos:column="35"/></name></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><call><name pos:line="74" pos:column="9">ioctl<pos:position pos:line="74" pos:column="14"/></name><argument_list pos:line="74" pos:column="14">(<argument><expr><name pos:line="74" pos:column="15">tmpSocket<pos:position pos:line="74" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="26">SIOCGIFCONF<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="39">&amp;<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="40">ifc<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call> <operator pos:line="74" pos:column="45">&lt;<pos:position pos:line="74" pos:column="49"/></operator> <literal type="number" pos:line="74" pos:column="47">0<pos:position pos:line="74" pos:column="48"/></literal></expr>)<pos:position pos:line="74" pos:column="49"/></condition><then pos:line="74" pos:column="49"> <block pos:line="74" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">debugs<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><literal type="number" pos:line="75" pos:column="16">28<pos:position pos:line="75" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="20">DBG_IMPORTANT<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="35">"Attempt to retrieve interface list failed: "<pos:position pos:line="75" pos:column="80"/></literal> <operator pos:line="75" pos:column="81">&lt;&lt;<pos:position pos:line="75" pos:column="89"/></operator> <call><name pos:line="75" pos:column="84">xstrerror<pos:position pos:line="75" pos:column="93"/></name><argument_list pos:line="75" pos:column="93">()<pos:position pos:line="75" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">clear<pos:position pos:line="76" pos:column="14"/></name><argument_list pos:line="76" pos:column="14">()<pos:position pos:line="76" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">close<pos:position pos:line="77" pos:column="14"/></name><argument_list pos:line="77" pos:column="14">(<argument><expr><name pos:line="77" pos:column="15">tmpSocket<pos:position pos:line="77" pos:column="24"/></name></expr></argument>)<pos:position pos:line="77" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt>
        <return pos:line="78" pos:column="9">return <expr><literal type="boolean" pos:line="78" pos:column="16">false<pos:position pos:line="78" pos:column="21"/></literal></expr>;<pos:position pos:line="78" pos:column="22"/></return>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><name><name pos:line="81" pos:column="9">ifc<pos:position pos:line="81" pos:column="12"/></name><operator pos:line="81" pos:column="12">.<pos:position pos:line="81" pos:column="13"/></operator><name pos:line="81" pos:column="13">ifc_len<pos:position pos:line="81" pos:column="20"/></name></name> <operator pos:line="81" pos:column="21">&gt;<pos:position pos:line="81" pos:column="25"/></operator> <operator pos:line="81" pos:column="23">(<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="24">int<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">)<pos:position pos:line="81" pos:column="28"/></operator><sizeof pos:line="81" pos:column="28">sizeof<argument_list pos:line="81" pos:column="34">(<argument><expr><name pos:line="81" pos:column="35">ifbuffer<pos:position pos:line="81" pos:column="43"/></name></expr></argument>)<pos:position pos:line="81" pos:column="44"/></argument_list></sizeof></expr>)<pos:position pos:line="81" pos:column="45"/></condition><then pos:line="81" pos:column="45"> <block pos:line="81" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">debugs<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><literal type="number" pos:line="82" pos:column="16">28<pos:position pos:line="82" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="20">DBG_IMPORTANT<pos:position pos:line="82" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="35">"Interface list too long - "<pos:position pos:line="82" pos:column="63"/></literal> <operator pos:line="82" pos:column="64">&lt;&lt;<pos:position pos:line="82" pos:column="72"/></operator> <name><name pos:line="82" pos:column="67">ifc<pos:position pos:line="82" pos:column="70"/></name><operator pos:line="82" pos:column="70">.<pos:position pos:line="82" pos:column="71"/></operator><name pos:line="82" pos:column="71">ifc_len<pos:position pos:line="82" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">clear<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">()<pos:position pos:line="83" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">close<pos:position pos:line="84" pos:column="14"/></name><argument_list pos:line="84" pos:column="14">(<argument><expr><name pos:line="84" pos:column="15">tmpSocket<pos:position pos:line="84" pos:column="24"/></name></expr></argument>)<pos:position pos:line="84" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
        <return pos:line="85" pos:column="9">return <expr><literal type="boolean" pos:line="85" pos:column="16">false<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="88" pos:column="5">/* Attempt ARP lookup on each interface */</comment>
    <expr_stmt><expr><name pos:line="89" pos:column="5">offset<pos:position pos:line="89" pos:column="11"/></name> <operator pos:line="89" pos:column="12">=<pos:position pos:line="89" pos:column="13"/></operator> <literal type="number" pos:line="89" pos:column="14">0<pos:position pos:line="89" pos:column="15"/></literal></expr>;<pos:position pos:line="89" pos:column="16"/></expr_stmt>

    <while pos:line="91" pos:column="5">while <condition pos:line="91" pos:column="11">(<expr><name pos:line="91" pos:column="12">offset<pos:position pos:line="91" pos:column="18"/></name> <operator pos:line="91" pos:column="19">&lt;<pos:position pos:line="91" pos:column="23"/></operator> <name><name pos:line="91" pos:column="21">ifc<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">.<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="25">ifc_len<pos:position pos:line="91" pos:column="32"/></name></name></expr>)<pos:position pos:line="91" pos:column="33"/></condition> <block pos:line="91" pos:column="34">{

        <expr_stmt><expr><name pos:line="93" pos:column="9">ifr<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <operator pos:line="93" pos:column="15">(<pos:position pos:line="93" pos:column="16"/></operator>struct <name pos:line="93" pos:column="23">ifreq<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">*<pos:position pos:line="93" pos:column="30"/></operator><operator pos:line="93" pos:column="30">)<pos:position pos:line="93" pos:column="31"/></operator> <operator pos:line="93" pos:column="32">(<pos:position pos:line="93" pos:column="33"/></operator><name pos:line="93" pos:column="33">ifbuffer<pos:position pos:line="93" pos:column="41"/></name> <operator pos:line="93" pos:column="42">+<pos:position pos:line="93" pos:column="43"/></operator> <name pos:line="93" pos:column="44">offset<pos:position pos:line="93" pos:column="50"/></name><operator pos:line="93" pos:column="50">)<pos:position pos:line="93" pos:column="51"/></operator></expr>;<pos:position pos:line="93" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="94" pos:column="9">offset<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">+=<pos:position pos:line="94" pos:column="18"/></operator> <sizeof pos:line="94" pos:column="19">sizeof<argument_list pos:line="94" pos:column="25">(<argument><expr><operator pos:line="94" pos:column="26">*<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="27">ifr<pos:position pos:line="94" pos:column="30"/></name></expr></argument>)<pos:position pos:line="94" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="94" pos:column="32"/></expr_stmt>
        <comment type="block" pos:line="95" pos:column="9">/* Skip loopback and aliased interfaces */</comment>

        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><literal type="number" pos:line="97" pos:column="13">0<pos:position pos:line="97" pos:column="14"/></literal> <operator pos:line="97" pos:column="15">==<pos:position pos:line="97" pos:column="17"/></operator> <call><name pos:line="97" pos:column="18">strncmp<pos:position pos:line="97" pos:column="25"/></name><argument_list pos:line="97" pos:column="25">(<argument><expr><name><name pos:line="97" pos:column="26">ifr<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">-&gt;<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="31">ifr_name<pos:position pos:line="97" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="41">"lo"<pos:position pos:line="97" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="47">2<pos:position pos:line="97" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="50"/></condition><then pos:line="97" pos:column="50">
            <block type="pseudo"><continue pos:line="98" pos:column="13">continue;<pos:position pos:line="98" pos:column="22"/></continue></block></then></if>

        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">NULL<pos:position pos:line="100" pos:column="17"/></name> <operator pos:line="100" pos:column="18">!=<pos:position pos:line="100" pos:column="20"/></operator> <call><name pos:line="100" pos:column="21">strchr<pos:position pos:line="100" pos:column="27"/></name><argument_list pos:line="100" pos:column="27">(<argument><expr><name><name pos:line="100" pos:column="28">ifr<pos:position pos:line="100" pos:column="31"/></name><operator pos:line="100" pos:column="31">-&gt;<pos:position pos:line="100" pos:column="36"/></operator><name pos:line="100" pos:column="33">ifr_name<pos:position pos:line="100" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="100" pos:column="43">':'<pos:position pos:line="100" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="48"/></condition><then pos:line="100" pos:column="48">
            <block type="pseudo"><continue pos:line="101" pos:column="13">continue;<pos:position pos:line="101" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="103" pos:column="9">debugs<pos:position pos:line="103" pos:column="15"/></name><argument_list pos:line="103" pos:column="15">(<argument><expr><literal type="number" pos:line="103" pos:column="16">28<pos:position pos:line="103" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="20">4<pos:position pos:line="103" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="23">"Looking up ARP address for "<pos:position pos:line="103" pos:column="52"/></literal> <operator pos:line="103" pos:column="53">&lt;&lt;<pos:position pos:line="103" pos:column="61"/></operator> <name pos:line="103" pos:column="56">ipAddr<pos:position pos:line="103" pos:column="62"/></name> <operator pos:line="103" pos:column="63">&lt;&lt;<pos:position pos:line="103" pos:column="71"/></operator> <literal type="string" pos:line="103" pos:column="66">" on "<pos:position pos:line="103" pos:column="72"/></literal> <operator pos:line="103" pos:column="73">&lt;&lt;<pos:position pos:line="103" pos:column="81"/></operator> <name><name pos:line="103" pos:column="76">ifr<pos:position pos:line="103" pos:column="79"/></name><operator pos:line="103" pos:column="79">-&gt;<pos:position pos:line="103" pos:column="84"/></operator><name pos:line="103" pos:column="81">ifr_name<pos:position pos:line="103" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="91"/></expr_stmt>

        <comment type="block" pos:line="105" pos:column="9">/* Set up structures for ARP lookup */</comment>

        <expr_stmt><expr><call><name pos:line="107" pos:column="9">memset<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><operator pos:line="107" pos:column="16">&amp;<pos:position pos:line="107" pos:column="21"/></operator><name pos:line="107" pos:column="17">arpReq<pos:position pos:line="107" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="107" pos:column="25">'\0'<pos:position pos:line="107" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="31">sizeof<argument_list pos:line="107" pos:column="37">(<argument><expr><name pos:line="107" pos:column="38">arpReq<pos:position pos:line="107" pos:column="44"/></name></expr></argument>)<pos:position pos:line="107" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="107" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><name pos:line="109" pos:column="9">sa<pos:position pos:line="109" pos:column="11"/></name> <operator pos:line="109" pos:column="12">=<pos:position pos:line="109" pos:column="13"/></operator> <operator pos:line="109" pos:column="14">(<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="15">sockaddr_in<pos:position pos:line="109" pos:column="26"/></name><operator pos:line="109" pos:column="26">*<pos:position pos:line="109" pos:column="27"/></operator><operator pos:line="109" pos:column="27">)<pos:position pos:line="109" pos:column="28"/></operator><operator pos:line="109" pos:column="28">&amp;<pos:position pos:line="109" pos:column="33"/></operator><name><name pos:line="109" pos:column="29">arpReq<pos:position pos:line="109" pos:column="35"/></name><operator pos:line="109" pos:column="35">.<pos:position pos:line="109" pos:column="36"/></operator><name pos:line="109" pos:column="36">arp_pa<pos:position pos:line="109" pos:column="42"/></name></name></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="110" pos:column="9">ipAddr<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">.<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="16">GetSockAddr<pos:position pos:line="110" pos:column="27"/></name></name><argument_list pos:line="110" pos:column="27">(<argument><expr><operator pos:line="110" pos:column="28">*<pos:position pos:line="110" pos:column="29"/></operator><name pos:line="110" pos:column="29">sa<pos:position pos:line="110" pos:column="31"/></name></expr></argument>)<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="112" pos:column="9">strncpy<pos:position pos:line="112" pos:column="16"/></name><argument_list pos:line="112" pos:column="16">(<argument><expr><name><name pos:line="112" pos:column="17">arpReq<pos:position pos:line="112" pos:column="23"/></name><operator pos:line="112" pos:column="23">.<pos:position pos:line="112" pos:column="24"/></operator><name pos:line="112" pos:column="24">arp_dev<pos:position pos:line="112" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="33">ifr<pos:position pos:line="112" pos:column="36"/></name><operator pos:line="112" pos:column="36">-&gt;<pos:position pos:line="112" pos:column="41"/></operator><name pos:line="112" pos:column="38">ifr_name<pos:position pos:line="112" pos:column="46"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="48">sizeof<argument_list pos:line="112" pos:column="54">(<argument><expr><name><name pos:line="112" pos:column="55">arpReq<pos:position pos:line="112" pos:column="61"/></name><operator pos:line="112" pos:column="61">.<pos:position pos:line="112" pos:column="62"/></operator><name pos:line="112" pos:column="62">arp_dev<pos:position pos:line="112" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></sizeof> <operator pos:line="112" pos:column="71">-<pos:position pos:line="112" pos:column="72"/></operator> <literal type="number" pos:line="112" pos:column="73">1<pos:position pos:line="112" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="76"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="114" pos:column="9">arpReq<pos:position pos:line="114" pos:column="15"/></name><operator pos:line="114" pos:column="15">.<pos:position pos:line="114" pos:column="16"/></operator><name pos:line="114" pos:column="16">arp_dev<pos:position pos:line="114" pos:column="23"/></name><index pos:line="114" pos:column="23">[<expr><sizeof pos:line="114" pos:column="24">sizeof<argument_list pos:line="114" pos:column="30">(<argument><expr><name><name pos:line="114" pos:column="31">arpReq<pos:position pos:line="114" pos:column="37"/></name><operator pos:line="114" pos:column="37">.<pos:position pos:line="114" pos:column="38"/></operator><name pos:line="114" pos:column="38">arp_dev<pos:position pos:line="114" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="46"/></argument_list></sizeof> <operator pos:line="114" pos:column="47">-<pos:position pos:line="114" pos:column="48"/></operator> <literal type="number" pos:line="114" pos:column="49">1<pos:position pos:line="114" pos:column="50"/></literal></expr>]<pos:position pos:line="114" pos:column="51"/></index></name> <operator pos:line="114" pos:column="52">=<pos:position pos:line="114" pos:column="53"/></operator> <literal type="char" pos:line="114" pos:column="54">'\0'<pos:position pos:line="114" pos:column="58"/></literal></expr>;<pos:position pos:line="114" pos:column="59"/></expr_stmt>

        <comment type="block" pos:line="116" pos:column="9">/* Query ARP table */</comment>
        <if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><operator pos:line="117" pos:column="13">-<pos:position pos:line="117" pos:column="14"/></operator><literal type="number" pos:line="117" pos:column="14">1<pos:position pos:line="117" pos:column="15"/></literal> <operator pos:line="117" pos:column="16">==<pos:position pos:line="117" pos:column="18"/></operator> <call><name pos:line="117" pos:column="19">ioctl<pos:position pos:line="117" pos:column="24"/></name><argument_list pos:line="117" pos:column="24">(<argument><expr><name pos:line="117" pos:column="25">tmpSocket<pos:position pos:line="117" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="36">SIOCGARP<pos:position pos:line="117" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="46">&amp;<pos:position pos:line="117" pos:column="51"/></operator><name pos:line="117" pos:column="47">arpReq<pos:position pos:line="117" pos:column="53"/></name></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="117" pos:column="55"/></condition><then pos:line="117" pos:column="55"> <block pos:line="117" pos:column="56">{
            <comment type="block" pos:line="118" pos:column="13">/*
             * Query failed.  Do not log failed lookups or "device
             * not supported"
             */</comment>

            <if pos:line="123" pos:column="13">if <condition pos:line="123" pos:column="16">(<expr><name pos:line="123" pos:column="17">ENXIO<pos:position pos:line="123" pos:column="22"/></name> <operator pos:line="123" pos:column="23">==<pos:position pos:line="123" pos:column="25"/></operator> <name pos:line="123" pos:column="26">errno<pos:position pos:line="123" pos:column="31"/></name></expr>)<pos:position pos:line="123" pos:column="32"/></condition><then pos:line="123" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="124" pos:column="17">(<pos:position pos:line="124" pos:column="18"/></operator><name pos:line="124" pos:column="18">void<pos:position pos:line="124" pos:column="22"/></name><operator pos:line="124" pos:column="22">)<pos:position pos:line="124" pos:column="23"/></operator> <literal type="number" pos:line="124" pos:column="24">0<pos:position pos:line="124" pos:column="25"/></literal></expr>;<pos:position pos:line="124" pos:column="26"/></expr_stmt></block></then>
            <elseif pos:line="125" pos:column="13">else <if pos:line="125" pos:column="18">if <condition pos:line="125" pos:column="21">(<expr><name pos:line="125" pos:column="22">ENODEV<pos:position pos:line="125" pos:column="28"/></name> <operator pos:line="125" pos:column="29">==<pos:position pos:line="125" pos:column="31"/></operator> <name pos:line="125" pos:column="32">errno<pos:position pos:line="125" pos:column="37"/></name></expr>)<pos:position pos:line="125" pos:column="38"/></condition><then pos:line="125" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="126" pos:column="17">(<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="18">void<pos:position pos:line="126" pos:column="22"/></name><operator pos:line="126" pos:column="22">)<pos:position pos:line="126" pos:column="23"/></operator> <literal type="number" pos:line="126" pos:column="24">0<pos:position pos:line="126" pos:column="25"/></literal></expr>;<pos:position pos:line="126" pos:column="26"/></expr_stmt></block></then></if></elseif>
            <else pos:line="127" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="17">debugs<pos:position pos:line="128" pos:column="23"/></name><argument_list pos:line="128" pos:column="23">(<argument><expr><literal type="number" pos:line="128" pos:column="24">28<pos:position pos:line="128" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="28">DBG_IMPORTANT<pos:position pos:line="128" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="128" pos:column="43">"ARP query "<pos:position pos:line="128" pos:column="55"/></literal> <operator pos:line="128" pos:column="56">&lt;&lt;<pos:position pos:line="128" pos:column="64"/></operator> <name pos:line="128" pos:column="59">ipAddr<pos:position pos:line="128" pos:column="65"/></name> <operator pos:line="128" pos:column="66">&lt;&lt;<pos:position pos:line="128" pos:column="74"/></operator> <literal type="string" pos:line="128" pos:column="69">" failed: "<pos:position pos:line="128" pos:column="80"/></literal> <operator pos:line="128" pos:column="81">&lt;&lt;<pos:position pos:line="128" pos:column="89"/></operator> <name><name pos:line="128" pos:column="84">ifr<pos:position pos:line="128" pos:column="87"/></name><operator pos:line="128" pos:column="87">-&gt;<pos:position pos:line="128" pos:column="92"/></operator><name pos:line="128" pos:column="89">ifr_name<pos:position pos:line="128" pos:column="97"/></name></name> <operator pos:line="128" pos:column="98">&lt;&lt;<pos:position pos:line="128" pos:column="106"/></operator> <literal type="string" pos:line="128" pos:column="101">": "<pos:position pos:line="128" pos:column="105"/></literal> <operator pos:line="128" pos:column="106">&lt;&lt;<pos:position pos:line="128" pos:column="114"/></operator> <call><name pos:line="128" pos:column="109">xstrerror<pos:position pos:line="128" pos:column="118"/></name><argument_list pos:line="128" pos:column="118">()<pos:position pos:line="128" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="122"/></expr_stmt></block></else></if>

            <continue pos:line="130" pos:column="13">continue;<pos:position pos:line="130" pos:column="22"/></continue>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="133" pos:column="9">/* Skip non-ethernet interfaces */</comment>
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><name><name pos:line="134" pos:column="13">arpReq<pos:position pos:line="134" pos:column="19"/></name><operator pos:line="134" pos:column="19">.<pos:position pos:line="134" pos:column="20"/></operator><name pos:line="134" pos:column="20">arp_ha<pos:position pos:line="134" pos:column="26"/></name><operator pos:line="134" pos:column="26">.<pos:position pos:line="134" pos:column="27"/></operator><name pos:line="134" pos:column="27">sa_family<pos:position pos:line="134" pos:column="36"/></name></name> <operator pos:line="134" pos:column="37">!=<pos:position pos:line="134" pos:column="39"/></operator> <name pos:line="134" pos:column="40">ARPHRD_ETHER<pos:position pos:line="134" pos:column="52"/></name></expr>)<pos:position pos:line="134" pos:column="53"/></condition><then pos:line="134" pos:column="53">
            <block type="pseudo"><continue pos:line="135" pos:column="13">continue;<pos:position pos:line="135" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="137" pos:column="9">debugs<pos:position pos:line="137" pos:column="15"/></name><argument_list pos:line="137" pos:column="15">(<argument><expr><literal type="number" pos:line="137" pos:column="16">28<pos:position pos:line="137" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="20">4<pos:position pos:line="137" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="23">"Got address "<pos:position pos:line="137" pos:column="37"/></literal><operator pos:line="137" pos:column="37">&lt;&lt;<pos:position pos:line="137" pos:column="45"/></operator> <call><name><name pos:line="137" pos:column="40">std<pos:position pos:line="137" pos:column="43"/></name><operator pos:line="137" pos:column="43">::<pos:position pos:line="137" pos:column="45"/></operator><name pos:line="137" pos:column="45">setfill<pos:position pos:line="137" pos:column="52"/></name></name><argument_list pos:line="137" pos:column="52">(<argument><expr><literal type="char" pos:line="137" pos:column="53">'0'<pos:position pos:line="137" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="57"/></argument_list></call> <operator pos:line="137" pos:column="58">&lt;&lt;<pos:position pos:line="137" pos:column="66"/></operator> <name><name pos:line="137" pos:column="61">std<pos:position pos:line="137" pos:column="64"/></name><operator pos:line="137" pos:column="64">::<pos:position pos:line="137" pos:column="66"/></operator><name pos:line="137" pos:column="66">hex<pos:position pos:line="137" pos:column="69"/></name></name> <operator pos:line="137" pos:column="70">&lt;&lt;<pos:position pos:line="137" pos:column="78"/></operator>
               <call><name><name pos:line="138" pos:column="16">std<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">::<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="21">setw<pos:position pos:line="138" pos:column="25"/></name></name><argument_list pos:line="138" pos:column="25">(<argument><expr><literal type="number" pos:line="138" pos:column="26">2<pos:position pos:line="138" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="28"/></argument_list></call> <operator pos:line="138" pos:column="29">&lt;&lt;<pos:position pos:line="138" pos:column="37"/></operator> <operator pos:line="138" pos:column="32">(<pos:position pos:line="138" pos:column="33"/></operator><name><name pos:line="138" pos:column="33">arpReq<pos:position pos:line="138" pos:column="39"/></name><operator pos:line="138" pos:column="39">.<pos:position pos:line="138" pos:column="40"/></operator><name pos:line="138" pos:column="40">arp_ha<pos:position pos:line="138" pos:column="46"/></name><operator pos:line="138" pos:column="46">.<pos:position pos:line="138" pos:column="47"/></operator><name pos:line="138" pos:column="47">sa_data<pos:position pos:line="138" pos:column="54"/></name><index pos:line="138" pos:column="54">[<expr><literal type="number" pos:line="138" pos:column="55">0<pos:position pos:line="138" pos:column="56"/></literal></expr>]<pos:position pos:line="138" pos:column="57"/></index></name> <operator pos:line="138" pos:column="58">&amp;<pos:position pos:line="138" pos:column="63"/></operator> <literal type="number" pos:line="138" pos:column="60">0xff<pos:position pos:line="138" pos:column="64"/></literal><operator pos:line="138" pos:column="64">)<pos:position pos:line="138" pos:column="65"/></operator>  <operator pos:line="138" pos:column="67">&lt;&lt;<pos:position pos:line="138" pos:column="75"/></operator> <literal type="string" pos:line="138" pos:column="70">":"<pos:position pos:line="138" pos:column="73"/></literal> <operator pos:line="138" pos:column="74">&lt;&lt;<pos:position pos:line="138" pos:column="82"/></operator>
               <call><name><name pos:line="139" pos:column="16">std<pos:position pos:line="139" pos:column="19"/></name><operator pos:line="139" pos:column="19">::<pos:position pos:line="139" pos:column="21"/></operator><name pos:line="139" pos:column="21">setw<pos:position pos:line="139" pos:column="25"/></name></name><argument_list pos:line="139" pos:column="25">(<argument><expr><literal type="number" pos:line="139" pos:column="26">2<pos:position pos:line="139" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="28"/></argument_list></call> <operator pos:line="139" pos:column="29">&lt;&lt;<pos:position pos:line="139" pos:column="37"/></operator> <operator pos:line="139" pos:column="32">(<pos:position pos:line="139" pos:column="33"/></operator><name><name pos:line="139" pos:column="33">arpReq<pos:position pos:line="139" pos:column="39"/></name><operator pos:line="139" pos:column="39">.<pos:position pos:line="139" pos:column="40"/></operator><name pos:line="139" pos:column="40">arp_ha<pos:position pos:line="139" pos:column="46"/></name><operator pos:line="139" pos:column="46">.<pos:position pos:line="139" pos:column="47"/></operator><name pos:line="139" pos:column="47">sa_data<pos:position pos:line="139" pos:column="54"/></name><index pos:line="139" pos:column="54">[<expr><literal type="number" pos:line="139" pos:column="55">1<pos:position pos:line="139" pos:column="56"/></literal></expr>]<pos:position pos:line="139" pos:column="57"/></index></name> <operator pos:line="139" pos:column="58">&amp;<pos:position pos:line="139" pos:column="63"/></operator> <literal type="number" pos:line="139" pos:column="60">0xff<pos:position pos:line="139" pos:column="64"/></literal><operator pos:line="139" pos:column="64">)<pos:position pos:line="139" pos:column="65"/></operator>  <operator pos:line="139" pos:column="67">&lt;&lt;<pos:position pos:line="139" pos:column="75"/></operator> <literal type="string" pos:line="139" pos:column="70">":"<pos:position pos:line="139" pos:column="73"/></literal> <operator pos:line="139" pos:column="74">&lt;&lt;<pos:position pos:line="139" pos:column="82"/></operator>
               <call><name><name pos:line="140" pos:column="16">std<pos:position pos:line="140" pos:column="19"/></name><operator pos:line="140" pos:column="19">::<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">setw<pos:position pos:line="140" pos:column="25"/></name></name><argument_list pos:line="140" pos:column="25">(<argument><expr><literal type="number" pos:line="140" pos:column="26">2<pos:position pos:line="140" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="28"/></argument_list></call> <operator pos:line="140" pos:column="29">&lt;&lt;<pos:position pos:line="140" pos:column="37"/></operator> <operator pos:line="140" pos:column="32">(<pos:position pos:line="140" pos:column="33"/></operator><name><name pos:line="140" pos:column="33">arpReq<pos:position pos:line="140" pos:column="39"/></name><operator pos:line="140" pos:column="39">.<pos:position pos:line="140" pos:column="40"/></operator><name pos:line="140" pos:column="40">arp_ha<pos:position pos:line="140" pos:column="46"/></name><operator pos:line="140" pos:column="46">.<pos:position pos:line="140" pos:column="47"/></operator><name pos:line="140" pos:column="47">sa_data<pos:position pos:line="140" pos:column="54"/></name><index pos:line="140" pos:column="54">[<expr><literal type="number" pos:line="140" pos:column="55">2<pos:position pos:line="140" pos:column="56"/></literal></expr>]<pos:position pos:line="140" pos:column="57"/></index></name> <operator pos:line="140" pos:column="58">&amp;<pos:position pos:line="140" pos:column="63"/></operator> <literal type="number" pos:line="140" pos:column="60">0xff<pos:position pos:line="140" pos:column="64"/></literal><operator pos:line="140" pos:column="64">)<pos:position pos:line="140" pos:column="65"/></operator>  <operator pos:line="140" pos:column="67">&lt;&lt;<pos:position pos:line="140" pos:column="75"/></operator> <literal type="string" pos:line="140" pos:column="70">":"<pos:position pos:line="140" pos:column="73"/></literal> <operator pos:line="140" pos:column="74">&lt;&lt;<pos:position pos:line="140" pos:column="82"/></operator>
               <call><name><name pos:line="141" pos:column="16">std<pos:position pos:line="141" pos:column="19"/></name><operator pos:line="141" pos:column="19">::<pos:position pos:line="141" pos:column="21"/></operator><name pos:line="141" pos:column="21">setw<pos:position pos:line="141" pos:column="25"/></name></name><argument_list pos:line="141" pos:column="25">(<argument><expr><literal type="number" pos:line="141" pos:column="26">2<pos:position pos:line="141" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="28"/></argument_list></call> <operator pos:line="141" pos:column="29">&lt;&lt;<pos:position pos:line="141" pos:column="37"/></operator> <operator pos:line="141" pos:column="32">(<pos:position pos:line="141" pos:column="33"/></operator><name><name pos:line="141" pos:column="33">arpReq<pos:position pos:line="141" pos:column="39"/></name><operator pos:line="141" pos:column="39">.<pos:position pos:line="141" pos:column="40"/></operator><name pos:line="141" pos:column="40">arp_ha<pos:position pos:line="141" pos:column="46"/></name><operator pos:line="141" pos:column="46">.<pos:position pos:line="141" pos:column="47"/></operator><name pos:line="141" pos:column="47">sa_data<pos:position pos:line="141" pos:column="54"/></name><index pos:line="141" pos:column="54">[<expr><literal type="number" pos:line="141" pos:column="55">3<pos:position pos:line="141" pos:column="56"/></literal></expr>]<pos:position pos:line="141" pos:column="57"/></index></name> <operator pos:line="141" pos:column="58">&amp;<pos:position pos:line="141" pos:column="63"/></operator> <literal type="number" pos:line="141" pos:column="60">0xff<pos:position pos:line="141" pos:column="64"/></literal><operator pos:line="141" pos:column="64">)<pos:position pos:line="141" pos:column="65"/></operator>  <operator pos:line="141" pos:column="67">&lt;&lt;<pos:position pos:line="141" pos:column="75"/></operator> <literal type="string" pos:line="141" pos:column="70">":"<pos:position pos:line="141" pos:column="73"/></literal> <operator pos:line="141" pos:column="74">&lt;&lt;<pos:position pos:line="141" pos:column="82"/></operator>
               <call><name><name pos:line="142" pos:column="16">std<pos:position pos:line="142" pos:column="19"/></name><operator pos:line="142" pos:column="19">::<pos:position pos:line="142" pos:column="21"/></operator><name pos:line="142" pos:column="21">setw<pos:position pos:line="142" pos:column="25"/></name></name><argument_list pos:line="142" pos:column="25">(<argument><expr><literal type="number" pos:line="142" pos:column="26">2<pos:position pos:line="142" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="28"/></argument_list></call> <operator pos:line="142" pos:column="29">&lt;&lt;<pos:position pos:line="142" pos:column="37"/></operator> <operator pos:line="142" pos:column="32">(<pos:position pos:line="142" pos:column="33"/></operator><name><name pos:line="142" pos:column="33">arpReq<pos:position pos:line="142" pos:column="39"/></name><operator pos:line="142" pos:column="39">.<pos:position pos:line="142" pos:column="40"/></operator><name pos:line="142" pos:column="40">arp_ha<pos:position pos:line="142" pos:column="46"/></name><operator pos:line="142" pos:column="46">.<pos:position pos:line="142" pos:column="47"/></operator><name pos:line="142" pos:column="47">sa_data<pos:position pos:line="142" pos:column="54"/></name><index pos:line="142" pos:column="54">[<expr><literal type="number" pos:line="142" pos:column="55">4<pos:position pos:line="142" pos:column="56"/></literal></expr>]<pos:position pos:line="142" pos:column="57"/></index></name> <operator pos:line="142" pos:column="58">&amp;<pos:position pos:line="142" pos:column="63"/></operator> <literal type="number" pos:line="142" pos:column="60">0xff<pos:position pos:line="142" pos:column="64"/></literal><operator pos:line="142" pos:column="64">)<pos:position pos:line="142" pos:column="65"/></operator>  <operator pos:line="142" pos:column="67">&lt;&lt;<pos:position pos:line="142" pos:column="75"/></operator> <literal type="string" pos:line="142" pos:column="70">":"<pos:position pos:line="142" pos:column="73"/></literal> <operator pos:line="142" pos:column="74">&lt;&lt;<pos:position pos:line="142" pos:column="82"/></operator>
               <call><name><name pos:line="143" pos:column="16">std<pos:position pos:line="143" pos:column="19"/></name><operator pos:line="143" pos:column="19">::<pos:position pos:line="143" pos:column="21"/></operator><name pos:line="143" pos:column="21">setw<pos:position pos:line="143" pos:column="25"/></name></name><argument_list pos:line="143" pos:column="25">(<argument><expr><literal type="number" pos:line="143" pos:column="26">2<pos:position pos:line="143" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="28"/></argument_list></call> <operator pos:line="143" pos:column="29">&lt;&lt;<pos:position pos:line="143" pos:column="37"/></operator> <operator pos:line="143" pos:column="32">(<pos:position pos:line="143" pos:column="33"/></operator><name><name pos:line="143" pos:column="33">arpReq<pos:position pos:line="143" pos:column="39"/></name><operator pos:line="143" pos:column="39">.<pos:position pos:line="143" pos:column="40"/></operator><name pos:line="143" pos:column="40">arp_ha<pos:position pos:line="143" pos:column="46"/></name><operator pos:line="143" pos:column="46">.<pos:position pos:line="143" pos:column="47"/></operator><name pos:line="143" pos:column="47">sa_data<pos:position pos:line="143" pos:column="54"/></name><index pos:line="143" pos:column="54">[<expr><literal type="number" pos:line="143" pos:column="55">5<pos:position pos:line="143" pos:column="56"/></literal></expr>]<pos:position pos:line="143" pos:column="57"/></index></name> <operator pos:line="143" pos:column="58">&amp;<pos:position pos:line="143" pos:column="63"/></operator> <literal type="number" pos:line="143" pos:column="60">0xff<pos:position pos:line="143" pos:column="64"/></literal><operator pos:line="143" pos:column="64">)<pos:position pos:line="143" pos:column="65"/></operator>  <operator pos:line="143" pos:column="67">&lt;&lt;<pos:position pos:line="143" pos:column="75"/></operator> <literal type="string" pos:line="143" pos:column="70">" on "<pos:position pos:line="143" pos:column="76"/></literal><operator pos:line="143" pos:column="76">&lt;&lt;<pos:position pos:line="143" pos:column="84"/></operator>
               <call><name><name pos:line="144" pos:column="16">std<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">::<pos:position pos:line="144" pos:column="21"/></operator><name pos:line="144" pos:column="21">setfill<pos:position pos:line="144" pos:column="28"/></name></name><argument_list pos:line="144" pos:column="28">(<argument><expr><literal type="char" pos:line="144" pos:column="29">' '<pos:position pos:line="144" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="33"/></argument_list></call> <operator pos:line="144" pos:column="34">&lt;&lt;<pos:position pos:line="144" pos:column="42"/></operator> <name><name pos:line="144" pos:column="37">ifr<pos:position pos:line="144" pos:column="40"/></name><operator pos:line="144" pos:column="40">-&gt;<pos:position pos:line="144" pos:column="45"/></operator><name pos:line="144" pos:column="42">ifr_name<pos:position pos:line="144" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="52"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="146" pos:column="9">set<pos:position pos:line="146" pos:column="12"/></name><argument_list pos:line="146" pos:column="12">(<argument><expr><name><name pos:line="146" pos:column="13">arpReq<pos:position pos:line="146" pos:column="19"/></name><operator pos:line="146" pos:column="19">.<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="20">arp_ha<pos:position pos:line="146" pos:column="26"/></name><operator pos:line="146" pos:column="26">.<pos:position pos:line="146" pos:column="27"/></operator><name pos:line="146" pos:column="27">sa_data<pos:position pos:line="146" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="36">6<pos:position pos:line="146" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="39"/></expr_stmt>

        <comment type="block" pos:line="148" pos:column="9">/*
         * Should we stop looking here? Can the same IP address
         * exist on multiple interfaces?
         */</comment>

        <comment type="block" pos:line="153" pos:column="9">/* AYJ: 2009-10-06: for now we have to. We can only store one EUI at a time. */</comment>
        <expr_stmt><expr><call><name pos:line="154" pos:column="9">close<pos:position pos:line="154" pos:column="14"/></name><argument_list pos:line="154" pos:column="14">(<argument><expr><name pos:line="154" pos:column="15">tmpSocket<pos:position pos:line="154" pos:column="24"/></name></expr></argument>)<pos:position pos:line="154" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="26"/></expr_stmt>
        <return pos:line="155" pos:column="9">return <expr><literal type="boolean" pos:line="155" pos:column="16">true<pos:position pos:line="155" pos:column="20"/></literal></expr>;<pos:position pos:line="155" pos:column="21"/></return>
    }<pos:position pos:line="156" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="158" pos:column="5">close<pos:position pos:line="158" pos:column="10"/></name><argument_list pos:line="158" pos:column="10">(<argument><expr><name pos:line="158" pos:column="11">tmpSocket<pos:position pos:line="158" pos:column="20"/></name></expr></argument>)<pos:position pos:line="158" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="22"/></expr_stmt>

<cpp:elif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">elif<pos:position pos:line="160" pos:column="6"/></cpp:directive> <expr><name pos:line="160" pos:column="7">_SQUID_SOLARIS_<pos:position pos:line="160" pos:column="22"/></name></expr></cpp:elif>

    <comment type="block" pos:line="162" pos:column="5">/* IPv6 builds do not provide the first http_port as an IPv4 socket for ARP */</comment>
    <decl_stmt><decl><type><name pos:line="163" pos:column="5">int<pos:position pos:line="163" pos:column="8"/></name></type> <name pos:line="163" pos:column="9">tmpSocket<pos:position pos:line="163" pos:column="18"/></name> <init pos:line="163" pos:column="19">= <expr><call><name pos:line="163" pos:column="21">socket<pos:position pos:line="163" pos:column="27"/></name><argument_list pos:line="163" pos:column="27">(<argument><expr><name pos:line="163" pos:column="28">AF_INET<pos:position pos:line="163" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="163" pos:column="36">SOCK_STREAM<pos:position pos:line="163" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="163" pos:column="48">0<pos:position pos:line="163" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="163" pos:column="51"/></decl_stmt>
    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><name pos:line="164" pos:column="9">tmpSocket<pos:position pos:line="164" pos:column="18"/></name> <operator pos:line="164" pos:column="19">&lt;<pos:position pos:line="164" pos:column="23"/></operator> <literal type="number" pos:line="164" pos:column="21">0<pos:position pos:line="164" pos:column="22"/></literal></expr>)<pos:position pos:line="164" pos:column="23"/></condition><then pos:line="164" pos:column="23"> <block pos:line="164" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="165" pos:column="9">debugs<pos:position pos:line="165" pos:column="15"/></name><argument_list pos:line="165" pos:column="15">(<argument><expr><literal type="number" pos:line="165" pos:column="16">28<pos:position pos:line="165" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="20">DBG_IMPORTANT<pos:position pos:line="165" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="35">"Attempt to open socket for EUI retrieval failed: "<pos:position pos:line="165" pos:column="86"/></literal> <operator pos:line="165" pos:column="87">&lt;&lt;<pos:position pos:line="165" pos:column="95"/></operator> <call><name pos:line="165" pos:column="90">xstrerror<pos:position pos:line="165" pos:column="99"/></name><argument_list pos:line="165" pos:column="99">()<pos:position pos:line="165" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="165" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">clear<pos:position pos:line="166" pos:column="14"/></name><argument_list pos:line="166" pos:column="14">()<pos:position pos:line="166" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="17"/></expr_stmt>
        <return pos:line="167" pos:column="9">return <expr><literal type="boolean" pos:line="167" pos:column="16">false<pos:position pos:line="167" pos:column="21"/></literal></expr>;<pos:position pos:line="167" pos:column="22"/></return>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="170" pos:column="5">/* Set up structures for ARP lookup with blank interface name */</comment>
    <decl_stmt><decl><type><name><name pos:line="171" pos:column="5">struct<pos:position pos:line="171" pos:column="11"/></name> <name pos:line="171" pos:column="12">arpreq<pos:position pos:line="171" pos:column="18"/></name></name></type> <name pos:line="171" pos:column="19">arpReq<pos:position pos:line="171" pos:column="25"/></name></decl>;<pos:position pos:line="171" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">memset<pos:position pos:line="172" pos:column="11"/></name><argument_list pos:line="172" pos:column="11">(<argument><expr><operator pos:line="172" pos:column="12">&amp;<pos:position pos:line="172" pos:column="17"/></operator><name pos:line="172" pos:column="13">arpReq<pos:position pos:line="172" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="172" pos:column="21">'\0'<pos:position pos:line="172" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="172" pos:column="27">sizeof<argument_list pos:line="172" pos:column="33">(<argument><expr><name pos:line="172" pos:column="34">arpReq<pos:position pos:line="172" pos:column="40"/></name></expr></argument>)<pos:position pos:line="172" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="172" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="174" pos:column="5">struct<pos:position pos:line="174" pos:column="11"/></name> <name pos:line="174" pos:column="12">sockaddr_in<pos:position pos:line="174" pos:column="23"/></name></name> <modifier pos:line="174" pos:column="24">*<pos:position pos:line="174" pos:column="25"/></modifier></type><name pos:line="174" pos:column="25">sa<pos:position pos:line="174" pos:column="27"/></name> <init pos:line="174" pos:column="28">= <expr><operator pos:line="174" pos:column="30">(<pos:position pos:line="174" pos:column="31"/></operator>struct <name pos:line="174" pos:column="38">sockaddr_in<pos:position pos:line="174" pos:column="49"/></name><operator pos:line="174" pos:column="49">*<pos:position pos:line="174" pos:column="50"/></operator><operator pos:line="174" pos:column="50">)<pos:position pos:line="174" pos:column="51"/></operator><operator pos:line="174" pos:column="51">&amp;<pos:position pos:line="174" pos:column="56"/></operator><name><name pos:line="174" pos:column="52">arpReq<pos:position pos:line="174" pos:column="58"/></name><operator pos:line="174" pos:column="58">.<pos:position pos:line="174" pos:column="59"/></operator><name pos:line="174" pos:column="59">arp_pa<pos:position pos:line="174" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="174" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="175" pos:column="5">ipAddr<pos:position pos:line="175" pos:column="11"/></name><operator pos:line="175" pos:column="11">.<pos:position pos:line="175" pos:column="12"/></operator><name pos:line="175" pos:column="12">GetSockAddr<pos:position pos:line="175" pos:column="23"/></name></name><argument_list pos:line="175" pos:column="23">(<argument><expr><operator pos:line="175" pos:column="24">*<pos:position pos:line="175" pos:column="25"/></operator><name pos:line="175" pos:column="25">sa<pos:position pos:line="175" pos:column="27"/></name></expr></argument>)<pos:position pos:line="175" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="177" pos:column="5">/* Query ARP table */</comment>
    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><call><name pos:line="178" pos:column="9">ioctl<pos:position pos:line="178" pos:column="14"/></name><argument_list pos:line="178" pos:column="14">(<argument><expr><name pos:line="178" pos:column="15">tmpSocket<pos:position pos:line="178" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="26">SIOCGARP<pos:position pos:line="178" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="178" pos:column="36">&amp;<pos:position pos:line="178" pos:column="41"/></operator><name pos:line="178" pos:column="37">arpReq<pos:position pos:line="178" pos:column="43"/></name></expr></argument>)<pos:position pos:line="178" pos:column="44"/></argument_list></call> <operator pos:line="178" pos:column="45">!=<pos:position pos:line="178" pos:column="47"/></operator> <operator pos:line="178" pos:column="48">-<pos:position pos:line="178" pos:column="49"/></operator><literal type="number" pos:line="178" pos:column="49">1<pos:position pos:line="178" pos:column="50"/></literal></expr>)<pos:position pos:line="178" pos:column="51"/></condition><then pos:line="178" pos:column="51"> <block pos:line="178" pos:column="52">{
        <comment type="block" pos:line="179" pos:column="9">/*
        *  Solaris (at least 2.6/x86) does not use arp_ha.sa_family -
        * it returns 00:00:00:00:00:00 for non-ethernet media
        */</comment>
        <expr_stmt><expr><call><name pos:line="183" pos:column="9">close<pos:position pos:line="183" pos:column="14"/></name><argument_list pos:line="183" pos:column="14">(<argument><expr><name pos:line="183" pos:column="15">tmpSocket<pos:position pos:line="183" pos:column="24"/></name></expr></argument>)<pos:position pos:line="183" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="26"/></expr_stmt>

        <if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name><name pos:line="185" pos:column="13">arpReq<pos:position pos:line="185" pos:column="19"/></name><operator pos:line="185" pos:column="19">.<pos:position pos:line="185" pos:column="20"/></operator><name pos:line="185" pos:column="20">arp_ha<pos:position pos:line="185" pos:column="26"/></name><operator pos:line="185" pos:column="26">.<pos:position pos:line="185" pos:column="27"/></operator><name pos:line="185" pos:column="27">sa_data<pos:position pos:line="185" pos:column="34"/></name><index pos:line="185" pos:column="34">[<expr><literal type="number" pos:line="185" pos:column="35">0<pos:position pos:line="185" pos:column="36"/></literal></expr>]<pos:position pos:line="185" pos:column="37"/></index></name> <operator pos:line="185" pos:column="38">==<pos:position pos:line="185" pos:column="40"/></operator> <literal type="number" pos:line="185" pos:column="41">0<pos:position pos:line="185" pos:column="42"/></literal> <operator pos:line="185" pos:column="43">&amp;&amp;<pos:position pos:line="185" pos:column="53"/></operator>
                <name><name pos:line="186" pos:column="17">arpReq<pos:position pos:line="186" pos:column="23"/></name><operator pos:line="186" pos:column="23">.<pos:position pos:line="186" pos:column="24"/></operator><name pos:line="186" pos:column="24">arp_ha<pos:position pos:line="186" pos:column="30"/></name><operator pos:line="186" pos:column="30">.<pos:position pos:line="186" pos:column="31"/></operator><name pos:line="186" pos:column="31">sa_data<pos:position pos:line="186" pos:column="38"/></name><index pos:line="186" pos:column="38">[<expr><literal type="number" pos:line="186" pos:column="39">1<pos:position pos:line="186" pos:column="40"/></literal></expr>]<pos:position pos:line="186" pos:column="41"/></index></name> <operator pos:line="186" pos:column="42">==<pos:position pos:line="186" pos:column="44"/></operator> <literal type="number" pos:line="186" pos:column="45">0<pos:position pos:line="186" pos:column="46"/></literal> <operator pos:line="186" pos:column="47">&amp;&amp;<pos:position pos:line="186" pos:column="57"/></operator>
                <name><name pos:line="187" pos:column="17">arpReq<pos:position pos:line="187" pos:column="23"/></name><operator pos:line="187" pos:column="23">.<pos:position pos:line="187" pos:column="24"/></operator><name pos:line="187" pos:column="24">arp_ha<pos:position pos:line="187" pos:column="30"/></name><operator pos:line="187" pos:column="30">.<pos:position pos:line="187" pos:column="31"/></operator><name pos:line="187" pos:column="31">sa_data<pos:position pos:line="187" pos:column="38"/></name><index pos:line="187" pos:column="38">[<expr><literal type="number" pos:line="187" pos:column="39">2<pos:position pos:line="187" pos:column="40"/></literal></expr>]<pos:position pos:line="187" pos:column="41"/></index></name> <operator pos:line="187" pos:column="42">==<pos:position pos:line="187" pos:column="44"/></operator> <literal type="number" pos:line="187" pos:column="45">0<pos:position pos:line="187" pos:column="46"/></literal> <operator pos:line="187" pos:column="47">&amp;&amp;<pos:position pos:line="187" pos:column="57"/></operator>
                <name><name pos:line="188" pos:column="17">arpReq<pos:position pos:line="188" pos:column="23"/></name><operator pos:line="188" pos:column="23">.<pos:position pos:line="188" pos:column="24"/></operator><name pos:line="188" pos:column="24">arp_ha<pos:position pos:line="188" pos:column="30"/></name><operator pos:line="188" pos:column="30">.<pos:position pos:line="188" pos:column="31"/></operator><name pos:line="188" pos:column="31">sa_data<pos:position pos:line="188" pos:column="38"/></name><index pos:line="188" pos:column="38">[<expr><literal type="number" pos:line="188" pos:column="39">3<pos:position pos:line="188" pos:column="40"/></literal></expr>]<pos:position pos:line="188" pos:column="41"/></index></name> <operator pos:line="188" pos:column="42">==<pos:position pos:line="188" pos:column="44"/></operator> <literal type="number" pos:line="188" pos:column="45">0<pos:position pos:line="188" pos:column="46"/></literal> <operator pos:line="188" pos:column="47">&amp;&amp;<pos:position pos:line="188" pos:column="57"/></operator>
                <name><name pos:line="189" pos:column="17">arpReq<pos:position pos:line="189" pos:column="23"/></name><operator pos:line="189" pos:column="23">.<pos:position pos:line="189" pos:column="24"/></operator><name pos:line="189" pos:column="24">arp_ha<pos:position pos:line="189" pos:column="30"/></name><operator pos:line="189" pos:column="30">.<pos:position pos:line="189" pos:column="31"/></operator><name pos:line="189" pos:column="31">sa_data<pos:position pos:line="189" pos:column="38"/></name><index pos:line="189" pos:column="38">[<expr><literal type="number" pos:line="189" pos:column="39">4<pos:position pos:line="189" pos:column="40"/></literal></expr>]<pos:position pos:line="189" pos:column="41"/></index></name> <operator pos:line="189" pos:column="42">==<pos:position pos:line="189" pos:column="44"/></operator> <literal type="number" pos:line="189" pos:column="45">0<pos:position pos:line="189" pos:column="46"/></literal> <operator pos:line="189" pos:column="47">&amp;&amp;<pos:position pos:line="189" pos:column="57"/></operator> <name><name pos:line="189" pos:column="50">arpReq<pos:position pos:line="189" pos:column="56"/></name><operator pos:line="189" pos:column="56">.<pos:position pos:line="189" pos:column="57"/></operator><name pos:line="189" pos:column="57">arp_ha<pos:position pos:line="189" pos:column="63"/></name><operator pos:line="189" pos:column="63">.<pos:position pos:line="189" pos:column="64"/></operator><name pos:line="189" pos:column="64">sa_data<pos:position pos:line="189" pos:column="71"/></name><index pos:line="189" pos:column="71">[<expr><literal type="number" pos:line="189" pos:column="72">5<pos:position pos:line="189" pos:column="73"/></literal></expr>]<pos:position pos:line="189" pos:column="74"/></index></name> <operator pos:line="189" pos:column="75">==<pos:position pos:line="189" pos:column="77"/></operator> <literal type="number" pos:line="189" pos:column="78">0<pos:position pos:line="189" pos:column="79"/></literal></expr>)<pos:position pos:line="189" pos:column="80"/></condition><then pos:line="189" pos:column="80"> <block pos:line="189" pos:column="81">{
            <expr_stmt><expr><call><name pos:line="190" pos:column="13">clear<pos:position pos:line="190" pos:column="18"/></name><argument_list pos:line="190" pos:column="18">()<pos:position pos:line="190" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="21"/></expr_stmt>
            <return pos:line="191" pos:column="13">return <expr><literal type="boolean" pos:line="191" pos:column="20">false<pos:position pos:line="191" pos:column="25"/></literal></expr>;<pos:position pos:line="191" pos:column="26"/></return>
        }<pos:position pos:line="192" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="194" pos:column="9">debugs<pos:position pos:line="194" pos:column="15"/></name><argument_list pos:line="194" pos:column="15">(<argument><expr><literal type="number" pos:line="194" pos:column="16">28<pos:position pos:line="194" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="194" pos:column="20">4<pos:position pos:line="194" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="23">"Got address "<pos:position pos:line="194" pos:column="37"/></literal><operator pos:line="194" pos:column="37">&lt;&lt;<pos:position pos:line="194" pos:column="45"/></operator> <call><name><name pos:line="194" pos:column="40">std<pos:position pos:line="194" pos:column="43"/></name><operator pos:line="194" pos:column="43">::<pos:position pos:line="194" pos:column="45"/></operator><name pos:line="194" pos:column="45">setfill<pos:position pos:line="194" pos:column="52"/></name></name><argument_list pos:line="194" pos:column="52">(<argument><expr><literal type="char" pos:line="194" pos:column="53">'0'<pos:position pos:line="194" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="57"/></argument_list></call> <operator pos:line="194" pos:column="58">&lt;&lt;<pos:position pos:line="194" pos:column="66"/></operator> <name><name pos:line="194" pos:column="61">std<pos:position pos:line="194" pos:column="64"/></name><operator pos:line="194" pos:column="64">::<pos:position pos:line="194" pos:column="66"/></operator><name pos:line="194" pos:column="66">hex<pos:position pos:line="194" pos:column="69"/></name></name> <operator pos:line="194" pos:column="70">&lt;&lt;<pos:position pos:line="194" pos:column="78"/></operator>
               <call><name><name pos:line="195" pos:column="16">std<pos:position pos:line="195" pos:column="19"/></name><operator pos:line="195" pos:column="19">::<pos:position pos:line="195" pos:column="21"/></operator><name pos:line="195" pos:column="21">setw<pos:position pos:line="195" pos:column="25"/></name></name><argument_list pos:line="195" pos:column="25">(<argument><expr><literal type="number" pos:line="195" pos:column="26">2<pos:position pos:line="195" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="28"/></argument_list></call> <operator pos:line="195" pos:column="29">&lt;&lt;<pos:position pos:line="195" pos:column="37"/></operator> <operator pos:line="195" pos:column="32">(<pos:position pos:line="195" pos:column="33"/></operator><name><name pos:line="195" pos:column="33">arpReq<pos:position pos:line="195" pos:column="39"/></name><operator pos:line="195" pos:column="39">.<pos:position pos:line="195" pos:column="40"/></operator><name pos:line="195" pos:column="40">arp_ha<pos:position pos:line="195" pos:column="46"/></name><operator pos:line="195" pos:column="46">.<pos:position pos:line="195" pos:column="47"/></operator><name pos:line="195" pos:column="47">sa_data<pos:position pos:line="195" pos:column="54"/></name><index pos:line="195" pos:column="54">[<expr><literal type="number" pos:line="195" pos:column="55">0<pos:position pos:line="195" pos:column="56"/></literal></expr>]<pos:position pos:line="195" pos:column="57"/></index></name> <operator pos:line="195" pos:column="58">&amp;<pos:position pos:line="195" pos:column="63"/></operator> <literal type="number" pos:line="195" pos:column="60">0xff<pos:position pos:line="195" pos:column="64"/></literal><operator pos:line="195" pos:column="64">)<pos:position pos:line="195" pos:column="65"/></operator>  <operator pos:line="195" pos:column="67">&lt;&lt;<pos:position pos:line="195" pos:column="75"/></operator> <literal type="string" pos:line="195" pos:column="70">":"<pos:position pos:line="195" pos:column="73"/></literal> <operator pos:line="195" pos:column="74">&lt;&lt;<pos:position pos:line="195" pos:column="82"/></operator>
               <call><name><name pos:line="196" pos:column="16">std<pos:position pos:line="196" pos:column="19"/></name><operator pos:line="196" pos:column="19">::<pos:position pos:line="196" pos:column="21"/></operator><name pos:line="196" pos:column="21">setw<pos:position pos:line="196" pos:column="25"/></name></name><argument_list pos:line="196" pos:column="25">(<argument><expr><literal type="number" pos:line="196" pos:column="26">2<pos:position pos:line="196" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="28"/></argument_list></call> <operator pos:line="196" pos:column="29">&lt;&lt;<pos:position pos:line="196" pos:column="37"/></operator> <operator pos:line="196" pos:column="32">(<pos:position pos:line="196" pos:column="33"/></operator><name><name pos:line="196" pos:column="33">arpReq<pos:position pos:line="196" pos:column="39"/></name><operator pos:line="196" pos:column="39">.<pos:position pos:line="196" pos:column="40"/></operator><name pos:line="196" pos:column="40">arp_ha<pos:position pos:line="196" pos:column="46"/></name><operator pos:line="196" pos:column="46">.<pos:position pos:line="196" pos:column="47"/></operator><name pos:line="196" pos:column="47">sa_data<pos:position pos:line="196" pos:column="54"/></name><index pos:line="196" pos:column="54">[<expr><literal type="number" pos:line="196" pos:column="55">1<pos:position pos:line="196" pos:column="56"/></literal></expr>]<pos:position pos:line="196" pos:column="57"/></index></name> <operator pos:line="196" pos:column="58">&amp;<pos:position pos:line="196" pos:column="63"/></operator> <literal type="number" pos:line="196" pos:column="60">0xff<pos:position pos:line="196" pos:column="64"/></literal><operator pos:line="196" pos:column="64">)<pos:position pos:line="196" pos:column="65"/></operator>  <operator pos:line="196" pos:column="67">&lt;&lt;<pos:position pos:line="196" pos:column="75"/></operator> <literal type="string" pos:line="196" pos:column="70">":"<pos:position pos:line="196" pos:column="73"/></literal> <operator pos:line="196" pos:column="74">&lt;&lt;<pos:position pos:line="196" pos:column="82"/></operator>
               <call><name><name pos:line="197" pos:column="16">std<pos:position pos:line="197" pos:column="19"/></name><operator pos:line="197" pos:column="19">::<pos:position pos:line="197" pos:column="21"/></operator><name pos:line="197" pos:column="21">setw<pos:position pos:line="197" pos:column="25"/></name></name><argument_list pos:line="197" pos:column="25">(<argument><expr><literal type="number" pos:line="197" pos:column="26">2<pos:position pos:line="197" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="28"/></argument_list></call> <operator pos:line="197" pos:column="29">&lt;&lt;<pos:position pos:line="197" pos:column="37"/></operator> <operator pos:line="197" pos:column="32">(<pos:position pos:line="197" pos:column="33"/></operator><name><name pos:line="197" pos:column="33">arpReq<pos:position pos:line="197" pos:column="39"/></name><operator pos:line="197" pos:column="39">.<pos:position pos:line="197" pos:column="40"/></operator><name pos:line="197" pos:column="40">arp_ha<pos:position pos:line="197" pos:column="46"/></name><operator pos:line="197" pos:column="46">.<pos:position pos:line="197" pos:column="47"/></operator><name pos:line="197" pos:column="47">sa_data<pos:position pos:line="197" pos:column="54"/></name><index pos:line="197" pos:column="54">[<expr><literal type="number" pos:line="197" pos:column="55">2<pos:position pos:line="197" pos:column="56"/></literal></expr>]<pos:position pos:line="197" pos:column="57"/></index></name> <operator pos:line="197" pos:column="58">&amp;<pos:position pos:line="197" pos:column="63"/></operator> <literal type="number" pos:line="197" pos:column="60">0xff<pos:position pos:line="197" pos:column="64"/></literal><operator pos:line="197" pos:column="64">)<pos:position pos:line="197" pos:column="65"/></operator>  <operator pos:line="197" pos:column="67">&lt;&lt;<pos:position pos:line="197" pos:column="75"/></operator> <literal type="string" pos:line="197" pos:column="70">":"<pos:position pos:line="197" pos:column="73"/></literal> <operator pos:line="197" pos:column="74">&lt;&lt;<pos:position pos:line="197" pos:column="82"/></operator>
               <call><name><name pos:line="198" pos:column="16">std<pos:position pos:line="198" pos:column="19"/></name><operator pos:line="198" pos:column="19">::<pos:position pos:line="198" pos:column="21"/></operator><name pos:line="198" pos:column="21">setw<pos:position pos:line="198" pos:column="25"/></name></name><argument_list pos:line="198" pos:column="25">(<argument><expr><literal type="number" pos:line="198" pos:column="26">2<pos:position pos:line="198" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="28"/></argument_list></call> <operator pos:line="198" pos:column="29">&lt;&lt;<pos:position pos:line="198" pos:column="37"/></operator> <operator pos:line="198" pos:column="32">(<pos:position pos:line="198" pos:column="33"/></operator><name><name pos:line="198" pos:column="33">arpReq<pos:position pos:line="198" pos:column="39"/></name><operator pos:line="198" pos:column="39">.<pos:position pos:line="198" pos:column="40"/></operator><name pos:line="198" pos:column="40">arp_ha<pos:position pos:line="198" pos:column="46"/></name><operator pos:line="198" pos:column="46">.<pos:position pos:line="198" pos:column="47"/></operator><name pos:line="198" pos:column="47">sa_data<pos:position pos:line="198" pos:column="54"/></name><index pos:line="198" pos:column="54">[<expr><literal type="number" pos:line="198" pos:column="55">3<pos:position pos:line="198" pos:column="56"/></literal></expr>]<pos:position pos:line="198" pos:column="57"/></index></name> <operator pos:line="198" pos:column="58">&amp;<pos:position pos:line="198" pos:column="63"/></operator> <literal type="number" pos:line="198" pos:column="60">0xff<pos:position pos:line="198" pos:column="64"/></literal><operator pos:line="198" pos:column="64">)<pos:position pos:line="198" pos:column="65"/></operator>  <operator pos:line="198" pos:column="67">&lt;&lt;<pos:position pos:line="198" pos:column="75"/></operator> <literal type="string" pos:line="198" pos:column="70">":"<pos:position pos:line="198" pos:column="73"/></literal> <operator pos:line="198" pos:column="74">&lt;&lt;<pos:position pos:line="198" pos:column="82"/></operator>
               <call><name><name pos:line="199" pos:column="16">std<pos:position pos:line="199" pos:column="19"/></name><operator pos:line="199" pos:column="19">::<pos:position pos:line="199" pos:column="21"/></operator><name pos:line="199" pos:column="21">setw<pos:position pos:line="199" pos:column="25"/></name></name><argument_list pos:line="199" pos:column="25">(<argument><expr><literal type="number" pos:line="199" pos:column="26">2<pos:position pos:line="199" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="28"/></argument_list></call> <operator pos:line="199" pos:column="29">&lt;&lt;<pos:position pos:line="199" pos:column="37"/></operator> <operator pos:line="199" pos:column="32">(<pos:position pos:line="199" pos:column="33"/></operator><name><name pos:line="199" pos:column="33">arpReq<pos:position pos:line="199" pos:column="39"/></name><operator pos:line="199" pos:column="39">.<pos:position pos:line="199" pos:column="40"/></operator><name pos:line="199" pos:column="40">arp_ha<pos:position pos:line="199" pos:column="46"/></name><operator pos:line="199" pos:column="46">.<pos:position pos:line="199" pos:column="47"/></operator><name pos:line="199" pos:column="47">sa_data<pos:position pos:line="199" pos:column="54"/></name><index pos:line="199" pos:column="54">[<expr><literal type="number" pos:line="199" pos:column="55">4<pos:position pos:line="199" pos:column="56"/></literal></expr>]<pos:position pos:line="199" pos:column="57"/></index></name> <operator pos:line="199" pos:column="58">&amp;<pos:position pos:line="199" pos:column="63"/></operator> <literal type="number" pos:line="199" pos:column="60">0xff<pos:position pos:line="199" pos:column="64"/></literal><operator pos:line="199" pos:column="64">)<pos:position pos:line="199" pos:column="65"/></operator>  <operator pos:line="199" pos:column="67">&lt;&lt;<pos:position pos:line="199" pos:column="75"/></operator> <literal type="string" pos:line="199" pos:column="70">":"<pos:position pos:line="199" pos:column="73"/></literal> <operator pos:line="199" pos:column="74">&lt;&lt;<pos:position pos:line="199" pos:column="82"/></operator>
               <call><name><name pos:line="200" pos:column="16">std<pos:position pos:line="200" pos:column="19"/></name><operator pos:line="200" pos:column="19">::<pos:position pos:line="200" pos:column="21"/></operator><name pos:line="200" pos:column="21">setw<pos:position pos:line="200" pos:column="25"/></name></name><argument_list pos:line="200" pos:column="25">(<argument><expr><literal type="number" pos:line="200" pos:column="26">2<pos:position pos:line="200" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="28"/></argument_list></call> <operator pos:line="200" pos:column="29">&lt;&lt;<pos:position pos:line="200" pos:column="37"/></operator> <operator pos:line="200" pos:column="32">(<pos:position pos:line="200" pos:column="33"/></operator><name><name pos:line="200" pos:column="33">arpReq<pos:position pos:line="200" pos:column="39"/></name><operator pos:line="200" pos:column="39">.<pos:position pos:line="200" pos:column="40"/></operator><name pos:line="200" pos:column="40">arp_ha<pos:position pos:line="200" pos:column="46"/></name><operator pos:line="200" pos:column="46">.<pos:position pos:line="200" pos:column="47"/></operator><name pos:line="200" pos:column="47">sa_data<pos:position pos:line="200" pos:column="54"/></name><index pos:line="200" pos:column="54">[<expr><literal type="number" pos:line="200" pos:column="55">5<pos:position pos:line="200" pos:column="56"/></literal></expr>]<pos:position pos:line="200" pos:column="57"/></index></name> <operator pos:line="200" pos:column="58">&amp;<pos:position pos:line="200" pos:column="63"/></operator> <literal type="number" pos:line="200" pos:column="60">0xff<pos:position pos:line="200" pos:column="64"/></literal><operator pos:line="200" pos:column="64">)<pos:position pos:line="200" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="200" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="67"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="202" pos:column="9">set<pos:position pos:line="202" pos:column="12"/></name><argument_list pos:line="202" pos:column="12">(<argument><expr><name><name pos:line="202" pos:column="13">arpReq<pos:position pos:line="202" pos:column="19"/></name><operator pos:line="202" pos:column="19">.<pos:position pos:line="202" pos:column="20"/></operator><name pos:line="202" pos:column="20">arp_ha<pos:position pos:line="202" pos:column="26"/></name><operator pos:line="202" pos:column="26">.<pos:position pos:line="202" pos:column="27"/></operator><name pos:line="202" pos:column="27">sa_data<pos:position pos:line="202" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="36">6<pos:position pos:line="202" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="39"/></expr_stmt>
        <return pos:line="203" pos:column="9">return <expr><literal type="boolean" pos:line="203" pos:column="16">true<pos:position pos:line="203" pos:column="20"/></literal></expr>;<pos:position pos:line="203" pos:column="21"/></return>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>

<cpp:elif pos:line="206" pos:column="1">#<cpp:directive pos:line="206" pos:column="2">elif<pos:position pos:line="206" pos:column="6"/></cpp:directive> <expr><name pos:line="206" pos:column="7">_SQUID_FREEBSD_<pos:position pos:line="206" pos:column="22"/></name> <operator pos:line="206" pos:column="23">||<pos:position pos:line="206" pos:column="25"/></operator> <name pos:line="206" pos:column="26">_SQUID_NETBSD_<pos:position pos:line="206" pos:column="40"/></name> <operator pos:line="206" pos:column="41">||<pos:position pos:line="206" pos:column="43"/></operator> <name pos:line="206" pos:column="44">_SQUID_OPENBSD_<pos:position pos:line="206" pos:column="59"/></name> <operator pos:line="206" pos:column="60">||<pos:position pos:line="206" pos:column="62"/></operator> <name pos:line="206" pos:column="63">_SQUID_DRAGONFLY_<pos:position pos:line="206" pos:column="80"/></name> <operator pos:line="206" pos:column="81">||<pos:position pos:line="206" pos:column="83"/></operator> <name pos:line="206" pos:column="84">_SQUID_KFREEBSD_<pos:position pos:line="206" pos:column="100"/></name></expr></cpp:elif>

    <decl_stmt><decl><type><name pos:line="208" pos:column="5">int<pos:position pos:line="208" pos:column="8"/></name></type> <name><name pos:line="208" pos:column="9">mib<pos:position pos:line="208" pos:column="12"/></name><index pos:line="208" pos:column="12">[<expr><literal type="number" pos:line="208" pos:column="13">6<pos:position pos:line="208" pos:column="14"/></literal></expr>]<pos:position pos:line="208" pos:column="15"/></index></name></decl>;<pos:position pos:line="208" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="210" pos:column="5">size_t<pos:position pos:line="210" pos:column="11"/></name></type> <name pos:line="210" pos:column="12">needed<pos:position pos:line="210" pos:column="18"/></name></decl>;<pos:position pos:line="210" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="212" pos:column="5">char<pos:position pos:line="212" pos:column="9"/></name> <modifier pos:line="212" pos:column="10">*<pos:position pos:line="212" pos:column="11"/></modifier></type><name pos:line="212" pos:column="11">lim<pos:position pos:line="212" pos:column="14"/></name></decl>, <modifier pos:line="212" pos:column="16">*<pos:position pos:line="212" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="212" pos:column="17">buf<pos:position pos:line="212" pos:column="20"/></name></decl>, <modifier pos:line="212" pos:column="22">*<pos:position pos:line="212" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="212" pos:column="23">next<pos:position pos:line="212" pos:column="27"/></name></decl>;<pos:position pos:line="212" pos:column="28"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="214" pos:column="5">struct<pos:position pos:line="214" pos:column="11"/></name> <name pos:line="214" pos:column="12">rt_msghdr<pos:position pos:line="214" pos:column="21"/></name></name> <modifier pos:line="214" pos:column="22">*<pos:position pos:line="214" pos:column="23"/></modifier></type><name pos:line="214" pos:column="23">rtm<pos:position pos:line="214" pos:column="26"/></name></decl>;<pos:position pos:line="214" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="216" pos:column="5">struct<pos:position pos:line="216" pos:column="11"/></name> <name pos:line="216" pos:column="12">sockaddr_inarp<pos:position pos:line="216" pos:column="26"/></name></name> <modifier pos:line="216" pos:column="27">*<pos:position pos:line="216" pos:column="28"/></modifier></type><name pos:line="216" pos:column="28">sin<pos:position pos:line="216" pos:column="31"/></name></decl>;<pos:position pos:line="216" pos:column="32"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="218" pos:column="5">struct<pos:position pos:line="218" pos:column="11"/></name> <name pos:line="218" pos:column="12">sockaddr_dl<pos:position pos:line="218" pos:column="23"/></name></name> <modifier pos:line="218" pos:column="24">*<pos:position pos:line="218" pos:column="25"/></modifier></type><name pos:line="218" pos:column="25">sdl<pos:position pos:line="218" pos:column="28"/></name></decl>;<pos:position pos:line="218" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="220" pos:column="5">/*
    * Set up structures for ARP lookup with blank interface name
    */</comment>
    <decl_stmt><decl><type><name><name pos:line="223" pos:column="5">struct<pos:position pos:line="223" pos:column="11"/></name> <name pos:line="223" pos:column="12">arpreq<pos:position pos:line="223" pos:column="18"/></name></name></type> <name pos:line="223" pos:column="19">arpReq<pos:position pos:line="223" pos:column="25"/></name></decl>;<pos:position pos:line="223" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="224" pos:column="5">memset<pos:position pos:line="224" pos:column="11"/></name><argument_list pos:line="224" pos:column="11">(<argument><expr><operator pos:line="224" pos:column="12">&amp;<pos:position pos:line="224" pos:column="17"/></operator><name pos:line="224" pos:column="13">arpReq<pos:position pos:line="224" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="224" pos:column="21">'\0'<pos:position pos:line="224" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="224" pos:column="27">sizeof<argument_list pos:line="224" pos:column="33">(<argument><expr><name pos:line="224" pos:column="34">arpReq<pos:position pos:line="224" pos:column="40"/></name></expr></argument>)<pos:position pos:line="224" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="224" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="226" pos:column="5">struct<pos:position pos:line="226" pos:column="11"/></name> <name pos:line="226" pos:column="12">sockaddr_in<pos:position pos:line="226" pos:column="23"/></name></name> <modifier pos:line="226" pos:column="24">*<pos:position pos:line="226" pos:column="25"/></modifier></type><name pos:line="226" pos:column="25">sa<pos:position pos:line="226" pos:column="27"/></name> <init pos:line="226" pos:column="28">= <expr><operator pos:line="226" pos:column="30">(<pos:position pos:line="226" pos:column="31"/></operator>struct <name pos:line="226" pos:column="38">sockaddr_in<pos:position pos:line="226" pos:column="49"/></name><operator pos:line="226" pos:column="49">*<pos:position pos:line="226" pos:column="50"/></operator><operator pos:line="226" pos:column="50">)<pos:position pos:line="226" pos:column="51"/></operator><operator pos:line="226" pos:column="51">&amp;<pos:position pos:line="226" pos:column="56"/></operator><name><name pos:line="226" pos:column="52">arpReq<pos:position pos:line="226" pos:column="58"/></name><operator pos:line="226" pos:column="58">.<pos:position pos:line="226" pos:column="59"/></operator><name pos:line="226" pos:column="59">arp_pa<pos:position pos:line="226" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="226" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="227" pos:column="5">ipAddr<pos:position pos:line="227" pos:column="11"/></name><operator pos:line="227" pos:column="11">.<pos:position pos:line="227" pos:column="12"/></operator><name pos:line="227" pos:column="12">GetSockAddr<pos:position pos:line="227" pos:column="23"/></name></name><argument_list pos:line="227" pos:column="23">(<argument><expr><operator pos:line="227" pos:column="24">*<pos:position pos:line="227" pos:column="25"/></operator><name pos:line="227" pos:column="25">sa<pos:position pos:line="227" pos:column="27"/></name></expr></argument>)<pos:position pos:line="227" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="29"/></expr_stmt>

    <comment type="block" pos:line="229" pos:column="5">/* Query ARP table */</comment>
    <expr_stmt><expr><name><name pos:line="230" pos:column="5">mib<pos:position pos:line="230" pos:column="8"/></name><index pos:line="230" pos:column="8">[<expr><literal type="number" pos:line="230" pos:column="9">0<pos:position pos:line="230" pos:column="10"/></literal></expr>]<pos:position pos:line="230" pos:column="11"/></index></name> <operator pos:line="230" pos:column="12">=<pos:position pos:line="230" pos:column="13"/></operator> <name pos:line="230" pos:column="14">CTL_NET<pos:position pos:line="230" pos:column="21"/></name></expr>;<pos:position pos:line="230" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="232" pos:column="5">mib<pos:position pos:line="232" pos:column="8"/></name><index pos:line="232" pos:column="8">[<expr><literal type="number" pos:line="232" pos:column="9">1<pos:position pos:line="232" pos:column="10"/></literal></expr>]<pos:position pos:line="232" pos:column="11"/></index></name> <operator pos:line="232" pos:column="12">=<pos:position pos:line="232" pos:column="13"/></operator> <name pos:line="232" pos:column="14">PF_ROUTE<pos:position pos:line="232" pos:column="22"/></name></expr>;<pos:position pos:line="232" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="234" pos:column="5">mib<pos:position pos:line="234" pos:column="8"/></name><index pos:line="234" pos:column="8">[<expr><literal type="number" pos:line="234" pos:column="9">2<pos:position pos:line="234" pos:column="10"/></literal></expr>]<pos:position pos:line="234" pos:column="11"/></index></name> <operator pos:line="234" pos:column="12">=<pos:position pos:line="234" pos:column="13"/></operator> <literal type="number" pos:line="234" pos:column="14">0<pos:position pos:line="234" pos:column="15"/></literal></expr>;<pos:position pos:line="234" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="236" pos:column="5">mib<pos:position pos:line="236" pos:column="8"/></name><index pos:line="236" pos:column="8">[<expr><literal type="number" pos:line="236" pos:column="9">3<pos:position pos:line="236" pos:column="10"/></literal></expr>]<pos:position pos:line="236" pos:column="11"/></index></name> <operator pos:line="236" pos:column="12">=<pos:position pos:line="236" pos:column="13"/></operator> <name pos:line="236" pos:column="14">AF_INET<pos:position pos:line="236" pos:column="21"/></name></expr>;<pos:position pos:line="236" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="238" pos:column="5">mib<pos:position pos:line="238" pos:column="8"/></name><index pos:line="238" pos:column="8">[<expr><literal type="number" pos:line="238" pos:column="9">4<pos:position pos:line="238" pos:column="10"/></literal></expr>]<pos:position pos:line="238" pos:column="11"/></index></name> <operator pos:line="238" pos:column="12">=<pos:position pos:line="238" pos:column="13"/></operator> <name pos:line="238" pos:column="14">NET_RT_FLAGS<pos:position pos:line="238" pos:column="26"/></name></expr>;<pos:position pos:line="238" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="240" pos:column="5">mib<pos:position pos:line="240" pos:column="8"/></name><index pos:line="240" pos:column="8">[<expr><literal type="number" pos:line="240" pos:column="9">5<pos:position pos:line="240" pos:column="10"/></literal></expr>]<pos:position pos:line="240" pos:column="11"/></index></name> <operator pos:line="240" pos:column="12">=<pos:position pos:line="240" pos:column="13"/></operator> <name pos:line="240" pos:column="14">RTF_LLINFO<pos:position pos:line="240" pos:column="24"/></name></expr>;<pos:position pos:line="240" pos:column="25"/></expr_stmt>

    <if pos:line="242" pos:column="5">if <condition pos:line="242" pos:column="8">(<expr><call><name pos:line="242" pos:column="9">sysctl<pos:position pos:line="242" pos:column="15"/></name><argument_list pos:line="242" pos:column="15">(<argument><expr><name pos:line="242" pos:column="16">mib<pos:position pos:line="242" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="242" pos:column="21">6<pos:position pos:line="242" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="242" pos:column="24">NULL<pos:position pos:line="242" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="242" pos:column="30">&amp;<pos:position pos:line="242" pos:column="35"/></operator><name pos:line="242" pos:column="31">needed<pos:position pos:line="242" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="39">NULL<pos:position pos:line="242" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="242" pos:column="45">0<pos:position pos:line="242" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="242" pos:column="47"/></argument_list></call> <operator pos:line="242" pos:column="48">&lt;<pos:position pos:line="242" pos:column="52"/></operator> <literal type="number" pos:line="242" pos:column="50">0<pos:position pos:line="242" pos:column="51"/></literal></expr>)<pos:position pos:line="242" pos:column="52"/></condition><then pos:line="242" pos:column="52"> <block pos:line="242" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="243" pos:column="9">debugs<pos:position pos:line="243" pos:column="15"/></name><argument_list pos:line="243" pos:column="15">(<argument><expr><literal type="number" pos:line="243" pos:column="16">28<pos:position pos:line="243" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="20">DBG_CRITICAL<pos:position pos:line="243" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="243" pos:column="34">"Can't estimate ARP table size!"<pos:position pos:line="243" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="244" pos:column="9">clear<pos:position pos:line="244" pos:column="14"/></name><argument_list pos:line="244" pos:column="14">()<pos:position pos:line="244" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="17"/></expr_stmt>
        <return pos:line="245" pos:column="9">return <expr><literal type="boolean" pos:line="245" pos:column="16">false<pos:position pos:line="245" pos:column="21"/></literal></expr>;<pos:position pos:line="245" pos:column="22"/></return>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if>

    <if pos:line="248" pos:column="5">if <condition pos:line="248" pos:column="8">(<expr><operator pos:line="248" pos:column="9">(<pos:position pos:line="248" pos:column="10"/></operator><name pos:line="248" pos:column="10">buf<pos:position pos:line="248" pos:column="13"/></name> <operator pos:line="248" pos:column="14">=<pos:position pos:line="248" pos:column="15"/></operator> <operator pos:line="248" pos:column="16">(<pos:position pos:line="248" pos:column="17"/></operator><name pos:line="248" pos:column="17">char<pos:position pos:line="248" pos:column="21"/></name> <operator pos:line="248" pos:column="22">*<pos:position pos:line="248" pos:column="23"/></operator><operator pos:line="248" pos:column="23">)<pos:position pos:line="248" pos:column="24"/></operator><call><name pos:line="248" pos:column="24">xmalloc<pos:position pos:line="248" pos:column="31"/></name><argument_list pos:line="248" pos:column="31">(<argument><expr><name pos:line="248" pos:column="32">needed<pos:position pos:line="248" pos:column="38"/></name></expr></argument>)<pos:position pos:line="248" pos:column="39"/></argument_list></call><operator pos:line="248" pos:column="39">)<pos:position pos:line="248" pos:column="40"/></operator> <operator pos:line="248" pos:column="41">==<pos:position pos:line="248" pos:column="43"/></operator> <name pos:line="248" pos:column="44">NULL<pos:position pos:line="248" pos:column="48"/></name></expr>)<pos:position pos:line="248" pos:column="49"/></condition><then pos:line="248" pos:column="49"> <block pos:line="248" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="249" pos:column="9">debugs<pos:position pos:line="249" pos:column="15"/></name><argument_list pos:line="249" pos:column="15">(<argument><expr><literal type="number" pos:line="249" pos:column="16">28<pos:position pos:line="249" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="20">DBG_CRITICAL<pos:position pos:line="249" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="34">"Can't allocate temporary ARP table!"<pos:position pos:line="249" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="249" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="250" pos:column="9">clear<pos:position pos:line="250" pos:column="14"/></name><argument_list pos:line="250" pos:column="14">()<pos:position pos:line="250" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="17"/></expr_stmt>
        <return pos:line="251" pos:column="9">return <expr><literal type="boolean" pos:line="251" pos:column="16">false<pos:position pos:line="251" pos:column="21"/></literal></expr>;<pos:position pos:line="251" pos:column="22"/></return>
    }<pos:position pos:line="252" pos:column="6"/></block></then></if>

    <if pos:line="254" pos:column="5">if <condition pos:line="254" pos:column="8">(<expr><call><name pos:line="254" pos:column="9">sysctl<pos:position pos:line="254" pos:column="15"/></name><argument_list pos:line="254" pos:column="15">(<argument><expr><name pos:line="254" pos:column="16">mib<pos:position pos:line="254" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="254" pos:column="21">6<pos:position pos:line="254" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="254" pos:column="24">buf<pos:position pos:line="254" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="254" pos:column="29">&amp;<pos:position pos:line="254" pos:column="34"/></operator><name pos:line="254" pos:column="30">needed<pos:position pos:line="254" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="38">NULL<pos:position pos:line="254" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="254" pos:column="44">0<pos:position pos:line="254" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="46"/></argument_list></call> <operator pos:line="254" pos:column="47">&lt;<pos:position pos:line="254" pos:column="51"/></operator> <literal type="number" pos:line="254" pos:column="49">0<pos:position pos:line="254" pos:column="50"/></literal></expr>)<pos:position pos:line="254" pos:column="51"/></condition><then pos:line="254" pos:column="51"> <block pos:line="254" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="255" pos:column="9">debugs<pos:position pos:line="255" pos:column="15"/></name><argument_list pos:line="255" pos:column="15">(<argument><expr><literal type="number" pos:line="255" pos:column="16">28<pos:position pos:line="255" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="255" pos:column="20">DBG_CRITICAL<pos:position pos:line="255" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="34">"Can't retrieve ARP table!"<pos:position pos:line="255" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="256" pos:column="9">xfree<pos:position pos:line="256" pos:column="14"/></name><argument_list pos:line="256" pos:column="14">(<argument><expr><name pos:line="256" pos:column="15">buf<pos:position pos:line="256" pos:column="18"/></name></expr></argument>)<pos:position pos:line="256" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="257" pos:column="9">clear<pos:position pos:line="257" pos:column="14"/></name><argument_list pos:line="257" pos:column="14">()<pos:position pos:line="257" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="17"/></expr_stmt>
        <return pos:line="258" pos:column="9">return <expr><literal type="boolean" pos:line="258" pos:column="16">false<pos:position pos:line="258" pos:column="21"/></literal></expr>;<pos:position pos:line="258" pos:column="22"/></return>
    }<pos:position pos:line="259" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="261" pos:column="5">lim<pos:position pos:line="261" pos:column="8"/></name> <operator pos:line="261" pos:column="9">=<pos:position pos:line="261" pos:column="10"/></operator> <name pos:line="261" pos:column="11">buf<pos:position pos:line="261" pos:column="14"/></name> <operator pos:line="261" pos:column="15">+<pos:position pos:line="261" pos:column="16"/></operator> <name pos:line="261" pos:column="17">needed<pos:position pos:line="261" pos:column="23"/></name></expr>;<pos:position pos:line="261" pos:column="24"/></expr_stmt>

    <for pos:line="263" pos:column="5">for <control pos:line="263" pos:column="9">(<init><expr><name pos:line="263" pos:column="10">next<pos:position pos:line="263" pos:column="14"/></name> <operator pos:line="263" pos:column="15">=<pos:position pos:line="263" pos:column="16"/></operator> <name pos:line="263" pos:column="17">buf<pos:position pos:line="263" pos:column="20"/></name></expr>;<pos:position pos:line="263" pos:column="21"/></init> <condition><expr><name pos:line="263" pos:column="22">next<pos:position pos:line="263" pos:column="26"/></name> <operator pos:line="263" pos:column="27">&lt;<pos:position pos:line="263" pos:column="31"/></operator> <name pos:line="263" pos:column="29">lim<pos:position pos:line="263" pos:column="32"/></name></expr>;<pos:position pos:line="263" pos:column="33"/></condition> <incr><expr><name pos:line="263" pos:column="34">next<pos:position pos:line="263" pos:column="38"/></name> <operator pos:line="263" pos:column="39">+=<pos:position pos:line="263" pos:column="41"/></operator> <name><name pos:line="263" pos:column="42">rtm<pos:position pos:line="263" pos:column="45"/></name><operator pos:line="263" pos:column="45">-&gt;<pos:position pos:line="263" pos:column="50"/></operator><name pos:line="263" pos:column="47">rtm_msglen<pos:position pos:line="263" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="263" pos:column="58"/></control> <block pos:line="263" pos:column="59">{

        <expr_stmt><expr><name pos:line="265" pos:column="9">rtm<pos:position pos:line="265" pos:column="12"/></name> <operator pos:line="265" pos:column="13">=<pos:position pos:line="265" pos:column="14"/></operator> <operator pos:line="265" pos:column="15">(<pos:position pos:line="265" pos:column="16"/></operator>struct <name pos:line="265" pos:column="23">rt_msghdr<pos:position pos:line="265" pos:column="32"/></name> <operator pos:line="265" pos:column="33">*<pos:position pos:line="265" pos:column="34"/></operator><operator pos:line="265" pos:column="34">)<pos:position pos:line="265" pos:column="35"/></operator> <name pos:line="265" pos:column="36">next<pos:position pos:line="265" pos:column="40"/></name></expr>;<pos:position pos:line="265" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name pos:line="267" pos:column="9">sin<pos:position pos:line="267" pos:column="12"/></name> <operator pos:line="267" pos:column="13">=<pos:position pos:line="267" pos:column="14"/></operator> <operator pos:line="267" pos:column="15">(<pos:position pos:line="267" pos:column="16"/></operator>struct <name pos:line="267" pos:column="23">sockaddr_inarp<pos:position pos:line="267" pos:column="37"/></name> <operator pos:line="267" pos:column="38">*<pos:position pos:line="267" pos:column="39"/></operator><operator pos:line="267" pos:column="39">)<pos:position pos:line="267" pos:column="40"/></operator> <operator pos:line="267" pos:column="41">(<pos:position pos:line="267" pos:column="42"/></operator><name pos:line="267" pos:column="42">rtm<pos:position pos:line="267" pos:column="45"/></name> <operator pos:line="267" pos:column="46">+<pos:position pos:line="267" pos:column="47"/></operator> <literal type="number" pos:line="267" pos:column="48">1<pos:position pos:line="267" pos:column="49"/></literal><operator pos:line="267" pos:column="49">)<pos:position pos:line="267" pos:column="50"/></operator></expr>;<pos:position pos:line="267" pos:column="51"/></expr_stmt>
        <comment type="block" pos:line="268" pos:column="9">/*sdl = (struct sockaddr_dl *) (sin + 1); */</comment>

<cpp:define pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">define<pos:position pos:line="270" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="270" pos:column="9">ROUNDUP<pos:position pos:line="270" pos:column="16"/></name><parameter_list pos:line="270" pos:column="16">(<parameter><type><name pos:line="270" pos:column="17">a<pos:position pos:line="270" pos:column="18"/></name></type></parameter>)<pos:position pos:line="270" pos:column="19"/></parameter_list></cpp:macro> \
        <cpp:value pos:line="271" pos:column="9">((a) &gt; 0 ? (1 + (((a) - 1) | (sizeof(long) - 1))) : sizeof(long))<pos:position pos:line="271" pos:column="74"/></cpp:value></cpp:define>

        <expr_stmt><expr><name pos:line="273" pos:column="9">sdl<pos:position pos:line="273" pos:column="12"/></name> <operator pos:line="273" pos:column="13">=<pos:position pos:line="273" pos:column="14"/></operator> <operator pos:line="273" pos:column="15">(<pos:position pos:line="273" pos:column="16"/></operator>struct <name pos:line="273" pos:column="23">sockaddr_dl<pos:position pos:line="273" pos:column="34"/></name> <operator pos:line="273" pos:column="35">*<pos:position pos:line="273" pos:column="36"/></operator><operator pos:line="273" pos:column="36">)<pos:position pos:line="273" pos:column="37"/></operator><operator pos:line="273" pos:column="37">(<pos:position pos:line="273" pos:column="38"/></operator><operator pos:line="273" pos:column="38">(<pos:position pos:line="273" pos:column="39"/></operator><name pos:line="273" pos:column="39">char<pos:position pos:line="273" pos:column="43"/></name> <operator pos:line="273" pos:column="44">*<pos:position pos:line="273" pos:column="45"/></operator><operator pos:line="273" pos:column="45">)<pos:position pos:line="273" pos:column="46"/></operator> <name pos:line="273" pos:column="47">sin<pos:position pos:line="273" pos:column="50"/></name> <operator pos:line="273" pos:column="51">+<pos:position pos:line="273" pos:column="52"/></operator> <call><name pos:line="273" pos:column="53">ROUNDUP<pos:position pos:line="273" pos:column="60"/></name><argument_list pos:line="273" pos:column="60">(<argument><expr><name><name pos:line="273" pos:column="61">sin<pos:position pos:line="273" pos:column="64"/></name><operator pos:line="273" pos:column="64">-&gt;<pos:position pos:line="273" pos:column="69"/></operator><name pos:line="273" pos:column="66">sin_len<pos:position pos:line="273" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="273" pos:column="74"/></argument_list></call><operator pos:line="273" pos:column="74">)<pos:position pos:line="273" pos:column="75"/></operator></expr>;<pos:position pos:line="273" pos:column="76"/></expr_stmt>

        <if pos:line="275" pos:column="9">if <condition pos:line="275" pos:column="12">(<expr><name pos:line="275" pos:column="13">ipAddr<pos:position pos:line="275" pos:column="19"/></name> <operator pos:line="275" pos:column="20">==<pos:position pos:line="275" pos:column="22"/></operator> <name><name pos:line="275" pos:column="23">sin<pos:position pos:line="275" pos:column="26"/></name><operator pos:line="275" pos:column="26">-&gt;<pos:position pos:line="275" pos:column="31"/></operator><name pos:line="275" pos:column="28">sin_addr<pos:position pos:line="275" pos:column="36"/></name></name></expr>)<pos:position pos:line="275" pos:column="37"/></condition><then pos:line="275" pos:column="37"> <block pos:line="275" pos:column="38">{
            <if pos:line="276" pos:column="13">if <condition pos:line="276" pos:column="16">(<expr><name><name pos:line="276" pos:column="17">sdl<pos:position pos:line="276" pos:column="20"/></name><operator pos:line="276" pos:column="20">-&gt;<pos:position pos:line="276" pos:column="25"/></operator><name pos:line="276" pos:column="22">sdl_alen<pos:position pos:line="276" pos:column="30"/></name></name></expr>)<pos:position pos:line="276" pos:column="31"/></condition><then pos:line="276" pos:column="31"> <block pos:line="276" pos:column="32">{

                <expr_stmt><expr><name><name pos:line="278" pos:column="17">arpReq<pos:position pos:line="278" pos:column="23"/></name><operator pos:line="278" pos:column="23">.<pos:position pos:line="278" pos:column="24"/></operator><name pos:line="278" pos:column="24">arp_ha<pos:position pos:line="278" pos:column="30"/></name><operator pos:line="278" pos:column="30">.<pos:position pos:line="278" pos:column="31"/></operator><name pos:line="278" pos:column="31">sa_len<pos:position pos:line="278" pos:column="37"/></name></name> <operator pos:line="278" pos:column="38">=<pos:position pos:line="278" pos:column="39"/></operator> <sizeof pos:line="278" pos:column="40">sizeof<argument_list pos:line="278" pos:column="46">(<argument><expr pos:line="278" pos:column="47">struct <name pos:line="278" pos:column="54">sockaddr<pos:position pos:line="278" pos:column="62"/></name></expr></argument>)<pos:position pos:line="278" pos:column="63"/></argument_list></sizeof></expr>;<pos:position pos:line="278" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="279" pos:column="17">arpReq<pos:position pos:line="279" pos:column="23"/></name><operator pos:line="279" pos:column="23">.<pos:position pos:line="279" pos:column="24"/></operator><name pos:line="279" pos:column="24">arp_ha<pos:position pos:line="279" pos:column="30"/></name><operator pos:line="279" pos:column="30">.<pos:position pos:line="279" pos:column="31"/></operator><name pos:line="279" pos:column="31">sa_family<pos:position pos:line="279" pos:column="40"/></name></name> <operator pos:line="279" pos:column="41">=<pos:position pos:line="279" pos:column="42"/></operator> <name pos:line="279" pos:column="43">AF_UNSPEC<pos:position pos:line="279" pos:column="52"/></name></expr>;<pos:position pos:line="279" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="280" pos:column="17">memcpy<pos:position pos:line="280" pos:column="23"/></name><argument_list pos:line="280" pos:column="23">(<argument><expr><name><name pos:line="280" pos:column="24">arpReq<pos:position pos:line="280" pos:column="30"/></name><operator pos:line="280" pos:column="30">.<pos:position pos:line="280" pos:column="31"/></operator><name pos:line="280" pos:column="31">arp_ha<pos:position pos:line="280" pos:column="37"/></name><operator pos:line="280" pos:column="37">.<pos:position pos:line="280" pos:column="38"/></operator><name pos:line="280" pos:column="38">sa_data<pos:position pos:line="280" pos:column="45"/></name></name></expr></argument>, <argument><expr><call><name pos:line="280" pos:column="47">LLADDR<pos:position pos:line="280" pos:column="53"/></name><argument_list pos:line="280" pos:column="53">(<argument><expr><name pos:line="280" pos:column="54">sdl<pos:position pos:line="280" pos:column="57"/></name></expr></argument>)<pos:position pos:line="280" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="280" pos:column="60">sdl<pos:position pos:line="280" pos:column="63"/></name><operator pos:line="280" pos:column="63">-&gt;<pos:position pos:line="280" pos:column="68"/></operator><name pos:line="280" pos:column="65">sdl_alen<pos:position pos:line="280" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="280" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="281" pos:column="14"/></block></then></if>
        }<pos:position pos:line="282" pos:column="10"/></block></then></if>
    }<pos:position pos:line="283" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="285" pos:column="5">xfree<pos:position pos:line="285" pos:column="10"/></name><argument_list pos:line="285" pos:column="10">(<argument><expr><name pos:line="285" pos:column="11">buf<pos:position pos:line="285" pos:column="14"/></name></expr></argument>)<pos:position pos:line="285" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="16"/></expr_stmt>

    <if pos:line="287" pos:column="5">if <condition pos:line="287" pos:column="8">(<expr><name><name pos:line="287" pos:column="9">arpReq<pos:position pos:line="287" pos:column="15"/></name><operator pos:line="287" pos:column="15">.<pos:position pos:line="287" pos:column="16"/></operator><name pos:line="287" pos:column="16">arp_ha<pos:position pos:line="287" pos:column="22"/></name><operator pos:line="287" pos:column="22">.<pos:position pos:line="287" pos:column="23"/></operator><name pos:line="287" pos:column="23">sa_data<pos:position pos:line="287" pos:column="30"/></name><index pos:line="287" pos:column="30">[<expr><literal type="number" pos:line="287" pos:column="31">0<pos:position pos:line="287" pos:column="32"/></literal></expr>]<pos:position pos:line="287" pos:column="33"/></index></name> <operator pos:line="287" pos:column="34">==<pos:position pos:line="287" pos:column="36"/></operator> <literal type="number" pos:line="287" pos:column="37">0<pos:position pos:line="287" pos:column="38"/></literal> <operator pos:line="287" pos:column="39">&amp;&amp;<pos:position pos:line="287" pos:column="49"/></operator> <name><name pos:line="287" pos:column="42">arpReq<pos:position pos:line="287" pos:column="48"/></name><operator pos:line="287" pos:column="48">.<pos:position pos:line="287" pos:column="49"/></operator><name pos:line="287" pos:column="49">arp_ha<pos:position pos:line="287" pos:column="55"/></name><operator pos:line="287" pos:column="55">.<pos:position pos:line="287" pos:column="56"/></operator><name pos:line="287" pos:column="56">sa_data<pos:position pos:line="287" pos:column="63"/></name><index pos:line="287" pos:column="63">[<expr><literal type="number" pos:line="287" pos:column="64">1<pos:position pos:line="287" pos:column="65"/></literal></expr>]<pos:position pos:line="287" pos:column="66"/></index></name> <operator pos:line="287" pos:column="67">==<pos:position pos:line="287" pos:column="69"/></operator> <literal type="number" pos:line="287" pos:column="70">0<pos:position pos:line="287" pos:column="71"/></literal> <operator pos:line="287" pos:column="72">&amp;&amp;<pos:position pos:line="287" pos:column="82"/></operator>
            <name><name pos:line="288" pos:column="13">arpReq<pos:position pos:line="288" pos:column="19"/></name><operator pos:line="288" pos:column="19">.<pos:position pos:line="288" pos:column="20"/></operator><name pos:line="288" pos:column="20">arp_ha<pos:position pos:line="288" pos:column="26"/></name><operator pos:line="288" pos:column="26">.<pos:position pos:line="288" pos:column="27"/></operator><name pos:line="288" pos:column="27">sa_data<pos:position pos:line="288" pos:column="34"/></name><index pos:line="288" pos:column="34">[<expr><literal type="number" pos:line="288" pos:column="35">2<pos:position pos:line="288" pos:column="36"/></literal></expr>]<pos:position pos:line="288" pos:column="37"/></index></name> <operator pos:line="288" pos:column="38">==<pos:position pos:line="288" pos:column="40"/></operator> <literal type="number" pos:line="288" pos:column="41">0<pos:position pos:line="288" pos:column="42"/></literal> <operator pos:line="288" pos:column="43">&amp;&amp;<pos:position pos:line="288" pos:column="53"/></operator> <name><name pos:line="288" pos:column="46">arpReq<pos:position pos:line="288" pos:column="52"/></name><operator pos:line="288" pos:column="52">.<pos:position pos:line="288" pos:column="53"/></operator><name pos:line="288" pos:column="53">arp_ha<pos:position pos:line="288" pos:column="59"/></name><operator pos:line="288" pos:column="59">.<pos:position pos:line="288" pos:column="60"/></operator><name pos:line="288" pos:column="60">sa_data<pos:position pos:line="288" pos:column="67"/></name><index pos:line="288" pos:column="67">[<expr><literal type="number" pos:line="288" pos:column="68">3<pos:position pos:line="288" pos:column="69"/></literal></expr>]<pos:position pos:line="288" pos:column="70"/></index></name> <operator pos:line="288" pos:column="71">==<pos:position pos:line="288" pos:column="73"/></operator> <literal type="number" pos:line="288" pos:column="74">0<pos:position pos:line="288" pos:column="75"/></literal> <operator pos:line="288" pos:column="76">&amp;&amp;<pos:position pos:line="288" pos:column="86"/></operator>
            <name><name pos:line="289" pos:column="13">arpReq<pos:position pos:line="289" pos:column="19"/></name><operator pos:line="289" pos:column="19">.<pos:position pos:line="289" pos:column="20"/></operator><name pos:line="289" pos:column="20">arp_ha<pos:position pos:line="289" pos:column="26"/></name><operator pos:line="289" pos:column="26">.<pos:position pos:line="289" pos:column="27"/></operator><name pos:line="289" pos:column="27">sa_data<pos:position pos:line="289" pos:column="34"/></name><index pos:line="289" pos:column="34">[<expr><literal type="number" pos:line="289" pos:column="35">4<pos:position pos:line="289" pos:column="36"/></literal></expr>]<pos:position pos:line="289" pos:column="37"/></index></name> <operator pos:line="289" pos:column="38">==<pos:position pos:line="289" pos:column="40"/></operator> <literal type="number" pos:line="289" pos:column="41">0<pos:position pos:line="289" pos:column="42"/></literal> <operator pos:line="289" pos:column="43">&amp;&amp;<pos:position pos:line="289" pos:column="53"/></operator> <name><name pos:line="289" pos:column="46">arpReq<pos:position pos:line="289" pos:column="52"/></name><operator pos:line="289" pos:column="52">.<pos:position pos:line="289" pos:column="53"/></operator><name pos:line="289" pos:column="53">arp_ha<pos:position pos:line="289" pos:column="59"/></name><operator pos:line="289" pos:column="59">.<pos:position pos:line="289" pos:column="60"/></operator><name pos:line="289" pos:column="60">sa_data<pos:position pos:line="289" pos:column="67"/></name><index pos:line="289" pos:column="67">[<expr><literal type="number" pos:line="289" pos:column="68">5<pos:position pos:line="289" pos:column="69"/></literal></expr>]<pos:position pos:line="289" pos:column="70"/></index></name> <operator pos:line="289" pos:column="71">==<pos:position pos:line="289" pos:column="73"/></operator> <literal type="number" pos:line="289" pos:column="74">0<pos:position pos:line="289" pos:column="75"/></literal></expr>)<pos:position pos:line="289" pos:column="76"/></condition><then pos:line="289" pos:column="76"> <block pos:line="289" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="290" pos:column="9">clear<pos:position pos:line="290" pos:column="14"/></name><argument_list pos:line="290" pos:column="14">()<pos:position pos:line="290" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="17"/></expr_stmt>
        <return pos:line="291" pos:column="9">return <expr><literal type="boolean" pos:line="291" pos:column="16">false<pos:position pos:line="291" pos:column="21"/></literal></expr>;<pos:position pos:line="291" pos:column="22"/></return>
    }<pos:position pos:line="292" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="294" pos:column="5">debugs<pos:position pos:line="294" pos:column="11"/></name><argument_list pos:line="294" pos:column="11">(<argument><expr><literal type="number" pos:line="294" pos:column="12">28<pos:position pos:line="294" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="294" pos:column="16">4<pos:position pos:line="294" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="19">"Got address "<pos:position pos:line="294" pos:column="33"/></literal><operator pos:line="294" pos:column="33">&lt;&lt;<pos:position pos:line="294" pos:column="41"/></operator> <call><name><name pos:line="294" pos:column="36">std<pos:position pos:line="294" pos:column="39"/></name><operator pos:line="294" pos:column="39">::<pos:position pos:line="294" pos:column="41"/></operator><name pos:line="294" pos:column="41">setfill<pos:position pos:line="294" pos:column="48"/></name></name><argument_list pos:line="294" pos:column="48">(<argument><expr><literal type="char" pos:line="294" pos:column="49">'0'<pos:position pos:line="294" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="53"/></argument_list></call> <operator pos:line="294" pos:column="54">&lt;&lt;<pos:position pos:line="294" pos:column="62"/></operator> <name><name pos:line="294" pos:column="57">std<pos:position pos:line="294" pos:column="60"/></name><operator pos:line="294" pos:column="60">::<pos:position pos:line="294" pos:column="62"/></operator><name pos:line="294" pos:column="62">hex<pos:position pos:line="294" pos:column="65"/></name></name> <operator pos:line="294" pos:column="66">&lt;&lt;<pos:position pos:line="294" pos:column="74"/></operator>
           <call><name><name pos:line="295" pos:column="12">std<pos:position pos:line="295" pos:column="15"/></name><operator pos:line="295" pos:column="15">::<pos:position pos:line="295" pos:column="17"/></operator><name pos:line="295" pos:column="17">setw<pos:position pos:line="295" pos:column="21"/></name></name><argument_list pos:line="295" pos:column="21">(<argument><expr><literal type="number" pos:line="295" pos:column="22">2<pos:position pos:line="295" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="24"/></argument_list></call> <operator pos:line="295" pos:column="25">&lt;&lt;<pos:position pos:line="295" pos:column="33"/></operator> <operator pos:line="295" pos:column="28">(<pos:position pos:line="295" pos:column="29"/></operator><name><name pos:line="295" pos:column="29">arpReq<pos:position pos:line="295" pos:column="35"/></name><operator pos:line="295" pos:column="35">.<pos:position pos:line="295" pos:column="36"/></operator><name pos:line="295" pos:column="36">arp_ha<pos:position pos:line="295" pos:column="42"/></name><operator pos:line="295" pos:column="42">.<pos:position pos:line="295" pos:column="43"/></operator><name pos:line="295" pos:column="43">sa_data<pos:position pos:line="295" pos:column="50"/></name><index pos:line="295" pos:column="50">[<expr><literal type="number" pos:line="295" pos:column="51">0<pos:position pos:line="295" pos:column="52"/></literal></expr>]<pos:position pos:line="295" pos:column="53"/></index></name> <operator pos:line="295" pos:column="54">&amp;<pos:position pos:line="295" pos:column="59"/></operator> <literal type="number" pos:line="295" pos:column="56">0xff<pos:position pos:line="295" pos:column="60"/></literal><operator pos:line="295" pos:column="60">)<pos:position pos:line="295" pos:column="61"/></operator>  <operator pos:line="295" pos:column="63">&lt;&lt;<pos:position pos:line="295" pos:column="71"/></operator> <literal type="string" pos:line="295" pos:column="66">":"<pos:position pos:line="295" pos:column="69"/></literal> <operator pos:line="295" pos:column="70">&lt;&lt;<pos:position pos:line="295" pos:column="78"/></operator>
           <call><name><name pos:line="296" pos:column="12">std<pos:position pos:line="296" pos:column="15"/></name><operator pos:line="296" pos:column="15">::<pos:position pos:line="296" pos:column="17"/></operator><name pos:line="296" pos:column="17">setw<pos:position pos:line="296" pos:column="21"/></name></name><argument_list pos:line="296" pos:column="21">(<argument><expr><literal type="number" pos:line="296" pos:column="22">2<pos:position pos:line="296" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="296" pos:column="24"/></argument_list></call> <operator pos:line="296" pos:column="25">&lt;&lt;<pos:position pos:line="296" pos:column="33"/></operator> <operator pos:line="296" pos:column="28">(<pos:position pos:line="296" pos:column="29"/></operator><name><name pos:line="296" pos:column="29">arpReq<pos:position pos:line="296" pos:column="35"/></name><operator pos:line="296" pos:column="35">.<pos:position pos:line="296" pos:column="36"/></operator><name pos:line="296" pos:column="36">arp_ha<pos:position pos:line="296" pos:column="42"/></name><operator pos:line="296" pos:column="42">.<pos:position pos:line="296" pos:column="43"/></operator><name pos:line="296" pos:column="43">sa_data<pos:position pos:line="296" pos:column="50"/></name><index pos:line="296" pos:column="50">[<expr><literal type="number" pos:line="296" pos:column="51">1<pos:position pos:line="296" pos:column="52"/></literal></expr>]<pos:position pos:line="296" pos:column="53"/></index></name> <operator pos:line="296" pos:column="54">&amp;<pos:position pos:line="296" pos:column="59"/></operator> <literal type="number" pos:line="296" pos:column="56">0xff<pos:position pos:line="296" pos:column="60"/></literal><operator pos:line="296" pos:column="60">)<pos:position pos:line="296" pos:column="61"/></operator>  <operator pos:line="296" pos:column="63">&lt;&lt;<pos:position pos:line="296" pos:column="71"/></operator> <literal type="string" pos:line="296" pos:column="66">":"<pos:position pos:line="296" pos:column="69"/></literal> <operator pos:line="296" pos:column="70">&lt;&lt;<pos:position pos:line="296" pos:column="78"/></operator>
           <call><name><name pos:line="297" pos:column="12">std<pos:position pos:line="297" pos:column="15"/></name><operator pos:line="297" pos:column="15">::<pos:position pos:line="297" pos:column="17"/></operator><name pos:line="297" pos:column="17">setw<pos:position pos:line="297" pos:column="21"/></name></name><argument_list pos:line="297" pos:column="21">(<argument><expr><literal type="number" pos:line="297" pos:column="22">2<pos:position pos:line="297" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="297" pos:column="24"/></argument_list></call> <operator pos:line="297" pos:column="25">&lt;&lt;<pos:position pos:line="297" pos:column="33"/></operator> <operator pos:line="297" pos:column="28">(<pos:position pos:line="297" pos:column="29"/></operator><name><name pos:line="297" pos:column="29">arpReq<pos:position pos:line="297" pos:column="35"/></name><operator pos:line="297" pos:column="35">.<pos:position pos:line="297" pos:column="36"/></operator><name pos:line="297" pos:column="36">arp_ha<pos:position pos:line="297" pos:column="42"/></name><operator pos:line="297" pos:column="42">.<pos:position pos:line="297" pos:column="43"/></operator><name pos:line="297" pos:column="43">sa_data<pos:position pos:line="297" pos:column="50"/></name><index pos:line="297" pos:column="50">[<expr><literal type="number" pos:line="297" pos:column="51">2<pos:position pos:line="297" pos:column="52"/></literal></expr>]<pos:position pos:line="297" pos:column="53"/></index></name> <operator pos:line="297" pos:column="54">&amp;<pos:position pos:line="297" pos:column="59"/></operator> <literal type="number" pos:line="297" pos:column="56">0xff<pos:position pos:line="297" pos:column="60"/></literal><operator pos:line="297" pos:column="60">)<pos:position pos:line="297" pos:column="61"/></operator>  <operator pos:line="297" pos:column="63">&lt;&lt;<pos:position pos:line="297" pos:column="71"/></operator> <literal type="string" pos:line="297" pos:column="66">":"<pos:position pos:line="297" pos:column="69"/></literal> <operator pos:line="297" pos:column="70">&lt;&lt;<pos:position pos:line="297" pos:column="78"/></operator>
           <call><name><name pos:line="298" pos:column="12">std<pos:position pos:line="298" pos:column="15"/></name><operator pos:line="298" pos:column="15">::<pos:position pos:line="298" pos:column="17"/></operator><name pos:line="298" pos:column="17">setw<pos:position pos:line="298" pos:column="21"/></name></name><argument_list pos:line="298" pos:column="21">(<argument><expr><literal type="number" pos:line="298" pos:column="22">2<pos:position pos:line="298" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="24"/></argument_list></call> <operator pos:line="298" pos:column="25">&lt;&lt;<pos:position pos:line="298" pos:column="33"/></operator> <operator pos:line="298" pos:column="28">(<pos:position pos:line="298" pos:column="29"/></operator><name><name pos:line="298" pos:column="29">arpReq<pos:position pos:line="298" pos:column="35"/></name><operator pos:line="298" pos:column="35">.<pos:position pos:line="298" pos:column="36"/></operator><name pos:line="298" pos:column="36">arp_ha<pos:position pos:line="298" pos:column="42"/></name><operator pos:line="298" pos:column="42">.<pos:position pos:line="298" pos:column="43"/></operator><name pos:line="298" pos:column="43">sa_data<pos:position pos:line="298" pos:column="50"/></name><index pos:line="298" pos:column="50">[<expr><literal type="number" pos:line="298" pos:column="51">3<pos:position pos:line="298" pos:column="52"/></literal></expr>]<pos:position pos:line="298" pos:column="53"/></index></name> <operator pos:line="298" pos:column="54">&amp;<pos:position pos:line="298" pos:column="59"/></operator> <literal type="number" pos:line="298" pos:column="56">0xff<pos:position pos:line="298" pos:column="60"/></literal><operator pos:line="298" pos:column="60">)<pos:position pos:line="298" pos:column="61"/></operator>  <operator pos:line="298" pos:column="63">&lt;&lt;<pos:position pos:line="298" pos:column="71"/></operator> <literal type="string" pos:line="298" pos:column="66">":"<pos:position pos:line="298" pos:column="69"/></literal> <operator pos:line="298" pos:column="70">&lt;&lt;<pos:position pos:line="298" pos:column="78"/></operator>
           <call><name><name pos:line="299" pos:column="12">std<pos:position pos:line="299" pos:column="15"/></name><operator pos:line="299" pos:column="15">::<pos:position pos:line="299" pos:column="17"/></operator><name pos:line="299" pos:column="17">setw<pos:position pos:line="299" pos:column="21"/></name></name><argument_list pos:line="299" pos:column="21">(<argument><expr><literal type="number" pos:line="299" pos:column="22">2<pos:position pos:line="299" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="24"/></argument_list></call> <operator pos:line="299" pos:column="25">&lt;&lt;<pos:position pos:line="299" pos:column="33"/></operator> <operator pos:line="299" pos:column="28">(<pos:position pos:line="299" pos:column="29"/></operator><name><name pos:line="299" pos:column="29">arpReq<pos:position pos:line="299" pos:column="35"/></name><operator pos:line="299" pos:column="35">.<pos:position pos:line="299" pos:column="36"/></operator><name pos:line="299" pos:column="36">arp_ha<pos:position pos:line="299" pos:column="42"/></name><operator pos:line="299" pos:column="42">.<pos:position pos:line="299" pos:column="43"/></operator><name pos:line="299" pos:column="43">sa_data<pos:position pos:line="299" pos:column="50"/></name><index pos:line="299" pos:column="50">[<expr><literal type="number" pos:line="299" pos:column="51">4<pos:position pos:line="299" pos:column="52"/></literal></expr>]<pos:position pos:line="299" pos:column="53"/></index></name> <operator pos:line="299" pos:column="54">&amp;<pos:position pos:line="299" pos:column="59"/></operator> <literal type="number" pos:line="299" pos:column="56">0xff<pos:position pos:line="299" pos:column="60"/></literal><operator pos:line="299" pos:column="60">)<pos:position pos:line="299" pos:column="61"/></operator>  <operator pos:line="299" pos:column="63">&lt;&lt;<pos:position pos:line="299" pos:column="71"/></operator> <literal type="string" pos:line="299" pos:column="66">":"<pos:position pos:line="299" pos:column="69"/></literal> <operator pos:line="299" pos:column="70">&lt;&lt;<pos:position pos:line="299" pos:column="78"/></operator>
           <call><name><name pos:line="300" pos:column="12">std<pos:position pos:line="300" pos:column="15"/></name><operator pos:line="300" pos:column="15">::<pos:position pos:line="300" pos:column="17"/></operator><name pos:line="300" pos:column="17">setw<pos:position pos:line="300" pos:column="21"/></name></name><argument_list pos:line="300" pos:column="21">(<argument><expr><literal type="number" pos:line="300" pos:column="22">2<pos:position pos:line="300" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="24"/></argument_list></call> <operator pos:line="300" pos:column="25">&lt;&lt;<pos:position pos:line="300" pos:column="33"/></operator> <operator pos:line="300" pos:column="28">(<pos:position pos:line="300" pos:column="29"/></operator><name><name pos:line="300" pos:column="29">arpReq<pos:position pos:line="300" pos:column="35"/></name><operator pos:line="300" pos:column="35">.<pos:position pos:line="300" pos:column="36"/></operator><name pos:line="300" pos:column="36">arp_ha<pos:position pos:line="300" pos:column="42"/></name><operator pos:line="300" pos:column="42">.<pos:position pos:line="300" pos:column="43"/></operator><name pos:line="300" pos:column="43">sa_data<pos:position pos:line="300" pos:column="50"/></name><index pos:line="300" pos:column="50">[<expr><literal type="number" pos:line="300" pos:column="51">5<pos:position pos:line="300" pos:column="52"/></literal></expr>]<pos:position pos:line="300" pos:column="53"/></index></name> <operator pos:line="300" pos:column="54">&amp;<pos:position pos:line="300" pos:column="59"/></operator> <literal type="number" pos:line="300" pos:column="56">0xff<pos:position pos:line="300" pos:column="60"/></literal><operator pos:line="300" pos:column="60">)<pos:position pos:line="300" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="300" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="302" pos:column="5">set<pos:position pos:line="302" pos:column="8"/></name><argument_list pos:line="302" pos:column="8">(<argument><expr><name><name pos:line="302" pos:column="9">arpReq<pos:position pos:line="302" pos:column="15"/></name><operator pos:line="302" pos:column="15">.<pos:position pos:line="302" pos:column="16"/></operator><name pos:line="302" pos:column="16">arp_ha<pos:position pos:line="302" pos:column="22"/></name><operator pos:line="302" pos:column="22">.<pos:position pos:line="302" pos:column="23"/></operator><name pos:line="302" pos:column="23">sa_data<pos:position pos:line="302" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="302" pos:column="32">6<pos:position pos:line="302" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="35"/></expr_stmt>
    <return pos:line="303" pos:column="5">return <expr><literal type="boolean" pos:line="303" pos:column="12">true<pos:position pos:line="303" pos:column="16"/></literal></expr>;<pos:position pos:line="303" pos:column="17"/></return>

<cpp:elif pos:line="305" pos:column="1">#<cpp:directive pos:line="305" pos:column="2">elif<pos:position pos:line="305" pos:column="6"/></cpp:directive> <expr><name pos:line="305" pos:column="7">_SQUID_WINDOWS_<pos:position pos:line="305" pos:column="22"/></name></expr></cpp:elif>

    <decl_stmt><decl><type><name pos:line="307" pos:column="5">DWORD<pos:position pos:line="307" pos:column="10"/></name></type>           <name pos:line="307" pos:column="21">dwNetTable<pos:position pos:line="307" pos:column="31"/></name> <init pos:line="307" pos:column="32">= <expr><literal type="number" pos:line="307" pos:column="34">0<pos:position pos:line="307" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="307" pos:column="36"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="309" pos:column="5">DWORD<pos:position pos:line="309" pos:column="10"/></name></type>           <name pos:line="309" pos:column="21">ipNetTableLen<pos:position pos:line="309" pos:column="34"/></name> <init pos:line="309" pos:column="35">= <expr><literal type="number" pos:line="309" pos:column="37">0<pos:position pos:line="309" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="309" pos:column="39"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="311" pos:column="5">PMIB_IPNETTABLE<pos:position pos:line="311" pos:column="20"/></name></type> <name pos:line="311" pos:column="21">NetTable<pos:position pos:line="311" pos:column="29"/></name> <init pos:line="311" pos:column="30">= <expr><name pos:line="311" pos:column="32">NULL<pos:position pos:line="311" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="311" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="313" pos:column="5">DWORD<pos:position pos:line="313" pos:column="10"/></name></type>            <name pos:line="313" pos:column="22">i<pos:position pos:line="313" pos:column="23"/></name></decl>;<pos:position pos:line="313" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="315" pos:column="5">struct<pos:position pos:line="315" pos:column="11"/></name> <name pos:line="315" pos:column="12">arpreq<pos:position pos:line="315" pos:column="18"/></name></name></type> <name pos:line="315" pos:column="19">arpReq<pos:position pos:line="315" pos:column="25"/></name></decl>;<pos:position pos:line="315" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="316" pos:column="5">memset<pos:position pos:line="316" pos:column="11"/></name><argument_list pos:line="316" pos:column="11">(<argument><expr><operator pos:line="316" pos:column="12">&amp;<pos:position pos:line="316" pos:column="17"/></operator><name pos:line="316" pos:column="13">arpReq<pos:position pos:line="316" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="316" pos:column="21">'\0'<pos:position pos:line="316" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="316" pos:column="27">sizeof<argument_list pos:line="316" pos:column="33">(<argument><expr><name pos:line="316" pos:column="34">arpReq<pos:position pos:line="316" pos:column="40"/></name></expr></argument>)<pos:position pos:line="316" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="316" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="43"/></expr_stmt>

    <comment type="block" pos:line="318" pos:column="5">/* Get size of Windows ARP table */</comment>
    <if pos:line="319" pos:column="5">if <condition pos:line="319" pos:column="8">(<expr><call><name pos:line="319" pos:column="9">GetIpNetTable<pos:position pos:line="319" pos:column="22"/></name><argument_list pos:line="319" pos:column="22">(<argument><expr><name pos:line="319" pos:column="23">NetTable<pos:position pos:line="319" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="319" pos:column="33">&amp;<pos:position pos:line="319" pos:column="38"/></operator><name pos:line="319" pos:column="34">ipNetTableLen<pos:position pos:line="319" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="319" pos:column="49">FALSE<pos:position pos:line="319" pos:column="54"/></name></expr></argument>)<pos:position pos:line="319" pos:column="55"/></argument_list></call> <operator pos:line="319" pos:column="56">!=<pos:position pos:line="319" pos:column="58"/></operator> <name pos:line="319" pos:column="59">ERROR_INSUFFICIENT_BUFFER<pos:position pos:line="319" pos:column="84"/></name></expr>)<pos:position pos:line="319" pos:column="85"/></condition><then pos:line="319" pos:column="85"> <block pos:line="319" pos:column="86">{
        <expr_stmt><expr><call><name pos:line="320" pos:column="9">debugs<pos:position pos:line="320" pos:column="15"/></name><argument_list pos:line="320" pos:column="15">(<argument><expr><literal type="number" pos:line="320" pos:column="16">28<pos:position pos:line="320" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="320" pos:column="20">DBG_CRITICAL<pos:position pos:line="320" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="320" pos:column="34">"Can't estimate ARP table size!"<pos:position pos:line="320" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="320" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="321" pos:column="9">clear<pos:position pos:line="321" pos:column="14"/></name><argument_list pos:line="321" pos:column="14">()<pos:position pos:line="321" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="17"/></expr_stmt>
        <return pos:line="322" pos:column="9">return <expr><literal type="boolean" pos:line="322" pos:column="16">false<pos:position pos:line="322" pos:column="21"/></literal></expr>;<pos:position pos:line="322" pos:column="22"/></return>
    }<pos:position pos:line="323" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="325" pos:column="5">/* Allocate space for ARP table and assign pointers */</comment>
    <if pos:line="326" pos:column="5">if <condition pos:line="326" pos:column="8">(<expr><operator pos:line="326" pos:column="9">(<pos:position pos:line="326" pos:column="10"/></operator><name pos:line="326" pos:column="10">NetTable<pos:position pos:line="326" pos:column="18"/></name> <operator pos:line="326" pos:column="19">=<pos:position pos:line="326" pos:column="20"/></operator> <operator pos:line="326" pos:column="21">(<pos:position pos:line="326" pos:column="22"/></operator><name pos:line="326" pos:column="22">PMIB_IPNETTABLE<pos:position pos:line="326" pos:column="37"/></name><operator pos:line="326" pos:column="37">)<pos:position pos:line="326" pos:column="38"/></operator><call><name pos:line="326" pos:column="38">xmalloc<pos:position pos:line="326" pos:column="45"/></name><argument_list pos:line="326" pos:column="45">(<argument><expr><name pos:line="326" pos:column="46">ipNetTableLen<pos:position pos:line="326" pos:column="59"/></name></expr></argument>)<pos:position pos:line="326" pos:column="60"/></argument_list></call><operator pos:line="326" pos:column="60">)<pos:position pos:line="326" pos:column="61"/></operator> <operator pos:line="326" pos:column="62">==<pos:position pos:line="326" pos:column="64"/></operator> <name pos:line="326" pos:column="65">NULL<pos:position pos:line="326" pos:column="69"/></name></expr>)<pos:position pos:line="326" pos:column="70"/></condition><then pos:line="326" pos:column="70"> <block pos:line="326" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="327" pos:column="9">debugs<pos:position pos:line="327" pos:column="15"/></name><argument_list pos:line="327" pos:column="15">(<argument><expr><literal type="number" pos:line="327" pos:column="16">28<pos:position pos:line="327" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="327" pos:column="20">DBG_CRITICAL<pos:position pos:line="327" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="34">"Can't allocate temporary ARP table!"<pos:position pos:line="327" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="327" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="328" pos:column="9">clear<pos:position pos:line="328" pos:column="14"/></name><argument_list pos:line="328" pos:column="14">()<pos:position pos:line="328" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="17"/></expr_stmt>
        <return pos:line="329" pos:column="9">return <expr><literal type="boolean" pos:line="329" pos:column="16">false<pos:position pos:line="329" pos:column="21"/></literal></expr>;<pos:position pos:line="329" pos:column="22"/></return>
    }<pos:position pos:line="330" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="332" pos:column="5">/* Get actual ARP table */</comment>
    <if pos:line="333" pos:column="5">if <condition pos:line="333" pos:column="8">(<expr><operator pos:line="333" pos:column="9">(<pos:position pos:line="333" pos:column="10"/></operator><name pos:line="333" pos:column="10">dwNetTable<pos:position pos:line="333" pos:column="20"/></name> <operator pos:line="333" pos:column="21">=<pos:position pos:line="333" pos:column="22"/></operator> <call><name pos:line="333" pos:column="23">GetIpNetTable<pos:position pos:line="333" pos:column="36"/></name><argument_list pos:line="333" pos:column="36">(<argument><expr><name pos:line="333" pos:column="37">NetTable<pos:position pos:line="333" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="333" pos:column="47">&amp;<pos:position pos:line="333" pos:column="52"/></operator><name pos:line="333" pos:column="48">ipNetTableLen<pos:position pos:line="333" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="333" pos:column="63">FALSE<pos:position pos:line="333" pos:column="68"/></name></expr></argument>)<pos:position pos:line="333" pos:column="69"/></argument_list></call><operator pos:line="333" pos:column="69">)<pos:position pos:line="333" pos:column="70"/></operator> <operator pos:line="333" pos:column="71">!=<pos:position pos:line="333" pos:column="73"/></operator> <name pos:line="333" pos:column="74">NO_ERROR<pos:position pos:line="333" pos:column="82"/></name></expr>)<pos:position pos:line="333" pos:column="83"/></condition><then pos:line="333" pos:column="83"> <block pos:line="333" pos:column="84">{
        <expr_stmt><expr><call><name pos:line="334" pos:column="9">debugs<pos:position pos:line="334" pos:column="15"/></name><argument_list pos:line="334" pos:column="15">(<argument><expr><literal type="number" pos:line="334" pos:column="16">28<pos:position pos:line="334" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="334" pos:column="20">DBG_CRITICAL<pos:position pos:line="334" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="34">"Can't retrieve ARP table!"<pos:position pos:line="334" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="335" pos:column="9">xfree<pos:position pos:line="335" pos:column="14"/></name><argument_list pos:line="335" pos:column="14">(<argument><expr><name pos:line="335" pos:column="15">NetTable<pos:position pos:line="335" pos:column="23"/></name></expr></argument>)<pos:position pos:line="335" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="336" pos:column="9">clear<pos:position pos:line="336" pos:column="14"/></name><argument_list pos:line="336" pos:column="14">()<pos:position pos:line="336" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="17"/></expr_stmt>
        <return pos:line="337" pos:column="9">return <expr><literal type="boolean" pos:line="337" pos:column="16">false<pos:position pos:line="337" pos:column="21"/></literal></expr>;<pos:position pos:line="337" pos:column="22"/></return>
    }<pos:position pos:line="338" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="340" pos:column="5">/* Find MAC address from net table */</comment>
    <for pos:line="341" pos:column="5">for <control pos:line="341" pos:column="9">(<init><expr><name pos:line="341" pos:column="10">i<pos:position pos:line="341" pos:column="11"/></name> <operator pos:line="341" pos:column="12">=<pos:position pos:line="341" pos:column="13"/></operator> <literal type="number" pos:line="341" pos:column="14">0<pos:position pos:line="341" pos:column="15"/></literal></expr> ;<pos:position pos:line="341" pos:column="17"/></init> <condition><expr><name pos:line="341" pos:column="18">i<pos:position pos:line="341" pos:column="19"/></name> <operator pos:line="341" pos:column="20">&lt;<pos:position pos:line="341" pos:column="24"/></operator> <name><name pos:line="341" pos:column="22">NetTable<pos:position pos:line="341" pos:column="30"/></name><operator pos:line="341" pos:column="30">-&gt;<pos:position pos:line="341" pos:column="35"/></operator><name pos:line="341" pos:column="32">dwNumEntries<pos:position pos:line="341" pos:column="44"/></name></name></expr> ;<pos:position pos:line="341" pos:column="46"/></condition> <incr><expr><operator pos:line="341" pos:column="47">++<pos:position pos:line="341" pos:column="49"/></operator><name pos:line="341" pos:column="49">i<pos:position pos:line="341" pos:column="50"/></name></expr></incr>)<pos:position pos:line="341" pos:column="51"/></control> <block pos:line="341" pos:column="52">{
        <decl_stmt><decl><type><name pos:line="342" pos:column="9">in_addr<pos:position pos:line="342" pos:column="16"/></name></type> <name pos:line="342" pos:column="17">a<pos:position pos:line="342" pos:column="18"/></name></decl>;<pos:position pos:line="342" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="343" pos:column="9">a<pos:position pos:line="343" pos:column="10"/></name><operator pos:line="343" pos:column="10">.<pos:position pos:line="343" pos:column="11"/></operator><name pos:line="343" pos:column="11">s_addr<pos:position pos:line="343" pos:column="17"/></name></name> <operator pos:line="343" pos:column="18">=<pos:position pos:line="343" pos:column="19"/></operator> <name><name pos:line="343" pos:column="20">NetTable<pos:position pos:line="343" pos:column="28"/></name><operator pos:line="343" pos:column="28">-&gt;<pos:position pos:line="343" pos:column="33"/></operator><name pos:line="343" pos:column="30">table<pos:position pos:line="343" pos:column="35"/></name><index pos:line="343" pos:column="35">[<expr><name pos:line="343" pos:column="36">i<pos:position pos:line="343" pos:column="37"/></name></expr>]<pos:position pos:line="343" pos:column="38"/></index></name><operator pos:line="343" pos:column="38">.<pos:position pos:line="343" pos:column="39"/></operator><name pos:line="343" pos:column="39">dwAddr<pos:position pos:line="343" pos:column="45"/></name></expr>;<pos:position pos:line="343" pos:column="46"/></expr_stmt>
        <if pos:line="344" pos:column="9">if <condition pos:line="344" pos:column="12">(<expr><name pos:line="344" pos:column="13">c<pos:position pos:line="344" pos:column="14"/></name> <operator pos:line="344" pos:column="15">==<pos:position pos:line="344" pos:column="17"/></operator> <name pos:line="344" pos:column="18">a<pos:position pos:line="344" pos:column="19"/></name> <operator pos:line="344" pos:column="20">&amp;&amp;<pos:position pos:line="344" pos:column="30"/></operator> <operator pos:line="344" pos:column="23">(<pos:position pos:line="344" pos:column="24"/></operator><name><name pos:line="344" pos:column="24">NetTable<pos:position pos:line="344" pos:column="32"/></name><operator pos:line="344" pos:column="32">-&gt;<pos:position pos:line="344" pos:column="37"/></operator><name pos:line="344" pos:column="34">table<pos:position pos:line="344" pos:column="39"/></name><index pos:line="344" pos:column="39">[<expr><name pos:line="344" pos:column="40">i<pos:position pos:line="344" pos:column="41"/></name></expr>]<pos:position pos:line="344" pos:column="42"/></index></name><operator pos:line="344" pos:column="42">.<pos:position pos:line="344" pos:column="43"/></operator><name pos:line="344" pos:column="43">dwType<pos:position pos:line="344" pos:column="49"/></name> <operator pos:line="344" pos:column="50">&gt;<pos:position pos:line="344" pos:column="54"/></operator> <literal type="number" pos:line="344" pos:column="52">2<pos:position pos:line="344" pos:column="53"/></literal><operator pos:line="344" pos:column="53">)<pos:position pos:line="344" pos:column="54"/></operator></expr>)<pos:position pos:line="344" pos:column="55"/></condition><then pos:line="344" pos:column="55"> <block pos:line="344" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="345" pos:column="13">arpReq<pos:position pos:line="345" pos:column="19"/></name><operator pos:line="345" pos:column="19">.<pos:position pos:line="345" pos:column="20"/></operator><name pos:line="345" pos:column="20">arp_ha<pos:position pos:line="345" pos:column="26"/></name><operator pos:line="345" pos:column="26">.<pos:position pos:line="345" pos:column="27"/></operator><name pos:line="345" pos:column="27">sa_family<pos:position pos:line="345" pos:column="36"/></name></name> <operator pos:line="345" pos:column="37">=<pos:position pos:line="345" pos:column="38"/></operator> <name pos:line="345" pos:column="39">AF_UNSPEC<pos:position pos:line="345" pos:column="48"/></name></expr>;<pos:position pos:line="345" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="346" pos:column="13">memcpy<pos:position pos:line="346" pos:column="19"/></name><argument_list pos:line="346" pos:column="19">(<argument><expr><name><name pos:line="346" pos:column="20">arpReq<pos:position pos:line="346" pos:column="26"/></name><operator pos:line="346" pos:column="26">.<pos:position pos:line="346" pos:column="27"/></operator><name pos:line="346" pos:column="27">arp_ha<pos:position pos:line="346" pos:column="33"/></name><operator pos:line="346" pos:column="33">.<pos:position pos:line="346" pos:column="34"/></operator><name pos:line="346" pos:column="34">sa_data<pos:position pos:line="346" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="43">NetTable<pos:position pos:line="346" pos:column="51"/></name><operator pos:line="346" pos:column="51">-&gt;<pos:position pos:line="346" pos:column="56"/></operator><name pos:line="346" pos:column="53">table<pos:position pos:line="346" pos:column="58"/></name><index pos:line="346" pos:column="58">[<expr><name pos:line="346" pos:column="59">i<pos:position pos:line="346" pos:column="60"/></name></expr>]<pos:position pos:line="346" pos:column="61"/></index></name><operator pos:line="346" pos:column="61">.<pos:position pos:line="346" pos:column="62"/></operator><name pos:line="346" pos:column="62">bPhysAddr<pos:position pos:line="346" pos:column="71"/></name></expr></argument>, <argument><expr><name><name pos:line="346" pos:column="73">NetTable<pos:position pos:line="346" pos:column="81"/></name><operator pos:line="346" pos:column="81">-&gt;<pos:position pos:line="346" pos:column="86"/></operator><name pos:line="346" pos:column="83">table<pos:position pos:line="346" pos:column="88"/></name><index pos:line="346" pos:column="88">[<expr><name pos:line="346" pos:column="89">i<pos:position pos:line="346" pos:column="90"/></name></expr>]<pos:position pos:line="346" pos:column="91"/></index></name><operator pos:line="346" pos:column="91">.<pos:position pos:line="346" pos:column="92"/></operator><name pos:line="346" pos:column="92">dwPhysAddrLen<pos:position pos:line="346" pos:column="105"/></name></expr></argument>)<pos:position pos:line="346" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="107"/></expr_stmt>
        }<pos:position pos:line="347" pos:column="10"/></block></then></if>
    }<pos:position pos:line="348" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="350" pos:column="5">xfree<pos:position pos:line="350" pos:column="10"/></name><argument_list pos:line="350" pos:column="10">(<argument><expr><name pos:line="350" pos:column="11">NetTable<pos:position pos:line="350" pos:column="19"/></name></expr></argument>)<pos:position pos:line="350" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="21"/></expr_stmt>

    <if pos:line="352" pos:column="5">if <condition pos:line="352" pos:column="8">(<expr><name><name pos:line="352" pos:column="9">arpReq<pos:position pos:line="352" pos:column="15"/></name><operator pos:line="352" pos:column="15">.<pos:position pos:line="352" pos:column="16"/></operator><name pos:line="352" pos:column="16">arp_ha<pos:position pos:line="352" pos:column="22"/></name><operator pos:line="352" pos:column="22">.<pos:position pos:line="352" pos:column="23"/></operator><name pos:line="352" pos:column="23">sa_data<pos:position pos:line="352" pos:column="30"/></name><index pos:line="352" pos:column="30">[<expr><literal type="number" pos:line="352" pos:column="31">0<pos:position pos:line="352" pos:column="32"/></literal></expr>]<pos:position pos:line="352" pos:column="33"/></index></name> <operator pos:line="352" pos:column="34">==<pos:position pos:line="352" pos:column="36"/></operator> <literal type="number" pos:line="352" pos:column="37">0<pos:position pos:line="352" pos:column="38"/></literal> <operator pos:line="352" pos:column="39">&amp;&amp;<pos:position pos:line="352" pos:column="49"/></operator> <name><name pos:line="352" pos:column="42">arpReq<pos:position pos:line="352" pos:column="48"/></name><operator pos:line="352" pos:column="48">.<pos:position pos:line="352" pos:column="49"/></operator><name pos:line="352" pos:column="49">arp_ha<pos:position pos:line="352" pos:column="55"/></name><operator pos:line="352" pos:column="55">.<pos:position pos:line="352" pos:column="56"/></operator><name pos:line="352" pos:column="56">sa_data<pos:position pos:line="352" pos:column="63"/></name><index pos:line="352" pos:column="63">[<expr><literal type="number" pos:line="352" pos:column="64">1<pos:position pos:line="352" pos:column="65"/></literal></expr>]<pos:position pos:line="352" pos:column="66"/></index></name> <operator pos:line="352" pos:column="67">==<pos:position pos:line="352" pos:column="69"/></operator> <literal type="number" pos:line="352" pos:column="70">0<pos:position pos:line="352" pos:column="71"/></literal> <operator pos:line="352" pos:column="72">&amp;&amp;<pos:position pos:line="352" pos:column="82"/></operator>
            <name><name pos:line="353" pos:column="13">arpReq<pos:position pos:line="353" pos:column="19"/></name><operator pos:line="353" pos:column="19">.<pos:position pos:line="353" pos:column="20"/></operator><name pos:line="353" pos:column="20">arp_ha<pos:position pos:line="353" pos:column="26"/></name><operator pos:line="353" pos:column="26">.<pos:position pos:line="353" pos:column="27"/></operator><name pos:line="353" pos:column="27">sa_data<pos:position pos:line="353" pos:column="34"/></name><index pos:line="353" pos:column="34">[<expr><literal type="number" pos:line="353" pos:column="35">2<pos:position pos:line="353" pos:column="36"/></literal></expr>]<pos:position pos:line="353" pos:column="37"/></index></name> <operator pos:line="353" pos:column="38">==<pos:position pos:line="353" pos:column="40"/></operator> <literal type="number" pos:line="353" pos:column="41">0<pos:position pos:line="353" pos:column="42"/></literal> <operator pos:line="353" pos:column="43">&amp;&amp;<pos:position pos:line="353" pos:column="53"/></operator> <name><name pos:line="353" pos:column="46">arpReq<pos:position pos:line="353" pos:column="52"/></name><operator pos:line="353" pos:column="52">.<pos:position pos:line="353" pos:column="53"/></operator><name pos:line="353" pos:column="53">arp_ha<pos:position pos:line="353" pos:column="59"/></name><operator pos:line="353" pos:column="59">.<pos:position pos:line="353" pos:column="60"/></operator><name pos:line="353" pos:column="60">sa_data<pos:position pos:line="353" pos:column="67"/></name><index pos:line="353" pos:column="67">[<expr><literal type="number" pos:line="353" pos:column="68">3<pos:position pos:line="353" pos:column="69"/></literal></expr>]<pos:position pos:line="353" pos:column="70"/></index></name> <operator pos:line="353" pos:column="71">==<pos:position pos:line="353" pos:column="73"/></operator> <literal type="number" pos:line="353" pos:column="74">0<pos:position pos:line="353" pos:column="75"/></literal> <operator pos:line="353" pos:column="76">&amp;&amp;<pos:position pos:line="353" pos:column="86"/></operator>
            <name><name pos:line="354" pos:column="13">arpReq<pos:position pos:line="354" pos:column="19"/></name><operator pos:line="354" pos:column="19">.<pos:position pos:line="354" pos:column="20"/></operator><name pos:line="354" pos:column="20">arp_ha<pos:position pos:line="354" pos:column="26"/></name><operator pos:line="354" pos:column="26">.<pos:position pos:line="354" pos:column="27"/></operator><name pos:line="354" pos:column="27">sa_data<pos:position pos:line="354" pos:column="34"/></name><index pos:line="354" pos:column="34">[<expr><literal type="number" pos:line="354" pos:column="35">4<pos:position pos:line="354" pos:column="36"/></literal></expr>]<pos:position pos:line="354" pos:column="37"/></index></name> <operator pos:line="354" pos:column="38">==<pos:position pos:line="354" pos:column="40"/></operator> <literal type="number" pos:line="354" pos:column="41">0<pos:position pos:line="354" pos:column="42"/></literal> <operator pos:line="354" pos:column="43">&amp;&amp;<pos:position pos:line="354" pos:column="53"/></operator> <name><name pos:line="354" pos:column="46">arpReq<pos:position pos:line="354" pos:column="52"/></name><operator pos:line="354" pos:column="52">.<pos:position pos:line="354" pos:column="53"/></operator><name pos:line="354" pos:column="53">arp_ha<pos:position pos:line="354" pos:column="59"/></name><operator pos:line="354" pos:column="59">.<pos:position pos:line="354" pos:column="60"/></operator><name pos:line="354" pos:column="60">sa_data<pos:position pos:line="354" pos:column="67"/></name><index pos:line="354" pos:column="67">[<expr><literal type="number" pos:line="354" pos:column="68">5<pos:position pos:line="354" pos:column="69"/></literal></expr>]<pos:position pos:line="354" pos:column="70"/></index></name> <operator pos:line="354" pos:column="71">==<pos:position pos:line="354" pos:column="73"/></operator> <literal type="number" pos:line="354" pos:column="74">0<pos:position pos:line="354" pos:column="75"/></literal></expr>)<pos:position pos:line="354" pos:column="76"/></condition><then pos:line="354" pos:column="76"> <block pos:line="354" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="355" pos:column="9">clear<pos:position pos:line="355" pos:column="14"/></name><argument_list pos:line="355" pos:column="14">()<pos:position pos:line="355" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="17"/></expr_stmt>
        <return pos:line="356" pos:column="9">return <expr><literal type="boolean" pos:line="356" pos:column="16">false<pos:position pos:line="356" pos:column="21"/></literal></expr>;<pos:position pos:line="356" pos:column="22"/></return>
    }<pos:position pos:line="357" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="359" pos:column="5">debugs<pos:position pos:line="359" pos:column="11"/></name><argument_list pos:line="359" pos:column="11">(<argument><expr><literal type="number" pos:line="359" pos:column="12">28<pos:position pos:line="359" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="359" pos:column="16">4<pos:position pos:line="359" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="359" pos:column="19">"Got address "<pos:position pos:line="359" pos:column="33"/></literal><operator pos:line="359" pos:column="33">&lt;&lt;<pos:position pos:line="359" pos:column="41"/></operator> <call><name><name pos:line="359" pos:column="36">std<pos:position pos:line="359" pos:column="39"/></name><operator pos:line="359" pos:column="39">::<pos:position pos:line="359" pos:column="41"/></operator><name pos:line="359" pos:column="41">setfill<pos:position pos:line="359" pos:column="48"/></name></name><argument_list pos:line="359" pos:column="48">(<argument><expr><literal type="char" pos:line="359" pos:column="49">'0'<pos:position pos:line="359" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="359" pos:column="53"/></argument_list></call> <operator pos:line="359" pos:column="54">&lt;&lt;<pos:position pos:line="359" pos:column="62"/></operator> <name><name pos:line="359" pos:column="57">std<pos:position pos:line="359" pos:column="60"/></name><operator pos:line="359" pos:column="60">::<pos:position pos:line="359" pos:column="62"/></operator><name pos:line="359" pos:column="62">hex<pos:position pos:line="359" pos:column="65"/></name></name> <operator pos:line="359" pos:column="66">&lt;&lt;<pos:position pos:line="359" pos:column="74"/></operator>
           <call><name><name pos:line="360" pos:column="12">std<pos:position pos:line="360" pos:column="15"/></name><operator pos:line="360" pos:column="15">::<pos:position pos:line="360" pos:column="17"/></operator><name pos:line="360" pos:column="17">setw<pos:position pos:line="360" pos:column="21"/></name></name><argument_list pos:line="360" pos:column="21">(<argument><expr><literal type="number" pos:line="360" pos:column="22">2<pos:position pos:line="360" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="24"/></argument_list></call> <operator pos:line="360" pos:column="25">&lt;&lt;<pos:position pos:line="360" pos:column="33"/></operator> <operator pos:line="360" pos:column="28">(<pos:position pos:line="360" pos:column="29"/></operator><name><name pos:line="360" pos:column="29">arpReq<pos:position pos:line="360" pos:column="35"/></name><operator pos:line="360" pos:column="35">.<pos:position pos:line="360" pos:column="36"/></operator><name pos:line="360" pos:column="36">arp_ha<pos:position pos:line="360" pos:column="42"/></name><operator pos:line="360" pos:column="42">.<pos:position pos:line="360" pos:column="43"/></operator><name pos:line="360" pos:column="43">sa_data<pos:position pos:line="360" pos:column="50"/></name><index pos:line="360" pos:column="50">[<expr><literal type="number" pos:line="360" pos:column="51">0<pos:position pos:line="360" pos:column="52"/></literal></expr>]<pos:position pos:line="360" pos:column="53"/></index></name> <operator pos:line="360" pos:column="54">&amp;<pos:position pos:line="360" pos:column="59"/></operator> <literal type="number" pos:line="360" pos:column="56">0xff<pos:position pos:line="360" pos:column="60"/></literal><operator pos:line="360" pos:column="60">)<pos:position pos:line="360" pos:column="61"/></operator>  <operator pos:line="360" pos:column="63">&lt;&lt;<pos:position pos:line="360" pos:column="71"/></operator> <literal type="string" pos:line="360" pos:column="66">":"<pos:position pos:line="360" pos:column="69"/></literal> <operator pos:line="360" pos:column="70">&lt;&lt;<pos:position pos:line="360" pos:column="78"/></operator>
           <call><name><name pos:line="361" pos:column="12">std<pos:position pos:line="361" pos:column="15"/></name><operator pos:line="361" pos:column="15">::<pos:position pos:line="361" pos:column="17"/></operator><name pos:line="361" pos:column="17">setw<pos:position pos:line="361" pos:column="21"/></name></name><argument_list pos:line="361" pos:column="21">(<argument><expr><literal type="number" pos:line="361" pos:column="22">2<pos:position pos:line="361" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="24"/></argument_list></call> <operator pos:line="361" pos:column="25">&lt;&lt;<pos:position pos:line="361" pos:column="33"/></operator> <operator pos:line="361" pos:column="28">(<pos:position pos:line="361" pos:column="29"/></operator><name><name pos:line="361" pos:column="29">arpReq<pos:position pos:line="361" pos:column="35"/></name><operator pos:line="361" pos:column="35">.<pos:position pos:line="361" pos:column="36"/></operator><name pos:line="361" pos:column="36">arp_ha<pos:position pos:line="361" pos:column="42"/></name><operator pos:line="361" pos:column="42">.<pos:position pos:line="361" pos:column="43"/></operator><name pos:line="361" pos:column="43">sa_data<pos:position pos:line="361" pos:column="50"/></name><index pos:line="361" pos:column="50">[<expr><literal type="number" pos:line="361" pos:column="51">1<pos:position pos:line="361" pos:column="52"/></literal></expr>]<pos:position pos:line="361" pos:column="53"/></index></name> <operator pos:line="361" pos:column="54">&amp;<pos:position pos:line="361" pos:column="59"/></operator> <literal type="number" pos:line="361" pos:column="56">0xff<pos:position pos:line="361" pos:column="60"/></literal><operator pos:line="361" pos:column="60">)<pos:position pos:line="361" pos:column="61"/></operator>  <operator pos:line="361" pos:column="63">&lt;&lt;<pos:position pos:line="361" pos:column="71"/></operator> <literal type="string" pos:line="361" pos:column="66">":"<pos:position pos:line="361" pos:column="69"/></literal> <operator pos:line="361" pos:column="70">&lt;&lt;<pos:position pos:line="361" pos:column="78"/></operator>
           <call><name><name pos:line="362" pos:column="12">std<pos:position pos:line="362" pos:column="15"/></name><operator pos:line="362" pos:column="15">::<pos:position pos:line="362" pos:column="17"/></operator><name pos:line="362" pos:column="17">setw<pos:position pos:line="362" pos:column="21"/></name></name><argument_list pos:line="362" pos:column="21">(<argument><expr><literal type="number" pos:line="362" pos:column="22">2<pos:position pos:line="362" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="362" pos:column="24"/></argument_list></call> <operator pos:line="362" pos:column="25">&lt;&lt;<pos:position pos:line="362" pos:column="33"/></operator> <operator pos:line="362" pos:column="28">(<pos:position pos:line="362" pos:column="29"/></operator><name><name pos:line="362" pos:column="29">arpReq<pos:position pos:line="362" pos:column="35"/></name><operator pos:line="362" pos:column="35">.<pos:position pos:line="362" pos:column="36"/></operator><name pos:line="362" pos:column="36">arp_ha<pos:position pos:line="362" pos:column="42"/></name><operator pos:line="362" pos:column="42">.<pos:position pos:line="362" pos:column="43"/></operator><name pos:line="362" pos:column="43">sa_data<pos:position pos:line="362" pos:column="50"/></name><index pos:line="362" pos:column="50">[<expr><literal type="number" pos:line="362" pos:column="51">2<pos:position pos:line="362" pos:column="52"/></literal></expr>]<pos:position pos:line="362" pos:column="53"/></index></name> <operator pos:line="362" pos:column="54">&amp;<pos:position pos:line="362" pos:column="59"/></operator> <literal type="number" pos:line="362" pos:column="56">0xff<pos:position pos:line="362" pos:column="60"/></literal><operator pos:line="362" pos:column="60">)<pos:position pos:line="362" pos:column="61"/></operator>  <operator pos:line="362" pos:column="63">&lt;&lt;<pos:position pos:line="362" pos:column="71"/></operator> <literal type="string" pos:line="362" pos:column="66">":"<pos:position pos:line="362" pos:column="69"/></literal> <operator pos:line="362" pos:column="70">&lt;&lt;<pos:position pos:line="362" pos:column="78"/></operator>
           <call><name><name pos:line="363" pos:column="12">std<pos:position pos:line="363" pos:column="15"/></name><operator pos:line="363" pos:column="15">::<pos:position pos:line="363" pos:column="17"/></operator><name pos:line="363" pos:column="17">setw<pos:position pos:line="363" pos:column="21"/></name></name><argument_list pos:line="363" pos:column="21">(<argument><expr><literal type="number" pos:line="363" pos:column="22">2<pos:position pos:line="363" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="363" pos:column="24"/></argument_list></call> <operator pos:line="363" pos:column="25">&lt;&lt;<pos:position pos:line="363" pos:column="33"/></operator> <operator pos:line="363" pos:column="28">(<pos:position pos:line="363" pos:column="29"/></operator><name><name pos:line="363" pos:column="29">arpReq<pos:position pos:line="363" pos:column="35"/></name><operator pos:line="363" pos:column="35">.<pos:position pos:line="363" pos:column="36"/></operator><name pos:line="363" pos:column="36">arp_ha<pos:position pos:line="363" pos:column="42"/></name><operator pos:line="363" pos:column="42">.<pos:position pos:line="363" pos:column="43"/></operator><name pos:line="363" pos:column="43">sa_data<pos:position pos:line="363" pos:column="50"/></name><index pos:line="363" pos:column="50">[<expr><literal type="number" pos:line="363" pos:column="51">3<pos:position pos:line="363" pos:column="52"/></literal></expr>]<pos:position pos:line="363" pos:column="53"/></index></name> <operator pos:line="363" pos:column="54">&amp;<pos:position pos:line="363" pos:column="59"/></operator> <literal type="number" pos:line="363" pos:column="56">0xff<pos:position pos:line="363" pos:column="60"/></literal><operator pos:line="363" pos:column="60">)<pos:position pos:line="363" pos:column="61"/></operator>  <operator pos:line="363" pos:column="63">&lt;&lt;<pos:position pos:line="363" pos:column="71"/></operator> <literal type="string" pos:line="363" pos:column="66">":"<pos:position pos:line="363" pos:column="69"/></literal> <operator pos:line="363" pos:column="70">&lt;&lt;<pos:position pos:line="363" pos:column="78"/></operator>
           <call><name><name pos:line="364" pos:column="12">std<pos:position pos:line="364" pos:column="15"/></name><operator pos:line="364" pos:column="15">::<pos:position pos:line="364" pos:column="17"/></operator><name pos:line="364" pos:column="17">setw<pos:position pos:line="364" pos:column="21"/></name></name><argument_list pos:line="364" pos:column="21">(<argument><expr><literal type="number" pos:line="364" pos:column="22">2<pos:position pos:line="364" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="24"/></argument_list></call> <operator pos:line="364" pos:column="25">&lt;&lt;<pos:position pos:line="364" pos:column="33"/></operator> <operator pos:line="364" pos:column="28">(<pos:position pos:line="364" pos:column="29"/></operator><name><name pos:line="364" pos:column="29">arpReq<pos:position pos:line="364" pos:column="35"/></name><operator pos:line="364" pos:column="35">.<pos:position pos:line="364" pos:column="36"/></operator><name pos:line="364" pos:column="36">arp_ha<pos:position pos:line="364" pos:column="42"/></name><operator pos:line="364" pos:column="42">.<pos:position pos:line="364" pos:column="43"/></operator><name pos:line="364" pos:column="43">sa_data<pos:position pos:line="364" pos:column="50"/></name><index pos:line="364" pos:column="50">[<expr><literal type="number" pos:line="364" pos:column="51">4<pos:position pos:line="364" pos:column="52"/></literal></expr>]<pos:position pos:line="364" pos:column="53"/></index></name> <operator pos:line="364" pos:column="54">&amp;<pos:position pos:line="364" pos:column="59"/></operator> <literal type="number" pos:line="364" pos:column="56">0xff<pos:position pos:line="364" pos:column="60"/></literal><operator pos:line="364" pos:column="60">)<pos:position pos:line="364" pos:column="61"/></operator>  <operator pos:line="364" pos:column="63">&lt;&lt;<pos:position pos:line="364" pos:column="71"/></operator> <literal type="string" pos:line="364" pos:column="66">":"<pos:position pos:line="364" pos:column="69"/></literal> <operator pos:line="364" pos:column="70">&lt;&lt;<pos:position pos:line="364" pos:column="78"/></operator>
           <call><name><name pos:line="365" pos:column="12">std<pos:position pos:line="365" pos:column="15"/></name><operator pos:line="365" pos:column="15">::<pos:position pos:line="365" pos:column="17"/></operator><name pos:line="365" pos:column="17">setw<pos:position pos:line="365" pos:column="21"/></name></name><argument_list pos:line="365" pos:column="21">(<argument><expr><literal type="number" pos:line="365" pos:column="22">2<pos:position pos:line="365" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="365" pos:column="24"/></argument_list></call> <operator pos:line="365" pos:column="25">&lt;&lt;<pos:position pos:line="365" pos:column="33"/></operator> <operator pos:line="365" pos:column="28">(<pos:position pos:line="365" pos:column="29"/></operator><name><name pos:line="365" pos:column="29">arpReq<pos:position pos:line="365" pos:column="35"/></name><operator pos:line="365" pos:column="35">.<pos:position pos:line="365" pos:column="36"/></operator><name pos:line="365" pos:column="36">arp_ha<pos:position pos:line="365" pos:column="42"/></name><operator pos:line="365" pos:column="42">.<pos:position pos:line="365" pos:column="43"/></operator><name pos:line="365" pos:column="43">sa_data<pos:position pos:line="365" pos:column="50"/></name><index pos:line="365" pos:column="50">[<expr><literal type="number" pos:line="365" pos:column="51">5<pos:position pos:line="365" pos:column="52"/></literal></expr>]<pos:position pos:line="365" pos:column="53"/></index></name> <operator pos:line="365" pos:column="54">&amp;<pos:position pos:line="365" pos:column="59"/></operator> <literal type="number" pos:line="365" pos:column="56">0xff<pos:position pos:line="365" pos:column="60"/></literal><operator pos:line="365" pos:column="60">)<pos:position pos:line="365" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="365" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="367" pos:column="5">set<pos:position pos:line="367" pos:column="8"/></name><argument_list pos:line="367" pos:column="8">(<argument><expr><name><name pos:line="367" pos:column="9">arpReq<pos:position pos:line="367" pos:column="15"/></name><operator pos:line="367" pos:column="15">.<pos:position pos:line="367" pos:column="16"/></operator><name pos:line="367" pos:column="16">arp_ha<pos:position pos:line="367" pos:column="22"/></name><operator pos:line="367" pos:column="22">.<pos:position pos:line="367" pos:column="23"/></operator><name pos:line="367" pos:column="23">sa_data<pos:position pos:line="367" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="367" pos:column="32">6<pos:position pos:line="367" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="367" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="35"/></expr_stmt>
    <return pos:line="368" pos:column="5">return <expr><literal type="boolean" pos:line="368" pos:column="12">true<pos:position pos:line="368" pos:column="16"/></literal></expr>;<pos:position pos:line="368" pos:column="17"/></return>

<cpp:else pos:line="370" pos:column="1">#<cpp:directive pos:line="370" pos:column="2">else<pos:position pos:line="370" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><call><name pos:line="372" pos:column="5">debugs<pos:position pos:line="372" pos:column="11"/></name><argument_list pos:line="372" pos:column="11">(<argument><expr><literal type="number" pos:line="372" pos:column="12">28<pos:position pos:line="372" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="372" pos:column="16">DBG_CRITICAL<pos:position pos:line="372" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="372" pos:column="30">"ERROR: ARP / MAC / EUI-* operations not supported on this operating system."<pos:position pos:line="372" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="372" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="109"/></expr_stmt>

<cpp:endif pos:line="374" pos:column="1">#<cpp:directive pos:line="374" pos:column="2">endif<pos:position pos:line="374" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="375" pos:column="5">/*
     * Address was not found on any interface
     */</comment>
    <expr_stmt><expr><call><name pos:line="378" pos:column="5">debugs<pos:position pos:line="378" pos:column="11"/></name><argument_list pos:line="378" pos:column="11">(<argument><expr><literal type="number" pos:line="378" pos:column="12">28<pos:position pos:line="378" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="378" pos:column="16">3<pos:position pos:line="378" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="378" pos:column="19">HERE<pos:position pos:line="378" pos:column="23"/></name> <operator pos:line="378" pos:column="24">&lt;&lt;<pos:position pos:line="378" pos:column="32"/></operator> <name pos:line="378" pos:column="27">ipAddr<pos:position pos:line="378" pos:column="33"/></name> <operator pos:line="378" pos:column="34">&lt;&lt;<pos:position pos:line="378" pos:column="42"/></operator> <literal type="string" pos:line="378" pos:column="37">" NOT found"<pos:position pos:line="378" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="378" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="380" pos:column="5">clear<pos:position pos:line="380" pos:column="10"/></name><argument_list pos:line="380" pos:column="10">()<pos:position pos:line="380" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="13"/></expr_stmt>
    <return pos:line="381" pos:column="5">return <expr><literal type="boolean" pos:line="381" pos:column="12">false<pos:position pos:line="381" pos:column="17"/></literal></expr>;<pos:position pos:line="381" pos:column="18"/></return>
}<pos:position pos:line="382" pos:column="2"/></block></function></unit>

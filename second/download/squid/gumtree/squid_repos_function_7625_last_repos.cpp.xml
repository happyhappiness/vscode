<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7625_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">base64_encode_final<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name><name pos:line="2" pos:column="21">struct<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">base64_encode_ctx<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">ctx<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>,
                    <parameter><decl><type><name pos:line="3" pos:column="21">uint8_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">dst<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="34"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name></type> <name pos:line="5" pos:column="14">done<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">bits<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><name><name pos:line="6" pos:column="21">ctx<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">bits<pos:position pos:line="6" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">bits<pos:position pos:line="8" pos:column="13"/></name></expr>)<pos:position pos:line="8" pos:column="14"/></condition><then pos:line="8" pos:column="14"> <block pos:line="8" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">dst<pos:position pos:line="9" pos:column="12"/></name><index pos:line="9" pos:column="12">[<expr><name pos:line="9" pos:column="13">done<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">++<pos:position pos:line="9" pos:column="19"/></operator></expr>]<pos:position pos:line="9" pos:column="20"/></index></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">ENCODE<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">ctx<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">word<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">&lt;&lt;<pos:position pos:line="9" pos:column="48"/></operator> <operator pos:line="9" pos:column="43">(<pos:position pos:line="9" pos:column="44"/></operator><literal type="number" pos:line="9" pos:column="44">6<pos:position pos:line="9" pos:column="45"/></literal> <operator pos:line="9" pos:column="46">-<pos:position pos:line="9" pos:column="47"/></operator> <name><name pos:line="9" pos:column="48">ctx<pos:position pos:line="9" pos:column="51"/></name><operator pos:line="9" pos:column="51">-&gt;<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="53">bits<pos:position pos:line="9" pos:column="57"/></name></name><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
        <for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init pos:line="10" pos:column="14">;<pos:position pos:line="10" pos:column="15"/></init> <condition><expr><name pos:line="10" pos:column="16">bits<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&lt;<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="23">6<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></condition> <incr><expr><name pos:line="10" pos:column="26">bits<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">+=<pos:position pos:line="10" pos:column="33"/></operator> <literal type="number" pos:line="10" pos:column="34">2<pos:position pos:line="10" pos:column="35"/></literal></expr></incr>)<pos:position pos:line="10" pos:column="36"/></control>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="13">dst<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><name pos:line="11" pos:column="17">done<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">++<pos:position pos:line="11" pos:column="23"/></operator></expr>]<pos:position pos:line="11" pos:column="24"/></index></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="char" pos:line="11" pos:column="27">'='<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt></block></for>

        <expr_stmt><expr><name><name pos:line="13" pos:column="9">ctx<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">bits<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">done<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&lt;=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="20">BASE64_ENCODE_FINAL_LENGTH<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">done<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

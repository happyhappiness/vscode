<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3687_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">QosConfig<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">parseConfigLine<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// %i honors 0 and 0x prefixes, which are important for things like umask</comment>
    <comment type="block" pos:line="5" pos:column="5">/* parse options ... */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">token<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">( <expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">token<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <call><name pos:line="7" pos:column="22">strtok<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">NULL<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">w_space<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator></expr> )<pos:position pos:line="7" pos:column="46"/></condition> <block pos:line="7" pos:column="47">{

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strncmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">token<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="28">"local-hit="<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="9" pos:column="41">10<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call> <operator pos:line="9" pos:column="45">==<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="48">0<pos:position pos:line="9" pos:column="49"/></literal></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">sscanf<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name><name pos:line="10" pos:column="21">token<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><literal type="number" pos:line="10" pos:column="27">10<pos:position pos:line="10" pos:column="29"/></literal></expr>]<pos:position pos:line="10" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"%i"<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="38">&amp;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="39">tos_local_hit<pos:position pos:line="10" pos:column="52"/></name></expr></argument>)<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then> <elseif pos:line="11" pos:column="11">else <if pos:line="11" pos:column="16">if <condition pos:line="11" pos:column="19">(<expr><call><name pos:line="11" pos:column="20">strncmp<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">token<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"sibling-hit="<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="50">12<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <literal type="number" pos:line="11" pos:column="57">0<pos:position pos:line="11" pos:column="58"/></literal></expr>)<pos:position pos:line="11" pos:column="59"/></condition><then pos:line="11" pos:column="59"> <block pos:line="11" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">sscanf<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><operator pos:line="12" pos:column="20">&amp;<pos:position pos:line="12" pos:column="25"/></operator><name><name pos:line="12" pos:column="21">token<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><literal type="number" pos:line="12" pos:column="27">12<pos:position pos:line="12" pos:column="29"/></literal></expr>]<pos:position pos:line="12" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"%i"<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="38">&amp;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="39">tos_sibling_hit<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if></elseif> <elseif pos:line="13" pos:column="11">else <if pos:line="13" pos:column="16">if <condition pos:line="13" pos:column="19">(<expr><call><name pos:line="13" pos:column="20">strncmp<pos:position pos:line="13" pos:column="27"/></name><argument_list pos:line="13" pos:column="27">(<argument><expr><name pos:line="13" pos:column="28">token<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="35">"parent-hit="<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="49">11<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call> <operator pos:line="13" pos:column="53">==<pos:position pos:line="13" pos:column="55"/></operator> <literal type="number" pos:line="13" pos:column="56">0<pos:position pos:line="13" pos:column="57"/></literal></expr>)<pos:position pos:line="13" pos:column="58"/></condition><then pos:line="13" pos:column="58"> <block pos:line="13" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">sscanf<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><name><name pos:line="14" pos:column="21">token<pos:position pos:line="14" pos:column="26"/></name><index pos:line="14" pos:column="26">[<expr><literal type="number" pos:line="14" pos:column="27">11<pos:position pos:line="14" pos:column="29"/></literal></expr>]<pos:position pos:line="14" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"%i"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="39">tos_parent_hit<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if></elseif> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><call><name pos:line="15" pos:column="20">strcmp<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">token<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"disable-preserve-miss"<pos:position pos:line="15" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call> <operator pos:line="15" pos:column="59">==<pos:position pos:line="15" pos:column="61"/></operator> <literal type="number" pos:line="15" pos:column="62">0<pos:position pos:line="15" pos:column="63"/></literal></expr>)<pos:position pos:line="15" pos:column="64"/></condition><then pos:line="15" pos:column="64"> <block pos:line="15" pos:column="65">{
            <expr_stmt><expr><name pos:line="16" pos:column="13">preserve_miss_tos<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">=<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">0<pos:position pos:line="16" pos:column="34"/></literal></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="17" pos:column="13">preserve_miss_tos_mask<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">0<pos:position pos:line="17" pos:column="39"/></literal></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name pos:line="18" pos:column="20">preserve_miss_tos<pos:position pos:line="18" pos:column="37"/></name> <operator pos:line="18" pos:column="38">&amp;&amp;<pos:position pos:line="18" pos:column="48"/></operator> <call><name pos:line="18" pos:column="41">strncmp<pos:position pos:line="18" pos:column="48"/></name><argument_list pos:line="18" pos:column="48">(<argument><expr><name pos:line="18" pos:column="49">token<pos:position pos:line="18" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="56">"miss-mask="<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="69">10<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="72"/></argument_list></call> <operator pos:line="18" pos:column="73">==<pos:position pos:line="18" pos:column="75"/></operator> <literal type="number" pos:line="18" pos:column="76">0<pos:position pos:line="18" pos:column="77"/></literal></expr>)<pos:position pos:line="18" pos:column="78"/></condition><then pos:line="18" pos:column="78"> <block pos:line="18" pos:column="79">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">sscanf<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><operator pos:line="19" pos:column="20">&amp;<pos:position pos:line="19" pos:column="25"/></operator><name><name pos:line="19" pos:column="21">token<pos:position pos:line="19" pos:column="26"/></name><index pos:line="19" pos:column="26">[<expr><literal type="number" pos:line="19" pos:column="27">10<pos:position pos:line="19" pos:column="29"/></literal></expr>]<pos:position pos:line="19" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="32">"%i"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="19" pos:column="38">&amp;<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="39">preserve_miss_tos_mask<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="21" pos:column="6"/></block></while>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

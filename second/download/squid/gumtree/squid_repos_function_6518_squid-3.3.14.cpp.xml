<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6518_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Inquirer<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">start<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">16<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">Ipc<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">Inquirer<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">::<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">start<pos:position pos:line="5" pos:column="25"/></name></name><argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name><name pos:line="6" pos:column="10">Comm<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">IsConnOpen<pos:position pos:line="6" pos:column="26"/></name></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name pos:line="6" pos:column="27">conn<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">aggrAction<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HAVE_UNIQUE_PTR<pos:position pos:line="9" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">std<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">::<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">unique_ptr<pos:position pos:line="10" pos:column="20"/></name><argument_list type="generic" pos:line="10" pos:column="20">&lt;<argument><expr><name pos:line="10" pos:column="21">MemBuf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="31"/></argument_list></name></name></type> <name pos:line="10" pos:column="29">replyBuf<pos:position pos:line="10" pos:column="37"/></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">std<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">::<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">auto_ptr<pos:position pos:line="12" pos:column="18"/></name><argument_list type="generic" pos:line="12" pos:column="18">&lt;<argument><expr><name pos:line="12" pos:column="19">MemBuf<pos:position pos:line="12" pos:column="25"/></name></expr></argument>&gt;<pos:position pos:line="12" pos:column="29"/></argument_list></name></name></type> <name pos:line="12" pos:column="27">replyBuf<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name><name pos:line="14" pos:column="9">strands<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">empty<pos:position pos:line="14" pos:column="22"/></name></name><argument_list pos:line="14" pos:column="22">()<pos:position pos:line="14" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">LOCAL_ARRAY<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">char<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="27">url<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="32">MAX_URL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">snprintf<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">url<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">MAX_URL<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="32">"%s"<pos:position pos:line="16" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="16" pos:column="38">aggrAction<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">command<pos:position pos:line="16" pos:column="57"/></name></name><argument_list pos:line="16" pos:column="57">()<pos:position pos:line="16" pos:column="59"/></argument_list></call><operator pos:line="16" pos:column="59">.<pos:position pos:line="16" pos:column="60"/></operator><call><name><name pos:line="16" pos:column="60">params<pos:position pos:line="16" pos:column="66"/></name><operator pos:line="16" pos:column="66">.<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="67">httpUri<pos:position pos:line="16" pos:column="74"/></name><operator pos:line="16" pos:column="74">.<pos:position pos:line="16" pos:column="75"/></operator><name pos:line="16" pos:column="75">termedBuf<pos:position pos:line="16" pos:column="84"/></name></name><argument_list pos:line="16" pos:column="84">()<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="88"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">HttpRequest<pos:position pos:line="17" pos:column="20"/></name> <modifier pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></modifier></type><name pos:line="17" pos:column="22">req<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><call><name><name pos:line="17" pos:column="28">HttpRequest<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">::<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">CreateFromUrl<pos:position pos:line="17" pos:column="54"/></name></name><argument_list pos:line="17" pos:column="54">(<argument><expr><name pos:line="17" pos:column="55">url<pos:position pos:line="17" pos:column="58"/></name></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="60"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">ErrorState<pos:position pos:line="18" pos:column="19"/></name></type> <name pos:line="18" pos:column="20">err<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">ERR_INVALID_URL<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">HTTP_NOT_FOUND<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">req<pos:position pos:line="18" pos:column="60"/></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">HAVE_UNIQUE_PTR<pos:position pos:line="19" pos:column="20"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name><name pos:line="20" pos:column="9">std<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">::<pos:position pos:line="20" pos:column="14"/></operator><name><name pos:line="20" pos:column="14">unique_ptr<pos:position pos:line="20" pos:column="24"/></name><argument_list type="generic" pos:line="20" pos:column="24">&lt;<argument><expr><name pos:line="20" pos:column="25">HttpReply<pos:position pos:line="20" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="38"/></argument_list></name></name></type> <name pos:line="20" pos:column="36">reply<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><call><name><name pos:line="20" pos:column="42">err<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">.<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">BuildHttpReply<pos:position pos:line="20" pos:column="60"/></name></name><argument_list pos:line="20" pos:column="60">()<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="63"/></argument_list></decl>;<pos:position pos:line="20" pos:column="64"/></decl_stmt>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><name><name pos:line="22" pos:column="9">std<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">::<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">auto_ptr<pos:position pos:line="22" pos:column="22"/></name><argument_list type="generic" pos:line="22" pos:column="22">&lt;<argument><expr><name pos:line="22" pos:column="23">HttpReply<pos:position pos:line="22" pos:column="32"/></name></expr></argument>&gt;<pos:position pos:line="22" pos:column="36"/></argument_list></name></name></type> <name pos:line="22" pos:column="34">reply<pos:position pos:line="22" pos:column="39"/></name><argument_list pos:line="22" pos:column="39">(<argument><expr><call><name><name pos:line="22" pos:column="40">err<pos:position pos:line="22" pos:column="43"/></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">BuildHttpReply<pos:position pos:line="22" pos:column="58"/></name></name><argument_list pos:line="22" pos:column="58">()<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></decl>;<pos:position pos:line="22" pos:column="62"/></decl_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">replyBuf<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">reset<pos:position pos:line="24" pos:column="23"/></name></name><argument_list pos:line="24" pos:column="23">(<argument><expr><call><name><name pos:line="24" pos:column="24">reply<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">-&gt;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="31">pack<pos:position pos:line="24" pos:column="35"/></name></name><argument_list pos:line="24" pos:column="35">()<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">HAVE_UNIQUE_PTR<pos:position pos:line="26" pos:column="20"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name><name pos:line="27" pos:column="9">std<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">::<pos:position pos:line="27" pos:column="14"/></operator><name><name pos:line="27" pos:column="14">unique_ptr<pos:position pos:line="27" pos:column="24"/></name><argument_list type="generic" pos:line="27" pos:column="24">&lt;<argument><expr><name pos:line="27" pos:column="25">HttpReply<pos:position pos:line="27" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="38"/></argument_list></name></name></type> <name pos:line="27" pos:column="36">reply<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><operator pos:line="27" pos:column="42">new<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="46">HttpReply<pos:position pos:line="27" pos:column="55"/></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></decl>;<pos:position pos:line="27" pos:column="57"/></decl_stmt>
<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><name><name pos:line="29" pos:column="9">std<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">::<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">auto_ptr<pos:position pos:line="29" pos:column="22"/></name><argument_list type="generic" pos:line="29" pos:column="22">&lt;<argument><expr><name pos:line="29" pos:column="23">HttpReply<pos:position pos:line="29" pos:column="32"/></name></expr></argument>&gt;<pos:position pos:line="29" pos:column="36"/></argument_list></name></name></type> <name pos:line="29" pos:column="34">reply<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><operator pos:line="29" pos:column="40">new<pos:position pos:line="29" pos:column="43"/></operator> <name pos:line="29" pos:column="44">HttpReply<pos:position pos:line="29" pos:column="53"/></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></decl>;<pos:position pos:line="29" pos:column="55"/></decl_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name><name pos:line="31" pos:column="9">reply<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">setHeaders<pos:position pos:line="31" pos:column="26"/></name></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">HTTP_OK<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="36">NULL<pos:position pos:line="31" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="42">"text/plain"<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="56">-<pos:position pos:line="31" pos:column="57"/></operator><literal type="number" pos:line="31" pos:column="57">1<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="60">squid_curtime<pos:position pos:line="31" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="75">squid_curtime<pos:position pos:line="31" pos:column="88"/></name></expr></argument>)<pos:position pos:line="31" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">reply<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">header<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">putStr<pos:position pos:line="32" pos:column="29"/></name></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">HDR_CONNECTION<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="46">"close"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt> <comment type="line" pos:line="32" pos:column="56">// until we chunk response</comment>
        <expr_stmt><expr><call><name><name pos:line="33" pos:column="9">replyBuf<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">reset<pos:position pos:line="33" pos:column="23"/></name></name><argument_list pos:line="33" pos:column="23">(<argument><expr><call><name><name pos:line="33" pos:column="24">reply<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">pack<pos:position pos:line="33" pos:column="35"/></name></name><argument_list pos:line="33" pos:column="35">()<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="35" pos:column="5">writer<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">asyncCall<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><literal type="number" pos:line="35" pos:column="24">16<pos:position pos:line="35" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="28">5<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="31">"Mgr::Inquirer::noteWroteHeader"<pos:position pos:line="35" pos:column="63"/></literal></expr></argument>,
                       <argument><expr><call><name><name pos:line="36" pos:column="24">CommCbMemFunT<pos:position pos:line="36" pos:column="37"/></name><argument_list type="generic" pos:line="36" pos:column="37">&lt;<argument><expr><name pos:line="36" pos:column="38">Inquirer<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">CommIoCbParams<pos:position pos:line="36" pos:column="62"/></name></expr></argument>&gt;<pos:position pos:line="36" pos:column="66"/></argument_list></name><argument_list pos:line="36" pos:column="63">(<argument><expr><name pos:line="36" pos:column="64">this<pos:position pos:line="36" pos:column="68"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="70">&amp;<pos:position pos:line="36" pos:column="75"/></operator><name><name pos:line="36" pos:column="71">Inquirer<pos:position pos:line="36" pos:column="79"/></name><operator pos:line="36" pos:column="79">::<pos:position pos:line="36" pos:column="81"/></operator><name pos:line="36" pos:column="81">noteWroteHeader<pos:position pos:line="36" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">Comm<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">::<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="11">Write<pos:position pos:line="37" pos:column="16"/></name></name><argument_list pos:line="37" pos:column="16">(<argument><expr><name pos:line="37" pos:column="17">conn<pos:position pos:line="37" pos:column="21"/></name></expr></argument>, <argument><expr><call><name><name pos:line="37" pos:column="23">replyBuf<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">get<pos:position pos:line="37" pos:column="35"/></name></name><argument_list pos:line="37" pos:column="35">()<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">writer<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

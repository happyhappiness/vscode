<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1867_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lookup_t<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">peerDigestLookup<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">CachePeer<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">p<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">HttpRequest<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">request<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="4" pos:column="22"/></name></expr></cpp:if>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">cache_key<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">key<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><ternary><condition><expr><name pos:line="5" pos:column="28">request<pos:position pos:line="5" pos:column="35"/></name></expr> ?<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <expr><call><name pos:line="5" pos:column="38">storeKeyPublicByRequest<pos:position pos:line="5" pos:column="61"/></name><argument_list pos:line="5" pos:column="61">(<argument><expr><name pos:line="5" pos:column="62">request<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="71"/></then><else pos:line="5" pos:column="71">: <expr><name pos:line="5" pos:column="73">NULL<pos:position pos:line="5" pos:column="77"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="78"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">p<pos:position pos:line="6" pos:column="13"/></name></expr></argument>)<pos:position pos:line="6" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">request<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">15<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">5<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="19">"peerDigestLookup: peer "<pos:position pos:line="8" pos:column="44"/></literal> <operator pos:line="8" pos:column="45">&lt;&lt;<pos:position pos:line="8" pos:column="53"/></operator> <name><name pos:line="8" pos:column="48">p<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">host<pos:position pos:line="8" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* does the peeer have a valid digest? */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">p<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">digest<pos:position pos:line="11" pos:column="19"/></name></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20"> <block pos:line="11" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">15<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">5<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"peerDigestLookup: gone!"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">LOOKUP_NONE<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <elseif pos:line="14" pos:column="7">else <if pos:line="14" pos:column="12">if <condition pos:line="14" pos:column="15">(<expr><operator pos:line="14" pos:column="16">!<pos:position pos:line="14" pos:column="17"/></operator><call><name pos:line="14" pos:column="17">peerHTTPOkay<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">p<pos:position pos:line="14" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="33">request<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">15<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">5<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"peerDigestLookup: !peerHTTPOkay"<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">LOOKUP_NONE<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">!<pos:position pos:line="17" pos:column="17"/></operator><name><name pos:line="17" pos:column="17">p<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">digest<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">-&gt;<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="28">flags<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">needed<pos:position pos:line="17" pos:column="40"/></name></name></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">15<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">5<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"peerDigestLookup: note need"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">peerDigestNeeded<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name><name pos:line="19" pos:column="26">p<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">digest<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">LOOKUP_NONE<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if></elseif> <elseif pos:line="21" pos:column="7">else <if pos:line="21" pos:column="12">if <condition pos:line="21" pos:column="15">(<expr><operator pos:line="21" pos:column="16">!<pos:position pos:line="21" pos:column="17"/></operator><name><name pos:line="21" pos:column="17">p<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">digest<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">flags<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">.<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">usable<pos:position pos:line="21" pos:column="40"/></name></name></expr>)<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41"> <block pos:line="21" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">15<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">5<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"peerDigestLookup: !ready &amp;&amp; "<pos:position pos:line="22" pos:column="61"/></literal> <operator pos:line="22" pos:column="54">&lt;&lt;<pos:position pos:line="22" pos:column="62"/></operator> <operator pos:line="22" pos:column="57">(<pos:position pos:line="22" pos:column="58"/></operator><ternary><condition><expr><name><name pos:line="22" pos:column="58">p<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">-&gt;<pos:position pos:line="22" pos:column="64"/></operator><name pos:line="22" pos:column="61">digest<pos:position pos:line="22" pos:column="67"/></name><operator pos:line="22" pos:column="67">-&gt;<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="69">flags<pos:position pos:line="22" pos:column="74"/></name><operator pos:line="22" pos:column="74">.<pos:position pos:line="22" pos:column="75"/></operator><name pos:line="22" pos:column="75">requested<pos:position pos:line="22" pos:column="84"/></name></name></expr> ?<pos:position pos:line="22" pos:column="86"/></condition><then pos:line="22" pos:column="86"> <expr><literal type="string" pos:line="22" pos:column="87">""<pos:position pos:line="22" pos:column="89"/></literal></expr> <pos:position pos:line="22" pos:column="90"/></then><else pos:line="22" pos:column="90">: <expr><literal type="string" pos:line="22" pos:column="92">"!"<pos:position pos:line="22" pos:column="95"/></literal></expr></else></ternary><operator pos:line="22" pos:column="95">)<pos:position pos:line="22" pos:column="96"/></operator> <operator pos:line="22" pos:column="97">&lt;&lt;<pos:position pos:line="22" pos:column="105"/></operator> <literal type="string" pos:line="22" pos:column="100">"requested"<pos:position pos:line="22" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="113"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">LOOKUP_NONE<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">15<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">5<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"peerDigestLookup: OK to lookup peer "<pos:position pos:line="26" pos:column="57"/></literal> <operator pos:line="26" pos:column="58">&lt;&lt;<pos:position pos:line="26" pos:column="66"/></operator> <name><name pos:line="26" pos:column="61">p<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">-&gt;<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="64">host<pos:position pos:line="26" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">assert<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">p<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">digest<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">cd<pos:position pos:line="27" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="28" pos:column="5">/* does digest predict a hit? */</comment>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><call><name pos:line="30" pos:column="10">cacheDigestTest<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">p<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">digest<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">cd<pos:position pos:line="30" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">key<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
        <block type="pseudo"><return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">LOOKUP_MISS<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">debugs<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="number" pos:line="33" pos:column="12">15<pos:position pos:line="33" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="16">5<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="19">"peerDigestLookup: peer "<pos:position pos:line="33" pos:column="44"/></literal> <operator pos:line="33" pos:column="45">&lt;&lt;<pos:position pos:line="33" pos:column="53"/></operator> <name><name pos:line="33" pos:column="48">p<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">host<pos:position pos:line="33" pos:column="55"/></name></name> <operator pos:line="33" pos:column="56">&lt;&lt;<pos:position pos:line="33" pos:column="64"/></operator> <literal type="string" pos:line="33" pos:column="59">" says HIT!"<pos:position pos:line="33" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="73"/></expr_stmt>

    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">LOOKUP_HIT<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></return>

<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">LOOKUP_NONE<pos:position pos:line="39" pos:column="23"/></name></expr>;<pos:position pos:line="39" pos:column="24"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

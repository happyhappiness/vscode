<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4642_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">UFSSwapDir<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">dumpEntry<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">StoreEntry<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">e<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"UFSSwapDir::dumpEntry: FILENO "<pos:position pos:line="4" pos:column="51"/></literal><operator pos:line="4" pos:column="51">&lt;&lt;<pos:position pos:line="4" pos:column="59"/></operator> <call><name><name pos:line="4" pos:column="54">std<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">::<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="59">setfill<pos:position pos:line="4" pos:column="66"/></name></name><argument_list pos:line="4" pos:column="66">(<argument><expr><literal type="char" pos:line="4" pos:column="67">'0'<pos:position pos:line="4" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call> <operator pos:line="4" pos:column="72">&lt;&lt;<pos:position pos:line="4" pos:column="80"/></operator> <name><name pos:line="4" pos:column="75">std<pos:position pos:line="4" pos:column="78"/></name><operator pos:line="4" pos:column="78">::<pos:position pos:line="4" pos:column="80"/></operator><name pos:line="4" pos:column="80">hex<pos:position pos:line="4" pos:column="83"/></name></name> <operator pos:line="4" pos:column="84">&lt;&lt;<pos:position pos:line="4" pos:column="92"/></operator> <name><name pos:line="4" pos:column="87">std<pos:position pos:line="4" pos:column="90"/></name><operator pos:line="4" pos:column="90">::<pos:position pos:line="4" pos:column="92"/></operator><name pos:line="4" pos:column="92">uppercase<pos:position pos:line="4" pos:column="101"/></name></name> <operator pos:line="4" pos:column="102">&lt;&lt;<pos:position pos:line="4" pos:column="110"/></operator> <call><name><name pos:line="4" pos:column="105">std<pos:position pos:line="4" pos:column="108"/></name><operator pos:line="4" pos:column="108">::<pos:position pos:line="4" pos:column="110"/></operator><name pos:line="4" pos:column="110">setw<pos:position pos:line="4" pos:column="114"/></name></name><argument_list pos:line="4" pos:column="114">(<argument><expr><literal type="number" pos:line="4" pos:column="115">8<pos:position pos:line="4" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="117"/></argument_list></call> <operator pos:line="4" pos:column="118">&lt;&lt;<pos:position pos:line="4" pos:column="126"/></operator> <name><name pos:line="4" pos:column="121">e<pos:position pos:line="4" pos:column="122"/></name><operator pos:line="4" pos:column="122">.<pos:position pos:line="4" pos:column="123"/></operator><name pos:line="4" pos:column="123">swap_filen<pos:position pos:line="4" pos:column="133"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="135"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">47<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"UFSSwapDir::dumpEntry: PATH "<pos:position pos:line="5" pos:column="49"/></literal> <operator pos:line="5" pos:column="50">&lt;&lt;<pos:position pos:line="5" pos:column="58"/></operator> <call><name pos:line="5" pos:column="53">fullPath<pos:position pos:line="5" pos:column="61"/></name><argument_list pos:line="5" pos:column="61">(<argument><expr><name><name pos:line="5" pos:column="62">e<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">.<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">swap_filen<pos:position pos:line="5" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="76">NULL<pos:position pos:line="5" pos:column="80"/></name></expr></argument>)<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr></argument>   )<pos:position pos:line="5" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">e<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">.<pos:position pos:line="6" pos:column="7"/></operator><name pos:line="6" pos:column="7">dump<pos:position pos:line="6" pos:column="11"/></name></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">0<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

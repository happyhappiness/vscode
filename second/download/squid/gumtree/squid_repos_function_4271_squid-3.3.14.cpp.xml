<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4271_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ssl_verify_cb<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">ok<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">X509_STORE_CTX<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">ctx<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// preserve original ctx-&gt;error before SSL_ calls can overwrite it</comment>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Ssl<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ssl_error_t<pos:position pos:line="5" pos:column="21"/></name></name></type> <name pos:line="5" pos:column="22">error_no<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><ternary><condition><expr><name pos:line="5" pos:column="33">ok<pos:position pos:line="5" pos:column="35"/></name></expr> ?<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <expr><name pos:line="5" pos:column="38">SSL_ERROR_NONE<pos:position pos:line="5" pos:column="52"/></name></expr> <pos:position pos:line="5" pos:column="53"/></then><else pos:line="5" pos:column="53">: <expr><name><name pos:line="5" pos:column="55">ctx<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">-&gt;<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="60">error<pos:position pos:line="5" pos:column="65"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="66"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">buffer<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><literal type="number" pos:line="7" pos:column="17">256<pos:position pos:line="7" pos:column="20"/></literal></expr>]<pos:position pos:line="7" pos:column="21"/></index></name> <init pos:line="7" pos:column="22">= <expr><literal type="string" pos:line="7" pos:column="24">""<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">SSL<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">ssl<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">SSL<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></operator><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator><call><name pos:line="8" pos:column="23">X509_STORE_CTX_get_ex_data<pos:position pos:line="8" pos:column="49"/></name><argument_list pos:line="8" pos:column="49">(<argument><expr><name pos:line="8" pos:column="50">ctx<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="55">SSL_get_ex_data_X509_STORE_CTX_idx<pos:position pos:line="8" pos:column="89"/></name><argument_list pos:line="8" pos:column="89">()<pos:position pos:line="8" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="93"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">SSL_CTX<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">sslctx<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><call><name pos:line="9" pos:column="23">SSL_get_SSL_CTX<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">ssl<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">server<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><specifier pos:line="10" pos:column="27">const<pos:position pos:line="10" pos:column="32"/></specifier> <name pos:line="10" pos:column="33">char<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator><operator pos:line="10" pos:column="39">)<pos:position pos:line="10" pos:column="40"/></operator><call><name pos:line="10" pos:column="40">SSL_get_ex_data<pos:position pos:line="10" pos:column="55"/></name><argument_list pos:line="10" pos:column="55">(<argument><expr><name pos:line="10" pos:column="56">ssl<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">ssl_ex_index_server<pos:position pos:line="10" pos:column="80"/></name></expr></argument>)<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="82"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">void<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">dont_verify_domain<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><call><name pos:line="11" pos:column="32">SSL_CTX_get_ex_data<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">(<argument><expr><name pos:line="11" pos:column="52">sslctx<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">ssl_ctx_ex_index_dont_verify_domain<pos:position pos:line="11" pos:column="95"/></name></expr></argument>)<pos:position pos:line="11" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="97"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">ACLChecklist<pos:position pos:line="12" pos:column="17"/></name> <modifier pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></modifier></type><name pos:line="12" pos:column="19">check<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><operator pos:line="12" pos:column="27">(<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">ACLChecklist<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">*<pos:position pos:line="12" pos:column="41"/></operator><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator><call><name pos:line="12" pos:column="42">SSL_get_ex_data<pos:position pos:line="12" pos:column="57"/></name><argument_list pos:line="12" pos:column="57">(<argument><expr><name pos:line="12" pos:column="58">ssl<pos:position pos:line="12" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="63">ssl_ex_index_cert_error_check<pos:position pos:line="12" pos:column="92"/></name></expr></argument>)<pos:position pos:line="12" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="94"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">X509<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">peeked_cert<pos:position pos:line="13" pos:column="22"/></name> <init pos:line="13" pos:column="23">= <expr><operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">X509<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator><call><name pos:line="13" pos:column="33">SSL_get_ex_data<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">ssl<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="54">ssl_ex_index_ssl_peeked_cert<pos:position pos:line="13" pos:column="82"/></name></expr></argument>)<pos:position pos:line="13" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="84"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">X509<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">peer_cert<pos:position pos:line="14" pos:column="20"/></name> <init pos:line="14" pos:column="21">= <expr><name><name pos:line="14" pos:column="23">ctx<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">-&gt;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="28">cert<pos:position pos:line="14" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">X509_NAME_oneline<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><call><name pos:line="16" pos:column="23">X509_get_subject_name<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">peer_cert<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">buffer<pos:position pos:line="16" pos:column="63"/></name></expr></argument>,
                      <argument><expr><sizeof pos:line="17" pos:column="23">sizeof<argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">buffer<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">ok<pos:position pos:line="19" pos:column="11"/></name></expr>)<pos:position pos:line="19" pos:column="12"/></condition><then pos:line="19" pos:column="12"> <block pos:line="19" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">83<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">5<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"SSL Certificate signature OK: "<pos:position pos:line="20" pos:column="55"/></literal> <operator pos:line="20" pos:column="56">&lt;&lt;<pos:position pos:line="20" pos:column="64"/></operator> <name pos:line="20" pos:column="59">buffer<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">server<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20"> <block pos:line="22" pos:column="21">{
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">!<pos:position pos:line="23" pos:column="18"/></operator><call><name><name pos:line="23" pos:column="18">Ssl<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">::<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">checkX509ServerValidity<pos:position pos:line="23" pos:column="46"/></name></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">peer_cert<pos:position pos:line="23" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="58">server<pos:position pos:line="23" pos:column="64"/></name></expr></argument>)<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="66"/></condition><then pos:line="23" pos:column="66"> <block pos:line="23" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">debugs<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="number" pos:line="24" pos:column="24">83<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="28">2<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"SQUID_X509_V_ERR_DOMAIN_MISMATCH: Certificate "<pos:position pos:line="24" pos:column="79"/></literal> <operator pos:line="24" pos:column="80">&lt;&lt;<pos:position pos:line="24" pos:column="88"/></operator> <name pos:line="24" pos:column="83">buffer<pos:position pos:line="24" pos:column="89"/></name> <operator pos:line="24" pos:column="90">&lt;&lt;<pos:position pos:line="24" pos:column="98"/></operator> <literal type="string" pos:line="24" pos:column="93">" does not match domainname "<pos:position pos:line="24" pos:column="122"/></literal> <operator pos:line="24" pos:column="123">&lt;&lt;<pos:position pos:line="24" pos:column="131"/></operator> <name pos:line="24" pos:column="126">server<pos:position pos:line="24" pos:column="132"/></name></expr></argument>)<pos:position pos:line="24" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="134"/></expr_stmt>
                <expr_stmt><expr><name pos:line="25" pos:column="17">ok<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
                <expr_stmt><expr><name pos:line="26" pos:column="17">error_no<pos:position pos:line="26" pos:column="25"/></name> <operator pos:line="26" pos:column="26">=<pos:position pos:line="26" pos:column="27"/></operator> <name pos:line="26" pos:column="28">SQUID_X509_V_ERR_DOMAIN_MISMATCH<pos:position pos:line="26" pos:column="60"/></name></expr>;<pos:position pos:line="26" pos:column="61"/></expr_stmt>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">ok<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">&amp;&amp;<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="15">peeked_cert<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
        <comment type="line" pos:line="32" pos:column="9">// Check whether the already peeked certificate matches the new one.</comment>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">X509_cmp<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">peer_cert<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">peeked_cert<pos:position pos:line="33" pos:column="44"/></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call> <operator pos:line="33" pos:column="46">!=<pos:position pos:line="33" pos:column="48"/></operator> <literal type="number" pos:line="33" pos:column="49">0<pos:position pos:line="33" pos:column="50"/></literal></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">83<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="24">2<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="27">"SQUID_X509_V_ERR_CERT_CHANGE: Certificate "<pos:position pos:line="34" pos:column="71"/></literal> <operator pos:line="34" pos:column="72">&lt;&lt;<pos:position pos:line="34" pos:column="80"/></operator> <name pos:line="34" pos:column="75">buffer<pos:position pos:line="34" pos:column="81"/></name> <operator pos:line="34" pos:column="82">&lt;&lt;<pos:position pos:line="34" pos:column="90"/></operator> <literal type="string" pos:line="34" pos:column="85">" does not match peeked certificate"<pos:position pos:line="34" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="123"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">ok<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">error_no<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator>  <name pos:line="36" pos:column="25">SQUID_X509_V_ERR_CERT_CHANGE<pos:position pos:line="36" pos:column="53"/></name></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">ok<pos:position pos:line="40" pos:column="12"/></name></expr>)<pos:position pos:line="40" pos:column="13"/></condition><then pos:line="40" pos:column="13"> <block pos:line="40" pos:column="14">{
        <decl_stmt><decl><type><name><name pos:line="41" pos:column="9">Ssl<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">::<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">Errors<pos:position pos:line="41" pos:column="20"/></name></name> <modifier pos:line="41" pos:column="21">*<pos:position pos:line="41" pos:column="22"/></modifier></type><name pos:line="41" pos:column="22">errs<pos:position pos:line="41" pos:column="26"/></name> <init pos:line="41" pos:column="27">= <expr><cast type="static" pos:line="41" pos:column="29">static_cast<argument_list type="generic" pos:line="41" pos:column="40">&lt;<argument><expr><name><name pos:line="41" pos:column="41">Ssl<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">::<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="46">Errors<pos:position pos:line="41" pos:column="52"/></name></name> <operator pos:line="41" pos:column="53">*<pos:position pos:line="41" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="41" pos:column="58"/></argument_list><argument_list pos:line="41" pos:column="55">(<argument><expr><call><name pos:line="41" pos:column="56">SSL_get_ex_data<pos:position pos:line="41" pos:column="71"/></name><argument_list pos:line="41" pos:column="71">(<argument><expr><name pos:line="41" pos:column="72">ssl<pos:position pos:line="41" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="77">ssl_ex_index_ssl_errors<pos:position pos:line="41" pos:column="100"/></name></expr></argument>)<pos:position pos:line="41" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="102"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="41" pos:column="103"/></decl_stmt>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">errs<pos:position pos:line="42" pos:column="18"/></name></expr>)<pos:position pos:line="42" pos:column="19"/></condition><then pos:line="42" pos:column="19"> <block pos:line="42" pos:column="20">{
            <expr_stmt><expr><name pos:line="43" pos:column="13">errs<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <operator pos:line="43" pos:column="20">new<pos:position pos:line="43" pos:column="23"/></operator> <call><name><name pos:line="43" pos:column="24">Ssl<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">::<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">Errors<pos:position pos:line="43" pos:column="35"/></name></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">error_no<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><operator pos:line="44" pos:column="17">!<pos:position pos:line="44" pos:column="18"/></operator><call><name pos:line="44" pos:column="18">SSL_set_ex_data<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">(<argument><expr><name pos:line="44" pos:column="34">ssl<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="39">ssl_ex_index_ssl_errors<pos:position pos:line="44" pos:column="62"/></name></expr></argument>,  <argument><expr><operator pos:line="44" pos:column="65">(<pos:position pos:line="44" pos:column="66"/></operator><name pos:line="44" pos:column="66">void<pos:position pos:line="44" pos:column="70"/></name> <operator pos:line="44" pos:column="71">*<pos:position pos:line="44" pos:column="72"/></operator><operator pos:line="44" pos:column="72">)<pos:position pos:line="44" pos:column="73"/></operator><name pos:line="44" pos:column="73">errs<pos:position pos:line="44" pos:column="77"/></name></expr></argument>)<pos:position pos:line="44" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="79"/></condition><then pos:line="44" pos:column="79"> <block pos:line="44" pos:column="80">{
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">debugs<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="number" pos:line="45" pos:column="24">83<pos:position pos:line="45" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="28">2<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="31">"Failed to set ssl error_no in ssl_verify_cb: Certificate "<pos:position pos:line="45" pos:column="90"/></literal> <operator pos:line="45" pos:column="91">&lt;&lt;<pos:position pos:line="45" pos:column="99"/></operator> <name pos:line="45" pos:column="94">buffer<pos:position pos:line="45" pos:column="100"/></name></expr></argument>)<pos:position pos:line="45" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="102"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="46" pos:column="17">delete<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">errs<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="47" pos:column="17">errs<pos:position pos:line="47" pos:column="21"/></name> <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">NULL<pos:position pos:line="47" pos:column="28"/></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then> <else pos:line="49" pos:column="11">else <comment type="line" pos:line="49" pos:column="16">// remember another error number</comment>
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="50" pos:column="13">errs<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">push_back_unique<pos:position pos:line="50" pos:column="35"/></name></name><argument_list pos:line="50" pos:column="35">(<argument><expr><name pos:line="50" pos:column="36">error_no<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt></block></else></if>

        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<decl><type><specifier pos:line="52" pos:column="13">const<pos:position pos:line="52" pos:column="18"/></specifier> <name pos:line="52" pos:column="19">char<pos:position pos:line="52" pos:column="23"/></name> <modifier pos:line="52" pos:column="24">*<pos:position pos:line="52" pos:column="25"/></modifier></type><name pos:line="52" pos:column="25">err_descr<pos:position pos:line="52" pos:column="34"/></name> <init pos:line="52" pos:column="35">= <expr><call><name><name pos:line="52" pos:column="37">Ssl<pos:position pos:line="52" pos:column="40"/></name><operator pos:line="52" pos:column="40">::<pos:position pos:line="52" pos:column="42"/></operator><name pos:line="52" pos:column="42">GetErrorDescr<pos:position pos:line="52" pos:column="55"/></name></name><argument_list pos:line="52" pos:column="55">(<argument><expr><name pos:line="52" pos:column="56">error_no<pos:position pos:line="52" pos:column="64"/></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr></init></decl>)<pos:position pos:line="52" pos:column="66"/></condition><then pos:line="52" pos:column="66">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="13">debugs<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="number" pos:line="53" pos:column="20">83<pos:position pos:line="53" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="24">5<pos:position pos:line="53" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="27">err_descr<pos:position pos:line="53" pos:column="36"/></name> <operator pos:line="53" pos:column="37">&lt;&lt;<pos:position pos:line="53" pos:column="45"/></operator> <literal type="string" pos:line="53" pos:column="40">": "<pos:position pos:line="53" pos:column="44"/></literal> <operator pos:line="53" pos:column="45">&lt;&lt;<pos:position pos:line="53" pos:column="53"/></operator> <name pos:line="53" pos:column="48">buffer<pos:position pos:line="53" pos:column="54"/></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt></block></then>
        <else pos:line="54" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="13">debugs<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="number" pos:line="55" pos:column="20">83<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">DBG_IMPORTANT<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"SSL unknown certificate error "<pos:position pos:line="55" pos:column="71"/></literal> <operator pos:line="55" pos:column="72">&lt;&lt;<pos:position pos:line="55" pos:column="80"/></operator> <name pos:line="55" pos:column="75">error_no<pos:position pos:line="55" pos:column="83"/></name> <operator pos:line="55" pos:column="84">&lt;&lt;<pos:position pos:line="55" pos:column="92"/></operator> <literal type="string" pos:line="55" pos:column="87">" in "<pos:position pos:line="55" pos:column="93"/></literal> <operator pos:line="55" pos:column="94">&lt;&lt;<pos:position pos:line="55" pos:column="102"/></operator> <name pos:line="55" pos:column="97">buffer<pos:position pos:line="55" pos:column="103"/></name></expr></argument>)<pos:position pos:line="55" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="105"/></expr_stmt></block></else></if>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">check<pos:position pos:line="57" pos:column="18"/></name></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19"> <block pos:line="57" pos:column="20">{
            <decl_stmt><decl><type><name pos:line="58" pos:column="13">ACLFilledChecklist<pos:position pos:line="58" pos:column="31"/></name> <modifier pos:line="58" pos:column="32">*<pos:position pos:line="58" pos:column="33"/></modifier></type><name pos:line="58" pos:column="33">filledCheck<pos:position pos:line="58" pos:column="44"/></name> <init pos:line="58" pos:column="45">= <expr><call><name pos:line="58" pos:column="47">Filled<pos:position pos:line="58" pos:column="53"/></name><argument_list pos:line="58" pos:column="53">(<argument><expr><name pos:line="58" pos:column="54">check<pos:position pos:line="58" pos:column="59"/></name></expr></argument>)<pos:position pos:line="58" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="61"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">assert<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><operator pos:line="59" pos:column="20">!<pos:position pos:line="59" pos:column="21"/></operator><name><name pos:line="59" pos:column="21">filledCheck<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">-&gt;<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="34">sslErrors<pos:position pos:line="59" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">filledCheck<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">-&gt;<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="26">sslErrors<pos:position pos:line="60" pos:column="35"/></name></name> <operator pos:line="60" pos:column="36">=<pos:position pos:line="60" pos:column="37"/></operator> <operator pos:line="60" pos:column="38">new<pos:position pos:line="60" pos:column="41"/></operator> <call><name><name pos:line="60" pos:column="42">Ssl<pos:position pos:line="60" pos:column="45"/></name><operator pos:line="60" pos:column="45">::<pos:position pos:line="60" pos:column="47"/></operator><name pos:line="60" pos:column="47">Errors<pos:position pos:line="60" pos:column="53"/></name></name><argument_list pos:line="60" pos:column="53">(<argument><expr><name pos:line="60" pos:column="54">error_no<pos:position pos:line="60" pos:column="62"/></name></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="64"/></expr_stmt>
            <if pos:line="61" pos:column="13">if <condition pos:line="61" pos:column="16">(<expr><call><name><name pos:line="61" pos:column="17">check<pos:position pos:line="61" pos:column="22"/></name><operator pos:line="61" pos:column="22">-&gt;<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="24">fastCheck<pos:position pos:line="61" pos:column="33"/></name></name><argument_list pos:line="61" pos:column="33">()<pos:position pos:line="61" pos:column="35"/></argument_list></call> <operator pos:line="61" pos:column="36">==<pos:position pos:line="61" pos:column="38"/></operator> <name pos:line="61" pos:column="39">ACCESS_ALLOWED<pos:position pos:line="61" pos:column="53"/></name></expr>)<pos:position pos:line="61" pos:column="54"/></condition><then pos:line="61" pos:column="54"> <block pos:line="61" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="62" pos:column="17">debugs<pos:position pos:line="62" pos:column="23"/></name><argument_list pos:line="62" pos:column="23">(<argument><expr><literal type="number" pos:line="62" pos:column="24">83<pos:position pos:line="62" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="28">3<pos:position pos:line="62" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="31">"bypassing SSL error "<pos:position pos:line="62" pos:column="53"/></literal> <operator pos:line="62" pos:column="54">&lt;&lt;<pos:position pos:line="62" pos:column="62"/></operator> <name pos:line="62" pos:column="57">error_no<pos:position pos:line="62" pos:column="65"/></name> <operator pos:line="62" pos:column="66">&lt;&lt;<pos:position pos:line="62" pos:column="74"/></operator> <literal type="string" pos:line="62" pos:column="69">" in "<pos:position pos:line="62" pos:column="75"/></literal> <operator pos:line="62" pos:column="76">&lt;&lt;<pos:position pos:line="62" pos:column="84"/></operator> <name pos:line="62" pos:column="79">buffer<pos:position pos:line="62" pos:column="85"/></name></expr></argument>)<pos:position pos:line="62" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="87"/></expr_stmt>
                <expr_stmt><expr><name pos:line="63" pos:column="17">ok<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">=<pos:position pos:line="63" pos:column="21"/></operator> <literal type="number" pos:line="63" pos:column="22">1<pos:position pos:line="63" pos:column="23"/></literal></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></then> <else pos:line="64" pos:column="15">else <block pos:line="64" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">debugs<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><literal type="number" pos:line="65" pos:column="24">83<pos:position pos:line="65" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="28">5<pos:position pos:line="65" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="31">"confirming SSL error "<pos:position pos:line="65" pos:column="54"/></literal> <operator pos:line="65" pos:column="55">&lt;&lt;<pos:position pos:line="65" pos:column="63"/></operator> <name pos:line="65" pos:column="58">error_no<pos:position pos:line="65" pos:column="66"/></name></expr></argument>)<pos:position pos:line="65" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></else></if>
            <expr_stmt><expr><operator pos:line="67" pos:column="13">delete<pos:position pos:line="67" pos:column="19"/></operator> <name><name pos:line="67" pos:column="20">filledCheck<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">sslErrors<pos:position pos:line="67" pos:column="42"/></name></name></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="68" pos:column="13">filledCheck<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">sslErrors<pos:position pos:line="68" pos:column="35"/></name></name> <operator pos:line="68" pos:column="36">=<pos:position pos:line="68" pos:column="37"/></operator> <name pos:line="68" pos:column="38">NULL<pos:position pos:line="68" pos:column="42"/></name></expr>;<pos:position pos:line="68" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><operator pos:line="72" pos:column="9">!<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">dont_verify_domain<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">&amp;&amp;<pos:position pos:line="72" pos:column="39"/></operator> <name pos:line="72" pos:column="32">server<pos:position pos:line="72" pos:column="38"/></name></expr>)<pos:position pos:line="72" pos:column="39"/></condition><then pos:line="72" pos:column="39"> <block pos:line="72" pos:column="40">{}<pos:position pos:line="72" pos:column="42"/></block></then></if>

    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">!<pos:position pos:line="74" pos:column="10"/></operator><name pos:line="74" pos:column="10">ok<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">&amp;&amp;<pos:position pos:line="74" pos:column="23"/></operator> <operator pos:line="74" pos:column="16">!<pos:position pos:line="74" pos:column="17"/></operator><call><name pos:line="74" pos:column="17">SSL_get_ex_data<pos:position pos:line="74" pos:column="32"/></name><argument_list pos:line="74" pos:column="32">(<argument><expr><name pos:line="74" pos:column="33">ssl<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">ssl_ex_index_ssl_error_detail<pos:position pos:line="74" pos:column="67"/></name></expr></argument>)<pos:position pos:line="74" pos:column="68"/></argument_list></call></expr> )<pos:position pos:line="74" pos:column="70"/></condition><then pos:line="74" pos:column="70"> <block pos:line="74" pos:column="71">{

        <comment type="line" pos:line="76" pos:column="9">// Find the broken certificate. It may be intermediate.</comment>
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">X509<pos:position pos:line="77" pos:column="13"/></name> <modifier pos:line="77" pos:column="14">*<pos:position pos:line="77" pos:column="15"/></modifier></type><name pos:line="77" pos:column="15">broken_cert<pos:position pos:line="77" pos:column="26"/></name> <init pos:line="77" pos:column="27">= <expr><name pos:line="77" pos:column="29">peer_cert<pos:position pos:line="77" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="77" pos:column="39"/></decl_stmt> <comment type="line" pos:line="77" pos:column="40">// reasonable default if search fails</comment>
        <comment type="line" pos:line="78" pos:column="9">// Our SQUID_X509_V_ERR_DOMAIN_MISMATCH implies peer_cert is at fault.</comment>
        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name pos:line="79" pos:column="13">error_no<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">!=<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">SQUID_X509_V_ERR_DOMAIN_MISMATCH<pos:position pos:line="79" pos:column="57"/></name></expr>)<pos:position pos:line="79" pos:column="58"/></condition><then pos:line="79" pos:column="58"> <block pos:line="79" pos:column="59">{
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<decl><type><name pos:line="80" pos:column="17">X509<pos:position pos:line="80" pos:column="21"/></name> <modifier pos:line="80" pos:column="22">*<pos:position pos:line="80" pos:column="23"/></modifier></type><name pos:line="80" pos:column="23">last_used_cert<pos:position pos:line="80" pos:column="37"/></name> <init pos:line="80" pos:column="38">= <expr><call><name pos:line="80" pos:column="40">X509_STORE_CTX_get_current_cert<pos:position pos:line="80" pos:column="71"/></name><argument_list pos:line="80" pos:column="71">(<argument><expr><name pos:line="80" pos:column="72">ctx<pos:position pos:line="80" pos:column="75"/></name></expr></argument>)<pos:position pos:line="80" pos:column="76"/></argument_list></call></expr></init></decl>)<pos:position pos:line="80" pos:column="77"/></condition><then pos:line="80" pos:column="77">
                <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="17">broken_cert<pos:position pos:line="81" pos:column="28"/></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <name pos:line="81" pos:column="31">last_used_cert<pos:position pos:line="81" pos:column="45"/></name></expr>;<pos:position pos:line="81" pos:column="46"/></expr_stmt></block></then></if>
        }<pos:position pos:line="82" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name><name pos:line="84" pos:column="9">Ssl<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">::<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">ErrorDetail<pos:position pos:line="84" pos:column="25"/></name></name> <modifier pos:line="84" pos:column="26">*<pos:position pos:line="84" pos:column="27"/></modifier></type><name pos:line="84" pos:column="27">errDetail<pos:position pos:line="84" pos:column="36"/></name> <init pos:line="84" pos:column="37">=
            <expr><operator pos:line="85" pos:column="13">new<pos:position pos:line="85" pos:column="16"/></operator> <call><name><name pos:line="85" pos:column="17">Ssl<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">::<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">ErrorDetail<pos:position pos:line="85" pos:column="33"/></name></name><argument_list pos:line="85" pos:column="33">(<argument><expr><name pos:line="85" pos:column="34">error_no<pos:position pos:line="85" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="44">peer_cert<pos:position pos:line="85" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="55">broken_cert<pos:position pos:line="85" pos:column="66"/></name></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="68"/></decl_stmt>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><operator pos:line="87" pos:column="13">!<pos:position pos:line="87" pos:column="14"/></operator><call><name pos:line="87" pos:column="14">SSL_set_ex_data<pos:position pos:line="87" pos:column="29"/></name><argument_list pos:line="87" pos:column="29">(<argument><expr><name pos:line="87" pos:column="30">ssl<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="35">ssl_ex_index_ssl_error_detail<pos:position pos:line="87" pos:column="64"/></name></expr></argument>,  <argument><expr><name pos:line="87" pos:column="67">errDetail<pos:position pos:line="87" pos:column="76"/></name></expr></argument>)<pos:position pos:line="87" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="78"/></condition><then pos:line="87" pos:column="78"> <block pos:line="87" pos:column="79">{
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">debugs<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><literal type="number" pos:line="88" pos:column="20">83<pos:position pos:line="88" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="24">2<pos:position pos:line="88" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="27">"Failed to set Ssl::ErrorDetail in ssl_verify_cb: Certificate "<pos:position pos:line="88" pos:column="90"/></literal> <operator pos:line="88" pos:column="91">&lt;&lt;<pos:position pos:line="88" pos:column="99"/></operator> <name pos:line="88" pos:column="94">buffer<pos:position pos:line="88" pos:column="100"/></name></expr></argument>)<pos:position pos:line="88" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="102"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="89" pos:column="13">delete<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">errDetail<pos:position pos:line="89" pos:column="29"/></name></expr>;<pos:position pos:line="89" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <return pos:line="93" pos:column="5">return <expr><name pos:line="93" pos:column="12">ok<pos:position pos:line="93" pos:column="14"/></name></expr>;<pos:position pos:line="93" pos:column="15"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

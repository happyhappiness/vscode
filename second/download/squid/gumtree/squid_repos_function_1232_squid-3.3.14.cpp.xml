<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1232_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mem<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">CleanIdlePools<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">unused<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">MemPools<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">GetInstance<pos:position pos:line="4" pos:column="26"/></name></name><argument_list pos:line="4" pos:column="26">()<pos:position pos:line="4" pos:column="28"/></argument_list></call><operator pos:line="4" pos:column="28">.<pos:position pos:line="4" pos:column="29"/></operator><call><name pos:line="4" pos:column="29">clean<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><cast type="static" pos:line="4" pos:column="35">static_cast<argument_list type="generic" pos:line="4" pos:column="46">&lt;<argument><expr><name pos:line="4" pos:column="47">time_t<pos:position pos:line="4" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="57"/></argument_list><argument_list pos:line="4" pos:column="54">(<argument><expr><name pos:line="4" pos:column="55">clean_interval<pos:position pos:line="4" pos:column="69"/></name></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></cast></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">eventAdd<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><literal type="string" pos:line="5" pos:column="14">"memPoolCleanIdlePools"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">CleanIdlePools<pos:position pos:line="5" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="55">NULL<pos:position pos:line="5" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="61">clean_interval<pos:position pos:line="5" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="77">1<pos:position pos:line="5" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

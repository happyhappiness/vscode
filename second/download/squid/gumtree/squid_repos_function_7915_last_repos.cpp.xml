<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7915_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">_free_osfhnd<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">int<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">filehandle<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">(<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">unsigned<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">)<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">filehandle<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&lt;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="34">SQUID_MAXFD<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator> <operator pos:line="4" pos:column="47">&amp;&amp;<pos:position pos:line="4" pos:column="57"/></operator>
            <operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">_osfile<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><name pos:line="5" pos:column="22">filehandle<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call> <operator pos:line="5" pos:column="34">&amp;<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="36">FOPEN<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator> <operator pos:line="5" pos:column="43">&amp;&amp;<pos:position pos:line="5" pos:column="53"/></operator>
            <operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">_osfhnd<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">filehandle<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">!=<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="37">(<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">long<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">)<pos:position pos:line="6" pos:column="43"/></operator> <name pos:line="6" pos:column="44">INVALID_HANDLE_VALUE<pos:position pos:line="6" pos:column="64"/></name><operator pos:line="6" pos:column="64">)<pos:position pos:line="6" pos:column="65"/></operator></expr>)<pos:position pos:line="6" pos:column="66"/></condition><then pos:line="6" pos:column="66"> <block pos:line="6" pos:column="67">{
        <switch pos:line="7" pos:column="9">switch <condition pos:line="7" pos:column="16">(<expr><name pos:line="7" pos:column="17">filehandle<pos:position pos:line="7" pos:column="27"/></name></expr>)<pos:position pos:line="7" pos:column="28"/></condition> <block pos:line="7" pos:column="29">{
        <case pos:line="8" pos:column="9">case <expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>:<pos:position pos:line="8" pos:column="16"/></case>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">SetStdHandle<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">STD_INPUT_HANDLE<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">NULL<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
            <break pos:line="10" pos:column="13">break;<pos:position pos:line="10" pos:column="19"/></break>
        <case pos:line="11" pos:column="9">case <expr><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal></expr>:<pos:position pos:line="11" pos:column="16"/></case>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">SetStdHandle<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">STD_OUTPUT_HANDLE<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
            <break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break>
        <case pos:line="14" pos:column="9">case <expr><literal type="number" pos:line="14" pos:column="14">2<pos:position pos:line="14" pos:column="15"/></literal></expr>:<pos:position pos:line="14" pos:column="16"/></case>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">SetStdHandle<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">STD_ERROR_HANDLE<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">NULL<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt>
            <break pos:line="16" pos:column="13">break;<pos:position pos:line="16" pos:column="19"/></break>
        }<pos:position pos:line="17" pos:column="10"/></block></switch>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">_osfhnd<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">filehandle<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="31">(<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">long<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">)<pos:position pos:line="18" pos:column="37"/></operator> <name pos:line="18" pos:column="38">INVALID_HANDLE_VALUE<pos:position pos:line="18" pos:column="58"/></name></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">(<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal><operator pos:line="19" pos:column="18">)<pos:position pos:line="19" pos:column="19"/></operator></expr>;<pos:position pos:line="19" pos:column="20"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">errno<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">EBADF<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>      <comment type="block" pos:line="21" pos:column="29">/* bad handle */</comment>
        <expr_stmt><expr><name pos:line="22" pos:column="9">_doserrno<pos:position pos:line="22" pos:column="18"/></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <literal type="number" pos:line="22" pos:column="21">0L<pos:position pos:line="22" pos:column="23"/></literal></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>     <comment type="block" pos:line="22" pos:column="29">/* not an OS error */</comment>
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></else></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

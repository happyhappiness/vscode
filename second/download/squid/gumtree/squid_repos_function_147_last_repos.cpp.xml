<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_147_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">uint32_t<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">Ping<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Init<pos:position pos:line="2" pos:column="11"/></name></name><parameter_list pos:line="2" pos:column="11">()<pos:position pos:line="2" pos:column="13"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Ping<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">Config<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">enable<pos:position pos:line="4" pos:column="28"/></name></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">HAVE_SIGACTION<pos:position pos:line="5" pos:column="19"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">sigaction<pos:position pos:line="6" pos:column="25"/></name></name></type> <name pos:line="6" pos:column="26">sa<pos:position pos:line="6" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="30">osa<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">sigaction<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">SIGINT<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="37">&amp;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="38">osa<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call> <operator pos:line="7" pos:column="43">==<pos:position pos:line="7" pos:column="45"/></operator> <literal type="number" pos:line="7" pos:column="46">0<pos:position pos:line="7" pos:column="47"/></literal> <operator pos:line="7" pos:column="48">&amp;&amp;<pos:position pos:line="7" pos:column="58"/></operator> <name><name pos:line="7" pos:column="51">osa<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">sa_handler<pos:position pos:line="7" pos:column="65"/></name></name> <operator pos:line="7" pos:column="66">==<pos:position pos:line="7" pos:column="68"/></operator> <name pos:line="7" pos:column="69">SIG_DFL<pos:position pos:line="7" pos:column="76"/></name></expr>)<pos:position pos:line="7" pos:column="77"/></condition><then pos:line="7" pos:column="77"> <block pos:line="7" pos:column="78">{
            <expr_stmt><expr><name><name pos:line="8" pos:column="13">sa<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">sa_handler<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">catchSignal<pos:position pos:line="8" pos:column="40"/></name></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">sa<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">sa_flags<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">sigemptyset<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><operator pos:line="10" pos:column="25">&amp;<pos:position pos:line="10" pos:column="30"/></operator><name><name pos:line="10" pos:column="26">sa<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">sa_mask<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">void<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">sigaction<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">SIGINT<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="38">&amp;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="39">sa<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">NULL<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
        <function_decl><type><name pos:line="14" pos:column="9">void<pos:position pos:line="14" pos:column="13"/></name></type> (<modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier><name pos:line="14" pos:column="16">osig<pos:position pos:line="14" pos:column="20"/></name>) <parameter_list pos:line="14" pos:column="22">(<parameter><decl><type><name pos:line="14" pos:column="23">int<pos:position pos:line="14" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="14" pos:column="27"/></parameter_list>;<pos:position pos:line="14" pos:column="28"/></function_decl>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">osig<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">signal<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">SIGINT<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">catchSignal<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call><operator pos:line="15" pos:column="48">)<pos:position pos:line="15" pos:column="49"/></operator> <operator pos:line="15" pos:column="50">!=<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">SIG_DFL<pos:position pos:line="15" pos:column="60"/></name></expr>)<pos:position pos:line="15" pos:column="61"/></condition><then pos:line="15" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">void<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">)<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">signal<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">SIGINT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="35">osig<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt></block></then></if>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="18" pos:column="9">return <expr><name><name pos:line="18" pos:column="16">Ping<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">::<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">Config<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">count<pos:position pos:line="18" pos:column="34"/></name></name></expr>;<pos:position pos:line="18" pos:column="35"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">1<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

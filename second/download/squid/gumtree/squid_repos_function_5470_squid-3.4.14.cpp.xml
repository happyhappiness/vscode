<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5470_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">logfile_mod_daemon_writeline<pos:position pos:line="2" pos:column="29"/></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">Logfile<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">lf<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">buf<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">size_t<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">len<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">l_daemon_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ll<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><cast type="static" pos:line="4" pos:column="22">static_cast<argument_list type="generic" pos:line="4" pos:column="33">&lt;<argument><expr><name pos:line="4" pos:column="34">l_daemon_t<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="50"/></argument_list><argument_list pos:line="4" pos:column="47">(<argument><expr><name><name pos:line="4" pos:column="48">lf<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">data<pos:position pos:line="4" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* Make sure the logfile buffer isn't too large */</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">ll<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">nbufs<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">&gt;<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="21">LOGFILE_MAXBUFS<pos:position pos:line="6" pos:column="36"/></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37"> <block pos:line="6" pos:column="38">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">ll<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">last_warned<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">&lt;<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="31">squid_curtime<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">-<pos:position pos:line="7" pos:column="46"/></operator> <name pos:line="7" pos:column="47">LOGFILE_WARN_TIME<pos:position pos:line="7" pos:column="64"/></name></expr>)<pos:position pos:line="7" pos:column="65"/></condition><then pos:line="7" pos:column="65"> <block pos:line="7" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="8" pos:column="13">ll<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">last_warned<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">=<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="31">squid_curtime<pos:position pos:line="8" pos:column="44"/></name></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">50<pos:position pos:line="9" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">DBG_IMPORTANT<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="39">"Logfile: "<pos:position pos:line="9" pos:column="50"/></literal> <operator pos:line="9" pos:column="51">&lt;&lt;<pos:position pos:line="9" pos:column="59"/></operator> <name><name pos:line="9" pos:column="54">lf<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">-&gt;<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="58">path<pos:position pos:line="9" pos:column="62"/></name></name> <operator pos:line="9" pos:column="63">&lt;&lt;<pos:position pos:line="9" pos:column="71"/></operator> <literal type="string" pos:line="9" pos:column="66">": queue is too large; some log messages have been lost."<pos:position pos:line="9" pos:column="123"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="125"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="13" pos:column="5">/* Append this data to the end buffer; create a new one if needed */</comment>
    <comment type="block" pos:line="14" pos:column="5">/* Are we eol? If so, prefix with our logfile command byte */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">logfile_mod_daemon_append<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">lf<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">buf<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">len<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

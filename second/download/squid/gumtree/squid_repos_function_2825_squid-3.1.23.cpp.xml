<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2825_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">wccp2ConnectionOpen<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">sockaddr_in<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">router<pos:position pos:line="4" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="32">local<pos:position pos:line="4" pos:column="37"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="39">null<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">socklen_t<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">local_len<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">router_len<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">wccp2_service_list_t<pos:position pos:line="7" pos:column="32"/></name></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">service_list_ptr<pos:position pos:line="7" pos:column="50"/></name></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">wccp2_router_list_t<pos:position pos:line="9" pos:column="31"/></name></name> <modifier pos:line="9" pos:column="32">*<pos:position pos:line="9" pos:column="33"/></modifier></type><name pos:line="9" pos:column="33">router_list_ptr<pos:position pos:line="9" pos:column="48"/></name></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">80<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"wccp2ConnectionOpen: Called"<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">wccp2_numrouters<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">==<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal> <operator pos:line="13" pos:column="31">||<pos:position pos:line="13" pos:column="33"/></operator> <operator pos:line="13" pos:column="34">!<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">wccp2_service_list_head<pos:position pos:line="13" pos:column="58"/></name></expr>)<pos:position pos:line="13" pos:column="59"/></condition><then pos:line="13" pos:column="59"> <block pos:line="13" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">80<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">2<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"WCCPv2 Disabled."<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">( <expr><operator pos:line="18" pos:column="10">!<pos:position pos:line="18" pos:column="11"/></operator><call><name><name pos:line="18" pos:column="11">Config<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">Wccp2<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">address<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">SetIPv4<pos:position pos:line="18" pos:column="39"/></name></name><argument_list pos:line="18" pos:column="39">()<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr> )<pos:position pos:line="18" pos:column="43"/></condition><then pos:line="18" pos:column="43"> <block pos:line="18" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">80<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"WCCPv2 Disabled. "<pos:position pos:line="19" pos:column="42"/></literal> <operator pos:line="19" pos:column="43">&lt;&lt;<pos:position pos:line="19" pos:column="51"/></operator> <name><name pos:line="19" pos:column="46">Config<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">.<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">Wccp2<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">.<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="59">address<pos:position pos:line="19" pos:column="66"/></name></name> <operator pos:line="19" pos:column="67">&lt;&lt;<pos:position pos:line="19" pos:column="75"/></operator> <literal type="string" pos:line="19" pos:column="70">" is not an IPv4 address."<pos:position pos:line="19" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="98"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">Config<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">Wccp2<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">address<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">.<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">SetPort<pos:position pos:line="23" pos:column="33"/></name></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name pos:line="23" pos:column="34">WCCP_PORT<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">theWccp2Connection<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <call><name pos:line="24" pos:column="26">comm_open_listener<pos:position pos:line="24" pos:column="44"/></name><argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">SOCK_DGRAM<pos:position pos:line="24" pos:column="55"/></name></expr></argument>,
                                            <argument><expr><literal type="number" pos:line="25" pos:column="45">0<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>,
                                            <argument><expr><name><name pos:line="26" pos:column="45">Config<pos:position pos:line="26" pos:column="51"/></name><operator pos:line="26" pos:column="51">.<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">Wccp2<pos:position pos:line="26" pos:column="57"/></name><operator pos:line="26" pos:column="57">.<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="58">address<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>,
                                            <argument><expr><name pos:line="27" pos:column="45">COMM_NONBLOCKING<pos:position pos:line="27" pos:column="61"/></name></expr></argument>,
                                            <argument><expr><literal type="string" pos:line="28" pos:column="45">"WCCPv2 Socket"<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">theWccp2Connection<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">&lt;<pos:position pos:line="30" pos:column="32"/></operator> <literal type="number" pos:line="30" pos:column="30">0<pos:position pos:line="30" pos:column="31"/></literal></expr>)<pos:position pos:line="30" pos:column="32"/></condition><then pos:line="30" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">fatal<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><literal type="string" pos:line="31" pos:column="15">"Cannot open WCCP Port"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt></block></then></if>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><call><name pos:line="33" pos:column="5">defined<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">IP_MTU_DISCOVER<pos:position pos:line="33" pos:column="28"/></name></expr></argument>)<pos:position pos:line="33" pos:column="29"/></argument_list></call> <operator pos:line="33" pos:column="30">&amp;&amp;<pos:position pos:line="33" pos:column="40"/></operator> <call><name pos:line="33" pos:column="33">defined<pos:position pos:line="33" pos:column="40"/></name><argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">IP_PMTUDISC_DONT<pos:position pos:line="33" pos:column="57"/></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr></cpp:if>
    <block pos:line="34" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">int<pos:position pos:line="35" pos:column="12"/></name></type> <name pos:line="35" pos:column="13">i<pos:position pos:line="35" pos:column="14"/></name> <init pos:line="35" pos:column="15">= <expr><name pos:line="35" pos:column="17">IP_PMTUDISC_DONT<pos:position pos:line="35" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">setsockopt<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">theWccp2Connection<pos:position pos:line="36" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="40">SOL_IP<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="48">IP_MTU_DISCOVER<pos:position pos:line="36" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="65">&amp;<pos:position pos:line="36" pos:column="70"/></operator><name pos:line="36" pos:column="66">i<pos:position pos:line="36" pos:column="67"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="69">sizeof <name pos:line="36" pos:column="76">i<pos:position pos:line="36" pos:column="77"/></name></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block>

<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">commSetSelect<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">theWccp2Connection<pos:position pos:line="40" pos:column="37"/></name></expr></argument>,
                  <argument><expr><name pos:line="41" pos:column="19">COMM_SELECT_READ<pos:position pos:line="41" pos:column="35"/></name></expr></argument>,
                  <argument><expr><name pos:line="42" pos:column="19">wccp2HandleUdp<pos:position pos:line="42" pos:column="33"/></name></expr></argument>,
                  <argument><expr><name pos:line="43" pos:column="19">NULL<pos:position pos:line="43" pos:column="23"/></name></expr></argument>,
                  <argument><expr><literal type="number" pos:line="44" pos:column="19">0<pos:position pos:line="44" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">debugs<pos:position pos:line="46" pos:column="11"/></name><argument_list pos:line="46" pos:column="11">(<argument><expr><literal type="number" pos:line="46" pos:column="12">80<pos:position pos:line="46" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="16">1<pos:position pos:line="46" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="19">"Accepting WCCPv2 messages on port "<pos:position pos:line="46" pos:column="55"/></literal> <operator pos:line="46" pos:column="56">&lt;&lt;<pos:position pos:line="46" pos:column="64"/></operator> <name pos:line="46" pos:column="59">WCCP_PORT<pos:position pos:line="46" pos:column="68"/></name> <operator pos:line="46" pos:column="69">&lt;&lt;<pos:position pos:line="46" pos:column="77"/></operator> <literal type="string" pos:line="46" pos:column="72">", FD "<pos:position pos:line="46" pos:column="79"/></literal> <operator pos:line="46" pos:column="80">&lt;&lt;<pos:position pos:line="46" pos:column="88"/></operator> <name pos:line="46" pos:column="83">theWccp2Connection<pos:position pos:line="46" pos:column="101"/></name> <operator pos:line="46" pos:column="102">&lt;&lt;<pos:position pos:line="46" pos:column="110"/></operator> <literal type="string" pos:line="46" pos:column="105">"."<pos:position pos:line="46" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="110"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">debugs<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><literal type="number" pos:line="47" pos:column="12">80<pos:position pos:line="47" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="16">1<pos:position pos:line="47" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="19">"Initialising all WCCPv2 lists"<pos:position pos:line="47" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="49" pos:column="5">/* Initialise all routers on all services */</comment>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">memset<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><operator pos:line="50" pos:column="12">&amp;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="13">null<pos:position pos:line="50" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="22">sizeof<argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">null<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">null<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">.<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">sin_family<pos:position pos:line="52" pos:column="20"/></name></name> <operator pos:line="52" pos:column="21">=<pos:position pos:line="52" pos:column="22"/></operator> <name pos:line="52" pos:column="23">AF_UNSPEC<pos:position pos:line="52" pos:column="32"/></name></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="54" pos:column="5">service_list_ptr<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">=<pos:position pos:line="54" pos:column="23"/></operator> <name pos:line="54" pos:column="24">wccp2_service_list_head<pos:position pos:line="54" pos:column="47"/></name></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>

    <while pos:line="56" pos:column="5">while <condition pos:line="56" pos:column="11">(<expr><name pos:line="56" pos:column="12">service_list_ptr<pos:position pos:line="56" pos:column="28"/></name> <operator pos:line="56" pos:column="29">!=<pos:position pos:line="56" pos:column="31"/></operator> <name pos:line="56" pos:column="32">NULL<pos:position pos:line="56" pos:column="36"/></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition> <block pos:line="56" pos:column="38">{
        <for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><expr><name pos:line="57" pos:column="14">router_list_ptr<pos:position pos:line="57" pos:column="29"/></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <operator pos:line="57" pos:column="32">&amp;<pos:position pos:line="57" pos:column="37"/></operator><name><name pos:line="57" pos:column="33">service_list_ptr<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">router_list_head<pos:position pos:line="57" pos:column="67"/></name></name></expr>;<pos:position pos:line="57" pos:column="68"/></init> <condition><expr><name><name pos:line="57" pos:column="69">router_list_ptr<pos:position pos:line="57" pos:column="84"/></name><operator pos:line="57" pos:column="84">-&gt;<pos:position pos:line="57" pos:column="89"/></operator><name pos:line="57" pos:column="86">next<pos:position pos:line="57" pos:column="90"/></name></name> <operator pos:line="57" pos:column="91">!=<pos:position pos:line="57" pos:column="93"/></operator> <name pos:line="57" pos:column="94">NULL<pos:position pos:line="57" pos:column="98"/></name></expr>;<pos:position pos:line="57" pos:column="99"/></condition> <incr><expr><name pos:line="57" pos:column="100">router_list_ptr<pos:position pos:line="57" pos:column="115"/></name> <operator pos:line="57" pos:column="116">=<pos:position pos:line="57" pos:column="117"/></operator> <name><name pos:line="57" pos:column="118">router_list_ptr<pos:position pos:line="57" pos:column="133"/></name><operator pos:line="57" pos:column="133">-&gt;<pos:position pos:line="57" pos:column="138"/></operator><name pos:line="57" pos:column="135">next<pos:position pos:line="57" pos:column="139"/></name></name></expr></incr>)<pos:position pos:line="57" pos:column="140"/></control> <block pos:line="57" pos:column="141">{
            <expr_stmt><expr><name pos:line="58" pos:column="13">router_len<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">=<pos:position pos:line="58" pos:column="25"/></operator> <sizeof pos:line="58" pos:column="26">sizeof<argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">router<pos:position pos:line="58" pos:column="39"/></name></expr></argument>)<pos:position pos:line="58" pos:column="40"/></argument_list></sizeof></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">memset<pos:position pos:line="59" pos:column="19"/></name><argument_list pos:line="59" pos:column="19">(<argument><expr><operator pos:line="59" pos:column="20">&amp;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="21">router<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="59" pos:column="29">'\0'<pos:position pos:line="59" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">router_len<pos:position pos:line="59" pos:column="45"/></name></expr></argument>)<pos:position pos:line="59" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="60" pos:column="13">router<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">.<pos:position pos:line="60" pos:column="20"/></operator><name pos:line="60" pos:column="20">sin_family<pos:position pos:line="60" pos:column="30"/></name></name> <operator pos:line="60" pos:column="31">=<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">AF_INET<pos:position pos:line="60" pos:column="40"/></name></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="61" pos:column="13">router<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">sin_port<pos:position pos:line="61" pos:column="28"/></name></name> <operator pos:line="61" pos:column="29">=<pos:position pos:line="61" pos:column="30"/></operator> <call><name pos:line="61" pos:column="31">htons<pos:position pos:line="61" pos:column="36"/></name><argument_list pos:line="61" pos:column="36">(<argument><expr><name pos:line="61" pos:column="37">WCCP_PORT<pos:position pos:line="61" pos:column="46"/></name></expr></argument>)<pos:position pos:line="61" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="62" pos:column="13">router<pos:position pos:line="62" pos:column="19"/></name><operator pos:line="62" pos:column="19">.<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="20">sin_addr<pos:position pos:line="62" pos:column="28"/></name></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <name><name pos:line="62" pos:column="31">router_list_ptr<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">-&gt;<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="48">router_sendto_address<pos:position pos:line="62" pos:column="69"/></name></name></expr>;<pos:position pos:line="62" pos:column="70"/></expr_stmt>

            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">(<expr><call><name pos:line="64" pos:column="17">connect<pos:position pos:line="64" pos:column="24"/></name><argument_list pos:line="64" pos:column="24">(<argument><expr><name pos:line="64" pos:column="25">theWccp2Connection<pos:position pos:line="64" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="45">(<pos:position pos:line="64" pos:column="46"/></operator>struct <name pos:line="64" pos:column="53">sockaddr<pos:position pos:line="64" pos:column="61"/></name> <operator pos:line="64" pos:column="62">*<pos:position pos:line="64" pos:column="63"/></operator><operator pos:line="64" pos:column="63">)<pos:position pos:line="64" pos:column="64"/></operator> <operator pos:line="64" pos:column="65">&amp;<pos:position pos:line="64" pos:column="70"/></operator><name pos:line="64" pos:column="66">router<pos:position pos:line="64" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="74">router_len<pos:position pos:line="64" pos:column="84"/></name></expr></argument>)<pos:position pos:line="64" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="86"/></condition><then pos:line="64" pos:column="86">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">fatal<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="string" pos:line="65" pos:column="23">"Unable to connect WCCP out socket"<pos:position pos:line="65" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="60"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="67" pos:column="13">local_len<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <sizeof pos:line="67" pos:column="25">sizeof<argument_list pos:line="67" pos:column="31">(<argument><expr><name pos:line="67" pos:column="32">local<pos:position pos:line="67" pos:column="37"/></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></sizeof></expr>;<pos:position pos:line="67" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="69" pos:column="13">memset<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><operator pos:line="69" pos:column="20">&amp;<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="21">local<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="28">'\0'<pos:position pos:line="69" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="34">local_len<pos:position pos:line="69" pos:column="43"/></name></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="45"/></expr_stmt>

            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><call><name pos:line="71" pos:column="17">getsockname<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">theWccp2Connection<pos:position pos:line="71" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="49">(<pos:position pos:line="71" pos:column="50"/></operator>struct <name pos:line="71" pos:column="57">sockaddr<pos:position pos:line="71" pos:column="65"/></name> <operator pos:line="71" pos:column="66">*<pos:position pos:line="71" pos:column="67"/></operator><operator pos:line="71" pos:column="67">)<pos:position pos:line="71" pos:column="68"/></operator> <operator pos:line="71" pos:column="69">&amp;<pos:position pos:line="71" pos:column="74"/></operator><name pos:line="71" pos:column="70">local<pos:position pos:line="71" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="77">&amp;<pos:position pos:line="71" pos:column="82"/></operator><name pos:line="71" pos:column="78">local_len<pos:position pos:line="71" pos:column="87"/></name></expr></argument>)<pos:position pos:line="71" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="89"/></condition><then pos:line="71" pos:column="89">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="17">fatal<pos:position pos:line="72" pos:column="22"/></name><argument_list pos:line="72" pos:column="22">(<argument><expr><literal type="string" pos:line="72" pos:column="23">"Unable to getsockname on WCCP out socket"<pos:position pos:line="72" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="67"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name><name pos:line="74" pos:column="13">router_list_ptr<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">-&gt;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="30">local_ip<pos:position pos:line="74" pos:column="38"/></name></name> <operator pos:line="74" pos:column="39">=<pos:position pos:line="74" pos:column="40"/></operator> <name><name pos:line="74" pos:column="41">local<pos:position pos:line="74" pos:column="46"/></name><operator pos:line="74" pos:column="46">.<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="47">sin_addr<pos:position pos:line="74" pos:column="55"/></name></name></expr>;<pos:position pos:line="74" pos:column="56"/></expr_stmt>

            <comment type="block" pos:line="76" pos:column="13">/* Disconnect the sending socket. Note: FreeBSD returns error
             * but disconnects anyway so we have to just assume it worked
             */</comment>
            <if pos:line="79" pos:column="13">if <condition pos:line="79" pos:column="16">(<expr><name pos:line="79" pos:column="17">wccp2_numrouters<pos:position pos:line="79" pos:column="33"/></name> <operator pos:line="79" pos:column="34">&gt;<pos:position pos:line="79" pos:column="38"/></operator> <literal type="number" pos:line="79" pos:column="36">1<pos:position pos:line="79" pos:column="37"/></literal></expr>)<pos:position pos:line="79" pos:column="38"/></condition><then pos:line="79" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="17">connect<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">theWccp2Connection<pos:position pos:line="80" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="45">(<pos:position pos:line="80" pos:column="46"/></operator>struct <name pos:line="80" pos:column="53">sockaddr<pos:position pos:line="80" pos:column="61"/></name> <operator pos:line="80" pos:column="62">*<pos:position pos:line="80" pos:column="63"/></operator><operator pos:line="80" pos:column="63">)<pos:position pos:line="80" pos:column="64"/></operator> <operator pos:line="80" pos:column="65">&amp;<pos:position pos:line="80" pos:column="70"/></operator><name pos:line="80" pos:column="66">null<pos:position pos:line="80" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="72">router_len<pos:position pos:line="80" pos:column="82"/></name></expr></argument>)<pos:position pos:line="80" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="84"/></expr_stmt></block></then></if>
        }<pos:position pos:line="81" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="83" pos:column="9">service_list_ptr<pos:position pos:line="83" pos:column="25"/></name> <operator pos:line="83" pos:column="26">=<pos:position pos:line="83" pos:column="27"/></operator> <name><name pos:line="83" pos:column="28">service_list_ptr<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">next<pos:position pos:line="83" pos:column="50"/></name></name></expr>;<pos:position pos:line="83" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="86" pos:column="5">wccp2_connected<pos:position pos:line="86" pos:column="20"/></name> <operator pos:line="86" pos:column="21">=<pos:position pos:line="86" pos:column="22"/></operator> <literal type="number" pos:line="86" pos:column="23">1<pos:position pos:line="86" pos:column="24"/></literal></expr>;<pos:position pos:line="86" pos:column="25"/></expr_stmt>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

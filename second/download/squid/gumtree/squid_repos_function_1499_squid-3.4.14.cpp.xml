<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1499_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ConfigureCurrentKid<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">processName<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// kids are marked with parenthesis around their process names</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">processName<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&amp;&amp;<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="24">processName<pos:position pos:line="5" pos:column="35"/></name><index pos:line="5" pos:column="35">[<expr><literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal></expr>]<pos:position pos:line="5" pos:column="38"/></index></name> <operator pos:line="5" pos:column="39">==<pos:position pos:line="5" pos:column="41"/></operator> <literal type="char" pos:line="5" pos:column="42">'('<pos:position pos:line="5" pos:column="45"/></literal></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46"> <block pos:line="5" pos:column="47">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<decl><type><specifier pos:line="6" pos:column="13">const<pos:position pos:line="6" pos:column="18"/></specifier> <name pos:line="6" pos:column="19">char<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">idStart<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><call><name pos:line="6" pos:column="35">strrchr<pos:position pos:line="6" pos:column="42"/></name><argument_list pos:line="6" pos:column="42">(<argument><expr><name pos:line="6" pos:column="43">processName<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="56">'-'<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61"> <block pos:line="6" pos:column="62">{
            <expr_stmt><expr><name pos:line="7" pos:column="13">KidIdentifier<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">=<pos:position pos:line="7" pos:column="28"/></operator> <call><name pos:line="7" pos:column="29">atoi<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">idStart<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">+<pos:position pos:line="7" pos:column="43"/></operator> <literal type="number" pos:line="7" pos:column="44">1<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="8" pos:column="13">const<pos:position pos:line="8" pos:column="18"/></specifier> <name pos:line="8" pos:column="19">size_t<pos:position pos:line="8" pos:column="25"/></name></type> <name pos:line="8" pos:column="26">nameLen<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><name pos:line="8" pos:column="36">idStart<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">-<pos:position pos:line="8" pos:column="45"/></operator> <operator pos:line="8" pos:column="46">(<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">processName<pos:position pos:line="8" pos:column="58"/></name> <operator pos:line="8" pos:column="59">+<pos:position pos:line="8" pos:column="60"/></operator> <literal type="number" pos:line="8" pos:column="61">1<pos:position pos:line="8" pos:column="62"/></literal><operator pos:line="8" pos:column="62">)<pos:position pos:line="8" pos:column="63"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">assert<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">nameLen<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&lt;<pos:position pos:line="9" pos:column="32"/></operator> <sizeof pos:line="9" pos:column="30">sizeof<argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">TheKidName<pos:position pos:line="9" pos:column="47"/></name></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">xstrncpy<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">TheKidName<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="34">processName<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">+<pos:position pos:line="10" pos:column="47"/></operator> <literal type="number" pos:line="10" pos:column="48">1<pos:position pos:line="10" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">nameLen<pos:position pos:line="10" pos:column="58"/></name> <operator pos:line="10" pos:column="59">+<pos:position pos:line="10" pos:column="60"/></operator> <literal type="number" pos:line="10" pos:column="61">1<pos:position pos:line="10" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><operator pos:line="11" pos:column="17">!<pos:position pos:line="11" pos:column="18"/></operator><call><name pos:line="11" pos:column="18">strcmp<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">TheKidName<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="37">"squid-coord"<pos:position pos:line="11" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52">
                <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">TheProcessKind<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">pkCoordinator<pos:position pos:line="12" pos:column="47"/></name></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then>
            <elseif pos:line="13" pos:column="13">else <if pos:line="13" pos:column="18">if <condition pos:line="13" pos:column="21">(<expr><operator pos:line="13" pos:column="22">!<pos:position pos:line="13" pos:column="23"/></operator><call><name pos:line="13" pos:column="23">strcmp<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">TheKidName<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"squid"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">TheProcessKind<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">pkWorker<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="15" pos:column="13">else <if pos:line="15" pos:column="18">if <condition pos:line="15" pos:column="21">(<expr><operator pos:line="15" pos:column="22">!<pos:position pos:line="15" pos:column="23"/></operator><call><name pos:line="15" pos:column="23">strcmp<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">TheKidName<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="42">"squid-disk"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="56"/></condition><then pos:line="15" pos:column="56">
                <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">TheProcessKind<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">pkDisker<pos:position pos:line="16" pos:column="42"/></name></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt></block></then></if></elseif>
            <else pos:line="17" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">TheProcessKind<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">pkOther<pos:position pos:line="18" pos:column="41"/></name></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt></block></else></if> <comment type="line" pos:line="18" pos:column="43">// including coordinator</comment>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">xstrncpy<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">TheKidName<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">APP_SHORTNAME<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="45">sizeof<argument_list pos:line="21" pos:column="51">(<argument><expr><name pos:line="21" pos:column="52">TheKidName<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">KidIdentifier<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2839_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HttpHeaderEntry<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name><name pos:line="2" pos:column="1">HttpHeaderEntry<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">parse<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">field_start<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">field_end<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="71"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* note: name_start == field_start */</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">name_end<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">(<pos:position pos:line="5" pos:column="29"/></operator><specifier pos:line="5" pos:column="29">const<pos:position pos:line="5" pos:column="34"/></specifier> <name pos:line="5" pos:column="35">char<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator><call><name pos:line="5" pos:column="42">memchr<pos:position pos:line="5" pos:column="48"/></name><argument_list pos:line="5" pos:column="48">(<argument><expr><name pos:line="5" pos:column="49">field_start<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="5" pos:column="62">':'<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="67">field_end<pos:position pos:line="5" pos:column="76"/></name> <operator pos:line="5" pos:column="77">-<pos:position pos:line="5" pos:column="78"/></operator> <name pos:line="5" pos:column="79">field_start<pos:position pos:line="5" pos:column="90"/></name></expr></argument>)<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="92"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">name_len<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><ternary><condition><expr><name pos:line="6" pos:column="20">name_end<pos:position pos:line="6" pos:column="28"/></name></expr> ?<pos:position pos:line="6" pos:column="30"/></condition><then pos:line="6" pos:column="30"> <expr><name pos:line="6" pos:column="31">name_end<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">-<pos:position pos:line="6" pos:column="41"/></operator> <name pos:line="6" pos:column="42">field_start<pos:position pos:line="6" pos:column="53"/></name></expr> <pos:position pos:line="6" pos:column="54"/></then><else pos:line="6" pos:column="54">:<expr><literal type="number" pos:line="6" pos:column="55">0<pos:position pos:line="6" pos:column="56"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">value_start<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">field_start<pos:position pos:line="7" pos:column="42"/></name> <operator pos:line="7" pos:column="43">+<pos:position pos:line="7" pos:column="44"/></operator> <name pos:line="7" pos:column="45">name_len<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">+<pos:position pos:line="7" pos:column="55"/></operator> <literal type="number" pos:line="7" pos:column="56">1<pos:position pos:line="7" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>   <comment type="block" pos:line="7" pos:column="61">/* skip ':' */</comment>
    <comment type="block" pos:line="8" pos:column="5">/* note: value_end == field_end */</comment>

    <expr_stmt><expr><operator pos:line="10" pos:column="5">++<pos:position pos:line="10" pos:column="7"/></operator> <name pos:line="10" pos:column="8">HeaderEntryParsedCount<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* do we have a valid field name within this field? */</comment>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">name_len<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">||<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">name_end<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&gt;<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="33">field_end<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">name_len<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&gt;<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="20">65534<pos:position pos:line="17" pos:column="25"/></literal></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26"> <block pos:line="17" pos:column="27">{
        <comment type="block" pos:line="18" pos:column="9">/* String must be LESS THAN 64K and it adds a terminating NULL */</comment>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">55<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="20">DBG_IMPORTANT<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="35">"WARNING: ignoring header name of "<pos:position pos:line="19" pos:column="70"/></literal> <operator pos:line="19" pos:column="71">&lt;&lt;<pos:position pos:line="19" pos:column="79"/></operator> <name pos:line="19" pos:column="74">name_len<pos:position pos:line="19" pos:column="82"/></name> <operator pos:line="19" pos:column="83">&lt;&lt;<pos:position pos:line="19" pos:column="91"/></operator> <literal type="string" pos:line="19" pos:column="86">" bytes"<pos:position pos:line="19" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="96"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">NULL<pos:position pos:line="20" pos:column="20"/></name></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">Config<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">onoff<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">relaxed_header_parser<pos:position pos:line="23" pos:column="43"/></name></name> <operator pos:line="23" pos:column="44">&amp;&amp;<pos:position pos:line="23" pos:column="54"/></operator> <call><name pos:line="23" pos:column="47">xisspace<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">(<argument><expr><name><name pos:line="23" pos:column="56">field_start<pos:position pos:line="23" pos:column="67"/></name><index pos:line="23" pos:column="67">[<expr><name pos:line="23" pos:column="68">name_len<pos:position pos:line="23" pos:column="76"/></name> <operator pos:line="23" pos:column="77">-<pos:position pos:line="23" pos:column="78"/></operator> <literal type="number" pos:line="23" pos:column="79">1<pos:position pos:line="23" pos:column="80"/></literal></expr>]<pos:position pos:line="23" pos:column="81"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="83"/></condition><then pos:line="23" pos:column="83"> <block pos:line="23" pos:column="84">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">55<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="24" pos:column="20">Config<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">onoff<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">.<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">relaxed_header_parser<pos:position pos:line="24" pos:column="54"/></name></name> <operator pos:line="24" pos:column="55">&lt;=<pos:position pos:line="24" pos:column="60"/></operator> <literal type="number" pos:line="24" pos:column="58">0<pos:position pos:line="24" pos:column="59"/></literal></expr> ?<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61"> <expr><literal type="number" pos:line="24" pos:column="62">1<pos:position pos:line="24" pos:column="63"/></literal></expr> <pos:position pos:line="24" pos:column="64"/></then><else pos:line="24" pos:column="64">: <expr><literal type="number" pos:line="24" pos:column="66">2<pos:position pos:line="24" pos:column="67"/></literal></expr></else></ternary></expr></argument>,
               <argument><expr><literal type="string" pos:line="25" pos:column="16">"NOTICE: Whitespace after header name in '"<pos:position pos:line="25" pos:column="59"/></literal> <operator pos:line="25" pos:column="60">&lt;&lt;<pos:position pos:line="25" pos:column="68"/></operator> <call><name pos:line="25" pos:column="63">getStringPrefix<pos:position pos:line="25" pos:column="78"/></name><argument_list pos:line="25" pos:column="78">(<argument><expr><name pos:line="25" pos:column="79">field_start<pos:position pos:line="25" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="92">field_end<pos:position pos:line="25" pos:column="101"/></name></expr></argument>)<pos:position pos:line="25" pos:column="102"/></argument_list></call> <operator pos:line="25" pos:column="103">&lt;&lt;<pos:position pos:line="25" pos:column="111"/></operator> <literal type="string" pos:line="25" pos:column="106">"'"<pos:position pos:line="25" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="111"/></expr_stmt>

        <while pos:line="27" pos:column="9">while <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">name_len<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">&gt;<pos:position pos:line="27" pos:column="29"/></operator> <literal type="number" pos:line="27" pos:column="27">0<pos:position pos:line="27" pos:column="28"/></literal> <operator pos:line="27" pos:column="29">&amp;&amp;<pos:position pos:line="27" pos:column="39"/></operator> <call><name pos:line="27" pos:column="32">xisspace<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name><name pos:line="27" pos:column="41">field_start<pos:position pos:line="27" pos:column="52"/></name><index pos:line="27" pos:column="52">[<expr><name pos:line="27" pos:column="53">name_len<pos:position pos:line="27" pos:column="61"/></name> <operator pos:line="27" pos:column="62">-<pos:position pos:line="27" pos:column="63"/></operator> <literal type="number" pos:line="27" pos:column="64">1<pos:position pos:line="27" pos:column="65"/></literal></expr>]<pos:position pos:line="27" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="68"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="28" pos:column="13">--<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">name_len<pos:position pos:line="28" pos:column="23"/></name></expr>;<pos:position pos:line="28" pos:column="24"/></expr_stmt></block></while>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">name_len<pos:position pos:line="30" pos:column="22"/></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
            <block type="pseudo"><return pos:line="31" pos:column="13">return <expr><name pos:line="31" pos:column="20">NULL<pos:position pos:line="31" pos:column="24"/></name></expr>;<pos:position pos:line="31" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* now we know we can parse it */</comment>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">debugs<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">55<pos:position pos:line="36" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="16">9<pos:position pos:line="36" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="19">"parsing HttpHeaderEntry: near '"<pos:position pos:line="36" pos:column="52"/></literal> <operator pos:line="36" pos:column="53">&lt;&lt;<pos:position pos:line="36" pos:column="61"/></operator>  <call><name pos:line="36" pos:column="57">getStringPrefix<pos:position pos:line="36" pos:column="72"/></name><argument_list pos:line="36" pos:column="72">(<argument><expr><name pos:line="36" pos:column="73">field_start<pos:position pos:line="36" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="86">field_end<pos:position pos:line="36" pos:column="95"/></name></expr></argument>)<pos:position pos:line="36" pos:column="96"/></argument_list></call> <operator pos:line="36" pos:column="97">&lt;&lt;<pos:position pos:line="36" pos:column="105"/></operator> <literal type="string" pos:line="36" pos:column="100">"'"<pos:position pos:line="36" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="105"/></expr_stmt>

    <comment type="block" pos:line="38" pos:column="5">/* is it a "known" field? */</comment>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">http_hdr_type<pos:position pos:line="39" pos:column="18"/></name></type> <name pos:line="39" pos:column="19">id<pos:position pos:line="39" pos:column="21"/></name> <init pos:line="39" pos:column="22">= <expr><call><name pos:line="39" pos:column="24">httpHeaderIdByName<pos:position pos:line="39" pos:column="42"/></name><argument_list pos:line="39" pos:column="42">(<argument><expr><name pos:line="39" pos:column="43">field_start<pos:position pos:line="39" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="56">name_len<pos:position pos:line="39" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="66">Headers<pos:position pos:line="39" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="75">HDR_ENUM_END<pos:position pos:line="39" pos:column="87"/></name></expr></argument>)<pos:position pos:line="39" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="89"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="41" pos:column="5">String<pos:position pos:line="41" pos:column="11"/></name></type> <name pos:line="41" pos:column="12">name<pos:position pos:line="41" pos:column="16"/></name></decl>;<pos:position pos:line="41" pos:column="17"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="43" pos:column="5">String<pos:position pos:line="43" pos:column="11"/></name></type> <name pos:line="43" pos:column="12">value<pos:position pos:line="43" pos:column="17"/></name></decl>;<pos:position pos:line="43" pos:column="18"/></decl_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">id<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">&lt;<pos:position pos:line="45" pos:column="16"/></operator> <literal type="number" pos:line="45" pos:column="14">0<pos:position pos:line="45" pos:column="15"/></literal></expr>)<pos:position pos:line="45" pos:column="16"/></condition><then pos:line="45" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="9">id<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">HDR_OTHER<pos:position pos:line="46" pos:column="23"/></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">assert_eid<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">id<pos:position pos:line="48" pos:column="18"/></name></expr></argument>)<pos:position pos:line="48" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* set field name */</comment>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">id<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">==<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">HDR_OTHER<pos:position pos:line="51" pos:column="24"/></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="52" pos:column="9">name<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">.<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">limitInit<pos:position pos:line="52" pos:column="23"/></name></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">field_start<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">name_len<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt></block></then>
    <else pos:line="53" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="9">name<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <name><name pos:line="54" pos:column="16">Headers<pos:position pos:line="54" pos:column="23"/></name><index pos:line="54" pos:column="23">[<expr><name pos:line="54" pos:column="24">id<pos:position pos:line="54" pos:column="26"/></name></expr>]<pos:position pos:line="54" pos:column="27"/></index></name><operator pos:line="54" pos:column="27">.<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">name<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="56" pos:column="5">/* trim field value */</comment>
    <while pos:line="57" pos:column="5">while <condition pos:line="57" pos:column="11">(<expr><name pos:line="57" pos:column="12">value_start<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">&lt;<pos:position pos:line="57" pos:column="28"/></operator> <name pos:line="57" pos:column="26">field_end<pos:position pos:line="57" pos:column="35"/></name> <operator pos:line="57" pos:column="36">&amp;&amp;<pos:position pos:line="57" pos:column="46"/></operator> <call><name pos:line="57" pos:column="39">xisspace<pos:position pos:line="57" pos:column="47"/></name><argument_list pos:line="57" pos:column="47">(<argument><expr><operator pos:line="57" pos:column="48">*<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">value_start<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="62"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="58" pos:column="9">++<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="11">value_start<pos:position pos:line="58" pos:column="22"/></name></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt></block></while>

    <while pos:line="60" pos:column="5">while <condition pos:line="60" pos:column="11">(<expr><name pos:line="60" pos:column="12">value_start<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">&lt;<pos:position pos:line="60" pos:column="28"/></operator> <name pos:line="60" pos:column="26">field_end<pos:position pos:line="60" pos:column="35"/></name> <operator pos:line="60" pos:column="36">&amp;&amp;<pos:position pos:line="60" pos:column="46"/></operator> <call><name pos:line="60" pos:column="39">xisspace<pos:position pos:line="60" pos:column="47"/></name><argument_list pos:line="60" pos:column="47">(<argument><expr><name><name pos:line="60" pos:column="48">field_end<pos:position pos:line="60" pos:column="57"/></name><index pos:line="60" pos:column="57">[<expr><operator pos:line="60" pos:column="58">-<pos:position pos:line="60" pos:column="59"/></operator><literal type="number" pos:line="60" pos:column="59">1<pos:position pos:line="60" pos:column="60"/></literal></expr>]<pos:position pos:line="60" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="60" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="63"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="61" pos:column="9">--<pos:position pos:line="61" pos:column="11"/></operator><name pos:line="61" pos:column="11">field_end<pos:position pos:line="61" pos:column="20"/></name></expr>;<pos:position pos:line="61" pos:column="21"/></expr_stmt></block></while>

    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">field_end<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">-<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">value_start<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">&gt;<pos:position pos:line="63" pos:column="37"/></operator> <literal type="number" pos:line="63" pos:column="35">65534<pos:position pos:line="63" pos:column="40"/></literal></expr>)<pos:position pos:line="63" pos:column="41"/></condition><then pos:line="63" pos:column="41"> <block pos:line="63" pos:column="42">{
        <comment type="block" pos:line="64" pos:column="9">/* String must be LESS THAN 64K and it adds a terminating NULL */</comment>
        <expr_stmt><expr><call><name pos:line="65" pos:column="9">debugs<pos:position pos:line="65" pos:column="15"/></name><argument_list pos:line="65" pos:column="15">(<argument><expr><literal type="number" pos:line="65" pos:column="16">55<pos:position pos:line="65" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="20">DBG_IMPORTANT<pos:position pos:line="65" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="35">"WARNING: ignoring '"<pos:position pos:line="65" pos:column="56"/></literal> <operator pos:line="65" pos:column="57">&lt;&lt;<pos:position pos:line="65" pos:column="65"/></operator> <name pos:line="65" pos:column="60">name<pos:position pos:line="65" pos:column="64"/></name> <operator pos:line="65" pos:column="65">&lt;&lt;<pos:position pos:line="65" pos:column="73"/></operator> <literal type="string" pos:line="65" pos:column="68">"' header of "<pos:position pos:line="65" pos:column="82"/></literal> <operator pos:line="65" pos:column="83">&lt;&lt;<pos:position pos:line="65" pos:column="91"/></operator> <operator pos:line="65" pos:column="86">(<pos:position pos:line="65" pos:column="87"/></operator><name pos:line="65" pos:column="87">field_end<pos:position pos:line="65" pos:column="96"/></name> <operator pos:line="65" pos:column="97">-<pos:position pos:line="65" pos:column="98"/></operator> <name pos:line="65" pos:column="99">value_start<pos:position pos:line="65" pos:column="110"/></name><operator pos:line="65" pos:column="110">)<pos:position pos:line="65" pos:column="111"/></operator> <operator pos:line="65" pos:column="112">&lt;&lt;<pos:position pos:line="65" pos:column="120"/></operator> <literal type="string" pos:line="65" pos:column="115">" bytes"<pos:position pos:line="65" pos:column="123"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="125"/></expr_stmt>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">id<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">==<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="19">HDR_OTHER<pos:position pos:line="67" pos:column="28"/></name></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="68" pos:column="13">name<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">.<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">clean<pos:position pos:line="68" pos:column="23"/></name></name><argument_list pos:line="68" pos:column="23">()<pos:position pos:line="68" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt></block></then></if>

        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">NULL<pos:position pos:line="70" pos:column="20"/></name></expr>;<pos:position pos:line="70" pos:column="21"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="73" pos:column="5">/* set field value */</comment>
    <expr_stmt><expr><call><name><name pos:line="74" pos:column="5">value<pos:position pos:line="74" pos:column="10"/></name><operator pos:line="74" pos:column="10">.<pos:position pos:line="74" pos:column="11"/></operator><name pos:line="74" pos:column="11">limitInit<pos:position pos:line="74" pos:column="20"/></name></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">value_start<pos:position pos:line="74" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="34">field_end<pos:position pos:line="74" pos:column="43"/></name> <operator pos:line="74" pos:column="44">-<pos:position pos:line="74" pos:column="45"/></operator> <name pos:line="74" pos:column="46">value_start<pos:position pos:line="74" pos:column="57"/></name></expr></argument>)<pos:position pos:line="74" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="76" pos:column="5">++<pos:position pos:line="76" pos:column="7"/></operator> <name><name pos:line="76" pos:column="8">Headers<pos:position pos:line="76" pos:column="15"/></name><index pos:line="76" pos:column="15">[<expr><name pos:line="76" pos:column="16">id<pos:position pos:line="76" pos:column="18"/></name></expr>]<pos:position pos:line="76" pos:column="19"/></index></name><operator pos:line="76" pos:column="19">.<pos:position pos:line="76" pos:column="20"/></operator><name><name pos:line="76" pos:column="20">stat<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">.<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="25">seenCount<pos:position pos:line="76" pos:column="34"/></name></name></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">debugs<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><literal type="number" pos:line="78" pos:column="12">55<pos:position pos:line="78" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="16">9<pos:position pos:line="78" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="19">"parsed HttpHeaderEntry: '"<pos:position pos:line="78" pos:column="46"/></literal> <operator pos:line="78" pos:column="47">&lt;&lt;<pos:position pos:line="78" pos:column="55"/></operator> <name pos:line="78" pos:column="50">name<pos:position pos:line="78" pos:column="54"/></name> <operator pos:line="78" pos:column="55">&lt;&lt;<pos:position pos:line="78" pos:column="63"/></operator> <literal type="string" pos:line="78" pos:column="58">": "<pos:position pos:line="78" pos:column="62"/></literal> <operator pos:line="78" pos:column="63">&lt;&lt;<pos:position pos:line="78" pos:column="71"/></operator> <name pos:line="78" pos:column="66">value<pos:position pos:line="78" pos:column="71"/></name> <operator pos:line="78" pos:column="72">&lt;&lt;<pos:position pos:line="78" pos:column="80"/></operator> <literal type="string" pos:line="78" pos:column="75">"'"<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="80"/></expr_stmt>

    <return pos:line="80" pos:column="5">return <expr><operator pos:line="80" pos:column="12">new<pos:position pos:line="80" pos:column="15"/></operator> <call><name pos:line="80" pos:column="16">HttpHeaderEntry<pos:position pos:line="80" pos:column="31"/></name><argument_list pos:line="80" pos:column="31">(<argument><expr><name pos:line="80" pos:column="32">id<pos:position pos:line="80" pos:column="34"/></name></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="36">name<pos:position pos:line="80" pos:column="40"/></name><operator pos:line="80" pos:column="40">.<pos:position pos:line="80" pos:column="41"/></operator><name pos:line="80" pos:column="41">termedBuf<pos:position pos:line="80" pos:column="50"/></name></name><argument_list pos:line="80" pos:column="50">()<pos:position pos:line="80" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="54">value<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">.<pos:position pos:line="80" pos:column="60"/></operator><name pos:line="80" pos:column="60">termedBuf<pos:position pos:line="80" pos:column="69"/></name></name><argument_list pos:line="80" pos:column="69">()<pos:position pos:line="80" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="73"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

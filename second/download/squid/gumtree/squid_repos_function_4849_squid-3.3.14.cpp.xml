<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4849_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Rock<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">SwapDirRr<pos:position pos:line="1" pos:column="21"/></name><operator pos:line="1" pos:column="21">::<pos:position pos:line="1" pos:column="23"/></operator><name pos:line="1" pos:column="23">create<pos:position pos:line="1" pos:column="29"/></name></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">RunnerRegistry<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">&amp;<pos:position pos:line="1" pos:column="56"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name><name pos:line="3" pos:column="10">owners<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">.<pos:position pos:line="3" pos:column="17"/></operator><name pos:line="3" pos:column="17">empty<pos:position pos:line="3" pos:column="22"/></name></name><argument_list pos:line="3" pos:column="22">()<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="26"/></expr_stmt>
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="25">Config<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">cacheSwap<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">n_configured<pos:position pos:line="4" pos:column="54"/></name></name></expr>;<pos:position pos:line="4" pos:column="55"/></condition> <incr><expr><operator pos:line="4" pos:column="56">++<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">i<pos:position pos:line="4" pos:column="59"/></name></expr></incr>)<pos:position pos:line="4" pos:column="60"/></control> <block pos:line="4" pos:column="61">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<decl><type><specifier pos:line="5" pos:column="13">const<pos:position pos:line="5" pos:column="18"/></specifier> <name><name pos:line="5" pos:column="19">Rock<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">::<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">SwapDir<pos:position pos:line="5" pos:column="32"/></name></name> <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier><specifier pos:line="5" pos:column="34">const<pos:position pos:line="5" pos:column="39"/></specifier></type> <name pos:line="5" pos:column="40">sd<pos:position pos:line="5" pos:column="42"/></name> <init pos:line="5" pos:column="43">= <expr><cast type="dynamic" pos:line="5" pos:column="45">dynamic_cast<argument_list type="generic" pos:line="5" pos:column="57">&lt;<argument><expr><name><name pos:line="5" pos:column="58">Rock<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">::<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">SwapDir<pos:position pos:line="5" pos:column="71"/></name></name> <operator pos:line="5" pos:column="72">*<pos:position pos:line="5" pos:column="73"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="77"/></argument_list><argument_list pos:line="5" pos:column="74">(<argument><expr><call><name pos:line="5" pos:column="75">INDEXSD<pos:position pos:line="5" pos:column="82"/></name><argument_list pos:line="5" pos:column="82">(<argument><expr><name pos:line="5" pos:column="83">i<pos:position pos:line="5" pos:column="84"/></name></expr></argument>)<pos:position pos:line="5" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="86"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="5" pos:column="87"/></condition><then pos:line="5" pos:column="87"> <block pos:line="5" pos:column="88">{
            <decl_stmt><decl><type><name><name pos:line="6" pos:column="13">Rock<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">::<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">SwapDir<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">::<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">DirMap<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">::<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">Owner<pos:position pos:line="6" pos:column="41"/></name></name> <modifier pos:line="6" pos:column="42">*<pos:position pos:line="6" pos:column="43"/></modifier><specifier pos:line="6" pos:column="43">const<pos:position pos:line="6" pos:column="48"/></specifier></type> <name pos:line="6" pos:column="49">owner<pos:position pos:line="6" pos:column="54"/></name> <init pos:line="6" pos:column="55">=
                <expr><call><name><name pos:line="7" pos:column="17">Rock<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">::<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">SwapDir<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">::<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">DirMap<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">::<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">Init<pos:position pos:line="7" pos:column="44"/></name></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name><name pos:line="7" pos:column="45">sd<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">-&gt;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="49">path<pos:position pos:line="7" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="55">sd<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">-&gt;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="59">entryLimitAllowed<pos:position pos:line="7" pos:column="76"/></name></name><argument_list pos:line="7" pos:column="76">()<pos:position pos:line="7" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="80"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="8" pos:column="13">owners<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">push_back<pos:position pos:line="8" pos:column="29"/></name></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">owner<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

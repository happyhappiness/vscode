<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_976.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">writeComplete<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name><name pos:line="2" pos:column="42">Comm<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">ConnectionPointer<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">&amp;<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="67">conn<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">char<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">bufnotused<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">size_t<pos:position pos:line="2" pos:column="97"/></name></type> <name pos:line="2" pos:column="98">size<pos:position pos:line="2" pos:column="102"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="104">Comm<pos:position pos:line="2" pos:column="108"/></name><operator pos:line="2" pos:column="108">::<pos:position pos:line="2" pos:column="110"/></operator><name pos:line="2" pos:column="110">Flag<pos:position pos:line="2" pos:column="114"/></name></name></type> <name pos:line="2" pos:column="115">errflag<pos:position pos:line="2" pos:column="122"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="123"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">StoreEntry<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">entry<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><call><name><name pos:line="4" pos:column="31">http<pos:position pos:line="4" pos:column="35"/></name><operator pos:line="4" pos:column="35">-&gt;<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="37">storeEntry<pos:position pos:line="4" pos:column="47"/></name></name><argument_list pos:line="4" pos:column="47">()<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">http<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">out<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">.<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">size<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">+=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">size<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">33<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">5<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">HERE<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;&lt;<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="27">conn<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&lt;&lt;<pos:position pos:line="6" pos:column="40"/></operator> <literal type="string" pos:line="6" pos:column="35">", sz "<pos:position pos:line="6" pos:column="42"/></literal> <operator pos:line="6" pos:column="43">&lt;&lt;<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="46">size<pos:position pos:line="6" pos:column="50"/></name> <operator pos:line="6" pos:column="51">&lt;&lt;<pos:position pos:line="6" pos:column="59"/></operator>
           <literal type="string" pos:line="7" pos:column="12">", err "<pos:position pos:line="7" pos:column="20"/></literal> <operator pos:line="7" pos:column="21">&lt;&lt;<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="24">errflag<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&lt;&lt;<pos:position pos:line="7" pos:column="40"/></operator> <literal type="string" pos:line="7" pos:column="35">", off "<pos:position pos:line="7" pos:column="43"/></literal> <operator pos:line="7" pos:column="44">&lt;&lt;<pos:position pos:line="7" pos:column="52"/></operator> <name><name pos:line="7" pos:column="47">http<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">-&gt;<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="53">out<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">.<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="57">size<pos:position pos:line="7" pos:column="61"/></name></name> <operator pos:line="7" pos:column="62">&lt;&lt;<pos:position pos:line="7" pos:column="70"/></operator> <literal type="string" pos:line="7" pos:column="65">", len "<pos:position pos:line="7" pos:column="73"/></literal> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator>
           <operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><ternary><condition><expr><name pos:line="8" pos:column="13">entry<pos:position pos:line="8" pos:column="18"/></name></expr> ?<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <expr><call><name><name pos:line="8" pos:column="21">entry<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">objectLen<pos:position pos:line="8" pos:column="37"/></name></name><argument_list pos:line="8" pos:column="37">()<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr> <pos:position pos:line="8" pos:column="40"/></then><else pos:line="8" pos:column="40">: <expr><literal type="number" pos:line="8" pos:column="42">0<pos:position pos:line="8" pos:column="43"/></literal></expr></else></ternary><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">clientUpdateSocketStats<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">http<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">-&gt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="35">logType<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">size<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Bail out quickly on Comm::ERR_CLOSING - close handlers will tidy up */</comment>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">errflag<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name><name pos:line="13" pos:column="20">Comm<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">::<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">ERR_CLOSING<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">||<pos:position pos:line="13" pos:column="40"/></operator> <operator pos:line="13" pos:column="41">!<pos:position pos:line="13" pos:column="42"/></operator><call><name><name pos:line="13" pos:column="42">Comm<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">::<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">IsConnOpen<pos:position pos:line="13" pos:column="58"/></name></name><argument_list pos:line="13" pos:column="58">(<argument><expr><name pos:line="13" pos:column="59">conn<pos:position pos:line="13" pos:column="63"/></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="65"/></condition><then pos:line="13" pos:column="65">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">errflag<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">||<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">clientHttpRequestStatus<pos:position pos:line="16" pos:column="43"/></name><argument_list pos:line="16" pos:column="43">(<argument><expr><name><name pos:line="16" pos:column="44">conn<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">fd<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="54">http<pos:position pos:line="16" pos:column="58"/></name></expr></argument>)<pos:position pos:line="16" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="60"/></condition><then pos:line="16" pos:column="60"> <block pos:line="16" pos:column="61">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">initiateClose<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="string" pos:line="17" pos:column="23">"failure or true request status"<pos:position pos:line="17" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
        <comment type="block" pos:line="18" pos:column="9">/* Do we leak here ? */</comment>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <switch pos:line="22" pos:column="5">switch <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">socketState<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="27"/></condition> <block pos:line="22" pos:column="28">{

    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">STREAM_NONE<pos:position pos:line="24" pos:column="21"/></name></expr>:<pos:position pos:line="24" pos:column="22"/></case>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">pullData<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">()<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
        <break pos:line="26" pos:column="9">break;<pos:position pos:line="26" pos:column="15"/></break>

    <case pos:line="28" pos:column="5">case <expr><name pos:line="28" pos:column="10">STREAM_COMPLETE<pos:position pos:line="28" pos:column="25"/></name></expr>:<pos:position pos:line="28" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">33<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="20">5<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">conn<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">&lt;&lt;<pos:position pos:line="29" pos:column="36"/></operator> <literal type="string" pos:line="29" pos:column="31">" Stream complete, keepalive is "<pos:position pos:line="29" pos:column="64"/></literal> <operator pos:line="29" pos:column="65">&lt;&lt;<pos:position pos:line="29" pos:column="73"/></operator> <name><name pos:line="29" pos:column="68">http<pos:position pos:line="29" pos:column="72"/></name><operator pos:line="29" pos:column="72">-&gt;<pos:position pos:line="29" pos:column="77"/></operator><name pos:line="29" pos:column="74">request<pos:position pos:line="29" pos:column="81"/></name><operator pos:line="29" pos:column="81">-&gt;<pos:position pos:line="29" pos:column="86"/></operator><name pos:line="29" pos:column="83">flags<pos:position pos:line="29" pos:column="88"/></name><operator pos:line="29" pos:column="88">.<pos:position pos:line="29" pos:column="89"/></operator><name pos:line="29" pos:column="89">proxyKeepalive<pos:position pos:line="29" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="105"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">http<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">request<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">flags<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">.<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">proxyKeepalive<pos:position pos:line="30" pos:column="48"/></name></name></expr>)<pos:position pos:line="30" pos:column="49"/></condition><then pos:line="30" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="13">keepaliveNextRequest<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">()<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt></block></then>
        <else pos:line="32" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="13">initiateClose<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><literal type="string" pos:line="33" pos:column="27">"STREAM_COMPLETE NOKEEPALIVE"<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt></block></else></if>
        <return pos:line="34" pos:column="9">return;<pos:position pos:line="34" pos:column="16"/></return>

    <case pos:line="36" pos:column="5">case <expr><name pos:line="36" pos:column="10">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="36" pos:column="35"/></name></expr>:<pos:position pos:line="36" pos:column="36"/></case>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">initiateClose<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><literal type="string" pos:line="37" pos:column="23">"STREAM_UNPLANNED_COMPLETE"<pos:position pos:line="37" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
        <return pos:line="38" pos:column="9">return;<pos:position pos:line="38" pos:column="16"/></return>

    <case pos:line="40" pos:column="5">case <expr><name pos:line="40" pos:column="10">STREAM_FAILED<pos:position pos:line="40" pos:column="23"/></name></expr>:<pos:position pos:line="40" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">initiateClose<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><literal type="string" pos:line="41" pos:column="23">"STREAM_FAILED"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
        <return pos:line="42" pos:column="9">return;<pos:position pos:line="42" pos:column="16"/></return>

    <default pos:line="44" pos:column="5">default:<pos:position pos:line="44" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">fatal<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><literal type="string" pos:line="45" pos:column="15">"Hit unreachable code in clientWriteComplete\n"<pos:position pos:line="45" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></switch>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5015_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Rebuild<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">validateOneEntry<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">sfileno<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">fileNo<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">LoadingEntry<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">entry<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">loadingEntry<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">fileNo<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
    <switch pos:line="5" pos:column="5">switch <condition pos:line="5" pos:column="12">(<expr><call><name><name pos:line="5" pos:column="13">entry<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">state<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="27"/></condition> <block pos:line="5" pos:column="28">{

    <case pos:line="7" pos:column="5">case <expr><name><name pos:line="7" pos:column="10">LoadingEntry<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">::<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">leLoading<pos:position pos:line="7" pos:column="33"/></name></name></expr>:<pos:position pos:line="7" pos:column="34"/></case>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">finalizeOrFree<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">fileNo<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">entry<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
        <break pos:line="9" pos:column="9">break;<pos:position pos:line="9" pos:column="15"/></break>

    <case pos:line="11" pos:column="5">case <expr><name><name pos:line="11" pos:column="10">LoadingEntry<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">::<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">leEmpty<pos:position pos:line="11" pos:column="31"/></name></name></expr>:<pos:position pos:line="11" pos:column="32"/></case> <comment type="line" pos:line="11" pos:column="33">// no entry hashed to this position</comment>
    <case pos:line="12" pos:column="5">case <expr><name><name pos:line="12" pos:column="10">LoadingEntry<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">::<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">leLoaded<pos:position pos:line="12" pos:column="32"/></name></name></expr>:<pos:position pos:line="12" pos:column="33"/></case> <comment type="line" pos:line="12" pos:column="34">// we have already unlocked this entry</comment>
    <case pos:line="13" pos:column="5">case <expr><name><name pos:line="13" pos:column="10">LoadingEntry<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">::<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">leCorrupted<pos:position pos:line="13" pos:column="35"/></name></name></expr>:<pos:position pos:line="13" pos:column="36"/></case> <comment type="line" pos:line="13" pos:column="37">// we have already removed this entry</comment>
    <case pos:line="14" pos:column="5">case <expr><name><name pos:line="14" pos:column="10">LoadingEntry<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">::<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">leIgnored<pos:position pos:line="14" pos:column="33"/></name></name></expr>:<pos:position pos:line="14" pos:column="34"/></case> <comment type="line" pos:line="14" pos:column="35">// we have already discarded this entry</comment>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>
    }<pos:position pos:line="16" pos:column="6"/></block></switch>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

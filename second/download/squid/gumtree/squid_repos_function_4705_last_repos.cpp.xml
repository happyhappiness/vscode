<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4705_last_repos.cpp" pos:tabs="8"><function type="operator"><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">size_t<pos:position pos:line="1" pos:column="12"/></name></name></type>
<name><name pos:line="2" pos:column="1">std<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name><name pos:line="2" pos:column="6">hash<pos:position pos:line="2" pos:column="10"/></name><argument_list type="generic" pos:line="2" pos:column="10">&lt;<argument><expr><name pos:line="2" pos:column="11">SBuf<pos:position pos:line="2" pos:column="15"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="19"/></argument_list></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">operator<name pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></name></name></name> <parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">SBuf<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="43">sbuf<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <noexcept pos:line="2" pos:column="55">noexcept<pos:position pos:line="2" pos:column="63"/></noexcept>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><call><name pos:line="4" pos:column="12">SBufHashCommon_<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">sbuf<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="4" pos:column="34">false<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

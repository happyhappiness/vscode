<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3765_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Qos<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">getTosFromServer<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">Comm<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">ConnectionPointer<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">server<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">fde<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">clientFde<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_QOS_TOS<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&amp;&amp;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="20">_SQUID_LINUX_<pos:position pos:line="4" pos:column="33"/></name></expr></cpp:if>
    <comment type="block" pos:line="5" pos:column="5">/* Bug 2537: This part of ZPH only applies to patched Linux kernels. */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">tos_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">tos<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">tos_len<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><sizeof pos:line="7" pos:column="19">sizeof<argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">tos<pos:position pos:line="7" pos:column="29"/></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">clientFde<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">tosFromServer<pos:position pos:line="8" pos:column="29"/></name></name> <operator pos:line="8" pos:column="30">=<pos:position pos:line="8" pos:column="31"/></operator> <literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">setsockopt<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name><name pos:line="9" pos:column="20">server<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">fd<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="31">SOL_IP<pos:position pos:line="9" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="38">IP_RECVTOS<pos:position pos:line="9" pos:column="48"/></name></expr></argument>,<argument><expr><operator pos:line="9" pos:column="49">&amp;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="50">tos<pos:position pos:line="9" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="54">tos_len<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call><operator pos:line="9" pos:column="62">==<pos:position pos:line="9" pos:column="64"/></operator><literal type="number" pos:line="9" pos:column="64">0<pos:position pos:line="9" pos:column="65"/></literal></expr>)<pos:position pos:line="9" pos:column="66"/></condition><then pos:line="9" pos:column="66"> <block pos:line="9" pos:column="67">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">char<pos:position pos:line="10" pos:column="22"/></name></type> <name><name pos:line="10" pos:column="23">buf<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><literal type="number" pos:line="10" pos:column="27">512<pos:position pos:line="10" pos:column="30"/></literal></expr>]<pos:position pos:line="10" pos:column="31"/></index></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">len<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><literal type="number" pos:line="11" pos:column="19">512<pos:position pos:line="11" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">getsockopt<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">server<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">fd<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="35">SOL_IP<pos:position pos:line="12" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="42">IP_PKTOPTIONS<pos:position pos:line="12" pos:column="55"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="56">buf<pos:position pos:line="12" pos:column="59"/></name></expr></argument>,<argument><expr><operator pos:line="12" pos:column="60">(<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">socklen_t<pos:position pos:line="12" pos:column="70"/></name><operator pos:line="12" pos:column="70">*<pos:position pos:line="12" pos:column="71"/></operator><operator pos:line="12" pos:column="71">)<pos:position pos:line="12" pos:column="72"/></operator><operator pos:line="12" pos:column="72">&amp;<pos:position pos:line="12" pos:column="77"/></operator><name pos:line="12" pos:column="73">len<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call> <operator pos:line="12" pos:column="78">==<pos:position pos:line="12" pos:column="80"/></operator> <literal type="number" pos:line="12" pos:column="81">0<pos:position pos:line="12" pos:column="82"/></literal></expr>)<pos:position pos:line="12" pos:column="83"/></condition><then pos:line="12" pos:column="83"> <block pos:line="12" pos:column="84">{
            <comment type="block" pos:line="13" pos:column="13">/* Parse the PKTOPTIONS structure to locate the TOS data message
             * prepared in the kernel by the ZPH incoming TCP TOS preserving
             * patch.
             */</comment>
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">unsigned<pos:position pos:line="17" pos:column="21"/></name> <name pos:line="17" pos:column="22">char<pos:position pos:line="17" pos:column="26"/></name> <modifier pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></modifier></type> <name pos:line="17" pos:column="29">pbuf<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><name pos:line="17" pos:column="36">buf<pos:position pos:line="17" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="40"/></decl_stmt>
            <while pos:line="18" pos:column="13">while <condition pos:line="18" pos:column="19">(<expr><name pos:line="18" pos:column="20">pbuf<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="25">buf<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">&lt;<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="31">len<pos:position pos:line="18" pos:column="34"/></name></expr>)<pos:position pos:line="18" pos:column="35"/></condition> <block pos:line="18" pos:column="36">{
                <decl_stmt><decl><type><name><name pos:line="19" pos:column="17">struct<pos:position pos:line="19" pos:column="23"/></name> <name pos:line="19" pos:column="24">cmsghdr<pos:position pos:line="19" pos:column="31"/></name></name> <modifier pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></modifier></type><name pos:line="19" pos:column="33">o<pos:position pos:line="19" pos:column="34"/></name> <init pos:line="19" pos:column="35">= <expr><operator pos:line="19" pos:column="37">(<pos:position pos:line="19" pos:column="38"/></operator>struct <name pos:line="19" pos:column="45">cmsghdr<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">*<pos:position pos:line="19" pos:column="53"/></operator><operator pos:line="19" pos:column="53">)<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="54">pbuf<pos:position pos:line="19" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="59"/></decl_stmt>
                <if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">o<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">-&gt;<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="24">cmsg_len<pos:position pos:line="20" pos:column="32"/></name></name><operator pos:line="20" pos:column="32">&lt;=<pos:position pos:line="20" pos:column="37"/></operator><literal type="number" pos:line="20" pos:column="34">0<pos:position pos:line="20" pos:column="35"/></literal></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36">
                    <block type="pseudo"><break pos:line="21" pos:column="21">break;<pos:position pos:line="21" pos:column="27"/></break></block></then></if>

                <if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name><name pos:line="23" pos:column="21">o<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">-&gt;<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="24">cmsg_level<pos:position pos:line="23" pos:column="34"/></name></name> <operator pos:line="23" pos:column="35">==<pos:position pos:line="23" pos:column="37"/></operator> <name pos:line="23" pos:column="38">SOL_IP<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">&amp;&amp;<pos:position pos:line="23" pos:column="55"/></operator> <name><name pos:line="23" pos:column="48">o<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">cmsg_type<pos:position pos:line="23" pos:column="60"/></name></name> <operator pos:line="23" pos:column="61">==<pos:position pos:line="23" pos:column="63"/></operator> <name pos:line="23" pos:column="64">IP_TOS<pos:position pos:line="23" pos:column="70"/></name></expr>)<pos:position pos:line="23" pos:column="71"/></condition><then pos:line="23" pos:column="71"> <block pos:line="23" pos:column="72">{
                    <decl_stmt><decl><type><name pos:line="24" pos:column="21">int<pos:position pos:line="24" pos:column="24"/></name> <modifier pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></modifier></type><name pos:line="24" pos:column="26">tmp<pos:position pos:line="24" pos:column="29"/></name> <init pos:line="24" pos:column="30">= <expr><operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">int<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">*<pos:position pos:line="24" pos:column="37"/></operator><operator pos:line="24" pos:column="37">)<pos:position pos:line="24" pos:column="38"/></operator><call><name pos:line="24" pos:column="38">CMSG_DATA<pos:position pos:line="24" pos:column="47"/></name><argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">o<pos:position pos:line="24" pos:column="49"/></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="51"/></decl_stmt>
                    <expr_stmt><expr><name><name pos:line="25" pos:column="21">clientFde<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">-&gt;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="32">tosFromServer<pos:position pos:line="25" pos:column="45"/></name></name> <operator pos:line="25" pos:column="46">=<pos:position pos:line="25" pos:column="47"/></operator> <operator pos:line="25" pos:column="48">(<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">tos_t<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator><operator pos:line="25" pos:column="55">*<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">tmp<pos:position pos:line="25" pos:column="59"/></name></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
                    <break pos:line="26" pos:column="21">break;<pos:position pos:line="26" pos:column="27"/></break>
                }<pos:position pos:line="27" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="28" pos:column="17">pbuf<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">+=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">CMSG_LEN<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><name><name pos:line="28" pos:column="34">o<pos:position pos:line="28" pos:column="35"/></name><operator pos:line="28" pos:column="35">-&gt;<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="37">cmsg_len<pos:position pos:line="28" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></while>
        }<pos:position pos:line="30" pos:column="10"/></block></then> <else pos:line="30" pos:column="11">else <block pos:line="30" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">33<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">DBG_IMPORTANT<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="39">"QOS: error in getsockopt(IP_PKTOPTIONS) on "<pos:position pos:line="31" pos:column="84"/></literal> <operator pos:line="31" pos:column="85">&lt;&lt;<pos:position pos:line="31" pos:column="93"/></operator> <name pos:line="31" pos:column="88">server<pos:position pos:line="31" pos:column="94"/></name> <operator pos:line="31" pos:column="95">&lt;&lt;<pos:position pos:line="31" pos:column="103"/></operator> <literal type="string" pos:line="31" pos:column="98">" "<pos:position pos:line="31" pos:column="101"/></literal> <operator pos:line="31" pos:column="102">&lt;&lt;<pos:position pos:line="31" pos:column="110"/></operator> <call><name pos:line="31" pos:column="105">xstrerror<pos:position pos:line="31" pos:column="114"/></name><argument_list pos:line="31" pos:column="114">()<pos:position pos:line="31" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="118"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></else></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">33<pos:position pos:line="34" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">DBG_IMPORTANT<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="35">"QOS: error in setsockopt(IP_RECVTOS) on "<pos:position pos:line="34" pos:column="77"/></literal> <operator pos:line="34" pos:column="78">&lt;&lt;<pos:position pos:line="34" pos:column="86"/></operator> <name pos:line="34" pos:column="81">server<pos:position pos:line="34" pos:column="87"/></name> <operator pos:line="34" pos:column="88">&lt;&lt;<pos:position pos:line="34" pos:column="96"/></operator> <literal type="string" pos:line="34" pos:column="91">" "<pos:position pos:line="34" pos:column="94"/></literal> <operator pos:line="34" pos:column="95">&lt;&lt;<pos:position pos:line="34" pos:column="103"/></operator> <call><name pos:line="34" pos:column="98">xstrerror<pos:position pos:line="34" pos:column="107"/></name><argument_list pos:line="34" pos:column="107">()<pos:position pos:line="34" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="111"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

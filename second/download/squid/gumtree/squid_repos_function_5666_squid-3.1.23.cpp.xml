<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5666_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">SquidMD5Final<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">unsigned<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name></type> <name><name pos:line="2" pos:column="29">digest<pos:position pos:line="2" pos:column="35"/></name><index pos:line="2" pos:column="35">[<expr><literal type="number" pos:line="2" pos:column="36">16<pos:position pos:line="2" pos:column="38"/></literal></expr>]<pos:position pos:line="2" pos:column="39"/></index></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="41">struct<pos:position pos:line="2" pos:column="47"/></name> <name pos:line="2" pos:column="48">SquidMD5Context<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">ctx<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">count<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name><name pos:line="4" pos:column="17">ctx<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">bytes<pos:position pos:line="4" pos:column="27"/></name><index pos:line="4" pos:column="27">[<expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>]<pos:position pos:line="4" pos:column="30"/></index></name> <operator pos:line="4" pos:column="31">&amp;<pos:position pos:line="4" pos:column="36"/></operator> <literal type="number" pos:line="4" pos:column="33">0x3f<pos:position pos:line="4" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>	<comment type="block" pos:line="4" pos:column="41">/* Number of bytes in ctx-&gt;in */</comment>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint8_t<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">uint8_t<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></operator><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator> <name><name pos:line="5" pos:column="30">ctx<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">in<pos:position pos:line="5" pos:column="37"/></name></name> <operator pos:line="5" pos:column="38">+<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="40">count<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* Set the first char of padding to 0x80.  There is always room. */</comment>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">p<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">++<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <literal type="number" pos:line="8" pos:column="12">0x80<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Bytes of padding needed to make 56 bytes (-8..55) */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">count<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator> <literal type="number" pos:line="11" pos:column="13">56<pos:position pos:line="11" pos:column="15"/></literal> <operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">1<pos:position pos:line="11" pos:column="19"/></literal> <operator pos:line="11" pos:column="20">-<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">count<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">count<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&lt;<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{		<comment type="block" pos:line="13" pos:column="33">/* Padding forces an extra block */</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">memset<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">p<pos:position pos:line="14" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">count<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">+<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">8<pos:position pos:line="14" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">byteSwap<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name><name pos:line="15" pos:column="18">ctx<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">in<pos:position pos:line="15" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="27">16<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">SquidMD5Transform<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">ctx<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">buf<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="37">ctx<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">in<pos:position pos:line="16" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">uint8_t<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></operator><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator> <name><name pos:line="17" pos:column="25">ctx<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">in<pos:position pos:line="17" pos:column="32"/></name></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">count<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">56<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memset<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">p<pos:position pos:line="20" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">count<pos:position pos:line="20" pos:column="23"/></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">byteSwap<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name><name pos:line="21" pos:column="14">ctx<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">in<pos:position pos:line="21" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="23">14<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="23" pos:column="5">/* Append length in bits and transform */</comment>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">ctx<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">in<pos:position pos:line="24" pos:column="12"/></name><index pos:line="24" pos:column="12">[<expr><literal type="number" pos:line="24" pos:column="13">14<pos:position pos:line="24" pos:column="15"/></literal></expr>]<pos:position pos:line="24" pos:column="16"/></index></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name><name pos:line="24" pos:column="19">ctx<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">bytes<pos:position pos:line="24" pos:column="29"/></name><index pos:line="24" pos:column="29">[<expr><literal type="number" pos:line="24" pos:column="30">0<pos:position pos:line="24" pos:column="31"/></literal></expr>]<pos:position pos:line="24" pos:column="32"/></index></name> <operator pos:line="24" pos:column="33">&lt;&lt;<pos:position pos:line="24" pos:column="41"/></operator> <literal type="number" pos:line="24" pos:column="36">3<pos:position pos:line="24" pos:column="37"/></literal></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">ctx<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">in<pos:position pos:line="25" pos:column="12"/></name><index pos:line="25" pos:column="12">[<expr><literal type="number" pos:line="25" pos:column="13">15<pos:position pos:line="25" pos:column="15"/></literal></expr>]<pos:position pos:line="25" pos:column="16"/></index></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="19">ctx<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">bytes<pos:position pos:line="25" pos:column="29"/></name><index pos:line="25" pos:column="29">[<expr><literal type="number" pos:line="25" pos:column="30">1<pos:position pos:line="25" pos:column="31"/></literal></expr>]<pos:position pos:line="25" pos:column="32"/></index></name> <operator pos:line="25" pos:column="33">&lt;&lt;<pos:position pos:line="25" pos:column="41"/></operator> <literal type="number" pos:line="25" pos:column="36">3<pos:position pos:line="25" pos:column="37"/></literal> <operator pos:line="25" pos:column="38">|<pos:position pos:line="25" pos:column="39"/></operator> <name><name pos:line="25" pos:column="40">ctx<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">bytes<pos:position pos:line="25" pos:column="50"/></name><index pos:line="25" pos:column="50">[<expr><literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr>]<pos:position pos:line="25" pos:column="53"/></index></name> <operator pos:line="25" pos:column="54">&gt;&gt;<pos:position pos:line="25" pos:column="59"/></operator> <literal type="number" pos:line="25" pos:column="57">29<pos:position pos:line="25" pos:column="59"/></literal></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">SquidMD5Transform<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name><name pos:line="26" pos:column="23">ctx<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">buf<pos:position pos:line="26" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="33">ctx<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">in<pos:position pos:line="26" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">byteSwap<pos:position pos:line="28" pos:column="13"/></name><argument_list pos:line="28" pos:column="13">(<argument><expr><name><name pos:line="28" pos:column="14">ctx<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">-&gt;<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="19">buf<pos:position pos:line="28" pos:column="22"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="24">4<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">memcpy<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">digest<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="20">ctx<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">-&gt;<pos:position pos:line="29" pos:column="28"/></operator><name pos:line="29" pos:column="25">buf<pos:position pos:line="29" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="30">16<pos:position pos:line="29" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">memset<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">ctx<pos:position pos:line="30" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="20">sizeof<argument_list pos:line="30" pos:column="26">(<argument><expr><operator pos:line="30" pos:column="27">*<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">ctx<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="34"/></expr_stmt>	<comment type="block" pos:line="30" pos:column="41">/* In case it's sensitive */</comment>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

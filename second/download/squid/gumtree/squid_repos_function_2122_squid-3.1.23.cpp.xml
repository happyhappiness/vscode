<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2122_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ServerStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">noteBodyProducerAborted<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><name><name pos:line="2" pos:column="42">BodyPipe<pos:position pos:line="2" pos:column="50"/></name><operator pos:line="2" pos:column="50">::<pos:position pos:line="2" pos:column="52"/></operator><name pos:line="2" pos:column="52">Pointer<pos:position pos:line="2" pos:column="59"/></name></name></type> <name pos:line="2" pos:column="60">bp<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ADAPTATION<pos:position pos:line="4" pos:column="19"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">adaptedBodySource<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">==<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="30">bp<pos:position pos:line="5" pos:column="32"/></name></expr>)<pos:position pos:line="5" pos:column="33"/></condition><then pos:line="5" pos:column="33"> <block pos:line="5" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">handleAdaptedBodyProducerAborted<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">()<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">requestBodySource<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">==<pos:position pos:line="10" pos:column="29"/></operator> <name pos:line="10" pos:column="30">bp<pos:position pos:line="10" pos:column="32"/></name></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">handleRequestBodyProducerAborted<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">()<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

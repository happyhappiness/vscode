<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5134_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">User<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">addIp<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">Ip<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">Address<pos:position pos:line="2" pos:column="30"/></name></name></type> <name pos:line="2" pos:column="31">ipaddr<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AuthUserIP<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">ipdata<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">AuthUserIP<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator> <name><name pos:line="4" pos:column="41">ip_list<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">.<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">head<pos:position pos:line="4" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">found<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><literal type="number" pos:line="5" pos:column="17">0<pos:position pos:line="5" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">AuthUserIP<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/*
     * we walk the entire list to prevent the first item in the list
     * preventing old entries being flushed and locking a user out after
     * a timeout+reconfigure
     */</comment>
    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">ipdata<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition> <block pos:line="14" pos:column="20">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">AuthUserIP<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">tempnode<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">AuthUserIP<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></operator><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator> <name><name pos:line="15" pos:column="47">ipdata<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">-&gt;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="55">node<pos:position pos:line="15" pos:column="59"/></name><operator pos:line="15" pos:column="59">.<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">next<pos:position pos:line="15" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>
        <comment type="block" pos:line="16" pos:column="9">/* walk the ip list */</comment>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">ipdata<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">ipaddr<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">ipaddr<pos:position pos:line="18" pos:column="37"/></name></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
            <comment type="block" pos:line="19" pos:column="13">/* This ip has already been seen. */</comment>
            <expr_stmt><expr><name pos:line="20" pos:column="13">found<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
            <comment type="block" pos:line="21" pos:column="13">/* update IP ttl */</comment>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">ipdata<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">ip_expiretime<pos:position pos:line="22" pos:column="34"/></name></name> <operator pos:line="22" pos:column="35">=<pos:position pos:line="22" pos:column="36"/></operator> <name pos:line="22" pos:column="37">squid_curtime<pos:position pos:line="22" pos:column="50"/></name></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then> <elseif pos:line="23" pos:column="11">else <if pos:line="23" pos:column="16">if <condition pos:line="23" pos:column="19">(<expr><name><name pos:line="23" pos:column="20">ipdata<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">ip_expiretime<pos:position pos:line="23" pos:column="41"/></name></name> <operator pos:line="23" pos:column="42">+<pos:position pos:line="23" pos:column="43"/></operator> <name><operator pos:line="23" pos:column="44">::<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">Config<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">.<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="53">authenticateIpTTL<pos:position pos:line="23" pos:column="70"/></name></name> <operator pos:line="23" pos:column="71">&lt;<pos:position pos:line="23" pos:column="75"/></operator> <name pos:line="23" pos:column="73">squid_curtime<pos:position pos:line="23" pos:column="86"/></name></expr>)<pos:position pos:line="23" pos:column="87"/></condition><then pos:line="23" pos:column="87"> <block pos:line="23" pos:column="88">{
            <comment type="block" pos:line="24" pos:column="13">/* This IP has expired - remove from the seen list */</comment>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">dlinkDelete<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name><name pos:line="25" pos:column="26">ipdata<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">node<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="40">&amp;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="41">ip_list<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">cbdataFree<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">ipdata<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
            <comment type="block" pos:line="27" pos:column="13">/* catch incipient underflow */</comment>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">assert<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">ipcount<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="29" pos:column="13">--<pos:position pos:line="29" pos:column="15"/></operator> <name pos:line="29" pos:column="16">ipcount<pos:position pos:line="29" pos:column="23"/></name></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name pos:line="32" pos:column="9">ipdata<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name pos:line="32" pos:column="18">tempnode<pos:position pos:line="32" pos:column="26"/></name></expr>;<pos:position pos:line="32" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></while>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">found<pos:position pos:line="35" pos:column="14"/></name></expr>)<pos:position pos:line="35" pos:column="15"/></condition><then pos:line="35" pos:column="15">
        <block type="pseudo"><return pos:line="36" pos:column="9">return;<pos:position pos:line="36" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* This ip is not in the seen list */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">ipdata<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <call><name pos:line="39" pos:column="14">cbdataAlloc<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><name pos:line="39" pos:column="26">AuthUserIP<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">ipdata<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">ip_expiretime<pos:position pos:line="41" pos:column="26"/></name></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">squid_curtime<pos:position pos:line="41" pos:column="42"/></name></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">ipdata<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">ipaddr<pos:position pos:line="43" pos:column="19"/></name></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <name pos:line="43" pos:column="22">ipaddr<pos:position pos:line="43" pos:column="28"/></name></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">dlinkAddTail<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">ipdata<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="26">&amp;<pos:position pos:line="45" pos:column="31"/></operator><name><name pos:line="45" pos:column="27">ipdata<pos:position pos:line="45" pos:column="33"/></name><operator pos:line="45" pos:column="33">-&gt;<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="35">node<pos:position pos:line="45" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="41">&amp;<pos:position pos:line="45" pos:column="46"/></operator><name pos:line="45" pos:column="42">ip_list<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="47" pos:column="5">++<pos:position pos:line="47" pos:column="7"/></operator><name pos:line="47" pos:column="7">ipcount<pos:position pos:line="47" pos:column="14"/></name></expr>;<pos:position pos:line="47" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">debugs<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><literal type="number" pos:line="49" pos:column="12">29<pos:position pos:line="49" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="16">2<pos:position pos:line="49" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="19">HERE<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">&lt;&lt;<pos:position pos:line="49" pos:column="32"/></operator> <literal type="string" pos:line="49" pos:column="27">"user '"<pos:position pos:line="49" pos:column="35"/></literal> <operator pos:line="49" pos:column="36">&lt;&lt;<pos:position pos:line="49" pos:column="44"/></operator> <call><name pos:line="49" pos:column="39">username<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">()<pos:position pos:line="49" pos:column="49"/></argument_list></call> <operator pos:line="49" pos:column="50">&lt;&lt;<pos:position pos:line="49" pos:column="58"/></operator> <literal type="string" pos:line="49" pos:column="53">"' has been seen at a new IP address ("<pos:position pos:line="49" pos:column="92"/></literal> <operator pos:line="49" pos:column="93">&lt;&lt;<pos:position pos:line="49" pos:column="101"/></operator> <name pos:line="49" pos:column="96">ipaddr<pos:position pos:line="49" pos:column="102"/></name> <operator pos:line="49" pos:column="103">&lt;&lt;<pos:position pos:line="49" pos:column="111"/></operator> <literal type="string" pos:line="49" pos:column="106">")"<pos:position pos:line="49" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="111"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

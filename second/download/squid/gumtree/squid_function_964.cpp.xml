<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_964.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">configDoConfigure<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">memset<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">&amp;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="13">Config2<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="4" pos:column="22">'\0'<pos:position pos:line="4" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="28">sizeof<argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">SquidConfig2<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* init memory as early as possible */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">memConfigure<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">()<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Sanity checks */</comment>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">Config<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">cacheSwap<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">.<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">n_strands<pos:position pos:line="9" pos:column="31"/></name></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt> <comment type="line" pos:line="9" pos:column="37">// no diskers by default</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">Config<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">cacheSwap<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">swapDirs<pos:position pos:line="10" pos:column="34"/></name></name> <operator pos:line="10" pos:column="35">==<pos:position pos:line="10" pos:column="37"/></operator> <name pos:line="10" pos:column="38">NULL<pos:position pos:line="10" pos:column="42"/></name></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
        <comment type="block" pos:line="11" pos:column="9">/* Memory-only cache probably in effect. */</comment>
        <comment type="block" pos:line="12" pos:column="9">/* turn off the cache rebuild delays... */</comment>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">StoreController<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">::<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">store_dirs_rebuilding<pos:position pos:line="13" pos:column="47"/></name></name> <operator pos:line="13" pos:column="48">=<pos:position pos:line="13" pos:column="49"/></operator> <literal type="number" pos:line="13" pos:column="50">0<pos:position pos:line="13" pos:column="51"/></literal></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <elseif pos:line="14" pos:column="7">else <if pos:line="14" pos:column="12">if <condition pos:line="14" pos:column="15">(<expr><call><name pos:line="14" pos:column="16">InDaemonMode<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">()<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <block pos:line="14" pos:column="32">{ <comment type="line" pos:line="14" pos:column="34">// no diskers in non-daemon mode</comment>
        <for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><decl><type><name pos:line="15" pos:column="14">int<pos:position pos:line="15" pos:column="17"/></name></type> <name pos:line="15" pos:column="18">i<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="24"/></init> <condition><expr><name pos:line="15" pos:column="25">i<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">&lt;<pos:position pos:line="15" pos:column="31"/></operator> <name><name pos:line="15" pos:column="29">Config<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">.<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="36">cacheSwap<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">.<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="46">n_configured<pos:position pos:line="15" pos:column="58"/></name></name></expr>;<pos:position pos:line="15" pos:column="59"/></condition> <incr><expr><operator pos:line="15" pos:column="60">++<pos:position pos:line="15" pos:column="62"/></operator><name pos:line="15" pos:column="62">i<pos:position pos:line="15" pos:column="63"/></name></expr></incr>)<pos:position pos:line="15" pos:column="64"/></control> <block pos:line="15" pos:column="65">{
            <decl_stmt><decl><type><specifier pos:line="16" pos:column="13">const<pos:position pos:line="16" pos:column="18"/></specifier> <name><name pos:line="16" pos:column="19">RefCount<pos:position pos:line="16" pos:column="27"/></name><argument_list type="generic" pos:line="16" pos:column="27">&lt;<argument><expr><name pos:line="16" pos:column="28">SwapDir<pos:position pos:line="16" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="39"/></argument_list></name></type> <name pos:line="16" pos:column="37">sd<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><name><name pos:line="16" pos:column="42">Config<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">.<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">cacheSwap<pos:position pos:line="16" pos:column="58"/></name><operator pos:line="16" pos:column="58">.<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="59">swapDirs<pos:position pos:line="16" pos:column="67"/></name><index pos:line="16" pos:column="67">[<expr><name pos:line="16" pos:column="68">i<pos:position pos:line="16" pos:column="69"/></name></expr>]<pos:position pos:line="16" pos:column="70"/></index></name></expr></init></decl>;<pos:position pos:line="16" pos:column="71"/></decl_stmt>
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><call><name><name pos:line="17" pos:column="17">sd<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">needsDiskStrand<pos:position pos:line="17" pos:column="36"/></name></name><argument_list pos:line="17" pos:column="36">()<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">sd<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">disker<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <name><name pos:line="18" pos:column="30">Config<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">workers<pos:position pos:line="18" pos:column="44"/></name></name> <operator pos:line="18" pos:column="45">+<pos:position pos:line="18" pos:column="46"/></operator> <operator pos:line="18" pos:column="47">(<pos:position pos:line="18" pos:column="48"/></operator><operator pos:line="18" pos:column="48">++<pos:position pos:line="18" pos:column="50"/></operator><name><name pos:line="18" pos:column="50">Config<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">cacheSwap<pos:position pos:line="18" pos:column="66"/></name><operator pos:line="18" pos:column="66">.<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="67">n_strands<pos:position pos:line="18" pos:column="76"/></name></name><operator pos:line="18" pos:column="76">)<pos:position pos:line="18" pos:column="77"/></operator></expr>;<pos:position pos:line="18" pos:column="78"/></expr_stmt></block></then></if>
        }<pos:position pos:line="19" pos:column="10"/></block></for>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">Debug<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">::<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">rotateNumber<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">&lt;<pos:position pos:line="22" pos:column="33"/></operator> <literal type="number" pos:line="22" pos:column="31">0<pos:position pos:line="22" pos:column="32"/></literal></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33"> <block pos:line="22" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">Debug<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">::<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">rotateNumber<pos:position pos:line="23" pos:column="28"/></name></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name><name pos:line="23" pos:column="31">Config<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">.<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">Log<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">rotateNumber<pos:position pos:line="23" pos:column="54"/></name></name></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">SIZEOF_OFF_T<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&lt;=<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="21">4<pos:position pos:line="26" pos:column="22"/></literal></expr></cpp:if>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">Config<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">.<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">Store<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">maxObjectSize<pos:position pos:line="27" pos:column="35"/></name></name> <operator pos:line="27" pos:column="36">&gt;<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="38">0x7FFF0000<pos:position pos:line="27" pos:column="48"/></literal></expr>)<pos:position pos:line="27" pos:column="49"/></condition><then pos:line="27" pos:column="49"> <block pos:line="27" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">3<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="19">DBG_CRITICAL<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="33">"WARNING: This Squid binary can not handle files larger than 2GB. Limiting maximum_object_size to just below 2GB"<pos:position pos:line="28" pos:column="146"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="147"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="148"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">Config<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">Store<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">.<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">maxObjectSize<pos:position pos:line="29" pos:column="35"/></name></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <literal type="number" pos:line="29" pos:column="38">0x7FFF0000<pos:position pos:line="29" pos:column="48"/></literal></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">Config<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">Announce<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">period<pos:position pos:line="33" pos:column="31"/></name></name> <operator pos:line="33" pos:column="32">&gt;<pos:position pos:line="33" pos:column="36"/></operator> <literal type="number" pos:line="33" pos:column="34">0<pos:position pos:line="33" pos:column="35"/></literal></expr>)<pos:position pos:line="33" pos:column="36"/></condition><then pos:line="33" pos:column="36"> <block pos:line="33" pos:column="37">{
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">Config<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">.<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">onoff<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">.<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">announce<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <literal type="number" pos:line="34" pos:column="33">1<pos:position pos:line="34" pos:column="34"/></literal></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <else pos:line="35" pos:column="7">else <block pos:line="35" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">Config<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">.<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">Announce<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">period<pos:position pos:line="36" pos:column="31"/></name></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="34">86400<pos:position pos:line="36" pos:column="39"/></literal> <operator pos:line="36" pos:column="40">*<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">365<pos:position pos:line="36" pos:column="45"/></literal></expr>;<pos:position pos:line="36" pos:column="46"/></expr_stmt>	<comment type="block" pos:line="36" pos:column="49">/* one year */</comment>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">Config<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">.<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">onoff<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">announce<pos:position pos:line="37" pos:column="30"/></name></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <literal type="number" pos:line="37" pos:column="33">0<pos:position pos:line="37" pos:column="34"/></literal></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">Config<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">.<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">onoff<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">.<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">httpd_suppress_version_string<pos:position pos:line="40" pos:column="51"/></name></name></expr>)<pos:position pos:line="40" pos:column="52"/></condition><then pos:line="40" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">visible_appname_string<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <operator pos:line="41" pos:column="34">(<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">char<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">*<pos:position pos:line="41" pos:column="41"/></operator><operator pos:line="41" pos:column="41">)<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="42">appname_string<pos:position pos:line="41" pos:column="56"/></name></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="42" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="9">visible_appname_string<pos:position pos:line="43" pos:column="31"/></name> <operator pos:line="43" pos:column="32">=<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">(<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">char<pos:position pos:line="43" pos:column="39"/></name> <specifier pos:line="43" pos:column="40">const<pos:position pos:line="43" pos:column="45"/></specifier> <operator pos:line="43" pos:column="46">*<pos:position pos:line="43" pos:column="47"/></operator><operator pos:line="43" pos:column="47">)<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">APP_FULLNAME<pos:position pos:line="43" pos:column="60"/></name></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt></block></else></if>

<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if<pos:position pos:line="45" pos:column="4"/></cpp:directive> <expr><name pos:line="45" pos:column="5">USE_DNSHELPER<pos:position pos:line="45" pos:column="18"/></name></expr></cpp:if>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">Config<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">dnsChildren<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">.<pos:position pos:line="46" pos:column="28"/></operator><name pos:line="46" pos:column="28">n_max<pos:position pos:line="46" pos:column="33"/></name></name> <operator pos:line="46" pos:column="34">&lt;<pos:position pos:line="46" pos:column="38"/></operator> <literal type="number" pos:line="46" pos:column="36">1<pos:position pos:line="46" pos:column="37"/></literal></expr>)<pos:position pos:line="46" pos:column="38"/></condition><then pos:line="46" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">fatal<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="string" pos:line="47" pos:column="15">"No DNS helpers allocated"<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="43"/></expr_stmt></block></then></if>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">Config<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">.<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">Program<pos:position pos:line="50" pos:column="23"/></name><operator pos:line="50" pos:column="23">.<pos:position pos:line="50" pos:column="24"/></operator><name pos:line="50" pos:column="24">redirect<pos:position pos:line="50" pos:column="32"/></name></name></expr>)<pos:position pos:line="50" pos:column="33"/></condition><then pos:line="50" pos:column="33"> <block pos:line="50" pos:column="34">{
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">Config<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">.<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="20">redirectChildren<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">.<pos:position pos:line="51" pos:column="37"/></operator><name pos:line="51" pos:column="37">n_max<pos:position pos:line="51" pos:column="42"/></name></name> <operator pos:line="51" pos:column="43">&lt;<pos:position pos:line="51" pos:column="47"/></operator> <literal type="number" pos:line="51" pos:column="45">1<pos:position pos:line="51" pos:column="46"/></literal></expr>)<pos:position pos:line="51" pos:column="47"/></condition><then pos:line="51" pos:column="47"> <block pos:line="51" pos:column="48">{
            <expr_stmt><expr><name><name pos:line="52" pos:column="13">Config<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">redirectChildren<pos:position pos:line="52" pos:column="36"/></name><operator pos:line="52" pos:column="36">.<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="37">n_max<pos:position pos:line="52" pos:column="42"/></name></name> <operator pos:line="52" pos:column="43">=<pos:position pos:line="52" pos:column="44"/></operator> <literal type="number" pos:line="52" pos:column="45">0<pos:position pos:line="52" pos:column="46"/></literal></expr>;<pos:position pos:line="52" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">wordlistDestroy<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><operator pos:line="53" pos:column="29">&amp;<pos:position pos:line="53" pos:column="34"/></operator><name><name pos:line="53" pos:column="30">Config<pos:position pos:line="53" pos:column="36"/></name><operator pos:line="53" pos:column="36">.<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="37">Program<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">.<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="45">redirect<pos:position pos:line="53" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><name><name pos:line="57" pos:column="9">Config<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">.<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">Program<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">.<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">store_id<pos:position pos:line="57" pos:column="32"/></name></name></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33"> <block pos:line="57" pos:column="34">{
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">Config<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">.<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="20">storeIdChildren<pos:position pos:line="58" pos:column="35"/></name><operator pos:line="58" pos:column="35">.<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="36">n_max<pos:position pos:line="58" pos:column="41"/></name></name> <operator pos:line="58" pos:column="42">&lt;<pos:position pos:line="58" pos:column="46"/></operator> <literal type="number" pos:line="58" pos:column="44">1<pos:position pos:line="58" pos:column="45"/></literal></expr>)<pos:position pos:line="58" pos:column="46"/></condition><then pos:line="58" pos:column="46"> <block pos:line="58" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">Config<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">storeIdChildren<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">.<pos:position pos:line="59" pos:column="36"/></operator><name pos:line="59" pos:column="36">n_max<pos:position pos:line="59" pos:column="41"/></name></name> <operator pos:line="59" pos:column="42">=<pos:position pos:line="59" pos:column="43"/></operator> <literal type="number" pos:line="59" pos:column="44">0<pos:position pos:line="59" pos:column="45"/></literal></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">wordlistDestroy<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator><name><name pos:line="60" pos:column="30">Config<pos:position pos:line="60" pos:column="36"/></name><operator pos:line="60" pos:column="36">.<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="37">Program<pos:position pos:line="60" pos:column="44"/></name><operator pos:line="60" pos:column="44">.<pos:position pos:line="60" pos:column="45"/></operator><name pos:line="60" pos:column="45">store_id<pos:position pos:line="60" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">Config<pos:position pos:line="64" pos:column="15"/></name><operator pos:line="64" pos:column="15">.<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="16">appendDomain<pos:position pos:line="64" pos:column="28"/></name></name></expr>)<pos:position pos:line="64" pos:column="29"/></condition><then pos:line="64" pos:column="29">
        <block type="pseudo"><if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><operator pos:line="65" pos:column="13">*<pos:position pos:line="65" pos:column="14"/></operator><name><name pos:line="65" pos:column="14">Config<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">appendDomain<pos:position pos:line="65" pos:column="33"/></name></name> <operator pos:line="65" pos:column="34">!=<pos:position pos:line="65" pos:column="36"/></operator> <literal type="char" pos:line="65" pos:column="37">'.'<pos:position pos:line="65" pos:column="40"/></literal></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="13">fatal<pos:position pos:line="66" pos:column="18"/></name><argument_list pos:line="66" pos:column="18">(<argument><expr><literal type="string" pos:line="66" pos:column="19">"append_domain must begin with a '.'"<pos:position pos:line="66" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="58"/></expr_stmt></block></then></if></block></then></if>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">Config<pos:position pos:line="68" pos:column="15"/></name><operator pos:line="68" pos:column="15">.<pos:position pos:line="68" pos:column="16"/></operator><name pos:line="68" pos:column="16">errHtmlText<pos:position pos:line="68" pos:column="27"/></name></name> <operator pos:line="68" pos:column="28">==<pos:position pos:line="68" pos:column="30"/></operator> <name pos:line="68" pos:column="31">NULL<pos:position pos:line="68" pos:column="35"/></name></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="9">Config<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">.<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">errHtmlText<pos:position pos:line="69" pos:column="27"/></name></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <call><name pos:line="69" pos:column="30">xstrdup<pos:position pos:line="69" pos:column="37"/></name><argument_list pos:line="69" pos:column="37">(<argument><expr><name pos:line="69" pos:column="38">null_string<pos:position pos:line="69" pos:column="49"/></name></expr></argument>)<pos:position pos:line="69" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt></block></then></if>

<cpp:if pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">if<pos:position pos:line="71" pos:column="4"/></cpp:directive> <expr><operator pos:line="71" pos:column="5">!<pos:position pos:line="71" pos:column="6"/></operator><name pos:line="71" pos:column="6">HAVE_SETRLIMIT<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">||<pos:position pos:line="71" pos:column="23"/></operator> <operator pos:line="71" pos:column="24">!<pos:position pos:line="71" pos:column="25"/></operator><call><name pos:line="71" pos:column="25">defined<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">RLIMIT_NOFILE<pos:position pos:line="71" pos:column="46"/></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr></cpp:if>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name><name pos:line="72" pos:column="9">Config<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">.<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">max_filedescriptors<pos:position pos:line="72" pos:column="35"/></name></name> <operator pos:line="72" pos:column="36">&gt;<pos:position pos:line="72" pos:column="40"/></operator> <literal type="number" pos:line="72" pos:column="38">0<pos:position pos:line="72" pos:column="39"/></literal></expr>)<pos:position pos:line="72" pos:column="40"/></condition><then pos:line="72" pos:column="40"> <block pos:line="72" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">debugs<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><literal type="number" pos:line="73" pos:column="16">0<pos:position pos:line="73" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="19">DBG_IMPORTANT<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="34">"WARNING: max_filedescriptors disabled. Operating System setrlimit(RLIMIT_NOFILE) is missing."<pos:position pos:line="73" pos:column="128"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="130"/></expr_stmt>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
<cpp:elif pos:line="75" pos:column="1">#<cpp:directive pos:line="75" pos:column="2">elif<pos:position pos:line="75" pos:column="6"/></cpp:directive> <expr><name pos:line="75" pos:column="7">USE_SELECT<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">||<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">USE_SELECT_WIN32<pos:position pos:line="75" pos:column="37"/></name></expr></cpp:elif>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">Config<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">.<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="16">max_filedescriptors<pos:position pos:line="76" pos:column="35"/></name></name> <operator pos:line="76" pos:column="36">&gt;<pos:position pos:line="76" pos:column="40"/></operator> <name pos:line="76" pos:column="38">FD_SETSIZE<pos:position pos:line="76" pos:column="48"/></name></expr>)<pos:position pos:line="76" pos:column="49"/></condition><then pos:line="76" pos:column="49"> <block pos:line="76" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">debugs<pos:position pos:line="77" pos:column="15"/></name><argument_list pos:line="77" pos:column="15">(<argument><expr><literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="19">DBG_IMPORTANT<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="34">"WARNING: max_filedescriptors limited to "<pos:position pos:line="77" pos:column="76"/></literal> <operator pos:line="77" pos:column="77">&lt;&lt;<pos:position pos:line="77" pos:column="85"/></operator> <name pos:line="77" pos:column="80">FD_SETSIZE<pos:position pos:line="77" pos:column="90"/></name> <operator pos:line="77" pos:column="91">&lt;&lt;<pos:position pos:line="77" pos:column="99"/></operator> <literal type="string" pos:line="77" pos:column="94">" by select() algorithm."<pos:position pos:line="77" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="121"/></expr_stmt>
    }<pos:position pos:line="78" pos:column="6"/></block></then></if>
<cpp:endif pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">endif<pos:position pos:line="79" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="81" pos:column="5">storeConfigure<pos:position pos:line="81" pos:column="19"/></name><argument_list pos:line="81" pos:column="19">()<pos:position pos:line="81" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">update_maxobjsize<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">()<pos:position pos:line="82" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt> <comment type="line" pos:line="82" pos:column="26">// check for late maximum_object_size directive</comment>

    <expr_stmt><expr><call><name pos:line="84" pos:column="5">snprintf<pos:position pos:line="84" pos:column="13"/></name><argument_list pos:line="84" pos:column="13">(<argument><expr><name pos:line="84" pos:column="14">ThisCache<pos:position pos:line="84" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="25">sizeof<argument_list pos:line="84" pos:column="31">(<argument><expr><name pos:line="84" pos:column="32">ThisCache<pos:position pos:line="84" pos:column="41"/></name></expr></argument>)<pos:position pos:line="84" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="44">"%s (%s)"<pos:position pos:line="84" pos:column="53"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="85" pos:column="14">uniqueHostname<pos:position pos:line="85" pos:column="28"/></name><argument_list pos:line="85" pos:column="28">()<pos:position pos:line="85" pos:column="30"/></argument_list></call></expr></argument>,
             <argument><expr><name pos:line="86" pos:column="14">visible_appname_string<pos:position pos:line="86" pos:column="36"/></name></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="88" pos:column="5">/*
     * the extra space is for loop detection in client_side.c -- we search
     * for substrings in the Via header.
     */</comment>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">snprintf<pos:position pos:line="92" pos:column="13"/></name><argument_list pos:line="92" pos:column="13">(<argument><expr><name pos:line="92" pos:column="14">ThisCache2<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="92" pos:column="26">sizeof<argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">ThisCache<pos:position pos:line="92" pos:column="42"/></name></expr></argument>)<pos:position pos:line="92" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="45">" %s (%s)"<pos:position pos:line="92" pos:column="55"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="93" pos:column="14">uniqueHostname<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">()<pos:position pos:line="93" pos:column="30"/></argument_list></call></expr></argument>,
             <argument><expr><name pos:line="94" pos:column="14">visible_appname_string<pos:position pos:line="94" pos:column="36"/></name></expr></argument>)<pos:position pos:line="94" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="96" pos:column="5">/* Use visible_hostname as default surrogate_id */</comment>
    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">!<pos:position pos:line="97" pos:column="10"/></operator><name><name pos:line="97" pos:column="10">Config<pos:position pos:line="97" pos:column="16"/></name><operator pos:line="97" pos:column="16">.<pos:position pos:line="97" pos:column="17"/></operator><name pos:line="97" pos:column="17">Accel<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">.<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="23">surrogate_id<pos:position pos:line="97" pos:column="35"/></name></name></expr>)<pos:position pos:line="97" pos:column="36"/></condition><then pos:line="97" pos:column="36"> <block pos:line="97" pos:column="37">{
        <decl_stmt><decl><type><specifier pos:line="98" pos:column="9">const<pos:position pos:line="98" pos:column="14"/></specifier> <name pos:line="98" pos:column="15">char<pos:position pos:line="98" pos:column="19"/></name> <modifier pos:line="98" pos:column="20">*<pos:position pos:line="98" pos:column="21"/></modifier></type><name pos:line="98" pos:column="21">t<pos:position pos:line="98" pos:column="22"/></name> <init pos:line="98" pos:column="23">= <expr><call><name pos:line="98" pos:column="25">getMyHostname<pos:position pos:line="98" pos:column="38"/></name><argument_list pos:line="98" pos:column="38">()<pos:position pos:line="98" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="98" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">Config<pos:position pos:line="99" pos:column="15"/></name><operator pos:line="99" pos:column="15">.<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="16">Accel<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">.<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">surrogate_id<pos:position pos:line="99" pos:column="34"/></name></name> <operator pos:line="99" pos:column="35">=<pos:position pos:line="99" pos:column="36"/></operator> <call><name pos:line="99" pos:column="37">xstrdup<pos:position pos:line="99" pos:column="44"/></name><argument_list pos:line="99" pos:column="44">( <argument><expr><operator pos:line="99" pos:column="46">(<pos:position pos:line="99" pos:column="47"/></operator><ternary><condition><expr><name pos:line="99" pos:column="47">t<pos:position pos:line="99" pos:column="48"/></name></expr>?<pos:position pos:line="99" pos:column="49"/></condition><then><expr><name pos:line="99" pos:column="49">t<pos:position pos:line="99" pos:column="50"/></name></expr></then><else pos:line="99" pos:column="50">:<expr><literal type="string" pos:line="99" pos:column="51">"unset-id"<pos:position pos:line="99" pos:column="61"/></literal></expr></else></ternary><operator pos:line="99" pos:column="61">)<pos:position pos:line="99" pos:column="62"/></operator></expr></argument> )<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><operator pos:line="102" pos:column="9">!<pos:position pos:line="102" pos:column="10"/></operator><name><name pos:line="102" pos:column="10">Config<pos:position pos:line="102" pos:column="16"/></name><operator pos:line="102" pos:column="16">.<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">udpMaxHitObjsz<pos:position pos:line="102" pos:column="31"/></name></name> <operator pos:line="102" pos:column="32">||<pos:position pos:line="102" pos:column="34"/></operator> <name><name pos:line="102" pos:column="35">Config<pos:position pos:line="102" pos:column="41"/></name><operator pos:line="102" pos:column="41">.<pos:position pos:line="102" pos:column="42"/></operator><name pos:line="102" pos:column="42">udpMaxHitObjsz<pos:position pos:line="102" pos:column="56"/></name></name> <operator pos:line="102" pos:column="57">&gt;<pos:position pos:line="102" pos:column="61"/></operator> <name pos:line="102" pos:column="59">SQUID_UDP_SO_SNDBUF<pos:position pos:line="102" pos:column="78"/></name></expr>)<pos:position pos:line="102" pos:column="79"/></condition><then pos:line="102" pos:column="79">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="9">Config<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">.<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="16">udpMaxHitObjsz<pos:position pos:line="103" pos:column="30"/></name></name> <operator pos:line="103" pos:column="31">=<pos:position pos:line="103" pos:column="32"/></operator> <name pos:line="103" pos:column="33">SQUID_UDP_SO_SNDBUF<pos:position pos:line="103" pos:column="52"/></name></expr>;<pos:position pos:line="103" pos:column="53"/></expr_stmt></block></then></if>

    <if pos:line="105" pos:column="5">if <condition pos:line="105" pos:column="8">(<expr><name><name pos:line="105" pos:column="9">Config<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">.<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="16">appendDomain<pos:position pos:line="105" pos:column="28"/></name></name></expr>)<pos:position pos:line="105" pos:column="29"/></condition><then pos:line="105" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="106" pos:column="9">Config<pos:position pos:line="106" pos:column="15"/></name><operator pos:line="106" pos:column="15">.<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="16">appendDomainLen<pos:position pos:line="106" pos:column="31"/></name></name> <operator pos:line="106" pos:column="32">=<pos:position pos:line="106" pos:column="33"/></operator> <call><name pos:line="106" pos:column="34">strlen<pos:position pos:line="106" pos:column="40"/></name><argument_list pos:line="106" pos:column="40">(<argument><expr><name><name pos:line="106" pos:column="41">Config<pos:position pos:line="106" pos:column="47"/></name><operator pos:line="106" pos:column="47">.<pos:position pos:line="106" pos:column="48"/></operator><name pos:line="106" pos:column="48">appendDomain<pos:position pos:line="106" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="62"/></expr_stmt></block></then>
    <else pos:line="107" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="108" pos:column="9">Config<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">.<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="16">appendDomainLen<pos:position pos:line="108" pos:column="31"/></name></name> <operator pos:line="108" pos:column="32">=<pos:position pos:line="108" pos:column="33"/></operator> <literal type="number" pos:line="108" pos:column="34">0<pos:position pos:line="108" pos:column="35"/></literal></expr>;<pos:position pos:line="108" pos:column="36"/></expr_stmt></block></else></if>

    <if pos:line="110" pos:column="5">if <condition pos:line="110" pos:column="8">(<expr><name><name pos:line="110" pos:column="9">Config<pos:position pos:line="110" pos:column="15"/></name><operator pos:line="110" pos:column="15">.<pos:position pos:line="110" pos:column="16"/></operator><name pos:line="110" pos:column="16">connect_retries<pos:position pos:line="110" pos:column="31"/></name></name> <operator pos:line="110" pos:column="32">&gt;<pos:position pos:line="110" pos:column="36"/></operator> <literal type="number" pos:line="110" pos:column="34">10<pos:position pos:line="110" pos:column="36"/></literal></expr>)<pos:position pos:line="110" pos:column="37"/></condition><then pos:line="110" pos:column="37"> <block pos:line="110" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="111" pos:column="9">debugs<pos:position pos:line="111" pos:column="15"/></name><argument_list pos:line="111" pos:column="15">(<argument><expr><literal type="number" pos:line="111" pos:column="16">0<pos:position pos:line="111" pos:column="17"/></literal></expr></argument>,<argument><expr><name pos:line="111" pos:column="18">DBG_CRITICAL<pos:position pos:line="111" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="32">"WARNING: connect_retries cannot be larger than 10. Resetting to 10."<pos:position pos:line="111" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">Config<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">.<pos:position pos:line="112" pos:column="16"/></operator><name pos:line="112" pos:column="16">connect_retries<pos:position pos:line="112" pos:column="31"/></name></name> <operator pos:line="112" pos:column="32">=<pos:position pos:line="112" pos:column="33"/></operator> <literal type="number" pos:line="112" pos:column="34">10<pos:position pos:line="112" pos:column="36"/></literal></expr>;<pos:position pos:line="112" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="115" pos:column="5">requirePathnameExists<pos:position pos:line="115" pos:column="26"/></name><argument_list pos:line="115" pos:column="26">(<argument><expr><literal type="string" pos:line="115" pos:column="27">"MIME Config Table"<pos:position pos:line="115" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="48">Config<pos:position pos:line="115" pos:column="54"/></name><operator pos:line="115" pos:column="54">.<pos:position pos:line="115" pos:column="55"/></operator><name pos:line="115" pos:column="55">mimeTablePathname<pos:position pos:line="115" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="74"/></expr_stmt>
<cpp:if pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">if<pos:position pos:line="116" pos:column="4"/></cpp:directive> <expr><name pos:line="116" pos:column="5">USE_DNSHELPER<pos:position pos:line="116" pos:column="18"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">requirePathnameExists<pos:position pos:line="117" pos:column="26"/></name><argument_list pos:line="117" pos:column="26">(<argument><expr><literal type="string" pos:line="117" pos:column="27">"cache_dns_program"<pos:position pos:line="117" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="48">Config<pos:position pos:line="117" pos:column="54"/></name><operator pos:line="117" pos:column="54">.<pos:position pos:line="117" pos:column="55"/></operator><name pos:line="117" pos:column="55">Program<pos:position pos:line="117" pos:column="62"/></name><operator pos:line="117" pos:column="62">.<pos:position pos:line="117" pos:column="63"/></operator><name pos:line="117" pos:column="63">dnsserver<pos:position pos:line="117" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="74"/></expr_stmt>
<cpp:endif pos:line="118" pos:column="1">#<cpp:directive pos:line="118" pos:column="2">endif<pos:position pos:line="118" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">if<pos:position pos:line="119" pos:column="4"/></cpp:directive> <expr><name pos:line="119" pos:column="5">USE_UNLINKD<pos:position pos:line="119" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="121" pos:column="5">requirePathnameExists<pos:position pos:line="121" pos:column="26"/></name><argument_list pos:line="121" pos:column="26">(<argument><expr><literal type="string" pos:line="121" pos:column="27">"unlinkd_program"<pos:position pos:line="121" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="46">Config<pos:position pos:line="121" pos:column="52"/></name><operator pos:line="121" pos:column="52">.<pos:position pos:line="121" pos:column="53"/></operator><name pos:line="121" pos:column="53">Program<pos:position pos:line="121" pos:column="60"/></name><operator pos:line="121" pos:column="60">.<pos:position pos:line="121" pos:column="61"/></operator><name pos:line="121" pos:column="61">unlinkd<pos:position pos:line="121" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="122" pos:column="1">#<cpp:directive pos:line="122" pos:column="2">endif<pos:position pos:line="122" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">requirePathnameExists<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><literal type="string" pos:line="123" pos:column="27">"logfile_daemon"<pos:position pos:line="123" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="45">Log<pos:position pos:line="123" pos:column="48"/></name><operator pos:line="123" pos:column="48">::<pos:position pos:line="123" pos:column="50"/></operator><name pos:line="123" pos:column="50">TheConfig<pos:position pos:line="123" pos:column="59"/></name><operator pos:line="123" pos:column="59">.<pos:position pos:line="123" pos:column="60"/></operator><name pos:line="123" pos:column="60">logfile_daemon<pos:position pos:line="123" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="76"/></expr_stmt>
    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><name><name pos:line="124" pos:column="9">Config<pos:position pos:line="124" pos:column="15"/></name><operator pos:line="124" pos:column="15">.<pos:position pos:line="124" pos:column="16"/></operator><name pos:line="124" pos:column="16">Program<pos:position pos:line="124" pos:column="23"/></name><operator pos:line="124" pos:column="23">.<pos:position pos:line="124" pos:column="24"/></operator><name pos:line="124" pos:column="24">redirect<pos:position pos:line="124" pos:column="32"/></name></name></expr>)<pos:position pos:line="124" pos:column="33"/></condition><then pos:line="124" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="125" pos:column="9">requirePathnameExists<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><literal type="string" pos:line="125" pos:column="31">"redirect_program"<pos:position pos:line="125" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="51">Config<pos:position pos:line="125" pos:column="57"/></name><operator pos:line="125" pos:column="57">.<pos:position pos:line="125" pos:column="58"/></operator><name pos:line="125" pos:column="58">Program<pos:position pos:line="125" pos:column="65"/></name><operator pos:line="125" pos:column="65">.<pos:position pos:line="125" pos:column="66"/></operator><name pos:line="125" pos:column="66">redirect<pos:position pos:line="125" pos:column="74"/></name><operator pos:line="125" pos:column="74">-&gt;<pos:position pos:line="125" pos:column="79"/></operator><name pos:line="125" pos:column="76">key<pos:position pos:line="125" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="81"/></expr_stmt></block></then></if>

    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><name><name pos:line="127" pos:column="9">Config<pos:position pos:line="127" pos:column="15"/></name><operator pos:line="127" pos:column="15">.<pos:position pos:line="127" pos:column="16"/></operator><name pos:line="127" pos:column="16">Program<pos:position pos:line="127" pos:column="23"/></name><operator pos:line="127" pos:column="23">.<pos:position pos:line="127" pos:column="24"/></operator><name pos:line="127" pos:column="24">store_id<pos:position pos:line="127" pos:column="32"/></name></name></expr>)<pos:position pos:line="127" pos:column="33"/></condition><then pos:line="127" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="128" pos:column="9">requirePathnameExists<pos:position pos:line="128" pos:column="30"/></name><argument_list pos:line="128" pos:column="30">(<argument><expr><literal type="string" pos:line="128" pos:column="31">"store_id_program"<pos:position pos:line="128" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="51">Config<pos:position pos:line="128" pos:column="57"/></name><operator pos:line="128" pos:column="57">.<pos:position pos:line="128" pos:column="58"/></operator><name pos:line="128" pos:column="58">Program<pos:position pos:line="128" pos:column="65"/></name><operator pos:line="128" pos:column="65">.<pos:position pos:line="128" pos:column="66"/></operator><name pos:line="128" pos:column="66">store_id<pos:position pos:line="128" pos:column="74"/></name><operator pos:line="128" pos:column="74">-&gt;<pos:position pos:line="128" pos:column="79"/></operator><name pos:line="128" pos:column="76">key<pos:position pos:line="128" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="81"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="130" pos:column="5">requirePathnameExists<pos:position pos:line="130" pos:column="26"/></name><argument_list pos:line="130" pos:column="26">(<argument><expr><literal type="string" pos:line="130" pos:column="27">"Icon Directory"<pos:position pos:line="130" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="45">Config<pos:position pos:line="130" pos:column="51"/></name><operator pos:line="130" pos:column="51">.<pos:position pos:line="130" pos:column="52"/></operator><name pos:line="130" pos:column="52">icons<pos:position pos:line="130" pos:column="57"/></name><operator pos:line="130" pos:column="57">.<pos:position pos:line="130" pos:column="58"/></operator><name pos:line="130" pos:column="58">directory<pos:position pos:line="130" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="69"/></expr_stmt>

    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name><name pos:line="132" pos:column="9">Config<pos:position pos:line="132" pos:column="15"/></name><operator pos:line="132" pos:column="15">.<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="16">errorDirectory<pos:position pos:line="132" pos:column="30"/></name></name></expr>)<pos:position pos:line="132" pos:column="31"/></condition><then pos:line="132" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="9">requirePathnameExists<pos:position pos:line="133" pos:column="30"/></name><argument_list pos:line="133" pos:column="30">(<argument><expr><literal type="string" pos:line="133" pos:column="31">"Error Directory"<pos:position pos:line="133" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="50">Config<pos:position pos:line="133" pos:column="56"/></name><operator pos:line="133" pos:column="56">.<pos:position pos:line="133" pos:column="57"/></operator><name pos:line="133" pos:column="57">errorDirectory<pos:position pos:line="133" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="73"/></expr_stmt></block></then></if>

<cpp:if pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">if<pos:position pos:line="135" pos:column="4"/></cpp:directive> <expr><name pos:line="135" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="135" pos:column="24"/></name></expr></cpp:if>

    <block pos:line="137" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="138" pos:column="9">const<pos:position pos:line="138" pos:column="14"/></specifier> <name pos:line="138" pos:column="15">RefreshPattern<pos:position pos:line="138" pos:column="29"/></name> <modifier pos:line="138" pos:column="30">*<pos:position pos:line="138" pos:column="31"/></modifier></type><name pos:line="138" pos:column="31">R<pos:position pos:line="138" pos:column="32"/></name></decl>;<pos:position pos:line="138" pos:column="33"/></decl_stmt>

        <for pos:line="140" pos:column="9">for <control pos:line="140" pos:column="13">(<init><expr><name pos:line="140" pos:column="14">R<pos:position pos:line="140" pos:column="15"/></name> <operator pos:line="140" pos:column="16">=<pos:position pos:line="140" pos:column="17"/></operator> <name><name pos:line="140" pos:column="18">Config<pos:position pos:line="140" pos:column="24"/></name><operator pos:line="140" pos:column="24">.<pos:position pos:line="140" pos:column="25"/></operator><name pos:line="140" pos:column="25">Refresh<pos:position pos:line="140" pos:column="32"/></name></name></expr>;<pos:position pos:line="140" pos:column="33"/></init> <condition><expr><name pos:line="140" pos:column="34">R<pos:position pos:line="140" pos:column="35"/></name></expr>;<pos:position pos:line="140" pos:column="36"/></condition> <incr><expr><name pos:line="140" pos:column="37">R<pos:position pos:line="140" pos:column="38"/></name> <operator pos:line="140" pos:column="39">=<pos:position pos:line="140" pos:column="40"/></operator> <name><name pos:line="140" pos:column="41">R<pos:position pos:line="140" pos:column="42"/></name><operator pos:line="140" pos:column="42">-&gt;<pos:position pos:line="140" pos:column="47"/></operator><name pos:line="140" pos:column="44">next<pos:position pos:line="140" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="140" pos:column="49"/></control> <block pos:line="140" pos:column="50">{
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><operator pos:line="141" pos:column="17">!<pos:position pos:line="141" pos:column="18"/></operator><name><name pos:line="141" pos:column="18">R<pos:position pos:line="141" pos:column="19"/></name><operator pos:line="141" pos:column="19">-&gt;<pos:position pos:line="141" pos:column="24"/></operator><name pos:line="141" pos:column="21">flags<pos:position pos:line="141" pos:column="26"/></name><operator pos:line="141" pos:column="26">.<pos:position pos:line="141" pos:column="27"/></operator><name pos:line="141" pos:column="27">override_expire<pos:position pos:line="141" pos:column="42"/></name></name></expr>)<pos:position pos:line="141" pos:column="43"/></condition><then pos:line="141" pos:column="43">
                <block type="pseudo"><continue pos:line="142" pos:column="17">continue;<pos:position pos:line="142" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="144" pos:column="13">debugs<pos:position pos:line="144" pos:column="19"/></name><argument_list pos:line="144" pos:column="19">(<argument><expr><literal type="number" pos:line="144" pos:column="20">22<pos:position pos:line="144" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="144" pos:column="24">DBG_IMPORTANT<pos:position pos:line="144" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="39">"WARNING: use of 'override-expire' in 'refresh_pattern' violates HTTP"<pos:position pos:line="144" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="111"/></expr_stmt>

            <break pos:line="146" pos:column="13">break;<pos:position pos:line="146" pos:column="19"/></break>
        }<pos:position pos:line="147" pos:column="10"/></block></for>

        <for pos:line="149" pos:column="9">for <control pos:line="149" pos:column="13">(<init><expr><name pos:line="149" pos:column="14">R<pos:position pos:line="149" pos:column="15"/></name> <operator pos:line="149" pos:column="16">=<pos:position pos:line="149" pos:column="17"/></operator> <name><name pos:line="149" pos:column="18">Config<pos:position pos:line="149" pos:column="24"/></name><operator pos:line="149" pos:column="24">.<pos:position pos:line="149" pos:column="25"/></operator><name pos:line="149" pos:column="25">Refresh<pos:position pos:line="149" pos:column="32"/></name></name></expr>;<pos:position pos:line="149" pos:column="33"/></init> <condition><expr><name pos:line="149" pos:column="34">R<pos:position pos:line="149" pos:column="35"/></name></expr>;<pos:position pos:line="149" pos:column="36"/></condition> <incr><expr><name pos:line="149" pos:column="37">R<pos:position pos:line="149" pos:column="38"/></name> <operator pos:line="149" pos:column="39">=<pos:position pos:line="149" pos:column="40"/></operator> <name><name pos:line="149" pos:column="41">R<pos:position pos:line="149" pos:column="42"/></name><operator pos:line="149" pos:column="42">-&gt;<pos:position pos:line="149" pos:column="47"/></operator><name pos:line="149" pos:column="44">next<pos:position pos:line="149" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="149" pos:column="49"/></control> <block pos:line="149" pos:column="50">{
            <if pos:line="150" pos:column="13">if <condition pos:line="150" pos:column="16">(<expr><operator pos:line="150" pos:column="17">!<pos:position pos:line="150" pos:column="18"/></operator><name><name pos:line="150" pos:column="18">R<pos:position pos:line="150" pos:column="19"/></name><operator pos:line="150" pos:column="19">-&gt;<pos:position pos:line="150" pos:column="24"/></operator><name pos:line="150" pos:column="21">flags<pos:position pos:line="150" pos:column="26"/></name><operator pos:line="150" pos:column="26">.<pos:position pos:line="150" pos:column="27"/></operator><name pos:line="150" pos:column="27">override_lastmod<pos:position pos:line="150" pos:column="43"/></name></name></expr>)<pos:position pos:line="150" pos:column="44"/></condition><then pos:line="150" pos:column="44">
                <block type="pseudo"><continue pos:line="151" pos:column="17">continue;<pos:position pos:line="151" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="153" pos:column="13">debugs<pos:position pos:line="153" pos:column="19"/></name><argument_list pos:line="153" pos:column="19">(<argument><expr><literal type="number" pos:line="153" pos:column="20">22<pos:position pos:line="153" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="24">DBG_IMPORTANT<pos:position pos:line="153" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="39">"WARNING: use of 'override-lastmod' in 'refresh_pattern' violates HTTP"<pos:position pos:line="153" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="112"/></expr_stmt>

            <break pos:line="155" pos:column="13">break;<pos:position pos:line="155" pos:column="19"/></break>
        }<pos:position pos:line="156" pos:column="10"/></block></for>

        <for pos:line="158" pos:column="9">for <control pos:line="158" pos:column="13">(<init><expr><name pos:line="158" pos:column="14">R<pos:position pos:line="158" pos:column="15"/></name> <operator pos:line="158" pos:column="16">=<pos:position pos:line="158" pos:column="17"/></operator> <name><name pos:line="158" pos:column="18">Config<pos:position pos:line="158" pos:column="24"/></name><operator pos:line="158" pos:column="24">.<pos:position pos:line="158" pos:column="25"/></operator><name pos:line="158" pos:column="25">Refresh<pos:position pos:line="158" pos:column="32"/></name></name></expr>;<pos:position pos:line="158" pos:column="33"/></init> <condition><expr><name pos:line="158" pos:column="34">R<pos:position pos:line="158" pos:column="35"/></name></expr>;<pos:position pos:line="158" pos:column="36"/></condition> <incr><expr><name pos:line="158" pos:column="37">R<pos:position pos:line="158" pos:column="38"/></name> <operator pos:line="158" pos:column="39">=<pos:position pos:line="158" pos:column="40"/></operator> <name><name pos:line="158" pos:column="41">R<pos:position pos:line="158" pos:column="42"/></name><operator pos:line="158" pos:column="42">-&gt;<pos:position pos:line="158" pos:column="47"/></operator><name pos:line="158" pos:column="44">next<pos:position pos:line="158" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="158" pos:column="49"/></control> <block pos:line="158" pos:column="50">{
            <if pos:line="159" pos:column="13">if <condition pos:line="159" pos:column="16">(<expr><operator pos:line="159" pos:column="17">!<pos:position pos:line="159" pos:column="18"/></operator><name><name pos:line="159" pos:column="18">R<pos:position pos:line="159" pos:column="19"/></name><operator pos:line="159" pos:column="19">-&gt;<pos:position pos:line="159" pos:column="24"/></operator><name pos:line="159" pos:column="21">flags<pos:position pos:line="159" pos:column="26"/></name><operator pos:line="159" pos:column="26">.<pos:position pos:line="159" pos:column="27"/></operator><name pos:line="159" pos:column="27">reload_into_ims<pos:position pos:line="159" pos:column="42"/></name></name></expr>)<pos:position pos:line="159" pos:column="43"/></condition><then pos:line="159" pos:column="43">
                <block type="pseudo"><continue pos:line="160" pos:column="17">continue;<pos:position pos:line="160" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="162" pos:column="13">debugs<pos:position pos:line="162" pos:column="19"/></name><argument_list pos:line="162" pos:column="19">(<argument><expr><literal type="number" pos:line="162" pos:column="20">22<pos:position pos:line="162" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="162" pos:column="24">DBG_IMPORTANT<pos:position pos:line="162" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="39">"WARNING: use of 'reload-into-ims' in 'refresh_pattern' violates HTTP"<pos:position pos:line="162" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="111"/></expr_stmt>

            <break pos:line="164" pos:column="13">break;<pos:position pos:line="164" pos:column="19"/></break>
        }<pos:position pos:line="165" pos:column="10"/></block></for>

        <for pos:line="167" pos:column="9">for <control pos:line="167" pos:column="13">(<init><expr><name pos:line="167" pos:column="14">R<pos:position pos:line="167" pos:column="15"/></name> <operator pos:line="167" pos:column="16">=<pos:position pos:line="167" pos:column="17"/></operator> <name><name pos:line="167" pos:column="18">Config<pos:position pos:line="167" pos:column="24"/></name><operator pos:line="167" pos:column="24">.<pos:position pos:line="167" pos:column="25"/></operator><name pos:line="167" pos:column="25">Refresh<pos:position pos:line="167" pos:column="32"/></name></name></expr>;<pos:position pos:line="167" pos:column="33"/></init> <condition><expr><name pos:line="167" pos:column="34">R<pos:position pos:line="167" pos:column="35"/></name></expr>;<pos:position pos:line="167" pos:column="36"/></condition> <incr><expr><name pos:line="167" pos:column="37">R<pos:position pos:line="167" pos:column="38"/></name> <operator pos:line="167" pos:column="39">=<pos:position pos:line="167" pos:column="40"/></operator> <name><name pos:line="167" pos:column="41">R<pos:position pos:line="167" pos:column="42"/></name><operator pos:line="167" pos:column="42">-&gt;<pos:position pos:line="167" pos:column="47"/></operator><name pos:line="167" pos:column="44">next<pos:position pos:line="167" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="167" pos:column="49"/></control> <block pos:line="167" pos:column="50">{
            <if pos:line="168" pos:column="13">if <condition pos:line="168" pos:column="16">(<expr><operator pos:line="168" pos:column="17">!<pos:position pos:line="168" pos:column="18"/></operator><name><name pos:line="168" pos:column="18">R<pos:position pos:line="168" pos:column="19"/></name><operator pos:line="168" pos:column="19">-&gt;<pos:position pos:line="168" pos:column="24"/></operator><name pos:line="168" pos:column="21">flags<pos:position pos:line="168" pos:column="26"/></name><operator pos:line="168" pos:column="26">.<pos:position pos:line="168" pos:column="27"/></operator><name pos:line="168" pos:column="27">ignore_reload<pos:position pos:line="168" pos:column="40"/></name></name></expr>)<pos:position pos:line="168" pos:column="41"/></condition><then pos:line="168" pos:column="41">
                <block type="pseudo"><continue pos:line="169" pos:column="17">continue;<pos:position pos:line="169" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="171" pos:column="13">debugs<pos:position pos:line="171" pos:column="19"/></name><argument_list pos:line="171" pos:column="19">(<argument><expr><literal type="number" pos:line="171" pos:column="20">22<pos:position pos:line="171" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="171" pos:column="24">DBG_IMPORTANT<pos:position pos:line="171" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="39">"WARNING: use of 'ignore-reload' in 'refresh_pattern' violates HTTP"<pos:position pos:line="171" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="109"/></expr_stmt>

            <break pos:line="173" pos:column="13">break;<pos:position pos:line="173" pos:column="19"/></break>
        }<pos:position pos:line="174" pos:column="10"/></block></for>

        <for pos:line="176" pos:column="9">for <control pos:line="176" pos:column="13">(<init><expr><name pos:line="176" pos:column="14">R<pos:position pos:line="176" pos:column="15"/></name> <operator pos:line="176" pos:column="16">=<pos:position pos:line="176" pos:column="17"/></operator> <name><name pos:line="176" pos:column="18">Config<pos:position pos:line="176" pos:column="24"/></name><operator pos:line="176" pos:column="24">.<pos:position pos:line="176" pos:column="25"/></operator><name pos:line="176" pos:column="25">Refresh<pos:position pos:line="176" pos:column="32"/></name></name></expr>;<pos:position pos:line="176" pos:column="33"/></init> <condition><expr><name pos:line="176" pos:column="34">R<pos:position pos:line="176" pos:column="35"/></name></expr>;<pos:position pos:line="176" pos:column="36"/></condition> <incr><expr><name pos:line="176" pos:column="37">R<pos:position pos:line="176" pos:column="38"/></name> <operator pos:line="176" pos:column="39">=<pos:position pos:line="176" pos:column="40"/></operator> <name><name pos:line="176" pos:column="41">R<pos:position pos:line="176" pos:column="42"/></name><operator pos:line="176" pos:column="42">-&gt;<pos:position pos:line="176" pos:column="47"/></operator><name pos:line="176" pos:column="44">next<pos:position pos:line="176" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="176" pos:column="49"/></control> <block pos:line="176" pos:column="50">{
            <if pos:line="177" pos:column="13">if <condition pos:line="177" pos:column="16">(<expr><operator pos:line="177" pos:column="17">!<pos:position pos:line="177" pos:column="18"/></operator><name><name pos:line="177" pos:column="18">R<pos:position pos:line="177" pos:column="19"/></name><operator pos:line="177" pos:column="19">-&gt;<pos:position pos:line="177" pos:column="24"/></operator><name pos:line="177" pos:column="21">flags<pos:position pos:line="177" pos:column="26"/></name><operator pos:line="177" pos:column="26">.<pos:position pos:line="177" pos:column="27"/></operator><name pos:line="177" pos:column="27">ignore_no_store<pos:position pos:line="177" pos:column="42"/></name></name></expr>)<pos:position pos:line="177" pos:column="43"/></condition><then pos:line="177" pos:column="43">
                <block type="pseudo"><continue pos:line="178" pos:column="17">continue;<pos:position pos:line="178" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="180" pos:column="13">debugs<pos:position pos:line="180" pos:column="19"/></name><argument_list pos:line="180" pos:column="19">(<argument><expr><literal type="number" pos:line="180" pos:column="20">22<pos:position pos:line="180" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="180" pos:column="24">DBG_IMPORTANT<pos:position pos:line="180" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="39">"WARNING: use of 'ignore-no-store' in 'refresh_pattern' violates HTTP"<pos:position pos:line="180" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="111"/></expr_stmt>

            <break pos:line="182" pos:column="13">break;<pos:position pos:line="182" pos:column="19"/></break>
        }<pos:position pos:line="183" pos:column="10"/></block></for>

        <for pos:line="185" pos:column="9">for <control pos:line="185" pos:column="13">(<init><expr><name pos:line="185" pos:column="14">R<pos:position pos:line="185" pos:column="15"/></name> <operator pos:line="185" pos:column="16">=<pos:position pos:line="185" pos:column="17"/></operator> <name><name pos:line="185" pos:column="18">Config<pos:position pos:line="185" pos:column="24"/></name><operator pos:line="185" pos:column="24">.<pos:position pos:line="185" pos:column="25"/></operator><name pos:line="185" pos:column="25">Refresh<pos:position pos:line="185" pos:column="32"/></name></name></expr>;<pos:position pos:line="185" pos:column="33"/></init> <condition><expr><name pos:line="185" pos:column="34">R<pos:position pos:line="185" pos:column="35"/></name></expr>;<pos:position pos:line="185" pos:column="36"/></condition> <incr><expr><name pos:line="185" pos:column="37">R<pos:position pos:line="185" pos:column="38"/></name> <operator pos:line="185" pos:column="39">=<pos:position pos:line="185" pos:column="40"/></operator> <name><name pos:line="185" pos:column="41">R<pos:position pos:line="185" pos:column="42"/></name><operator pos:line="185" pos:column="42">-&gt;<pos:position pos:line="185" pos:column="47"/></operator><name pos:line="185" pos:column="44">next<pos:position pos:line="185" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="185" pos:column="49"/></control> <block pos:line="185" pos:column="50">{
            <if pos:line="186" pos:column="13">if <condition pos:line="186" pos:column="16">(<expr><operator pos:line="186" pos:column="17">!<pos:position pos:line="186" pos:column="18"/></operator><name><name pos:line="186" pos:column="18">R<pos:position pos:line="186" pos:column="19"/></name><operator pos:line="186" pos:column="19">-&gt;<pos:position pos:line="186" pos:column="24"/></operator><name pos:line="186" pos:column="21">flags<pos:position pos:line="186" pos:column="26"/></name><operator pos:line="186" pos:column="26">.<pos:position pos:line="186" pos:column="27"/></operator><name pos:line="186" pos:column="27">ignore_must_revalidate<pos:position pos:line="186" pos:column="49"/></name></name></expr>)<pos:position pos:line="186" pos:column="50"/></condition><then pos:line="186" pos:column="50">
                <block type="pseudo"><continue pos:line="187" pos:column="17">continue;<pos:position pos:line="187" pos:column="26"/></continue></block></then></if>
            <expr_stmt><expr><call><name pos:line="188" pos:column="13">debugs<pos:position pos:line="188" pos:column="19"/></name><argument_list pos:line="188" pos:column="19">(<argument><expr><literal type="number" pos:line="188" pos:column="20">22<pos:position pos:line="188" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="24">DBG_IMPORTANT<pos:position pos:line="188" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="39">"WARNING: use of 'ignore-must-revalidate' in 'refresh_pattern' violates HTTP"<pos:position pos:line="188" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="118"/></expr_stmt>
            <break pos:line="189" pos:column="13">break;<pos:position pos:line="189" pos:column="19"/></break>
        }<pos:position pos:line="190" pos:column="10"/></block></for>

        <for pos:line="192" pos:column="9">for <control pos:line="192" pos:column="13">(<init><expr><name pos:line="192" pos:column="14">R<pos:position pos:line="192" pos:column="15"/></name> <operator pos:line="192" pos:column="16">=<pos:position pos:line="192" pos:column="17"/></operator> <name><name pos:line="192" pos:column="18">Config<pos:position pos:line="192" pos:column="24"/></name><operator pos:line="192" pos:column="24">.<pos:position pos:line="192" pos:column="25"/></operator><name pos:line="192" pos:column="25">Refresh<pos:position pos:line="192" pos:column="32"/></name></name></expr>;<pos:position pos:line="192" pos:column="33"/></init> <condition><expr><name pos:line="192" pos:column="34">R<pos:position pos:line="192" pos:column="35"/></name></expr>;<pos:position pos:line="192" pos:column="36"/></condition> <incr><expr><name pos:line="192" pos:column="37">R<pos:position pos:line="192" pos:column="38"/></name> <operator pos:line="192" pos:column="39">=<pos:position pos:line="192" pos:column="40"/></operator> <name><name pos:line="192" pos:column="41">R<pos:position pos:line="192" pos:column="42"/></name><operator pos:line="192" pos:column="42">-&gt;<pos:position pos:line="192" pos:column="47"/></operator><name pos:line="192" pos:column="44">next<pos:position pos:line="192" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="192" pos:column="49"/></control> <block pos:line="192" pos:column="50">{
            <if pos:line="193" pos:column="13">if <condition pos:line="193" pos:column="16">(<expr><operator pos:line="193" pos:column="17">!<pos:position pos:line="193" pos:column="18"/></operator><name><name pos:line="193" pos:column="18">R<pos:position pos:line="193" pos:column="19"/></name><operator pos:line="193" pos:column="19">-&gt;<pos:position pos:line="193" pos:column="24"/></operator><name pos:line="193" pos:column="21">flags<pos:position pos:line="193" pos:column="26"/></name><operator pos:line="193" pos:column="26">.<pos:position pos:line="193" pos:column="27"/></operator><name pos:line="193" pos:column="27">ignore_private<pos:position pos:line="193" pos:column="41"/></name></name></expr>)<pos:position pos:line="193" pos:column="42"/></condition><then pos:line="193" pos:column="42">
                <block type="pseudo"><continue pos:line="194" pos:column="17">continue;<pos:position pos:line="194" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="196" pos:column="13">debugs<pos:position pos:line="196" pos:column="19"/></name><argument_list pos:line="196" pos:column="19">(<argument><expr><literal type="number" pos:line="196" pos:column="20">22<pos:position pos:line="196" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="24">DBG_IMPORTANT<pos:position pos:line="196" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="39">"WARNING: use of 'ignore-private' in 'refresh_pattern' violates HTTP"<pos:position pos:line="196" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="110"/></expr_stmt>

            <break pos:line="198" pos:column="13">break;<pos:position pos:line="198" pos:column="19"/></break>
        }<pos:position pos:line="199" pos:column="10"/></block></for>

        <for pos:line="201" pos:column="9">for <control pos:line="201" pos:column="13">(<init><expr><name pos:line="201" pos:column="14">R<pos:position pos:line="201" pos:column="15"/></name> <operator pos:line="201" pos:column="16">=<pos:position pos:line="201" pos:column="17"/></operator> <name><name pos:line="201" pos:column="18">Config<pos:position pos:line="201" pos:column="24"/></name><operator pos:line="201" pos:column="24">.<pos:position pos:line="201" pos:column="25"/></operator><name pos:line="201" pos:column="25">Refresh<pos:position pos:line="201" pos:column="32"/></name></name></expr>;<pos:position pos:line="201" pos:column="33"/></init> <condition><expr><name pos:line="201" pos:column="34">R<pos:position pos:line="201" pos:column="35"/></name></expr>;<pos:position pos:line="201" pos:column="36"/></condition> <incr><expr><name pos:line="201" pos:column="37">R<pos:position pos:line="201" pos:column="38"/></name> <operator pos:line="201" pos:column="39">=<pos:position pos:line="201" pos:column="40"/></operator> <name><name pos:line="201" pos:column="41">R<pos:position pos:line="201" pos:column="42"/></name><operator pos:line="201" pos:column="42">-&gt;<pos:position pos:line="201" pos:column="47"/></operator><name pos:line="201" pos:column="44">next<pos:position pos:line="201" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="201" pos:column="49"/></control> <block pos:line="201" pos:column="50">{
            <if pos:line="202" pos:column="13">if <condition pos:line="202" pos:column="16">(<expr><operator pos:line="202" pos:column="17">!<pos:position pos:line="202" pos:column="18"/></operator><name><name pos:line="202" pos:column="18">R<pos:position pos:line="202" pos:column="19"/></name><operator pos:line="202" pos:column="19">-&gt;<pos:position pos:line="202" pos:column="24"/></operator><name pos:line="202" pos:column="21">flags<pos:position pos:line="202" pos:column="26"/></name><operator pos:line="202" pos:column="26">.<pos:position pos:line="202" pos:column="27"/></operator><name pos:line="202" pos:column="27">ignore_auth<pos:position pos:line="202" pos:column="38"/></name></name></expr>)<pos:position pos:line="202" pos:column="39"/></condition><then pos:line="202" pos:column="39">
                <block type="pseudo"><continue pos:line="203" pos:column="17">continue;<pos:position pos:line="203" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="205" pos:column="13">debugs<pos:position pos:line="205" pos:column="19"/></name><argument_list pos:line="205" pos:column="19">(<argument><expr><literal type="number" pos:line="205" pos:column="20">22<pos:position pos:line="205" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="24">DBG_IMPORTANT<pos:position pos:line="205" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="39">"WARNING: use of 'ignore-auth' in 'refresh_pattern' violates HTTP"<pos:position pos:line="205" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="107"/></expr_stmt>

            <break pos:line="207" pos:column="13">break;<pos:position pos:line="207" pos:column="19"/></break>
        }<pos:position pos:line="208" pos:column="10"/></block></for>

    }<pos:position pos:line="210" pos:column="6"/></block>
<cpp:endif pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">endif<pos:position pos:line="211" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="212" pos:column="1">#<cpp:directive pos:line="212" pos:column="2">if<pos:position pos:line="212" pos:column="4"/></cpp:directive> <expr><operator pos:line="212" pos:column="5">!<pos:position pos:line="212" pos:column="6"/></operator><name pos:line="212" pos:column="6">USE_HTTP_VIOLATIONS<pos:position pos:line="212" pos:column="25"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="213" pos:column="5">Config<pos:position pos:line="213" pos:column="11"/></name><operator pos:line="213" pos:column="11">.<pos:position pos:line="213" pos:column="12"/></operator><name pos:line="213" pos:column="12">onoff<pos:position pos:line="213" pos:column="17"/></name><operator pos:line="213" pos:column="17">.<pos:position pos:line="213" pos:column="18"/></operator><name pos:line="213" pos:column="18">via<pos:position pos:line="213" pos:column="21"/></name></name> <operator pos:line="213" pos:column="22">=<pos:position pos:line="213" pos:column="23"/></operator> <literal type="number" pos:line="213" pos:column="24">1<pos:position pos:line="213" pos:column="25"/></literal></expr>;<pos:position pos:line="213" pos:column="26"/></expr_stmt>
<cpp:else pos:line="214" pos:column="1">#<cpp:directive pos:line="214" pos:column="2">else<pos:position pos:line="214" pos:column="6"/></cpp:directive></cpp:else>

    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><operator pos:line="216" pos:column="9">!<pos:position pos:line="216" pos:column="10"/></operator><name><name pos:line="216" pos:column="10">Config<pos:position pos:line="216" pos:column="16"/></name><operator pos:line="216" pos:column="16">.<pos:position pos:line="216" pos:column="17"/></operator><name pos:line="216" pos:column="17">onoff<pos:position pos:line="216" pos:column="22"/></name><operator pos:line="216" pos:column="22">.<pos:position pos:line="216" pos:column="23"/></operator><name pos:line="216" pos:column="23">via<pos:position pos:line="216" pos:column="26"/></name></name></expr>)<pos:position pos:line="216" pos:column="27"/></condition><then pos:line="216" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="217" pos:column="9">debugs<pos:position pos:line="217" pos:column="15"/></name><argument_list pos:line="217" pos:column="15">(<argument><expr><literal type="number" pos:line="217" pos:column="16">22<pos:position pos:line="217" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="20">DBG_IMPORTANT<pos:position pos:line="217" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="35">"WARNING: HTTP requires the use of Via"<pos:position pos:line="217" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="76"/></expr_stmt></block></then></if>

<cpp:endif pos:line="219" pos:column="1">#<cpp:directive pos:line="219" pos:column="2">endif<pos:position pos:line="219" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="221" pos:column="5">// we enable runtime PURGE checks if there is at least one PURGE method ACL</comment>
    <comment type="line" pos:line="222" pos:column="5">// TODO: replace with a dedicated "purge" ACL option?</comment>
    <expr_stmt><expr><name><name pos:line="223" pos:column="5">Config2<pos:position pos:line="223" pos:column="12"/></name><operator pos:line="223" pos:column="12">.<pos:position pos:line="223" pos:column="13"/></operator><name pos:line="223" pos:column="13">onoff<pos:position pos:line="223" pos:column="18"/></name><operator pos:line="223" pos:column="18">.<pos:position pos:line="223" pos:column="19"/></operator><name pos:line="223" pos:column="19">enable_purge<pos:position pos:line="223" pos:column="31"/></name></name> <operator pos:line="223" pos:column="32">=<pos:position pos:line="223" pos:column="33"/></operator> <operator pos:line="223" pos:column="34">(<pos:position pos:line="223" pos:column="35"/></operator><name><name pos:line="223" pos:column="35">ACLMethodData<pos:position pos:line="223" pos:column="48"/></name><operator pos:line="223" pos:column="48">::<pos:position pos:line="223" pos:column="50"/></operator><name pos:line="223" pos:column="50">ThePurgeCount<pos:position pos:line="223" pos:column="63"/></name></name> <operator pos:line="223" pos:column="64">&gt;<pos:position pos:line="223" pos:column="68"/></operator> <literal type="number" pos:line="223" pos:column="66">0<pos:position pos:line="223" pos:column="67"/></literal><operator pos:line="223" pos:column="67">)<pos:position pos:line="223" pos:column="68"/></operator></expr>;<pos:position pos:line="223" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="225" pos:column="5">Config2<pos:position pos:line="225" pos:column="12"/></name><operator pos:line="225" pos:column="12">.<pos:position pos:line="225" pos:column="13"/></operator><name pos:line="225" pos:column="13">onoff<pos:position pos:line="225" pos:column="18"/></name><operator pos:line="225" pos:column="18">.<pos:position pos:line="225" pos:column="19"/></operator><name pos:line="225" pos:column="19">mangle_request_headers<pos:position pos:line="225" pos:column="41"/></name></name> <operator pos:line="225" pos:column="42">=<pos:position pos:line="225" pos:column="43"/></operator> <operator pos:line="225" pos:column="44">(<pos:position pos:line="225" pos:column="45"/></operator><name><name pos:line="225" pos:column="45">Config<pos:position pos:line="225" pos:column="51"/></name><operator pos:line="225" pos:column="51">.<pos:position pos:line="225" pos:column="52"/></operator><name pos:line="225" pos:column="52">request_header_access<pos:position pos:line="225" pos:column="73"/></name></name> <operator pos:line="225" pos:column="74">!=<pos:position pos:line="225" pos:column="76"/></operator> <name pos:line="225" pos:column="77">NULL<pos:position pos:line="225" pos:column="81"/></name><operator pos:line="225" pos:column="81">)<pos:position pos:line="225" pos:column="82"/></operator></expr>;<pos:position pos:line="225" pos:column="83"/></expr_stmt>

    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><call><name pos:line="227" pos:column="9">geteuid<pos:position pos:line="227" pos:column="16"/></name><argument_list pos:line="227" pos:column="16">()<pos:position pos:line="227" pos:column="18"/></argument_list></call> <operator pos:line="227" pos:column="19">==<pos:position pos:line="227" pos:column="21"/></operator> <literal type="number" pos:line="227" pos:column="22">0<pos:position pos:line="227" pos:column="23"/></literal></expr>)<pos:position pos:line="227" pos:column="24"/></condition><then pos:line="227" pos:column="24"> <block pos:line="227" pos:column="25">{
        <if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><name pos:line="228" pos:column="13">NULL<pos:position pos:line="228" pos:column="17"/></name> <operator pos:line="228" pos:column="18">!=<pos:position pos:line="228" pos:column="20"/></operator> <name><name pos:line="228" pos:column="21">Config<pos:position pos:line="228" pos:column="27"/></name><operator pos:line="228" pos:column="27">.<pos:position pos:line="228" pos:column="28"/></operator><name pos:line="228" pos:column="28">effectiveUser<pos:position pos:line="228" pos:column="41"/></name></name></expr>)<pos:position pos:line="228" pos:column="42"/></condition><then pos:line="228" pos:column="42"> <block pos:line="228" pos:column="43">{

            <decl_stmt><decl><type><name><name pos:line="230" pos:column="13">struct<pos:position pos:line="230" pos:column="19"/></name> <name pos:line="230" pos:column="20">passwd<pos:position pos:line="230" pos:column="26"/></name></name> <modifier pos:line="230" pos:column="27">*<pos:position pos:line="230" pos:column="28"/></modifier></type><name pos:line="230" pos:column="28">pwd<pos:position pos:line="230" pos:column="31"/></name> <init pos:line="230" pos:column="32">= <expr><call><name pos:line="230" pos:column="34">getpwnam<pos:position pos:line="230" pos:column="42"/></name><argument_list pos:line="230" pos:column="42">(<argument><expr><name><name pos:line="230" pos:column="43">Config<pos:position pos:line="230" pos:column="49"/></name><operator pos:line="230" pos:column="49">.<pos:position pos:line="230" pos:column="50"/></operator><name pos:line="230" pos:column="50">effectiveUser<pos:position pos:line="230" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="230" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="230" pos:column="65"/></decl_stmt>

            <if pos:line="232" pos:column="13">if <condition pos:line="232" pos:column="16">(<expr><name pos:line="232" pos:column="17">NULL<pos:position pos:line="232" pos:column="21"/></name> <operator pos:line="232" pos:column="22">==<pos:position pos:line="232" pos:column="24"/></operator> <name pos:line="232" pos:column="25">pwd<pos:position pos:line="232" pos:column="28"/></name></expr>)<pos:position pos:line="232" pos:column="29"/></condition><then pos:line="232" pos:column="29"> <block pos:line="232" pos:column="30">{
                <comment type="block" pos:line="233" pos:column="17">/*
                 * Andres Kroonmaa &lt;andre@online.ee&gt;:
                 * Some getpwnam() implementations (Solaris?) require
                 * an available FD &lt; 256 for opening a FILE* to the
                 * passwd file.
                 * DW:
                 * This should be safe at startup, but might still fail
                 * during reconfigure.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="242" pos:column="17">fatalf<pos:position pos:line="242" pos:column="23"/></name><argument_list pos:line="242" pos:column="23">(<argument><expr><literal type="string" pos:line="242" pos:column="24">"getpwnam failed to find userid for effective user '%s'"<pos:position pos:line="242" pos:column="80"/></literal></expr></argument>,
                       <argument><expr><name><name pos:line="243" pos:column="24">Config<pos:position pos:line="243" pos:column="30"/></name><operator pos:line="243" pos:column="30">.<pos:position pos:line="243" pos:column="31"/></operator><name pos:line="243" pos:column="31">effectiveUser<pos:position pos:line="243" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="243" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="46"/></expr_stmt>
                <return pos:line="244" pos:column="17">return;<pos:position pos:line="244" pos:column="24"/></return>
            }<pos:position pos:line="245" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="247" pos:column="13">Config2<pos:position pos:line="247" pos:column="20"/></name><operator pos:line="247" pos:column="20">.<pos:position pos:line="247" pos:column="21"/></operator><name pos:line="247" pos:column="21">effectiveUserID<pos:position pos:line="247" pos:column="36"/></name></name> <operator pos:line="247" pos:column="37">=<pos:position pos:line="247" pos:column="38"/></operator> <name><name pos:line="247" pos:column="39">pwd<pos:position pos:line="247" pos:column="42"/></name><operator pos:line="247" pos:column="42">-&gt;<pos:position pos:line="247" pos:column="47"/></operator><name pos:line="247" pos:column="44">pw_uid<pos:position pos:line="247" pos:column="50"/></name></name></expr>;<pos:position pos:line="247" pos:column="51"/></expr_stmt>

            <expr_stmt><expr><name><name pos:line="249" pos:column="13">Config2<pos:position pos:line="249" pos:column="20"/></name><operator pos:line="249" pos:column="20">.<pos:position pos:line="249" pos:column="21"/></operator><name pos:line="249" pos:column="21">effectiveGroupID<pos:position pos:line="249" pos:column="37"/></name></name> <operator pos:line="249" pos:column="38">=<pos:position pos:line="249" pos:column="39"/></operator> <name><name pos:line="249" pos:column="40">pwd<pos:position pos:line="249" pos:column="43"/></name><operator pos:line="249" pos:column="43">-&gt;<pos:position pos:line="249" pos:column="48"/></operator><name pos:line="249" pos:column="45">pw_gid<pos:position pos:line="249" pos:column="51"/></name></name></expr>;<pos:position pos:line="249" pos:column="52"/></expr_stmt>

<cpp:if pos:line="251" pos:column="1">#<cpp:directive pos:line="251" pos:column="2">if<pos:position pos:line="251" pos:column="4"/></cpp:directive> <expr><name pos:line="251" pos:column="5">HAVE_PUTENV<pos:position pos:line="251" pos:column="16"/></name></expr></cpp:if>
            <if pos:line="252" pos:column="13">if <condition pos:line="252" pos:column="16">(<expr><name><name pos:line="252" pos:column="17">pwd<pos:position pos:line="252" pos:column="20"/></name><operator pos:line="252" pos:column="20">-&gt;<pos:position pos:line="252" pos:column="25"/></operator><name pos:line="252" pos:column="22">pw_dir<pos:position pos:line="252" pos:column="28"/></name></name> <operator pos:line="252" pos:column="29">&amp;&amp;<pos:position pos:line="252" pos:column="39"/></operator> <operator pos:line="252" pos:column="32">*<pos:position pos:line="252" pos:column="33"/></operator><name><name pos:line="252" pos:column="33">pwd<pos:position pos:line="252" pos:column="36"/></name><operator pos:line="252" pos:column="36">-&gt;<pos:position pos:line="252" pos:column="41"/></operator><name pos:line="252" pos:column="38">pw_dir<pos:position pos:line="252" pos:column="44"/></name></name></expr>)<pos:position pos:line="252" pos:column="45"/></condition><then pos:line="252" pos:column="45"> <block pos:line="252" pos:column="46">{
                <comment type="line" pos:line="253" pos:column="17">// putenv() leaks by design; avoid leaks when nothing changes</comment>
                <decl_stmt><decl><specifier pos:line="254" pos:column="17">static<pos:position pos:line="254" pos:column="23"/></specifier> <type><name pos:line="254" pos:column="24">String<pos:position pos:line="254" pos:column="30"/></name></type> <name pos:line="254" pos:column="31">lastDir<pos:position pos:line="254" pos:column="38"/></name></decl>;<pos:position pos:line="254" pos:column="39"/></decl_stmt>
                <if pos:line="255" pos:column="17">if <condition pos:line="255" pos:column="20">(<expr><operator pos:line="255" pos:column="21">!<pos:position pos:line="255" pos:column="22"/></operator><call><name><name pos:line="255" pos:column="22">lastDir<pos:position pos:line="255" pos:column="29"/></name><operator pos:line="255" pos:column="29">.<pos:position pos:line="255" pos:column="30"/></operator><name pos:line="255" pos:column="30">size<pos:position pos:line="255" pos:column="34"/></name></name><argument_list pos:line="255" pos:column="34">()<pos:position pos:line="255" pos:column="36"/></argument_list></call> <operator pos:line="255" pos:column="37">||<pos:position pos:line="255" pos:column="39"/></operator> <name pos:line="255" pos:column="40">lastDir<pos:position pos:line="255" pos:column="47"/></name> <operator pos:line="255" pos:column="48">!=<pos:position pos:line="255" pos:column="50"/></operator> <name><name pos:line="255" pos:column="51">pwd<pos:position pos:line="255" pos:column="54"/></name><operator pos:line="255" pos:column="54">-&gt;<pos:position pos:line="255" pos:column="59"/></operator><name pos:line="255" pos:column="56">pw_dir<pos:position pos:line="255" pos:column="62"/></name></name></expr>)<pos:position pos:line="255" pos:column="63"/></condition><then pos:line="255" pos:column="63"> <block pos:line="255" pos:column="64">{
                    <expr_stmt><expr><name pos:line="256" pos:column="21">lastDir<pos:position pos:line="256" pos:column="28"/></name> <operator pos:line="256" pos:column="29">=<pos:position pos:line="256" pos:column="30"/></operator> <name><name pos:line="256" pos:column="31">pwd<pos:position pos:line="256" pos:column="34"/></name><operator pos:line="256" pos:column="34">-&gt;<pos:position pos:line="256" pos:column="39"/></operator><name pos:line="256" pos:column="36">pw_dir<pos:position pos:line="256" pos:column="42"/></name></name></expr>;<pos:position pos:line="256" pos:column="43"/></expr_stmt>
                    <decl_stmt><decl><type><name pos:line="257" pos:column="21">int<pos:position pos:line="257" pos:column="24"/></name></type> <name pos:line="257" pos:column="25">len<pos:position pos:line="257" pos:column="28"/></name> <init pos:line="257" pos:column="29">= <expr><call><name pos:line="257" pos:column="31">strlen<pos:position pos:line="257" pos:column="37"/></name><argument_list pos:line="257" pos:column="37">(<argument><expr><name><name pos:line="257" pos:column="38">pwd<pos:position pos:line="257" pos:column="41"/></name><operator pos:line="257" pos:column="41">-&gt;<pos:position pos:line="257" pos:column="46"/></operator><name pos:line="257" pos:column="43">pw_dir<pos:position pos:line="257" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="257" pos:column="50"/></argument_list></call> <operator pos:line="257" pos:column="51">+<pos:position pos:line="257" pos:column="52"/></operator> <literal type="number" pos:line="257" pos:column="53">6<pos:position pos:line="257" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="257" pos:column="55"/></decl_stmt>
                    <decl_stmt><decl><type><name pos:line="258" pos:column="21">char<pos:position pos:line="258" pos:column="25"/></name> <modifier pos:line="258" pos:column="26">*<pos:position pos:line="258" pos:column="27"/></modifier></type><name pos:line="258" pos:column="27">env_str<pos:position pos:line="258" pos:column="34"/></name> <init pos:line="258" pos:column="35">= <expr><operator pos:line="258" pos:column="37">(<pos:position pos:line="258" pos:column="38"/></operator><name pos:line="258" pos:column="38">char<pos:position pos:line="258" pos:column="42"/></name> <operator pos:line="258" pos:column="43">*<pos:position pos:line="258" pos:column="44"/></operator><operator pos:line="258" pos:column="44">)<pos:position pos:line="258" pos:column="45"/></operator><call><name pos:line="258" pos:column="45">xcalloc<pos:position pos:line="258" pos:column="52"/></name><argument_list pos:line="258" pos:column="52">(<argument><expr><name pos:line="258" pos:column="53">len<pos:position pos:line="258" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="258" pos:column="58">1<pos:position pos:line="258" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="258" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="258" pos:column="61"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="259" pos:column="21">snprintf<pos:position pos:line="259" pos:column="29"/></name><argument_list pos:line="259" pos:column="29">(<argument><expr><name pos:line="259" pos:column="30">env_str<pos:position pos:line="259" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="39">len<pos:position pos:line="259" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="44">"HOME=%s"<pos:position pos:line="259" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="259" pos:column="55">pwd<pos:position pos:line="259" pos:column="58"/></name><operator pos:line="259" pos:column="58">-&gt;<pos:position pos:line="259" pos:column="63"/></operator><name pos:line="259" pos:column="60">pw_dir<pos:position pos:line="259" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="259" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="260" pos:column="21">putenv<pos:position pos:line="260" pos:column="27"/></name><argument_list pos:line="260" pos:column="27">(<argument><expr><name pos:line="260" pos:column="28">env_str<pos:position pos:line="260" pos:column="35"/></name></expr></argument>)<pos:position pos:line="260" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="37"/></expr_stmt>
                }<pos:position pos:line="261" pos:column="18"/></block></then></if>
            }<pos:position pos:line="262" pos:column="14"/></block></then></if>
<cpp:endif pos:line="263" pos:column="1">#<cpp:directive pos:line="263" pos:column="2">endif<pos:position pos:line="263" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="264" pos:column="10"/></block></then></if>
    }<pos:position pos:line="265" pos:column="6"/></block></then> <else pos:line="265" pos:column="7">else <block pos:line="265" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="266" pos:column="9">Config2<pos:position pos:line="266" pos:column="16"/></name><operator pos:line="266" pos:column="16">.<pos:position pos:line="266" pos:column="17"/></operator><name pos:line="266" pos:column="17">effectiveUserID<pos:position pos:line="266" pos:column="32"/></name></name> <operator pos:line="266" pos:column="33">=<pos:position pos:line="266" pos:column="34"/></operator> <call><name pos:line="266" pos:column="35">geteuid<pos:position pos:line="266" pos:column="42"/></name><argument_list pos:line="266" pos:column="42">()<pos:position pos:line="266" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="267" pos:column="9">Config2<pos:position pos:line="267" pos:column="16"/></name><operator pos:line="267" pos:column="16">.<pos:position pos:line="267" pos:column="17"/></operator><name pos:line="267" pos:column="17">effectiveGroupID<pos:position pos:line="267" pos:column="33"/></name></name> <operator pos:line="267" pos:column="34">=<pos:position pos:line="267" pos:column="35"/></operator> <call><name pos:line="267" pos:column="36">getegid<pos:position pos:line="267" pos:column="43"/></name><argument_list pos:line="267" pos:column="43">()<pos:position pos:line="267" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="268" pos:column="6"/></block></else></if>

    <if pos:line="270" pos:column="5">if <condition pos:line="270" pos:column="8">(<expr><name pos:line="270" pos:column="9">NULL<pos:position pos:line="270" pos:column="13"/></name> <operator pos:line="270" pos:column="14">!=<pos:position pos:line="270" pos:column="16"/></operator> <name><name pos:line="270" pos:column="17">Config<pos:position pos:line="270" pos:column="23"/></name><operator pos:line="270" pos:column="23">.<pos:position pos:line="270" pos:column="24"/></operator><name pos:line="270" pos:column="24">effectiveGroup<pos:position pos:line="270" pos:column="38"/></name></name></expr>)<pos:position pos:line="270" pos:column="39"/></condition><then pos:line="270" pos:column="39"> <block pos:line="270" pos:column="40">{

        <decl_stmt><decl><type><name><name pos:line="272" pos:column="9">struct<pos:position pos:line="272" pos:column="15"/></name> <name pos:line="272" pos:column="16">group<pos:position pos:line="272" pos:column="21"/></name></name> <modifier pos:line="272" pos:column="22">*<pos:position pos:line="272" pos:column="23"/></modifier></type><name pos:line="272" pos:column="23">grp<pos:position pos:line="272" pos:column="26"/></name> <init pos:line="272" pos:column="27">= <expr><call><name pos:line="272" pos:column="29">getgrnam<pos:position pos:line="272" pos:column="37"/></name><argument_list pos:line="272" pos:column="37">(<argument><expr><name><name pos:line="272" pos:column="38">Config<pos:position pos:line="272" pos:column="44"/></name><operator pos:line="272" pos:column="44">.<pos:position pos:line="272" pos:column="45"/></operator><name pos:line="272" pos:column="45">effectiveGroup<pos:position pos:line="272" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="272" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="272" pos:column="61"/></decl_stmt>

        <if pos:line="274" pos:column="9">if <condition pos:line="274" pos:column="12">(<expr><name pos:line="274" pos:column="13">NULL<pos:position pos:line="274" pos:column="17"/></name> <operator pos:line="274" pos:column="18">==<pos:position pos:line="274" pos:column="20"/></operator> <name pos:line="274" pos:column="21">grp<pos:position pos:line="274" pos:column="24"/></name></expr>)<pos:position pos:line="274" pos:column="25"/></condition><then pos:line="274" pos:column="25"> <block pos:line="274" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="275" pos:column="13">fatalf<pos:position pos:line="275" pos:column="19"/></name><argument_list pos:line="275" pos:column="19">(<argument><expr><literal type="string" pos:line="275" pos:column="20">"getgrnam failed to find groupid for effective group '%s'"<pos:position pos:line="275" pos:column="78"/></literal></expr></argument>,
                   <argument><expr><name><name pos:line="276" pos:column="20">Config<pos:position pos:line="276" pos:column="26"/></name><operator pos:line="276" pos:column="26">.<pos:position pos:line="276" pos:column="27"/></operator><name pos:line="276" pos:column="27">effectiveGroup<pos:position pos:line="276" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="276" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="43"/></expr_stmt>
            <return pos:line="277" pos:column="13">return;<pos:position pos:line="277" pos:column="20"/></return>
        }<pos:position pos:line="278" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="280" pos:column="9">Config2<pos:position pos:line="280" pos:column="16"/></name><operator pos:line="280" pos:column="16">.<pos:position pos:line="280" pos:column="17"/></operator><name pos:line="280" pos:column="17">effectiveGroupID<pos:position pos:line="280" pos:column="33"/></name></name> <operator pos:line="280" pos:column="34">=<pos:position pos:line="280" pos:column="35"/></operator> <name><name pos:line="280" pos:column="36">grp<pos:position pos:line="280" pos:column="39"/></name><operator pos:line="280" pos:column="39">-&gt;<pos:position pos:line="280" pos:column="44"/></operator><name pos:line="280" pos:column="41">gr_gid<pos:position pos:line="280" pos:column="47"/></name></name></expr>;<pos:position pos:line="280" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="281" pos:column="6"/></block></then></if>

<cpp:if pos:line="283" pos:column="1">#<cpp:directive pos:line="283" pos:column="2">if<pos:position pos:line="283" pos:column="4"/></cpp:directive> <expr><name pos:line="283" pos:column="5">USE_SSL<pos:position pos:line="283" pos:column="12"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="285" pos:column="5">debugs<pos:position pos:line="285" pos:column="11"/></name><argument_list pos:line="285" pos:column="11">(<argument><expr><literal type="number" pos:line="285" pos:column="12">3<pos:position pos:line="285" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="285" pos:column="15">DBG_IMPORTANT<pos:position pos:line="285" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="285" pos:column="30">"Initializing https proxy context"<pos:position pos:line="285" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="287" pos:column="5">Config<pos:position pos:line="287" pos:column="11"/></name><operator pos:line="287" pos:column="11">.<pos:position pos:line="287" pos:column="12"/></operator><name pos:line="287" pos:column="12">ssl_client<pos:position pos:line="287" pos:column="22"/></name><operator pos:line="287" pos:column="22">.<pos:position pos:line="287" pos:column="23"/></operator><name pos:line="287" pos:column="23">sslContext<pos:position pos:line="287" pos:column="33"/></name></name> <operator pos:line="287" pos:column="34">=<pos:position pos:line="287" pos:column="35"/></operator> <call><name pos:line="287" pos:column="36">sslCreateClientContext<pos:position pos:line="287" pos:column="58"/></name><argument_list pos:line="287" pos:column="58">(<argument><expr><name><name pos:line="287" pos:column="59">Config<pos:position pos:line="287" pos:column="65"/></name><operator pos:line="287" pos:column="65">.<pos:position pos:line="287" pos:column="66"/></operator><name pos:line="287" pos:column="66">ssl_client<pos:position pos:line="287" pos:column="76"/></name><operator pos:line="287" pos:column="76">.<pos:position pos:line="287" pos:column="77"/></operator><name pos:line="287" pos:column="77">cert<pos:position pos:line="287" pos:column="81"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="83">Config<pos:position pos:line="287" pos:column="89"/></name><operator pos:line="287" pos:column="89">.<pos:position pos:line="287" pos:column="90"/></operator><name pos:line="287" pos:column="90">ssl_client<pos:position pos:line="287" pos:column="100"/></name><operator pos:line="287" pos:column="100">.<pos:position pos:line="287" pos:column="101"/></operator><name pos:line="287" pos:column="101">key<pos:position pos:line="287" pos:column="104"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="106">Config<pos:position pos:line="287" pos:column="112"/></name><operator pos:line="287" pos:column="112">.<pos:position pos:line="287" pos:column="113"/></operator><name pos:line="287" pos:column="113">ssl_client<pos:position pos:line="287" pos:column="123"/></name><operator pos:line="287" pos:column="123">.<pos:position pos:line="287" pos:column="124"/></operator><name pos:line="287" pos:column="124">version<pos:position pos:line="287" pos:column="131"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="133">Config<pos:position pos:line="287" pos:column="139"/></name><operator pos:line="287" pos:column="139">.<pos:position pos:line="287" pos:column="140"/></operator><name pos:line="287" pos:column="140">ssl_client<pos:position pos:line="287" pos:column="150"/></name><operator pos:line="287" pos:column="150">.<pos:position pos:line="287" pos:column="151"/></operator><name pos:line="287" pos:column="151">cipher<pos:position pos:line="287" pos:column="157"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="159">Config<pos:position pos:line="287" pos:column="165"/></name><operator pos:line="287" pos:column="165">.<pos:position pos:line="287" pos:column="166"/></operator><name pos:line="287" pos:column="166">ssl_client<pos:position pos:line="287" pos:column="176"/></name><operator pos:line="287" pos:column="176">.<pos:position pos:line="287" pos:column="177"/></operator><name pos:line="287" pos:column="177">options<pos:position pos:line="287" pos:column="184"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="186">Config<pos:position pos:line="287" pos:column="192"/></name><operator pos:line="287" pos:column="192">.<pos:position pos:line="287" pos:column="193"/></operator><name pos:line="287" pos:column="193">ssl_client<pos:position pos:line="287" pos:column="203"/></name><operator pos:line="287" pos:column="203">.<pos:position pos:line="287" pos:column="204"/></operator><name pos:line="287" pos:column="204">flags<pos:position pos:line="287" pos:column="209"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="211">Config<pos:position pos:line="287" pos:column="217"/></name><operator pos:line="287" pos:column="217">.<pos:position pos:line="287" pos:column="218"/></operator><name pos:line="287" pos:column="218">ssl_client<pos:position pos:line="287" pos:column="228"/></name><operator pos:line="287" pos:column="228">.<pos:position pos:line="287" pos:column="229"/></operator><name pos:line="287" pos:column="229">cafile<pos:position pos:line="287" pos:column="235"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="237">Config<pos:position pos:line="287" pos:column="243"/></name><operator pos:line="287" pos:column="243">.<pos:position pos:line="287" pos:column="244"/></operator><name pos:line="287" pos:column="244">ssl_client<pos:position pos:line="287" pos:column="254"/></name><operator pos:line="287" pos:column="254">.<pos:position pos:line="287" pos:column="255"/></operator><name pos:line="287" pos:column="255">capath<pos:position pos:line="287" pos:column="261"/></name></name></expr></argument>, <argument><expr><name><name pos:line="287" pos:column="263">Config<pos:position pos:line="287" pos:column="269"/></name><operator pos:line="287" pos:column="269">.<pos:position pos:line="287" pos:column="270"/></operator><name pos:line="287" pos:column="270">ssl_client<pos:position pos:line="287" pos:column="280"/></name><operator pos:line="287" pos:column="280">.<pos:position pos:line="287" pos:column="281"/></operator><name pos:line="287" pos:column="281">crlfile<pos:position pos:line="287" pos:column="288"/></name></name></expr></argument>)<pos:position pos:line="287" pos:column="289"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="290"/></expr_stmt>

    <for pos:line="289" pos:column="5">for <control pos:line="289" pos:column="9">(<init><decl><type><name pos:line="289" pos:column="10">CachePeer<pos:position pos:line="289" pos:column="19"/></name> <modifier pos:line="289" pos:column="20">*<pos:position pos:line="289" pos:column="21"/></modifier></type><name pos:line="289" pos:column="21">p<pos:position pos:line="289" pos:column="22"/></name> <init pos:line="289" pos:column="23">= <expr><name><name pos:line="289" pos:column="25">Config<pos:position pos:line="289" pos:column="31"/></name><operator pos:line="289" pos:column="31">.<pos:position pos:line="289" pos:column="32"/></operator><name pos:line="289" pos:column="32">peers<pos:position pos:line="289" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="289" pos:column="38"/></init> <condition><expr><name pos:line="289" pos:column="39">p<pos:position pos:line="289" pos:column="40"/></name> <operator pos:line="289" pos:column="41">!=<pos:position pos:line="289" pos:column="43"/></operator> <name pos:line="289" pos:column="44">NULL<pos:position pos:line="289" pos:column="48"/></name></expr>;<pos:position pos:line="289" pos:column="49"/></condition> <incr><expr><name pos:line="289" pos:column="50">p<pos:position pos:line="289" pos:column="51"/></name> <operator pos:line="289" pos:column="52">=<pos:position pos:line="289" pos:column="53"/></operator> <name><name pos:line="289" pos:column="54">p<pos:position pos:line="289" pos:column="55"/></name><operator pos:line="289" pos:column="55">-&gt;<pos:position pos:line="289" pos:column="60"/></operator><name pos:line="289" pos:column="57">next<pos:position pos:line="289" pos:column="61"/></name></name></expr></incr>)<pos:position pos:line="289" pos:column="62"/></control> <block pos:line="289" pos:column="63">{
        <if pos:line="290" pos:column="9">if <condition pos:line="290" pos:column="12">(<expr><name><name pos:line="290" pos:column="13">p<pos:position pos:line="290" pos:column="14"/></name><operator pos:line="290" pos:column="14">-&gt;<pos:position pos:line="290" pos:column="19"/></operator><name pos:line="290" pos:column="16">use_ssl<pos:position pos:line="290" pos:column="23"/></name></name></expr>)<pos:position pos:line="290" pos:column="24"/></condition><then pos:line="290" pos:column="24"> <block pos:line="290" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="291" pos:column="13">debugs<pos:position pos:line="291" pos:column="19"/></name><argument_list pos:line="291" pos:column="19">(<argument><expr><literal type="number" pos:line="291" pos:column="20">3<pos:position pos:line="291" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="291" pos:column="23">DBG_IMPORTANT<pos:position pos:line="291" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="38">"Initializing cache_peer "<pos:position pos:line="291" pos:column="64"/></literal> <operator pos:line="291" pos:column="65">&lt;&lt;<pos:position pos:line="291" pos:column="73"/></operator> <name><name pos:line="291" pos:column="68">p<pos:position pos:line="291" pos:column="69"/></name><operator pos:line="291" pos:column="69">-&gt;<pos:position pos:line="291" pos:column="74"/></operator><name pos:line="291" pos:column="71">name<pos:position pos:line="291" pos:column="75"/></name></name> <operator pos:line="291" pos:column="76">&lt;&lt;<pos:position pos:line="291" pos:column="84"/></operator> <literal type="string" pos:line="291" pos:column="79">" SSL context"<pos:position pos:line="291" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="292" pos:column="13">p<pos:position pos:line="292" pos:column="14"/></name><operator pos:line="292" pos:column="14">-&gt;<pos:position pos:line="292" pos:column="19"/></operator><name pos:line="292" pos:column="16">sslContext<pos:position pos:line="292" pos:column="26"/></name></name> <operator pos:line="292" pos:column="27">=<pos:position pos:line="292" pos:column="28"/></operator> <call><name pos:line="292" pos:column="29">sslCreateClientContext<pos:position pos:line="292" pos:column="51"/></name><argument_list pos:line="292" pos:column="51">(<argument><expr><name><name pos:line="292" pos:column="52">p<pos:position pos:line="292" pos:column="53"/></name><operator pos:line="292" pos:column="53">-&gt;<pos:position pos:line="292" pos:column="58"/></operator><name pos:line="292" pos:column="55">sslcert<pos:position pos:line="292" pos:column="62"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="64">p<pos:position pos:line="292" pos:column="65"/></name><operator pos:line="292" pos:column="65">-&gt;<pos:position pos:line="292" pos:column="70"/></operator><name pos:line="292" pos:column="67">sslkey<pos:position pos:line="292" pos:column="73"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="75">p<pos:position pos:line="292" pos:column="76"/></name><operator pos:line="292" pos:column="76">-&gt;<pos:position pos:line="292" pos:column="81"/></operator><name pos:line="292" pos:column="78">sslversion<pos:position pos:line="292" pos:column="88"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="90">p<pos:position pos:line="292" pos:column="91"/></name><operator pos:line="292" pos:column="91">-&gt;<pos:position pos:line="292" pos:column="96"/></operator><name pos:line="292" pos:column="93">sslcipher<pos:position pos:line="292" pos:column="102"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="104">p<pos:position pos:line="292" pos:column="105"/></name><operator pos:line="292" pos:column="105">-&gt;<pos:position pos:line="292" pos:column="110"/></operator><name pos:line="292" pos:column="107">ssloptions<pos:position pos:line="292" pos:column="117"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="119">p<pos:position pos:line="292" pos:column="120"/></name><operator pos:line="292" pos:column="120">-&gt;<pos:position pos:line="292" pos:column="125"/></operator><name pos:line="292" pos:column="122">sslflags<pos:position pos:line="292" pos:column="130"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="132">p<pos:position pos:line="292" pos:column="133"/></name><operator pos:line="292" pos:column="133">-&gt;<pos:position pos:line="292" pos:column="138"/></operator><name pos:line="292" pos:column="135">sslcafile<pos:position pos:line="292" pos:column="144"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="146">p<pos:position pos:line="292" pos:column="147"/></name><operator pos:line="292" pos:column="147">-&gt;<pos:position pos:line="292" pos:column="152"/></operator><name pos:line="292" pos:column="149">sslcapath<pos:position pos:line="292" pos:column="158"/></name></name></expr></argument>, <argument><expr><name><name pos:line="292" pos:column="160">p<pos:position pos:line="292" pos:column="161"/></name><operator pos:line="292" pos:column="161">-&gt;<pos:position pos:line="292" pos:column="166"/></operator><name pos:line="292" pos:column="163">sslcrlfile<pos:position pos:line="292" pos:column="173"/></name></name></expr></argument>)<pos:position pos:line="292" pos:column="174"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="175"/></expr_stmt>
        }<pos:position pos:line="293" pos:column="10"/></block></then></if>
    }<pos:position pos:line="294" pos:column="6"/></block></for>

    <for pos:line="296" pos:column="5">for <control pos:line="296" pos:column="9">(<init><decl><type><name><name pos:line="296" pos:column="10">AnyP<pos:position pos:line="296" pos:column="14"/></name><operator pos:line="296" pos:column="14">::<pos:position pos:line="296" pos:column="16"/></operator><name pos:line="296" pos:column="16">PortCfg<pos:position pos:line="296" pos:column="23"/></name></name> <modifier pos:line="296" pos:column="24">*<pos:position pos:line="296" pos:column="25"/></modifier></type><name pos:line="296" pos:column="25">s<pos:position pos:line="296" pos:column="26"/></name> <init pos:line="296" pos:column="27">= <expr><name><name pos:line="296" pos:column="29">Config<pos:position pos:line="296" pos:column="35"/></name><operator pos:line="296" pos:column="35">.<pos:position pos:line="296" pos:column="36"/></operator><name pos:line="296" pos:column="36">Sockaddr<pos:position pos:line="296" pos:column="44"/></name><operator pos:line="296" pos:column="44">.<pos:position pos:line="296" pos:column="45"/></operator><name pos:line="296" pos:column="45">http<pos:position pos:line="296" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="296" pos:column="50"/></init> <condition><expr><name pos:line="296" pos:column="51">s<pos:position pos:line="296" pos:column="52"/></name> <operator pos:line="296" pos:column="53">!=<pos:position pos:line="296" pos:column="55"/></operator> <name pos:line="296" pos:column="56">NULL<pos:position pos:line="296" pos:column="60"/></name></expr>;<pos:position pos:line="296" pos:column="61"/></condition> <incr><expr><name pos:line="296" pos:column="62">s<pos:position pos:line="296" pos:column="63"/></name> <operator pos:line="296" pos:column="64">=<pos:position pos:line="296" pos:column="65"/></operator> <name><name pos:line="296" pos:column="66">s<pos:position pos:line="296" pos:column="67"/></name><operator pos:line="296" pos:column="67">-&gt;<pos:position pos:line="296" pos:column="72"/></operator><name pos:line="296" pos:column="69">next<pos:position pos:line="296" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="296" pos:column="74"/></control> <block pos:line="296" pos:column="75">{
        <if pos:line="297" pos:column="9">if <condition pos:line="297" pos:column="12">(<expr><operator pos:line="297" pos:column="13">!<pos:position pos:line="297" pos:column="14"/></operator><name><name pos:line="297" pos:column="14">s<pos:position pos:line="297" pos:column="15"/></name><operator pos:line="297" pos:column="15">-&gt;<pos:position pos:line="297" pos:column="20"/></operator><name pos:line="297" pos:column="17">flags<pos:position pos:line="297" pos:column="22"/></name><operator pos:line="297" pos:column="22">.<pos:position pos:line="297" pos:column="23"/></operator><name pos:line="297" pos:column="23">tunnelSslBumping<pos:position pos:line="297" pos:column="39"/></name></name></expr>)<pos:position pos:line="297" pos:column="40"/></condition><then pos:line="297" pos:column="40">
            <block type="pseudo"><continue pos:line="298" pos:column="13">continue;<pos:position pos:line="298" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="300" pos:column="9">debugs<pos:position pos:line="300" pos:column="15"/></name><argument_list pos:line="300" pos:column="15">(<argument><expr><literal type="number" pos:line="300" pos:column="16">3<pos:position pos:line="300" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="300" pos:column="19">DBG_IMPORTANT<pos:position pos:line="300" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="34">"Initializing http_port "<pos:position pos:line="300" pos:column="59"/></literal> <operator pos:line="300" pos:column="60">&lt;&lt;<pos:position pos:line="300" pos:column="68"/></operator> <name><name pos:line="300" pos:column="63">s<pos:position pos:line="300" pos:column="64"/></name><operator pos:line="300" pos:column="64">-&gt;<pos:position pos:line="300" pos:column="69"/></operator><name pos:line="300" pos:column="66">s<pos:position pos:line="300" pos:column="67"/></name></name> <operator pos:line="300" pos:column="68">&lt;&lt;<pos:position pos:line="300" pos:column="76"/></operator> <literal type="string" pos:line="300" pos:column="71">" SSL context"<pos:position pos:line="300" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="301" pos:column="9">s<pos:position pos:line="301" pos:column="10"/></name><operator pos:line="301" pos:column="10">-&gt;<pos:position pos:line="301" pos:column="15"/></operator><name pos:line="301" pos:column="12">configureSslServerContext<pos:position pos:line="301" pos:column="37"/></name></name><argument_list pos:line="301" pos:column="37">()<pos:position pos:line="301" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="302" pos:column="6"/></block></for>

    <for pos:line="304" pos:column="5">for <control pos:line="304" pos:column="9">(<init><decl><type><name><name pos:line="304" pos:column="10">AnyP<pos:position pos:line="304" pos:column="14"/></name><operator pos:line="304" pos:column="14">::<pos:position pos:line="304" pos:column="16"/></operator><name pos:line="304" pos:column="16">PortCfg<pos:position pos:line="304" pos:column="23"/></name></name> <modifier pos:line="304" pos:column="24">*<pos:position pos:line="304" pos:column="25"/></modifier></type><name pos:line="304" pos:column="25">s<pos:position pos:line="304" pos:column="26"/></name> <init pos:line="304" pos:column="27">= <expr><name><name pos:line="304" pos:column="29">Config<pos:position pos:line="304" pos:column="35"/></name><operator pos:line="304" pos:column="35">.<pos:position pos:line="304" pos:column="36"/></operator><name pos:line="304" pos:column="36">Sockaddr<pos:position pos:line="304" pos:column="44"/></name><operator pos:line="304" pos:column="44">.<pos:position pos:line="304" pos:column="45"/></operator><name pos:line="304" pos:column="45">https<pos:position pos:line="304" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="304" pos:column="51"/></init> <condition><expr><name pos:line="304" pos:column="52">s<pos:position pos:line="304" pos:column="53"/></name> <operator pos:line="304" pos:column="54">!=<pos:position pos:line="304" pos:column="56"/></operator> <name pos:line="304" pos:column="57">NULL<pos:position pos:line="304" pos:column="61"/></name></expr>;<pos:position pos:line="304" pos:column="62"/></condition> <incr><expr><name pos:line="304" pos:column="63">s<pos:position pos:line="304" pos:column="64"/></name> <operator pos:line="304" pos:column="65">=<pos:position pos:line="304" pos:column="66"/></operator> <name><name pos:line="304" pos:column="67">s<pos:position pos:line="304" pos:column="68"/></name><operator pos:line="304" pos:column="68">-&gt;<pos:position pos:line="304" pos:column="73"/></operator><name pos:line="304" pos:column="70">next<pos:position pos:line="304" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="304" pos:column="75"/></control> <block pos:line="304" pos:column="76">{
        <expr_stmt><expr><call><name pos:line="305" pos:column="9">debugs<pos:position pos:line="305" pos:column="15"/></name><argument_list pos:line="305" pos:column="15">(<argument><expr><literal type="number" pos:line="305" pos:column="16">3<pos:position pos:line="305" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="305" pos:column="19">DBG_IMPORTANT<pos:position pos:line="305" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="305" pos:column="34">"Initializing https_port "<pos:position pos:line="305" pos:column="60"/></literal> <operator pos:line="305" pos:column="61">&lt;&lt;<pos:position pos:line="305" pos:column="69"/></operator> <name><name pos:line="305" pos:column="64">s<pos:position pos:line="305" pos:column="65"/></name><operator pos:line="305" pos:column="65">-&gt;<pos:position pos:line="305" pos:column="70"/></operator><name pos:line="305" pos:column="67">s<pos:position pos:line="305" pos:column="68"/></name></name> <operator pos:line="305" pos:column="69">&lt;&lt;<pos:position pos:line="305" pos:column="77"/></operator> <literal type="string" pos:line="305" pos:column="72">" SSL context"<pos:position pos:line="305" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="305" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="306" pos:column="9">s<pos:position pos:line="306" pos:column="10"/></name><operator pos:line="306" pos:column="10">-&gt;<pos:position pos:line="306" pos:column="15"/></operator><name pos:line="306" pos:column="12">configureSslServerContext<pos:position pos:line="306" pos:column="37"/></name></name><argument_list pos:line="306" pos:column="37">()<pos:position pos:line="306" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="307" pos:column="6"/></block></for>

<cpp:endif pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">endif<pos:position pos:line="309" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="311" pos:column="5">// prevent infinite fetch loops in the request parser</comment>
    <comment type="line" pos:line="312" pos:column="5">// due to buffer full but not enough data recived to finish parse</comment>
    <if pos:line="313" pos:column="5">if <condition pos:line="313" pos:column="8">(<expr><name><name pos:line="313" pos:column="9">Config<pos:position pos:line="313" pos:column="15"/></name><operator pos:line="313" pos:column="15">.<pos:position pos:line="313" pos:column="16"/></operator><name pos:line="313" pos:column="16">maxRequestBufferSize<pos:position pos:line="313" pos:column="36"/></name></name> <operator pos:line="313" pos:column="37">&lt;=<pos:position pos:line="313" pos:column="42"/></operator> <name><name pos:line="313" pos:column="40">Config<pos:position pos:line="313" pos:column="46"/></name><operator pos:line="313" pos:column="46">.<pos:position pos:line="313" pos:column="47"/></operator><name pos:line="313" pos:column="47">maxRequestHeaderSize<pos:position pos:line="313" pos:column="67"/></name></name></expr>)<pos:position pos:line="313" pos:column="68"/></condition><then pos:line="313" pos:column="68"> <block pos:line="313" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="314" pos:column="9">fatalf<pos:position pos:line="314" pos:column="15"/></name><argument_list pos:line="314" pos:column="15">(<argument><expr><literal type="string" pos:line="314" pos:column="16">"Client request buffer of %u bytes cannot hold a request with %u bytes of headers."<pos:position pos:line="314" pos:column="99"/></literal> \
               <literal type="string" pos:line="315" pos:column="16">" Change client_request_buffer_max or request_header_max_size limits."<pos:position pos:line="315" pos:column="86"/></literal></expr></argument>,
               <argument><expr><operator pos:line="316" pos:column="16">(<pos:position pos:line="316" pos:column="17"/></operator><name pos:line="316" pos:column="17">uint32_t<pos:position pos:line="316" pos:column="25"/></name><operator pos:line="316" pos:column="25">)<pos:position pos:line="316" pos:column="26"/></operator><name><name pos:line="316" pos:column="26">Config<pos:position pos:line="316" pos:column="32"/></name><operator pos:line="316" pos:column="32">.<pos:position pos:line="316" pos:column="33"/></operator><name pos:line="316" pos:column="33">maxRequestBufferSize<pos:position pos:line="316" pos:column="53"/></name></name></expr></argument>, <argument><expr><operator pos:line="316" pos:column="55">(<pos:position pos:line="316" pos:column="56"/></operator><name pos:line="316" pos:column="56">uint32_t<pos:position pos:line="316" pos:column="64"/></name><operator pos:line="316" pos:column="64">)<pos:position pos:line="316" pos:column="65"/></operator><name><name pos:line="316" pos:column="65">Config<pos:position pos:line="316" pos:column="71"/></name><operator pos:line="316" pos:column="71">.<pos:position pos:line="316" pos:column="72"/></operator><name pos:line="316" pos:column="72">maxRequestHeaderSize<pos:position pos:line="316" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="316" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="94"/></expr_stmt>
    }<pos:position pos:line="317" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="319" pos:column="5">/*
     * Disable client side request pipelining if client_persistent_connections OFF.
     * Waste of resources queueing any pipelined requests when the first will close the connection.
     */</comment>
    <if pos:line="323" pos:column="5">if <condition pos:line="323" pos:column="8">(<expr><name><name pos:line="323" pos:column="9">Config<pos:position pos:line="323" pos:column="15"/></name><operator pos:line="323" pos:column="15">.<pos:position pos:line="323" pos:column="16"/></operator><name pos:line="323" pos:column="16">pipeline_max_prefetch<pos:position pos:line="323" pos:column="37"/></name></name> <operator pos:line="323" pos:column="38">&gt;<pos:position pos:line="323" pos:column="42"/></operator> <literal type="number" pos:line="323" pos:column="40">0<pos:position pos:line="323" pos:column="41"/></literal> <operator pos:line="323" pos:column="42">&amp;&amp;<pos:position pos:line="323" pos:column="52"/></operator> <operator pos:line="323" pos:column="45">!<pos:position pos:line="323" pos:column="46"/></operator><name><name pos:line="323" pos:column="46">Config<pos:position pos:line="323" pos:column="52"/></name><operator pos:line="323" pos:column="52">.<pos:position pos:line="323" pos:column="53"/></operator><name pos:line="323" pos:column="53">onoff<pos:position pos:line="323" pos:column="58"/></name><operator pos:line="323" pos:column="58">.<pos:position pos:line="323" pos:column="59"/></operator><name pos:line="323" pos:column="59">client_pconns<pos:position pos:line="323" pos:column="72"/></name></name></expr>)<pos:position pos:line="323" pos:column="73"/></condition><then pos:line="323" pos:column="73"> <block pos:line="323" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="324" pos:column="9">debugs<pos:position pos:line="324" pos:column="15"/></name><argument_list pos:line="324" pos:column="15">(<argument><expr><literal type="number" pos:line="324" pos:column="16">3<pos:position pos:line="324" pos:column="17"/></literal></expr></argument>, <argument><expr><call><name pos:line="324" pos:column="19">DBG_PARSE_NOTE<pos:position pos:line="324" pos:column="33"/></name><argument_list pos:line="324" pos:column="33">(<argument><expr><name pos:line="324" pos:column="34">DBG_IMPORTANT<pos:position pos:line="324" pos:column="47"/></name></expr></argument>)<pos:position pos:line="324" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="50">"WARNING: pipeline_prefetch "<pos:position pos:line="324" pos:column="79"/></literal> <operator pos:line="324" pos:column="80">&lt;&lt;<pos:position pos:line="324" pos:column="88"/></operator> <name><name pos:line="324" pos:column="83">Config<pos:position pos:line="324" pos:column="89"/></name><operator pos:line="324" pos:column="89">.<pos:position pos:line="324" pos:column="90"/></operator><name pos:line="324" pos:column="90">pipeline_max_prefetch<pos:position pos:line="324" pos:column="111"/></name></name> <operator pos:line="324" pos:column="112">&lt;&lt;<pos:position pos:line="324" pos:column="120"/></operator>
               <literal type="string" pos:line="325" pos:column="16">" requires client_persistent_connections ON. Forced pipeline_prefetch 0."<pos:position pos:line="325" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="326" pos:column="9">Config<pos:position pos:line="326" pos:column="15"/></name><operator pos:line="326" pos:column="15">.<pos:position pos:line="326" pos:column="16"/></operator><name pos:line="326" pos:column="16">pipeline_max_prefetch<pos:position pos:line="326" pos:column="37"/></name></name> <operator pos:line="326" pos:column="38">=<pos:position pos:line="326" pos:column="39"/></operator> <literal type="number" pos:line="326" pos:column="40">0<pos:position pos:line="326" pos:column="41"/></literal></expr>;<pos:position pos:line="326" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="327" pos:column="6"/></block></then></if>

<cpp:if pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">if<pos:position pos:line="329" pos:column="4"/></cpp:directive> <expr><name pos:line="329" pos:column="5">USE_AUTH<pos:position pos:line="329" pos:column="13"/></name></expr></cpp:if>
    <comment type="block" pos:line="330" pos:column="5">/*
     * disable client side request pipelining. There is a race with
     * Negotiate and NTLM when the client sends a second request on an
     * connection before the authenticate challenge is sent. With
     * pipelining OFF, the client may fail to authenticate, but squid's
     * state will be preserved.
     */</comment>
    <if pos:line="337" pos:column="5">if <condition pos:line="337" pos:column="8">(<expr><name><name pos:line="337" pos:column="9">Config<pos:position pos:line="337" pos:column="15"/></name><operator pos:line="337" pos:column="15">.<pos:position pos:line="337" pos:column="16"/></operator><name pos:line="337" pos:column="16">pipeline_max_prefetch<pos:position pos:line="337" pos:column="37"/></name></name> <operator pos:line="337" pos:column="38">&gt;<pos:position pos:line="337" pos:column="42"/></operator> <literal type="number" pos:line="337" pos:column="40">0<pos:position pos:line="337" pos:column="41"/></literal></expr>)<pos:position pos:line="337" pos:column="42"/></condition><then pos:line="337" pos:column="42"> <block pos:line="337" pos:column="43">{
        <decl_stmt><decl><type><name><name pos:line="338" pos:column="9">Auth<pos:position pos:line="338" pos:column="13"/></name><operator pos:line="338" pos:column="13">::<pos:position pos:line="338" pos:column="15"/></operator><name pos:line="338" pos:column="15">Config<pos:position pos:line="338" pos:column="21"/></name></name> <modifier pos:line="338" pos:column="22">*<pos:position pos:line="338" pos:column="23"/></modifier></type><name pos:line="338" pos:column="23">nego<pos:position pos:line="338" pos:column="27"/></name> <init pos:line="338" pos:column="28">= <expr><call><name><name pos:line="338" pos:column="30">Auth<pos:position pos:line="338" pos:column="34"/></name><operator pos:line="338" pos:column="34">::<pos:position pos:line="338" pos:column="36"/></operator><name pos:line="338" pos:column="36">Config<pos:position pos:line="338" pos:column="42"/></name><operator pos:line="338" pos:column="42">::<pos:position pos:line="338" pos:column="44"/></operator><name pos:line="338" pos:column="44">Find<pos:position pos:line="338" pos:column="48"/></name></name><argument_list pos:line="338" pos:column="48">(<argument><expr><literal type="string" pos:line="338" pos:column="49">"Negotiate"<pos:position pos:line="338" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="338" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="338" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="339" pos:column="9">Auth<pos:position pos:line="339" pos:column="13"/></name><operator pos:line="339" pos:column="13">::<pos:position pos:line="339" pos:column="15"/></operator><name pos:line="339" pos:column="15">Config<pos:position pos:line="339" pos:column="21"/></name></name> <modifier pos:line="339" pos:column="22">*<pos:position pos:line="339" pos:column="23"/></modifier></type><name pos:line="339" pos:column="23">ntlm<pos:position pos:line="339" pos:column="27"/></name> <init pos:line="339" pos:column="28">= <expr><call><name><name pos:line="339" pos:column="30">Auth<pos:position pos:line="339" pos:column="34"/></name><operator pos:line="339" pos:column="34">::<pos:position pos:line="339" pos:column="36"/></operator><name pos:line="339" pos:column="36">Config<pos:position pos:line="339" pos:column="42"/></name><operator pos:line="339" pos:column="42">::<pos:position pos:line="339" pos:column="44"/></operator><name pos:line="339" pos:column="44">Find<pos:position pos:line="339" pos:column="48"/></name></name><argument_list pos:line="339" pos:column="48">(<argument><expr><literal type="string" pos:line="339" pos:column="49">"NTLM"<pos:position pos:line="339" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="339" pos:column="57"/></decl_stmt>
        <if pos:line="340" pos:column="9">if <condition pos:line="340" pos:column="12">(<expr><operator pos:line="340" pos:column="13">(<pos:position pos:line="340" pos:column="14"/></operator><name pos:line="340" pos:column="14">nego<pos:position pos:line="340" pos:column="18"/></name> <operator pos:line="340" pos:column="19">&amp;&amp;<pos:position pos:line="340" pos:column="29"/></operator> <call><name><name pos:line="340" pos:column="22">nego<pos:position pos:line="340" pos:column="26"/></name><operator pos:line="340" pos:column="26">-&gt;<pos:position pos:line="340" pos:column="31"/></operator><name pos:line="340" pos:column="28">active<pos:position pos:line="340" pos:column="34"/></name></name><argument_list pos:line="340" pos:column="34">()<pos:position pos:line="340" pos:column="36"/></argument_list></call><operator pos:line="340" pos:column="36">)<pos:position pos:line="340" pos:column="37"/></operator> <operator pos:line="340" pos:column="38">||<pos:position pos:line="340" pos:column="40"/></operator> <operator pos:line="340" pos:column="41">(<pos:position pos:line="340" pos:column="42"/></operator><name pos:line="340" pos:column="42">ntlm<pos:position pos:line="340" pos:column="46"/></name> <operator pos:line="340" pos:column="47">&amp;&amp;<pos:position pos:line="340" pos:column="57"/></operator> <call><name><name pos:line="340" pos:column="50">ntlm<pos:position pos:line="340" pos:column="54"/></name><operator pos:line="340" pos:column="54">-&gt;<pos:position pos:line="340" pos:column="59"/></operator><name pos:line="340" pos:column="56">active<pos:position pos:line="340" pos:column="62"/></name></name><argument_list pos:line="340" pos:column="62">()<pos:position pos:line="340" pos:column="64"/></argument_list></call><operator pos:line="340" pos:column="64">)<pos:position pos:line="340" pos:column="65"/></operator></expr>)<pos:position pos:line="340" pos:column="66"/></condition><then pos:line="340" pos:column="66"> <block pos:line="340" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="341" pos:column="13">debugs<pos:position pos:line="341" pos:column="19"/></name><argument_list pos:line="341" pos:column="19">(<argument><expr><literal type="number" pos:line="341" pos:column="20">3<pos:position pos:line="341" pos:column="21"/></literal></expr></argument>, <argument><expr><call><name pos:line="341" pos:column="23">DBG_PARSE_NOTE<pos:position pos:line="341" pos:column="37"/></name><argument_list pos:line="341" pos:column="37">(<argument><expr><name pos:line="341" pos:column="38">DBG_IMPORTANT<pos:position pos:line="341" pos:column="51"/></name></expr></argument>)<pos:position pos:line="341" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="341" pos:column="54">"WARNING: pipeline_prefetch breaks NTLM and Negotiate authentication. Forced pipeline_prefetch 0."<pos:position pos:line="341" pos:column="152"/></literal></expr></argument>)<pos:position pos:line="341" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="154"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="342" pos:column="13">Config<pos:position pos:line="342" pos:column="19"/></name><operator pos:line="342" pos:column="19">.<pos:position pos:line="342" pos:column="20"/></operator><name pos:line="342" pos:column="20">pipeline_max_prefetch<pos:position pos:line="342" pos:column="41"/></name></name> <operator pos:line="342" pos:column="42">=<pos:position pos:line="342" pos:column="43"/></operator> <literal type="number" pos:line="342" pos:column="44">0<pos:position pos:line="342" pos:column="45"/></literal></expr>;<pos:position pos:line="342" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="343" pos:column="10"/></block></then></if>
    }<pos:position pos:line="344" pos:column="6"/></block></then></if>
<cpp:endif pos:line="345" pos:column="1">#<cpp:directive pos:line="345" pos:column="2">endif<pos:position pos:line="345" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="346" pos:column="2"/></block></function></unit>

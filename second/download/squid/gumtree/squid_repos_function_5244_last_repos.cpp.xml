<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5244_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Client<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">storeReplyBody<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">data<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">ssize_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">len<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// write even if len is zero to push headers towards the client side</comment>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">entry<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">write<pos:position pos:line="5" pos:column="17"/></name></name> <argument_list pos:line="5" pos:column="18">(<argument><expr><call><name pos:line="5" pos:column="19">StoreIOBuffer<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">len<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">currentOffset<pos:position pos:line="5" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="53">(<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="54">char<pos:position pos:line="5" pos:column="58"/></name><operator pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></operator><operator pos:line="5" pos:column="59">)<pos:position pos:line="5" pos:column="60"/></operator><name pos:line="5" pos:column="60">data<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">currentOffset<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">+=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">len<pos:position pos:line="7" pos:column="25"/></name></expr>;<pos:position pos:line="7" pos:column="26"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

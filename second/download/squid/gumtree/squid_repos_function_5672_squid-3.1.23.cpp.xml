<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5672_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">hash_link<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">hash_lookup<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">hash_table<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type> <name pos:line="2" pos:column="26">hid<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">k<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">hash_link<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">walker<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">b<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">PROF_start<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">hash_lookup<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">k<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">b<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name><name pos:line="8" pos:column="9">hid<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">hash<pos:position pos:line="8" pos:column="18"/></name></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">k<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="22">hid<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">size<pos:position pos:line="8" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">walker<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">hid<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">buckets<pos:position pos:line="9" pos:column="31"/></name><index pos:line="9" pos:column="31">[<expr><name pos:line="9" pos:column="32">b<pos:position pos:line="9" pos:column="33"/></name></expr>]<pos:position pos:line="9" pos:column="34"/></index></name></expr>;<pos:position pos:line="9" pos:column="35"/></init> <condition><expr><name pos:line="9" pos:column="36">walker<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">!=<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="46">NULL<pos:position pos:line="9" pos:column="50"/></name></expr>;<pos:position pos:line="9" pos:column="51"/></condition> <incr><expr><name pos:line="9" pos:column="52">walker<pos:position pos:line="9" pos:column="58"/></name> <operator pos:line="9" pos:column="59">=<pos:position pos:line="9" pos:column="60"/></operator> <name><name pos:line="9" pos:column="61">walker<pos:position pos:line="9" pos:column="67"/></name><operator pos:line="9" pos:column="67">-&gt;<pos:position pos:line="9" pos:column="72"/></operator><name pos:line="9" pos:column="69">next<pos:position pos:line="9" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="74"/></control> <block pos:line="9" pos:column="75">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call pos:line="10" pos:column="13">(<name><name pos:line="10" pos:column="14">hid<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">cmp<pos:position pos:line="10" pos:column="22"/></name></name>) <argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">k<pos:position pos:line="10" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="28">walker<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">key<pos:position pos:line="10" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call> <operator pos:line="10" pos:column="41">==<pos:position pos:line="10" pos:column="43"/></operator> <literal type="number" pos:line="10" pos:column="44">0<pos:position pos:line="10" pos:column="45"/></literal></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46"> <block pos:line="10" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">PROF_stop<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">hash_lookup<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">walker<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">assert<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name pos:line="14" pos:column="16">walker<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">!=<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="26">walker<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">next<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">PROF_stop<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">hash_lookup<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>;<pos:position pos:line="17" pos:column="17"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

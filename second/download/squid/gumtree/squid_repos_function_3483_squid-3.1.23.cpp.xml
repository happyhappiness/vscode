<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3483_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">clientAfterReadingRequests<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">do_next_read<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * If (1) we are reading a message body, (2) and the connection
     * is half-closed, and (3) we didn't get the entire HTTP request
     * yet, then close this connection.
     */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">fd_table<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><name pos:line="10" pos:column="18">fd<pos:position pos:line="10" pos:column="20"/></name></expr>]<pos:position pos:line="10" pos:column="21"/></index></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name><name pos:line="10" pos:column="22">flags<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">socket_eof<pos:position pos:line="10" pos:column="38"/></name></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block pos:line="10" pos:column="40">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">int64_t<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">)<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="22">in<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">.<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">notYetUsed<pos:position pos:line="11" pos:column="35"/></name></name> <operator pos:line="11" pos:column="36">&lt;<pos:position pos:line="11" pos:column="40"/></operator> <call><name pos:line="11" pos:column="38">bodySizeLeft<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">()<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="53"/></condition><then pos:line="11" pos:column="53"> <block pos:line="11" pos:column="54">{
            <comment type="block" pos:line="12" pos:column="13">/* Partial request received. Abort client connection! */</comment>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">33<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="24">3<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">"clientAfterReadingRequests: FD "<pos:position pos:line="13" pos:column="60"/></literal> <operator pos:line="13" pos:column="61">&lt;&lt;<pos:position pos:line="13" pos:column="69"/></operator> <name pos:line="13" pos:column="64">fd<pos:position pos:line="13" pos:column="66"/></name> <operator pos:line="13" pos:column="67">&lt;&lt;<pos:position pos:line="13" pos:column="75"/></operator> <literal type="string" pos:line="13" pos:column="70">" aborted, partial request"<pos:position pos:line="13" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="99"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">comm_close<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">fd<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
            <return pos:line="15" pos:column="13">return;<pos:position pos:line="15" pos:column="20"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">clientMaybeReadData<pos:position pos:line="19" pos:column="24"/></name> <argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">do_next_read<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4309_last_repos.cpp" pos:tabs="8"><function><template pos:line="1" pos:column="1">template<parameter_list pos:line="1" pos:column="9">&lt;<parameter><type><name pos:line="1" pos:column="10">class<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">MatchType<pos:position pos:line="1" pos:column="25"/></name></parameter>&gt;<pos:position pos:line="1" pos:column="29"/></parameter_list></template>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type>
<name pos:line="3" pos:column="1">check_cert_domain<pos:position pos:line="3" pos:column="18"/></name><parameter_list pos:line="3" pos:column="18">( <parameter><decl><type><name pos:line="3" pos:column="20">void<pos:position pos:line="3" pos:column="24"/></name> <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier></type><name pos:line="3" pos:column="26">check_data<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="38">ASN1_STRING<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">cn_data<pos:position pos:line="3" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="59"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">cn<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><literal type="number" pos:line="5" pos:column="13">1024<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">ACLData<pos:position pos:line="6" pos:column="12"/></name><argument_list type="generic" pos:line="6" pos:column="12">&lt;<argument><expr><name pos:line="6" pos:column="13">MatchType<pos:position pos:line="6" pos:column="22"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="26"/></argument_list></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type> <name pos:line="6" pos:column="26">data<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><name><name pos:line="6" pos:column="34">ACLData<pos:position pos:line="6" pos:column="41"/></name><argument_list type="generic" pos:line="6" pos:column="41">&lt;<argument><expr><name pos:line="6" pos:column="42">MatchType<pos:position pos:line="6" pos:column="51"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="55"/></argument_list></name> <operator pos:line="6" pos:column="53">*<pos:position pos:line="6" pos:column="54"/></operator><operator pos:line="6" pos:column="54">)<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="55">check_data<pos:position pos:line="6" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="66"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">cn_data<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">length<pos:position pos:line="8" pos:column="24"/></name></name> <operator pos:line="8" pos:column="25">&gt;<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">int<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator><sizeof pos:line="8" pos:column="32">sizeof<argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">cn<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></sizeof> <operator pos:line="8" pos:column="43">-<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">1<pos:position pos:line="8" pos:column="46"/></literal></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">1<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></then></if> <comment type="line" pos:line="9" pos:column="19">// ignore data that does not fit our buffer</comment>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">s<pos:position pos:line="11" pos:column="12"/></name> <init pos:line="11" pos:column="13">= <expr><cast type="reinterpret" pos:line="11" pos:column="15">reinterpret_cast<argument_list type="generic" pos:line="11" pos:column="31">&lt;<argument><expr><name pos:line="11" pos:column="32">char<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="42"/></argument_list><argument_list pos:line="11" pos:column="39">(<argument><expr><name><name pos:line="11" pos:column="40">cn_data<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">data<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">d<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><name pos:line="12" pos:column="15">cn<pos:position pos:line="12" pos:column="17"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><decl><type><name pos:line="13" pos:column="10">int<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name><name pos:line="13" pos:column="25">cn_data<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">length<pos:position pos:line="13" pos:column="40"/></name></name></expr>;<pos:position pos:line="13" pos:column="41"/></condition> <incr><expr><operator pos:line="13" pos:column="42">++<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">i<pos:position pos:line="13" pos:column="45"/></name></expr><operator pos:line="13" pos:column="45">,<pos:position pos:line="13" pos:column="46"/></operator> <expr><operator pos:line="13" pos:column="47">++<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="49">d<pos:position pos:line="13" pos:column="50"/></name></expr><operator pos:line="13" pos:column="50">,<pos:position pos:line="13" pos:column="51"/></operator> <expr><operator pos:line="13" pos:column="52">++<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">s<pos:position pos:line="13" pos:column="55"/></name></expr></incr>)<pos:position pos:line="13" pos:column="56"/></control> <block pos:line="13" pos:column="57">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">s<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="char" pos:line="14" pos:column="19">'\0'<pos:position pos:line="14" pos:column="23"/></literal></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="15" pos:column="23">// always a domain mismatch. contains 0x00</comment>
        <expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">d<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <operator pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">s<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></for>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">cn<pos:position pos:line="18" pos:column="7"/></name><index pos:line="18" pos:column="7">[<expr><name><name pos:line="18" pos:column="8">cn_data<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">length<pos:position pos:line="18" pos:column="23"/></name></name></expr>]<pos:position pos:line="18" pos:column="24"/></index></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <literal type="char" pos:line="18" pos:column="27">'\0'<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">28<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">4<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"Verifying certificate name/subjectAltName "<pos:position pos:line="19" pos:column="63"/></literal> <operator pos:line="19" pos:column="64">&lt;&lt;<pos:position pos:line="19" pos:column="72"/></operator> <name pos:line="19" pos:column="67">cn<pos:position pos:line="19" pos:column="69"/></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name><name pos:line="20" pos:column="9">data<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">-&gt;<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="15">match<pos:position pos:line="20" pos:column="20"/></name></name><argument_list pos:line="20" pos:column="20">(<argument><expr><name pos:line="20" pos:column="21">cn<pos:position pos:line="20" pos:column="23"/></name></expr></argument>)<pos:position pos:line="20" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="25"/></condition><then pos:line="20" pos:column="25">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return></block></then></if>
    <return pos:line="22" pos:column="5">return <expr><literal type="number" pos:line="22" pos:column="12">1<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

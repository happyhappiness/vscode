<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3693_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">clientPinnedConnectionClosed<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">CommCloseCbParams<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">io<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// FwdState might repin a failed connection sooner than this close</comment>
    <comment type="line" pos:line="5" pos:column="5">// callback is called for the failed connection.</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">pinning<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">serverConnection<pos:position pos:line="6" pos:column="36"/></name></name> <operator pos:line="6" pos:column="37">==<pos:position pos:line="6" pos:column="39"/></operator> <name><name pos:line="6" pos:column="40">io<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">conn<pos:position pos:line="6" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">pinning<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">.<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">closeHandler<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt> <comment type="line" pos:line="7" pos:column="34">// Comm unregisters handlers before calling</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">bool<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">sawZeroReply<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><name><name pos:line="8" pos:column="31">pinning<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">zeroReply<pos:position pos:line="8" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt> <comment type="line" pos:line="8" pos:column="50">// reset when unpinning</comment>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">pinning<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">.<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">serverConnection<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">noteClosure<pos:position pos:line="9" pos:column="42"/></name></name><argument_list pos:line="9" pos:column="42">()<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">unpinConnection<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="boolean" pos:line="10" pos:column="21">false<pos:position pos:line="10" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">sawZeroReply<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="25">clientConnection<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">!=<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <block pos:line="12" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">33<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">3<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"Closing client connection on pinned zero reply."<pos:position pos:line="13" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">clientConnection<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">close<pos:position pos:line="14" pos:column="32"/></name></name><argument_list pos:line="14" pos:column="32">()<pos:position pos:line="14" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1524_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">icpCount<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">void<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">buf<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">which<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">len<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">delay<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">icp_common_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">icp<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">icp_common_t<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator><operator pos:line="4" pos:column="40">)<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="42">buf<pos:position pos:line="4" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">len<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">&lt;<pos:position pos:line="6" pos:column="17"/></operator> <sizeof pos:line="6" pos:column="15">sizeof<argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">icp<pos:position pos:line="6" pos:column="26"/></name></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></sizeof></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">SENT<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">which<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator><name><name pos:line="10" pos:column="11">statCounter<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">icp<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">pkts_sent<pos:position pos:line="10" pos:column="36"/></name></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">kb_incr<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="18">statCounter<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">icp<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">kbytes_sent<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="47">len<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">ICP_QUERY<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">==<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="26">icp<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">opcode<pos:position pos:line="13" pos:column="37"/></name></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
            <expr_stmt><expr><operator pos:line="14" pos:column="13">++<pos:position pos:line="14" pos:column="15"/></operator><name><name pos:line="14" pos:column="15">statCounter<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">icp<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">queries_sent<pos:position pos:line="14" pos:column="43"/></name></name></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">kb_incr<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">&amp;<pos:position pos:line="15" pos:column="26"/></operator><name><name pos:line="15" pos:column="22">statCounter<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">.<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">icp<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">q_kbytes_sent<pos:position pos:line="15" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">len<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
            <expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name><name pos:line="17" pos:column="15">statCounter<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">icp<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">replies_sent<pos:position pos:line="17" pos:column="43"/></name></name></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">kb_incr<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">&amp;<pos:position pos:line="18" pos:column="26"/></operator><name><name pos:line="18" pos:column="22">statCounter<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">.<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">icp<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">r_kbytes_sent<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="53">len<pos:position pos:line="18" pos:column="56"/></name></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
            <comment type="block" pos:line="19" pos:column="13">/* this is the sent-reply service time */</comment>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">statCounter<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">icp<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">replySvcTime<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">count<pos:position pos:line="20" pos:column="47"/></name></name><argument_list pos:line="20" pos:column="47">(<argument><expr><name pos:line="20" pos:column="48">delay<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">ICP_HIT<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="24">icp<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">opcode<pos:position pos:line="23" pos:column="35"/></name></name></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator><name><name pos:line="24" pos:column="15">statCounter<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">icp<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">hits_sent<pos:position pos:line="24" pos:column="40"/></name></name></expr>;<pos:position pos:line="24" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then> <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if <condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">RECV<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">which<pos:position pos:line="25" pos:column="29"/></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
        <expr_stmt><expr><operator pos:line="26" pos:column="9">++<pos:position pos:line="26" pos:column="11"/></operator><name><name pos:line="26" pos:column="11">statCounter<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">icp<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">pkts_recv<pos:position pos:line="26" pos:column="36"/></name></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">kb_incr<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><operator pos:line="27" pos:column="17">&amp;<pos:position pos:line="27" pos:column="22"/></operator><name><name pos:line="27" pos:column="18">statCounter<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">icp<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">.<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">kbytes_recv<pos:position pos:line="27" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">len<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">ICP_QUERY<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="26">icp<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">opcode<pos:position pos:line="29" pos:column="37"/></name></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38"> <block pos:line="29" pos:column="39">{
            <expr_stmt><expr><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator><name><name pos:line="30" pos:column="15">statCounter<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">.<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">icp<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">.<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">queries_recv<pos:position pos:line="30" pos:column="43"/></name></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">kb_incr<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator><name><name pos:line="31" pos:column="22">statCounter<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">icp<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">q_kbytes_recv<pos:position pos:line="31" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">len<pos:position pos:line="31" pos:column="56"/></name></expr></argument>)<pos:position pos:line="31" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
            <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name><name pos:line="33" pos:column="15">statCounter<pos:position pos:line="33" pos:column="26"/></name><operator pos:line="33" pos:column="26">.<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">icp<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">replies_recv<pos:position pos:line="33" pos:column="43"/></name></name></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">kb_incr<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><operator pos:line="34" pos:column="21">&amp;<pos:position pos:line="34" pos:column="26"/></operator><name><name pos:line="34" pos:column="22">statCounter<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">.<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="34">icp<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">r_kbytes_recv<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">len<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
            <comment type="block" pos:line="35" pos:column="13">/* statCounter.icp.querySvcTime set in clientUpdateCounters */</comment>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">ICP_HIT<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">==<pos:position pos:line="38" pos:column="23"/></operator> <name><name pos:line="38" pos:column="24">icp<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">opcode<pos:position pos:line="38" pos:column="35"/></name></name></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="39" pos:column="13">++<pos:position pos:line="39" pos:column="15"/></operator><name><name pos:line="39" pos:column="15">statCounter<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">.<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">icp<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">.<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="31">hits_recv<pos:position pos:line="39" pos:column="40"/></name></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

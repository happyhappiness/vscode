<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2414_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">packFirstLineInto<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name pos:line="2" pos:column="32">Packable<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">p<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">bool<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">full_uri<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list> <specifier pos:line="2" pos:column="61">const<pos:position pos:line="2" pos:column="66"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">SBuf<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">tmp<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><ternary><condition><expr><name pos:line="4" pos:column="20">full_uri<pos:position pos:line="4" pos:column="28"/></name></expr> ?<pos:position pos:line="4" pos:column="30"/></condition><then pos:line="4" pos:column="30"> <expr><call><name pos:line="4" pos:column="31">effectiveRequestUri<pos:position pos:line="4" pos:column="50"/></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="53"/></then><else pos:line="4" pos:column="53">: <expr><call><name><name pos:line="4" pos:column="55">url<pos:position pos:line="4" pos:column="58"/></name><operator pos:line="4" pos:column="58">.<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="59">path<pos:position pos:line="4" pos:column="63"/></name></name><argument_list pos:line="4" pos:column="63">()<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></else></ternary></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>

    <comment type="line" pos:line="6" pos:column="5">// form HTTP request-line</comment>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">p<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">appendf<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">SQUIDSBUFPH<pos:position pos:line="7" pos:column="27"/></name> <literal type="string" pos:line="7" pos:column="28">" "<pos:position pos:line="7" pos:column="31"/></literal> <name pos:line="7" pos:column="32">SQUIDSBUFPH<pos:position pos:line="7" pos:column="43"/></name> <literal type="string" pos:line="7" pos:column="44">" HTTP/%d.%d\r\n"<pos:position pos:line="7" pos:column="61"/></literal></expr></argument>,
               <argument><expr><call><name pos:line="8" pos:column="16">SQUIDSBUFPRINT<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><call><name><name pos:line="8" pos:column="31">method<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">image<pos:position pos:line="8" pos:column="43"/></name></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></argument>,
               <argument><expr><call><name pos:line="9" pos:column="16">SQUIDSBUFPRINT<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">tmp<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr></argument>,
               <argument><expr><name><name pos:line="10" pos:column="16">http_ver<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">.<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">major<pos:position pos:line="10" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="32">http_ver<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">minor<pos:position pos:line="10" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

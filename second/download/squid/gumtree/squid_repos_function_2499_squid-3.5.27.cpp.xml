<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2499_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">store_client<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">scheduleDiskRead<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* What the client wants is not in memory. Schedule a disk read */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">getType<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">()<pos:position pos:line="5" pos:column="18"/></argument_list></call> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">STORE_DISK_CLIENT<pos:position pos:line="5" pos:column="39"/></name></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40"> <block pos:line="5" pos:column="41">{
        <comment type="line" pos:line="6" pos:column="9">// we should have called startSwapin() already</comment>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">assert<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">swapin_sio<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">!=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">NULL<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <elseif pos:line="8" pos:column="7">else <if pos:line="8" pos:column="12">if <condition pos:line="8" pos:column="15">(<expr><operator pos:line="8" pos:column="16">!<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">swapin_sio<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">&amp;&amp;<pos:position pos:line="8" pos:column="38"/></operator> <operator pos:line="8" pos:column="31">!<pos:position pos:line="8" pos:column="32"/></operator><call><name pos:line="8" pos:column="32">startSwapin<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46"> <block pos:line="8" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">90<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"bailing after swapin start failure for "<pos:position pos:line="9" pos:column="64"/></literal> <operator pos:line="9" pos:column="65">&lt;&lt;<pos:position pos:line="9" pos:column="73"/></operator> <operator pos:line="9" pos:column="68">*<pos:position pos:line="9" pos:column="69"/></operator><name pos:line="9" pos:column="69">entry<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">assert<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">!<pos:position pos:line="10" pos:column="17"/></operator><name><name pos:line="10" pos:column="17">flags<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">.<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">store_copying<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><operator pos:line="14" pos:column="12">!<pos:position pos:line="14" pos:column="13"/></operator><name><name pos:line="14" pos:column="13">flags<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">.<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">disk_io_pending<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">90<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"reading "<pos:position pos:line="16" pos:column="29"/></literal> <operator pos:line="16" pos:column="30">&lt;&lt;<pos:position pos:line="16" pos:column="38"/></operator> <operator pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">entry<pos:position pos:line="16" pos:column="39"/></name> <operator pos:line="16" pos:column="40">&lt;&lt;<pos:position pos:line="16" pos:column="48"/></operator> <literal type="string" pos:line="16" pos:column="43">" from disk"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">fileRead<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">()<pos:position pos:line="18" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">flags<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">store_copying<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <literal type="boolean" pos:line="20" pos:column="27">false<pos:position pos:line="20" pos:column="32"/></literal></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

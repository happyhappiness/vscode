<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5790_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier></type> <name><name pos:line="2" pos:column="28">argv<pos:position pos:line="2" pos:column="32"/></name><index pos:line="2" pos:column="32">[]<pos:position pos:line="2" pos:column="34"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">MAX_AUTHTOKEN_LEN<pos:position pos:line="4" pos:column="31"/></name></expr>]<pos:position pos:line="4" pos:column="32"/></index></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">c<pos:position pos:line="5" pos:column="12"/></name></decl>, <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">user<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">rfc_user<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HAVE_PAC_SUPPORT<pos:position pos:line="8" pos:column="21"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">ad_groups<pos:position pos:line="9" pos:column="19"/></name><index pos:line="9" pos:column="19">[<expr><name pos:line="9" pos:column="20">MAX_PAC_GROUP_SIZE<pos:position pos:line="9" pos:column="38"/></name></expr>]<pos:position pos:line="9" pos:column="39"/></index></name></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">ag<pos:position pos:line="10" pos:column="13"/></name><init pos:line="10" pos:column="13">=<expr><name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">krb5_pac<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">pac<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">USE_HEIMDAL_KRB5<pos:position pos:line="12" pos:column="21"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">gss_buffer_desc<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">data_set<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><name pos:line="13" pos:column="32">GSS_C_EMPTY_BUFFER<pos:position pos:line="13" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="51"/></decl_stmt>
<cpp:else pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">else<pos:position pos:line="14" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">gss_buffer_desc<pos:position pos:line="15" pos:column="20"/></name></type> <name pos:line="15" pos:column="21">type_id<pos:position pos:line="15" pos:column="28"/></name> <init pos:line="15" pos:column="29">= <expr><name pos:line="15" pos:column="31">GSS_C_EMPTY_BUFFER<pos:position pos:line="15" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="50"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">krb5_context<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">context<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><name pos:line="18" pos:column="28">NULL<pos:position pos:line="18" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">krb5_error_code<pos:position pos:line="19" pos:column="20"/></name></type> <name pos:line="19" pos:column="21">ret<pos:position pos:line="19" pos:column="24"/></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">long<pos:position pos:line="20" pos:column="9"/></name></type> <name pos:line="20" pos:column="10">length<pos:position pos:line="20" pos:column="16"/></name> <init pos:line="20" pos:column="17">= <expr><literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="21" pos:column="5">static<pos:position pos:line="21" pos:column="11"/></specifier> <type><name pos:line="21" pos:column="12">int<pos:position pos:line="21" pos:column="15"/></name></type> <name pos:line="21" pos:column="16">err<pos:position pos:line="21" pos:column="19"/></name> <init pos:line="21" pos:column="20">= <expr><literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">opt<pos:position pos:line="22" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="14">log<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="23">norealm<pos:position pos:line="22" pos:column="30"/></name> <init pos:line="22" pos:column="31">= <expr><literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">OM_uint32<pos:position pos:line="23" pos:column="14"/></name></type> <name pos:line="23" pos:column="15">ret_flags<pos:position pos:line="23" pos:column="24"/></name> <init pos:line="23" pos:column="25">= <expr><literal type="number" pos:line="23" pos:column="27">0<pos:position pos:line="23" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="23" pos:column="30">spnego_flag<pos:position pos:line="23" pos:column="41"/></name> <init pos:line="23" pos:column="42">= <expr><literal type="number" pos:line="23" pos:column="44">0<pos:position pos:line="23" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">service_name<pos:position pos:line="24" pos:column="23"/></name> <init pos:line="24" pos:column="24">= <expr><operator pos:line="24" pos:column="26">(<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">char<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">*<pos:position pos:line="24" pos:column="33"/></operator><operator pos:line="24" pos:column="33">)<pos:position pos:line="24" pos:column="34"/></operator> <literal type="string" pos:line="24" pos:column="35">"HTTP"<pos:position pos:line="24" pos:column="41"/></literal></expr></init></decl>, <modifier pos:line="24" pos:column="43">*<pos:position pos:line="24" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="24" pos:column="44">host_name<pos:position pos:line="24" pos:column="53"/></name> <init pos:line="24" pos:column="54">= <expr><name pos:line="24" pos:column="56">NULL<pos:position pos:line="24" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="61"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">token<pos:position pos:line="25" pos:column="16"/></name> <init pos:line="25" pos:column="17">= <expr><name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">service_principal<pos:position pos:line="26" pos:column="28"/></name> <init pos:line="26" pos:column="29">= <expr><name pos:line="26" pos:column="31">NULL<pos:position pos:line="26" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">char<pos:position pos:line="27" pos:column="9"/></name> <modifier pos:line="27" pos:column="10">*<pos:position pos:line="27" pos:column="11"/></modifier></type><name pos:line="27" pos:column="11">keytab_name<pos:position pos:line="27" pos:column="22"/></name> <init pos:line="27" pos:column="23">= <expr><name pos:line="27" pos:column="25">NULL<pos:position pos:line="27" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">char<pos:position pos:line="28" pos:column="9"/></name> <modifier pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></modifier></type><name pos:line="28" pos:column="11">keytab_name_env<pos:position pos:line="28" pos:column="26"/></name> <init pos:line="28" pos:column="27">= <expr><name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name></type> <name><name pos:line="29" pos:column="10">default_keytab<pos:position pos:line="29" pos:column="24"/></name><index pos:line="29" pos:column="24">[<expr><name pos:line="29" pos:column="25">MAXPATHLEN<pos:position pos:line="29" pos:column="35"/></name></expr>]<pos:position pos:line="29" pos:column="36"/></index></name></decl>;<pos:position pos:line="29" pos:column="37"/></decl_stmt>
<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">HAVE_KRB5_MEMORY_KEYTAB<pos:position pos:line="30" pos:column="28"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">memory_keytab_name<pos:position pos:line="31" pos:column="29"/></name> <init pos:line="31" pos:column="30">= <expr><name pos:line="31" pos:column="32">NULL<pos:position pos:line="31" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="37"/></decl_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">char<pos:position pos:line="33" pos:column="9"/></name> <modifier pos:line="33" pos:column="10">*<pos:position pos:line="33" pos:column="11"/></modifier></type><name pos:line="33" pos:column="11">rcache_type<pos:position pos:line="33" pos:column="22"/></name> <init pos:line="33" pos:column="23">= <expr><name pos:line="33" pos:column="25">NULL<pos:position pos:line="33" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name> <modifier pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></modifier></type><name pos:line="34" pos:column="11">rcache_type_env<pos:position pos:line="34" pos:column="26"/></name> <init pos:line="34" pos:column="27">= <expr><name pos:line="34" pos:column="29">NULL<pos:position pos:line="34" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name> <modifier pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></modifier></type><name pos:line="35" pos:column="11">rcache_dir<pos:position pos:line="35" pos:column="21"/></name> <init pos:line="35" pos:column="22">= <expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name> <modifier pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></modifier></type><name pos:line="36" pos:column="11">rcache_dir_env<pos:position pos:line="36" pos:column="25"/></name> <init pos:line="36" pos:column="26">= <expr><name pos:line="36" pos:column="28">NULL<pos:position pos:line="36" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">OM_uint32<pos:position pos:line="37" pos:column="14"/></name></type> <name pos:line="37" pos:column="15">major_status<pos:position pos:line="37" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="37" pos:column="29">minor_status<pos:position pos:line="37" pos:column="41"/></name></decl>;<pos:position pos:line="37" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">gss_ctx_id_t<pos:position pos:line="38" pos:column="17"/></name></type> <name pos:line="38" pos:column="18">gss_context<pos:position pos:line="38" pos:column="29"/></name> <init pos:line="38" pos:column="30">= <expr><name pos:line="38" pos:column="32">GSS_C_NO_CONTEXT<pos:position pos:line="38" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">gss_name_t<pos:position pos:line="39" pos:column="15"/></name></type> <name pos:line="39" pos:column="16">client_name<pos:position pos:line="39" pos:column="27"/></name> <init pos:line="39" pos:column="28">= <expr><name pos:line="39" pos:column="30">GSS_C_NO_NAME<pos:position pos:line="39" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">gss_name_t<pos:position pos:line="40" pos:column="15"/></name></type> <name pos:line="40" pos:column="16">server_name<pos:position pos:line="40" pos:column="27"/></name> <init pos:line="40" pos:column="28">= <expr><name pos:line="40" pos:column="30">GSS_C_NO_NAME<pos:position pos:line="40" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">gss_cred_id_t<pos:position pos:line="41" pos:column="18"/></name></type> <name pos:line="41" pos:column="19">server_creds<pos:position pos:line="41" pos:column="31"/></name> <init pos:line="41" pos:column="32">= <expr><name pos:line="41" pos:column="34">GSS_C_NO_CREDENTIAL<pos:position pos:line="41" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">gss_buffer_desc<pos:position pos:line="42" pos:column="20"/></name></type> <name pos:line="42" pos:column="21">service<pos:position pos:line="42" pos:column="28"/></name> <init pos:line="42" pos:column="29">= <expr><name pos:line="42" pos:column="31">GSS_C_EMPTY_BUFFER<pos:position pos:line="42" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">gss_buffer_desc<pos:position pos:line="43" pos:column="20"/></name></type> <name pos:line="43" pos:column="21">input_token<pos:position pos:line="43" pos:column="32"/></name> <init pos:line="43" pos:column="33">= <expr><name pos:line="43" pos:column="35">GSS_C_EMPTY_BUFFER<pos:position pos:line="43" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="44" pos:column="5">gss_buffer_desc<pos:position pos:line="44" pos:column="20"/></name></type> <name pos:line="44" pos:column="21">output_token<pos:position pos:line="44" pos:column="33"/></name> <init pos:line="44" pos:column="34">= <expr><name pos:line="44" pos:column="36">GSS_C_EMPTY_BUFFER<pos:position pos:line="44" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="45" pos:column="5">const<pos:position pos:line="45" pos:column="10"/></specifier> <name pos:line="45" pos:column="11">unsigned<pos:position pos:line="45" pos:column="19"/></name> <name pos:line="45" pos:column="20">char<pos:position pos:line="45" pos:column="24"/></name> <modifier pos:line="45" pos:column="25">*<pos:position pos:line="45" pos:column="26"/></modifier></type><name pos:line="45" pos:column="26">kerberosToken<pos:position pos:line="45" pos:column="39"/></name> <init pos:line="45" pos:column="40">= <expr><name pos:line="45" pos:column="42">NULL<pos:position pos:line="45" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="46" pos:column="5">const<pos:position pos:line="46" pos:column="10"/></specifier> <name pos:line="46" pos:column="11">unsigned<pos:position pos:line="46" pos:column="19"/></name> <name pos:line="46" pos:column="20">char<pos:position pos:line="46" pos:column="24"/></name> <modifier pos:line="46" pos:column="25">*<pos:position pos:line="46" pos:column="26"/></modifier></type><name pos:line="46" pos:column="26">spnegoToken<pos:position pos:line="46" pos:column="37"/></name> <init pos:line="46" pos:column="38">= <expr><name pos:line="46" pos:column="40">NULL<pos:position pos:line="46" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">size_t<pos:position pos:line="47" pos:column="11"/></name></type> <name pos:line="47" pos:column="12">spnegoTokenLength<pos:position pos:line="47" pos:column="29"/></name> <init pos:line="47" pos:column="30">= <expr><literal type="number" pos:line="47" pos:column="32">0<pos:position pos:line="47" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">setbuf<pos:position pos:line="49" pos:column="11"/></name><argument_list pos:line="49" pos:column="11">(<argument><expr><name pos:line="49" pos:column="12">stdout<pos:position pos:line="49" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="20">NULL<pos:position pos:line="49" pos:column="24"/></name></expr></argument>)<pos:position pos:line="49" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">setbuf<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name pos:line="50" pos:column="12">stdin<pos:position pos:line="50" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="19">NULL<pos:position pos:line="50" pos:column="23"/></name></expr></argument>)<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="25"/></expr_stmt>

    <while pos:line="52" pos:column="5">while <condition pos:line="52" pos:column="11">(<expr><operator pos:line="52" pos:column="12">-<pos:position pos:line="52" pos:column="13"/></operator><literal type="number" pos:line="52" pos:column="13">1<pos:position pos:line="52" pos:column="14"/></literal> <operator pos:line="52" pos:column="15">!=<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="18">(<pos:position pos:line="52" pos:column="19"/></operator><name pos:line="52" pos:column="19">opt<pos:position pos:line="52" pos:column="22"/></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <call><name pos:line="52" pos:column="25">getopt<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">argc<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="38">argv<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="44">"dirs:k:c:t:"<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call><operator pos:line="52" pos:column="58">)<pos:position pos:line="52" pos:column="59"/></operator></expr>)<pos:position pos:line="52" pos:column="60"/></condition> <block pos:line="52" pos:column="61">{
        <switch pos:line="53" pos:column="9">switch <condition pos:line="53" pos:column="16">(<expr><name pos:line="53" pos:column="17">opt<pos:position pos:line="53" pos:column="20"/></name></expr>)<pos:position pos:line="53" pos:column="21"/></condition> <block pos:line="53" pos:column="22">{
        <case pos:line="54" pos:column="9">case <expr><literal type="char" pos:line="54" pos:column="14">'d'<pos:position pos:line="54" pos:column="17"/></literal></expr>:<pos:position pos:line="54" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="55" pos:column="13">debug_enabled<pos:position pos:line="55" pos:column="26"/></name> <operator pos:line="55" pos:column="27">=<pos:position pos:line="55" pos:column="28"/></operator> <literal type="number" pos:line="55" pos:column="29">1<pos:position pos:line="55" pos:column="30"/></literal></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
            <break pos:line="56" pos:column="13">break;<pos:position pos:line="56" pos:column="19"/></break>
        <case pos:line="57" pos:column="9">case <expr><literal type="char" pos:line="57" pos:column="14">'i'<pos:position pos:line="57" pos:column="17"/></literal></expr>:<pos:position pos:line="57" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="58" pos:column="13">log<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">=<pos:position pos:line="58" pos:column="18"/></operator> <literal type="number" pos:line="58" pos:column="19">1<pos:position pos:line="58" pos:column="20"/></literal></expr>;<pos:position pos:line="58" pos:column="21"/></expr_stmt>
            <break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break>
        <case pos:line="60" pos:column="9">case <expr><literal type="char" pos:line="60" pos:column="14">'r'<pos:position pos:line="60" pos:column="17"/></literal></expr>:<pos:position pos:line="60" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="61" pos:column="13">norealm<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <literal type="number" pos:line="61" pos:column="23">1<pos:position pos:line="61" pos:column="24"/></literal></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>
            <break pos:line="62" pos:column="13">break;<pos:position pos:line="62" pos:column="19"/></break>
        <case pos:line="63" pos:column="9">case <expr><literal type="char" pos:line="63" pos:column="14">'k'<pos:position pos:line="63" pos:column="17"/></literal></expr>:<pos:position pos:line="63" pos:column="18"/></case>
<cpp:if pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">if<pos:position pos:line="64" pos:column="4"/></cpp:directive> <expr><name pos:line="64" pos:column="5">HAVE_SYS_STAT_H<pos:position pos:line="64" pos:column="20"/></name></expr></cpp:if>
            <decl_stmt><decl><type><name><name pos:line="65" pos:column="13">struct<pos:position pos:line="65" pos:column="19"/></name> <name pos:line="65" pos:column="20">stat<pos:position pos:line="65" pos:column="24"/></name></name></type> <name pos:line="65" pos:column="25">fstat<pos:position pos:line="65" pos:column="30"/></name></decl>;<pos:position pos:line="65" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="66" pos:column="13">char<pos:position pos:line="66" pos:column="17"/></name> <modifier pos:line="66" pos:column="18">*<pos:position pos:line="66" pos:column="19"/></modifier></type><name pos:line="66" pos:column="19">ktp<pos:position pos:line="66" pos:column="22"/></name></decl>;<pos:position pos:line="66" pos:column="23"/></decl_stmt>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">optarg<pos:position pos:line="68" pos:column="23"/></name></expr>)<pos:position pos:line="68" pos:column="24"/></condition><then pos:line="68" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="17">keytab_name<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <call><name pos:line="69" pos:column="31">xstrdup<pos:position pos:line="69" pos:column="38"/></name><argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">optarg<pos:position pos:line="69" pos:column="45"/></name></expr></argument>)<pos:position pos:line="69" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="47"/></expr_stmt></block></then>
            <else pos:line="70" pos:column="13">else <block pos:line="70" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">fprintf<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">stderr<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="33">"ERROR: keytab file not given\n"<pos:position pos:line="71" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">exit<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><literal type="number" pos:line="72" pos:column="22">1<pos:position pos:line="72" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="73" pos:column="14"/></block></else></if>
            <comment type="block" pos:line="74" pos:column="13">/*
             * Some sanity checks
             */</comment>
<cpp:if pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">if<pos:position pos:line="77" pos:column="4"/></cpp:directive> <expr><name pos:line="77" pos:column="5">HAVE_SYS_STAT_H<pos:position pos:line="77" pos:column="20"/></name></expr></cpp:if>
            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><operator pos:line="78" pos:column="17">(<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">ktp<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">=<pos:position pos:line="78" pos:column="22"/></operator><call><name pos:line="78" pos:column="22">strchr<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">keytab_name<pos:position pos:line="78" pos:column="40"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="78" pos:column="41">':'<pos:position pos:line="78" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="45"/></argument_list></call><operator pos:line="78" pos:column="45">)<pos:position pos:line="78" pos:column="46"/></operator></expr>)<pos:position pos:line="78" pos:column="47"/></condition><then pos:line="78" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><name pos:line="79" pos:column="17">ktp<pos:position pos:line="79" pos:column="20"/></name><operator pos:line="79" pos:column="20">++<pos:position pos:line="79" pos:column="22"/></operator></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt></block></then>
            <else pos:line="80" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="81" pos:column="17">ktp<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator><name pos:line="81" pos:column="21">keytab_name<pos:position pos:line="81" pos:column="32"/></name></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt></block></else></if>
            <if pos:line="82" pos:column="13">if <condition pos:line="82" pos:column="16">(<expr><call><name pos:line="82" pos:column="17">stat<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><operator pos:line="82" pos:column="22">(<pos:position pos:line="82" pos:column="23"/></operator><specifier pos:line="82" pos:column="23">const<pos:position pos:line="82" pos:column="28"/></specifier> <name pos:line="82" pos:column="29">char<pos:position pos:line="82" pos:column="33"/></name><operator pos:line="82" pos:column="33">*<pos:position pos:line="82" pos:column="34"/></operator><operator pos:line="82" pos:column="34">)<pos:position pos:line="82" pos:column="35"/></operator><name pos:line="82" pos:column="35">ktp<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="40">&amp;<pos:position pos:line="82" pos:column="45"/></operator><name pos:line="82" pos:column="41">fstat<pos:position pos:line="82" pos:column="46"/></name></expr></argument>)<pos:position pos:line="82" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="48"/></condition><then pos:line="82" pos:column="48"> <block pos:line="82" pos:column="49">{
                <if pos:line="83" pos:column="17">if <condition pos:line="83" pos:column="20">(<expr><name pos:line="83" pos:column="21">ENOENT<pos:position pos:line="83" pos:column="27"/></name> <operator pos:line="83" pos:column="28">==<pos:position pos:line="83" pos:column="30"/></operator> <name pos:line="83" pos:column="31">errno<pos:position pos:line="83" pos:column="36"/></name></expr>)<pos:position pos:line="83" pos:column="37"/></condition><then pos:line="83" pos:column="37">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="21">fprintf<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">stderr<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="37">"ERROR: keytab file %s does not exist\n"<pos:position pos:line="84" pos:column="77"/></literal></expr></argument>,<argument><expr><name pos:line="84" pos:column="78">keytab_name<pos:position pos:line="84" pos:column="89"/></name></expr></argument>)<pos:position pos:line="84" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="91"/></expr_stmt></block></then>
                <else pos:line="85" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="21">fprintf<pos:position pos:line="86" pos:column="28"/></name><argument_list pos:line="86" pos:column="28">(<argument><expr><name pos:line="86" pos:column="29">stderr<pos:position pos:line="86" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="37">"ERROR: Error %s during stat of keytab file %s\n"<pos:position pos:line="86" pos:column="86"/></literal></expr></argument>,<argument><expr><call><name pos:line="86" pos:column="87">strerror<pos:position pos:line="86" pos:column="95"/></name><argument_list pos:line="86" pos:column="95">(<argument><expr><name pos:line="86" pos:column="96">errno<pos:position pos:line="86" pos:column="101"/></name></expr></argument>)<pos:position pos:line="86" pos:column="102"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="86" pos:column="103">keytab_name<pos:position pos:line="86" pos:column="114"/></name></expr></argument>)<pos:position pos:line="86" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="116"/></expr_stmt></block></else></if>
                <expr_stmt><expr><call><name pos:line="87" pos:column="17">exit<pos:position pos:line="87" pos:column="21"/></name><argument_list pos:line="87" pos:column="21">(<argument><expr><literal type="number" pos:line="87" pos:column="22">1<pos:position pos:line="87" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="88" pos:column="14"/></block></then> <elseif pos:line="88" pos:column="15">else <if pos:line="88" pos:column="20">if <condition pos:line="88" pos:column="23">(<expr><operator pos:line="88" pos:column="24">!<pos:position pos:line="88" pos:column="25"/></operator><call><name pos:line="88" pos:column="25">S_ISREG<pos:position pos:line="88" pos:column="32"/></name><argument_list pos:line="88" pos:column="32">(<argument><expr><name><name pos:line="88" pos:column="33">fstat<pos:position pos:line="88" pos:column="38"/></name><operator pos:line="88" pos:column="38">.<pos:position pos:line="88" pos:column="39"/></operator><name pos:line="88" pos:column="39">st_mode<pos:position pos:line="88" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="48"/></condition><then pos:line="88" pos:column="48"> <block pos:line="88" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="89" pos:column="17">fprintf<pos:position pos:line="89" pos:column="24"/></name><argument_list pos:line="89" pos:column="24">(<argument><expr><name pos:line="89" pos:column="25">stderr<pos:position pos:line="89" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="33">"ERROR: keytab file %s is not a file\n"<pos:position pos:line="89" pos:column="72"/></literal></expr></argument>,<argument><expr><name pos:line="89" pos:column="73">keytab_name<pos:position pos:line="89" pos:column="84"/></name></expr></argument>)<pos:position pos:line="89" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="86"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">exit<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><literal type="number" pos:line="90" pos:column="22">1<pos:position pos:line="90" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if></elseif></if>
<cpp:endif pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">endif<pos:position pos:line="92" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">if<pos:position pos:line="93" pos:column="4"/></cpp:directive> <expr><name pos:line="93" pos:column="5">HAVE_UNISTD_H<pos:position pos:line="93" pos:column="18"/></name></expr></cpp:if>
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><call><name pos:line="94" pos:column="17">access<pos:position pos:line="94" pos:column="23"/></name><argument_list pos:line="94" pos:column="23">(<argument><expr><name pos:line="94" pos:column="24">ktp<pos:position pos:line="94" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="29">R_OK<pos:position pos:line="94" pos:column="33"/></name></expr></argument>)<pos:position pos:line="94" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="35"/></condition><then pos:line="94" pos:column="35"> <block pos:line="94" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="95" pos:column="17">fprintf<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">stderr<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="33">"ERROR: keytab file %s is not accessible\n"<pos:position pos:line="95" pos:column="76"/></literal></expr></argument>,<argument><expr><name pos:line="95" pos:column="77">keytab_name<pos:position pos:line="95" pos:column="88"/></name></expr></argument>)<pos:position pos:line="95" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="96" pos:column="17">exit<pos:position pos:line="96" pos:column="21"/></name><argument_list pos:line="96" pos:column="21">(<argument><expr><literal type="number" pos:line="96" pos:column="22">1<pos:position pos:line="96" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="97" pos:column="14"/></block></then></if>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="99" pos:column="13">break;<pos:position pos:line="99" pos:column="19"/></break>
        <case pos:line="100" pos:column="9">case <expr><literal type="char" pos:line="100" pos:column="14">'c'<pos:position pos:line="100" pos:column="17"/></literal></expr>:<pos:position pos:line="100" pos:column="18"/></case>
<cpp:if pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">if<pos:position pos:line="101" pos:column="4"/></cpp:directive> <expr><name pos:line="101" pos:column="5">HAVE_SYS_STAT_H<pos:position pos:line="101" pos:column="20"/></name></expr></cpp:if>
            <decl_stmt><decl><type><name><name pos:line="102" pos:column="13">struct<pos:position pos:line="102" pos:column="19"/></name> <name pos:line="102" pos:column="20">stat<pos:position pos:line="102" pos:column="24"/></name></name></type> <name pos:line="102" pos:column="25">dstat<pos:position pos:line="102" pos:column="30"/></name></decl>;<pos:position pos:line="102" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><name pos:line="104" pos:column="17">optarg<pos:position pos:line="104" pos:column="23"/></name></expr>)<pos:position pos:line="104" pos:column="24"/></condition><then pos:line="104" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="17">rcache_dir<pos:position pos:line="105" pos:column="27"/></name> <operator pos:line="105" pos:column="28">=<pos:position pos:line="105" pos:column="29"/></operator> <call><name pos:line="105" pos:column="30">xstrdup<pos:position pos:line="105" pos:column="37"/></name><argument_list pos:line="105" pos:column="37">(<argument><expr><name pos:line="105" pos:column="38">optarg<pos:position pos:line="105" pos:column="44"/></name></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt></block></then>
            <else pos:line="106" pos:column="13">else <block pos:line="106" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="107" pos:column="17">fprintf<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">stderr<pos:position pos:line="107" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="33">"ERROR: replay cache directory not given\n"<pos:position pos:line="107" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="78"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">exit<pos:position pos:line="108" pos:column="21"/></name><argument_list pos:line="108" pos:column="21">(<argument><expr><literal type="number" pos:line="108" pos:column="22">1<pos:position pos:line="108" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="109" pos:column="14"/></block></else></if>
            <comment type="block" pos:line="110" pos:column="13">/*
             * Some sanity checks
             */</comment>
<cpp:if pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">if<pos:position pos:line="113" pos:column="4"/></cpp:directive> <expr><name pos:line="113" pos:column="5">HAVE_SYS_STAT_H<pos:position pos:line="113" pos:column="20"/></name></expr></cpp:if>
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><call><name pos:line="114" pos:column="17">stat<pos:position pos:line="114" pos:column="21"/></name><argument_list pos:line="114" pos:column="21">(<argument><expr><operator pos:line="114" pos:column="22">(<pos:position pos:line="114" pos:column="23"/></operator><specifier pos:line="114" pos:column="23">const<pos:position pos:line="114" pos:column="28"/></specifier> <name pos:line="114" pos:column="29">char<pos:position pos:line="114" pos:column="33"/></name><operator pos:line="114" pos:column="33">*<pos:position pos:line="114" pos:column="34"/></operator><operator pos:line="114" pos:column="34">)<pos:position pos:line="114" pos:column="35"/></operator><name pos:line="114" pos:column="35">rcache_dir<pos:position pos:line="114" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="114" pos:column="47">&amp;<pos:position pos:line="114" pos:column="52"/></operator><name pos:line="114" pos:column="48">dstat<pos:position pos:line="114" pos:column="53"/></name></expr></argument>)<pos:position pos:line="114" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="114" pos:column="55"/></condition><then pos:line="114" pos:column="55"> <block pos:line="114" pos:column="56">{
                <if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><name pos:line="115" pos:column="21">ENOENT<pos:position pos:line="115" pos:column="27"/></name> <operator pos:line="115" pos:column="28">==<pos:position pos:line="115" pos:column="30"/></operator> <name pos:line="115" pos:column="31">errno<pos:position pos:line="115" pos:column="36"/></name></expr>)<pos:position pos:line="115" pos:column="37"/></condition><then pos:line="115" pos:column="37">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="21">fprintf<pos:position pos:line="116" pos:column="28"/></name><argument_list pos:line="116" pos:column="28">(<argument><expr><name pos:line="116" pos:column="29">stderr<pos:position pos:line="116" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="37">"ERROR: replay cache directory %s does not exist\n"<pos:position pos:line="116" pos:column="88"/></literal></expr></argument>,<argument><expr><name pos:line="116" pos:column="89">rcache_dir<pos:position pos:line="116" pos:column="99"/></name></expr></argument>)<pos:position pos:line="116" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="101"/></expr_stmt></block></then>
                <else pos:line="117" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="21">fprintf<pos:position pos:line="118" pos:column="28"/></name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">stderr<pos:position pos:line="118" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="37">"ERROR: Error %s during stat of replay cache directory %s\n"<pos:position pos:line="118" pos:column="97"/></literal></expr></argument>,<argument><expr><call><name pos:line="118" pos:column="98">strerror<pos:position pos:line="118" pos:column="106"/></name><argument_list pos:line="118" pos:column="106">(<argument><expr><name pos:line="118" pos:column="107">errno<pos:position pos:line="118" pos:column="112"/></name></expr></argument>)<pos:position pos:line="118" pos:column="113"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="118" pos:column="114">rcache_dir<pos:position pos:line="118" pos:column="124"/></name></expr></argument>)<pos:position pos:line="118" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="126"/></expr_stmt></block></else></if>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">exit<pos:position pos:line="119" pos:column="21"/></name><argument_list pos:line="119" pos:column="21">(<argument><expr><literal type="number" pos:line="119" pos:column="22">1<pos:position pos:line="119" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="120" pos:column="14"/></block></then> <elseif pos:line="120" pos:column="15">else <if pos:line="120" pos:column="20">if <condition pos:line="120" pos:column="23">(<expr><operator pos:line="120" pos:column="24">!<pos:position pos:line="120" pos:column="25"/></operator><call><name pos:line="120" pos:column="25">S_ISDIR<pos:position pos:line="120" pos:column="32"/></name><argument_list pos:line="120" pos:column="32">(<argument><expr><name><name pos:line="120" pos:column="33">dstat<pos:position pos:line="120" pos:column="38"/></name><operator pos:line="120" pos:column="38">.<pos:position pos:line="120" pos:column="39"/></operator><name pos:line="120" pos:column="39">st_mode<pos:position pos:line="120" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="120" pos:column="48"/></condition><then pos:line="120" pos:column="48"> <block pos:line="120" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">fprintf<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><name pos:line="121" pos:column="25">stderr<pos:position pos:line="121" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="33">"ERROR: replay cache directory %s is not a directory\n"<pos:position pos:line="121" pos:column="88"/></literal></expr></argument>,<argument><expr><name pos:line="121" pos:column="89">rcache_dir<pos:position pos:line="121" pos:column="99"/></name></expr></argument>)<pos:position pos:line="121" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="101"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="122" pos:column="17">exit<pos:position pos:line="122" pos:column="21"/></name><argument_list pos:line="122" pos:column="21">(<argument><expr><literal type="number" pos:line="122" pos:column="22">1<pos:position pos:line="122" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="123" pos:column="14"/></block></then></if></elseif></if>
<cpp:endif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">endif<pos:position pos:line="124" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">if<pos:position pos:line="125" pos:column="4"/></cpp:directive> <expr><name pos:line="125" pos:column="5">HAVE_UNISTD_H<pos:position pos:line="125" pos:column="18"/></name></expr></cpp:if>
            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><call><name pos:line="126" pos:column="17">access<pos:position pos:line="126" pos:column="23"/></name><argument_list pos:line="126" pos:column="23">(<argument><expr><name pos:line="126" pos:column="24">rcache_dir<pos:position pos:line="126" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="36">W_OK<pos:position pos:line="126" pos:column="40"/></name></expr></argument>)<pos:position pos:line="126" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="42"/></condition><then pos:line="126" pos:column="42"> <block pos:line="126" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">fprintf<pos:position pos:line="127" pos:column="24"/></name><argument_list pos:line="127" pos:column="24">(<argument><expr><name pos:line="127" pos:column="25">stderr<pos:position pos:line="127" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="33">"ERROR: replay cache directory %s is not accessible\n"<pos:position pos:line="127" pos:column="87"/></literal></expr></argument>,<argument><expr><name pos:line="127" pos:column="88">rcache_dir<pos:position pos:line="127" pos:column="98"/></name></expr></argument>)<pos:position pos:line="127" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="100"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="128" pos:column="17">exit<pos:position pos:line="128" pos:column="21"/></name><argument_list pos:line="128" pos:column="21">(<argument><expr><literal type="number" pos:line="128" pos:column="22">1<pos:position pos:line="128" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="129" pos:column="14"/></block></then></if>
<cpp:endif pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">endif<pos:position pos:line="130" pos:column="7"/></cpp:directive></cpp:endif>
            <break pos:line="131" pos:column="13">break;<pos:position pos:line="131" pos:column="19"/></break>
        <case pos:line="132" pos:column="9">case <expr><literal type="char" pos:line="132" pos:column="14">'t'<pos:position pos:line="132" pos:column="17"/></literal></expr>:<pos:position pos:line="132" pos:column="18"/></case>
            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><name pos:line="133" pos:column="17">optarg<pos:position pos:line="133" pos:column="23"/></name></expr>)<pos:position pos:line="133" pos:column="24"/></condition><then pos:line="133" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name pos:line="134" pos:column="17">rcache_type<pos:position pos:line="134" pos:column="28"/></name> <operator pos:line="134" pos:column="29">=<pos:position pos:line="134" pos:column="30"/></operator> <call><name pos:line="134" pos:column="31">xstrdup<pos:position pos:line="134" pos:column="38"/></name><argument_list pos:line="134" pos:column="38">(<argument><expr><name pos:line="134" pos:column="39">optarg<pos:position pos:line="134" pos:column="45"/></name></expr></argument>)<pos:position pos:line="134" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="47"/></expr_stmt></block></then>
            <else pos:line="135" pos:column="13">else <block pos:line="135" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">fprintf<pos:position pos:line="136" pos:column="24"/></name><argument_list pos:line="136" pos:column="24">(<argument><expr><name pos:line="136" pos:column="25">stderr<pos:position pos:line="136" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="33">"ERROR: replay cache type not given\n"<pos:position pos:line="136" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="137" pos:column="17">exit<pos:position pos:line="137" pos:column="21"/></name><argument_list pos:line="137" pos:column="21">(<argument><expr><literal type="number" pos:line="137" pos:column="22">1<pos:position pos:line="137" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="138" pos:column="14"/></block></else></if>
            <break pos:line="139" pos:column="13">break;<pos:position pos:line="139" pos:column="19"/></break>
        <case pos:line="140" pos:column="9">case <expr><literal type="char" pos:line="140" pos:column="14">'s'<pos:position pos:line="140" pos:column="17"/></literal></expr>:<pos:position pos:line="140" pos:column="18"/></case>
            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><name pos:line="141" pos:column="17">optarg<pos:position pos:line="141" pos:column="23"/></name></expr>)<pos:position pos:line="141" pos:column="24"/></condition><then pos:line="141" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="17">service_principal<pos:position pos:line="142" pos:column="34"/></name> <operator pos:line="142" pos:column="35">=<pos:position pos:line="142" pos:column="36"/></operator> <call><name pos:line="142" pos:column="37">xstrdup<pos:position pos:line="142" pos:column="44"/></name><argument_list pos:line="142" pos:column="44">(<argument><expr><name pos:line="142" pos:column="45">optarg<pos:position pos:line="142" pos:column="51"/></name></expr></argument>)<pos:position pos:line="142" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="53"/></expr_stmt></block></then>
            <else pos:line="143" pos:column="13">else <block pos:line="143" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="144" pos:column="17">fprintf<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">(<argument><expr><name pos:line="144" pos:column="25">stderr<pos:position pos:line="144" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="33">"ERROR: service principal not given\n"<pos:position pos:line="144" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="73"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="145" pos:column="17">exit<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><literal type="number" pos:line="145" pos:column="22">1<pos:position pos:line="145" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="146" pos:column="14"/></block></else></if>
            <break pos:line="147" pos:column="13">break;<pos:position pos:line="147" pos:column="19"/></break>
        <default pos:line="148" pos:column="9">default:<pos:position pos:line="148" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="149" pos:column="13">fprintf<pos:position pos:line="149" pos:column="20"/></name><argument_list pos:line="149" pos:column="20">(<argument><expr><name pos:line="149" pos:column="21">stderr<pos:position pos:line="149" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="29">"Usage: \n"<pos:position pos:line="149" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="150" pos:column="13">fprintf<pos:position pos:line="150" pos:column="20"/></name><argument_list pos:line="150" pos:column="20">(<argument><expr><name pos:line="150" pos:column="21">stderr<pos:position pos:line="150" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="29">"squid_kerb_auth [-d] [-i] [-s SPN] [-k keytab] [-c rcdir] [-t rctype]\n"<pos:position pos:line="150" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="151" pos:column="13">fprintf<pos:position pos:line="151" pos:column="20"/></name><argument_list pos:line="151" pos:column="20">(<argument><expr><name pos:line="151" pos:column="21">stderr<pos:position pos:line="151" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="29">"-d full debug\n"<pos:position pos:line="151" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="152" pos:column="13">fprintf<pos:position pos:line="152" pos:column="20"/></name><argument_list pos:line="152" pos:column="20">(<argument><expr><name pos:line="152" pos:column="21">stderr<pos:position pos:line="152" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="29">"-i informational messages\n"<pos:position pos:line="152" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">fprintf<pos:position pos:line="153" pos:column="20"/></name><argument_list pos:line="153" pos:column="20">(<argument><expr><name pos:line="153" pos:column="21">stderr<pos:position pos:line="153" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="29">"-r remove realm from username\n"<pos:position pos:line="153" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">fprintf<pos:position pos:line="154" pos:column="20"/></name><argument_list pos:line="154" pos:column="20">(<argument><expr><name pos:line="154" pos:column="21">stderr<pos:position pos:line="154" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="29">"-s service principal name\n"<pos:position pos:line="154" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="155" pos:column="13">fprintf<pos:position pos:line="155" pos:column="20"/></name><argument_list pos:line="155" pos:column="20">(<argument><expr><name pos:line="155" pos:column="21">stderr<pos:position pos:line="155" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="29">"-k keytab name\n"<pos:position pos:line="155" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">fprintf<pos:position pos:line="156" pos:column="20"/></name><argument_list pos:line="156" pos:column="20">(<argument><expr><name pos:line="156" pos:column="21">stderr<pos:position pos:line="156" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="29">"-c replay cache directory\n"<pos:position pos:line="156" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="157" pos:column="13">fprintf<pos:position pos:line="157" pos:column="20"/></name><argument_list pos:line="157" pos:column="20">(<argument><expr><name pos:line="157" pos:column="21">stderr<pos:position pos:line="157" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="29">"-t replay cache type\n"<pos:position pos:line="157" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="158" pos:column="13">fprintf<pos:position pos:line="158" pos:column="20"/></name><argument_list pos:line="158" pos:column="20">(<argument><expr><name pos:line="158" pos:column="21">stderr<pos:position pos:line="158" pos:column="27"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="159" pos:column="21">"The SPN can be set to GSS_C_NO_NAME to allow any entry from keytab\n"<pos:position pos:line="159" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="93"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="160" pos:column="13">fprintf<pos:position pos:line="160" pos:column="20"/></name><argument_list pos:line="160" pos:column="20">(<argument><expr><name pos:line="160" pos:column="21">stderr<pos:position pos:line="160" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="29">"default SPN is HTTP/fqdn@DEFAULT_REALM\n"<pos:position pos:line="160" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="161" pos:column="13">exit<pos:position pos:line="161" pos:column="17"/></name><argument_list pos:line="161" pos:column="17">(<argument><expr><literal type="number" pos:line="161" pos:column="18">0<pos:position pos:line="161" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="162" pos:column="10"/></block></switch>
    }<pos:position pos:line="163" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="165" pos:column="5">debug<pos:position pos:line="165" pos:column="10"/></name><argument_list pos:line="165" pos:column="10">(<argument><expr><operator pos:line="165" pos:column="11">(<pos:position pos:line="165" pos:column="12"/></operator><name pos:line="165" pos:column="12">char<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">*<pos:position pos:line="165" pos:column="18"/></operator><operator pos:line="165" pos:column="18">)<pos:position pos:line="165" pos:column="19"/></operator> <literal type="string" pos:line="165" pos:column="20">"%s| %s: INFO: Starting version %s\n"<pos:position pos:line="165" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="165" pos:column="59">LogTime<pos:position pos:line="165" pos:column="66"/></name><argument_list pos:line="165" pos:column="66">()<pos:position pos:line="165" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="165" pos:column="70">PROGRAM<pos:position pos:line="165" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="79">SQUID_KERB_AUTH_VERSION<pos:position pos:line="165" pos:column="102"/></name></expr></argument>)<pos:position pos:line="165" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="104"/></expr_stmt>
    <if pos:line="166" pos:column="5">if <condition pos:line="166" pos:column="8">(<expr><name pos:line="166" pos:column="9">service_principal<pos:position pos:line="166" pos:column="26"/></name> <operator pos:line="166" pos:column="27">&amp;&amp;<pos:position pos:line="166" pos:column="37"/></operator> <call><name pos:line="166" pos:column="30">strcasecmp<pos:position pos:line="166" pos:column="40"/></name><argument_list pos:line="166" pos:column="40">(<argument><expr><name pos:line="166" pos:column="41">service_principal<pos:position pos:line="166" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="60">"GSS_C_NO_NAME"<pos:position pos:line="166" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="77"/></condition><then pos:line="166" pos:column="77"> <block pos:line="166" pos:column="78">{
        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><operator pos:line="167" pos:column="13">!<pos:position pos:line="167" pos:column="14"/></operator><call><name pos:line="167" pos:column="14">strstr<pos:position pos:line="167" pos:column="20"/></name><argument_list pos:line="167" pos:column="20">(<argument><expr><name pos:line="167" pos:column="21">service_principal<pos:position pos:line="167" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="167" pos:column="39">"HTTP/"<pos:position pos:line="167" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="167" pos:column="48"/></condition><then pos:line="167" pos:column="48"> <block pos:line="167" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="168" pos:column="13">debug<pos:position pos:line="168" pos:column="18"/></name><argument_list pos:line="168" pos:column="18">(<argument><expr><operator pos:line="168" pos:column="19">(<pos:position pos:line="168" pos:column="20"/></operator><name pos:line="168" pos:column="20">char<pos:position pos:line="168" pos:column="24"/></name> <operator pos:line="168" pos:column="25">*<pos:position pos:line="168" pos:column="26"/></operator><operator pos:line="168" pos:column="26">)<pos:position pos:line="168" pos:column="27"/></operator> <literal type="string" pos:line="168" pos:column="28">"%s| %s: WARN: service_principal %s does not start with HTTP/\n"<pos:position pos:line="168" pos:column="92"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="169" pos:column="19">LogTime<pos:position pos:line="169" pos:column="26"/></name><argument_list pos:line="169" pos:column="26">()<pos:position pos:line="169" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="169" pos:column="30">PROGRAM<pos:position pos:line="169" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="169" pos:column="39">service_principal<pos:position pos:line="169" pos:column="56"/></name></expr></argument>)<pos:position pos:line="169" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="170" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="171" pos:column="9">service<pos:position pos:line="171" pos:column="16"/></name><operator pos:line="171" pos:column="16">.<pos:position pos:line="171" pos:column="17"/></operator><name pos:line="171" pos:column="17">value<pos:position pos:line="171" pos:column="22"/></name></name> <operator pos:line="171" pos:column="23">=<pos:position pos:line="171" pos:column="24"/></operator> <name pos:line="171" pos:column="25">service_principal<pos:position pos:line="171" pos:column="42"/></name></expr>;<pos:position pos:line="171" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="172" pos:column="9">service<pos:position pos:line="172" pos:column="16"/></name><operator pos:line="172" pos:column="16">.<pos:position pos:line="172" pos:column="17"/></operator><name pos:line="172" pos:column="17">length<pos:position pos:line="172" pos:column="23"/></name></name> <operator pos:line="172" pos:column="24">=<pos:position pos:line="172" pos:column="25"/></operator> <call><name pos:line="172" pos:column="26">strlen<pos:position pos:line="172" pos:column="32"/></name><argument_list pos:line="172" pos:column="32">(<argument><expr><operator pos:line="172" pos:column="33">(<pos:position pos:line="172" pos:column="34"/></operator><name pos:line="172" pos:column="34">char<pos:position pos:line="172" pos:column="38"/></name> <operator pos:line="172" pos:column="39">*<pos:position pos:line="172" pos:column="40"/></operator><operator pos:line="172" pos:column="40">)<pos:position pos:line="172" pos:column="41"/></operator> <name><name pos:line="172" pos:column="42">service<pos:position pos:line="172" pos:column="49"/></name><operator pos:line="172" pos:column="49">.<pos:position pos:line="172" pos:column="50"/></operator><name pos:line="172" pos:column="50">value<pos:position pos:line="172" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="172" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="173" pos:column="6"/></block></then> <else pos:line="173" pos:column="7">else <block pos:line="173" pos:column="12">{
        <expr_stmt><expr><name pos:line="174" pos:column="9">host_name<pos:position pos:line="174" pos:column="18"/></name> <operator pos:line="174" pos:column="19">=<pos:position pos:line="174" pos:column="20"/></operator> <call><name pos:line="174" pos:column="21">gethost_name<pos:position pos:line="174" pos:column="33"/></name><argument_list pos:line="174" pos:column="33">()<pos:position pos:line="174" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="36"/></expr_stmt>
        <if pos:line="175" pos:column="9">if <condition pos:line="175" pos:column="12">(<expr><operator pos:line="175" pos:column="13">!<pos:position pos:line="175" pos:column="14"/></operator><name pos:line="175" pos:column="14">host_name<pos:position pos:line="175" pos:column="23"/></name></expr>)<pos:position pos:line="175" pos:column="24"/></condition><then pos:line="175" pos:column="24"> <block pos:line="175" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="176" pos:column="13">fprintf<pos:position pos:line="176" pos:column="20"/></name><argument_list pos:line="176" pos:column="20">(<argument><expr><name pos:line="176" pos:column="21">stderr<pos:position pos:line="176" pos:column="27"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="177" pos:column="21">"%s| %s: FATAL: Local hostname could not be determined. Please specify the service principal\n"<pos:position pos:line="177" pos:column="116"/></literal></expr></argument>,
                    <argument><expr><call><name pos:line="178" pos:column="21">LogTime<pos:position pos:line="178" pos:column="28"/></name><argument_list pos:line="178" pos:column="28">()<pos:position pos:line="178" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="178" pos:column="32">PROGRAM<pos:position pos:line="178" pos:column="39"/></name></expr></argument>)<pos:position pos:line="178" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="179" pos:column="13">fprintf<pos:position pos:line="179" pos:column="20"/></name><argument_list pos:line="179" pos:column="20">(<argument><expr><name pos:line="179" pos:column="21">stdout<pos:position pos:line="179" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="29">"BH hostname error\n"<pos:position pos:line="179" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">exit<pos:position pos:line="180" pos:column="17"/></name><argument_list pos:line="180" pos:column="17">(<argument><expr><operator pos:line="180" pos:column="18">-<pos:position pos:line="180" pos:column="19"/></operator><literal type="number" pos:line="180" pos:column="19">1<pos:position pos:line="180" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="181" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="182" pos:column="9">service<pos:position pos:line="182" pos:column="16"/></name><operator pos:line="182" pos:column="16">.<pos:position pos:line="182" pos:column="17"/></operator><name pos:line="182" pos:column="17">value<pos:position pos:line="182" pos:column="22"/></name></name> <operator pos:line="182" pos:column="23">=<pos:position pos:line="182" pos:column="24"/></operator> <call><name pos:line="182" pos:column="25">xmalloc<pos:position pos:line="182" pos:column="32"/></name><argument_list pos:line="182" pos:column="32">(<argument><expr><call><name pos:line="182" pos:column="33">strlen<pos:position pos:line="182" pos:column="39"/></name><argument_list pos:line="182" pos:column="39">(<argument><expr><name pos:line="182" pos:column="40">service_name<pos:position pos:line="182" pos:column="52"/></name></expr></argument>)<pos:position pos:line="182" pos:column="53"/></argument_list></call> <operator pos:line="182" pos:column="54">+<pos:position pos:line="182" pos:column="55"/></operator> <call><name pos:line="182" pos:column="56">strlen<pos:position pos:line="182" pos:column="62"/></name><argument_list pos:line="182" pos:column="62">(<argument><expr><name pos:line="182" pos:column="63">host_name<pos:position pos:line="182" pos:column="72"/></name></expr></argument>)<pos:position pos:line="182" pos:column="73"/></argument_list></call> <operator pos:line="182" pos:column="74">+<pos:position pos:line="182" pos:column="75"/></operator> <literal type="number" pos:line="182" pos:column="76">2<pos:position pos:line="182" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="183" pos:column="9">snprintf<pos:position pos:line="183" pos:column="17"/></name><argument_list pos:line="183" pos:column="17">(<argument><expr><operator pos:line="183" pos:column="18">(<pos:position pos:line="183" pos:column="19"/></operator><name pos:line="183" pos:column="19">char<pos:position pos:line="183" pos:column="23"/></name> <operator pos:line="183" pos:column="24">*<pos:position pos:line="183" pos:column="25"/></operator><operator pos:line="183" pos:column="25">)<pos:position pos:line="183" pos:column="26"/></operator> <name><name pos:line="183" pos:column="27">service<pos:position pos:line="183" pos:column="34"/></name><operator pos:line="183" pos:column="34">.<pos:position pos:line="183" pos:column="35"/></operator><name pos:line="183" pos:column="35">value<pos:position pos:line="183" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name pos:line="183" pos:column="42">strlen<pos:position pos:line="183" pos:column="48"/></name><argument_list pos:line="183" pos:column="48">(<argument><expr><name pos:line="183" pos:column="49">service_name<pos:position pos:line="183" pos:column="61"/></name></expr></argument>)<pos:position pos:line="183" pos:column="62"/></argument_list></call> <operator pos:line="183" pos:column="63">+<pos:position pos:line="183" pos:column="64"/></operator> <call><name pos:line="183" pos:column="65">strlen<pos:position pos:line="183" pos:column="71"/></name><argument_list pos:line="183" pos:column="71">(<argument><expr><name pos:line="183" pos:column="72">host_name<pos:position pos:line="183" pos:column="81"/></name></expr></argument>)<pos:position pos:line="183" pos:column="82"/></argument_list></call> <operator pos:line="183" pos:column="83">+<pos:position pos:line="183" pos:column="84"/></operator> <literal type="number" pos:line="183" pos:column="85">2<pos:position pos:line="183" pos:column="86"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="184" pos:column="18">"%s@%s"<pos:position pos:line="184" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="184" pos:column="27">service_name<pos:position pos:line="184" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="41">host_name<pos:position pos:line="184" pos:column="50"/></name></expr></argument>)<pos:position pos:line="184" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="185" pos:column="9">service<pos:position pos:line="185" pos:column="16"/></name><operator pos:line="185" pos:column="16">.<pos:position pos:line="185" pos:column="17"/></operator><name pos:line="185" pos:column="17">length<pos:position pos:line="185" pos:column="23"/></name></name> <operator pos:line="185" pos:column="24">=<pos:position pos:line="185" pos:column="25"/></operator> <call><name pos:line="185" pos:column="26">strlen<pos:position pos:line="185" pos:column="32"/></name><argument_list pos:line="185" pos:column="32">(<argument><expr><operator pos:line="185" pos:column="33">(<pos:position pos:line="185" pos:column="34"/></operator><name pos:line="185" pos:column="34">char<pos:position pos:line="185" pos:column="38"/></name> <operator pos:line="185" pos:column="39">*<pos:position pos:line="185" pos:column="40"/></operator><operator pos:line="185" pos:column="40">)<pos:position pos:line="185" pos:column="41"/></operator> <name><name pos:line="185" pos:column="42">service<pos:position pos:line="185" pos:column="49"/></name><operator pos:line="185" pos:column="49">.<pos:position pos:line="185" pos:column="50"/></operator><name pos:line="185" pos:column="50">value<pos:position pos:line="185" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="186" pos:column="9">xfree<pos:position pos:line="186" pos:column="14"/></name><argument_list pos:line="186" pos:column="14">(<argument><expr><name pos:line="186" pos:column="15">host_name<pos:position pos:line="186" pos:column="24"/></name></expr></argument>)<pos:position pos:line="186" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="187" pos:column="6"/></block></else></if>

    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><name pos:line="189" pos:column="9">rcache_type<pos:position pos:line="189" pos:column="20"/></name></expr>)<pos:position pos:line="189" pos:column="21"/></condition><then pos:line="189" pos:column="21"> <block pos:line="189" pos:column="22">{
        <expr_stmt><expr><name pos:line="190" pos:column="9">rcache_type_env<pos:position pos:line="190" pos:column="24"/></name> <operator pos:line="190" pos:column="25">=<pos:position pos:line="190" pos:column="26"/></operator> <operator pos:line="190" pos:column="27">(<pos:position pos:line="190" pos:column="28"/></operator><name pos:line="190" pos:column="28">char<pos:position pos:line="190" pos:column="32"/></name> <operator pos:line="190" pos:column="33">*<pos:position pos:line="190" pos:column="34"/></operator><operator pos:line="190" pos:column="34">)<pos:position pos:line="190" pos:column="35"/></operator> <call><name pos:line="190" pos:column="36">xmalloc<pos:position pos:line="190" pos:column="43"/></name><argument_list pos:line="190" pos:column="43">(<argument><expr><call><name pos:line="190" pos:column="44">strlen<pos:position pos:line="190" pos:column="50"/></name><argument_list pos:line="190" pos:column="50">(<argument><expr><literal type="string" pos:line="190" pos:column="51">"KRB5RCACHETYPE="<pos:position pos:line="190" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="69"/></argument_list></call><operator pos:line="190" pos:column="69">+<pos:position pos:line="190" pos:column="70"/></operator><call><name pos:line="190" pos:column="70">strlen<pos:position pos:line="190" pos:column="76"/></name><argument_list pos:line="190" pos:column="76">(<argument><expr><name pos:line="190" pos:column="77">rcache_type<pos:position pos:line="190" pos:column="88"/></name></expr></argument>)<pos:position pos:line="190" pos:column="89"/></argument_list></call><operator pos:line="190" pos:column="89">+<pos:position pos:line="190" pos:column="90"/></operator><literal type="number" pos:line="190" pos:column="90">1<pos:position pos:line="190" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="190" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="191" pos:column="9">strcpy<pos:position pos:line="191" pos:column="15"/></name><argument_list pos:line="191" pos:column="15">(<argument><expr><name pos:line="191" pos:column="16">rcache_type_env<pos:position pos:line="191" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="33">"KRB5RCACHETYPE="<pos:position pos:line="191" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="192" pos:column="9">strcat<pos:position pos:line="192" pos:column="15"/></name><argument_list pos:line="192" pos:column="15">(<argument><expr><name pos:line="192" pos:column="16">rcache_type_env<pos:position pos:line="192" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="33">rcache_type<pos:position pos:line="192" pos:column="44"/></name></expr></argument>)<pos:position pos:line="192" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">putenv<pos:position pos:line="193" pos:column="15"/></name><argument_list pos:line="193" pos:column="15">(<argument><expr><name pos:line="193" pos:column="16">rcache_type_env<pos:position pos:line="193" pos:column="31"/></name></expr></argument>)<pos:position pos:line="193" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="194" pos:column="9">debug<pos:position pos:line="194" pos:column="14"/></name><argument_list pos:line="194" pos:column="14">(<argument><expr><operator pos:line="194" pos:column="15">(<pos:position pos:line="194" pos:column="16"/></operator><name pos:line="194" pos:column="16">char<pos:position pos:line="194" pos:column="20"/></name> <operator pos:line="194" pos:column="21">*<pos:position pos:line="194" pos:column="22"/></operator><operator pos:line="194" pos:column="22">)<pos:position pos:line="194" pos:column="23"/></operator> <literal type="string" pos:line="194" pos:column="24">"%s| %s: INFO: Setting replay cache type to %s\n"<pos:position pos:line="194" pos:column="73"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="195" pos:column="15">LogTime<pos:position pos:line="195" pos:column="22"/></name><argument_list pos:line="195" pos:column="22">()<pos:position pos:line="195" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="195" pos:column="26">PROGRAM<pos:position pos:line="195" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="195" pos:column="35">rcache_type<pos:position pos:line="195" pos:column="46"/></name></expr></argument>)<pos:position pos:line="195" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="196" pos:column="6"/></block></then></if>

    <if pos:line="198" pos:column="5">if <condition pos:line="198" pos:column="8">(<expr><name pos:line="198" pos:column="9">rcache_dir<pos:position pos:line="198" pos:column="19"/></name></expr>)<pos:position pos:line="198" pos:column="20"/></condition><then pos:line="198" pos:column="20"> <block pos:line="198" pos:column="21">{
        <expr_stmt><expr><name pos:line="199" pos:column="9">rcache_dir_env<pos:position pos:line="199" pos:column="23"/></name> <operator pos:line="199" pos:column="24">=<pos:position pos:line="199" pos:column="25"/></operator> <operator pos:line="199" pos:column="26">(<pos:position pos:line="199" pos:column="27"/></operator><name pos:line="199" pos:column="27">char<pos:position pos:line="199" pos:column="31"/></name> <operator pos:line="199" pos:column="32">*<pos:position pos:line="199" pos:column="33"/></operator><operator pos:line="199" pos:column="33">)<pos:position pos:line="199" pos:column="34"/></operator> <call><name pos:line="199" pos:column="35">xmalloc<pos:position pos:line="199" pos:column="42"/></name><argument_list pos:line="199" pos:column="42">(<argument><expr><call><name pos:line="199" pos:column="43">strlen<pos:position pos:line="199" pos:column="49"/></name><argument_list pos:line="199" pos:column="49">(<argument><expr><literal type="string" pos:line="199" pos:column="50">"KRB5RCACHEDIR="<pos:position pos:line="199" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="67"/></argument_list></call><operator pos:line="199" pos:column="67">+<pos:position pos:line="199" pos:column="68"/></operator><call><name pos:line="199" pos:column="68">strlen<pos:position pos:line="199" pos:column="74"/></name><argument_list pos:line="199" pos:column="74">(<argument><expr><name pos:line="199" pos:column="75">rcache_dir<pos:position pos:line="199" pos:column="85"/></name></expr></argument>)<pos:position pos:line="199" pos:column="86"/></argument_list></call><operator pos:line="199" pos:column="86">+<pos:position pos:line="199" pos:column="87"/></operator><literal type="number" pos:line="199" pos:column="87">1<pos:position pos:line="199" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">strcpy<pos:position pos:line="200" pos:column="15"/></name><argument_list pos:line="200" pos:column="15">(<argument><expr><name pos:line="200" pos:column="16">rcache_dir_env<pos:position pos:line="200" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="32">"KRB5RCACHEDIR="<pos:position pos:line="200" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="201" pos:column="9">strcat<pos:position pos:line="201" pos:column="15"/></name><argument_list pos:line="201" pos:column="15">(<argument><expr><name pos:line="201" pos:column="16">rcache_dir_env<pos:position pos:line="201" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="32">rcache_dir<pos:position pos:line="201" pos:column="42"/></name></expr></argument>)<pos:position pos:line="201" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">putenv<pos:position pos:line="202" pos:column="15"/></name><argument_list pos:line="202" pos:column="15">(<argument><expr><name pos:line="202" pos:column="16">rcache_dir_env<pos:position pos:line="202" pos:column="30"/></name></expr></argument>)<pos:position pos:line="202" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">debug<pos:position pos:line="203" pos:column="14"/></name><argument_list pos:line="203" pos:column="14">(<argument><expr><operator pos:line="203" pos:column="15">(<pos:position pos:line="203" pos:column="16"/></operator><name pos:line="203" pos:column="16">char<pos:position pos:line="203" pos:column="20"/></name> <operator pos:line="203" pos:column="21">*<pos:position pos:line="203" pos:column="22"/></operator><operator pos:line="203" pos:column="22">)<pos:position pos:line="203" pos:column="23"/></operator> <literal type="string" pos:line="203" pos:column="24">"%s| %s: INFO: Setting replay cache directory to %s\n"<pos:position pos:line="203" pos:column="78"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="204" pos:column="15">LogTime<pos:position pos:line="204" pos:column="22"/></name><argument_list pos:line="204" pos:column="22">()<pos:position pos:line="204" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="204" pos:column="26">PROGRAM<pos:position pos:line="204" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="35">rcache_dir<pos:position pos:line="204" pos:column="45"/></name></expr></argument>)<pos:position pos:line="204" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="205" pos:column="6"/></block></then></if>

    <if pos:line="207" pos:column="5">if <condition pos:line="207" pos:column="8">(<expr><name pos:line="207" pos:column="9">keytab_name<pos:position pos:line="207" pos:column="20"/></name></expr>)<pos:position pos:line="207" pos:column="21"/></condition><then pos:line="207" pos:column="21"> <block pos:line="207" pos:column="22">{
        <expr_stmt><expr><name pos:line="208" pos:column="9">keytab_name_env<pos:position pos:line="208" pos:column="24"/></name> <operator pos:line="208" pos:column="25">=<pos:position pos:line="208" pos:column="26"/></operator> <operator pos:line="208" pos:column="27">(<pos:position pos:line="208" pos:column="28"/></operator><name pos:line="208" pos:column="28">char<pos:position pos:line="208" pos:column="32"/></name> <operator pos:line="208" pos:column="33">*<pos:position pos:line="208" pos:column="34"/></operator><operator pos:line="208" pos:column="34">)<pos:position pos:line="208" pos:column="35"/></operator> <call><name pos:line="208" pos:column="36">xmalloc<pos:position pos:line="208" pos:column="43"/></name><argument_list pos:line="208" pos:column="43">(<argument><expr><call><name pos:line="208" pos:column="44">strlen<pos:position pos:line="208" pos:column="50"/></name><argument_list pos:line="208" pos:column="50">(<argument><expr><literal type="string" pos:line="208" pos:column="51">"KRB5_KTNAME="<pos:position pos:line="208" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="66"/></argument_list></call><operator pos:line="208" pos:column="66">+<pos:position pos:line="208" pos:column="67"/></operator><call><name pos:line="208" pos:column="67">strlen<pos:position pos:line="208" pos:column="73"/></name><argument_list pos:line="208" pos:column="73">(<argument><expr><name pos:line="208" pos:column="74">keytab_name<pos:position pos:line="208" pos:column="85"/></name></expr></argument>)<pos:position pos:line="208" pos:column="86"/></argument_list></call><operator pos:line="208" pos:column="86">+<pos:position pos:line="208" pos:column="87"/></operator><literal type="number" pos:line="208" pos:column="87">1<pos:position pos:line="208" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">strcpy<pos:position pos:line="209" pos:column="15"/></name><argument_list pos:line="209" pos:column="15">(<argument><expr><name pos:line="209" pos:column="16">keytab_name_env<pos:position pos:line="209" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="33">"KRB5_KTNAME="<pos:position pos:line="209" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="210" pos:column="9">strcat<pos:position pos:line="210" pos:column="15"/></name><argument_list pos:line="210" pos:column="15">(<argument><expr><name pos:line="210" pos:column="16">keytab_name_env<pos:position pos:line="210" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="210" pos:column="33">keytab_name<pos:position pos:line="210" pos:column="44"/></name></expr></argument>)<pos:position pos:line="210" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="211" pos:column="9">putenv<pos:position pos:line="211" pos:column="15"/></name><argument_list pos:line="211" pos:column="15">(<argument><expr><name pos:line="211" pos:column="16">keytab_name_env<pos:position pos:line="211" pos:column="31"/></name></expr></argument>)<pos:position pos:line="211" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="212" pos:column="6"/></block></then> <else pos:line="212" pos:column="7">else <block pos:line="212" pos:column="12">{
        <expr_stmt><expr><name pos:line="213" pos:column="9">keytab_name_env<pos:position pos:line="213" pos:column="24"/></name> <operator pos:line="213" pos:column="25">=<pos:position pos:line="213" pos:column="26"/></operator> <call><name pos:line="213" pos:column="27">getenv<pos:position pos:line="213" pos:column="33"/></name><argument_list pos:line="213" pos:column="33">(<argument><expr><literal type="string" pos:line="213" pos:column="34">"KRB5_KTNAME"<pos:position pos:line="213" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="49"/></expr_stmt>
        <if pos:line="214" pos:column="9">if <condition pos:line="214" pos:column="12">(<expr><operator pos:line="214" pos:column="13">!<pos:position pos:line="214" pos:column="14"/></operator><name pos:line="214" pos:column="14">keytab_name_env<pos:position pos:line="214" pos:column="29"/></name></expr>)<pos:position pos:line="214" pos:column="30"/></condition><then pos:line="214" pos:column="30"> <block pos:line="214" pos:column="31">{
            <expr_stmt><expr><name pos:line="215" pos:column="13">ret<pos:position pos:line="215" pos:column="16"/></name> <operator pos:line="215" pos:column="17">=<pos:position pos:line="215" pos:column="18"/></operator> <call><name pos:line="215" pos:column="19">krb5_init_context<pos:position pos:line="215" pos:column="36"/></name><argument_list pos:line="215" pos:column="36">(<argument><expr><operator pos:line="215" pos:column="37">&amp;<pos:position pos:line="215" pos:column="42"/></operator><name pos:line="215" pos:column="38">context<pos:position pos:line="215" pos:column="45"/></name></expr></argument>)<pos:position pos:line="215" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="47"/></expr_stmt>
            <if pos:line="216" pos:column="13">if <condition pos:line="216" pos:column="16">(<expr><operator pos:line="216" pos:column="17">!<pos:position pos:line="216" pos:column="18"/></operator><call><name pos:line="216" pos:column="18">check_k5_err<pos:position pos:line="216" pos:column="30"/></name><argument_list pos:line="216" pos:column="30">(<argument><expr><name pos:line="216" pos:column="31">context<pos:position pos:line="216" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="40">"krb5_init_context"<pos:position pos:line="216" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="61">ret<pos:position pos:line="216" pos:column="64"/></name></expr></argument>)<pos:position pos:line="216" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="216" pos:column="66"/></condition><then pos:line="216" pos:column="66"> <block pos:line="216" pos:column="67">{
                <expr_stmt><expr><call><name pos:line="217" pos:column="17">krb5_kt_default_name<pos:position pos:line="217" pos:column="37"/></name><argument_list pos:line="217" pos:column="37">(<argument><expr><name pos:line="217" pos:column="38">context<pos:position pos:line="217" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="47">default_keytab<pos:position pos:line="217" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="63">MAXPATHLEN<pos:position pos:line="217" pos:column="73"/></name></expr></argument>)<pos:position pos:line="217" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="218" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="219" pos:column="13">keytab_name<pos:position pos:line="219" pos:column="24"/></name> <operator pos:line="219" pos:column="25">=<pos:position pos:line="219" pos:column="26"/></operator> <call><name pos:line="219" pos:column="27">xstrdup<pos:position pos:line="219" pos:column="34"/></name><argument_list pos:line="219" pos:column="34">(<argument><expr><name pos:line="219" pos:column="35">default_keytab<pos:position pos:line="219" pos:column="49"/></name></expr></argument>)<pos:position pos:line="219" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="220" pos:column="13">krb5_free_context<pos:position pos:line="220" pos:column="30"/></name><argument_list pos:line="220" pos:column="30">(<argument><expr><name pos:line="220" pos:column="31">context<pos:position pos:line="220" pos:column="38"/></name></expr></argument>)<pos:position pos:line="220" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="221" pos:column="10"/></block></then> <else pos:line="221" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="222" pos:column="13">keytab_name<pos:position pos:line="222" pos:column="24"/></name> <operator pos:line="222" pos:column="25">=<pos:position pos:line="222" pos:column="26"/></operator> <call><name pos:line="222" pos:column="27">xstrdup<pos:position pos:line="222" pos:column="34"/></name><argument_list pos:line="222" pos:column="34">(<argument><expr><name pos:line="222" pos:column="35">keytab_name_env<pos:position pos:line="222" pos:column="50"/></name></expr></argument>)<pos:position pos:line="222" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="52"/></expr_stmt></block></else></if>
    }<pos:position pos:line="223" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="224" pos:column="5">debug<pos:position pos:line="224" pos:column="10"/></name><argument_list pos:line="224" pos:column="10">(<argument><expr><operator pos:line="224" pos:column="11">(<pos:position pos:line="224" pos:column="12"/></operator><name pos:line="224" pos:column="12">char<pos:position pos:line="224" pos:column="16"/></name> <operator pos:line="224" pos:column="17">*<pos:position pos:line="224" pos:column="18"/></operator><operator pos:line="224" pos:column="18">)<pos:position pos:line="224" pos:column="19"/></operator> <literal type="string" pos:line="224" pos:column="20">"%s| %s: INFO: Setting keytab to %s\n"<pos:position pos:line="224" pos:column="58"/></literal></expr></argument>, <argument><expr><call><name pos:line="224" pos:column="60">LogTime<pos:position pos:line="224" pos:column="67"/></name><argument_list pos:line="224" pos:column="67">()<pos:position pos:line="224" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="224" pos:column="71">PROGRAM<pos:position pos:line="224" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="80">keytab_name<pos:position pos:line="224" pos:column="91"/></name></expr></argument>)<pos:position pos:line="224" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="93"/></expr_stmt>
<cpp:if pos:line="225" pos:column="1">#<cpp:directive pos:line="225" pos:column="2">if<pos:position pos:line="225" pos:column="4"/></cpp:directive> <expr><name pos:line="225" pos:column="5">HAVE_KRB5_MEMORY_KEYTAB<pos:position pos:line="225" pos:column="28"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="226" pos:column="5">ret<pos:position pos:line="226" pos:column="8"/></name> <operator pos:line="226" pos:column="9">=<pos:position pos:line="226" pos:column="10"/></operator> <call><name pos:line="226" pos:column="11">krb5_init_context<pos:position pos:line="226" pos:column="28"/></name><argument_list pos:line="226" pos:column="28">(<argument><expr><operator pos:line="226" pos:column="29">&amp;<pos:position pos:line="226" pos:column="34"/></operator><name pos:line="226" pos:column="30">context<pos:position pos:line="226" pos:column="37"/></name></expr></argument>)<pos:position pos:line="226" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="39"/></expr_stmt>
    <if pos:line="227" pos:column="5">if <condition pos:line="227" pos:column="8">(<expr><operator pos:line="227" pos:column="9">!<pos:position pos:line="227" pos:column="10"/></operator><call><name pos:line="227" pos:column="10">check_k5_err<pos:position pos:line="227" pos:column="22"/></name><argument_list pos:line="227" pos:column="22">(<argument><expr><name pos:line="227" pos:column="23">context<pos:position pos:line="227" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="32">"krb5_init_context"<pos:position pos:line="227" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="227" pos:column="53">ret<pos:position pos:line="227" pos:column="56"/></name></expr></argument>)<pos:position pos:line="227" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="227" pos:column="58"/></condition><then pos:line="227" pos:column="58"> <block pos:line="227" pos:column="59">{
        <expr_stmt><expr><name pos:line="228" pos:column="9">memory_keytab_name<pos:position pos:line="228" pos:column="27"/></name> <operator pos:line="228" pos:column="28">=<pos:position pos:line="228" pos:column="29"/></operator> <operator pos:line="228" pos:column="30">(<pos:position pos:line="228" pos:column="31"/></operator><name pos:line="228" pos:column="31">char<pos:position pos:line="228" pos:column="35"/></name> <operator pos:line="228" pos:column="36">*<pos:position pos:line="228" pos:column="37"/></operator><operator pos:line="228" pos:column="37">)<pos:position pos:line="228" pos:column="38"/></operator><call><name pos:line="228" pos:column="38">xmalloc<pos:position pos:line="228" pos:column="45"/></name><argument_list pos:line="228" pos:column="45">(<argument><expr><call><name pos:line="228" pos:column="46">strlen<pos:position pos:line="228" pos:column="52"/></name><argument_list pos:line="228" pos:column="52">(<argument><expr><literal type="string" pos:line="228" pos:column="53">"MEMORY:negotiate_kerberos_auth_"<pos:position pos:line="228" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="87"/></argument_list></call><operator pos:line="228" pos:column="87">+<pos:position pos:line="228" pos:column="88"/></operator><literal type="number" pos:line="228" pos:column="88">16<pos:position pos:line="228" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="229" pos:column="9">snprintf<pos:position pos:line="229" pos:column="17"/></name><argument_list pos:line="229" pos:column="17">(<argument><expr><name pos:line="229" pos:column="18">memory_keytab_name<pos:position pos:line="229" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="229" pos:column="38">strlen<pos:position pos:line="229" pos:column="44"/></name><argument_list pos:line="229" pos:column="44">(<argument><expr><literal type="string" pos:line="229" pos:column="45">"MEMORY:negotiate_kerberos_auth_"<pos:position pos:line="229" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="79"/></argument_list></call><operator pos:line="229" pos:column="79">+<pos:position pos:line="229" pos:column="80"/></operator><literal type="number" pos:line="229" pos:column="80">16<pos:position pos:line="229" pos:column="82"/></literal></expr></argument>,
                 <argument><expr><literal type="string" pos:line="230" pos:column="18">"MEMORY:negotiate_kerberos_auth_%d"<pos:position pos:line="230" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="230" pos:column="55">(<pos:position pos:line="230" pos:column="56"/></operator><name pos:line="230" pos:column="56">unsigned<pos:position pos:line="230" pos:column="64"/></name> <name pos:line="230" pos:column="65">int<pos:position pos:line="230" pos:column="68"/></name><operator pos:line="230" pos:column="68">)<pos:position pos:line="230" pos:column="69"/></operator> <call><name pos:line="230" pos:column="70">getpid<pos:position pos:line="230" pos:column="76"/></name><argument_list pos:line="230" pos:column="76">()<pos:position pos:line="230" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="230" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="231" pos:column="9">ret<pos:position pos:line="231" pos:column="12"/></name> <operator pos:line="231" pos:column="13">=<pos:position pos:line="231" pos:column="14"/></operator> <call><name pos:line="231" pos:column="15">krb5_read_keytab<pos:position pos:line="231" pos:column="31"/></name><argument_list pos:line="231" pos:column="31">(<argument><expr><name pos:line="231" pos:column="32">context<pos:position pos:line="231" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="41">keytab_name<pos:position pos:line="231" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="231" pos:column="54">&amp;<pos:position pos:line="231" pos:column="59"/></operator><name pos:line="231" pos:column="55">ktlist<pos:position pos:line="231" pos:column="61"/></name></expr></argument>)<pos:position pos:line="231" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="63"/></expr_stmt>
        <if pos:line="232" pos:column="9">if <condition pos:line="232" pos:column="12">(<expr><call><name pos:line="232" pos:column="13">check_k5_err<pos:position pos:line="232" pos:column="25"/></name><argument_list pos:line="232" pos:column="25">(<argument><expr><name pos:line="232" pos:column="26">context<pos:position pos:line="232" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="35">"krb5_read_keytab"<pos:position pos:line="232" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="55">ret<pos:position pos:line="232" pos:column="58"/></name></expr></argument>)<pos:position pos:line="232" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="232" pos:column="60"/></condition><then pos:line="232" pos:column="60"> <block pos:line="232" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="233" pos:column="13">debug<pos:position pos:line="233" pos:column="18"/></name><argument_list pos:line="233" pos:column="18">(<argument><expr><operator pos:line="233" pos:column="19">(<pos:position pos:line="233" pos:column="20"/></operator><name pos:line="233" pos:column="20">char<pos:position pos:line="233" pos:column="24"/></name> <operator pos:line="233" pos:column="25">*<pos:position pos:line="233" pos:column="26"/></operator><operator pos:line="233" pos:column="26">)<pos:position pos:line="233" pos:column="27"/></operator> <literal type="string" pos:line="233" pos:column="28">"%s| %s: ERROR: Reading keytab %s into list failed\n"<pos:position pos:line="233" pos:column="81"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="234" pos:column="19">LogTime<pos:position pos:line="234" pos:column="26"/></name><argument_list pos:line="234" pos:column="26">()<pos:position pos:line="234" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="234" pos:column="30">PROGRAM<pos:position pos:line="234" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="39">keytab_name<pos:position pos:line="234" pos:column="50"/></name></expr></argument>)<pos:position pos:line="234" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="235" pos:column="10"/></block></then> <else pos:line="235" pos:column="11">else <block pos:line="235" pos:column="16">{
            <expr_stmt><expr><name pos:line="236" pos:column="13">ret<pos:position pos:line="236" pos:column="16"/></name> <operator pos:line="236" pos:column="17">=<pos:position pos:line="236" pos:column="18"/></operator> <call><name pos:line="236" pos:column="19">krb5_write_keytab<pos:position pos:line="236" pos:column="36"/></name><argument_list pos:line="236" pos:column="36">(<argument><expr><name pos:line="236" pos:column="37">context<pos:position pos:line="236" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="46">ktlist<pos:position pos:line="236" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="236" pos:column="54">memory_keytab_name<pos:position pos:line="236" pos:column="72"/></name></expr></argument>)<pos:position pos:line="236" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="74"/></expr_stmt>
            <if pos:line="237" pos:column="13">if <condition pos:line="237" pos:column="16">(<expr><call><name pos:line="237" pos:column="17">check_k5_err<pos:position pos:line="237" pos:column="29"/></name><argument_list pos:line="237" pos:column="29">(<argument><expr><name pos:line="237" pos:column="30">context<pos:position pos:line="237" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="39">"krb5_write_keytab"<pos:position pos:line="237" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="60">ret<pos:position pos:line="237" pos:column="63"/></name></expr></argument>)<pos:position pos:line="237" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="237" pos:column="65"/></condition><then pos:line="237" pos:column="65"> <block pos:line="237" pos:column="66">{
                <expr_stmt><expr><call><name pos:line="238" pos:column="17">debug<pos:position pos:line="238" pos:column="22"/></name><argument_list pos:line="238" pos:column="22">(<argument><expr><operator pos:line="238" pos:column="23">(<pos:position pos:line="238" pos:column="24"/></operator><name pos:line="238" pos:column="24">char<pos:position pos:line="238" pos:column="28"/></name> <operator pos:line="238" pos:column="29">*<pos:position pos:line="238" pos:column="30"/></operator><operator pos:line="238" pos:column="30">)<pos:position pos:line="238" pos:column="31"/></operator> <literal type="string" pos:line="238" pos:column="32">"%s| %s: ERROR: Writing list into keytab %s\n"<pos:position pos:line="238" pos:column="78"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="239" pos:column="23">LogTime<pos:position pos:line="239" pos:column="30"/></name><argument_list pos:line="239" pos:column="30">()<pos:position pos:line="239" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="239" pos:column="34">PROGRAM<pos:position pos:line="239" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="43">memory_keytab_name<pos:position pos:line="239" pos:column="61"/></name></expr></argument>)<pos:position pos:line="239" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="240" pos:column="14"/></block></then> <else pos:line="240" pos:column="15">else <block pos:line="240" pos:column="20">{
                <expr_stmt><expr><name pos:line="241" pos:column="17">keytab_name_env<pos:position pos:line="241" pos:column="32"/></name> <operator pos:line="241" pos:column="33">=<pos:position pos:line="241" pos:column="34"/></operator> <operator pos:line="241" pos:column="35">(<pos:position pos:line="241" pos:column="36"/></operator><name pos:line="241" pos:column="36">char<pos:position pos:line="241" pos:column="40"/></name> <operator pos:line="241" pos:column="41">*<pos:position pos:line="241" pos:column="42"/></operator><operator pos:line="241" pos:column="42">)<pos:position pos:line="241" pos:column="43"/></operator> <call><name pos:line="241" pos:column="44">xmalloc<pos:position pos:line="241" pos:column="51"/></name><argument_list pos:line="241" pos:column="51">(<argument><expr><call><name pos:line="241" pos:column="52">strlen<pos:position pos:line="241" pos:column="58"/></name><argument_list pos:line="241" pos:column="58">(<argument><expr><literal type="string" pos:line="241" pos:column="59">"KRB5_KTNAME="<pos:position pos:line="241" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="74"/></argument_list></call><operator pos:line="241" pos:column="74">+<pos:position pos:line="241" pos:column="75"/></operator><call><name pos:line="241" pos:column="75">strlen<pos:position pos:line="241" pos:column="81"/></name><argument_list pos:line="241" pos:column="81">(<argument><expr><name pos:line="241" pos:column="82">memory_keytab_name<pos:position pos:line="241" pos:column="100"/></name></expr></argument>)<pos:position pos:line="241" pos:column="101"/></argument_list></call><operator pos:line="241" pos:column="101">+<pos:position pos:line="241" pos:column="102"/></operator><literal type="number" pos:line="241" pos:column="102">1<pos:position pos:line="241" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="105"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="242" pos:column="17">strcpy<pos:position pos:line="242" pos:column="23"/></name><argument_list pos:line="242" pos:column="23">(<argument><expr><name pos:line="242" pos:column="24">keytab_name_env<pos:position pos:line="242" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="41">"KRB5_KTNAME="<pos:position pos:line="242" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="242" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="243" pos:column="17">strcat<pos:position pos:line="243" pos:column="23"/></name><argument_list pos:line="243" pos:column="23">(<argument><expr><name pos:line="243" pos:column="24">keytab_name_env<pos:position pos:line="243" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="243" pos:column="41">memory_keytab_name<pos:position pos:line="243" pos:column="59"/></name></expr></argument>)<pos:position pos:line="243" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="244" pos:column="17">putenv<pos:position pos:line="244" pos:column="23"/></name><argument_list pos:line="244" pos:column="23">(<argument><expr><name pos:line="244" pos:column="24">keytab_name_env<pos:position pos:line="244" pos:column="39"/></name></expr></argument>)<pos:position pos:line="244" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="245" pos:column="17">xfree<pos:position pos:line="245" pos:column="22"/></name><argument_list pos:line="245" pos:column="22">(<argument><expr><name pos:line="245" pos:column="23">keytab_name<pos:position pos:line="245" pos:column="34"/></name></expr></argument>)<pos:position pos:line="245" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name pos:line="246" pos:column="17">keytab_name<pos:position pos:line="246" pos:column="28"/></name> <operator pos:line="246" pos:column="29">=<pos:position pos:line="246" pos:column="30"/></operator> <call><name pos:line="246" pos:column="31">xstrdup<pos:position pos:line="246" pos:column="38"/></name><argument_list pos:line="246" pos:column="38">(<argument><expr><name pos:line="246" pos:column="39">memory_keytab_name<pos:position pos:line="246" pos:column="57"/></name></expr></argument>)<pos:position pos:line="246" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="59"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="247" pos:column="17">debug<pos:position pos:line="247" pos:column="22"/></name><argument_list pos:line="247" pos:column="22">(<argument><expr><operator pos:line="247" pos:column="23">(<pos:position pos:line="247" pos:column="24"/></operator><name pos:line="247" pos:column="24">char<pos:position pos:line="247" pos:column="28"/></name> <operator pos:line="247" pos:column="29">*<pos:position pos:line="247" pos:column="30"/></operator><operator pos:line="247" pos:column="30">)<pos:position pos:line="247" pos:column="31"/></operator> <literal type="string" pos:line="247" pos:column="32">"%s| %s: INFO: Changed keytab to %s\n"<pos:position pos:line="247" pos:column="70"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="248" pos:column="23">LogTime<pos:position pos:line="248" pos:column="30"/></name><argument_list pos:line="248" pos:column="30">()<pos:position pos:line="248" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="248" pos:column="34">PROGRAM<pos:position pos:line="248" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="43">memory_keytab_name<pos:position pos:line="248" pos:column="61"/></name></expr></argument>)<pos:position pos:line="248" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="249" pos:column="14"/></block></else></if>
        }<pos:position pos:line="250" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="251" pos:column="9">ret<pos:position pos:line="251" pos:column="12"/></name> <operator pos:line="251" pos:column="13">=<pos:position pos:line="251" pos:column="14"/></operator> <call><name pos:line="251" pos:column="15">krb5_free_kt_list<pos:position pos:line="251" pos:column="32"/></name><argument_list pos:line="251" pos:column="32">(<argument><expr><name pos:line="251" pos:column="33">context<pos:position pos:line="251" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="251" pos:column="41">ktlist<pos:position pos:line="251" pos:column="47"/></name></expr></argument>)<pos:position pos:line="251" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="49"/></expr_stmt>
        <if pos:line="252" pos:column="9">if <condition pos:line="252" pos:column="12">(<expr><call><name pos:line="252" pos:column="13">check_k5_err<pos:position pos:line="252" pos:column="25"/></name><argument_list pos:line="252" pos:column="25">(<argument><expr><name pos:line="252" pos:column="26">context<pos:position pos:line="252" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="35">"krb5_free_kt_list"<pos:position pos:line="252" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="252" pos:column="56">ret<pos:position pos:line="252" pos:column="59"/></name></expr></argument>)<pos:position pos:line="252" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="252" pos:column="61"/></condition><then pos:line="252" pos:column="61"> <block pos:line="252" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="253" pos:column="13">debug<pos:position pos:line="253" pos:column="18"/></name><argument_list pos:line="253" pos:column="18">(<argument><expr><operator pos:line="253" pos:column="19">(<pos:position pos:line="253" pos:column="20"/></operator><name pos:line="253" pos:column="20">char<pos:position pos:line="253" pos:column="24"/></name> <operator pos:line="253" pos:column="25">*<pos:position pos:line="253" pos:column="26"/></operator><operator pos:line="253" pos:column="26">)<pos:position pos:line="253" pos:column="27"/></operator> <literal type="string" pos:line="253" pos:column="28">"%s| %s: ERROR: Freeing list failed\n"<pos:position pos:line="253" pos:column="66"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="254" pos:column="19">LogTime<pos:position pos:line="254" pos:column="26"/></name><argument_list pos:line="254" pos:column="26">()<pos:position pos:line="254" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="254" pos:column="30">PROGRAM<pos:position pos:line="254" pos:column="37"/></name></expr></argument>)<pos:position pos:line="254" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="255" pos:column="10"/></block></then></if>
    }<pos:position pos:line="256" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="257" pos:column="5">krb5_free_context<pos:position pos:line="257" pos:column="22"/></name><argument_list pos:line="257" pos:column="22">(<argument><expr><name pos:line="257" pos:column="23">context<pos:position pos:line="257" pos:column="30"/></name></expr></argument>)<pos:position pos:line="257" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="32"/></expr_stmt>
<cpp:endif pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">endif<pos:position pos:line="258" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="259" pos:column="1">#<cpp:directive pos:line="259" pos:column="2">ifdef<pos:position pos:line="259" pos:column="7"/></cpp:directive> <name pos:line="259" pos:column="8">HAVE_HEIMDAL_KERBEROS<pos:position pos:line="259" pos:column="29"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="260" pos:column="5">gsskrb5_register_acceptor_identity<pos:position pos:line="260" pos:column="39"/></name><argument_list pos:line="260" pos:column="39">(<argument><expr><name pos:line="260" pos:column="40">keytab_name<pos:position pos:line="260" pos:column="51"/></name></expr></argument>)<pos:position pos:line="260" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="53"/></expr_stmt>
<cpp:endif pos:line="261" pos:column="1">#<cpp:directive pos:line="261" pos:column="2">endif<pos:position pos:line="261" pos:column="7"/></cpp:directive></cpp:endif>
    <while pos:line="262" pos:column="5">while <condition pos:line="262" pos:column="11">(<expr><literal type="number" pos:line="262" pos:column="12">1<pos:position pos:line="262" pos:column="13"/></literal></expr>)<pos:position pos:line="262" pos:column="14"/></condition> <block pos:line="262" pos:column="15">{
        <if pos:line="263" pos:column="9">if <condition pos:line="263" pos:column="12">(<expr><call><name pos:line="263" pos:column="13">fgets<pos:position pos:line="263" pos:column="18"/></name><argument_list pos:line="263" pos:column="18">(<argument><expr><name pos:line="263" pos:column="19">buf<pos:position pos:line="263" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="263" pos:column="24">sizeof<argument_list pos:line="263" pos:column="30">(<argument><expr><name pos:line="263" pos:column="31">buf<pos:position pos:line="263" pos:column="34"/></name></expr></argument>)<pos:position pos:line="263" pos:column="35"/></argument_list></sizeof> <operator pos:line="263" pos:column="36">-<pos:position pos:line="263" pos:column="37"/></operator> <literal type="number" pos:line="263" pos:column="38">1<pos:position pos:line="263" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="263" pos:column="41">stdin<pos:position pos:line="263" pos:column="46"/></name></expr></argument>)<pos:position pos:line="263" pos:column="47"/></argument_list></call> <operator pos:line="263" pos:column="48">==<pos:position pos:line="263" pos:column="50"/></operator> <name pos:line="263" pos:column="51">NULL<pos:position pos:line="263" pos:column="55"/></name></expr>)<pos:position pos:line="263" pos:column="56"/></condition><then pos:line="263" pos:column="56"> <block pos:line="263" pos:column="57">{
            <if pos:line="264" pos:column="13">if <condition pos:line="264" pos:column="16">(<expr><call><name pos:line="264" pos:column="17">ferror<pos:position pos:line="264" pos:column="23"/></name><argument_list pos:line="264" pos:column="23">(<argument><expr><name pos:line="264" pos:column="24">stdin<pos:position pos:line="264" pos:column="29"/></name></expr></argument>)<pos:position pos:line="264" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="264" pos:column="31"/></condition><then pos:line="264" pos:column="31"> <block pos:line="264" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="265" pos:column="17">debug<pos:position pos:line="265" pos:column="22"/></name><argument_list pos:line="265" pos:column="22">(<argument><expr><operator pos:line="265" pos:column="23">(<pos:position pos:line="265" pos:column="24"/></operator><name pos:line="265" pos:column="24">char<pos:position pos:line="265" pos:column="28"/></name> <operator pos:line="265" pos:column="29">*<pos:position pos:line="265" pos:column="30"/></operator><operator pos:line="265" pos:column="30">)<pos:position pos:line="265" pos:column="31"/></operator> <literal type="string" pos:line="265" pos:column="32">"%s| %s: FATAL: fgets() failed! dying..... errno=%d (%s)\n"<pos:position pos:line="265" pos:column="91"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="266" pos:column="23">LogTime<pos:position pos:line="266" pos:column="30"/></name><argument_list pos:line="266" pos:column="30">()<pos:position pos:line="266" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="266" pos:column="34">PROGRAM<pos:position pos:line="266" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="266" pos:column="43">ferror<pos:position pos:line="266" pos:column="49"/></name><argument_list pos:line="266" pos:column="49">(<argument><expr><name pos:line="266" pos:column="50">stdin<pos:position pos:line="266" pos:column="55"/></name></expr></argument>)<pos:position pos:line="266" pos:column="56"/></argument_list></call></expr></argument>,
                      <argument><expr><call><name pos:line="267" pos:column="23">strerror<pos:position pos:line="267" pos:column="31"/></name><argument_list pos:line="267" pos:column="31">(<argument><expr><call><name pos:line="267" pos:column="32">ferror<pos:position pos:line="267" pos:column="38"/></name><argument_list pos:line="267" pos:column="38">(<argument><expr><name pos:line="267" pos:column="39">stdin<pos:position pos:line="267" pos:column="44"/></name></expr></argument>)<pos:position pos:line="267" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="267" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="267" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="48"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="269" pos:column="17">fprintf<pos:position pos:line="269" pos:column="24"/></name><argument_list pos:line="269" pos:column="24">(<argument><expr><name pos:line="269" pos:column="25">stdout<pos:position pos:line="269" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="269" pos:column="33">"BH input error\n"<pos:position pos:line="269" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="270" pos:column="17">exit<pos:position pos:line="270" pos:column="21"/></name><argument_list pos:line="270" pos:column="21">(<argument><expr><literal type="number" pos:line="270" pos:column="22">1<pos:position pos:line="270" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="25"/></expr_stmt>    <comment type="block" pos:line="270" pos:column="29">/* BIIG buffer */</comment>
            }<pos:position pos:line="271" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="272" pos:column="13">fprintf<pos:position pos:line="272" pos:column="20"/></name><argument_list pos:line="272" pos:column="20">(<argument><expr><name pos:line="272" pos:column="21">stdout<pos:position pos:line="272" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="272" pos:column="29">"BH input error\n"<pos:position pos:line="272" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="272" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="273" pos:column="13">exit<pos:position pos:line="273" pos:column="17"/></name><argument_list pos:line="273" pos:column="17">(<argument><expr><literal type="number" pos:line="273" pos:column="18">0<pos:position pos:line="273" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="274" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="275" pos:column="9">c<pos:position pos:line="275" pos:column="10"/></name> <operator pos:line="275" pos:column="11">=<pos:position pos:line="275" pos:column="12"/></operator> <operator pos:line="275" pos:column="13">(<pos:position pos:line="275" pos:column="14"/></operator><name pos:line="275" pos:column="14">char<pos:position pos:line="275" pos:column="18"/></name> <operator pos:line="275" pos:column="19">*<pos:position pos:line="275" pos:column="20"/></operator><operator pos:line="275" pos:column="20">)<pos:position pos:line="275" pos:column="21"/></operator> <call><name pos:line="275" pos:column="22">memchr<pos:position pos:line="275" pos:column="28"/></name><argument_list pos:line="275" pos:column="28">(<argument><expr><name pos:line="275" pos:column="29">buf<pos:position pos:line="275" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="275" pos:column="34">'\n'<pos:position pos:line="275" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="275" pos:column="40">sizeof<argument_list pos:line="275" pos:column="46">(<argument><expr><name pos:line="275" pos:column="47">buf<pos:position pos:line="275" pos:column="50"/></name></expr></argument>)<pos:position pos:line="275" pos:column="51"/></argument_list></sizeof> <operator pos:line="275" pos:column="52">-<pos:position pos:line="275" pos:column="53"/></operator> <literal type="number" pos:line="275" pos:column="54">1<pos:position pos:line="275" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="57"/></expr_stmt>
        <if pos:line="276" pos:column="9">if <condition pos:line="276" pos:column="12">(<expr><name pos:line="276" pos:column="13">c<pos:position pos:line="276" pos:column="14"/></name></expr>)<pos:position pos:line="276" pos:column="15"/></condition><then pos:line="276" pos:column="15"> <block pos:line="276" pos:column="16">{
            <expr_stmt><expr><operator pos:line="277" pos:column="13">*<pos:position pos:line="277" pos:column="14"/></operator><name pos:line="277" pos:column="14">c<pos:position pos:line="277" pos:column="15"/></name> <operator pos:line="277" pos:column="16">=<pos:position pos:line="277" pos:column="17"/></operator> <literal type="char" pos:line="277" pos:column="18">'\0'<pos:position pos:line="277" pos:column="22"/></literal></expr>;<pos:position pos:line="277" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="278" pos:column="13">length<pos:position pos:line="278" pos:column="19"/></name> <operator pos:line="278" pos:column="20">=<pos:position pos:line="278" pos:column="21"/></operator> <name pos:line="278" pos:column="22">c<pos:position pos:line="278" pos:column="23"/></name> <operator pos:line="278" pos:column="24">-<pos:position pos:line="278" pos:column="25"/></operator> <name pos:line="278" pos:column="26">buf<pos:position pos:line="278" pos:column="29"/></name></expr>;<pos:position pos:line="278" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="279" pos:column="10"/></block></then> <else pos:line="279" pos:column="11">else <block pos:line="279" pos:column="16">{
            <expr_stmt><expr><name pos:line="280" pos:column="13">err<pos:position pos:line="280" pos:column="16"/></name> <operator pos:line="280" pos:column="17">=<pos:position pos:line="280" pos:column="18"/></operator> <literal type="number" pos:line="280" pos:column="19">1<pos:position pos:line="280" pos:column="20"/></literal></expr>;<pos:position pos:line="280" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="281" pos:column="10"/></block></else></if>
        <if pos:line="282" pos:column="9">if <condition pos:line="282" pos:column="12">(<expr><name pos:line="282" pos:column="13">err<pos:position pos:line="282" pos:column="16"/></name></expr>)<pos:position pos:line="282" pos:column="17"/></condition><then pos:line="282" pos:column="17"> <block pos:line="282" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="283" pos:column="13">debug<pos:position pos:line="283" pos:column="18"/></name><argument_list pos:line="283" pos:column="18">(<argument><expr><operator pos:line="283" pos:column="19">(<pos:position pos:line="283" pos:column="20"/></operator><name pos:line="283" pos:column="20">char<pos:position pos:line="283" pos:column="24"/></name> <operator pos:line="283" pos:column="25">*<pos:position pos:line="283" pos:column="26"/></operator><operator pos:line="283" pos:column="26">)<pos:position pos:line="283" pos:column="27"/></operator> <literal type="string" pos:line="283" pos:column="28">"%s| %s: ERROR: Oversized message\n"<pos:position pos:line="283" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="283" pos:column="66">LogTime<pos:position pos:line="283" pos:column="73"/></name><argument_list pos:line="283" pos:column="73">()<pos:position pos:line="283" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="283" pos:column="77">PROGRAM<pos:position pos:line="283" pos:column="84"/></name></expr></argument>)<pos:position pos:line="283" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="284" pos:column="13">fprintf<pos:position pos:line="284" pos:column="20"/></name><argument_list pos:line="284" pos:column="20">(<argument><expr><name pos:line="284" pos:column="21">stdout<pos:position pos:line="284" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="284" pos:column="29">"BH Oversized message\n"<pos:position pos:line="284" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="284" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><name pos:line="285" pos:column="13">err<pos:position pos:line="285" pos:column="16"/></name> <operator pos:line="285" pos:column="17">=<pos:position pos:line="285" pos:column="18"/></operator> <literal type="number" pos:line="285" pos:column="19">0<pos:position pos:line="285" pos:column="20"/></literal></expr>;<pos:position pos:line="285" pos:column="21"/></expr_stmt>
            <continue pos:line="286" pos:column="13">continue;<pos:position pos:line="286" pos:column="22"/></continue>
        }<pos:position pos:line="287" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="288" pos:column="9">debug<pos:position pos:line="288" pos:column="14"/></name><argument_list pos:line="288" pos:column="14">(<argument><expr><operator pos:line="288" pos:column="15">(<pos:position pos:line="288" pos:column="16"/></operator><name pos:line="288" pos:column="16">char<pos:position pos:line="288" pos:column="20"/></name> <operator pos:line="288" pos:column="21">*<pos:position pos:line="288" pos:column="22"/></operator><operator pos:line="288" pos:column="22">)<pos:position pos:line="288" pos:column="23"/></operator> <literal type="string" pos:line="288" pos:column="24">"%s| %s: DEBUG: Got '%s' from squid (length: %ld).\n"<pos:position pos:line="288" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="288" pos:column="79">LogTime<pos:position pos:line="288" pos:column="86"/></name><argument_list pos:line="288" pos:column="86">()<pos:position pos:line="288" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="288" pos:column="90">PROGRAM<pos:position pos:line="288" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="99">buf<pos:position pos:line="288" pos:column="102"/></name></expr></argument>, <argument><expr><name pos:line="288" pos:column="104">length<pos:position pos:line="288" pos:column="110"/></name></expr></argument>)<pos:position pos:line="288" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="288" pos:column="112"/></expr_stmt>

        <if pos:line="290" pos:column="9">if <condition pos:line="290" pos:column="12">(<expr><name><name pos:line="290" pos:column="13">buf<pos:position pos:line="290" pos:column="16"/></name><index pos:line="290" pos:column="16">[<expr><literal type="number" pos:line="290" pos:column="17">0<pos:position pos:line="290" pos:column="18"/></literal></expr>]<pos:position pos:line="290" pos:column="19"/></index></name> <operator pos:line="290" pos:column="20">==<pos:position pos:line="290" pos:column="22"/></operator> <literal type="char" pos:line="290" pos:column="23">'\0'<pos:position pos:line="290" pos:column="27"/></literal></expr>)<pos:position pos:line="290" pos:column="28"/></condition><then pos:line="290" pos:column="28"> <block pos:line="290" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="291" pos:column="13">debug<pos:position pos:line="291" pos:column="18"/></name><argument_list pos:line="291" pos:column="18">(<argument><expr><operator pos:line="291" pos:column="19">(<pos:position pos:line="291" pos:column="20"/></operator><name pos:line="291" pos:column="20">char<pos:position pos:line="291" pos:column="24"/></name> <operator pos:line="291" pos:column="25">*<pos:position pos:line="291" pos:column="26"/></operator><operator pos:line="291" pos:column="26">)<pos:position pos:line="291" pos:column="27"/></operator> <literal type="string" pos:line="291" pos:column="28">"%s| %s: ERROR: Invalid request\n"<pos:position pos:line="291" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="291" pos:column="64">LogTime<pos:position pos:line="291" pos:column="71"/></name><argument_list pos:line="291" pos:column="71">()<pos:position pos:line="291" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="291" pos:column="75">PROGRAM<pos:position pos:line="291" pos:column="82"/></name></expr></argument>)<pos:position pos:line="291" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="292" pos:column="13">fprintf<pos:position pos:line="292" pos:column="20"/></name><argument_list pos:line="292" pos:column="20">(<argument><expr><name pos:line="292" pos:column="21">stdout<pos:position pos:line="292" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="29">"BH Invalid request\n"<pos:position pos:line="292" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="53"/></expr_stmt>
            <continue pos:line="293" pos:column="13">continue;<pos:position pos:line="293" pos:column="22"/></continue>
        }<pos:position pos:line="294" pos:column="10"/></block></then></if>
        <if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><call><name pos:line="295" pos:column="13">strlen<pos:position pos:line="295" pos:column="19"/></name><argument_list pos:line="295" pos:column="19">(<argument><expr><name pos:line="295" pos:column="20">buf<pos:position pos:line="295" pos:column="23"/></name></expr></argument>)<pos:position pos:line="295" pos:column="24"/></argument_list></call> <operator pos:line="295" pos:column="25">&lt;<pos:position pos:line="295" pos:column="29"/></operator> <literal type="number" pos:line="295" pos:column="27">2<pos:position pos:line="295" pos:column="28"/></literal></expr>)<pos:position pos:line="295" pos:column="29"/></condition><then pos:line="295" pos:column="29"> <block pos:line="295" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="296" pos:column="13">debug<pos:position pos:line="296" pos:column="18"/></name><argument_list pos:line="296" pos:column="18">(<argument><expr><operator pos:line="296" pos:column="19">(<pos:position pos:line="296" pos:column="20"/></operator><name pos:line="296" pos:column="20">char<pos:position pos:line="296" pos:column="24"/></name> <operator pos:line="296" pos:column="25">*<pos:position pos:line="296" pos:column="26"/></operator><operator pos:line="296" pos:column="26">)<pos:position pos:line="296" pos:column="27"/></operator> <literal type="string" pos:line="296" pos:column="28">"%s| %s: ERROR: Invalid request [%s]\n"<pos:position pos:line="296" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="296" pos:column="69">LogTime<pos:position pos:line="296" pos:column="76"/></name><argument_list pos:line="296" pos:column="76">()<pos:position pos:line="296" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="296" pos:column="80">PROGRAM<pos:position pos:line="296" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="296" pos:column="89">buf<pos:position pos:line="296" pos:column="92"/></name></expr></argument>)<pos:position pos:line="296" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="297" pos:column="13">fprintf<pos:position pos:line="297" pos:column="20"/></name><argument_list pos:line="297" pos:column="20">(<argument><expr><name pos:line="297" pos:column="21">stdout<pos:position pos:line="297" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="29">"BH Invalid request\n"<pos:position pos:line="297" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="297" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="53"/></expr_stmt>
            <continue pos:line="298" pos:column="13">continue;<pos:position pos:line="298" pos:column="22"/></continue>
        }<pos:position pos:line="299" pos:column="10"/></block></then></if>
        <if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><operator pos:line="300" pos:column="13">!<pos:position pos:line="300" pos:column="14"/></operator><call><name pos:line="300" pos:column="14">strncmp<pos:position pos:line="300" pos:column="21"/></name><argument_list pos:line="300" pos:column="21">(<argument><expr><name pos:line="300" pos:column="22">buf<pos:position pos:line="300" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="27">"QQ"<pos:position pos:line="300" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="300" pos:column="33">2<pos:position pos:line="300" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="300" pos:column="36"/></condition><then pos:line="300" pos:column="36"> <block pos:line="300" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="301" pos:column="13">gss_release_buffer<pos:position pos:line="301" pos:column="31"/></name><argument_list pos:line="301" pos:column="31">(<argument><expr><operator pos:line="301" pos:column="32">&amp;<pos:position pos:line="301" pos:column="37"/></operator><name pos:line="301" pos:column="33">minor_status<pos:position pos:line="301" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="301" pos:column="47">&amp;<pos:position pos:line="301" pos:column="52"/></operator><name pos:line="301" pos:column="48">input_token<pos:position pos:line="301" pos:column="59"/></name></expr></argument>)<pos:position pos:line="301" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="302" pos:column="13">gss_release_buffer<pos:position pos:line="302" pos:column="31"/></name><argument_list pos:line="302" pos:column="31">(<argument><expr><operator pos:line="302" pos:column="32">&amp;<pos:position pos:line="302" pos:column="37"/></operator><name pos:line="302" pos:column="33">minor_status<pos:position pos:line="302" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="302" pos:column="47">&amp;<pos:position pos:line="302" pos:column="52"/></operator><name pos:line="302" pos:column="48">output_token<pos:position pos:line="302" pos:column="60"/></name></expr></argument>)<pos:position pos:line="302" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="303" pos:column="13">gss_release_buffer<pos:position pos:line="303" pos:column="31"/></name><argument_list pos:line="303" pos:column="31">(<argument><expr><operator pos:line="303" pos:column="32">&amp;<pos:position pos:line="303" pos:column="37"/></operator><name pos:line="303" pos:column="33">minor_status<pos:position pos:line="303" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="303" pos:column="47">&amp;<pos:position pos:line="303" pos:column="52"/></operator><name pos:line="303" pos:column="48">service<pos:position pos:line="303" pos:column="55"/></name></expr></argument>)<pos:position pos:line="303" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="304" pos:column="13">gss_release_cred<pos:position pos:line="304" pos:column="29"/></name><argument_list pos:line="304" pos:column="29">(<argument><expr><operator pos:line="304" pos:column="30">&amp;<pos:position pos:line="304" pos:column="35"/></operator><name pos:line="304" pos:column="31">minor_status<pos:position pos:line="304" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="304" pos:column="45">&amp;<pos:position pos:line="304" pos:column="50"/></operator><name pos:line="304" pos:column="46">server_creds<pos:position pos:line="304" pos:column="58"/></name></expr></argument>)<pos:position pos:line="304" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="60"/></expr_stmt>
            <if pos:line="305" pos:column="13">if <condition pos:line="305" pos:column="16">(<expr><name pos:line="305" pos:column="17">server_name<pos:position pos:line="305" pos:column="28"/></name></expr>)<pos:position pos:line="305" pos:column="29"/></condition><then pos:line="305" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="306" pos:column="17">gss_release_name<pos:position pos:line="306" pos:column="33"/></name><argument_list pos:line="306" pos:column="33">(<argument><expr><operator pos:line="306" pos:column="34">&amp;<pos:position pos:line="306" pos:column="39"/></operator><name pos:line="306" pos:column="35">minor_status<pos:position pos:line="306" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="306" pos:column="49">&amp;<pos:position pos:line="306" pos:column="54"/></operator><name pos:line="306" pos:column="50">server_name<pos:position pos:line="306" pos:column="61"/></name></expr></argument>)<pos:position pos:line="306" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="63"/></expr_stmt></block></then></if>
            <if pos:line="307" pos:column="13">if <condition pos:line="307" pos:column="16">(<expr><name pos:line="307" pos:column="17">client_name<pos:position pos:line="307" pos:column="28"/></name></expr>)<pos:position pos:line="307" pos:column="29"/></condition><then pos:line="307" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="308" pos:column="17">gss_release_name<pos:position pos:line="308" pos:column="33"/></name><argument_list pos:line="308" pos:column="33">(<argument><expr><operator pos:line="308" pos:column="34">&amp;<pos:position pos:line="308" pos:column="39"/></operator><name pos:line="308" pos:column="35">minor_status<pos:position pos:line="308" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="308" pos:column="49">&amp;<pos:position pos:line="308" pos:column="54"/></operator><name pos:line="308" pos:column="50">client_name<pos:position pos:line="308" pos:column="61"/></name></expr></argument>)<pos:position pos:line="308" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="63"/></expr_stmt></block></then></if>
            <if pos:line="309" pos:column="13">if <condition pos:line="309" pos:column="16">(<expr><name pos:line="309" pos:column="17">gss_context<pos:position pos:line="309" pos:column="28"/></name> <operator pos:line="309" pos:column="29">!=<pos:position pos:line="309" pos:column="31"/></operator> <name pos:line="309" pos:column="32">GSS_C_NO_CONTEXT<pos:position pos:line="309" pos:column="48"/></name></expr>)<pos:position pos:line="309" pos:column="49"/></condition><then pos:line="309" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="310" pos:column="17">gss_delete_sec_context<pos:position pos:line="310" pos:column="39"/></name><argument_list pos:line="310" pos:column="39">(<argument><expr><operator pos:line="310" pos:column="40">&amp;<pos:position pos:line="310" pos:column="45"/></operator><name pos:line="310" pos:column="41">minor_status<pos:position pos:line="310" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="310" pos:column="55">&amp;<pos:position pos:line="310" pos:column="60"/></operator><name pos:line="310" pos:column="56">gss_context<pos:position pos:line="310" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="69">NULL<pos:position pos:line="310" pos:column="73"/></name></expr></argument>)<pos:position pos:line="310" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="75"/></expr_stmt></block></then></if>
            <if pos:line="311" pos:column="13">if <condition pos:line="311" pos:column="16">(<expr><name pos:line="311" pos:column="17">kerberosToken<pos:position pos:line="311" pos:column="30"/></name></expr>)<pos:position pos:line="311" pos:column="31"/></condition><then pos:line="311" pos:column="31"> <block pos:line="311" pos:column="32">{
                <comment type="block" pos:line="312" pos:column="17">/* Allocated by parseNegTokenInit, but no matching free function exists.. */</comment>
                <if pos:line="313" pos:column="17">if <condition pos:line="313" pos:column="20">(<expr><operator pos:line="313" pos:column="21">!<pos:position pos:line="313" pos:column="22"/></operator><name pos:line="313" pos:column="22">spnego_flag<pos:position pos:line="313" pos:column="33"/></name></expr>)<pos:position pos:line="313" pos:column="34"/></condition><then pos:line="313" pos:column="34">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="314" pos:column="21">xfree<pos:position pos:line="314" pos:column="26"/></name><argument_list pos:line="314" pos:column="26">(<argument><expr><name pos:line="314" pos:column="27">kerberosToken<pos:position pos:line="314" pos:column="40"/></name></expr></argument>)<pos:position pos:line="314" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="42"/></expr_stmt></block></then></if>
            }<pos:position pos:line="315" pos:column="14"/></block></then></if>
            <if pos:line="316" pos:column="13">if <condition pos:line="316" pos:column="16">(<expr><name pos:line="316" pos:column="17">spnego_flag<pos:position pos:line="316" pos:column="28"/></name></expr>)<pos:position pos:line="316" pos:column="29"/></condition><then pos:line="316" pos:column="29"> <block pos:line="316" pos:column="30">{
                <comment type="block" pos:line="317" pos:column="17">/* Allocated by makeNegTokenTarg, but no matching free function exists.. */</comment>
                <expr_stmt><expr><call><name pos:line="318" pos:column="17">xfree<pos:position pos:line="318" pos:column="22"/></name><argument_list pos:line="318" pos:column="22">(<argument><expr><name pos:line="318" pos:column="23">spnegoToken<pos:position pos:line="318" pos:column="34"/></name></expr></argument>)<pos:position pos:line="318" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="319" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="320" pos:column="13">xfree<pos:position pos:line="320" pos:column="18"/></name><argument_list pos:line="320" pos:column="18">(<argument><expr><name pos:line="320" pos:column="19">token<pos:position pos:line="320" pos:column="24"/></name></expr></argument>)<pos:position pos:line="320" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="321" pos:column="13">fprintf<pos:position pos:line="321" pos:column="20"/></name><argument_list pos:line="321" pos:column="20">(<argument><expr><name pos:line="321" pos:column="21">stdout<pos:position pos:line="321" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="321" pos:column="29">"BH quit command\n"<pos:position pos:line="321" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="321" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="322" pos:column="13">exit<pos:position pos:line="322" pos:column="17"/></name><argument_list pos:line="322" pos:column="17">(<argument><expr><literal type="number" pos:line="322" pos:column="18">0<pos:position pos:line="322" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="323" pos:column="10"/></block></then></if>
        <if pos:line="324" pos:column="9">if <condition pos:line="324" pos:column="12">(<expr><call><name pos:line="324" pos:column="13">strncmp<pos:position pos:line="324" pos:column="20"/></name><argument_list pos:line="324" pos:column="20">(<argument><expr><name pos:line="324" pos:column="21">buf<pos:position pos:line="324" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="26">"YR"<pos:position pos:line="324" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="324" pos:column="32">2<pos:position pos:line="324" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="324" pos:column="34"/></argument_list></call> <operator pos:line="324" pos:column="35">&amp;&amp;<pos:position pos:line="324" pos:column="45"/></operator> <call><name pos:line="324" pos:column="38">strncmp<pos:position pos:line="324" pos:column="45"/></name><argument_list pos:line="324" pos:column="45">(<argument><expr><name pos:line="324" pos:column="46">buf<pos:position pos:line="324" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="51">"KK"<pos:position pos:line="324" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="324" pos:column="57">2<pos:position pos:line="324" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="324" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="324" pos:column="60"/></condition><then pos:line="324" pos:column="60"> <block pos:line="324" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="325" pos:column="13">debug<pos:position pos:line="325" pos:column="18"/></name><argument_list pos:line="325" pos:column="18">(<argument><expr><operator pos:line="325" pos:column="19">(<pos:position pos:line="325" pos:column="20"/></operator><name pos:line="325" pos:column="20">char<pos:position pos:line="325" pos:column="24"/></name> <operator pos:line="325" pos:column="25">*<pos:position pos:line="325" pos:column="26"/></operator><operator pos:line="325" pos:column="26">)<pos:position pos:line="325" pos:column="27"/></operator> <literal type="string" pos:line="325" pos:column="28">"%s| %s: ERROR: Invalid request [%s]\n"<pos:position pos:line="325" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="325" pos:column="69">LogTime<pos:position pos:line="325" pos:column="76"/></name><argument_list pos:line="325" pos:column="76">()<pos:position pos:line="325" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="325" pos:column="80">PROGRAM<pos:position pos:line="325" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="325" pos:column="89">buf<pos:position pos:line="325" pos:column="92"/></name></expr></argument>)<pos:position pos:line="325" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="325" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="326" pos:column="13">fprintf<pos:position pos:line="326" pos:column="20"/></name><argument_list pos:line="326" pos:column="20">(<argument><expr><name pos:line="326" pos:column="21">stdout<pos:position pos:line="326" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="326" pos:column="29">"BH Invalid request\n"<pos:position pos:line="326" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="326" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="53"/></expr_stmt>
            <continue pos:line="327" pos:column="13">continue;<pos:position pos:line="327" pos:column="22"/></continue>
        }<pos:position pos:line="328" pos:column="10"/></block></then></if>
        <if pos:line="329" pos:column="9">if <condition pos:line="329" pos:column="12">(<expr><operator pos:line="329" pos:column="13">!<pos:position pos:line="329" pos:column="14"/></operator><call><name pos:line="329" pos:column="14">strncmp<pos:position pos:line="329" pos:column="21"/></name><argument_list pos:line="329" pos:column="21">(<argument><expr><name pos:line="329" pos:column="22">buf<pos:position pos:line="329" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="329" pos:column="27">"YR"<pos:position pos:line="329" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="329" pos:column="33">2<pos:position pos:line="329" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="329" pos:column="36"/></condition><then pos:line="329" pos:column="36"> <block pos:line="329" pos:column="37">{
            <if pos:line="330" pos:column="13">if <condition pos:line="330" pos:column="16">(<expr><name pos:line="330" pos:column="17">gss_context<pos:position pos:line="330" pos:column="28"/></name> <operator pos:line="330" pos:column="29">!=<pos:position pos:line="330" pos:column="31"/></operator> <name pos:line="330" pos:column="32">GSS_C_NO_CONTEXT<pos:position pos:line="330" pos:column="48"/></name></expr>)<pos:position pos:line="330" pos:column="49"/></condition><then pos:line="330" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="331" pos:column="17">gss_delete_sec_context<pos:position pos:line="331" pos:column="39"/></name><argument_list pos:line="331" pos:column="39">(<argument><expr><operator pos:line="331" pos:column="40">&amp;<pos:position pos:line="331" pos:column="45"/></operator><name pos:line="331" pos:column="41">minor_status<pos:position pos:line="331" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="331" pos:column="55">&amp;<pos:position pos:line="331" pos:column="60"/></operator><name pos:line="331" pos:column="56">gss_context<pos:position pos:line="331" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="69">NULL<pos:position pos:line="331" pos:column="73"/></name></expr></argument>)<pos:position pos:line="331" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="331" pos:column="75"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name pos:line="332" pos:column="13">gss_context<pos:position pos:line="332" pos:column="24"/></name> <operator pos:line="332" pos:column="25">=<pos:position pos:line="332" pos:column="26"/></operator> <name pos:line="332" pos:column="27">GSS_C_NO_CONTEXT<pos:position pos:line="332" pos:column="43"/></name></expr>;<pos:position pos:line="332" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="333" pos:column="10"/></block></then></if>
        <if pos:line="334" pos:column="9">if <condition pos:line="334" pos:column="12">(<expr><call><name pos:line="334" pos:column="13">strlen<pos:position pos:line="334" pos:column="19"/></name><argument_list pos:line="334" pos:column="19">(<argument><expr><name pos:line="334" pos:column="20">buf<pos:position pos:line="334" pos:column="23"/></name></expr></argument>)<pos:position pos:line="334" pos:column="24"/></argument_list></call> <operator pos:line="334" pos:column="25">&lt;=<pos:position pos:line="334" pos:column="30"/></operator> <literal type="number" pos:line="334" pos:column="28">3<pos:position pos:line="334" pos:column="29"/></literal></expr>)<pos:position pos:line="334" pos:column="30"/></condition><then pos:line="334" pos:column="30"> <block pos:line="334" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="335" pos:column="13">debug<pos:position pos:line="335" pos:column="18"/></name><argument_list pos:line="335" pos:column="18">(<argument><expr><operator pos:line="335" pos:column="19">(<pos:position pos:line="335" pos:column="20"/></operator><name pos:line="335" pos:column="20">char<pos:position pos:line="335" pos:column="24"/></name> <operator pos:line="335" pos:column="25">*<pos:position pos:line="335" pos:column="26"/></operator><operator pos:line="335" pos:column="26">)<pos:position pos:line="335" pos:column="27"/></operator> <literal type="string" pos:line="335" pos:column="28">"%s| %s: ERROR: Invalid negotiate request [%s]\n"<pos:position pos:line="335" pos:column="77"/></literal></expr></argument>, <argument><expr><call><name pos:line="335" pos:column="79">LogTime<pos:position pos:line="335" pos:column="86"/></name><argument_list pos:line="335" pos:column="86">()<pos:position pos:line="335" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="335" pos:column="90">PROGRAM<pos:position pos:line="335" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="335" pos:column="99">buf<pos:position pos:line="335" pos:column="102"/></name></expr></argument>)<pos:position pos:line="335" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="335" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="336" pos:column="13">fprintf<pos:position pos:line="336" pos:column="20"/></name><argument_list pos:line="336" pos:column="20">(<argument><expr><name pos:line="336" pos:column="21">stdout<pos:position pos:line="336" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="336" pos:column="29">"BH Invalid negotiate request\n"<pos:position pos:line="336" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="336" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="63"/></expr_stmt>
            <continue pos:line="337" pos:column="13">continue;<pos:position pos:line="337" pos:column="22"/></continue>
        }<pos:position pos:line="338" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><specifier pos:line="339" pos:column="9">const<pos:position pos:line="339" pos:column="14"/></specifier> <name pos:line="339" pos:column="15">uint8_t<pos:position pos:line="339" pos:column="22"/></name> <modifier pos:line="339" pos:column="23">*<pos:position pos:line="339" pos:column="24"/></modifier></type><name pos:line="339" pos:column="24">b64Token<pos:position pos:line="339" pos:column="32"/></name> <init pos:line="339" pos:column="33">= <expr><cast type="reinterpret" pos:line="339" pos:column="35">reinterpret_cast<argument_list type="generic" pos:line="339" pos:column="51">&lt;<argument><expr><specifier pos:line="339" pos:column="52">const<pos:position pos:line="339" pos:column="57"/></specifier> <name pos:line="339" pos:column="58">uint8_t<pos:position pos:line="339" pos:column="65"/></name><operator pos:line="339" pos:column="65">*<pos:position pos:line="339" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="339" pos:column="70"/></argument_list><argument_list pos:line="339" pos:column="67">(<argument><expr><name pos:line="339" pos:column="68">buf<pos:position pos:line="339" pos:column="71"/></name><operator pos:line="339" pos:column="71">+<pos:position pos:line="339" pos:column="72"/></operator><literal type="number" pos:line="339" pos:column="72">3<pos:position pos:line="339" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="74"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="339" pos:column="75"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="340" pos:column="9">const<pos:position pos:line="340" pos:column="14"/></specifier> <name pos:line="340" pos:column="15">size_t<pos:position pos:line="340" pos:column="21"/></name></type> <name pos:line="340" pos:column="22">srcLen<pos:position pos:line="340" pos:column="28"/></name> <init pos:line="340" pos:column="29">= <expr><call><name pos:line="340" pos:column="31">strlen<pos:position pos:line="340" pos:column="37"/></name><argument_list pos:line="340" pos:column="37">(<argument><expr><name pos:line="340" pos:column="38">buf<pos:position pos:line="340" pos:column="41"/></name><operator pos:line="340" pos:column="41">+<pos:position pos:line="340" pos:column="42"/></operator><literal type="number" pos:line="340" pos:column="42">3<pos:position pos:line="340" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="340" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="341" pos:column="9">input_token<pos:position pos:line="341" pos:column="20"/></name><operator pos:line="341" pos:column="20">.<pos:position pos:line="341" pos:column="21"/></operator><name pos:line="341" pos:column="21">length<pos:position pos:line="341" pos:column="27"/></name></name> <operator pos:line="341" pos:column="28">=<pos:position pos:line="341" pos:column="29"/></operator> <call><name pos:line="341" pos:column="30">BASE64_DECODE_LENGTH<pos:position pos:line="341" pos:column="50"/></name><argument_list pos:line="341" pos:column="50">(<argument><expr><name pos:line="341" pos:column="51">srcLen<pos:position pos:line="341" pos:column="57"/></name></expr></argument>)<pos:position pos:line="341" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="342" pos:column="9">debug<pos:position pos:line="342" pos:column="14"/></name><argument_list pos:line="342" pos:column="14">(<argument><expr><operator pos:line="342" pos:column="15">(<pos:position pos:line="342" pos:column="16"/></operator><name pos:line="342" pos:column="16">char<pos:position pos:line="342" pos:column="20"/></name> <operator pos:line="342" pos:column="21">*<pos:position pos:line="342" pos:column="22"/></operator><operator pos:line="342" pos:column="22">)<pos:position pos:line="342" pos:column="23"/></operator> <literal type="string" pos:line="342" pos:column="24">"%s| %s: DEBUG: Decode '%s' (decoded length estimate: %d).\n"<pos:position pos:line="342" pos:column="85"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="343" pos:column="15">LogTime<pos:position pos:line="343" pos:column="22"/></name><argument_list pos:line="343" pos:column="22">()<pos:position pos:line="343" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="343" pos:column="26">PROGRAM<pos:position pos:line="343" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="343" pos:column="35">b64Token<pos:position pos:line="343" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="343" pos:column="45">(<pos:position pos:line="343" pos:column="46"/></operator><name pos:line="343" pos:column="46">int<pos:position pos:line="343" pos:column="49"/></name><operator pos:line="343" pos:column="49">)<pos:position pos:line="343" pos:column="50"/></operator> <name><name pos:line="343" pos:column="51">input_token<pos:position pos:line="343" pos:column="62"/></name><operator pos:line="343" pos:column="62">.<pos:position pos:line="343" pos:column="63"/></operator><name pos:line="343" pos:column="63">length<pos:position pos:line="343" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="343" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="343" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="344" pos:column="9">input_token<pos:position pos:line="344" pos:column="20"/></name><operator pos:line="344" pos:column="20">.<pos:position pos:line="344" pos:column="21"/></operator><name pos:line="344" pos:column="21">value<pos:position pos:line="344" pos:column="26"/></name></name> <operator pos:line="344" pos:column="27">=<pos:position pos:line="344" pos:column="28"/></operator> <call><name pos:line="344" pos:column="29">xmalloc<pos:position pos:line="344" pos:column="36"/></name><argument_list pos:line="344" pos:column="36">(<argument><expr><name><name pos:line="344" pos:column="37">input_token<pos:position pos:line="344" pos:column="48"/></name><operator pos:line="344" pos:column="48">.<pos:position pos:line="344" pos:column="49"/></operator><name pos:line="344" pos:column="49">length<pos:position pos:line="344" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="344" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="57"/></expr_stmt>

        <decl_stmt><decl><type><name><name pos:line="346" pos:column="9">struct<pos:position pos:line="346" pos:column="15"/></name> <name pos:line="346" pos:column="16">base64_decode_ctx<pos:position pos:line="346" pos:column="33"/></name></name></type> <name pos:line="346" pos:column="34">ctx<pos:position pos:line="346" pos:column="37"/></name></decl>;<pos:position pos:line="346" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="347" pos:column="9">base64_decode_init<pos:position pos:line="347" pos:column="27"/></name><argument_list pos:line="347" pos:column="27">(<argument><expr><operator pos:line="347" pos:column="28">&amp;<pos:position pos:line="347" pos:column="33"/></operator><name pos:line="347" pos:column="29">ctx<pos:position pos:line="347" pos:column="32"/></name></expr></argument>)<pos:position pos:line="347" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="34"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="348" pos:column="9">size_t<pos:position pos:line="348" pos:column="15"/></name></type> <name pos:line="348" pos:column="16">dstLen<pos:position pos:line="348" pos:column="22"/></name> <init pos:line="348" pos:column="23">= <expr><literal type="number" pos:line="348" pos:column="25">0<pos:position pos:line="348" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="348" pos:column="27"/></decl_stmt>
        <if pos:line="349" pos:column="9">if <condition pos:line="349" pos:column="12">(<expr><operator pos:line="349" pos:column="13">!<pos:position pos:line="349" pos:column="14"/></operator><call><name pos:line="349" pos:column="14">base64_decode_update<pos:position pos:line="349" pos:column="34"/></name><argument_list pos:line="349" pos:column="34">(<argument><expr><operator pos:line="349" pos:column="35">&amp;<pos:position pos:line="349" pos:column="40"/></operator><name pos:line="349" pos:column="36">ctx<pos:position pos:line="349" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="349" pos:column="41">&amp;<pos:position pos:line="349" pos:column="46"/></operator><name pos:line="349" pos:column="42">dstLen<pos:position pos:line="349" pos:column="48"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="349" pos:column="50">static_cast<argument_list type="generic" pos:line="349" pos:column="61">&lt;<argument><expr><name pos:line="349" pos:column="62">uint8_t<pos:position pos:line="349" pos:column="69"/></name><operator pos:line="349" pos:column="69">*<pos:position pos:line="349" pos:column="70"/></operator></expr></argument>&gt;<pos:position pos:line="349" pos:column="74"/></argument_list><argument_list pos:line="349" pos:column="71">(<argument><expr><name><name pos:line="349" pos:column="72">input_token<pos:position pos:line="349" pos:column="83"/></name><operator pos:line="349" pos:column="83">.<pos:position pos:line="349" pos:column="84"/></operator><name pos:line="349" pos:column="84">value<pos:position pos:line="349" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="349" pos:column="90"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="349" pos:column="92">srcLen<pos:position pos:line="349" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="349" pos:column="100">b64Token<pos:position pos:line="349" pos:column="108"/></name></expr></argument>)<pos:position pos:line="349" pos:column="109"/></argument_list></call> <operator pos:line="349" pos:column="110">||<pos:position pos:line="349" pos:column="112"/></operator>
                <operator pos:line="350" pos:column="17">!<pos:position pos:line="350" pos:column="18"/></operator><call><name pos:line="350" pos:column="18">base64_decode_final<pos:position pos:line="350" pos:column="37"/></name><argument_list pos:line="350" pos:column="37">(<argument><expr><operator pos:line="350" pos:column="38">&amp;<pos:position pos:line="350" pos:column="43"/></operator><name pos:line="350" pos:column="39">ctx<pos:position pos:line="350" pos:column="42"/></name></expr></argument>)<pos:position pos:line="350" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="350" pos:column="44"/></condition><then pos:line="350" pos:column="44"> <block pos:line="350" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="351" pos:column="13">debug<pos:position pos:line="351" pos:column="18"/></name><argument_list pos:line="351" pos:column="18">(<argument><expr><operator pos:line="351" pos:column="19">(<pos:position pos:line="351" pos:column="20"/></operator><name pos:line="351" pos:column="20">char<pos:position pos:line="351" pos:column="24"/></name> <operator pos:line="351" pos:column="25">*<pos:position pos:line="351" pos:column="26"/></operator><operator pos:line="351" pos:column="26">)<pos:position pos:line="351" pos:column="27"/></operator> <literal type="string" pos:line="351" pos:column="28">"%s| %s: ERROR: Invalid base64 token [%s]\n"<pos:position pos:line="351" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="351" pos:column="74">LogTime<pos:position pos:line="351" pos:column="81"/></name><argument_list pos:line="351" pos:column="81">()<pos:position pos:line="351" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="351" pos:column="85">PROGRAM<pos:position pos:line="351" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="351" pos:column="94">b64Token<pos:position pos:line="351" pos:column="102"/></name></expr></argument>)<pos:position pos:line="351" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="352" pos:column="13">fprintf<pos:position pos:line="352" pos:column="20"/></name><argument_list pos:line="352" pos:column="20">(<argument><expr><name pos:line="352" pos:column="21">stdout<pos:position pos:line="352" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="29">"BH Invalid negotiate request token\n"<pos:position pos:line="352" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="352" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="69"/></expr_stmt>
            <continue pos:line="353" pos:column="13">continue;<pos:position pos:line="353" pos:column="22"/></continue>
        }<pos:position pos:line="354" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="355" pos:column="9">input_token<pos:position pos:line="355" pos:column="20"/></name><operator pos:line="355" pos:column="20">.<pos:position pos:line="355" pos:column="21"/></operator><name pos:line="355" pos:column="21">length<pos:position pos:line="355" pos:column="27"/></name></name> <operator pos:line="355" pos:column="28">=<pos:position pos:line="355" pos:column="29"/></operator> <name pos:line="355" pos:column="30">dstLen<pos:position pos:line="355" pos:column="36"/></name></expr>;<pos:position pos:line="355" pos:column="37"/></expr_stmt>

        <if pos:line="357" pos:column="9">if <condition pos:line="357" pos:column="12">(<expr><operator pos:line="357" pos:column="13">(<pos:position pos:line="357" pos:column="14"/></operator><name><name pos:line="357" pos:column="14">input_token<pos:position pos:line="357" pos:column="25"/></name><operator pos:line="357" pos:column="25">.<pos:position pos:line="357" pos:column="26"/></operator><name pos:line="357" pos:column="26">length<pos:position pos:line="357" pos:column="32"/></name></name> <operator pos:line="357" pos:column="33">&gt;=<pos:position pos:line="357" pos:column="38"/></operator> <sizeof pos:line="357" pos:column="36">sizeof <name pos:line="357" pos:column="43">ntlmProtocol<pos:position pos:line="357" pos:column="55"/></name></sizeof> <operator pos:line="357" pos:column="56">+<pos:position pos:line="357" pos:column="57"/></operator> <literal type="number" pos:line="357" pos:column="58">1<pos:position pos:line="357" pos:column="59"/></literal><operator pos:line="357" pos:column="59">)<pos:position pos:line="357" pos:column="60"/></operator> <operator pos:line="357" pos:column="61">&amp;&amp;<pos:position pos:line="357" pos:column="71"/></operator>
                <operator pos:line="358" pos:column="17">(<pos:position pos:line="358" pos:column="18"/></operator><operator pos:line="358" pos:column="18">!<pos:position pos:line="358" pos:column="19"/></operator><call><name pos:line="358" pos:column="19">memcmp<pos:position pos:line="358" pos:column="25"/></name><argument_list pos:line="358" pos:column="25">(<argument><expr><name><name pos:line="358" pos:column="26">input_token<pos:position pos:line="358" pos:column="37"/></name><operator pos:line="358" pos:column="37">.<pos:position pos:line="358" pos:column="38"/></operator><name pos:line="358" pos:column="38">value<pos:position pos:line="358" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="358" pos:column="45">ntlmProtocol<pos:position pos:line="358" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="358" pos:column="59">sizeof <name pos:line="358" pos:column="66">ntlmProtocol<pos:position pos:line="358" pos:column="78"/></name></sizeof></expr></argument>)<pos:position pos:line="358" pos:column="79"/></argument_list></call><operator pos:line="358" pos:column="79">)<pos:position pos:line="358" pos:column="80"/></operator></expr>)<pos:position pos:line="358" pos:column="81"/></condition><then pos:line="358" pos:column="81"> <block pos:line="358" pos:column="82">{
            <expr_stmt><expr><call><name pos:line="359" pos:column="13">debug<pos:position pos:line="359" pos:column="18"/></name><argument_list pos:line="359" pos:column="18">(<argument><expr><operator pos:line="359" pos:column="19">(<pos:position pos:line="359" pos:column="20"/></operator><name pos:line="359" pos:column="20">char<pos:position pos:line="359" pos:column="24"/></name> <operator pos:line="359" pos:column="25">*<pos:position pos:line="359" pos:column="26"/></operator><operator pos:line="359" pos:column="26">)<pos:position pos:line="359" pos:column="27"/></operator> <literal type="string" pos:line="359" pos:column="28">"%s| %s: WARNING: received type %d NTLM token\n"<pos:position pos:line="359" pos:column="76"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="360" pos:column="19">LogTime<pos:position pos:line="360" pos:column="26"/></name><argument_list pos:line="360" pos:column="26">()<pos:position pos:line="360" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="360" pos:column="30">PROGRAM<pos:position pos:line="360" pos:column="37"/></name></expr></argument>,
                  <argument><expr><operator pos:line="361" pos:column="19">(<pos:position pos:line="361" pos:column="20"/></operator><name pos:line="361" pos:column="20">int<pos:position pos:line="361" pos:column="23"/></name><operator pos:line="361" pos:column="23">)<pos:position pos:line="361" pos:column="24"/></operator> <operator pos:line="361" pos:column="25">*<pos:position pos:line="361" pos:column="26"/></operator><operator pos:line="361" pos:column="26">(<pos:position pos:line="361" pos:column="27"/></operator><operator pos:line="361" pos:column="27">(<pos:position pos:line="361" pos:column="28"/></operator><name pos:line="361" pos:column="28">unsigned<pos:position pos:line="361" pos:column="36"/></name> <name pos:line="361" pos:column="37">char<pos:position pos:line="361" pos:column="41"/></name> <operator pos:line="361" pos:column="42">*<pos:position pos:line="361" pos:column="43"/></operator><operator pos:line="361" pos:column="43">)<pos:position pos:line="361" pos:column="44"/></operator> <name><name pos:line="361" pos:column="45">input_token<pos:position pos:line="361" pos:column="56"/></name><operator pos:line="361" pos:column="56">.<pos:position pos:line="361" pos:column="57"/></operator><name pos:line="361" pos:column="57">value<pos:position pos:line="361" pos:column="62"/></name></name> <operator pos:line="361" pos:column="63">+<pos:position pos:line="361" pos:column="64"/></operator>
                          <sizeof pos:line="362" pos:column="27">sizeof <name pos:line="362" pos:column="34">ntlmProtocol<pos:position pos:line="362" pos:column="46"/></name></sizeof><operator pos:line="362" pos:column="46">)<pos:position pos:line="362" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="362" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="362" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="363" pos:column="13">fprintf<pos:position pos:line="363" pos:column="20"/></name><argument_list pos:line="363" pos:column="20">(<argument><expr><name pos:line="363" pos:column="21">stdout<pos:position pos:line="363" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="363" pos:column="29">"BH received type %d NTLM token\n"<pos:position pos:line="363" pos:column="63"/></literal></expr></argument>,
                    <argument><expr><operator pos:line="364" pos:column="21">(<pos:position pos:line="364" pos:column="22"/></operator><name pos:line="364" pos:column="22">int<pos:position pos:line="364" pos:column="25"/></name><operator pos:line="364" pos:column="25">)<pos:position pos:line="364" pos:column="26"/></operator> <operator pos:line="364" pos:column="27">*<pos:position pos:line="364" pos:column="28"/></operator><operator pos:line="364" pos:column="28">(<pos:position pos:line="364" pos:column="29"/></operator><operator pos:line="364" pos:column="29">(<pos:position pos:line="364" pos:column="30"/></operator><name pos:line="364" pos:column="30">unsigned<pos:position pos:line="364" pos:column="38"/></name> <name pos:line="364" pos:column="39">char<pos:position pos:line="364" pos:column="43"/></name> <operator pos:line="364" pos:column="44">*<pos:position pos:line="364" pos:column="45"/></operator><operator pos:line="364" pos:column="45">)<pos:position pos:line="364" pos:column="46"/></operator> <name><name pos:line="364" pos:column="47">input_token<pos:position pos:line="364" pos:column="58"/></name><operator pos:line="364" pos:column="58">.<pos:position pos:line="364" pos:column="59"/></operator><name pos:line="364" pos:column="59">value<pos:position pos:line="364" pos:column="64"/></name></name> <operator pos:line="364" pos:column="65">+<pos:position pos:line="364" pos:column="66"/></operator>
                            <sizeof pos:line="365" pos:column="29">sizeof <name pos:line="365" pos:column="36">ntlmProtocol<pos:position pos:line="365" pos:column="48"/></name></sizeof><operator pos:line="365" pos:column="48">)<pos:position pos:line="365" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="365" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="51"/></expr_stmt>
            <goto pos:line="366" pos:column="13">goto <name pos:line="366" pos:column="18">cleanup<pos:position pos:line="366" pos:column="25"/></name>;<pos:position pos:line="366" pos:column="26"/></goto>
        }<pos:position pos:line="367" pos:column="10"/></block></then></if>
        <if pos:line="368" pos:column="9">if <condition pos:line="368" pos:column="12">(<expr><name pos:line="368" pos:column="13">service_principal<pos:position pos:line="368" pos:column="30"/></name></expr>)<pos:position pos:line="368" pos:column="31"/></condition><then pos:line="368" pos:column="31"> <block pos:line="368" pos:column="32">{
            <if pos:line="369" pos:column="13">if <condition pos:line="369" pos:column="16">(<expr><call><name pos:line="369" pos:column="17">strcasecmp<pos:position pos:line="369" pos:column="27"/></name><argument_list pos:line="369" pos:column="27">(<argument><expr><name pos:line="369" pos:column="28">service_principal<pos:position pos:line="369" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="369" pos:column="47">"GSS_C_NO_NAME"<pos:position pos:line="369" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="369" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="369" pos:column="64"/></condition><then pos:line="369" pos:column="64"> <block pos:line="369" pos:column="65">{
                <expr_stmt><expr><name pos:line="370" pos:column="17">major_status<pos:position pos:line="370" pos:column="29"/></name> <operator pos:line="370" pos:column="30">=<pos:position pos:line="370" pos:column="31"/></operator> <call><name pos:line="370" pos:column="32">gss_import_name<pos:position pos:line="370" pos:column="47"/></name><argument_list pos:line="370" pos:column="47">(<argument><expr><operator pos:line="370" pos:column="48">&amp;<pos:position pos:line="370" pos:column="53"/></operator><name pos:line="370" pos:column="49">minor_status<pos:position pos:line="370" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="370" pos:column="63">&amp;<pos:position pos:line="370" pos:column="68"/></operator><name pos:line="370" pos:column="64">service<pos:position pos:line="370" pos:column="71"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="371" pos:column="48">(<pos:position pos:line="371" pos:column="49"/></operator><name pos:line="371" pos:column="49">gss_OID<pos:position pos:line="371" pos:column="56"/></name><operator pos:line="371" pos:column="56">)<pos:position pos:line="371" pos:column="57"/></operator> <name pos:line="371" pos:column="58">GSS_C_NULL_OID<pos:position pos:line="371" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="371" pos:column="74">&amp;<pos:position pos:line="371" pos:column="79"/></operator><name pos:line="371" pos:column="75">server_name<pos:position pos:line="371" pos:column="86"/></name></expr></argument>)<pos:position pos:line="371" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="88"/></expr_stmt>

            }<pos:position pos:line="373" pos:column="14"/></block></then> <else pos:line="373" pos:column="15">else <block pos:line="373" pos:column="20">{
                <expr_stmt><expr><name pos:line="374" pos:column="17">server_name<pos:position pos:line="374" pos:column="28"/></name> <operator pos:line="374" pos:column="29">=<pos:position pos:line="374" pos:column="30"/></operator> <name pos:line="374" pos:column="31">GSS_C_NO_NAME<pos:position pos:line="374" pos:column="44"/></name></expr>;<pos:position pos:line="374" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="375" pos:column="17">major_status<pos:position pos:line="375" pos:column="29"/></name> <operator pos:line="375" pos:column="30">=<pos:position pos:line="375" pos:column="31"/></operator> <name pos:line="375" pos:column="32">GSS_S_COMPLETE<pos:position pos:line="375" pos:column="46"/></name></expr>;<pos:position pos:line="375" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="376" pos:column="17">minor_status<pos:position pos:line="376" pos:column="29"/></name> <operator pos:line="376" pos:column="30">=<pos:position pos:line="376" pos:column="31"/></operator> <literal type="number" pos:line="376" pos:column="32">0<pos:position pos:line="376" pos:column="33"/></literal></expr>;<pos:position pos:line="376" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="377" pos:column="14"/></block></else></if>
        }<pos:position pos:line="378" pos:column="10"/></block></then> <else pos:line="378" pos:column="11">else <block pos:line="378" pos:column="16">{
            <expr_stmt><expr><name pos:line="379" pos:column="13">major_status<pos:position pos:line="379" pos:column="25"/></name> <operator pos:line="379" pos:column="26">=<pos:position pos:line="379" pos:column="27"/></operator> <call><name pos:line="379" pos:column="28">gss_import_name<pos:position pos:line="379" pos:column="43"/></name><argument_list pos:line="379" pos:column="43">(<argument><expr><operator pos:line="379" pos:column="44">&amp;<pos:position pos:line="379" pos:column="49"/></operator><name pos:line="379" pos:column="45">minor_status<pos:position pos:line="379" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="379" pos:column="59">&amp;<pos:position pos:line="379" pos:column="64"/></operator><name pos:line="379" pos:column="60">service<pos:position pos:line="379" pos:column="67"/></name></expr></argument>,
                                           <argument><expr><name pos:line="380" pos:column="44">gss_nt_service_name<pos:position pos:line="380" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="380" pos:column="65">&amp;<pos:position pos:line="380" pos:column="70"/></operator><name pos:line="380" pos:column="66">server_name<pos:position pos:line="380" pos:column="77"/></name></expr></argument>)<pos:position pos:line="380" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="381" pos:column="10"/></block></else></if>

        <if pos:line="383" pos:column="9">if <condition pos:line="383" pos:column="12">(<expr><call><name pos:line="383" pos:column="13">check_gss_err<pos:position pos:line="383" pos:column="26"/></name><argument_list pos:line="383" pos:column="26">(<argument><expr><name pos:line="383" pos:column="27">major_status<pos:position pos:line="383" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="41">minor_status<pos:position pos:line="383" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="55">"gss_import_name()"<pos:position pos:line="383" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="383" pos:column="76">log<pos:position pos:line="383" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="383" pos:column="81">1<pos:position pos:line="383" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="383" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="383" pos:column="84"/></condition><then pos:line="383" pos:column="84">
            <block type="pseudo"><goto pos:line="384" pos:column="13">goto <name pos:line="384" pos:column="18">cleanup<pos:position pos:line="384" pos:column="25"/></name>;<pos:position pos:line="384" pos:column="26"/></goto></block></then></if>

        <expr_stmt><expr><name pos:line="386" pos:column="9">major_status<pos:position pos:line="386" pos:column="21"/></name> <operator pos:line="386" pos:column="22">=<pos:position pos:line="386" pos:column="23"/></operator>
            <call><name pos:line="387" pos:column="13">gss_acquire_cred<pos:position pos:line="387" pos:column="29"/></name><argument_list pos:line="387" pos:column="29">(<argument><expr><operator pos:line="387" pos:column="30">&amp;<pos:position pos:line="387" pos:column="35"/></operator><name pos:line="387" pos:column="31">minor_status<pos:position pos:line="387" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="45">server_name<pos:position pos:line="387" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="58">GSS_C_INDEFINITE<pos:position pos:line="387" pos:column="74"/></name></expr></argument>,
                             <argument><expr><name pos:line="388" pos:column="30">GSS_C_NO_OID_SET<pos:position pos:line="388" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="48">GSS_C_ACCEPT<pos:position pos:line="388" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="388" pos:column="62">&amp;<pos:position pos:line="388" pos:column="67"/></operator><name pos:line="388" pos:column="63">server_creds<pos:position pos:line="388" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="77">NULL<pos:position pos:line="388" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="388" pos:column="83">NULL<pos:position pos:line="388" pos:column="87"/></name></expr></argument>)<pos:position pos:line="388" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="388" pos:column="89"/></expr_stmt>
        <if pos:line="389" pos:column="9">if <condition pos:line="389" pos:column="12">(<expr><call><name pos:line="389" pos:column="13">check_gss_err<pos:position pos:line="389" pos:column="26"/></name><argument_list pos:line="389" pos:column="26">(<argument><expr><name pos:line="389" pos:column="27">major_status<pos:position pos:line="389" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="389" pos:column="41">minor_status<pos:position pos:line="389" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="389" pos:column="55">"gss_acquire_cred()"<pos:position pos:line="389" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="389" pos:column="77">log<pos:position pos:line="389" pos:column="80"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="389" pos:column="82">1<pos:position pos:line="389" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="389" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="389" pos:column="85"/></condition><then pos:line="389" pos:column="85">
            <block type="pseudo"><goto pos:line="390" pos:column="13">goto <name pos:line="390" pos:column="18">cleanup<pos:position pos:line="390" pos:column="25"/></name>;<pos:position pos:line="390" pos:column="26"/></goto></block></then></if>

        <expr_stmt><expr><name pos:line="392" pos:column="9">major_status<pos:position pos:line="392" pos:column="21"/></name> <operator pos:line="392" pos:column="22">=<pos:position pos:line="392" pos:column="23"/></operator> <call><name pos:line="392" pos:column="24">gss_accept_sec_context<pos:position pos:line="392" pos:column="46"/></name><argument_list pos:line="392" pos:column="46">(<argument><expr><operator pos:line="392" pos:column="47">&amp;<pos:position pos:line="392" pos:column="52"/></operator><name pos:line="392" pos:column="48">minor_status<pos:position pos:line="392" pos:column="60"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="393" pos:column="47">&amp;<pos:position pos:line="393" pos:column="52"/></operator><name pos:line="393" pos:column="48">gss_context<pos:position pos:line="393" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><name pos:line="394" pos:column="47">server_creds<pos:position pos:line="394" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="395" pos:column="47">&amp;<pos:position pos:line="395" pos:column="52"/></operator><name pos:line="395" pos:column="48">input_token<pos:position pos:line="395" pos:column="59"/></name></expr></argument>,
                                              <argument><expr><name pos:line="396" pos:column="47">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="396" pos:column="72"/></name></expr></argument>,
                                              <argument><expr><operator pos:line="397" pos:column="47">&amp;<pos:position pos:line="397" pos:column="52"/></operator><name pos:line="397" pos:column="48">client_name<pos:position pos:line="397" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="61">NULL<pos:position pos:line="397" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="397" pos:column="67">&amp;<pos:position pos:line="397" pos:column="72"/></operator><name pos:line="397" pos:column="68">output_token<pos:position pos:line="397" pos:column="80"/></name></expr></argument>, <argument><expr><operator pos:line="397" pos:column="82">&amp;<pos:position pos:line="397" pos:column="87"/></operator><name pos:line="397" pos:column="83">ret_flags<pos:position pos:line="397" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="94">NULL<pos:position pos:line="397" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="100">NULL<pos:position pos:line="397" pos:column="104"/></name></expr></argument>)<pos:position pos:line="397" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="106"/></expr_stmt>

        <if pos:line="399" pos:column="9">if <condition pos:line="399" pos:column="12">(<expr><name><name pos:line="399" pos:column="13">output_token<pos:position pos:line="399" pos:column="25"/></name><operator pos:line="399" pos:column="25">.<pos:position pos:line="399" pos:column="26"/></operator><name pos:line="399" pos:column="26">length<pos:position pos:line="399" pos:column="32"/></name></name></expr>)<pos:position pos:line="399" pos:column="33"/></condition><then pos:line="399" pos:column="33"> <block pos:line="399" pos:column="34">{
            <expr_stmt><expr><name pos:line="400" pos:column="13">spnegoToken<pos:position pos:line="400" pos:column="24"/></name> <operator pos:line="400" pos:column="25">=<pos:position pos:line="400" pos:column="26"/></operator> <operator pos:line="400" pos:column="27">(<pos:position pos:line="400" pos:column="28"/></operator><specifier pos:line="400" pos:column="28">const<pos:position pos:line="400" pos:column="33"/></specifier> <name pos:line="400" pos:column="34">unsigned<pos:position pos:line="400" pos:column="42"/></name> <name pos:line="400" pos:column="43">char<pos:position pos:line="400" pos:column="47"/></name> <operator pos:line="400" pos:column="48">*<pos:position pos:line="400" pos:column="49"/></operator><operator pos:line="400" pos:column="49">)<pos:position pos:line="400" pos:column="50"/></operator> <name><name pos:line="400" pos:column="51">output_token<pos:position pos:line="400" pos:column="63"/></name><operator pos:line="400" pos:column="63">.<pos:position pos:line="400" pos:column="64"/></operator><name pos:line="400" pos:column="64">value<pos:position pos:line="400" pos:column="69"/></name></name></expr>;<pos:position pos:line="400" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><name pos:line="401" pos:column="13">spnegoTokenLength<pos:position pos:line="401" pos:column="30"/></name> <operator pos:line="401" pos:column="31">=<pos:position pos:line="401" pos:column="32"/></operator> <name><name pos:line="401" pos:column="33">output_token<pos:position pos:line="401" pos:column="45"/></name><operator pos:line="401" pos:column="45">.<pos:position pos:line="401" pos:column="46"/></operator><name pos:line="401" pos:column="46">length<pos:position pos:line="401" pos:column="52"/></name></name></expr>;<pos:position pos:line="401" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="402" pos:column="13">token<pos:position pos:line="402" pos:column="18"/></name> <operator pos:line="402" pos:column="19">=<pos:position pos:line="402" pos:column="20"/></operator> <operator pos:line="402" pos:column="21">(<pos:position pos:line="402" pos:column="22"/></operator><name pos:line="402" pos:column="22">char<pos:position pos:line="402" pos:column="26"/></name> <operator pos:line="402" pos:column="27">*<pos:position pos:line="402" pos:column="28"/></operator><operator pos:line="402" pos:column="28">)<pos:position pos:line="402" pos:column="29"/></operator> <call><name pos:line="402" pos:column="30">xmalloc<pos:position pos:line="402" pos:column="37"/></name><argument_list pos:line="402" pos:column="37">(<argument><expr><operator pos:line="402" pos:column="38">(<pos:position pos:line="402" pos:column="39"/></operator><name pos:line="402" pos:column="39">size_t<pos:position pos:line="402" pos:column="45"/></name><operator pos:line="402" pos:column="45">)<pos:position pos:line="402" pos:column="46"/></operator><call><name pos:line="402" pos:column="46">base64_encode_len<pos:position pos:line="402" pos:column="63"/></name><argument_list pos:line="402" pos:column="63">(<argument><expr><name pos:line="402" pos:column="64">spnegoTokenLength<pos:position pos:line="402" pos:column="81"/></name></expr></argument>)<pos:position pos:line="402" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="402" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="84"/></expr_stmt>
            <if pos:line="403" pos:column="13">if <condition pos:line="403" pos:column="16">(<expr><name pos:line="403" pos:column="17">token<pos:position pos:line="403" pos:column="22"/></name> <operator pos:line="403" pos:column="23">==<pos:position pos:line="403" pos:column="25"/></operator> <name pos:line="403" pos:column="26">NULL<pos:position pos:line="403" pos:column="30"/></name></expr>)<pos:position pos:line="403" pos:column="31"/></condition><then pos:line="403" pos:column="31"> <block pos:line="403" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="404" pos:column="17">debug<pos:position pos:line="404" pos:column="22"/></name><argument_list pos:line="404" pos:column="22">(<argument><expr><operator pos:line="404" pos:column="23">(<pos:position pos:line="404" pos:column="24"/></operator><name pos:line="404" pos:column="24">char<pos:position pos:line="404" pos:column="28"/></name> <operator pos:line="404" pos:column="29">*<pos:position pos:line="404" pos:column="30"/></operator><operator pos:line="404" pos:column="30">)<pos:position pos:line="404" pos:column="31"/></operator> <literal type="string" pos:line="404" pos:column="32">"%s| %s: ERROR: Not enough memory\n"<pos:position pos:line="404" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="404" pos:column="70">LogTime<pos:position pos:line="404" pos:column="77"/></name><argument_list pos:line="404" pos:column="77">()<pos:position pos:line="404" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="404" pos:column="81">PROGRAM<pos:position pos:line="404" pos:column="88"/></name></expr></argument>)<pos:position pos:line="404" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="405" pos:column="17">fprintf<pos:position pos:line="405" pos:column="24"/></name><argument_list pos:line="405" pos:column="24">(<argument><expr><name pos:line="405" pos:column="25">stdout<pos:position pos:line="405" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="405" pos:column="33">"BH Not enough memory\n"<pos:position pos:line="405" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="405" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="59"/></expr_stmt>
                <goto pos:line="406" pos:column="17">goto <name pos:line="406" pos:column="22">cleanup<pos:position pos:line="406" pos:column="29"/></name>;<pos:position pos:line="406" pos:column="30"/></goto>
            }<pos:position pos:line="407" pos:column="14"/></block></then></if>
            <decl_stmt><decl><type><name><name pos:line="408" pos:column="13">struct<pos:position pos:line="408" pos:column="19"/></name> <name pos:line="408" pos:column="20">base64_encode_ctx<pos:position pos:line="408" pos:column="37"/></name></name></type> <name pos:line="408" pos:column="38">tokCtx<pos:position pos:line="408" pos:column="44"/></name></decl>;<pos:position pos:line="408" pos:column="45"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="409" pos:column="13">base64_encode_init<pos:position pos:line="409" pos:column="31"/></name><argument_list pos:line="409" pos:column="31">(<argument><expr><operator pos:line="409" pos:column="32">&amp;<pos:position pos:line="409" pos:column="37"/></operator><name pos:line="409" pos:column="33">tokCtx<pos:position pos:line="409" pos:column="39"/></name></expr></argument>)<pos:position pos:line="409" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="41"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="410" pos:column="13">size_t<pos:position pos:line="410" pos:column="19"/></name></type> <name pos:line="410" pos:column="20">blen<pos:position pos:line="410" pos:column="24"/></name> <init pos:line="410" pos:column="25">= <expr><call><name pos:line="410" pos:column="27">base64_encode_update<pos:position pos:line="410" pos:column="47"/></name><argument_list pos:line="410" pos:column="47">(<argument><expr><operator pos:line="410" pos:column="48">&amp;<pos:position pos:line="410" pos:column="53"/></operator><name pos:line="410" pos:column="49">tokCtx<pos:position pos:line="410" pos:column="55"/></name></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="410" pos:column="57">reinterpret_cast<argument_list type="generic" pos:line="410" pos:column="73">&lt;<argument><expr><name pos:line="410" pos:column="74">uint8_t<pos:position pos:line="410" pos:column="81"/></name><operator pos:line="410" pos:column="81">*<pos:position pos:line="410" pos:column="82"/></operator></expr></argument>&gt;<pos:position pos:line="410" pos:column="86"/></argument_list><argument_list pos:line="410" pos:column="83">(<argument><expr><name pos:line="410" pos:column="84">token<pos:position pos:line="410" pos:column="89"/></name></expr></argument>)<pos:position pos:line="410" pos:column="90"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="410" pos:column="92">spnegoTokenLength<pos:position pos:line="410" pos:column="109"/></name></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="410" pos:column="111">reinterpret_cast<argument_list type="generic" pos:line="410" pos:column="127">&lt;<argument><expr><specifier pos:line="410" pos:column="128">const<pos:position pos:line="410" pos:column="133"/></specifier> <name pos:line="410" pos:column="134">uint8_t<pos:position pos:line="410" pos:column="141"/></name><operator pos:line="410" pos:column="141">*<pos:position pos:line="410" pos:column="142"/></operator></expr></argument>&gt;<pos:position pos:line="410" pos:column="146"/></argument_list><argument_list pos:line="410" pos:column="143">(<argument><expr><name pos:line="410" pos:column="144">spnegoToken<pos:position pos:line="410" pos:column="155"/></name></expr></argument>)<pos:position pos:line="410" pos:column="156"/></argument_list></cast></expr></argument>)<pos:position pos:line="410" pos:column="157"/></argument_list></call></expr></init></decl>;<pos:position pos:line="410" pos:column="158"/></decl_stmt>
            <expr_stmt><expr><name pos:line="411" pos:column="13">blen<pos:position pos:line="411" pos:column="17"/></name> <operator pos:line="411" pos:column="18">+=<pos:position pos:line="411" pos:column="20"/></operator> <call><name pos:line="411" pos:column="21">base64_encode_final<pos:position pos:line="411" pos:column="40"/></name><argument_list pos:line="411" pos:column="40">(<argument><expr><operator pos:line="411" pos:column="41">&amp;<pos:position pos:line="411" pos:column="46"/></operator><name pos:line="411" pos:column="42">tokCtx<pos:position pos:line="411" pos:column="48"/></name></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="411" pos:column="50">reinterpret_cast<argument_list type="generic" pos:line="411" pos:column="66">&lt;<argument><expr><name pos:line="411" pos:column="67">uint8_t<pos:position pos:line="411" pos:column="74"/></name><operator pos:line="411" pos:column="74">*<pos:position pos:line="411" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="411" pos:column="79"/></argument_list><argument_list pos:line="411" pos:column="76">(<argument><expr><name pos:line="411" pos:column="77">token<pos:position pos:line="411" pos:column="82"/></name></expr></argument>)<pos:position pos:line="411" pos:column="83"/></argument_list></cast><operator pos:line="411" pos:column="83">+<pos:position pos:line="411" pos:column="84"/></operator><name pos:line="411" pos:column="84">blen<pos:position pos:line="411" pos:column="88"/></name></expr></argument>)<pos:position pos:line="411" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="412" pos:column="13">token<pos:position pos:line="412" pos:column="18"/></name><index pos:line="412" pos:column="18">[<expr><name pos:line="412" pos:column="19">blen<pos:position pos:line="412" pos:column="23"/></name></expr>]<pos:position pos:line="412" pos:column="24"/></index></name> <operator pos:line="412" pos:column="25">=<pos:position pos:line="412" pos:column="26"/></operator> <literal type="char" pos:line="412" pos:column="27">'\0'<pos:position pos:line="412" pos:column="31"/></literal></expr>;<pos:position pos:line="412" pos:column="32"/></expr_stmt>

            <if pos:line="414" pos:column="13">if <condition pos:line="414" pos:column="16">(<expr><call><name pos:line="414" pos:column="17">check_gss_err<pos:position pos:line="414" pos:column="30"/></name><argument_list pos:line="414" pos:column="30">(<argument><expr><name pos:line="414" pos:column="31">major_status<pos:position pos:line="414" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="414" pos:column="45">minor_status<pos:position pos:line="414" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="414" pos:column="59">"gss_accept_sec_context()"<pos:position pos:line="414" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="414" pos:column="87">log<pos:position pos:line="414" pos:column="90"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="414" pos:column="92">1<pos:position pos:line="414" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="414" pos:column="94"/></argument_list></call></expr>)<pos:position pos:line="414" pos:column="95"/></condition><then pos:line="414" pos:column="95">
                <block type="pseudo"><goto pos:line="415" pos:column="17">goto <name pos:line="415" pos:column="22">cleanup<pos:position pos:line="415" pos:column="29"/></name>;<pos:position pos:line="415" pos:column="30"/></goto></block></then></if>
            <if pos:line="416" pos:column="13">if <condition pos:line="416" pos:column="16">(<expr><name pos:line="416" pos:column="17">major_status<pos:position pos:line="416" pos:column="29"/></name> <operator pos:line="416" pos:column="30">&amp;<pos:position pos:line="416" pos:column="35"/></operator> <name pos:line="416" pos:column="32">GSS_S_CONTINUE_NEEDED<pos:position pos:line="416" pos:column="53"/></name></expr>)<pos:position pos:line="416" pos:column="54"/></condition><then pos:line="416" pos:column="54"> <block pos:line="416" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="417" pos:column="17">debug<pos:position pos:line="417" pos:column="22"/></name><argument_list pos:line="417" pos:column="22">(<argument><expr><operator pos:line="417" pos:column="23">(<pos:position pos:line="417" pos:column="24"/></operator><name pos:line="417" pos:column="24">char<pos:position pos:line="417" pos:column="28"/></name> <operator pos:line="417" pos:column="29">*<pos:position pos:line="417" pos:column="30"/></operator><operator pos:line="417" pos:column="30">)<pos:position pos:line="417" pos:column="31"/></operator> <literal type="string" pos:line="417" pos:column="32">"%s| %s: INFO: continuation needed\n"<pos:position pos:line="417" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="417" pos:column="71">LogTime<pos:position pos:line="417" pos:column="78"/></name><argument_list pos:line="417" pos:column="78">()<pos:position pos:line="417" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="417" pos:column="82">PROGRAM<pos:position pos:line="417" pos:column="89"/></name></expr></argument>)<pos:position pos:line="417" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="91"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="418" pos:column="17">fprintf<pos:position pos:line="418" pos:column="24"/></name><argument_list pos:line="418" pos:column="24">(<argument><expr><name pos:line="418" pos:column="25">stdout<pos:position pos:line="418" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="418" pos:column="33">"TT %s\n"<pos:position pos:line="418" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="418" pos:column="44">token<pos:position pos:line="418" pos:column="49"/></name></expr></argument>)<pos:position pos:line="418" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="51"/></expr_stmt>
                <goto pos:line="419" pos:column="17">goto <name pos:line="419" pos:column="22">cleanup<pos:position pos:line="419" pos:column="29"/></name>;<pos:position pos:line="419" pos:column="30"/></goto>
            }<pos:position pos:line="420" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="421" pos:column="13">gss_release_buffer<pos:position pos:line="421" pos:column="31"/></name><argument_list pos:line="421" pos:column="31">(<argument><expr><operator pos:line="421" pos:column="32">&amp;<pos:position pos:line="421" pos:column="37"/></operator><name pos:line="421" pos:column="33">minor_status<pos:position pos:line="421" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="421" pos:column="47">&amp;<pos:position pos:line="421" pos:column="52"/></operator><name pos:line="421" pos:column="48">output_token<pos:position pos:line="421" pos:column="60"/></name></expr></argument>)<pos:position pos:line="421" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="422" pos:column="13">major_status<pos:position pos:line="422" pos:column="25"/></name> <operator pos:line="422" pos:column="26">=<pos:position pos:line="422" pos:column="27"/></operator>
                <call><name pos:line="423" pos:column="17">gss_display_name<pos:position pos:line="423" pos:column="33"/></name><argument_list pos:line="423" pos:column="33">(<argument><expr><operator pos:line="423" pos:column="34">&amp;<pos:position pos:line="423" pos:column="39"/></operator><name pos:line="423" pos:column="35">minor_status<pos:position pos:line="423" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="49">client_name<pos:position pos:line="423" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="423" pos:column="62">&amp;<pos:position pos:line="423" pos:column="67"/></operator><name pos:line="423" pos:column="63">output_token<pos:position pos:line="423" pos:column="75"/></name></expr></argument>,
                                 <argument><expr><name pos:line="424" pos:column="34">NULL<pos:position pos:line="424" pos:column="38"/></name></expr></argument>)<pos:position pos:line="424" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="40"/></expr_stmt>

            <if pos:line="426" pos:column="13">if <condition pos:line="426" pos:column="16">(<expr><call><name pos:line="426" pos:column="17">check_gss_err<pos:position pos:line="426" pos:column="30"/></name><argument_list pos:line="426" pos:column="30">(<argument><expr><name pos:line="426" pos:column="31">major_status<pos:position pos:line="426" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="426" pos:column="45">minor_status<pos:position pos:line="426" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="426" pos:column="59">"gss_display_name()"<pos:position pos:line="426" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="426" pos:column="81">log<pos:position pos:line="426" pos:column="84"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="426" pos:column="86">1<pos:position pos:line="426" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="426" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="426" pos:column="89"/></condition><then pos:line="426" pos:column="89">
                <block type="pseudo"><goto pos:line="427" pos:column="17">goto <name pos:line="427" pos:column="22">cleanup<pos:position pos:line="427" pos:column="29"/></name>;<pos:position pos:line="427" pos:column="30"/></goto></block></then></if>
            <expr_stmt><expr><name pos:line="428" pos:column="13">user<pos:position pos:line="428" pos:column="17"/></name> <operator pos:line="428" pos:column="18">=<pos:position pos:line="428" pos:column="19"/></operator> <operator pos:line="428" pos:column="20">(<pos:position pos:line="428" pos:column="21"/></operator><name pos:line="428" pos:column="21">char<pos:position pos:line="428" pos:column="25"/></name> <operator pos:line="428" pos:column="26">*<pos:position pos:line="428" pos:column="27"/></operator><operator pos:line="428" pos:column="27">)<pos:position pos:line="428" pos:column="28"/></operator> <call><name pos:line="428" pos:column="29">xmalloc<pos:position pos:line="428" pos:column="36"/></name><argument_list pos:line="428" pos:column="36">(<argument><expr><name><name pos:line="428" pos:column="37">output_token<pos:position pos:line="428" pos:column="49"/></name><operator pos:line="428" pos:column="49">.<pos:position pos:line="428" pos:column="50"/></operator><name pos:line="428" pos:column="50">length<pos:position pos:line="428" pos:column="56"/></name></name> <operator pos:line="428" pos:column="57">+<pos:position pos:line="428" pos:column="58"/></operator> <literal type="number" pos:line="428" pos:column="59">1<pos:position pos:line="428" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="428" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="428" pos:column="62"/></expr_stmt>
            <if pos:line="429" pos:column="13">if <condition pos:line="429" pos:column="16">(<expr><name pos:line="429" pos:column="17">user<pos:position pos:line="429" pos:column="21"/></name> <operator pos:line="429" pos:column="22">==<pos:position pos:line="429" pos:column="24"/></operator> <name pos:line="429" pos:column="25">NULL<pos:position pos:line="429" pos:column="29"/></name></expr>)<pos:position pos:line="429" pos:column="30"/></condition><then pos:line="429" pos:column="30"> <block pos:line="429" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="430" pos:column="17">debug<pos:position pos:line="430" pos:column="22"/></name><argument_list pos:line="430" pos:column="22">(<argument><expr><operator pos:line="430" pos:column="23">(<pos:position pos:line="430" pos:column="24"/></operator><name pos:line="430" pos:column="24">char<pos:position pos:line="430" pos:column="28"/></name> <operator pos:line="430" pos:column="29">*<pos:position pos:line="430" pos:column="30"/></operator><operator pos:line="430" pos:column="30">)<pos:position pos:line="430" pos:column="31"/></operator> <literal type="string" pos:line="430" pos:column="32">"%s| %s: ERROR: Not enough memory\n"<pos:position pos:line="430" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="430" pos:column="70">LogTime<pos:position pos:line="430" pos:column="77"/></name><argument_list pos:line="430" pos:column="77">()<pos:position pos:line="430" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="430" pos:column="81">PROGRAM<pos:position pos:line="430" pos:column="88"/></name></expr></argument>)<pos:position pos:line="430" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="431" pos:column="17">fprintf<pos:position pos:line="431" pos:column="24"/></name><argument_list pos:line="431" pos:column="24">(<argument><expr><name pos:line="431" pos:column="25">stdout<pos:position pos:line="431" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="431" pos:column="33">"BH Not enough memory\n"<pos:position pos:line="431" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="431" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="59"/></expr_stmt>
                <goto pos:line="432" pos:column="17">goto <name pos:line="432" pos:column="22">cleanup<pos:position pos:line="432" pos:column="29"/></name>;<pos:position pos:line="432" pos:column="30"/></goto>
            }<pos:position pos:line="433" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="434" pos:column="13">memcpy<pos:position pos:line="434" pos:column="19"/></name><argument_list pos:line="434" pos:column="19">(<argument><expr><name pos:line="434" pos:column="20">user<pos:position pos:line="434" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="434" pos:column="26">output_token<pos:position pos:line="434" pos:column="38"/></name><operator pos:line="434" pos:column="38">.<pos:position pos:line="434" pos:column="39"/></operator><name pos:line="434" pos:column="39">value<pos:position pos:line="434" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="434" pos:column="46">output_token<pos:position pos:line="434" pos:column="58"/></name><operator pos:line="434" pos:column="58">.<pos:position pos:line="434" pos:column="59"/></operator><name pos:line="434" pos:column="59">length<pos:position pos:line="434" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="434" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="434" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="435" pos:column="13">user<pos:position pos:line="435" pos:column="17"/></name><index pos:line="435" pos:column="17">[<expr><name><name pos:line="435" pos:column="18">output_token<pos:position pos:line="435" pos:column="30"/></name><operator pos:line="435" pos:column="30">.<pos:position pos:line="435" pos:column="31"/></operator><name pos:line="435" pos:column="31">length<pos:position pos:line="435" pos:column="37"/></name></name></expr>]<pos:position pos:line="435" pos:column="38"/></index></name> <operator pos:line="435" pos:column="39">=<pos:position pos:line="435" pos:column="40"/></operator> <literal type="char" pos:line="435" pos:column="41">'\0'<pos:position pos:line="435" pos:column="45"/></literal></expr>;<pos:position pos:line="435" pos:column="46"/></expr_stmt>
            <if pos:line="436" pos:column="13">if <condition pos:line="436" pos:column="16">(<expr><name pos:line="436" pos:column="17">norealm<pos:position pos:line="436" pos:column="24"/></name> <operator pos:line="436" pos:column="25">&amp;&amp;<pos:position pos:line="436" pos:column="35"/></operator> <operator pos:line="436" pos:column="28">(<pos:position pos:line="436" pos:column="29"/></operator><name pos:line="436" pos:column="29">p<pos:position pos:line="436" pos:column="30"/></name> <operator pos:line="436" pos:column="31">=<pos:position pos:line="436" pos:column="32"/></operator> <call><name pos:line="436" pos:column="33">strchr<pos:position pos:line="436" pos:column="39"/></name><argument_list pos:line="436" pos:column="39">(<argument><expr><name pos:line="436" pos:column="40">user<pos:position pos:line="436" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="436" pos:column="46">'@'<pos:position pos:line="436" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="436" pos:column="50"/></argument_list></call><operator pos:line="436" pos:column="50">)<pos:position pos:line="436" pos:column="51"/></operator> <operator pos:line="436" pos:column="52">!=<pos:position pos:line="436" pos:column="54"/></operator> <name pos:line="436" pos:column="55">NULL<pos:position pos:line="436" pos:column="59"/></name></expr>)<pos:position pos:line="436" pos:column="60"/></condition><then pos:line="436" pos:column="60"> <block pos:line="436" pos:column="61">{
                <expr_stmt><expr><operator pos:line="437" pos:column="17">*<pos:position pos:line="437" pos:column="18"/></operator><name pos:line="437" pos:column="18">p<pos:position pos:line="437" pos:column="19"/></name> <operator pos:line="437" pos:column="20">=<pos:position pos:line="437" pos:column="21"/></operator> <literal type="char" pos:line="437" pos:column="22">'\0'<pos:position pos:line="437" pos:column="26"/></literal></expr>;<pos:position pos:line="437" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="438" pos:column="14"/></block></then></if>

<cpp:if pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">if<pos:position pos:line="440" pos:column="4"/></cpp:directive> <expr><name pos:line="440" pos:column="5">HAVE_PAC_SUPPORT<pos:position pos:line="440" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><name pos:line="441" pos:column="13">ret<pos:position pos:line="441" pos:column="16"/></name> <operator pos:line="441" pos:column="17">=<pos:position pos:line="441" pos:column="18"/></operator> <call><name pos:line="441" pos:column="19">krb5_init_context<pos:position pos:line="441" pos:column="36"/></name><argument_list pos:line="441" pos:column="36">(<argument><expr><operator pos:line="441" pos:column="37">&amp;<pos:position pos:line="441" pos:column="42"/></operator><name pos:line="441" pos:column="38">context<pos:position pos:line="441" pos:column="45"/></name></expr></argument>)<pos:position pos:line="441" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="47"/></expr_stmt>
            <if pos:line="442" pos:column="13">if <condition pos:line="442" pos:column="16">(<expr><operator pos:line="442" pos:column="17">!<pos:position pos:line="442" pos:column="18"/></operator><call><name pos:line="442" pos:column="18">check_k5_err<pos:position pos:line="442" pos:column="30"/></name><argument_list pos:line="442" pos:column="30">(<argument><expr><name pos:line="442" pos:column="31">context<pos:position pos:line="442" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="442" pos:column="40">"krb5_init_context"<pos:position pos:line="442" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="442" pos:column="61">ret<pos:position pos:line="442" pos:column="64"/></name></expr></argument>)<pos:position pos:line="442" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="442" pos:column="66"/></condition><then pos:line="442" pos:column="66"> <block pos:line="442" pos:column="67">{
<cpp:if pos:line="443" pos:column="1">#<cpp:directive pos:line="443" pos:column="2">if<pos:position pos:line="443" pos:column="4"/></cpp:directive> <expr><name pos:line="443" pos:column="5">USE_HEIMDAL_KRB5<pos:position pos:line="443" pos:column="21"/></name></expr></cpp:if>
<cpp:define pos:line="444" pos:column="1">#<cpp:directive pos:line="444" pos:column="2">define<pos:position pos:line="444" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="444" pos:column="9">ADWIN2KPAC<pos:position pos:line="444" pos:column="19"/></name></cpp:macro> <cpp:value pos:line="444" pos:column="20">128<pos:position pos:line="444" pos:column="23"/></cpp:value></cpp:define>
                <expr_stmt><expr><name pos:line="445" pos:column="17">major_status<pos:position pos:line="445" pos:column="29"/></name> <operator pos:line="445" pos:column="30">=<pos:position pos:line="445" pos:column="31"/></operator> <call><name pos:line="445" pos:column="32">gsskrb5_extract_authz_data_from_sec_context<pos:position pos:line="445" pos:column="75"/></name><argument_list pos:line="445" pos:column="75">(<argument><expr><operator pos:line="445" pos:column="76">&amp;<pos:position pos:line="445" pos:column="81"/></operator><name pos:line="445" pos:column="77">minor_status<pos:position pos:line="445" pos:column="89"/></name></expr></argument>,
                               <argument><expr><name pos:line="446" pos:column="32">gss_context<pos:position pos:line="446" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="446" pos:column="45">ADWIN2KPAC<pos:position pos:line="446" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="446" pos:column="57">&amp;<pos:position pos:line="446" pos:column="62"/></operator><name pos:line="446" pos:column="58">data_set<pos:position pos:line="446" pos:column="66"/></name></expr></argument>)<pos:position pos:line="446" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="68"/></expr_stmt>
                <if pos:line="447" pos:column="17">if <condition pos:line="447" pos:column="20">(<expr><operator pos:line="447" pos:column="21">!<pos:position pos:line="447" pos:column="22"/></operator><call><name pos:line="447" pos:column="22">check_gss_err<pos:position pos:line="447" pos:column="35"/></name><argument_list pos:line="447" pos:column="35">(<argument><expr><name pos:line="447" pos:column="36">major_status<pos:position pos:line="447" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="50">minor_status<pos:position pos:line="447" pos:column="62"/></name></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="448" pos:column="36">"gsskrb5_extract_authz_data_from_sec_context()"<pos:position pos:line="448" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="448" pos:column="85">log<pos:position pos:line="448" pos:column="88"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="448" pos:column="90">0<pos:position pos:line="448" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="448" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="448" pos:column="93"/></condition><then pos:line="448" pos:column="93"> <block pos:line="448" pos:column="94">{
                    <expr_stmt><expr><name pos:line="449" pos:column="21">ret<pos:position pos:line="449" pos:column="24"/></name> <operator pos:line="449" pos:column="25">=<pos:position pos:line="449" pos:column="26"/></operator> <call><name pos:line="449" pos:column="27">krb5_pac_parse<pos:position pos:line="449" pos:column="41"/></name><argument_list pos:line="449" pos:column="41">(<argument><expr><name pos:line="449" pos:column="42">context<pos:position pos:line="449" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="449" pos:column="51">data_set<pos:position pos:line="449" pos:column="59"/></name><operator pos:line="449" pos:column="59">.<pos:position pos:line="449" pos:column="60"/></operator><name pos:line="449" pos:column="60">value<pos:position pos:line="449" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="449" pos:column="67">data_set<pos:position pos:line="449" pos:column="75"/></name><operator pos:line="449" pos:column="75">.<pos:position pos:line="449" pos:column="76"/></operator><name pos:line="449" pos:column="76">length<pos:position pos:line="449" pos:column="82"/></name></name></expr></argument>, <argument><expr><operator pos:line="449" pos:column="84">&amp;<pos:position pos:line="449" pos:column="89"/></operator><name pos:line="449" pos:column="85">pac<pos:position pos:line="449" pos:column="88"/></name></expr></argument>)<pos:position pos:line="449" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="449" pos:column="90"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="450" pos:column="21">gss_release_buffer<pos:position pos:line="450" pos:column="39"/></name><argument_list pos:line="450" pos:column="39">(<argument><expr><operator pos:line="450" pos:column="40">&amp;<pos:position pos:line="450" pos:column="45"/></operator><name pos:line="450" pos:column="41">minor_status<pos:position pos:line="450" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="450" pos:column="55">&amp;<pos:position pos:line="450" pos:column="60"/></operator><name pos:line="450" pos:column="56">data_set<pos:position pos:line="450" pos:column="64"/></name></expr></argument>)<pos:position pos:line="450" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="66"/></expr_stmt>
                    <if pos:line="451" pos:column="21">if <condition pos:line="451" pos:column="24">(<expr><operator pos:line="451" pos:column="25">!<pos:position pos:line="451" pos:column="26"/></operator><call><name pos:line="451" pos:column="26">check_k5_err<pos:position pos:line="451" pos:column="38"/></name><argument_list pos:line="451" pos:column="38">(<argument><expr><name pos:line="451" pos:column="39">context<pos:position pos:line="451" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="451" pos:column="48">"krb5_pac_parse"<pos:position pos:line="451" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="451" pos:column="66">ret<pos:position pos:line="451" pos:column="69"/></name></expr></argument>)<pos:position pos:line="451" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="451" pos:column="71"/></condition><then pos:line="451" pos:column="71"> <block pos:line="451" pos:column="72">{
                        <expr_stmt><expr><name pos:line="452" pos:column="25">ag<pos:position pos:line="452" pos:column="27"/></name> <operator pos:line="452" pos:column="28">=<pos:position pos:line="452" pos:column="29"/></operator> <call><name pos:line="452" pos:column="30">get_ad_groups<pos:position pos:line="452" pos:column="43"/></name><argument_list pos:line="452" pos:column="43">(<argument><expr><operator pos:line="452" pos:column="44">(<pos:position pos:line="452" pos:column="45"/></operator><name pos:line="452" pos:column="45">char<pos:position pos:line="452" pos:column="49"/></name> <operator pos:line="452" pos:column="50">*<pos:position pos:line="452" pos:column="51"/></operator><operator pos:line="452" pos:column="51">)<pos:position pos:line="452" pos:column="52"/></operator><operator pos:line="452" pos:column="52">&amp;<pos:position pos:line="452" pos:column="57"/></operator><name pos:line="452" pos:column="53">ad_groups<pos:position pos:line="452" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="452" pos:column="64">context<pos:position pos:line="452" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="452" pos:column="73">pac<pos:position pos:line="452" pos:column="76"/></name></expr></argument>)<pos:position pos:line="452" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="78"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="453" pos:column="25">krb5_pac_free<pos:position pos:line="453" pos:column="38"/></name><argument_list pos:line="453" pos:column="38">(<argument><expr><name pos:line="453" pos:column="39">context<pos:position pos:line="453" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="453" pos:column="48">pac<pos:position pos:line="453" pos:column="51"/></name></expr></argument>)<pos:position pos:line="453" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="453" pos:column="53"/></expr_stmt>
                    }<pos:position pos:line="454" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><call><name pos:line="455" pos:column="21">krb5_free_context<pos:position pos:line="455" pos:column="38"/></name><argument_list pos:line="455" pos:column="38">(<argument><expr><name pos:line="455" pos:column="39">context<pos:position pos:line="455" pos:column="46"/></name></expr></argument>)<pos:position pos:line="455" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="456" pos:column="18"/></block></then></if>
<cpp:else pos:line="457" pos:column="1">#<cpp:directive pos:line="457" pos:column="2">else<pos:position pos:line="457" pos:column="6"/></cpp:directive></cpp:else>
                <expr_stmt><expr><name><name pos:line="458" pos:column="17">type_id<pos:position pos:line="458" pos:column="24"/></name><operator pos:line="458" pos:column="24">.<pos:position pos:line="458" pos:column="25"/></operator><name pos:line="458" pos:column="25">value<pos:position pos:line="458" pos:column="30"/></name></name> <operator pos:line="458" pos:column="31">=<pos:position pos:line="458" pos:column="32"/></operator> <operator pos:line="458" pos:column="33">(<pos:position pos:line="458" pos:column="34"/></operator><name pos:line="458" pos:column="34">void<pos:position pos:line="458" pos:column="38"/></name> <operator pos:line="458" pos:column="39">*<pos:position pos:line="458" pos:column="40"/></operator><operator pos:line="458" pos:column="40">)<pos:position pos:line="458" pos:column="41"/></operator><literal type="string" pos:line="458" pos:column="41">"mspac"<pos:position pos:line="458" pos:column="48"/></literal></expr>;<pos:position pos:line="458" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="459" pos:column="17">type_id<pos:position pos:line="459" pos:column="24"/></name><operator pos:line="459" pos:column="24">.<pos:position pos:line="459" pos:column="25"/></operator><name pos:line="459" pos:column="25">length<pos:position pos:line="459" pos:column="31"/></name></name> <operator pos:line="459" pos:column="32">=<pos:position pos:line="459" pos:column="33"/></operator> <call><name pos:line="459" pos:column="34">strlen<pos:position pos:line="459" pos:column="40"/></name><argument_list pos:line="459" pos:column="40">(<argument><expr><operator pos:line="459" pos:column="41">(<pos:position pos:line="459" pos:column="42"/></operator><name pos:line="459" pos:column="42">char<pos:position pos:line="459" pos:column="46"/></name> <operator pos:line="459" pos:column="47">*<pos:position pos:line="459" pos:column="48"/></operator><operator pos:line="459" pos:column="48">)<pos:position pos:line="459" pos:column="49"/></operator><name><name pos:line="459" pos:column="49">type_id<pos:position pos:line="459" pos:column="56"/></name><operator pos:line="459" pos:column="56">.<pos:position pos:line="459" pos:column="57"/></operator><name pos:line="459" pos:column="57">value<pos:position pos:line="459" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="459" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="64"/></expr_stmt>
<cpp:define pos:line="460" pos:column="1">#<cpp:directive pos:line="460" pos:column="2">define<pos:position pos:line="460" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="460" pos:column="9">KRB5PACLOGONINFO<pos:position pos:line="460" pos:column="25"/></name></cpp:macro>        <cpp:value pos:line="460" pos:column="33">1<pos:position pos:line="460" pos:column="34"/></cpp:value></cpp:define>
                <expr_stmt><expr><name pos:line="461" pos:column="17">major_status<pos:position pos:line="461" pos:column="29"/></name> <operator pos:line="461" pos:column="30">=<pos:position pos:line="461" pos:column="31"/></operator> <call><name pos:line="461" pos:column="32">gss_map_name_to_any<pos:position pos:line="461" pos:column="51"/></name><argument_list pos:line="461" pos:column="51">(<argument><expr><operator pos:line="461" pos:column="52">&amp;<pos:position pos:line="461" pos:column="57"/></operator><name pos:line="461" pos:column="53">minor_status<pos:position pos:line="461" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="67">client_name<pos:position pos:line="461" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="80">KRB5PACLOGONINFO<pos:position pos:line="461" pos:column="96"/></name></expr></argument>, <argument><expr><operator pos:line="461" pos:column="98">&amp;<pos:position pos:line="461" pos:column="103"/></operator><name pos:line="461" pos:column="99">type_id<pos:position pos:line="461" pos:column="106"/></name></expr></argument>, <argument><expr><operator pos:line="461" pos:column="108">(<pos:position pos:line="461" pos:column="109"/></operator><name pos:line="461" pos:column="109">gss_any_t<pos:position pos:line="461" pos:column="118"/></name> <operator pos:line="461" pos:column="119">*<pos:position pos:line="461" pos:column="120"/></operator><operator pos:line="461" pos:column="120">)<pos:position pos:line="461" pos:column="121"/></operator><operator pos:line="461" pos:column="121">&amp;<pos:position pos:line="461" pos:column="126"/></operator><name pos:line="461" pos:column="122">pac<pos:position pos:line="461" pos:column="125"/></name></expr></argument>)<pos:position pos:line="461" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="127"/></expr_stmt>
                <if pos:line="462" pos:column="17">if <condition pos:line="462" pos:column="20">(<expr><operator pos:line="462" pos:column="21">!<pos:position pos:line="462" pos:column="22"/></operator><call><name pos:line="462" pos:column="22">check_gss_err<pos:position pos:line="462" pos:column="35"/></name><argument_list pos:line="462" pos:column="35">(<argument><expr><name pos:line="462" pos:column="36">major_status<pos:position pos:line="462" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="50">minor_status<pos:position pos:line="462" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="462" pos:column="64">"gss_map_name_to_any()"<pos:position pos:line="462" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="462" pos:column="89">log<pos:position pos:line="462" pos:column="92"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="462" pos:column="94">0<pos:position pos:line="462" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="462" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="462" pos:column="97"/></condition><then pos:line="462" pos:column="97"> <block pos:line="462" pos:column="98">{
                    <expr_stmt><expr><name pos:line="463" pos:column="21">ag<pos:position pos:line="463" pos:column="23"/></name> <operator pos:line="463" pos:column="24">=<pos:position pos:line="463" pos:column="25"/></operator> <call><name pos:line="463" pos:column="26">get_ad_groups<pos:position pos:line="463" pos:column="39"/></name><argument_list pos:line="463" pos:column="39">(<argument><expr><operator pos:line="463" pos:column="40">(<pos:position pos:line="463" pos:column="41"/></operator><name pos:line="463" pos:column="41">char<pos:position pos:line="463" pos:column="45"/></name> <operator pos:line="463" pos:column="46">*<pos:position pos:line="463" pos:column="47"/></operator><operator pos:line="463" pos:column="47">)<pos:position pos:line="463" pos:column="48"/></operator><operator pos:line="463" pos:column="48">&amp;<pos:position pos:line="463" pos:column="53"/></operator><name pos:line="463" pos:column="49">ad_groups<pos:position pos:line="463" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="463" pos:column="59">context<pos:position pos:line="463" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="68">pac<pos:position pos:line="463" pos:column="71"/></name></expr></argument>)<pos:position pos:line="463" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="73"/></expr_stmt>
                }<pos:position pos:line="464" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="465" pos:column="17">(<pos:position pos:line="465" pos:column="18"/></operator><name pos:line="465" pos:column="18">void<pos:position pos:line="465" pos:column="22"/></name><operator pos:line="465" pos:column="22">)<pos:position pos:line="465" pos:column="23"/></operator><call><name pos:line="465" pos:column="23">gss_release_any_name_mapping<pos:position pos:line="465" pos:column="51"/></name><argument_list pos:line="465" pos:column="51">(<argument><expr><operator pos:line="465" pos:column="52">&amp;<pos:position pos:line="465" pos:column="57"/></operator><name pos:line="465" pos:column="53">minor_status<pos:position pos:line="465" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="465" pos:column="67">client_name<pos:position pos:line="465" pos:column="78"/></name></expr></argument>, <argument><expr><operator pos:line="465" pos:column="80">&amp;<pos:position pos:line="465" pos:column="85"/></operator><name pos:line="465" pos:column="81">type_id<pos:position pos:line="465" pos:column="88"/></name></expr></argument>, <argument><expr><operator pos:line="465" pos:column="90">(<pos:position pos:line="465" pos:column="91"/></operator><name pos:line="465" pos:column="91">gss_any_t<pos:position pos:line="465" pos:column="100"/></name> <operator pos:line="465" pos:column="101">*<pos:position pos:line="465" pos:column="102"/></operator><operator pos:line="465" pos:column="102">)<pos:position pos:line="465" pos:column="103"/></operator><operator pos:line="465" pos:column="103">&amp;<pos:position pos:line="465" pos:column="108"/></operator><name pos:line="465" pos:column="104">pac<pos:position pos:line="465" pos:column="107"/></name></expr></argument>)<pos:position pos:line="465" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="109"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="466" pos:column="17">krb5_free_context<pos:position pos:line="466" pos:column="34"/></name><argument_list pos:line="466" pos:column="34">(<argument><expr><name pos:line="466" pos:column="35">context<pos:position pos:line="466" pos:column="42"/></name></expr></argument>)<pos:position pos:line="466" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="467" pos:column="1">#<cpp:directive pos:line="467" pos:column="2">endif<pos:position pos:line="467" pos:column="7"/></cpp:directive></cpp:endif>
            }<pos:position pos:line="468" pos:column="14"/></block></then></if>
            <if pos:line="469" pos:column="13">if <condition pos:line="469" pos:column="16">(<expr><name pos:line="469" pos:column="17">ag<pos:position pos:line="469" pos:column="19"/></name></expr>)<pos:position pos:line="469" pos:column="20"/></condition><then pos:line="469" pos:column="20"> <block pos:line="469" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="470" pos:column="17">debug<pos:position pos:line="470" pos:column="22"/></name><argument_list pos:line="470" pos:column="22">(<argument><expr><operator pos:line="470" pos:column="23">(<pos:position pos:line="470" pos:column="24"/></operator><name pos:line="470" pos:column="24">char<pos:position pos:line="470" pos:column="28"/></name> <operator pos:line="470" pos:column="29">*<pos:position pos:line="470" pos:column="30"/></operator><operator pos:line="470" pos:column="30">)<pos:position pos:line="470" pos:column="31"/></operator> <literal type="string" pos:line="470" pos:column="32">"%s| %s: DEBUG: Groups %s\n"<pos:position pos:line="470" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="470" pos:column="62">LogTime<pos:position pos:line="470" pos:column="69"/></name><argument_list pos:line="470" pos:column="69">()<pos:position pos:line="470" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="470" pos:column="73">PROGRAM<pos:position pos:line="470" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="82">ag<pos:position pos:line="470" pos:column="84"/></name></expr></argument>)<pos:position pos:line="470" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="86"/></expr_stmt>
            }<pos:position pos:line="471" pos:column="14"/></block></then></if>
<cpp:endif pos:line="472" pos:column="1">#<cpp:directive pos:line="472" pos:column="2">endif<pos:position pos:line="472" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><name pos:line="473" pos:column="13">rfc_user<pos:position pos:line="473" pos:column="21"/></name> <operator pos:line="473" pos:column="22">=<pos:position pos:line="473" pos:column="23"/></operator> <call><name pos:line="473" pos:column="24">rfc1738_escape<pos:position pos:line="473" pos:column="38"/></name><argument_list pos:line="473" pos:column="38">(<argument><expr><name pos:line="473" pos:column="39">user<pos:position pos:line="473" pos:column="43"/></name></expr></argument>)<pos:position pos:line="473" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="473" pos:column="45"/></expr_stmt>
<cpp:if pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">if<pos:position pos:line="474" pos:column="4"/></cpp:directive> <expr><name pos:line="474" pos:column="5">HAVE_PAC_SUPPORT<pos:position pos:line="474" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="475" pos:column="13">fprintf<pos:position pos:line="475" pos:column="20"/></name><argument_list pos:line="475" pos:column="20">(<argument><expr><name pos:line="475" pos:column="21">stdout<pos:position pos:line="475" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="475" pos:column="29">"AF %s %s %s\n"<pos:position pos:line="475" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="475" pos:column="46">token<pos:position pos:line="475" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="475" pos:column="53">rfc_user<pos:position pos:line="475" pos:column="61"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="475" pos:column="63">ag<pos:position pos:line="475" pos:column="65"/></name></expr>?<pos:position pos:line="475" pos:column="66"/></condition><then><expr><name pos:line="475" pos:column="66">ag<pos:position pos:line="475" pos:column="68"/></name></expr></then><else pos:line="475" pos:column="68">:<expr><literal type="string" pos:line="475" pos:column="69">"group="<pos:position pos:line="475" pos:column="77"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="475" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="475" pos:column="79"/></expr_stmt>
<cpp:else pos:line="476" pos:column="1">#<cpp:directive pos:line="476" pos:column="2">else<pos:position pos:line="476" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="477" pos:column="13">fprintf<pos:position pos:line="477" pos:column="20"/></name><argument_list pos:line="477" pos:column="20">(<argument><expr><name pos:line="477" pos:column="21">stdout<pos:position pos:line="477" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="477" pos:column="29">"AF %s %s\n"<pos:position pos:line="477" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="477" pos:column="43">token<pos:position pos:line="477" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="477" pos:column="50">rfc_user<pos:position pos:line="477" pos:column="58"/></name></expr></argument>)<pos:position pos:line="477" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="60"/></expr_stmt>
<cpp:endif pos:line="478" pos:column="1">#<cpp:directive pos:line="478" pos:column="2">endif<pos:position pos:line="478" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="479" pos:column="13">debug<pos:position pos:line="479" pos:column="18"/></name><argument_list pos:line="479" pos:column="18">(<argument><expr><operator pos:line="479" pos:column="19">(<pos:position pos:line="479" pos:column="20"/></operator><name pos:line="479" pos:column="20">char<pos:position pos:line="479" pos:column="24"/></name> <operator pos:line="479" pos:column="25">*<pos:position pos:line="479" pos:column="26"/></operator><operator pos:line="479" pos:column="26">)<pos:position pos:line="479" pos:column="27"/></operator> <literal type="string" pos:line="479" pos:column="28">"%s| %s: DEBUG: AF %s %s\n"<pos:position pos:line="479" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="479" pos:column="57">LogTime<pos:position pos:line="479" pos:column="64"/></name><argument_list pos:line="479" pos:column="64">()<pos:position pos:line="479" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="479" pos:column="68">PROGRAM<pos:position pos:line="479" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="479" pos:column="77">token<pos:position pos:line="479" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="479" pos:column="84">rfc_user<pos:position pos:line="479" pos:column="92"/></name></expr></argument>)<pos:position pos:line="479" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="479" pos:column="94"/></expr_stmt>
            <if pos:line="480" pos:column="13">if <condition pos:line="480" pos:column="16">(<expr><name pos:line="480" pos:column="17">log<pos:position pos:line="480" pos:column="20"/></name></expr>)<pos:position pos:line="480" pos:column="21"/></condition><then pos:line="480" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="481" pos:column="17">fprintf<pos:position pos:line="481" pos:column="24"/></name><argument_list pos:line="481" pos:column="24">(<argument><expr><name pos:line="481" pos:column="25">stderr<pos:position pos:line="481" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="481" pos:column="33">"%s| %s: INFO: User %s authenticated\n"<pos:position pos:line="481" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="481" pos:column="74">LogTime<pos:position pos:line="481" pos:column="81"/></name><argument_list pos:line="481" pos:column="81">()<pos:position pos:line="481" pos:column="83"/></argument_list></call></expr></argument>,
                        <argument><expr><name pos:line="482" pos:column="25">PROGRAM<pos:position pos:line="482" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="482" pos:column="34">rfc_user<pos:position pos:line="482" pos:column="42"/></name></expr></argument>)<pos:position pos:line="482" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="482" pos:column="44"/></expr_stmt></block></then></if>
            <goto pos:line="483" pos:column="13">goto <name pos:line="483" pos:column="18">cleanup<pos:position pos:line="483" pos:column="25"/></name>;<pos:position pos:line="483" pos:column="26"/></goto>
        }<pos:position pos:line="484" pos:column="10"/></block></then> <else pos:line="484" pos:column="11">else <block pos:line="484" pos:column="16">{
            <if pos:line="485" pos:column="13">if <condition pos:line="485" pos:column="16">(<expr><call><name pos:line="485" pos:column="17">check_gss_err<pos:position pos:line="485" pos:column="30"/></name><argument_list pos:line="485" pos:column="30">(<argument><expr><name pos:line="485" pos:column="31">major_status<pos:position pos:line="485" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="485" pos:column="45">minor_status<pos:position pos:line="485" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="485" pos:column="59">"gss_accept_sec_context()"<pos:position pos:line="485" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="485" pos:column="87">log<pos:position pos:line="485" pos:column="90"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="485" pos:column="92">1<pos:position pos:line="485" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="485" pos:column="94"/></argument_list></call></expr>)<pos:position pos:line="485" pos:column="95"/></condition><then pos:line="485" pos:column="95">
                <block type="pseudo"><goto pos:line="486" pos:column="17">goto <name pos:line="486" pos:column="22">cleanup<pos:position pos:line="486" pos:column="29"/></name>;<pos:position pos:line="486" pos:column="30"/></goto></block></then></if>
            <if pos:line="487" pos:column="13">if <condition pos:line="487" pos:column="16">(<expr><name pos:line="487" pos:column="17">major_status<pos:position pos:line="487" pos:column="29"/></name> <operator pos:line="487" pos:column="30">&amp;<pos:position pos:line="487" pos:column="35"/></operator> <name pos:line="487" pos:column="32">GSS_S_CONTINUE_NEEDED<pos:position pos:line="487" pos:column="53"/></name></expr>)<pos:position pos:line="487" pos:column="54"/></condition><then pos:line="487" pos:column="54"> <block pos:line="487" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="488" pos:column="17">debug<pos:position pos:line="488" pos:column="22"/></name><argument_list pos:line="488" pos:column="22">(<argument><expr><operator pos:line="488" pos:column="23">(<pos:position pos:line="488" pos:column="24"/></operator><name pos:line="488" pos:column="24">char<pos:position pos:line="488" pos:column="28"/></name> <operator pos:line="488" pos:column="29">*<pos:position pos:line="488" pos:column="30"/></operator><operator pos:line="488" pos:column="30">)<pos:position pos:line="488" pos:column="31"/></operator> <literal type="string" pos:line="488" pos:column="32">"%s| %s: INFO: continuation needed\n"<pos:position pos:line="488" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="488" pos:column="71">LogTime<pos:position pos:line="488" pos:column="78"/></name><argument_list pos:line="488" pos:column="78">()<pos:position pos:line="488" pos:column="80"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="488" pos:column="82">PROGRAM<pos:position pos:line="488" pos:column="89"/></name></expr></argument>)<pos:position pos:line="488" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="91"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="489" pos:column="17">fprintf<pos:position pos:line="489" pos:column="24"/></name><argument_list pos:line="489" pos:column="24">(<argument><expr><name pos:line="489" pos:column="25">stdout<pos:position pos:line="489" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="489" pos:column="33">"NA %s\n"<pos:position pos:line="489" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="489" pos:column="44">token<pos:position pos:line="489" pos:column="49"/></name></expr></argument>)<pos:position pos:line="489" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="51"/></expr_stmt>
                <goto pos:line="490" pos:column="17">goto <name pos:line="490" pos:column="22">cleanup<pos:position pos:line="490" pos:column="29"/></name>;<pos:position pos:line="490" pos:column="30"/></goto>
            }<pos:position pos:line="491" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="492" pos:column="13">gss_release_buffer<pos:position pos:line="492" pos:column="31"/></name><argument_list pos:line="492" pos:column="31">(<argument><expr><operator pos:line="492" pos:column="32">&amp;<pos:position pos:line="492" pos:column="37"/></operator><name pos:line="492" pos:column="33">minor_status<pos:position pos:line="492" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="492" pos:column="47">&amp;<pos:position pos:line="492" pos:column="52"/></operator><name pos:line="492" pos:column="48">output_token<pos:position pos:line="492" pos:column="60"/></name></expr></argument>)<pos:position pos:line="492" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="492" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><name pos:line="493" pos:column="13">major_status<pos:position pos:line="493" pos:column="25"/></name> <operator pos:line="493" pos:column="26">=<pos:position pos:line="493" pos:column="27"/></operator>
                <call><name pos:line="494" pos:column="17">gss_display_name<pos:position pos:line="494" pos:column="33"/></name><argument_list pos:line="494" pos:column="33">(<argument><expr><operator pos:line="494" pos:column="34">&amp;<pos:position pos:line="494" pos:column="39"/></operator><name pos:line="494" pos:column="35">minor_status<pos:position pos:line="494" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="49">client_name<pos:position pos:line="494" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="494" pos:column="62">&amp;<pos:position pos:line="494" pos:column="67"/></operator><name pos:line="494" pos:column="63">output_token<pos:position pos:line="494" pos:column="75"/></name></expr></argument>,
                                 <argument><expr><name pos:line="495" pos:column="34">NULL<pos:position pos:line="495" pos:column="38"/></name></expr></argument>)<pos:position pos:line="495" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="40"/></expr_stmt>

            <if pos:line="497" pos:column="13">if <condition pos:line="497" pos:column="16">(<expr><call><name pos:line="497" pos:column="17">check_gss_err<pos:position pos:line="497" pos:column="30"/></name><argument_list pos:line="497" pos:column="30">(<argument><expr><name pos:line="497" pos:column="31">major_status<pos:position pos:line="497" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="497" pos:column="45">minor_status<pos:position pos:line="497" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="497" pos:column="59">"gss_display_name()"<pos:position pos:line="497" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="497" pos:column="81">log<pos:position pos:line="497" pos:column="84"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="497" pos:column="86">1<pos:position pos:line="497" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="497" pos:column="88"/></argument_list></call></expr>)<pos:position pos:line="497" pos:column="89"/></condition><then pos:line="497" pos:column="89">
                <block type="pseudo"><goto pos:line="498" pos:column="17">goto <name pos:line="498" pos:column="22">cleanup<pos:position pos:line="498" pos:column="29"/></name>;<pos:position pos:line="498" pos:column="30"/></goto></block></then></if>
            <comment type="block" pos:line="499" pos:column="13">/*
             *  Return dummy token AA. May need an extra return tag then AF
             */</comment>
            <expr_stmt><expr><name pos:line="502" pos:column="13">user<pos:position pos:line="502" pos:column="17"/></name> <operator pos:line="502" pos:column="18">=<pos:position pos:line="502" pos:column="19"/></operator> <operator pos:line="502" pos:column="20">(<pos:position pos:line="502" pos:column="21"/></operator><name pos:line="502" pos:column="21">char<pos:position pos:line="502" pos:column="25"/></name> <operator pos:line="502" pos:column="26">*<pos:position pos:line="502" pos:column="27"/></operator><operator pos:line="502" pos:column="27">)<pos:position pos:line="502" pos:column="28"/></operator> <call><name pos:line="502" pos:column="29">xmalloc<pos:position pos:line="502" pos:column="36"/></name><argument_list pos:line="502" pos:column="36">(<argument><expr><name><name pos:line="502" pos:column="37">output_token<pos:position pos:line="502" pos:column="49"/></name><operator pos:line="502" pos:column="49">.<pos:position pos:line="502" pos:column="50"/></operator><name pos:line="502" pos:column="50">length<pos:position pos:line="502" pos:column="56"/></name></name> <operator pos:line="502" pos:column="57">+<pos:position pos:line="502" pos:column="58"/></operator> <literal type="number" pos:line="502" pos:column="59">1<pos:position pos:line="502" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="502" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="502" pos:column="62"/></expr_stmt>
            <if pos:line="503" pos:column="13">if <condition pos:line="503" pos:column="16">(<expr><name pos:line="503" pos:column="17">user<pos:position pos:line="503" pos:column="21"/></name> <operator pos:line="503" pos:column="22">==<pos:position pos:line="503" pos:column="24"/></operator> <name pos:line="503" pos:column="25">NULL<pos:position pos:line="503" pos:column="29"/></name></expr>)<pos:position pos:line="503" pos:column="30"/></condition><then pos:line="503" pos:column="30"> <block pos:line="503" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="504" pos:column="17">debug<pos:position pos:line="504" pos:column="22"/></name><argument_list pos:line="504" pos:column="22">(<argument><expr><operator pos:line="504" pos:column="23">(<pos:position pos:line="504" pos:column="24"/></operator><name pos:line="504" pos:column="24">char<pos:position pos:line="504" pos:column="28"/></name> <operator pos:line="504" pos:column="29">*<pos:position pos:line="504" pos:column="30"/></operator><operator pos:line="504" pos:column="30">)<pos:position pos:line="504" pos:column="31"/></operator> <literal type="string" pos:line="504" pos:column="32">"%s| %s: ERROR: Not enough memory\n"<pos:position pos:line="504" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="504" pos:column="70">LogTime<pos:position pos:line="504" pos:column="77"/></name><argument_list pos:line="504" pos:column="77">()<pos:position pos:line="504" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="504" pos:column="81">PROGRAM<pos:position pos:line="504" pos:column="88"/></name></expr></argument>)<pos:position pos:line="504" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="504" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="505" pos:column="17">fprintf<pos:position pos:line="505" pos:column="24"/></name><argument_list pos:line="505" pos:column="24">(<argument><expr><name pos:line="505" pos:column="25">stdout<pos:position pos:line="505" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="505" pos:column="33">"BH Not enough memory\n"<pos:position pos:line="505" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="505" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="505" pos:column="59"/></expr_stmt>
                <goto pos:line="506" pos:column="17">goto <name pos:line="506" pos:column="22">cleanup<pos:position pos:line="506" pos:column="29"/></name>;<pos:position pos:line="506" pos:column="30"/></goto>
            }<pos:position pos:line="507" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="508" pos:column="13">memcpy<pos:position pos:line="508" pos:column="19"/></name><argument_list pos:line="508" pos:column="19">(<argument><expr><name pos:line="508" pos:column="20">user<pos:position pos:line="508" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="508" pos:column="26">output_token<pos:position pos:line="508" pos:column="38"/></name><operator pos:line="508" pos:column="38">.<pos:position pos:line="508" pos:column="39"/></operator><name pos:line="508" pos:column="39">value<pos:position pos:line="508" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="508" pos:column="46">output_token<pos:position pos:line="508" pos:column="58"/></name><operator pos:line="508" pos:column="58">.<pos:position pos:line="508" pos:column="59"/></operator><name pos:line="508" pos:column="59">length<pos:position pos:line="508" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="508" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="508" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="509" pos:column="13">user<pos:position pos:line="509" pos:column="17"/></name><index pos:line="509" pos:column="17">[<expr><name><name pos:line="509" pos:column="18">output_token<pos:position pos:line="509" pos:column="30"/></name><operator pos:line="509" pos:column="30">.<pos:position pos:line="509" pos:column="31"/></operator><name pos:line="509" pos:column="31">length<pos:position pos:line="509" pos:column="37"/></name></name></expr>]<pos:position pos:line="509" pos:column="38"/></index></name> <operator pos:line="509" pos:column="39">=<pos:position pos:line="509" pos:column="40"/></operator> <literal type="char" pos:line="509" pos:column="41">'\0'<pos:position pos:line="509" pos:column="45"/></literal></expr>;<pos:position pos:line="509" pos:column="46"/></expr_stmt>
            <if pos:line="510" pos:column="13">if <condition pos:line="510" pos:column="16">(<expr><name pos:line="510" pos:column="17">norealm<pos:position pos:line="510" pos:column="24"/></name> <operator pos:line="510" pos:column="25">&amp;&amp;<pos:position pos:line="510" pos:column="35"/></operator> <operator pos:line="510" pos:column="28">(<pos:position pos:line="510" pos:column="29"/></operator><name pos:line="510" pos:column="29">p<pos:position pos:line="510" pos:column="30"/></name> <operator pos:line="510" pos:column="31">=<pos:position pos:line="510" pos:column="32"/></operator> <call><name pos:line="510" pos:column="33">strchr<pos:position pos:line="510" pos:column="39"/></name><argument_list pos:line="510" pos:column="39">(<argument><expr><name pos:line="510" pos:column="40">user<pos:position pos:line="510" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="510" pos:column="46">'@'<pos:position pos:line="510" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="510" pos:column="50"/></argument_list></call><operator pos:line="510" pos:column="50">)<pos:position pos:line="510" pos:column="51"/></operator> <operator pos:line="510" pos:column="52">!=<pos:position pos:line="510" pos:column="54"/></operator> <name pos:line="510" pos:column="55">NULL<pos:position pos:line="510" pos:column="59"/></name></expr>)<pos:position pos:line="510" pos:column="60"/></condition><then pos:line="510" pos:column="60"> <block pos:line="510" pos:column="61">{
                <expr_stmt><expr><operator pos:line="511" pos:column="17">*<pos:position pos:line="511" pos:column="18"/></operator><name pos:line="511" pos:column="18">p<pos:position pos:line="511" pos:column="19"/></name> <operator pos:line="511" pos:column="20">=<pos:position pos:line="511" pos:column="21"/></operator> <literal type="char" pos:line="511" pos:column="22">'\0'<pos:position pos:line="511" pos:column="26"/></literal></expr>;<pos:position pos:line="511" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="512" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="513" pos:column="13">rfc_user<pos:position pos:line="513" pos:column="21"/></name> <operator pos:line="513" pos:column="22">=<pos:position pos:line="513" pos:column="23"/></operator> <call><name pos:line="513" pos:column="24">rfc1738_escape<pos:position pos:line="513" pos:column="38"/></name><argument_list pos:line="513" pos:column="38">(<argument><expr><name pos:line="513" pos:column="39">user<pos:position pos:line="513" pos:column="43"/></name></expr></argument>)<pos:position pos:line="513" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="45"/></expr_stmt>
<cpp:if pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">if<pos:position pos:line="514" pos:column="4"/></cpp:directive> <expr><name pos:line="514" pos:column="5">HAVE_PAC_SUPPORT<pos:position pos:line="514" pos:column="21"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="515" pos:column="13">fprintf<pos:position pos:line="515" pos:column="20"/></name><argument_list pos:line="515" pos:column="20">(<argument><expr><name pos:line="515" pos:column="21">stdout<pos:position pos:line="515" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="515" pos:column="29">"AF %s %s %s\n"<pos:position pos:line="515" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="515" pos:column="46">"AA=="<pos:position pos:line="515" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="515" pos:column="54">rfc_user<pos:position pos:line="515" pos:column="62"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="515" pos:column="64">ag<pos:position pos:line="515" pos:column="66"/></name></expr>?<pos:position pos:line="515" pos:column="67"/></condition><then><expr><name pos:line="515" pos:column="67">ag<pos:position pos:line="515" pos:column="69"/></name></expr></then><else pos:line="515" pos:column="69">:<expr><literal type="string" pos:line="515" pos:column="70">"group="<pos:position pos:line="515" pos:column="78"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="515" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="80"/></expr_stmt>
<cpp:else pos:line="516" pos:column="1">#<cpp:directive pos:line="516" pos:column="2">else<pos:position pos:line="516" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="517" pos:column="13">fprintf<pos:position pos:line="517" pos:column="20"/></name><argument_list pos:line="517" pos:column="20">(<argument><expr><name pos:line="517" pos:column="21">stdout<pos:position pos:line="517" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="517" pos:column="29">"AF %s %s\n"<pos:position pos:line="517" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="517" pos:column="43">"AA=="<pos:position pos:line="517" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="517" pos:column="51">rfc_user<pos:position pos:line="517" pos:column="59"/></name></expr></argument>)<pos:position pos:line="517" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="517" pos:column="61"/></expr_stmt>
<cpp:endif pos:line="518" pos:column="1">#<cpp:directive pos:line="518" pos:column="2">endif<pos:position pos:line="518" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="519" pos:column="13">debug<pos:position pos:line="519" pos:column="18"/></name><argument_list pos:line="519" pos:column="18">(<argument><expr><operator pos:line="519" pos:column="19">(<pos:position pos:line="519" pos:column="20"/></operator><name pos:line="519" pos:column="20">char<pos:position pos:line="519" pos:column="24"/></name> <operator pos:line="519" pos:column="25">*<pos:position pos:line="519" pos:column="26"/></operator><operator pos:line="519" pos:column="26">)<pos:position pos:line="519" pos:column="27"/></operator> <literal type="string" pos:line="519" pos:column="28">"%s| %s: DEBUG: AF %s %s\n"<pos:position pos:line="519" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="519" pos:column="57">LogTime<pos:position pos:line="519" pos:column="64"/></name><argument_list pos:line="519" pos:column="64">()<pos:position pos:line="519" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="519" pos:column="68">PROGRAM<pos:position pos:line="519" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="519" pos:column="77">"AA=="<pos:position pos:line="519" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="519" pos:column="85">rfc_user<pos:position pos:line="519" pos:column="93"/></name></expr></argument>)<pos:position pos:line="519" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="519" pos:column="95"/></expr_stmt>
            <if pos:line="520" pos:column="13">if <condition pos:line="520" pos:column="16">(<expr><name pos:line="520" pos:column="17">log<pos:position pos:line="520" pos:column="20"/></name></expr>)<pos:position pos:line="520" pos:column="21"/></condition><then pos:line="520" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="521" pos:column="17">fprintf<pos:position pos:line="521" pos:column="24"/></name><argument_list pos:line="521" pos:column="24">(<argument><expr><name pos:line="521" pos:column="25">stderr<pos:position pos:line="521" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="521" pos:column="33">"%s| %s: INFO: User %s authenticated\n"<pos:position pos:line="521" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="521" pos:column="74">LogTime<pos:position pos:line="521" pos:column="81"/></name><argument_list pos:line="521" pos:column="81">()<pos:position pos:line="521" pos:column="83"/></argument_list></call></expr></argument>,
                        <argument><expr><name pos:line="522" pos:column="25">PROGRAM<pos:position pos:line="522" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="522" pos:column="34">rfc_user<pos:position pos:line="522" pos:column="42"/></name></expr></argument>)<pos:position pos:line="522" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="44"/></expr_stmt></block></then></if>
        }<pos:position pos:line="523" pos:column="10"/></block></else></if>
<label><name pos:line="524" pos:column="1">cleanup<pos:position pos:line="524" pos:column="8"/></name>:<pos:position pos:line="524" pos:column="9"/></label>
        <expr_stmt><expr><call><name pos:line="525" pos:column="9">gss_release_buffer<pos:position pos:line="525" pos:column="27"/></name><argument_list pos:line="525" pos:column="27">(<argument><expr><operator pos:line="525" pos:column="28">&amp;<pos:position pos:line="525" pos:column="33"/></operator><name pos:line="525" pos:column="29">minor_status<pos:position pos:line="525" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="525" pos:column="43">&amp;<pos:position pos:line="525" pos:column="48"/></operator><name pos:line="525" pos:column="44">input_token<pos:position pos:line="525" pos:column="55"/></name></expr></argument>)<pos:position pos:line="525" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="525" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="526" pos:column="9">gss_release_buffer<pos:position pos:line="526" pos:column="27"/></name><argument_list pos:line="526" pos:column="27">(<argument><expr><operator pos:line="526" pos:column="28">&amp;<pos:position pos:line="526" pos:column="33"/></operator><name pos:line="526" pos:column="29">minor_status<pos:position pos:line="526" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="526" pos:column="43">&amp;<pos:position pos:line="526" pos:column="48"/></operator><name pos:line="526" pos:column="44">output_token<pos:position pos:line="526" pos:column="56"/></name></expr></argument>)<pos:position pos:line="526" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="526" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="527" pos:column="9">gss_release_cred<pos:position pos:line="527" pos:column="25"/></name><argument_list pos:line="527" pos:column="25">(<argument><expr><operator pos:line="527" pos:column="26">&amp;<pos:position pos:line="527" pos:column="31"/></operator><name pos:line="527" pos:column="27">minor_status<pos:position pos:line="527" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="527" pos:column="41">&amp;<pos:position pos:line="527" pos:column="46"/></operator><name pos:line="527" pos:column="42">server_creds<pos:position pos:line="527" pos:column="54"/></name></expr></argument>)<pos:position pos:line="527" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="527" pos:column="56"/></expr_stmt>
        <if pos:line="528" pos:column="9">if <condition pos:line="528" pos:column="12">(<expr><name pos:line="528" pos:column="13">server_name<pos:position pos:line="528" pos:column="24"/></name></expr>)<pos:position pos:line="528" pos:column="25"/></condition><then pos:line="528" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="529" pos:column="13">gss_release_name<pos:position pos:line="529" pos:column="29"/></name><argument_list pos:line="529" pos:column="29">(<argument><expr><operator pos:line="529" pos:column="30">&amp;<pos:position pos:line="529" pos:column="35"/></operator><name pos:line="529" pos:column="31">minor_status<pos:position pos:line="529" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="529" pos:column="45">&amp;<pos:position pos:line="529" pos:column="50"/></operator><name pos:line="529" pos:column="46">server_name<pos:position pos:line="529" pos:column="57"/></name></expr></argument>)<pos:position pos:line="529" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="529" pos:column="59"/></expr_stmt></block></then></if>
        <if pos:line="530" pos:column="9">if <condition pos:line="530" pos:column="12">(<expr><name pos:line="530" pos:column="13">client_name<pos:position pos:line="530" pos:column="24"/></name></expr>)<pos:position pos:line="530" pos:column="25"/></condition><then pos:line="530" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="531" pos:column="13">gss_release_name<pos:position pos:line="531" pos:column="29"/></name><argument_list pos:line="531" pos:column="29">(<argument><expr><operator pos:line="531" pos:column="30">&amp;<pos:position pos:line="531" pos:column="35"/></operator><name pos:line="531" pos:column="31">minor_status<pos:position pos:line="531" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="531" pos:column="45">&amp;<pos:position pos:line="531" pos:column="50"/></operator><name pos:line="531" pos:column="46">client_name<pos:position pos:line="531" pos:column="57"/></name></expr></argument>)<pos:position pos:line="531" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="531" pos:column="59"/></expr_stmt></block></then></if>
        <if pos:line="532" pos:column="9">if <condition pos:line="532" pos:column="12">(<expr><name pos:line="532" pos:column="13">kerberosToken<pos:position pos:line="532" pos:column="26"/></name></expr>)<pos:position pos:line="532" pos:column="27"/></condition><then pos:line="532" pos:column="27"> <block pos:line="532" pos:column="28">{
            <comment type="block" pos:line="533" pos:column="13">/* Allocated by parseNegTokenInit, but no matching free function exists.. */</comment>
            <if pos:line="534" pos:column="13">if <condition pos:line="534" pos:column="16">(<expr><operator pos:line="534" pos:column="17">!<pos:position pos:line="534" pos:column="18"/></operator><name pos:line="534" pos:column="18">spnego_flag<pos:position pos:line="534" pos:column="29"/></name></expr>)<pos:position pos:line="534" pos:column="30"/></condition><then pos:line="534" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="535" pos:column="17">safe_free<pos:position pos:line="535" pos:column="26"/></name><argument_list pos:line="535" pos:column="26">(<argument><expr><name pos:line="535" pos:column="27">kerberosToken<pos:position pos:line="535" pos:column="40"/></name></expr></argument>)<pos:position pos:line="535" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="535" pos:column="42"/></expr_stmt></block></then></if>
        }<pos:position pos:line="536" pos:column="10"/></block></then></if>
        <if pos:line="537" pos:column="9">if <condition pos:line="537" pos:column="12">(<expr><name pos:line="537" pos:column="13">spnego_flag<pos:position pos:line="537" pos:column="24"/></name></expr>)<pos:position pos:line="537" pos:column="25"/></condition><then pos:line="537" pos:column="25"> <block pos:line="537" pos:column="26">{
            <comment type="block" pos:line="538" pos:column="13">/* Allocated by makeNegTokenTarg, but no matching free function exists.. */</comment>
            <expr_stmt><expr><call><name pos:line="539" pos:column="13">safe_free<pos:position pos:line="539" pos:column="22"/></name><argument_list pos:line="539" pos:column="22">(<argument><expr><name pos:line="539" pos:column="23">spnegoToken<pos:position pos:line="539" pos:column="34"/></name></expr></argument>)<pos:position pos:line="539" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="539" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="540" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="541" pos:column="9">safe_free<pos:position pos:line="541" pos:column="18"/></name><argument_list pos:line="541" pos:column="18">(<argument><expr><name pos:line="541" pos:column="19">token<pos:position pos:line="541" pos:column="24"/></name></expr></argument>)<pos:position pos:line="541" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="541" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="542" pos:column="9">safe_free<pos:position pos:line="542" pos:column="18"/></name><argument_list pos:line="542" pos:column="18">(<argument><expr><name pos:line="542" pos:column="19">user<pos:position pos:line="542" pos:column="23"/></name></expr></argument>)<pos:position pos:line="542" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="542" pos:column="25"/></expr_stmt>
        <continue pos:line="543" pos:column="9">continue;<pos:position pos:line="543" pos:column="18"/></continue>
    }<pos:position pos:line="544" pos:column="6"/></block></while>
}<pos:position pos:line="545" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5695_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">IpcIoFile<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">DiskerHandleRequest<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">workerId<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">IpcIoMsg<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">ipcIo<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">ipcIo<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">.<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">command<pos:position pos:line="4" pos:column="22"/></name></name> <operator pos:line="4" pos:column="23">!=<pos:position pos:line="4" pos:column="25"/></operator> <name><name pos:line="4" pos:column="26">IpcIo<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">::<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">cmdRead<pos:position pos:line="4" pos:column="40"/></name></name> <operator pos:line="4" pos:column="41">&amp;&amp;<pos:position pos:line="4" pos:column="51"/></operator> <name><name pos:line="4" pos:column="44">ipcIo<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">.<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="50">command<pos:position pos:line="4" pos:column="57"/></name></name> <operator pos:line="4" pos:column="58">!=<pos:position pos:line="4" pos:column="60"/></operator> <name><name pos:line="4" pos:column="61">IpcIo<pos:position pos:line="4" pos:column="66"/></name><operator pos:line="4" pos:column="66">::<pos:position pos:line="4" pos:column="68"/></operator><name pos:line="4" pos:column="68">cmdWrite<pos:position pos:line="4" pos:column="76"/></name></name></expr>)<pos:position pos:line="4" pos:column="77"/></condition><then pos:line="4" pos:column="77"> <block pos:line="4" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">DBG_CRITICAL<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">HERE<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">&lt;&lt;<pos:position pos:line="5" pos:column="46"/></operator> <literal type="string" pos:line="5" pos:column="41">"disker"<pos:position pos:line="5" pos:column="49"/></literal> <operator pos:line="5" pos:column="50">&lt;&lt;<pos:position pos:line="5" pos:column="58"/></operator> <name pos:line="5" pos:column="53">KidIdentifier<pos:position pos:line="5" pos:column="66"/></name> <operator pos:line="5" pos:column="67">&lt;&lt;<pos:position pos:line="5" pos:column="75"/></operator>
               <literal type="string" pos:line="6" pos:column="16">" should not receive "<pos:position pos:line="6" pos:column="38"/></literal> <operator pos:line="6" pos:column="39">&lt;&lt;<pos:position pos:line="6" pos:column="47"/></operator> <name><name pos:line="6" pos:column="42">ipcIo<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">.<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">command<pos:position pos:line="6" pos:column="55"/></name></name> <operator pos:line="6" pos:column="56">&lt;&lt;<pos:position pos:line="6" pos:column="64"/></operator>
               <literal type="string" pos:line="7" pos:column="16">" ipcIo"<pos:position pos:line="7" pos:column="24"/></literal> <operator pos:line="7" pos:column="25">&lt;&lt;<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="28">workerId<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">&lt;&lt;<pos:position pos:line="7" pos:column="45"/></operator> <literal type="char" pos:line="7" pos:column="40">'.'<pos:position pos:line="7" pos:column="43"/></literal> <operator pos:line="7" pos:column="44">&lt;&lt;<pos:position pos:line="7" pos:column="52"/></operator> <name><name pos:line="7" pos:column="47">ipcIo<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">.<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="53">requestId<pos:position pos:line="7" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">47<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="11" pos:column="15">5<pos:position pos:line="11" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="18">HERE<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;&lt;<pos:position pos:line="11" pos:column="31"/></operator> <literal type="string" pos:line="11" pos:column="26">"disker"<pos:position pos:line="11" pos:column="34"/></literal> <operator pos:line="11" pos:column="35">&lt;&lt;<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="38">KidIdentifier<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">&lt;&lt;<pos:position pos:line="11" pos:column="60"/></operator>
           <operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="12" pos:column="13">ipcIo<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">command<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">==<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">IpcIo<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">::<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">cmdRead<pos:position pos:line="12" pos:column="44"/></name></name></expr> ?<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <expr><literal type="string" pos:line="12" pos:column="47">" reads "<pos:position pos:line="12" pos:column="56"/></literal></expr> <pos:position pos:line="12" pos:column="57"/></then><else pos:line="12" pos:column="57">: <expr><literal type="string" pos:line="12" pos:column="59">" writes "<pos:position pos:line="12" pos:column="69"/></literal></expr></else></ternary><operator pos:line="12" pos:column="69">)<pos:position pos:line="12" pos:column="70"/></operator> <operator pos:line="12" pos:column="71">&lt;&lt;<pos:position pos:line="12" pos:column="79"/></operator>
           <name><name pos:line="13" pos:column="12">ipcIo<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">len<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">&lt;&lt;<pos:position pos:line="13" pos:column="30"/></operator> <literal type="string" pos:line="13" pos:column="25">" at "<pos:position pos:line="13" pos:column="31"/></literal> <operator pos:line="13" pos:column="32">&lt;&lt;<pos:position pos:line="13" pos:column="40"/></operator> <name><name pos:line="13" pos:column="35">ipcIo<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">offset<pos:position pos:line="13" pos:column="47"/></name></name> <operator pos:line="13" pos:column="48">&lt;&lt;<pos:position pos:line="13" pos:column="56"/></operator>
           <literal type="string" pos:line="14" pos:column="12">" ipcIo"<pos:position pos:line="14" pos:column="20"/></literal> <operator pos:line="14" pos:column="21">&lt;&lt;<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="24">workerId<pos:position pos:line="14" pos:column="32"/></name> <operator pos:line="14" pos:column="33">&lt;&lt;<pos:position pos:line="14" pos:column="41"/></operator> <literal type="char" pos:line="14" pos:column="36">'.'<pos:position pos:line="14" pos:column="39"/></literal> <operator pos:line="14" pos:column="40">&lt;&lt;<pos:position pos:line="14" pos:column="48"/></operator> <name><name pos:line="14" pos:column="43">ipcIo<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">.<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">requestId<pos:position pos:line="14" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="60"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">ipcIo<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">command<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name><name pos:line="16" pos:column="26">IpcIo<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">::<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">cmdRead<pos:position pos:line="16" pos:column="40"/></name></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">diskerRead<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">ipcIo<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="18" pos:column="5">else <comment type="line" pos:line="18" pos:column="10">// ipcIo.command == IpcIo::cmdWrite</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">diskerWrite<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">ipcIo<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">47<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">7<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">HERE<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">&lt;&lt;<pos:position pos:line="21" pos:column="32"/></operator> <literal type="string" pos:line="21" pos:column="27">"pushing "<pos:position pos:line="21" pos:column="37"/></literal> <operator pos:line="21" pos:column="38">&lt;&lt;<pos:position pos:line="21" pos:column="46"/></operator> <call><name pos:line="21" pos:column="41">SipcIo<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><name pos:line="21" pos:column="48">workerId<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">ipcIo<pos:position pos:line="21" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="65">KidIdentifier<pos:position pos:line="21" pos:column="78"/></name></expr></argument>)<pos:position pos:line="21" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="81"/></expr_stmt>

    <try pos:line="23" pos:column="5">try <block pos:line="23" pos:column="9">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name><name pos:line="24" pos:column="13">queue<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">push<pos:position pos:line="24" pos:column="24"/></name></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">workerId<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">ipcIo<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">Notify<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">workerId<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt></block></then></if> <comment type="line" pos:line="25" pos:column="31">// must notify worker</comment>
    }<pos:position pos:line="26" pos:column="6"/></block> <catch pos:line="26" pos:column="7">catch <parameter_list pos:line="26" pos:column="13">(<parameter><decl><type><specifier pos:line="26" pos:column="14">const<pos:position pos:line="26" pos:column="19"/></specifier> <name><name pos:line="26" pos:column="20">Queue<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">::<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">Full<pos:position pos:line="26" pos:column="31"/></name></name> <modifier pos:line="26" pos:column="32">&amp;<pos:position pos:line="26" pos:column="37"/></modifier></type></decl></parameter>)<pos:position pos:line="26" pos:column="34"/></parameter_list> <block pos:line="26" pos:column="35">{
        <comment type="line" pos:line="27" pos:column="9">// The worker queue should not overflow because the worker should pop()</comment>
        <comment type="line" pos:line="28" pos:column="9">// before push()ing and because if disker pops N requests at a time,</comment>
        <comment type="line" pos:line="29" pos:column="9">// we should make sure the worker pop() queue length is the worker</comment>
        <comment type="line" pos:line="30" pos:column="9">// push queue length plus N+1. XXX: implement the N+1 difference.</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">47<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="20">DBG_IMPORTANT<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="35">"BUG: Worker I/O pop queue overflow: "<pos:position pos:line="31" pos:column="73"/></literal> <operator pos:line="31" pos:column="74">&lt;&lt;<pos:position pos:line="31" pos:column="82"/></operator>
               <call><name pos:line="32" pos:column="16">SipcIo<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">workerId<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">ipcIo<pos:position pos:line="32" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="40">KidIdentifier<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="56"/></expr_stmt> <comment type="line" pos:line="32" pos:column="57">// TODO: report queue len</comment>

        <comment type="line" pos:line="34" pos:column="9">// the I/O request we could not push will timeout</comment>
    }<pos:position pos:line="35" pos:column="6"/></block></catch></try>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

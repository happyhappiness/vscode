<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_951_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">PeerPoolMgr<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">start<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">AsyncJob<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">start<pos:position pos:line="4" pos:column="20"/></name></name><argument_list pos:line="4" pos:column="20">()<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name><name pos:line="6" pos:column="11">MasterXaction<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">::<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">Pointer<pos:position pos:line="6" pos:column="33"/></name></name></type> <name pos:line="6" pos:column="34">mx<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><operator pos:line="6" pos:column="39">new<pos:position pos:line="6" pos:column="42"/></operator> <call><name pos:line="6" pos:column="43">MasterXaction<pos:position pos:line="6" pos:column="56"/></name><argument_list pos:line="6" pos:column="56">(<argument><expr><name><name pos:line="6" pos:column="57">XactionInitiator<pos:position pos:line="6" pos:column="73"/></name><operator pos:line="6" pos:column="73">::<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">initPeerPool<pos:position pos:line="6" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="89"/></decl_stmt>
    <comment type="line" pos:line="7" pos:column="5">// ErrorState, getOutgoingAddress(), and other APIs may require a request.</comment>
    <comment type="line" pos:line="8" pos:column="5">// We fake one. TODO: Optionally send this request to peers?</comment>
    <expr_stmt><expr><name pos:line="9" pos:column="5">request<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <operator pos:line="9" pos:column="15">new<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">HttpRequest<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name><name pos:line="9" pos:column="31">Http<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">::<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">METHOD_OPTIONS<pos:position pos:line="9" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="53">AnyP<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">::<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="59">PROTO_HTTP<pos:position pos:line="9" pos:column="69"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="71">"http"<pos:position pos:line="9" pos:column="77"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="79">"*"<pos:position pos:line="9" pos:column="82"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="84">mx<pos:position pos:line="9" pos:column="86"/></name></expr></argument>)<pos:position pos:line="9" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">request<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">url<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">host<pos:position pos:line="10" pos:column="22"/></name></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name><name pos:line="10" pos:column="23">peer<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">host<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">checkpoint<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"peer initialized"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

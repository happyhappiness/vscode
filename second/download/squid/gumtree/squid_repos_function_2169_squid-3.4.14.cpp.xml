<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2169_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeDigestAdd<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">StoreEntry<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">entry<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">entry<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">&amp;&amp;<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="21">store_digest<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">storeDigestAddable<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">entry<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35"> <block pos:line="6" pos:column="36">{
        <expr_stmt><expr><operator pos:line="7" pos:column="9">++<pos:position pos:line="7" pos:column="11"/></operator><name><name pos:line="7" pos:column="11">sd_stats<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">add_count<pos:position pos:line="7" pos:column="29"/></name></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">cacheDigestTest<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">store_digest<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">(<pos:position pos:line="9" pos:column="44"/></operator><specifier pos:line="9" pos:column="44">const<pos:position pos:line="9" pos:column="49"/></specifier> <name pos:line="9" pos:column="50">cache_key<pos:position pos:line="9" pos:column="59"/></name> <operator pos:line="9" pos:column="60">*<pos:position pos:line="9" pos:column="61"/></operator><operator pos:line="9" pos:column="61">)<pos:position pos:line="9" pos:column="62"/></operator><name><name pos:line="9" pos:column="62">entry<pos:position pos:line="9" pos:column="67"/></name><operator pos:line="9" pos:column="67">-&gt;<pos:position pos:line="9" pos:column="72"/></operator><name pos:line="9" pos:column="69">key<pos:position pos:line="9" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="74"/></condition><then pos:line="9" pos:column="74">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="10" pos:column="13">++<pos:position pos:line="10" pos:column="15"/></operator><name><name pos:line="10" pos:column="15">sd_stats<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">add_coll_count<pos:position pos:line="10" pos:column="38"/></name></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="12" pos:column="9">cacheDigestAdd<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">store_digest<pos:position pos:line="12" pos:column="36"/></name></expr></argument>,  <argument><expr><operator pos:line="12" pos:column="39">(<pos:position pos:line="12" pos:column="40"/></operator><specifier pos:line="12" pos:column="40">const<pos:position pos:line="12" pos:column="45"/></specifier> <name pos:line="12" pos:column="46">cache_key<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">*<pos:position pos:line="12" pos:column="57"/></operator><operator pos:line="12" pos:column="57">)<pos:position pos:line="12" pos:column="58"/></operator><name><name pos:line="12" pos:column="58">entry<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">-&gt;<pos:position pos:line="12" pos:column="68"/></operator><name pos:line="12" pos:column="65">key<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">71<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">6<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"storeDigestAdd: added entry, key: "<pos:position pos:line="14" pos:column="59"/></literal> <operator pos:line="14" pos:column="60">&lt;&lt;<pos:position pos:line="14" pos:column="68"/></operator> <call><name><name pos:line="14" pos:column="63">entry<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">-&gt;<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="70">getMD5Text<pos:position pos:line="14" pos:column="80"/></name></name><argument_list pos:line="14" pos:column="80">()<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="84"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><operator pos:line="16" pos:column="9">++<pos:position pos:line="16" pos:column="11"/></operator><name><name pos:line="16" pos:column="11">sd_stats<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">.<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">rej_count<pos:position pos:line="16" pos:column="29"/></name></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">cacheDigestTest<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">store_digest<pos:position pos:line="18" pos:column="41"/></name></expr></argument>,  <argument><expr><operator pos:line="18" pos:column="44">(<pos:position pos:line="18" pos:column="45"/></operator><specifier pos:line="18" pos:column="45">const<pos:position pos:line="18" pos:column="50"/></specifier> <name pos:line="18" pos:column="51">cache_key<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">*<pos:position pos:line="18" pos:column="62"/></operator><operator pos:line="18" pos:column="62">)<pos:position pos:line="18" pos:column="63"/></operator><name><name pos:line="18" pos:column="63">entry<pos:position pos:line="18" pos:column="68"/></name><operator pos:line="18" pos:column="68">-&gt;<pos:position pos:line="18" pos:column="73"/></operator><name pos:line="18" pos:column="70">key<pos:position pos:line="18" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="75"/></condition><then pos:line="18" pos:column="75">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="13">++<pos:position pos:line="19" pos:column="15"/></operator><name><name pos:line="19" pos:column="15">sd_stats<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">.<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">rej_coll_count<pos:position pos:line="19" pos:column="38"/></name></name></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

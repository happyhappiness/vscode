<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1764_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">peer_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">neighborType<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">peer<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">p<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">HttpRequest<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">request<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name><name pos:line="5" pos:column="11">struct<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">_domain_type<pos:position pos:line="5" pos:column="30"/></name></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">d<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">d<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">typelist<pos:position pos:line="7" pos:column="25"/></name></name></expr>;<pos:position pos:line="7" pos:column="26"/></init> <condition><expr><name pos:line="7" pos:column="27">d<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></condition> <incr><expr><name pos:line="7" pos:column="30">d<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">=<pos:position pos:line="7" pos:column="33"/></operator> <name><name pos:line="7" pos:column="34">d<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">next<pos:position pos:line="7" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="42"/></control> <block pos:line="7" pos:column="43">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">matchDomainName<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><call><name><name pos:line="8" pos:column="34">request<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">-&gt;<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="43">GetHost<pos:position pos:line="8" pos:column="50"/></name></name><argument_list pos:line="8" pos:column="50">()<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="54">d<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">domain<pos:position pos:line="8" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="65"/></condition><then pos:line="8" pos:column="65">
            <block type="pseudo"><if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">d<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">type<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">PEER_NONE<pos:position pos:line="9" pos:column="37"/></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
                <block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name><name pos:line="10" pos:column="24">d<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">type<pos:position pos:line="10" pos:column="31"/></name></name></expr>;<pos:position pos:line="10" pos:column="32"/></return></block></then></if></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">PEER_MULTICAST_SIBLINGS<pos:position pos:line="12" pos:column="28"/></name></expr></cpp:if>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">p<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">type<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">PEER_MULTICAST<pos:position pos:line="13" pos:column="34"/></name></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35">
        <block type="pseudo"><if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">p<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">options<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">.<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">mcast_siblings<pos:position pos:line="14" pos:column="38"/></name></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><name pos:line="15" pos:column="20">PEER_SIBLING<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></return></block></then></if></block></then></if>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="18" pos:column="5">return <expr><name><name pos:line="18" pos:column="12">p<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">type<pos:position pos:line="18" pos:column="19"/></name></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5683_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">std<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name><name pos:line="1" pos:column="6">vector<pos:position pos:line="1" pos:column="12"/></name><argument_list type="generic" pos:line="1" pos:column="12">&lt;<argument><expr><name><name pos:line="1" pos:column="13">Auth<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">User<pos:position pos:line="1" pos:column="23"/></name><operator pos:line="1" pos:column="23">::<pos:position pos:line="1" pos:column="25"/></operator><name pos:line="1" pos:column="25">Pointer<pos:position pos:line="1" pos:column="32"/></name></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="36"/></argument_list></name></name></type>
<name><name pos:line="2" pos:column="1">CredentialsCache<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">sortedUsersList<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">vector<pos:position pos:line="4" pos:column="16"/></name><argument_list type="generic" pos:line="4" pos:column="16">&lt;<argument><expr><name><name pos:line="4" pos:column="17">Auth<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">::<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">User<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">::<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">Pointer<pos:position pos:line="4" pos:column="36"/></name></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="40"/></argument_list></name></name></type> <name pos:line="4" pos:column="38">rv<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><call><name pos:line="4" pos:column="41">size<pos:position pos:line="4" pos:column="45"/></name><argument_list pos:line="4" pos:column="45">()<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><literal type="null" pos:line="4" pos:column="49">nullptr<pos:position pos:line="4" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">std<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">transform<pos:position pos:line="5" pos:column="19"/></name></name><argument_list pos:line="5" pos:column="19">(<argument><expr><call><name><name pos:line="5" pos:column="20">store_<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">.<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">begin<pos:position pos:line="5" pos:column="32"/></name></name><argument_list pos:line="5" pos:column="32">()<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="36">store_<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">end<pos:position pos:line="5" pos:column="46"/></name></name><argument_list pos:line="5" pos:column="46">()<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="50">rv<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">.<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">begin<pos:position pos:line="5" pos:column="58"/></name></name><argument_list pos:line="5" pos:column="58">()<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr></argument>,
    <argument><expr><lambda><capture pos:line="6" pos:column="5">[]<pos:position pos:line="6" pos:column="7"/></capture><parameter_list pos:line="6" pos:column="7">(<parameter><decl><type><name><name pos:line="6" pos:column="8">StoreType<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">::<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">value_type<pos:position pos:line="6" pos:column="29"/></name></name></type> <name pos:line="6" pos:column="30">v<pos:position pos:line="6" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="32"/></parameter_list> <block pos:line="6" pos:column="33">{ <return pos:line="6" pos:column="35">return <expr><name><name pos:line="6" pos:column="42">v<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">.<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">second<pos:position pos:line="6" pos:column="50"/></name></name></expr>;<pos:position pos:line="6" pos:column="51"/></return> }<pos:position pos:line="6" pos:column="53"/></block></lambda></expr></argument>
                  )<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">std<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">::<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">sort<pos:position pos:line="8" pos:column="14"/></name></name><argument_list pos:line="8" pos:column="14">(<argument><expr><call><name><name pos:line="8" pos:column="15">rv<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">begin<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">()<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="27">rv<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">.<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">end<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">()<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr></argument>,
    <argument><expr><lambda><capture pos:line="9" pos:column="5">[]<pos:position pos:line="9" pos:column="7"/></capture><parameter_list pos:line="9" pos:column="7">(<parameter><decl><type><specifier pos:line="9" pos:column="8">const<pos:position pos:line="9" pos:column="13"/></specifier> <name><name pos:line="9" pos:column="14">Auth<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">::<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">User<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">::<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">Pointer<pos:position pos:line="9" pos:column="33"/></name></name> <modifier pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></modifier></type><name pos:line="9" pos:column="35">lhs<pos:position pos:line="9" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="9" pos:column="40">const<pos:position pos:line="9" pos:column="45"/></specifier> <name><name pos:line="9" pos:column="46">Auth<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">::<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="52">User<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">::<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">Pointer<pos:position pos:line="9" pos:column="65"/></name></name> <modifier pos:line="9" pos:column="66">&amp;<pos:position pos:line="9" pos:column="71"/></modifier></type><name pos:line="9" pos:column="67">rhs<pos:position pos:line="9" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="71"/></parameter_list> <block pos:line="9" pos:column="72">{
        <return pos:line="10" pos:column="9">return <expr><call><name pos:line="10" pos:column="16">strcmp<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><call><name><name pos:line="10" pos:column="23">lhs<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">username<pos:position pos:line="10" pos:column="36"/></name></name><argument_list pos:line="10" pos:column="36">()<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="40">rhs<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">username<pos:position pos:line="10" pos:column="53"/></name></name><argument_list pos:line="10" pos:column="53">()<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call> <operator pos:line="10" pos:column="57">&lt;<pos:position pos:line="10" pos:column="61"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal></expr>;<pos:position pos:line="10" pos:column="61"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></lambda></expr></argument>
             )<pos:position pos:line="12" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">rv<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3986_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">ACLMethodData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">dump<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list> <specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBufList<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">sl<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name><name pos:line="5" pos:column="10">std<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">::<pos:position pos:line="5" pos:column="15"/></operator><name><name pos:line="5" pos:column="15">list<pos:position pos:line="5" pos:column="19"/></name><argument_list type="generic" pos:line="5" pos:column="19">&lt;<argument><expr><name pos:line="5" pos:column="20">HttpRequestMethod<pos:position pos:line="5" pos:column="37"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="41"/></argument_list></name><operator pos:line="5" pos:column="38">::<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">const_iterator<pos:position pos:line="5" pos:column="54"/></name></name></type> <name pos:line="5" pos:column="55">i<pos:position pos:line="5" pos:column="56"/></name> <init pos:line="5" pos:column="57">= <expr><call><name><name pos:line="5" pos:column="59">values<pos:position pos:line="5" pos:column="65"/></name><operator pos:line="5" pos:column="65">.<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="66">begin<pos:position pos:line="5" pos:column="71"/></name></name><argument_list pos:line="5" pos:column="71">()<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></init> <condition><expr><name pos:line="5" pos:column="75">i<pos:position pos:line="5" pos:column="76"/></name> <operator pos:line="5" pos:column="77">!=<pos:position pos:line="5" pos:column="79"/></operator> <call><name><name pos:line="5" pos:column="80">values<pos:position pos:line="5" pos:column="86"/></name><operator pos:line="5" pos:column="86">.<pos:position pos:line="5" pos:column="87"/></operator><name pos:line="5" pos:column="87">end<pos:position pos:line="5" pos:column="90"/></name></name><argument_list pos:line="5" pos:column="90">()<pos:position pos:line="5" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="93"/></condition> <incr><expr><operator pos:line="5" pos:column="94">++<pos:position pos:line="5" pos:column="96"/></operator><name pos:line="5" pos:column="96">i<pos:position pos:line="5" pos:column="97"/></name></expr></incr>)<pos:position pos:line="5" pos:column="98"/></control> <block pos:line="5" pos:column="99">{
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">sl<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">push_back<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">(<argument><expr><call><name><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">i<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">)<pos:position pos:line="6" pos:column="26"/></operator><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">image<pos:position pos:line="6" pos:column="32"/></name></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></for>

    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">sl<pos:position pos:line="9" pos:column="14"/></name></expr>;<pos:position pos:line="9" pos:column="15"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

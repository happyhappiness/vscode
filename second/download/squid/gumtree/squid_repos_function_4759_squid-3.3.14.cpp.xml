<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4759_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CossMemBuf<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">write<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">CossSwapDir<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">SD<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator> <call><name><name pos:line="4" pos:column="8">StoreFScoss<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">::<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">GetInstance<pos:position pos:line="4" pos:column="32"/></name></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name><name pos:line="4" pos:column="35">stats<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">.<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">stripe_write<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">.<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">ops<pos:position pos:line="4" pos:column="57"/></name></name></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">79<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"CossMemBuf::write: offset "<pos:position pos:line="5" pos:column="47"/></literal> <operator pos:line="5" pos:column="48">&lt;&lt;<pos:position pos:line="5" pos:column="56"/></operator> <name pos:line="5" pos:column="51">diskstart<pos:position pos:line="5" pos:column="60"/></name> <operator pos:line="5" pos:column="61">&lt;&lt;<pos:position pos:line="5" pos:column="69"/></operator> <literal type="string" pos:line="5" pos:column="64">", len "<pos:position pos:line="5" pos:column="72"/></literal> <operator pos:line="5" pos:column="73">&lt;&lt;<pos:position pos:line="5" pos:column="81"/></operator> <operator pos:line="5" pos:column="76">(<pos:position pos:line="5" pos:column="77"/></operator><name pos:line="5" pos:column="77">diskend<pos:position pos:line="5" pos:column="84"/></name> <operator pos:line="5" pos:column="85">-<pos:position pos:line="5" pos:column="86"/></operator> <name pos:line="5" pos:column="87">diskstart<pos:position pos:line="5" pos:column="96"/></name><operator pos:line="5" pos:column="96">)<pos:position pos:line="5" pos:column="97"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">flags<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">.<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">writing<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <literal type="number" pos:line="6" pos:column="21">1<pos:position pos:line="6" pos:column="22"/></literal></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* XXX Remember that diskstart/diskend are block offsets! */</comment>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">SD<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">-&gt;<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="9">theFile<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">write<pos:position pos:line="8" pos:column="23"/></name></name><argument_list pos:line="8" pos:column="23">(<argument><expr><operator pos:line="8" pos:column="24">new<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="28">CossWrite<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><call><name pos:line="8" pos:column="38">WriteRequest<pos:position pos:line="8" pos:column="50"/></name><argument_list pos:line="8" pos:column="50">(<argument><expr><operator pos:line="8" pos:column="51">(<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">char<pos:position pos:line="8" pos:column="56"/></name> <specifier pos:line="8" pos:column="57">const<pos:position pos:line="8" pos:column="62"/></specifier> <operator pos:line="8" pos:column="63">*<pos:position pos:line="8" pos:column="64"/></operator><operator pos:line="8" pos:column="64">)<pos:position pos:line="8" pos:column="65"/></operator><operator pos:line="8" pos:column="65">&amp;<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="66">buffer<pos:position pos:line="8" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="74">diskstart<pos:position pos:line="8" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="85">diskend<pos:position pos:line="8" pos:column="92"/></name> <operator pos:line="8" pos:column="93">-<pos:position pos:line="8" pos:column="94"/></operator> <name pos:line="8" pos:column="95">diskstart<pos:position pos:line="8" pos:column="104"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="106">NULL<pos:position pos:line="8" pos:column="110"/></name></expr></argument>)<pos:position pos:line="8" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="113">this<pos:position pos:line="8" pos:column="117"/></name></expr></argument>)<pos:position pos:line="8" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="120"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

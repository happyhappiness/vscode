<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6736_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">old_base64_encode<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">decoded_str<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">result<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><name pos:line="4" pos:column="24">BASE64_RESULT_SZ<pos:position pos:line="4" pos:column="40"/></name></expr>]<pos:position pos:line="4" pos:column="41"/></index></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">base64_encode_str<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">result<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="31">sizeof<argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">result<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="5" pos:column="47">decoded_str<pos:position pos:line="5" pos:column="58"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="60">strlen<pos:position pos:line="5" pos:column="66"/></name><argument_list pos:line="5" pos:column="66">(<argument><expr><name pos:line="5" pos:column="67">decoded_str<pos:position pos:line="5" pos:column="78"/></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="81"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

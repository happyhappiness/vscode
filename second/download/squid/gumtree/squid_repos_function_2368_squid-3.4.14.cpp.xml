<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2368_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsInitVCConnected<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name><name pos:line="2" pos:column="27">Comm<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">ConnectionPointer<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">&amp;<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="52">conn<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">comm_err_t<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">status<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">int<pos:position pos:line="2" pos:column="80"/></name></type> <name pos:line="2" pos:column="81">xerrno<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="89">void<pos:position pos:line="2" pos:column="93"/></name> <modifier pos:line="2" pos:column="94">*<pos:position pos:line="2" pos:column="95"/></modifier></type><name pos:line="2" pos:column="95">data<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="100"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">nsvc<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type> <name pos:line="4" pos:column="12">vc<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">nsvc<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">)<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">COMM_OK<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">||<pos:position pos:line="6" pos:column="29"/></operator> <operator pos:line="6" pos:column="30">!<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">conn<pos:position pos:line="6" pos:column="35"/></name></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <block pos:line="6" pos:column="37">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">buf<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">MAX_IPSTRLEN<pos:position pos:line="7" pos:column="30"/></name></expr>]<pos:position pos:line="7" pos:column="31"/></index></name> <init pos:line="7" pos:column="32">= <expr><literal type="string" pos:line="7" pos:column="34">""<pos:position pos:line="7" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">vc<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">ns<pos:position pos:line="8" pos:column="19"/></name></name> <operator pos:line="8" pos:column="20">&lt;<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="22">nns<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="13">nameservers<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><name><name pos:line="9" pos:column="25">vc<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">ns<pos:position pos:line="9" pos:column="31"/></name></name></expr>]<pos:position pos:line="9" pos:column="32"/></index></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><call><name><name pos:line="9" pos:column="33">S<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">toStr<pos:position pos:line="9" pos:column="40"/></name></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">buf<pos:position pos:line="9" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="9" pos:column="45">MAX_IPSTRLEN<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">78<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_IMPORTANT<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">HERE<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">&lt;&lt;<pos:position pos:line="10" pos:column="48"/></operator> <literal type="string" pos:line="10" pos:column="43">"Failed to connect to nameserver "<pos:position pos:line="10" pos:column="77"/></literal> <operator pos:line="10" pos:column="78">&lt;&lt;<pos:position pos:line="10" pos:column="86"/></operator> <name pos:line="10" pos:column="81">buf<pos:position pos:line="10" pos:column="84"/></name> <operator pos:line="10" pos:column="85">&lt;&lt;<pos:position pos:line="10" pos:column="93"/></operator> <literal type="string" pos:line="10" pos:column="88">" using TCP."<pos:position pos:line="10" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="103"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">vc<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">conn<pos:position pos:line="14" pos:column="13"/></name></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">conn<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">comm_add_close_handler<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name><name pos:line="16" pos:column="28">conn<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">fd<pos:position pos:line="16" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">idnsVCClosed<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">vc<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">AsyncCall<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">::<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">Pointer<pos:position pos:line="17" pos:column="23"/></name></name></type> <name pos:line="17" pos:column="24">call<pos:position pos:line="17" pos:column="28"/></name> <init pos:line="17" pos:column="29">= <expr><call><name pos:line="17" pos:column="31">commCbCall<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><literal type="number" pos:line="17" pos:column="42">5<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="44">4<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="47">"idnsReadVCHeader"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>,
                                         <argument><expr><call><name pos:line="18" pos:column="42">CommIoCbPtrFun<pos:position pos:line="18" pos:column="56"/></name><argument_list pos:line="18" pos:column="56">(<argument><expr><name pos:line="18" pos:column="57">idnsReadVCHeader<pos:position pos:line="18" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="75">vc<pos:position pos:line="18" pos:column="77"/></name></expr></argument>)<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">comm_read<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><name pos:line="19" pos:column="15">conn<pos:position pos:line="19" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">char<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">*<pos:position pos:line="19" pos:column="28"/></operator><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator><operator pos:line="19" pos:column="29">&amp;<pos:position pos:line="19" pos:column="34"/></operator><name><name pos:line="19" pos:column="30">vc<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">msglen<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="42">2<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">call<pos:position pos:line="19" pos:column="49"/></name></expr></argument>)<pos:position pos:line="19" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">vc<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">busy<pos:position pos:line="20" pos:column="13"/></name></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">idnsDoSendQueryVC<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">vc<pos:position pos:line="21" pos:column="25"/></name></expr></argument>)<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

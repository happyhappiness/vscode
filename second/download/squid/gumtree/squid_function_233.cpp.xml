<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_233.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">handleRequestBodyProducerAborted<pos:position pos:line="2" pos:column="48"/></name></name><parameter_list pos:line="2" pos:column="48">()<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">ServerStateData<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">::<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">handleRequestBodyProducerAborted<pos:position pos:line="4" pos:column="54"/></name></name><argument_list pos:line="4" pos:column="54">()<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">entry<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">isEmpty<pos:position pos:line="5" pos:column="23"/></name></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26"> <block pos:line="5" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">11<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">3<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"request body aborted: "<pos:position pos:line="6" pos:column="47"/></literal> <operator pos:line="6" pos:column="48">&lt;&lt;<pos:position pos:line="6" pos:column="56"/></operator> <name pos:line="6" pos:column="51">serverConnection<pos:position pos:line="6" pos:column="67"/></name></expr></argument>)<pos:position pos:line="6" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="69"/></expr_stmt>
        <comment type="line" pos:line="7" pos:column="9">// We usually get here when ICAP REQMOD aborts during body processing.</comment>
        <comment type="line" pos:line="8" pos:column="9">// We might also get here if client-side aborts, but then our response</comment>
        <comment type="line" pos:line="9" pos:column="9">// should not matter because either client-side will provide its own or</comment>
        <comment type="line" pos:line="10" pos:column="9">// there will be no response at all (e.g., if the the client has left).</comment>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">ErrorState<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">err<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><operator pos:line="11" pos:column="27">new<pos:position pos:line="11" pos:column="30"/></operator> <call><name pos:line="11" pos:column="31">ErrorState<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">ERR_ICAP_FAILURE<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="11" pos:column="86"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="88">fwd<pos:position pos:line="11" pos:column="91"/></name><operator pos:line="11" pos:column="91">-&gt;<pos:position pos:line="11" pos:column="96"/></operator><name pos:line="11" pos:column="93">request<pos:position pos:line="11" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="101"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="102"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">err<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">xerrno<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">ERR_DETAIL_SRV_REQMOD_REQ_BODY<pos:position pos:line="12" pos:column="53"/></name></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">fwd<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">fail<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">err<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">abortTransaction<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><literal type="string" pos:line="16" pos:column="22">"request body producer aborted"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

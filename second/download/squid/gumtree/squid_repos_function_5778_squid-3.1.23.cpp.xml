<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5778_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BOOL<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">WINAPI<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">SSP_LogonUser<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">PTSTR<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">szUser<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">PTSTR<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">szPassword<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">PTSTR<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">szDomain<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">AUTH_SEQ<pos:position pos:line="3" pos:column="13"/></name></type>    <name pos:line="3" pos:column="17">asServer<pos:position pos:line="3" pos:column="25"/></name>   <init pos:line="3" pos:column="28">= <expr><block pos:line="3" pos:column="30">{<expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr>}<pos:position pos:line="3" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AUTH_SEQ<pos:position pos:line="4" pos:column="13"/></name></type>    <name pos:line="4" pos:column="17">asClient<pos:position pos:line="4" pos:column="25"/></name>   <init pos:line="4" pos:column="28">= <expr><block pos:line="4" pos:column="30">{<expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr>}<pos:position pos:line="4" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">BOOL<pos:position pos:line="5" pos:column="9"/></name></type>        <name pos:line="5" pos:column="17">fDone<pos:position pos:line="5" pos:column="22"/></name>      <init pos:line="5" pos:column="28">= <expr><name pos:line="5" pos:column="30">FALSE<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">BOOL<pos:position pos:line="6" pos:column="9"/></name></type>        <name pos:line="6" pos:column="17">fResult<pos:position pos:line="6" pos:column="24"/></name>    <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">FALSE<pos:position pos:line="6" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">DWORD<pos:position pos:line="7" pos:column="10"/></name></type>       <name pos:line="7" pos:column="17">cbOut<pos:position pos:line="7" pos:column="22"/></name>      <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">DWORD<pos:position pos:line="8" pos:column="10"/></name></type>       <name pos:line="8" pos:column="17">cbIn<pos:position pos:line="8" pos:column="21"/></name>       <init pos:line="8" pos:column="28">= <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">SEC_WINNT_AUTH_IDENTITY<pos:position pos:line="10" pos:column="28"/></name></type> <name pos:line="10" pos:column="29">ai<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt>

    <do pos:line="12" pos:column="5">do <block pos:line="12" pos:column="8">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">hModule<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
            <block type="pseudo"><break pos:line="14" pos:column="13">break;<pos:position pos:line="14" pos:column="19"/></break></block></then></if>

        <comment type="block" pos:line="16" pos:column="9">/* Initialize auth identity structure */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ZeroMemory<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><operator pos:line="17" pos:column="20">&amp;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="21">ai<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="25">sizeof<argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">ai<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">ai<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">Domain<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">void<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">*<pos:position pos:line="18" pos:column="28"/></operator><operator pos:line="18" pos:column="28">)<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">szDomain<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">ai<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">.<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">DomainLength<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <call><name pos:line="19" pos:column="27">lstrlen<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">szDomain<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">ai<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">User<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">void<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><operator pos:line="20" pos:column="26">)<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">szUser<pos:position pos:line="20" pos:column="33"/></name></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">ai<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">UserLength<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <call><name pos:line="21" pos:column="25">lstrlen<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">szUser<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">ai<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">.<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">Password<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">void<pos:position pos:line="22" pos:column="28"/></name> <operator pos:line="22" pos:column="29">*<pos:position pos:line="22" pos:column="30"/></operator><operator pos:line="22" pos:column="30">)<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">szPassword<pos:position pos:line="22" pos:column="41"/></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">ai<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">.<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">PasswordLength<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <call><name pos:line="23" pos:column="29">lstrlen<pos:position pos:line="23" pos:column="36"/></name><argument_list pos:line="23" pos:column="36">(<argument><expr><name pos:line="23" pos:column="37">szPassword<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><call><name pos:line="24" pos:column="5">defined<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name pos:line="24" pos:column="13">UNICODE<pos:position pos:line="24" pos:column="20"/></name></expr></argument>)<pos:position pos:line="24" pos:column="21"/></argument_list></call> <operator pos:line="24" pos:column="22">||<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">defined<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">_UNICODE<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr></cpp:if>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">ai<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">Flags<pos:position pos:line="25" pos:column="17"/></name></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="20">SEC_WINNT_AUTH_IDENTITY_UNICODE<pos:position pos:line="25" pos:column="51"/></name></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">ai<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">Flags<pos:position pos:line="27" pos:column="17"/></name></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">SEC_WINNT_AUTH_IDENTITY_ANSI<pos:position pos:line="27" pos:column="48"/></name></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="30" pos:column="9">/* Prepare client message (negotiate) */</comment>
        <expr_stmt><expr><name pos:line="31" pos:column="9">cbOut<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">=<pos:position pos:line="31" pos:column="16"/></operator> <name pos:line="31" pos:column="17">cbMaxToken<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">GenClientContext<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">asClient<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="42">&amp;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="43">ai<pos:position pos:line="32" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="47">NULL<pos:position pos:line="32" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="53">0<pos:position pos:line="32" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="56">pClientBuf<pos:position pos:line="32" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="68">&amp;<pos:position pos:line="32" pos:column="73"/></operator><name pos:line="32" pos:column="69">cbOut<pos:position pos:line="32" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="76">&amp;<pos:position pos:line="32" pos:column="81"/></operator><name pos:line="32" pos:column="77">fDone<pos:position pos:line="32" pos:column="82"/></name></expr></argument>)<pos:position pos:line="32" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="84"/></condition><then pos:line="32" pos:column="84">
            <block type="pseudo"><break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break></block></then></if>

        <comment type="block" pos:line="35" pos:column="9">/* Prepare server message (challenge) */</comment>
        <expr_stmt><expr><name pos:line="36" pos:column="9">cbIn<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">cbOut<pos:position pos:line="36" pos:column="21"/></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">cbOut<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <name pos:line="37" pos:column="17">cbMaxToken<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">!<pos:position pos:line="38" pos:column="14"/></operator><call><name pos:line="38" pos:column="14">GenServerContext<pos:position pos:line="38" pos:column="30"/></name><argument_list pos:line="38" pos:column="30">(<argument><expr><operator pos:line="38" pos:column="31">&amp;<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="32">asServer<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">pClientBuf<pos:position pos:line="38" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">cbIn<pos:position pos:line="38" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="60">pServerBuf<pos:position pos:line="38" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="72">&amp;<pos:position pos:line="38" pos:column="77"/></operator><name pos:line="38" pos:column="73">cbOut<pos:position pos:line="38" pos:column="78"/></name></expr></argument>,
                              <argument><expr><operator pos:line="39" pos:column="31">&amp;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="32">fDone<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">NULL<pos:position pos:line="39" pos:column="43"/></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45">
            <block type="pseudo"><break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break></block></then></if>
        <comment type="block" pos:line="41" pos:column="9">/* Most likely failure: AcceptServerContext fails with SEC_E_LOGON_DENIED
         * in the case of bad szUser or szPassword.
         * Unexpected Result: Logon will succeed if you pass in a bad szUser and
         * the guest account is enabled in the specified domain.
         */</comment>

        <comment type="block" pos:line="47" pos:column="9">/* Prepare client message (authenticate) */</comment>
        <expr_stmt><expr><name pos:line="48" pos:column="9">cbIn<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">cbOut<pos:position pos:line="48" pos:column="21"/></name></expr>;<pos:position pos:line="48" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">cbOut<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <name pos:line="49" pos:column="17">cbMaxToken<pos:position pos:line="49" pos:column="27"/></name></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><call><name pos:line="50" pos:column="14">GenClientContext<pos:position pos:line="50" pos:column="30"/></name><argument_list pos:line="50" pos:column="30">(<argument><expr><operator pos:line="50" pos:column="31">&amp;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="32">asClient<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="43">ai<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">pServerBuf<pos:position pos:line="50" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="59">cbIn<pos:position pos:line="50" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="65">pClientBuf<pos:position pos:line="50" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="77">&amp;<pos:position pos:line="50" pos:column="82"/></operator><name pos:line="50" pos:column="78">cbOut<pos:position pos:line="50" pos:column="83"/></name></expr></argument>,
                              <argument><expr><operator pos:line="51" pos:column="31">&amp;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="32">fDone<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="39"/></condition><then pos:line="51" pos:column="39">
            <block type="pseudo"><break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break></block></then></if>

        <comment type="block" pos:line="54" pos:column="9">/* Prepare server message (authentication) */</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">cbIn<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">cbOut<pos:position pos:line="55" pos:column="21"/></name></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">cbOut<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">=<pos:position pos:line="56" pos:column="16"/></operator> <name pos:line="56" pos:column="17">cbMaxToken<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">!<pos:position pos:line="57" pos:column="14"/></operator><call><name pos:line="57" pos:column="14">GenServerContext<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">asServer<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="42">pClientBuf<pos:position pos:line="57" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">cbIn<pos:position pos:line="57" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="60">pServerBuf<pos:position pos:line="57" pos:column="70"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="72">&amp;<pos:position pos:line="57" pos:column="77"/></operator><name pos:line="57" pos:column="73">cbOut<pos:position pos:line="57" pos:column="78"/></name></expr></argument>,
                              <argument><expr><operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name pos:line="58" pos:column="32">fDone<pos:position pos:line="58" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">NULL<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="45"/></condition><then pos:line="58" pos:column="45">
            <block type="pseudo"><break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break></block></then></if>
        <expr_stmt><expr><name pos:line="60" pos:column="9">fResult<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <name pos:line="60" pos:column="19">TRUE<pos:position pos:line="60" pos:column="23"/></name></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block> while <condition pos:line="61" pos:column="13">(<expr><literal type="number" pos:line="61" pos:column="14">0<pos:position pos:line="61" pos:column="15"/></literal></expr>)<pos:position pos:line="61" pos:column="16"/></condition>;<pos:position pos:line="61" pos:column="17"/></do>

    <comment type="block" pos:line="63" pos:column="5">/* Clean up resources */</comment>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name><name pos:line="64" pos:column="9">asClient<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">.<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">fHaveCtxtHandle<pos:position pos:line="64" pos:column="33"/></name></name></expr>)<pos:position pos:line="64" pos:column="34"/></condition><then pos:line="64" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="9">_DeleteSecurityContext<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><operator pos:line="65" pos:column="32">&amp;<pos:position pos:line="65" pos:column="37"/></operator><name><name pos:line="65" pos:column="33">asClient<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">hctxt<pos:position pos:line="65" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="49"/></expr_stmt></block></then></if>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">asClient<pos:position pos:line="66" pos:column="17"/></name><operator pos:line="66" pos:column="17">.<pos:position pos:line="66" pos:column="18"/></operator><name pos:line="66" pos:column="18">fHaveCredHandle<pos:position pos:line="66" pos:column="33"/></name></name></expr>)<pos:position pos:line="66" pos:column="34"/></condition><then pos:line="66" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="9">_FreeCredentialsHandle<pos:position pos:line="67" pos:column="31"/></name><argument_list pos:line="67" pos:column="31">(<argument><expr><operator pos:line="67" pos:column="32">&amp;<pos:position pos:line="67" pos:column="37"/></operator><name><name pos:line="67" pos:column="33">asClient<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">.<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">hcred<pos:position pos:line="67" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt></block></then></if>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">asServer<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">.<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">fHaveCtxtHandle<pos:position pos:line="68" pos:column="33"/></name></name></expr>)<pos:position pos:line="68" pos:column="34"/></condition><then pos:line="68" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="9">_DeleteSecurityContext<pos:position pos:line="69" pos:column="31"/></name><argument_list pos:line="69" pos:column="31">(<argument><expr><operator pos:line="69" pos:column="32">&amp;<pos:position pos:line="69" pos:column="37"/></operator><name><name pos:line="69" pos:column="33">asServer<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">.<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">hctxt<pos:position pos:line="69" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt></block></then></if>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">asServer<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">.<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">fHaveCredHandle<pos:position pos:line="70" pos:column="33"/></name></name></expr>)<pos:position pos:line="70" pos:column="34"/></condition><then pos:line="70" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="9">_FreeCredentialsHandle<pos:position pos:line="71" pos:column="31"/></name><argument_list pos:line="71" pos:column="31">(<argument><expr><operator pos:line="71" pos:column="32">&amp;<pos:position pos:line="71" pos:column="37"/></operator><name><name pos:line="71" pos:column="33">asServer<pos:position pos:line="71" pos:column="41"/></name><operator pos:line="71" pos:column="41">.<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="42">hcred<pos:position pos:line="71" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="49"/></expr_stmt></block></then></if>

    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">fResult<pos:position pos:line="73" pos:column="19"/></name></expr>;<pos:position pos:line="73" pos:column="20"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6369_squid-3.4.14.cpp" pos:tabs="8"><function type="operator"><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">Ipc<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">OneToOneUniQueue<pos:position pos:line="1" pos:column="28"/></name></name> <modifier pos:line="1" pos:column="29">&amp;<pos:position pos:line="1" pos:column="34"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">OneToOneUniQueues<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">operator <name pos:line="2" pos:column="34">[]<pos:position pos:line="2" pos:column="36"/></name></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">index<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><literal type="number" pos:line="4" pos:column="10">0<pos:position pos:line="4" pos:column="11"/></literal> <operator pos:line="4" pos:column="12">&lt;=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="15">index<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&amp;&amp;<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="24">index<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">&lt;<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="32">theCapacity<pos:position pos:line="4" pos:column="43"/></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="45"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">size_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">queueSize<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><ternary><condition><expr><name pos:line="5" pos:column="30">index<pos:position pos:line="5" pos:column="35"/></name></expr> ?<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37"> <expr><call><name pos:line="5" pos:column="38">front<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><call><name pos:line="5" pos:column="46">sharedMemorySize<pos:position pos:line="5" pos:column="62"/></name><argument_list pos:line="5" pos:column="62">()<pos:position pos:line="5" pos:column="64"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="65"/></then><else pos:line="5" pos:column="65">: <expr><literal type="number" pos:line="5" pos:column="67">0<pos:position pos:line="5" pos:column="68"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><specifier pos:line="6" pos:column="17">const<pos:position pos:line="6" pos:column="22"/></specifier></type> <name pos:line="6" pos:column="23">queue<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">=
        <expr><cast type="reinterpret" pos:line="7" pos:column="9">reinterpret_cast<argument_list type="generic" pos:line="7" pos:column="25">&lt;<argument><expr><specifier pos:line="7" pos:column="26">const<pos:position pos:line="7" pos:column="31"/></specifier> <name pos:line="7" pos:column="32">char<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="42"/></argument_list><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">this<pos:position pos:line="7" pos:column="44"/></name></expr></argument>)<pos:position pos:line="7" pos:column="45"/></argument_list></cast> <operator pos:line="7" pos:column="46">+<pos:position pos:line="7" pos:column="47"/></operator> <sizeof pos:line="7" pos:column="48">sizeof<argument_list pos:line="7" pos:column="54">(<argument><expr><operator pos:line="7" pos:column="55">*<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">this<pos:position pos:line="7" pos:column="60"/></name></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></sizeof> <operator pos:line="7" pos:column="62">+<pos:position pos:line="7" pos:column="63"/></operator> <name pos:line="7" pos:column="64">index<pos:position pos:line="7" pos:column="69"/></name> <operator pos:line="7" pos:column="70">*<pos:position pos:line="7" pos:column="71"/></operator> <name pos:line="7" pos:column="72">queueSize<pos:position pos:line="7" pos:column="81"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="82"/></decl_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></operator><cast type="reinterpret" pos:line="8" pos:column="13">reinterpret_cast<argument_list type="generic" pos:line="8" pos:column="29">&lt;<argument><expr><specifier pos:line="8" pos:column="30">const<pos:position pos:line="8" pos:column="35"/></specifier> <name pos:line="8" pos:column="36">OneToOneUniQueue<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">*<pos:position pos:line="8" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="58"/></argument_list><argument_list pos:line="8" pos:column="55">(<argument><expr><name pos:line="8" pos:column="56">queue<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></cast></expr>;<pos:position pos:line="8" pos:column="63"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

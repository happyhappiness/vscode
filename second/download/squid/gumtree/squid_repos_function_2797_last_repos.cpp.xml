<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2797_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">matchDomainName<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">h<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">d<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">uint<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">flags<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">dl<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">hl<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">bool<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">hostIncludesSubdomains<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><operator pos:line="7" pos:column="41">(<pos:position pos:line="7" pos:column="42"/></operator><operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">h<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">==<pos:position pos:line="7" pos:column="47"/></operator> <literal type="char" pos:line="7" pos:column="48">'.'<pos:position pos:line="7" pos:column="51"/></literal><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><literal type="char" pos:line="8" pos:column="12">'.'<pos:position pos:line="8" pos:column="15"/></literal> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <operator pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">h<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="9" pos:column="9">++<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">h<pos:position pos:line="9" pos:column="12"/></name></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt></block></while>

    <expr_stmt><expr><name pos:line="11" pos:column="5">hl<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">strlen<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">h<pos:position pos:line="11" pos:column="18"/></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">hl<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">==<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal></expr>;<pos:position pos:line="14" pos:column="19"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">dl<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">strlen<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">d<pos:position pos:line="16" pos:column="18"/></name></expr></argument>)<pos:position pos:line="16" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/*
     * Start at the ends of the two strings and work towards the
     * beginning.
     */</comment>
    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><call><name pos:line="22" pos:column="12">xtolower<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">h<pos:position pos:line="22" pos:column="22"/></name><index pos:line="22" pos:column="22">[<expr><operator pos:line="22" pos:column="23">--<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">hl<pos:position pos:line="22" pos:column="27"/></name></expr>]<pos:position pos:line="22" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call> <operator pos:line="22" pos:column="30">==<pos:position pos:line="22" pos:column="32"/></operator> <call><name pos:line="22" pos:column="33">xtolower<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name><name pos:line="22" pos:column="42">d<pos:position pos:line="22" pos:column="43"/></name><index pos:line="22" pos:column="43">[<expr><operator pos:line="22" pos:column="44">--<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">dl<pos:position pos:line="22" pos:column="48"/></name></expr>]<pos:position pos:line="22" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="51"/></condition> <block pos:line="22" pos:column="52">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">hl<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">==<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal> <operator pos:line="23" pos:column="21">&amp;&amp;<pos:position pos:line="23" pos:column="31"/></operator> <name pos:line="23" pos:column="24">dl<pos:position pos:line="23" pos:column="26"/></name> <operator pos:line="23" pos:column="27">==<pos:position pos:line="23" pos:column="29"/></operator> <literal type="number" pos:line="23" pos:column="30">0<pos:position pos:line="23" pos:column="31"/></literal></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> <block pos:line="23" pos:column="33">{
            <comment type="block" pos:line="24" pos:column="13">/*
             * We made it all the way to the beginning of both
             * strings without finding any difference.
             */</comment>
            <return pos:line="28" pos:column="13">return <expr><literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><literal type="number" pos:line="31" pos:column="13">0<pos:position pos:line="31" pos:column="14"/></literal> <operator pos:line="31" pos:column="15">==<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">hl<pos:position pos:line="31" pos:column="20"/></name></expr>)<pos:position pos:line="31" pos:column="21"/></condition><then pos:line="31" pos:column="21"> <block pos:line="31" pos:column="22">{
            <comment type="block" pos:line="32" pos:column="13">/*
             * The host string is shorter than the domain string.
             * There is only one case when this can be a match.
             * If the domain is just one character longer, and if
             * that character is a leading '.' then we call it a
             * match.
             */</comment>

            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><literal type="number" pos:line="40" pos:column="17">1<pos:position pos:line="40" pos:column="18"/></literal> <operator pos:line="40" pos:column="19">==<pos:position pos:line="40" pos:column="21"/></operator> <name pos:line="40" pos:column="22">dl<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">&amp;&amp;<pos:position pos:line="40" pos:column="35"/></operator> <literal type="char" pos:line="40" pos:column="28">'.'<pos:position pos:line="40" pos:column="31"/></literal> <operator pos:line="40" pos:column="32">==<pos:position pos:line="40" pos:column="34"/></operator> <name><name pos:line="40" pos:column="35">d<pos:position pos:line="40" pos:column="36"/></name><index pos:line="40" pos:column="36">[<expr><literal type="number" pos:line="40" pos:column="37">0<pos:position pos:line="40" pos:column="38"/></literal></expr>]<pos:position pos:line="40" pos:column="39"/></index></name></expr>)<pos:position pos:line="40" pos:column="40"/></condition><then pos:line="40" pos:column="40">
                <block type="pseudo"><return pos:line="41" pos:column="17">return <expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></return></block></then>
            <else pos:line="42" pos:column="13">else
                <block type="pseudo"><return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">-<pos:position pos:line="43" pos:column="25"/></operator><literal type="number" pos:line="43" pos:column="25">1<pos:position pos:line="43" pos:column="26"/></literal></expr>;<pos:position pos:line="43" pos:column="27"/></return></block></else></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal> <operator pos:line="46" pos:column="15">==<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">dl<pos:position pos:line="46" pos:column="20"/></name></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21"> <block pos:line="46" pos:column="22">{
            <comment type="block" pos:line="47" pos:column="13">/*
             * The domain string is shorter than the host string.
             * This is a match only if the first domain character
             * is a leading '.'.
             */</comment>

            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><literal type="char" pos:line="53" pos:column="17">'.'<pos:position pos:line="53" pos:column="20"/></literal> <operator pos:line="53" pos:column="21">==<pos:position pos:line="53" pos:column="23"/></operator> <name><name pos:line="53" pos:column="24">d<pos:position pos:line="53" pos:column="25"/></name><index pos:line="53" pos:column="25">[<expr><literal type="number" pos:line="53" pos:column="26">0<pos:position pos:line="53" pos:column="27"/></literal></expr>]<pos:position pos:line="53" pos:column="28"/></index></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29"> <block pos:line="53" pos:column="30">{
                <if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">flags<pos:position pos:line="54" pos:column="26"/></name> <operator pos:line="54" pos:column="27">&amp;<pos:position pos:line="54" pos:column="32"/></operator> <name pos:line="54" pos:column="29">mdnRejectSubsubDomains<pos:position pos:line="54" pos:column="51"/></name></expr>)<pos:position pos:line="54" pos:column="52"/></condition><then pos:line="54" pos:column="52"> <block pos:line="54" pos:column="53">{
                    <comment type="line" pos:line="55" pos:column="21">// Check for sub-sub domain and reject</comment>
                    <while pos:line="56" pos:column="21">while<condition pos:line="56" pos:column="26">(<expr><operator pos:line="56" pos:column="27">--<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="29">hl<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">&gt;=<pos:position pos:line="56" pos:column="37"/></operator> <literal type="number" pos:line="56" pos:column="35">0<pos:position pos:line="56" pos:column="36"/></literal> <operator pos:line="56" pos:column="37">&amp;&amp;<pos:position pos:line="56" pos:column="47"/></operator> <name><name pos:line="56" pos:column="40">h<pos:position pos:line="56" pos:column="41"/></name><index pos:line="56" pos:column="41">[<expr><name pos:line="56" pos:column="42">hl<pos:position pos:line="56" pos:column="44"/></name></expr>]<pos:position pos:line="56" pos:column="45"/></index></name> <operator pos:line="56" pos:column="46">!=<pos:position pos:line="56" pos:column="48"/></operator> <literal type="char" pos:line="56" pos:column="49">'.'<pos:position pos:line="56" pos:column="52"/></literal></expr>)<pos:position pos:line="56" pos:column="53"/></condition><block type="pseudo"><empty_stmt pos:line="56" pos:column="53">;<pos:position pos:line="56" pos:column="54"/></empty_stmt></block></while>
                    <if pos:line="57" pos:column="21">if <condition pos:line="57" pos:column="24">(<expr><name pos:line="57" pos:column="25">hl<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">&lt;<pos:position pos:line="57" pos:column="32"/></operator> <literal type="number" pos:line="57" pos:column="30">0<pos:position pos:line="57" pos:column="31"/></literal></expr>)<pos:position pos:line="57" pos:column="32"/></condition><then pos:line="57" pos:column="32"> <block pos:line="57" pos:column="33">{
                        <comment type="line" pos:line="58" pos:column="25">// No sub-sub domain found, but reject if there is a</comment>
                        <comment type="line" pos:line="59" pos:column="25">// leading dot in given host string (which is removed</comment>
                        <comment type="line" pos:line="60" pos:column="25">// before the check is started).</comment>
                        <return pos:line="61" pos:column="25">return <expr><ternary><condition><expr><name pos:line="61" pos:column="32">hostIncludesSubdomains<pos:position pos:line="61" pos:column="54"/></name></expr> ?<pos:position pos:line="61" pos:column="56"/></condition><then pos:line="61" pos:column="56"> <expr><literal type="number" pos:line="61" pos:column="57">1<pos:position pos:line="61" pos:column="58"/></literal></expr> <pos:position pos:line="61" pos:column="59"/></then><else pos:line="61" pos:column="59">: <expr><literal type="number" pos:line="61" pos:column="61">0<pos:position pos:line="61" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="61" pos:column="63"/></return>
                    }<pos:position pos:line="62" pos:column="22"/></block></then> <else pos:line="62" pos:column="23">else
                        <block type="pseudo"><return pos:line="63" pos:column="25">return <expr><literal type="number" pos:line="63" pos:column="32">1<pos:position pos:line="63" pos:column="33"/></literal></expr>;<pos:position pos:line="63" pos:column="34"/></return></block></else></if> <comment type="line" pos:line="63" pos:column="35">// sub-sub domain, reject</comment>
                }<pos:position pos:line="64" pos:column="18"/></block></then> <else pos:line="64" pos:column="19">else
                    <block type="pseudo"><return pos:line="65" pos:column="21">return <expr><literal type="number" pos:line="65" pos:column="28">0<pos:position pos:line="65" pos:column="29"/></literal></expr>;<pos:position pos:line="65" pos:column="30"/></return></block></else></if>
            }<pos:position pos:line="66" pos:column="14"/></block></then> <else pos:line="66" pos:column="15">else
                <block type="pseudo"><return pos:line="67" pos:column="17">return <expr><literal type="number" pos:line="67" pos:column="24">1<pos:position pos:line="67" pos:column="25"/></literal></expr>;<pos:position pos:line="67" pos:column="26"/></return></block></else></if>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
    }<pos:position pos:line="69" pos:column="6"/></block></while>

    <comment type="block" pos:line="71" pos:column="5">/*
     * We found different characters in the same position (from the end).
     */</comment>

    <comment type="line" pos:line="75" pos:column="5">// If the h has a form of "*.foo.com" and d has a form of "x.foo.com"</comment>
    <comment type="line" pos:line="76" pos:column="5">// then the h[hl] points to '*', h[hl+1] to '.' and d[dl] to 'x'</comment>
    <comment type="line" pos:line="77" pos:column="5">// The following checks are safe, the "h[hl + 1]" in the worst case is '\0'.</comment>
    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><operator pos:line="78" pos:column="9">(<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">flags<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">&amp;<pos:position pos:line="78" pos:column="21"/></operator> <name pos:line="78" pos:column="18">mdnHonorWildcards<pos:position pos:line="78" pos:column="35"/></name><operator pos:line="78" pos:column="35">)<pos:position pos:line="78" pos:column="36"/></operator> <operator pos:line="78" pos:column="37">&amp;&amp;<pos:position pos:line="78" pos:column="47"/></operator> <name><name pos:line="78" pos:column="40">h<pos:position pos:line="78" pos:column="41"/></name><index pos:line="78" pos:column="41">[<expr><name pos:line="78" pos:column="42">hl<pos:position pos:line="78" pos:column="44"/></name></expr>]<pos:position pos:line="78" pos:column="45"/></index></name> <operator pos:line="78" pos:column="46">==<pos:position pos:line="78" pos:column="48"/></operator> <literal type="char" pos:line="78" pos:column="49">'*'<pos:position pos:line="78" pos:column="52"/></literal> <operator pos:line="78" pos:column="53">&amp;&amp;<pos:position pos:line="78" pos:column="63"/></operator> <name><name pos:line="78" pos:column="56">h<pos:position pos:line="78" pos:column="57"/></name><index pos:line="78" pos:column="57">[<expr><name pos:line="78" pos:column="58">hl<pos:position pos:line="78" pos:column="60"/></name> <operator pos:line="78" pos:column="61">+<pos:position pos:line="78" pos:column="62"/></operator> <literal type="number" pos:line="78" pos:column="63">1<pos:position pos:line="78" pos:column="64"/></literal></expr>]<pos:position pos:line="78" pos:column="65"/></index></name> <operator pos:line="78" pos:column="66">==<pos:position pos:line="78" pos:column="68"/></operator> <literal type="char" pos:line="78" pos:column="69">'.'<pos:position pos:line="78" pos:column="72"/></literal></expr>)<pos:position pos:line="78" pos:column="73"/></condition><then pos:line="78" pos:column="73">
        <block type="pseudo"><return pos:line="79" pos:column="9">return <expr><literal type="number" pos:line="79" pos:column="16">0<pos:position pos:line="79" pos:column="17"/></literal></expr>;<pos:position pos:line="79" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="81" pos:column="5">/*
     * If one of those character is '.' then its special.  In order
     * for splay tree sorting to work properly, "x-foo.com" must
     * be greater than ".foo.com" even though '-' is less than '.'.
     */</comment>
    <if pos:line="86" pos:column="5">if <condition pos:line="86" pos:column="8">(<expr><literal type="char" pos:line="86" pos:column="9">'.'<pos:position pos:line="86" pos:column="12"/></literal> <operator pos:line="86" pos:column="13">==<pos:position pos:line="86" pos:column="15"/></operator> <name><name pos:line="86" pos:column="16">d<pos:position pos:line="86" pos:column="17"/></name><index pos:line="86" pos:column="17">[<expr><name pos:line="86" pos:column="18">dl<pos:position pos:line="86" pos:column="20"/></name></expr>]<pos:position pos:line="86" pos:column="21"/></index></name></expr>)<pos:position pos:line="86" pos:column="22"/></condition><then pos:line="86" pos:column="22">
        <block type="pseudo"><return pos:line="87" pos:column="9">return <expr><literal type="number" pos:line="87" pos:column="16">1<pos:position pos:line="87" pos:column="17"/></literal></expr>;<pos:position pos:line="87" pos:column="18"/></return></block></then></if>

    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><literal type="char" pos:line="89" pos:column="9">'.'<pos:position pos:line="89" pos:column="12"/></literal> <operator pos:line="89" pos:column="13">==<pos:position pos:line="89" pos:column="15"/></operator> <name><name pos:line="89" pos:column="16">h<pos:position pos:line="89" pos:column="17"/></name><index pos:line="89" pos:column="17">[<expr><name pos:line="89" pos:column="18">hl<pos:position pos:line="89" pos:column="20"/></name></expr>]<pos:position pos:line="89" pos:column="21"/></index></name></expr>)<pos:position pos:line="89" pos:column="22"/></condition><then pos:line="89" pos:column="22">
        <block type="pseudo"><return pos:line="90" pos:column="9">return <expr><operator pos:line="90" pos:column="16">-<pos:position pos:line="90" pos:column="17"/></operator><literal type="number" pos:line="90" pos:column="17">1<pos:position pos:line="90" pos:column="18"/></literal></expr>;<pos:position pos:line="90" pos:column="19"/></return></block></then></if>

    <return pos:line="92" pos:column="5">return <expr><operator pos:line="92" pos:column="12">(<pos:position pos:line="92" pos:column="13"/></operator><call><name pos:line="92" pos:column="13">xtolower<pos:position pos:line="92" pos:column="21"/></name><argument_list pos:line="92" pos:column="21">(<argument><expr><name><name pos:line="92" pos:column="22">h<pos:position pos:line="92" pos:column="23"/></name><index pos:line="92" pos:column="23">[<expr><name pos:line="92" pos:column="24">hl<pos:position pos:line="92" pos:column="26"/></name></expr>]<pos:position pos:line="92" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="28"/></argument_list></call> <operator pos:line="92" pos:column="29">-<pos:position pos:line="92" pos:column="30"/></operator> <call><name pos:line="92" pos:column="31">xtolower<pos:position pos:line="92" pos:column="39"/></name><argument_list pos:line="92" pos:column="39">(<argument><expr><name><name pos:line="92" pos:column="40">d<pos:position pos:line="92" pos:column="41"/></name><index pos:line="92" pos:column="41">[<expr><name pos:line="92" pos:column="42">dl<pos:position pos:line="92" pos:column="44"/></name></expr>]<pos:position pos:line="92" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="92" pos:column="46"/></argument_list></call><operator pos:line="92" pos:column="46">)<pos:position pos:line="92" pos:column="47"/></operator></expr>;<pos:position pos:line="92" pos:column="48"/></return>
}<pos:position pos:line="93" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3939_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CrtdMessage<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">composeBody<pos:position pos:line="1" pos:column="35"/></name></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">CrtdMessage<pos:position pos:line="1" pos:column="47"/></name><operator pos:line="1" pos:column="47">::<pos:position pos:line="1" pos:column="49"/></operator><name pos:line="1" pos:column="49">BodyParams<pos:position pos:line="1" pos:column="59"/></name></name> <specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <modifier pos:line="1" pos:column="66">&amp;<pos:position pos:line="1" pos:column="71"/></modifier></type> <name pos:line="1" pos:column="68">map<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="73">std<pos:position pos:line="1" pos:column="76"/></name><operator pos:line="1" pos:column="76">::<pos:position pos:line="1" pos:column="78"/></operator><name pos:line="1" pos:column="78">string<pos:position pos:line="1" pos:column="84"/></name></name> <specifier pos:line="1" pos:column="85">const<pos:position pos:line="1" pos:column="90"/></specifier> <modifier pos:line="1" pos:column="91">&amp;<pos:position pos:line="1" pos:column="96"/></modifier></type> <name pos:line="1" pos:column="93">other_part<pos:position pos:line="1" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="104"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="3" pos:column="5">body<pos:position pos:line="3" pos:column="9"/></name><operator pos:line="3" pos:column="9">.<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">clear<pos:position pos:line="3" pos:column="15"/></name></name><argument_list pos:line="3" pos:column="15">()<pos:position pos:line="3" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="18"/></expr_stmt>
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">BodyParams<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">::<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">const_iterator<pos:position pos:line="4" pos:column="36"/></name></name></type> <name pos:line="4" pos:column="37">i<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><call><name><name pos:line="4" pos:column="41">map<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">begin<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></init> <condition><expr><name pos:line="4" pos:column="54">i<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">!=<pos:position pos:line="4" pos:column="58"/></operator> <call><name><name pos:line="4" pos:column="59">map<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">.<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="63">end<pos:position pos:line="4" pos:column="66"/></name></name><argument_list pos:line="4" pos:column="66">()<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></condition> <incr><expr><operator pos:line="4" pos:column="70">++<pos:position pos:line="4" pos:column="72"/></operator><name pos:line="4" pos:column="72">i<pos:position pos:line="4" pos:column="73"/></name></expr></incr>)<pos:position pos:line="4" pos:column="74"/></control> <block pos:line="4" pos:column="75">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">!=<pos:position pos:line="5" pos:column="17"/></operator> <call><name><name pos:line="5" pos:column="18">map<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">begin<pos:position pos:line="5" pos:column="27"/></name></name><argument_list pos:line="5" pos:column="27">()<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="13">body<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">+=<pos:position pos:line="6" pos:column="20"/></operator> <literal type="string" pos:line="6" pos:column="21">"\n"<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="7" pos:column="9">body<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">+=<pos:position pos:line="7" pos:column="16"/></operator> <name><name pos:line="7" pos:column="17">i<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">first<pos:position pos:line="7" pos:column="25"/></name></name> <operator pos:line="7" pos:column="26">+<pos:position pos:line="7" pos:column="27"/></operator> <literal type="string" pos:line="7" pos:column="28">"="<pos:position pos:line="7" pos:column="31"/></literal> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <name><name pos:line="7" pos:column="34">i<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">second<pos:position pos:line="7" pos:column="43"/></name></name></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></for>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name><name pos:line="9" pos:column="10">other_part<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">empty<pos:position pos:line="9" pos:column="26"/></name></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">body<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">+=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="char" pos:line="10" pos:column="17">'\n'<pos:position pos:line="10" pos:column="21"/></literal> <operator pos:line="10" pos:column="22">+<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">other_part<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

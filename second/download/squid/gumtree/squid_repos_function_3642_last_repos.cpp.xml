<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3642_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">swanSong<pos:position pos:line="1" pos:column="41"/></name></name><parameter_list pos:line="1" pos:column="41">()<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// kids should sing first and then call the parent method.</comment>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">cs<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">.<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">valid<pos:position pos:line="4" pos:column="17"/></name></name><argument_list pos:line="4" pos:column="17">()<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">93<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="19">6<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">HERE<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;&lt;<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="30">id<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&lt;&lt;<pos:position pos:line="5" pos:column="41"/></operator> <literal type="string" pos:line="5" pos:column="36">" about to notify ConnOpener!"<pos:position pos:line="5" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">CallJobHere<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><literal type="number" pos:line="6" pos:column="21">93<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="25">3<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">cs<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="32">Comm<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">::<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">ConnOpener<pos:position pos:line="6" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="50">noteAbort<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">cs<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">service<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">()<pos:position pos:line="8" pos:column="18"/></argument_list></call><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><call><name pos:line="8" pos:column="19">noteConnectionFailed<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><literal type="string" pos:line="8" pos:column="40">"abort"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">closeConnection<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt> <comment type="line" pos:line="11" pos:column="24">// TODO: rename because we do not always close</comment>

    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">readBuf<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">clear<pos:position pos:line="13" pos:column="18"/></name></name><argument_list pos:line="13" pos:column="18">()<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">tellQueryAborted<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">()<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">maybeLog<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">()<pos:position pos:line="17" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">Adaptation<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">::<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">Initiate<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">::<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">swanSong<pos:position pos:line="19" pos:column="35"/></name></name><argument_list pos:line="19" pos:column="35">()<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

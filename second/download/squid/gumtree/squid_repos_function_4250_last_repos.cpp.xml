<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4250_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLFilledChecklist<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">fd<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list> <specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <specifier pos:line="4" pos:column="11">auto<pos:position pos:line="4" pos:column="15"/></specifier></type> <name pos:line="4" pos:column="16">c<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">conn<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <return pos:line="5" pos:column="5">return <expr><ternary><condition><expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">c<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&amp;&amp;<pos:position pos:line="5" pos:column="25"/></operator> <name><name pos:line="5" pos:column="18">c<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">clientConnection<pos:position pos:line="5" pos:column="37"/></name></name><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator></expr> ?<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40"> <expr><name><name pos:line="5" pos:column="41">c<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">clientConnection<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">-&gt;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="62">fd<pos:position pos:line="5" pos:column="64"/></name></name></expr> <pos:position pos:line="5" pos:column="65"/></then><else pos:line="5" pos:column="65">: <expr><name pos:line="5" pos:column="67">fd_<pos:position pos:line="5" pos:column="70"/></name></expr></else></ternary></expr>;<pos:position pos:line="5" pos:column="71"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

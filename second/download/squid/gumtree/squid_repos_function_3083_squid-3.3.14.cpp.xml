<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3083_squid-3.3.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">cache_key<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name pos:line="2" pos:column="1">storeKeyScan<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">buf<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">unsigned<pos:position pos:line="4" pos:column="20"/></name> <name pos:line="4" pos:column="21">char<pos:position pos:line="4" pos:column="25"/></name></type> <name><name pos:line="4" pos:column="26">digest<pos:position pos:line="4" pos:column="32"/></name><index pos:line="4" pos:column="32">[<expr><name pos:line="4" pos:column="33">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="4" pos:column="56"/></name></expr>]<pos:position pos:line="4" pos:column="57"/></index></name></decl>;<pos:position pos:line="4" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">j<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">t<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><literal type="number" pos:line="7" pos:column="12">3<pos:position pos:line="7" pos:column="13"/></literal></expr>]<pos:position pos:line="7" pos:column="14"/></index></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="21">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="9" pos:column="44"/></name></expr>;<pos:position pos:line="9" pos:column="45"/></condition> <incr><expr><operator pos:line="9" pos:column="46">++<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="48">i<pos:position pos:line="9" pos:column="49"/></name></expr></incr>)<pos:position pos:line="9" pos:column="50"/></control> <block pos:line="9" pos:column="51">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">t<pos:position pos:line="10" pos:column="10"/></name><index pos:line="10" pos:column="10">[<expr><literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>]<pos:position pos:line="10" pos:column="13"/></index></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <operator pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></operator><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">buf<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">+<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">j<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">++<pos:position pos:line="10" pos:column="28"/></operator><operator pos:line="10" pos:column="28">)<pos:position pos:line="10" pos:column="29"/></operator><operator pos:line="10" pos:column="29">)<pos:position pos:line="10" pos:column="30"/></operator></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">t<pos:position pos:line="11" pos:column="10"/></name><index pos:line="11" pos:column="10">[<expr><literal type="number" pos:line="11" pos:column="11">1<pos:position pos:line="11" pos:column="12"/></literal></expr>]<pos:position pos:line="11" pos:column="13"/></index></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">(<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">buf<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">+<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">j<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">++<pos:position pos:line="11" pos:column="28"/></operator><operator pos:line="11" pos:column="28">)<pos:position pos:line="11" pos:column="29"/></operator><operator pos:line="11" pos:column="29">)<pos:position pos:line="11" pos:column="30"/></operator></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">t<pos:position pos:line="12" pos:column="10"/></name><index pos:line="12" pos:column="10">[<expr><literal type="number" pos:line="12" pos:column="11">2<pos:position pos:line="12" pos:column="12"/></literal></expr>]<pos:position pos:line="12" pos:column="13"/></index></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="char" pos:line="12" pos:column="16">'\0'<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">digest<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">+<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">i<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">unsigned<pos:position pos:line="13" pos:column="34"/></name> <name pos:line="13" pos:column="35">char<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">)<pos:position pos:line="13" pos:column="40"/></operator> <call><name pos:line="13" pos:column="41">strtol<pos:position pos:line="13" pos:column="47"/></name><argument_list pos:line="13" pos:column="47">(<argument><expr><name pos:line="13" pos:column="48">t<pos:position pos:line="13" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">NULL<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="57">16<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></for>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">digest<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

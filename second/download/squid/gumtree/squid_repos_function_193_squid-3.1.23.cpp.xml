<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_193_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">ntlm_check_auth<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">ntlm_authenticate<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">auth<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">auth_length<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">pass<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">MAX_PASSWD_LEN<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">+<pos:position pos:line="5" pos:column="30"/></operator><literal type="number" pos:line="5" pos:column="30">1<pos:position pos:line="5" pos:column="31"/></literal></expr>]<pos:position pos:line="5" pos:column="32"/></index></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">domain<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name pos:line="6" pos:column="20">credentials<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">user<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">lstring<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">tmp<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">handle<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{	<comment type="block" pos:line="10" pos:column="33">/*if null we aren't connected, but it shouldn't happen */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debug<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><literal type="string" pos:line="11" pos:column="15">"Weird, we've been disconnected\n"<pos:position pos:line="11" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">ntlm_errno<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">NTLM_NOT_CONNECTED<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/*      debug("fetching domain\n"); */</comment>
    <expr_stmt><expr><name pos:line="17" pos:column="5">tmp<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">ntlm_fetch_string<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><operator pos:line="17" pos:column="29">(<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">char<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">*<pos:position pos:line="17" pos:column="36"/></operator><operator pos:line="17" pos:column="36">)<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="38">auth<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="44">auth_length<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="57">&amp;<pos:position pos:line="17" pos:column="62"/></operator><name><name pos:line="17" pos:column="58">auth<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">domain<pos:position pos:line="17" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">tmp<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">str<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">==<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">NULL<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">||<pos:position pos:line="18" pos:column="27"/></operator> <name><name pos:line="18" pos:column="28">tmp<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">l<pos:position pos:line="18" pos:column="33"/></name></name> <operator pos:line="18" pos:column="34">==<pos:position pos:line="18" pos:column="36"/></operator> <literal type="number" pos:line="18" pos:column="37">0<pos:position pos:line="18" pos:column="38"/></literal></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39"> <block pos:line="18" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debug<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">(<argument><expr><literal type="string" pos:line="19" pos:column="15">"No domain supplied. Returning no-auth\n"<pos:position pos:line="19" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">ntlm_errno<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">NTLM_LOGON_ERROR<pos:position pos:line="20" pos:column="38"/></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">tmp<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">l<pos:position pos:line="23" pos:column="14"/></name></name> <operator pos:line="23" pos:column="15">&gt;<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="17">MAX_DOMAIN_LEN<pos:position pos:line="23" pos:column="31"/></name></expr>)<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> <block pos:line="23" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debug<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><literal type="string" pos:line="24" pos:column="15">"Domain string exceeds %d bytes, rejecting\n"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="62">MAX_DOMAIN_LEN<pos:position pos:line="24" pos:column="76"/></name></expr></argument>)<pos:position pos:line="24" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">ntlm_errno<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">NTLM_LOGON_ERROR<pos:position pos:line="25" pos:column="38"/></name></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">memcpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">domain<pos:position pos:line="28" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="20">tmp<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">str<pos:position pos:line="28" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="29">tmp<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">l<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">user<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name pos:line="29" pos:column="12">domain<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">+<pos:position pos:line="29" pos:column="20"/></operator> <name><name pos:line="29" pos:column="21">tmp<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">l<pos:position pos:line="29" pos:column="26"/></name></name></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="30" pos:column="5">*<pos:position pos:line="30" pos:column="6"/></operator><name pos:line="30" pos:column="6">user<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">++<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <literal type="char" pos:line="30" pos:column="15">'\0'<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>

    <comment type="block" pos:line="32" pos:column="5">/*      debug("fetching user name\n"); */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">tmp<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">ntlm_fetch_string<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">char<pos:position pos:line="33" pos:column="34"/></name> <operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><operator pos:line="33" pos:column="36">)<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="38">auth<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">auth_length<pos:position pos:line="33" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="57">&amp;<pos:position pos:line="33" pos:column="62"/></operator><name><name pos:line="33" pos:column="58">auth<pos:position pos:line="33" pos:column="62"/></name><operator pos:line="33" pos:column="62">-&gt;<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="64">user<pos:position pos:line="33" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="70"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">tmp<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">.<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">str<pos:position pos:line="34" pos:column="16"/></name></name> <operator pos:line="34" pos:column="17">==<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">NULL<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">||<pos:position pos:line="34" pos:column="27"/></operator> <name><name pos:line="34" pos:column="28">tmp<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">l<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">==<pos:position pos:line="34" pos:column="36"/></operator> <literal type="number" pos:line="34" pos:column="37">0<pos:position pos:line="34" pos:column="38"/></literal></expr>)<pos:position pos:line="34" pos:column="39"/></condition><then pos:line="34" pos:column="39"> <block pos:line="34" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debug<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><literal type="string" pos:line="35" pos:column="15">"No username supplied. Returning no-auth\n"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">ntlm_errno<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">NTLM_LOGON_ERROR<pos:position pos:line="36" pos:column="38"/></name></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">NULL<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">tmp<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">.<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">l<pos:position pos:line="39" pos:column="14"/></name></name> <operator pos:line="39" pos:column="15">&gt;<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="17">MAX_USERNAME_LEN<pos:position pos:line="39" pos:column="33"/></name></expr>)<pos:position pos:line="39" pos:column="34"/></condition><then pos:line="39" pos:column="34"> <block pos:line="39" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debug<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"Username string exceeds %d bytes, rejecting\n"<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="64">MAX_USERNAME_LEN<pos:position pos:line="40" pos:column="80"/></name></expr></argument>)<pos:position pos:line="40" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><name pos:line="41" pos:column="9">ntlm_errno<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">NTLM_LOGON_ERROR<pos:position pos:line="41" pos:column="38"/></name></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">NULL<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">memcpy<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">user<pos:position pos:line="44" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="18">tmp<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">.<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">str<pos:position pos:line="44" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="27">tmp<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">.<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">l<pos:position pos:line="44" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="45" pos:column="5">*<pos:position pos:line="45" pos:column="6"/></operator><operator pos:line="45" pos:column="6">(<pos:position pos:line="45" pos:column="7"/></operator><name pos:line="45" pos:column="7">user<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">+<pos:position pos:line="45" pos:column="13"/></operator> <name><name pos:line="45" pos:column="14">tmp<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">l<pos:position pos:line="45" pos:column="19"/></name></name><operator pos:line="45" pos:column="19">)<pos:position pos:line="45" pos:column="20"/></operator> <operator pos:line="45" pos:column="21">=<pos:position pos:line="45" pos:column="22"/></operator> <literal type="char" pos:line="45" pos:column="23">'\0'<pos:position pos:line="45" pos:column="27"/></literal></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>


    <comment type="block" pos:line="48" pos:column="5">/* Authenticating against the NT response doesn't seem to work... */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">tmp<pos:position pos:line="49" pos:column="8"/></name> <operator pos:line="49" pos:column="9">=<pos:position pos:line="49" pos:column="10"/></operator> <call><name pos:line="49" pos:column="11">ntlm_fetch_string<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><operator pos:line="49" pos:column="29">(<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">char<pos:position pos:line="49" pos:column="34"/></name> <operator pos:line="49" pos:column="35">*<pos:position pos:line="49" pos:column="36"/></operator><operator pos:line="49" pos:column="36">)<pos:position pos:line="49" pos:column="37"/></operator> <name pos:line="49" pos:column="38">auth<pos:position pos:line="49" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="44">auth_length<pos:position pos:line="49" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="57">&amp;<pos:position pos:line="49" pos:column="62"/></operator><name><name pos:line="49" pos:column="58">auth<pos:position pos:line="49" pos:column="62"/></name><operator pos:line="49" pos:column="62">-&gt;<pos:position pos:line="49" pos:column="67"/></operator><name pos:line="49" pos:column="64">lmresponse<pos:position pos:line="49" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="76"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name><name pos:line="50" pos:column="9">tmp<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">.<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">str<pos:position pos:line="50" pos:column="16"/></name></name> <operator pos:line="50" pos:column="17">==<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">||<pos:position pos:line="50" pos:column="27"/></operator> <name><name pos:line="50" pos:column="28">tmp<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">.<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">l<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">==<pos:position pos:line="50" pos:column="36"/></operator> <literal type="number" pos:line="50" pos:column="37">0<pos:position pos:line="50" pos:column="38"/></literal></expr>)<pos:position pos:line="50" pos:column="39"/></condition><then pos:line="50" pos:column="39"> <block pos:line="50" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">fprintf<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">stderr<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="25">"No auth at all. Returning no-auth\n"<pos:position pos:line="51" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">ntlm_errno<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">=<pos:position pos:line="52" pos:column="21"/></operator> <name pos:line="52" pos:column="22">NTLM_LOGON_ERROR<pos:position pos:line="52" pos:column="38"/></name></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt>
        <return pos:line="53" pos:column="9">return <expr><name pos:line="53" pos:column="16">NULL<pos:position pos:line="53" pos:column="20"/></name></expr>;<pos:position pos:line="53" pos:column="21"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">tmp<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">l<pos:position pos:line="55" pos:column="14"/></name></name> <operator pos:line="55" pos:column="15">&gt;<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="17">MAX_PASSWD_LEN<pos:position pos:line="55" pos:column="31"/></name></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32"> <block pos:line="55" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">debug<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"Password string exceeds %d bytes, rejecting\n"<pos:position pos:line="56" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="64">MAX_PASSWD_LEN<pos:position pos:line="56" pos:column="78"/></name></expr></argument>)<pos:position pos:line="56" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">ntlm_errno<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="22">NTLM_LOGON_ERROR<pos:position pos:line="57" pos:column="38"/></name></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">NULL<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">memcpy<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><name pos:line="61" pos:column="12">pass<pos:position pos:line="61" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="18">tmp<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">.<pos:position pos:line="61" pos:column="22"/></operator><name pos:line="61" pos:column="22">str<pos:position pos:line="61" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="27">tmp<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">.<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="31">l<pos:position pos:line="61" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">pass<pos:position pos:line="62" pos:column="9"/></name><index pos:line="62" pos:column="9">[<expr><call><name pos:line="62" pos:column="10">min<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">MAX_PASSWD_LEN<pos:position pos:line="62" pos:column="28"/></name></expr></argument>,<argument><expr><name><name pos:line="62" pos:column="29">tmp<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">.<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="33">l<pos:position pos:line="62" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="35"/></argument_list></call></expr>]<pos:position pos:line="62" pos:column="36"/></index></name> <operator pos:line="62" pos:column="37">=<pos:position pos:line="62" pos:column="38"/></operator> <literal type="char" pos:line="62" pos:column="39">'\0'<pos:position pos:line="62" pos:column="43"/></literal></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>

<cpp:if pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">if<pos:position pos:line="64" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="64" pos:column="5">1<pos:position pos:line="64" pos:column="6"/></literal></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">debug<pos:position pos:line="65" pos:column="10"/></name> <argument_list pos:line="65" pos:column="11">(<argument><expr><literal type="string" pos:line="65" pos:column="12">"Empty LM pass detection: user: '%s', ours:'%s', his: '%s'"<pos:position pos:line="65" pos:column="71"/></literal>
           <literal type="string" pos:line="66" pos:column="12">"(length: %d)\n"<pos:position pos:line="66" pos:column="28"/></literal></expr></argument>,
           <argument><expr><name pos:line="67" pos:column="12">user<pos:position pos:line="67" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="67" pos:column="17">lmencoded_empty_pass<pos:position pos:line="67" pos:column="37"/></name></expr></argument>,<argument><expr><name><name pos:line="67" pos:column="38">tmp<pos:position pos:line="67" pos:column="41"/></name><operator pos:line="67" pos:column="41">.<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">str<pos:position pos:line="67" pos:column="45"/></name></name></expr></argument>,<argument><expr><name><name pos:line="67" pos:column="46">tmp<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">.<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="50">l<pos:position pos:line="67" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><call><name pos:line="68" pos:column="9">memcmp<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><name><name pos:line="68" pos:column="16">tmp<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">.<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">str<pos:position pos:line="68" pos:column="23"/></name></name></expr></argument>,<argument><expr><name pos:line="68" pos:column="24">lmencoded_empty_pass<pos:position pos:line="68" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="68" pos:column="45">ENCODED_PASS_LEN<pos:position pos:line="68" pos:column="61"/></name></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call><operator pos:line="68" pos:column="62">==<pos:position pos:line="68" pos:column="64"/></operator><literal type="number" pos:line="68" pos:column="64">0<pos:position pos:line="68" pos:column="65"/></literal></expr>)<pos:position pos:line="68" pos:column="66"/></condition><then pos:line="68" pos:column="66"> <block pos:line="68" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">fprintf<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">stderr<pos:position pos:line="69" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="69" pos:column="24">"Empty LM password supplied for user %s\\%s. "<pos:position pos:line="69" pos:column="70"/></literal>
                <literal type="string" pos:line="70" pos:column="17">"No-auth\n"<pos:position pos:line="70" pos:column="28"/></literal></expr></argument>,<argument><expr><name pos:line="70" pos:column="29">domain<pos:position pos:line="70" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="70" pos:column="36">user<pos:position pos:line="70" pos:column="40"/></name></expr></argument>)<pos:position pos:line="70" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="71" pos:column="9">ntlm_errno<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">=<pos:position pos:line="71" pos:column="20"/></operator><name pos:line="71" pos:column="20">NTLM_LOGON_ERROR<pos:position pos:line="71" pos:column="36"/></name></expr>;<pos:position pos:line="71" pos:column="37"/></expr_stmt>
        <return pos:line="72" pos:column="9">return <expr><name pos:line="72" pos:column="16">NULL<pos:position pos:line="72" pos:column="20"/></name></expr>;<pos:position pos:line="72" pos:column="21"/></return>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="75" pos:column="5">tmp<pos:position pos:line="75" pos:column="8"/></name> <operator pos:line="75" pos:column="9">=<pos:position pos:line="75" pos:column="10"/></operator> <call><name pos:line="75" pos:column="11">ntlm_fetch_string<pos:position pos:line="75" pos:column="28"/></name> <argument_list pos:line="75" pos:column="29">(<argument><expr><operator pos:line="75" pos:column="30">(<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="31">char<pos:position pos:line="75" pos:column="35"/></name> <operator pos:line="75" pos:column="36">*<pos:position pos:line="75" pos:column="37"/></operator><operator pos:line="75" pos:column="37">)<pos:position pos:line="75" pos:column="38"/></operator> <name pos:line="75" pos:column="39">auth<pos:position pos:line="75" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">auth_length<pos:position pos:line="75" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="58">&amp;<pos:position pos:line="75" pos:column="63"/></operator><name><name pos:line="75" pos:column="59">auth<pos:position pos:line="75" pos:column="63"/></name><operator pos:line="75" pos:column="63">-&gt;<pos:position pos:line="75" pos:column="68"/></operator><name pos:line="75" pos:column="65">ntresponse<pos:position pos:line="75" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="77"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">tmp<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">.<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="13">str<pos:position pos:line="76" pos:column="16"/></name></name> <operator pos:line="76" pos:column="17">!=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">NULL<pos:position pos:line="76" pos:column="24"/></name> <operator pos:line="76" pos:column="25">&amp;&amp;<pos:position pos:line="76" pos:column="35"/></operator> <name><name pos:line="76" pos:column="28">tmp<pos:position pos:line="76" pos:column="31"/></name><operator pos:line="76" pos:column="31">.<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="32">l<pos:position pos:line="76" pos:column="33"/></name></name> <operator pos:line="76" pos:column="34">!=<pos:position pos:line="76" pos:column="36"/></operator> <literal type="number" pos:line="76" pos:column="37">0<pos:position pos:line="76" pos:column="38"/></literal></expr>)<pos:position pos:line="76" pos:column="39"/></condition><then pos:line="76" pos:column="39"> <block pos:line="76" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">debug<pos:position pos:line="77" pos:column="14"/></name> <argument_list pos:line="77" pos:column="15">(<argument><expr><literal type="string" pos:line="77" pos:column="16">"Empty NT pass detection: user: '%s', ours:'%s', his: '%s'"<pos:position pos:line="77" pos:column="75"/></literal>
               <literal type="string" pos:line="78" pos:column="16">"(length: %d)\n"<pos:position pos:line="78" pos:column="32"/></literal></expr></argument>,
               <argument><expr><name pos:line="79" pos:column="16">user<pos:position pos:line="79" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="21">ntencoded_empty_pass<pos:position pos:line="79" pos:column="41"/></name></expr></argument>,<argument><expr><name><name pos:line="79" pos:column="42">tmp<pos:position pos:line="79" pos:column="45"/></name><operator pos:line="79" pos:column="45">.<pos:position pos:line="79" pos:column="46"/></operator><name pos:line="79" pos:column="46">str<pos:position pos:line="79" pos:column="49"/></name></name></expr></argument>,<argument><expr><name><name pos:line="79" pos:column="50">tmp<pos:position pos:line="79" pos:column="53"/></name><operator pos:line="79" pos:column="53">.<pos:position pos:line="79" pos:column="54"/></operator><name pos:line="79" pos:column="54">l<pos:position pos:line="79" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="57"/></expr_stmt>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><call><name pos:line="80" pos:column="13">memcmp<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><name><name pos:line="80" pos:column="20">tmp<pos:position pos:line="80" pos:column="23"/></name><operator pos:line="80" pos:column="23">.<pos:position pos:line="80" pos:column="24"/></operator><name pos:line="80" pos:column="24">str<pos:position pos:line="80" pos:column="27"/></name></name></expr></argument>,<argument><expr><name pos:line="80" pos:column="28">lmencoded_empty_pass<pos:position pos:line="80" pos:column="48"/></name></expr></argument>,<argument><expr><name pos:line="80" pos:column="49">ENCODED_PASS_LEN<pos:position pos:line="80" pos:column="65"/></name></expr></argument>)<pos:position pos:line="80" pos:column="66"/></argument_list></call><operator pos:line="80" pos:column="66">==<pos:position pos:line="80" pos:column="68"/></operator><literal type="number" pos:line="80" pos:column="68">0<pos:position pos:line="80" pos:column="69"/></literal></expr>)<pos:position pos:line="80" pos:column="70"/></condition><then pos:line="80" pos:column="70"> <block pos:line="80" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="81" pos:column="13">fprintf<pos:position pos:line="81" pos:column="20"/></name><argument_list pos:line="81" pos:column="20">(<argument><expr><name pos:line="81" pos:column="21">stderr<pos:position pos:line="81" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="81" pos:column="28">"Empty NT password supplied for user %s\\%s. "<pos:position pos:line="81" pos:column="74"/></literal>
                    <literal type="string" pos:line="82" pos:column="21">"No-auth\n"<pos:position pos:line="82" pos:column="32"/></literal></expr></argument>,<argument><expr><name pos:line="82" pos:column="33">domain<pos:position pos:line="82" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="82" pos:column="40">user<pos:position pos:line="82" pos:column="44"/></name></expr></argument>)<pos:position pos:line="82" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name pos:line="83" pos:column="13">ntlm_errno<pos:position pos:line="83" pos:column="23"/></name><operator pos:line="83" pos:column="23">=<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="24">NTLM_LOGON_ERROR<pos:position pos:line="83" pos:column="40"/></name></expr>;<pos:position pos:line="83" pos:column="41"/></expr_stmt>
            <return pos:line="84" pos:column="13">return <expr><name pos:line="84" pos:column="20">NULL<pos:position pos:line="84" pos:column="24"/></name></expr>;<pos:position pos:line="84" pos:column="25"/></return>
        }<pos:position pos:line="85" pos:column="10"/></block></then></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>
<cpp:endif pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">endif<pos:position pos:line="87" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="89" pos:column="5">/* TODO: check against empty password!!!!! */</comment>



    <expr_stmt><expr><call><name pos:line="93" pos:column="5">debug<pos:position pos:line="93" pos:column="10"/></name><argument_list pos:line="93" pos:column="10">(<argument><expr><literal type="string" pos:line="93" pos:column="11">"checking domain: '%s', user: '%s', pass='%s'\n"<pos:position pos:line="93" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="61">domain<pos:position pos:line="93" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="69">user<pos:position pos:line="93" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="75">pass<pos:position pos:line="93" pos:column="79"/></name></expr></argument>)<pos:position pos:line="93" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><name pos:line="95" pos:column="5">rv<pos:position pos:line="95" pos:column="7"/></name> <operator pos:line="95" pos:column="8">=<pos:position pos:line="95" pos:column="9"/></operator> <call><name pos:line="95" pos:column="10">SMB_Logon_Server<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">handle<pos:position pos:line="95" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="35">user<pos:position pos:line="95" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="41">pass<pos:position pos:line="95" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="47">domain<pos:position pos:line="95" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="55">1<pos:position pos:line="95" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">debug<pos:position pos:line="96" pos:column="10"/></name><argument_list pos:line="96" pos:column="10">(<argument><expr><literal type="string" pos:line="96" pos:column="11">"Login attempt had result %d\n"<pos:position pos:line="96" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="96" pos:column="44">rv<pos:position pos:line="96" pos:column="46"/></name></expr></argument>)<pos:position pos:line="96" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="48"/></expr_stmt>

    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><name pos:line="98" pos:column="9">rv<pos:position pos:line="98" pos:column="11"/></name> <operator pos:line="98" pos:column="12">!=<pos:position pos:line="98" pos:column="14"/></operator> <name pos:line="98" pos:column="15">NTV_NO_ERROR<pos:position pos:line="98" pos:column="27"/></name></expr>)<pos:position pos:line="98" pos:column="28"/></condition><then pos:line="98" pos:column="28"> <block pos:line="98" pos:column="29">{	<comment type="block" pos:line="98" pos:column="33">/* failed */</comment>
        <expr_stmt><expr><name pos:line="99" pos:column="9">ntlm_errno<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">=<pos:position pos:line="99" pos:column="21"/></operator> <name pos:line="99" pos:column="22">rv<pos:position pos:line="99" pos:column="24"/></name></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>
        <return pos:line="100" pos:column="9">return <expr><name pos:line="100" pos:column="16">NULL<pos:position pos:line="100" pos:column="20"/></name></expr>;<pos:position pos:line="100" pos:column="21"/></return>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="102" pos:column="5">*<pos:position pos:line="102" pos:column="6"/></operator><operator pos:line="102" pos:column="6">(<pos:position pos:line="102" pos:column="7"/></operator><name pos:line="102" pos:column="7">user<pos:position pos:line="102" pos:column="11"/></name> <operator pos:line="102" pos:column="12">-<pos:position pos:line="102" pos:column="13"/></operator> <literal type="number" pos:line="102" pos:column="14">1<pos:position pos:line="102" pos:column="15"/></literal><operator pos:line="102" pos:column="15">)<pos:position pos:line="102" pos:column="16"/></operator> <operator pos:line="102" pos:column="17">=<pos:position pos:line="102" pos:column="18"/></operator> <literal type="char" pos:line="102" pos:column="19">'\\'<pos:position pos:line="102" pos:column="23"/></literal></expr>;<pos:position pos:line="102" pos:column="24"/></expr_stmt>		<comment type="block" pos:line="102" pos:column="33">/* hack. Performing, but ugly. */</comment>

    <expr_stmt><expr><call><name pos:line="104" pos:column="5">debug<pos:position pos:line="104" pos:column="10"/></name><argument_list pos:line="104" pos:column="10">(<argument><expr><literal type="string" pos:line="104" pos:column="11">"credentials: %s\n"<pos:position pos:line="104" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="32">credentials<pos:position pos:line="104" pos:column="43"/></name></expr></argument>)<pos:position pos:line="104" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>
    <return pos:line="105" pos:column="5">return <expr><name pos:line="105" pos:column="12">credentials<pos:position pos:line="105" pos:column="23"/></name></expr>;<pos:position pos:line="105" pos:column="24"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

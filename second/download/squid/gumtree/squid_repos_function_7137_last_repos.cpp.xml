<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7137_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreMap<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">freeChainAt<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">SliceId<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">sliceId<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">SliceId<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">splicingPoint<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="73"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">uint64_t<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">ChainId<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt> <comment type="line" pos:line="4" pos:column="34">// to pair freeing/freed calls in debugs()</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">uint64_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">chainId<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">++<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">ChainId<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">54<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">7<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"freeing chain #"<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">&lt;&lt;<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="40">chainId<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">&lt;&lt;<pos:position pos:line="6" pos:column="56"/></operator> <literal type="string" pos:line="6" pos:column="51">" starting at "<pos:position pos:line="6" pos:column="66"/></literal> <operator pos:line="6" pos:column="67">&lt;&lt;<pos:position pos:line="6" pos:column="75"/></operator> <name pos:line="6" pos:column="70">sliceId<pos:position pos:line="6" pos:column="77"/></name> <operator pos:line="6" pos:column="78">&lt;&lt;<pos:position pos:line="6" pos:column="86"/></operator> <literal type="string" pos:line="6" pos:column="81">" in "<pos:position pos:line="6" pos:column="87"/></literal> <operator pos:line="6" pos:column="88">&lt;&lt;<pos:position pos:line="6" pos:column="96"/></operator> <name pos:line="6" pos:column="91">path<pos:position pos:line="6" pos:column="95"/></name></expr></argument>)<pos:position pos:line="6" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="97"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">sliceId<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">&gt;=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="number" pos:line="7" pos:column="23">0<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition> <block pos:line="7" pos:column="26">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">Slice<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">&amp;<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="16">slice<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><call><name pos:line="8" pos:column="24">sliceAt<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">sliceId<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">SliceId<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">nextId<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">slice<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">next<pos:position pos:line="9" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">slice<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">size<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">slice<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">next<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator><literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">cleaner<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="13">cleaner<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">noteFreeMapSlice<pos:position pos:line="13" pos:column="38"/></name></name><argument_list pos:line="13" pos:column="38">(<argument><expr><name pos:line="13" pos:column="39">sliceId<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt></block></then></if> <comment type="line" pos:line="13" pos:column="49">// might change slice state</comment>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">sliceId<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">==<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">splicingPoint<pos:position pos:line="14" pos:column="37"/></name></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">54<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="24">5<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="27">"preserving chain #"<pos:position pos:line="15" pos:column="47"/></literal> <operator pos:line="15" pos:column="48">&lt;&lt;<pos:position pos:line="15" pos:column="56"/></operator> <name pos:line="15" pos:column="51">chainId<pos:position pos:line="15" pos:column="58"/></name> <operator pos:line="15" pos:column="59">&lt;&lt;<pos:position pos:line="15" pos:column="67"/></operator> <literal type="string" pos:line="15" pos:column="62">" in "<pos:position pos:line="15" pos:column="68"/></literal> <operator pos:line="15" pos:column="69">&lt;&lt;<pos:position pos:line="15" pos:column="77"/></operator> <name pos:line="15" pos:column="72">path<pos:position pos:line="15" pos:column="76"/></name> <operator pos:line="15" pos:column="77">&lt;&lt;<pos:position pos:line="15" pos:column="85"/></operator>
                   <literal type="string" pos:line="16" pos:column="20">" suffix after slice "<pos:position pos:line="16" pos:column="42"/></literal> <operator pos:line="16" pos:column="43">&lt;&lt;<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="46">splicingPoint<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break> <comment type="line" pos:line="17" pos:column="20">// do not free the rest of the chain</comment>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="19" pos:column="9">sliceId<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">nextId<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">54<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">7<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="19">"freed chain #"<pos:position pos:line="21" pos:column="34"/></literal> <operator pos:line="21" pos:column="35">&lt;&lt;<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="38">chainId<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">&lt;&lt;<pos:position pos:line="21" pos:column="54"/></operator> <literal type="string" pos:line="21" pos:column="49">" in "<pos:position pos:line="21" pos:column="55"/></literal> <operator pos:line="21" pos:column="56">&lt;&lt;<pos:position pos:line="21" pos:column="64"/></operator> <name pos:line="21" pos:column="59">path<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

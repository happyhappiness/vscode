<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7335_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">hash_remove_link<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">hash_table<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">hid<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">hash_link<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type> <name pos:line="2" pos:column="48">hl<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">hl<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">!=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><call><name><name pos:line="5" pos:column="13">hid<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">hash<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name><name pos:line="5" pos:column="23">hl<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">key<pos:position pos:line="5" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="32">hid<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">size<pos:position pos:line="5" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">hash_link<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier><modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">P<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><operator pos:line="6" pos:column="26">&amp;<pos:position pos:line="6" pos:column="31"/></operator><name><name pos:line="6" pos:column="27">hid<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">buckets<pos:position pos:line="6" pos:column="39"/></name><index pos:line="6" pos:column="39">[<expr><name pos:line="6" pos:column="40">i<pos:position pos:line="6" pos:column="41"/></name></expr>]<pos:position pos:line="6" pos:column="42"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="43"/></init> <condition><expr><operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">P<pos:position pos:line="6" pos:column="46"/></name></expr>;<pos:position pos:line="6" pos:column="47"/></condition> <incr><expr><name pos:line="6" pos:column="48">P<pos:position pos:line="6" pos:column="49"/></name> <operator pos:line="6" pos:column="50">=<pos:position pos:line="6" pos:column="51"/></operator> <operator pos:line="6" pos:column="52">&amp;<pos:position pos:line="6" pos:column="57"/></operator><name><operator pos:line="6" pos:column="53">(<pos:position pos:line="6" pos:column="54"/></operator><operator pos:line="6" pos:column="54">*<pos:position pos:line="6" pos:column="55"/></operator><name pos:line="6" pos:column="55">P<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">)<pos:position pos:line="6" pos:column="57"/></operator><operator pos:line="6" pos:column="57">-&gt;<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="59">next<pos:position pos:line="6" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="64"/></control> <block pos:line="6" pos:column="65">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">P<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">!=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">hl<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22">
            <block type="pseudo"><continue pos:line="8" pos:column="13">continue;<pos:position pos:line="8" pos:column="22"/></continue></block></then></if>
        <expr_stmt><expr><operator pos:line="9" pos:column="9">*<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">P<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name><name pos:line="9" pos:column="14">hl<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">next<pos:position pos:line="9" pos:column="22"/></name></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">hid<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">next<pos:position pos:line="10" pos:column="22"/></name></name> <operator pos:line="10" pos:column="23">==<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">hl<pos:position pos:line="10" pos:column="28"/></name></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">hid<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">next<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name><name pos:line="11" pos:column="25">hl<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">next<pos:position pos:line="11" pos:column="33"/></name></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <name><name pos:line="12" pos:column="25">hid<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">next<pos:position pos:line="12" pos:column="34"/></name></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">hash_next_bucket<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">hid<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt></block></then></if>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">--<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">hid<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">count<pos:position pos:line="15" pos:column="21"/></name></name></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="15"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

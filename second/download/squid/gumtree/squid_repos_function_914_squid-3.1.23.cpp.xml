<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_914_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">comm_listen<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">sock<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">x<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">x<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">listen<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">(<argument><expr><name pos:line="6" pos:column="21">sock<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">Squid_MaxFD<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">&gt;&gt;<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="42">2<pos:position pos:line="6" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="44"/></argument_list></call><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator> <operator pos:line="6" pos:column="46">&lt;<pos:position pos:line="6" pos:column="50"/></operator> <literal type="number" pos:line="6" pos:column="48">0<pos:position pos:line="6" pos:column="49"/></literal></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50"> <block pos:line="6" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">50<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"comm_listen: listen("<pos:position pos:line="7" pos:column="45"/></literal> <operator pos:line="7" pos:column="46">&lt;&lt;<pos:position pos:line="7" pos:column="54"/></operator> <operator pos:line="7" pos:column="49">(<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">Squid_MaxFD<pos:position pos:line="7" pos:column="61"/></name> <operator pos:line="7" pos:column="62">&gt;&gt;<pos:position pos:line="7" pos:column="67"/></operator> <literal type="number" pos:line="7" pos:column="65">2<pos:position pos:line="7" pos:column="66"/></literal><operator pos:line="7" pos:column="66">)<pos:position pos:line="7" pos:column="67"/></operator> <operator pos:line="7" pos:column="68">&lt;&lt;<pos:position pos:line="7" pos:column="76"/></operator> <literal type="string" pos:line="7" pos:column="71">", "<pos:position pos:line="7" pos:column="75"/></literal> <operator pos:line="7" pos:column="76">&lt;&lt;<pos:position pos:line="7" pos:column="84"/></operator> <name pos:line="7" pos:column="79">sock<pos:position pos:line="7" pos:column="83"/></name> <operator pos:line="7" pos:column="84">&lt;&lt;<pos:position pos:line="7" pos:column="92"/></operator> <literal type="string" pos:line="7" pos:column="87">"): "<pos:position pos:line="7" pos:column="92"/></literal> <operator pos:line="7" pos:column="93">&lt;&lt;<pos:position pos:line="7" pos:column="101"/></operator> <call><name pos:line="7" pos:column="96">xstrerror<pos:position pos:line="7" pos:column="105"/></name><argument_list pos:line="7" pos:column="105">()<pos:position pos:line="7" pos:column="107"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="109"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">x<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">Config<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">accept_filter<pos:position pos:line="11" pos:column="29"/></name></name> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <call><name pos:line="11" pos:column="33">strcmp<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name><name pos:line="11" pos:column="40">Config<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">accept_filter<pos:position pos:line="11" pos:column="60"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="62">"none"<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call> <operator pos:line="11" pos:column="70">!=<pos:position pos:line="11" pos:column="72"/></operator> <literal type="number" pos:line="11" pos:column="73">0<pos:position pos:line="11" pos:column="74"/></literal></expr>)<pos:position pos:line="11" pos:column="75"/></condition><then pos:line="11" pos:column="75"> <block pos:line="11" pos:column="76">{
<cpp:ifdef pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">ifdef<pos:position pos:line="12" pos:column="7"/></cpp:directive> <name pos:line="12" pos:column="8">SO_ACCEPTFILTER<pos:position pos:line="12" pos:column="23"/></name></cpp:ifdef>
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">accept_filter_arg<pos:position pos:line="13" pos:column="33"/></name></name></type> <name pos:line="13" pos:column="34">afa<pos:position pos:line="13" pos:column="37"/></name></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">bzero<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><operator pos:line="14" pos:column="15">&amp;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="16">afa<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="21">sizeof<argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">afa<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">5<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">DBG_CRITICAL<pos:position pos:line="15" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="33">"Installing accept filter '"<pos:position pos:line="15" pos:column="61"/></literal> <operator pos:line="15" pos:column="62">&lt;&lt;<pos:position pos:line="15" pos:column="70"/></operator> <name><name pos:line="15" pos:column="65">Config<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">.<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="72">accept_filter<pos:position pos:line="15" pos:column="85"/></name></name> <operator pos:line="15" pos:column="86">&lt;&lt;<pos:position pos:line="15" pos:column="94"/></operator> <literal type="string" pos:line="15" pos:column="89">"' on FD "<pos:position pos:line="15" pos:column="99"/></literal> <operator pos:line="15" pos:column="100">&lt;&lt;<pos:position pos:line="15" pos:column="108"/></operator> <name pos:line="15" pos:column="103">sock<pos:position pos:line="15" pos:column="107"/></name></expr></argument>)<pos:position pos:line="15" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="109"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">xstrncpy<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name><name pos:line="16" pos:column="18">afa<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">af_name<pos:position pos:line="16" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="31">Config<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">accept_filter<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="53">sizeof<argument_list pos:line="16" pos:column="59">(<argument><expr><name><name pos:line="16" pos:column="60">afa<pos:position pos:line="16" pos:column="63"/></name><operator pos:line="16" pos:column="63">.<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">af_name<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">x<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">setsockopt<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">sock<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">SOL_SOCKET<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">SO_ACCEPTFILTER<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="59">&amp;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="60">afa<pos:position pos:line="17" pos:column="63"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="65">sizeof<argument_list pos:line="17" pos:column="71">(<argument><expr><name pos:line="17" pos:column="72">afa<pos:position pos:line="17" pos:column="75"/></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="78"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">x<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">&lt;<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="13">debugs<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="number" pos:line="19" pos:column="20">5<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"SO_ACCEPTFILTER '"<pos:position pos:line="19" pos:column="45"/></literal> <operator pos:line="19" pos:column="46">&lt;&lt;<pos:position pos:line="19" pos:column="54"/></operator> <name><name pos:line="19" pos:column="49">Config<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">.<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">accept_filter<pos:position pos:line="19" pos:column="69"/></name></name> <operator pos:line="19" pos:column="70">&lt;&lt;<pos:position pos:line="19" pos:column="78"/></operator> <literal type="string" pos:line="19" pos:column="73">"': '"<pos:position pos:line="19" pos:column="79"/></literal> <operator pos:line="19" pos:column="80">&lt;&lt;<pos:position pos:line="19" pos:column="88"/></operator> <call><name pos:line="19" pos:column="83">xstrerror<pos:position pos:line="19" pos:column="92"/></name><argument_list pos:line="19" pos:column="92">()<pos:position pos:line="19" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="96"/></expr_stmt></block></then></if>
<cpp:elif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">elif<pos:position pos:line="20" pos:column="6"/></cpp:directive> <expr><call><name pos:line="20" pos:column="7">defined<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">TCP_DEFER_ACCEPT<pos:position pos:line="20" pos:column="31"/></name></expr></argument>)<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr></cpp:elif>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">seconds<pos:position pos:line="21" pos:column="20"/></name> <init pos:line="21" pos:column="21">= <expr><literal type="number" pos:line="21" pos:column="23">30<pos:position pos:line="21" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">strncmp<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">Config<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">accept_filter<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="43">"data="<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="52">5<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call> <operator pos:line="22" pos:column="55">==<pos:position pos:line="22" pos:column="57"/></operator> <literal type="number" pos:line="22" pos:column="58">0<pos:position pos:line="22" pos:column="59"/></literal></expr>)<pos:position pos:line="22" pos:column="60"/></condition><then pos:line="22" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">seconds<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">atoi<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">Config<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">accept_filter<pos:position pos:line="23" pos:column="48"/></name></name> <operator pos:line="23" pos:column="49">+<pos:position pos:line="23" pos:column="50"/></operator> <literal type="number" pos:line="23" pos:column="51">5<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="24" pos:column="9">x<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">setsockopt<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">sock<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">IPPROTO_TCP<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">TCP_DEFER_ACCEPT<pos:position pos:line="24" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="61">&amp;<pos:position pos:line="24" pos:column="66"/></operator><name pos:line="24" pos:column="62">seconds<pos:position pos:line="24" pos:column="69"/></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="71">sizeof<argument_list pos:line="24" pos:column="77">(<argument><expr><name pos:line="24" pos:column="78">seconds<pos:position pos:line="24" pos:column="85"/></name></expr></argument>)<pos:position pos:line="24" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="88"/></expr_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">x<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">&lt;<pos:position pos:line="25" pos:column="19"/></operator> <literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">5<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="23">0<pos:position pos:line="26" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="26">"TCP_DEFER_ACCEPT '"<pos:position pos:line="26" pos:column="46"/></literal> <operator pos:line="26" pos:column="47">&lt;&lt;<pos:position pos:line="26" pos:column="55"/></operator> <name><name pos:line="26" pos:column="50">Config<pos:position pos:line="26" pos:column="56"/></name><operator pos:line="26" pos:column="56">.<pos:position pos:line="26" pos:column="57"/></operator><name pos:line="26" pos:column="57">accept_filter<pos:position pos:line="26" pos:column="70"/></name></name> <operator pos:line="26" pos:column="71">&lt;&lt;<pos:position pos:line="26" pos:column="79"/></operator> <literal type="string" pos:line="26" pos:column="74">"': '"<pos:position pos:line="26" pos:column="80"/></literal> <operator pos:line="26" pos:column="81">&lt;&lt;<pos:position pos:line="26" pos:column="89"/></operator> <call><name pos:line="26" pos:column="84">xstrerror<pos:position pos:line="26" pos:column="93"/></name><argument_list pos:line="26" pos:column="93">()<pos:position pos:line="26" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="97"/></expr_stmt></block></then></if>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">5<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="19">0<pos:position pos:line="28" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="22">"accept_filter not supported on your OS"<pos:position pos:line="28" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">sock<pos:position pos:line="32" pos:column="16"/></name></expr>;<pos:position pos:line="32" pos:column="17"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4663_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">printRadixNode<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name><name pos:line="2" pos:column="16">struct<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">squid_radix_node<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">rn<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">_sentry<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">sentry<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">StoreEntry<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">_sentry<pos:position pos:line="4" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">rtentry_t<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">e<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">rtentry_t<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></operator><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">rn<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">CbDataList<pos:position pos:line="6" pos:column="15"/></name><argument_list type="generic" pos:line="6" pos:column="15">&lt;<argument><expr><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="23"/></argument_list></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">q<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">as_info<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">asinfo<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">buf<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><name pos:line="8" pos:column="14">MAX_IPSTRLEN<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">Ip<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">::<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">Address<pos:position pos:line="9" pos:column="16"/></name></name></type> <name pos:line="9" pos:column="17">addr<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Ip<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">::<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">Address<pos:position pos:line="10" pos:column="16"/></name></name></type> <name pos:line="10" pos:column="17">mask<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">e<pos:position pos:line="12" pos:column="13"/></name></expr></argument>)<pos:position pos:line="12" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">e<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">e_info<pos:position pos:line="13" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">addr<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name><name pos:line="14" pos:column="12">e<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">e_addr<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">addr<pos:position pos:line="14" pos:column="26"/></name></name></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">mask<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name><name pos:line="15" pos:column="12">e<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">e_mask<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">addr<pos:position pos:line="15" pos:column="26"/></name></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">storeAppendPrintf<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">sentry<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"%s/%d\t"<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>,
                      <argument><expr><call><name><name pos:line="17" pos:column="23">addr<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">.<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="28">NtoA<pos:position pos:line="17" pos:column="32"/></name></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">buf<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">MAX_IPSTRLEN<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr></argument>,
                      <argument><expr><call><name><name pos:line="18" pos:column="23">mask<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">GetCIDR<pos:position pos:line="18" pos:column="35"/></name></name><argument_list pos:line="18" pos:column="35">()<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr></argument> )<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">asinfo<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name><name pos:line="19" pos:column="14">e<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">e_info<pos:position pos:line="19" pos:column="23"/></name></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">asinfo<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">as_number<pos:position pos:line="20" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>

    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><expr><name pos:line="22" pos:column="10">q<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <name><name pos:line="22" pos:column="14">asinfo<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">as_number<pos:position pos:line="22" pos:column="31"/></name></name></expr>;<pos:position pos:line="22" pos:column="32"/></init> <condition><expr><name pos:line="22" pos:column="33">q<pos:position pos:line="22" pos:column="34"/></name></expr>;<pos:position pos:line="22" pos:column="35"/></condition> <incr><expr><name pos:line="22" pos:column="36">q<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">=<pos:position pos:line="22" pos:column="39"/></operator> <name><name pos:line="22" pos:column="40">q<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">next<pos:position pos:line="22" pos:column="47"/></name></name></expr></incr>)<pos:position pos:line="22" pos:column="48"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">storeAppendPrintf<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><name pos:line="23" pos:column="27">sentry<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="35">" %d"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="42">q<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">element<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">storeAppendPrintf<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">sentry<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"\n"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>

    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

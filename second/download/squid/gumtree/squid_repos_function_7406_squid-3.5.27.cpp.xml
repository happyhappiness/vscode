<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7406_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">MemPoolMalloc<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">getStats<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">MemPoolStats<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">stats<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">accumulate<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">accumulate<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21">    <comment type="block" pos:line="4" pos:column="25">/* need skip memset for GlobalStats accumulation */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">memset<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">stats<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="26">sizeof<argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">MemPoolStats<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="7" pos:column="5">stats<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">pool<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">this<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">stats<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">label<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">objectType<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">()<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">stats<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">meter<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <operator pos:line="9" pos:column="20">&amp;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="21">meter<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">stats<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">obj_size<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">obj_size<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">stats<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">chunk_capacity<pos:position pos:line="11" pos:column="26"/></name></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">stats<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">chunks_alloc<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">+=<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">stats<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">chunks_inuse<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">+=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">0<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">stats<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">chunks_partial<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">+=<pos:position pos:line="15" pos:column="29"/></operator> <literal type="number" pos:line="15" pos:column="30">0<pos:position pos:line="15" pos:column="31"/></literal></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">stats<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">chunks_free<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">+=<pos:position pos:line="16" pos:column="26"/></operator> <literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">stats<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">items_alloc<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">+=<pos:position pos:line="18" pos:column="26"/></operator> <name><name pos:line="18" pos:column="27">meter<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">alloc<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">.<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="39">level<pos:position pos:line="18" pos:column="44"/></name></name></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">stats<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">items_inuse<pos:position pos:line="19" pos:column="23"/></name></name> <operator pos:line="19" pos:column="24">+=<pos:position pos:line="19" pos:column="26"/></operator> <name><name pos:line="19" pos:column="27">meter<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">inuse<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">.<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">level<pos:position pos:line="19" pos:column="44"/></name></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">stats<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">items_idle<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">+=<pos:position pos:line="20" pos:column="25"/></operator> <name><name pos:line="20" pos:column="26">meter<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">.<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="32">idle<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">level<pos:position pos:line="20" pos:column="42"/></name></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">stats<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">overhead<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">+=<pos:position pos:line="22" pos:column="23"/></operator> <sizeof pos:line="22" pos:column="24">sizeof<argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">MemPoolMalloc<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></sizeof> <operator pos:line="22" pos:column="46">+<pos:position pos:line="22" pos:column="47"/></operator> <call><name pos:line="22" pos:column="48">strlen<pos:position pos:line="22" pos:column="54"/></name><argument_list pos:line="22" pos:column="54">(<argument><expr><call><name pos:line="22" pos:column="55">objectType<pos:position pos:line="22" pos:column="65"/></name><argument_list pos:line="22" pos:column="65">()<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call> <operator pos:line="22" pos:column="69">+<pos:position pos:line="22" pos:column="70"/></operator> <literal type="number" pos:line="22" pos:column="71">1<pos:position pos:line="22" pos:column="72"/></literal></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt>

    <return pos:line="24" pos:column="5">return <expr><name><name pos:line="24" pos:column="12">meter<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">inuse<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">level<pos:position pos:line="24" pos:column="29"/></name></name></expr>;<pos:position pos:line="24" pos:column="30"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4829_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">addEntry<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">filen<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">DbCellHeader<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">header<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="70">const<pos:position pos:line="2" pos:column="75"/></specifier> <name pos:line="2" pos:column="76">StoreEntry<pos:position pos:line="2" pos:column="86"/></name> <modifier pos:line="2" pos:column="87">&amp;<pos:position pos:line="2" pos:column="92"/></modifier></type><name pos:line="2" pos:column="88">from<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="93"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">8<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <operator pos:line="4" pos:column="27">&amp;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="28">from<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">&lt;&lt;<pos:position pos:line="4" pos:column="41"/></operator> <literal type="char" pos:line="4" pos:column="36">' '<pos:position pos:line="4" pos:column="39"/></literal> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <call><name><name pos:line="4" pos:column="43">from<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">.<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">getMD5Text<pos:position pos:line="4" pos:column="58"/></name></name><argument_list pos:line="4" pos:column="58">()<pos:position pos:line="4" pos:column="60"/></argument_list></call> <operator pos:line="4" pos:column="61">&lt;&lt;<pos:position pos:line="4" pos:column="69"/></operator>
           <literal type="string" pos:line="5" pos:column="12">", filen="<pos:position pos:line="5" pos:column="22"/></literal><operator pos:line="5" pos:column="22">&lt;&lt;<pos:position pos:line="5" pos:column="30"/></operator> <call><name><name pos:line="5" pos:column="25">std<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">::<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">setfill<pos:position pos:line="5" pos:column="37"/></name></name><argument_list pos:line="5" pos:column="37">(<argument><expr><literal type="char" pos:line="5" pos:column="38">'0'<pos:position pos:line="5" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">&lt;&lt;<pos:position pos:line="5" pos:column="51"/></operator> <name><name pos:line="5" pos:column="46">std<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">::<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="51">hex<pos:position pos:line="5" pos:column="54"/></name></name> <operator pos:line="5" pos:column="55">&lt;&lt;<pos:position pos:line="5" pos:column="63"/></operator> <name><name pos:line="5" pos:column="58">std<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">::<pos:position pos:line="5" pos:column="63"/></operator><name pos:line="5" pos:column="63">uppercase<pos:position pos:line="5" pos:column="72"/></name></name> <operator pos:line="5" pos:column="73">&lt;&lt;<pos:position pos:line="5" pos:column="81"/></operator>
           <call><name><name pos:line="6" pos:column="12">std<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">::<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">setw<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">(<argument><expr><literal type="number" pos:line="6" pos:column="22">8<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call> <operator pos:line="6" pos:column="25">&lt;&lt;<pos:position pos:line="6" pos:column="33"/></operator> <name pos:line="6" pos:column="28">filen<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">sfileno<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">newLocation<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<decl><type><name><name pos:line="9" pos:column="9">Ipc<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">::<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">StoreMapSlot<pos:position pos:line="9" pos:column="26"/></name></name> <modifier pos:line="9" pos:column="27">*<pos:position pos:line="9" pos:column="28"/></modifier></type><name pos:line="9" pos:column="28">slot<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><call><name><name pos:line="9" pos:column="35">map<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">openForWriting<pos:position pos:line="9" pos:column="54"/></name></name><argument_list pos:line="9" pos:column="54">(<argument><expr><cast type="reinterpret" pos:line="9" pos:column="55">reinterpret_cast<argument_list type="generic" pos:line="9" pos:column="71">&lt;<argument><expr><specifier pos:line="9" pos:column="72">const<pos:position pos:line="9" pos:column="77"/></specifier> <name pos:line="9" pos:column="78">cache_key<pos:position pos:line="9" pos:column="87"/></name> <operator pos:line="9" pos:column="88">*<pos:position pos:line="9" pos:column="89"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="93"/></argument_list><argument_list pos:line="9" pos:column="90">(<argument><expr><name><name pos:line="9" pos:column="91">from<pos:position pos:line="9" pos:column="95"/></name><operator pos:line="9" pos:column="95">.<pos:position pos:line="9" pos:column="96"/></operator><name pos:line="9" pos:column="96">key<pos:position pos:line="9" pos:column="99"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="100"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="9" pos:column="102">newLocation<pos:position pos:line="9" pos:column="113"/></name></expr></argument>)<pos:position pos:line="9" pos:column="114"/></argument_list></call></expr></init></decl>)<pos:position pos:line="9" pos:column="115"/></condition><then pos:line="9" pos:column="115"> <block pos:line="9" pos:column="116">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">filen<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">newLocation<pos:position pos:line="10" pos:column="33"/></name></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
            <expr_stmt><expr><call><name><name pos:line="11" pos:column="13">slot<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">set<pos:position pos:line="11" pos:column="22"/></name></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">from<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="12" pos:column="13">map<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">extras<pos:position pos:line="12" pos:column="24"/></name></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">filen<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">header<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if> <comment type="line" pos:line="13" pos:column="11">// else some other, newer entry got into our cell</comment>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">map<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">closeForWriting<pos:position pos:line="14" pos:column="29"/></name></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">newLocation<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="14" pos:column="43">false<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">filen<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">==<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">newLocation<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <return pos:line="18" pos:column="5">return <expr><literal type="boolean" pos:line="18" pos:column="12">false<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

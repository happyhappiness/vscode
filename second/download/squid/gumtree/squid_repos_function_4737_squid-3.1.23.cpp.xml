<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4737_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">RebuildState<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">getNextFile<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">sfileno<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">filn_p<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">size<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><operator pos:line="4" pos:column="14">-<pos:position pos:line="4" pos:column="15"/></operator><literal type="number" pos:line="4" pos:column="15">1<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">dirs_opened<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">47<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"commonUfsDirGetNextFile: flag="<pos:position pos:line="6" pos:column="51"/></literal> <operator pos:line="6" pos:column="52">&lt;&lt;<pos:position pos:line="6" pos:column="60"/></operator> <name><name pos:line="6" pos:column="55">flags<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">.<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="61">init<pos:position pos:line="6" pos:column="65"/></name></name>  <operator pos:line="6" pos:column="67">&lt;&lt;<pos:position pos:line="6" pos:column="75"/></operator> <literal type="string" pos:line="6" pos:column="70">", "<pos:position pos:line="6" pos:column="74"/></literal> <operator pos:line="6" pos:column="75">&lt;&lt;<pos:position pos:line="6" pos:column="83"/></operator>
           <name><name pos:line="7" pos:column="12">sd<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">index<pos:position pos:line="7" pos:column="21"/></name></name>  <operator pos:line="7" pos:column="23">&lt;&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="string" pos:line="7" pos:column="26">": /"<pos:position pos:line="7" pos:column="31"/></literal><operator pos:line="7" pos:column="31">&lt;&lt;<pos:position pos:line="7" pos:column="39"/></operator> <call><name><name pos:line="7" pos:column="34">std<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">::<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">setfill<pos:position pos:line="7" pos:column="46"/></name></name><argument_list pos:line="7" pos:column="46">(<argument><expr><literal type="char" pos:line="7" pos:column="47">'0'<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call> <operator pos:line="7" pos:column="52">&lt;&lt;<pos:position pos:line="7" pos:column="60"/></operator> <name><name pos:line="7" pos:column="55">std<pos:position pos:line="7" pos:column="58"/></name><operator pos:line="7" pos:column="58">::<pos:position pos:line="7" pos:column="60"/></operator><name pos:line="7" pos:column="60">hex<pos:position pos:line="7" pos:column="63"/></name></name> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator>
           <name><name pos:line="8" pos:column="12">std<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">::<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">uppercase<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">&lt;&lt;<pos:position pos:line="8" pos:column="35"/></operator> <call><name><name pos:line="8" pos:column="30">std<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">::<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">setw<pos:position pos:line="8" pos:column="39"/></name></name><argument_list pos:line="8" pos:column="39">(<argument><expr><literal type="number" pos:line="8" pos:column="40">2<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call> <operator pos:line="8" pos:column="43">&lt;&lt;<pos:position pos:line="8" pos:column="51"/></operator> <name pos:line="8" pos:column="46">curlvl1<pos:position pos:line="8" pos:column="53"/></name>  <operator pos:line="8" pos:column="55">&lt;&lt;<pos:position pos:line="8" pos:column="63"/></operator> <literal type="string" pos:line="8" pos:column="58">"/"<pos:position pos:line="8" pos:column="61"/></literal> <operator pos:line="8" pos:column="62">&lt;&lt;<pos:position pos:line="8" pos:column="70"/></operator> <call><name><name pos:line="8" pos:column="65">std<pos:position pos:line="8" pos:column="68"/></name><operator pos:line="8" pos:column="68">::<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="70">setw<pos:position pos:line="8" pos:column="74"/></name></name><argument_list pos:line="8" pos:column="74">(<argument><expr><literal type="number" pos:line="8" pos:column="75">2<pos:position pos:line="8" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call> <operator pos:line="8" pos:column="78">&lt;&lt;<pos:position pos:line="8" pos:column="86"/></operator>
           <name pos:line="9" pos:column="12">curlvl2<pos:position pos:line="9" pos:column="19"/></name></expr></argument>)<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">done<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">-<pos:position pos:line="12" pos:column="17"/></operator><literal type="number" pos:line="12" pos:column="17">2<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></return></block></then></if>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><name pos:line="14" pos:column="12">fd<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">&lt;<pos:position pos:line="14" pos:column="19"/></operator> <literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal> <operator pos:line="14" pos:column="19">&amp;&amp;<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="22">done<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">0<pos:position pos:line="14" pos:column="31"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition> <block pos:line="14" pos:column="33">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">fd<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">-<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><literal type="number" pos:line="17" pos:column="13">0<pos:position pos:line="17" pos:column="14"/></literal> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <name><name pos:line="17" pos:column="18">flags<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">init<pos:position pos:line="17" pos:column="28"/></name></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{	<comment type="block" pos:line="17" pos:column="33">/* initialize, open first file */</comment>
            <expr_stmt><expr><name pos:line="18" pos:column="13">done<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="19" pos:column="13">curlvl1<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">curlvl2<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="21" pos:column="13">in_dir<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">flags<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">init<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">assert<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name><name pos:line="23" pos:column="20">Config<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">.<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">cacheSwap<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">.<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="37">n_configured<pos:position pos:line="23" pos:column="49"/></name></name> <operator pos:line="23" pos:column="50">&gt;<pos:position pos:line="23" pos:column="54"/></operator> <literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal> <operator pos:line="26" pos:column="15">==<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">in_dir<pos:position pos:line="26" pos:column="24"/></name></expr>)<pos:position pos:line="26" pos:column="25"/></condition><then pos:line="26" pos:column="25"> <block pos:line="26" pos:column="26">{	<comment type="block" pos:line="26" pos:column="33">/* we need to read in a new directory */</comment>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">snprintf<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">fullpath<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">SQUID_MAXPATHLEN<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="50">"%s/%02X/%02X"<pos:position pos:line="27" pos:column="64"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="28" pos:column="22">sd<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">path<pos:position pos:line="28" pos:column="30"/></name></name></expr></argument>,
                     <argument><expr><name pos:line="29" pos:column="22">curlvl1<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">curlvl2<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>

            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name pos:line="31" pos:column="17">dirs_opened<pos:position pos:line="31" pos:column="28"/></name></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29">
                <block type="pseudo"><return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">-<pos:position pos:line="32" pos:column="25"/></operator><literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></return></block></then></if>

            <expr_stmt><expr><name pos:line="34" pos:column="13">td<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <call><name pos:line="34" pos:column="18">opendir<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">fullpath<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><name pos:line="36" pos:column="13">dirs_opened<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">++<pos:position pos:line="36" pos:column="26"/></operator></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>

            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><name pos:line="38" pos:column="17">td<pos:position pos:line="38" pos:column="19"/></name> <operator pos:line="38" pos:column="20">==<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">NULL<pos:position pos:line="38" pos:column="27"/></name></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28"> <block pos:line="38" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">debugs<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="number" pos:line="39" pos:column="24">47<pos:position pos:line="39" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="31">"commonUfsDirGetNextFile: opendir: "<pos:position pos:line="39" pos:column="67"/></literal> <operator pos:line="39" pos:column="68">&lt;&lt;<pos:position pos:line="39" pos:column="76"/></operator> <name pos:line="39" pos:column="71">fullpath<pos:position pos:line="39" pos:column="79"/></name> <operator pos:line="39" pos:column="80">&lt;&lt;<pos:position pos:line="39" pos:column="88"/></operator> <literal type="string" pos:line="39" pos:column="83">": "<pos:position pos:line="39" pos:column="87"/></literal> <operator pos:line="39" pos:column="88">&lt;&lt;<pos:position pos:line="39" pos:column="96"/></operator> <call><name pos:line="39" pos:column="91">xstrerror<pos:position pos:line="39" pos:column="100"/></name><argument_list pos:line="39" pos:column="100">()<pos:position pos:line="39" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="104"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then> <else pos:line="40" pos:column="15">else <block pos:line="40" pos:column="20">{
                <expr_stmt><expr><name pos:line="41" pos:column="17">entry<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">readdir<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">td<pos:position pos:line="41" pos:column="35"/></name></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="37"/></expr_stmt>	<comment type="block" pos:line="41" pos:column="41">/* skip . and .. */</comment>
                <expr_stmt><expr><name pos:line="42" pos:column="17">entry<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">=<pos:position pos:line="42" pos:column="24"/></operator> <call><name pos:line="42" pos:column="25">readdir<pos:position pos:line="42" pos:column="32"/></name><argument_list pos:line="42" pos:column="32">(<argument><expr><name pos:line="42" pos:column="33">td<pos:position pos:line="42" pos:column="35"/></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>

                <if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><name pos:line="44" pos:column="21">entry<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">==<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">NULL<pos:position pos:line="44" pos:column="34"/></name> <operator pos:line="44" pos:column="35">&amp;&amp;<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="38">errno<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">==<pos:position pos:line="44" pos:column="46"/></operator> <name pos:line="44" pos:column="47">ENOENT<pos:position pos:line="44" pos:column="53"/></name></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="21">debugs<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><literal type="number" pos:line="45" pos:column="28">47<pos:position pos:line="45" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="32">1<pos:position pos:line="45" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="35">"commonUfsDirGetNextFile: directory does not exist!."<pos:position pos:line="45" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="90"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">debugs<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="number" pos:line="46" pos:column="24">47<pos:position pos:line="46" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="28">3<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="31">"commonUfsDirGetNextFile: Directory "<pos:position pos:line="46" pos:column="68"/></literal> <operator pos:line="46" pos:column="69">&lt;&lt;<pos:position pos:line="46" pos:column="77"/></operator> <name pos:line="46" pos:column="72">fullpath<pos:position pos:line="46" pos:column="80"/></name></expr></argument>)<pos:position pos:line="46" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="82"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></else></if>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">td<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">!=<pos:position pos:line="50" pos:column="18"/></operator> <name pos:line="50" pos:column="19">NULL<pos:position pos:line="50" pos:column="23"/></name> <operator pos:line="50" pos:column="24">&amp;&amp;<pos:position pos:line="50" pos:column="34"/></operator> <operator pos:line="50" pos:column="27">(<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">entry<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">=<pos:position pos:line="50" pos:column="35"/></operator> <call><name pos:line="50" pos:column="36">readdir<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">td<pos:position pos:line="50" pos:column="46"/></name></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call><operator pos:line="50" pos:column="47">)<pos:position pos:line="50" pos:column="48"/></operator> <operator pos:line="50" pos:column="49">!=<pos:position pos:line="50" pos:column="51"/></operator> <name pos:line="50" pos:column="52">NULL<pos:position pos:line="50" pos:column="56"/></name></expr>)<pos:position pos:line="50" pos:column="57"/></condition><then pos:line="50" pos:column="57"> <block pos:line="50" pos:column="58">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">in_dir<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">++<pos:position pos:line="51" pos:column="21"/></operator></expr>;<pos:position pos:line="51" pos:column="22"/></expr_stmt>

            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><call><name pos:line="53" pos:column="17">sscanf<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name><name pos:line="53" pos:column="24">entry<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">-&gt;<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="31">d_name<pos:position pos:line="53" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="39">"%x"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="45">&amp;<pos:position pos:line="53" pos:column="50"/></operator><name pos:line="53" pos:column="46">fn<pos:position pos:line="53" pos:column="48"/></name></expr></argument>)<pos:position pos:line="53" pos:column="49"/></argument_list></call> <operator pos:line="53" pos:column="50">!=<pos:position pos:line="53" pos:column="52"/></operator> <literal type="number" pos:line="53" pos:column="53">1<pos:position pos:line="53" pos:column="54"/></literal></expr>)<pos:position pos:line="53" pos:column="55"/></condition><then pos:line="53" pos:column="55"> <block pos:line="53" pos:column="56">{
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">debugs<pos:position pos:line="54" pos:column="23"/></name><argument_list pos:line="54" pos:column="23">(<argument><expr><literal type="number" pos:line="54" pos:column="24">47<pos:position pos:line="54" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="28">3<pos:position pos:line="54" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="31">"commonUfsDirGetNextFile: invalid "<pos:position pos:line="54" pos:column="66"/></literal> <operator pos:line="54" pos:column="67">&lt;&lt;<pos:position pos:line="54" pos:column="75"/></operator> <name><name pos:line="54" pos:column="70">entry<pos:position pos:line="54" pos:column="75"/></name><operator pos:line="54" pos:column="75">-&gt;<pos:position pos:line="54" pos:column="80"/></operator><name pos:line="54" pos:column="77">d_name<pos:position pos:line="54" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="85"/></expr_stmt>
                <continue pos:line="55" pos:column="17">continue;<pos:position pos:line="55" pos:column="26"/></continue>
            }<pos:position pos:line="56" pos:column="14"/></block></then></if>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><operator pos:line="58" pos:column="17">!<pos:position pos:line="58" pos:column="18"/></operator><call><name><name pos:line="58" pos:column="18">UFSSwapDir<pos:position pos:line="58" pos:column="28"/></name><operator pos:line="58" pos:column="28">::<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="30">FilenoBelongsHere<pos:position pos:line="58" pos:column="47"/></name></name><argument_list pos:line="58" pos:column="47">(<argument><expr><name pos:line="58" pos:column="48">fn<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="52">sd<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">index<pos:position pos:line="58" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="63">curlvl1<pos:position pos:line="58" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="72">curlvl2<pos:position pos:line="58" pos:column="79"/></name></expr></argument>)<pos:position pos:line="58" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="81"/></condition><then pos:line="58" pos:column="81"> <block pos:line="58" pos:column="82">{
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">debugs<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><literal type="number" pos:line="59" pos:column="24">47<pos:position pos:line="59" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="28">3<pos:position pos:line="59" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="31">"commonUfsDirGetNextFile: "<pos:position pos:line="59" pos:column="58"/></literal><operator pos:line="59" pos:column="58">&lt;&lt;<pos:position pos:line="59" pos:column="66"/></operator> <call><name><name pos:line="59" pos:column="61">std<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">::<pos:position pos:line="59" pos:column="66"/></operator><name pos:line="59" pos:column="66">setfill<pos:position pos:line="59" pos:column="73"/></name></name><argument_list pos:line="59" pos:column="73">(<argument><expr><literal type="char" pos:line="59" pos:column="74">'0'<pos:position pos:line="59" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="78"/></argument_list></call> <operator pos:line="59" pos:column="79">&lt;&lt;<pos:position pos:line="59" pos:column="87"/></operator>
                       <name><name pos:line="60" pos:column="24">std<pos:position pos:line="60" pos:column="27"/></name><operator pos:line="60" pos:column="27">::<pos:position pos:line="60" pos:column="29"/></operator><name pos:line="60" pos:column="29">hex<pos:position pos:line="60" pos:column="32"/></name></name> <operator pos:line="60" pos:column="33">&lt;&lt;<pos:position pos:line="60" pos:column="41"/></operator> <name><name pos:line="60" pos:column="36">std<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">::<pos:position pos:line="60" pos:column="41"/></operator><name pos:line="60" pos:column="41">uppercase<pos:position pos:line="60" pos:column="50"/></name></name> <operator pos:line="60" pos:column="51">&lt;&lt;<pos:position pos:line="60" pos:column="59"/></operator> <call><name><name pos:line="60" pos:column="54">std<pos:position pos:line="60" pos:column="57"/></name><operator pos:line="60" pos:column="57">::<pos:position pos:line="60" pos:column="59"/></operator><name pos:line="60" pos:column="59">setw<pos:position pos:line="60" pos:column="63"/></name></name><argument_list pos:line="60" pos:column="63">(<argument><expr><literal type="number" pos:line="60" pos:column="64">8<pos:position pos:line="60" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="66"/></argument_list></call> <operator pos:line="60" pos:column="67">&lt;&lt;<pos:position pos:line="60" pos:column="75"/></operator> <name pos:line="60" pos:column="70">fn<pos:position pos:line="60" pos:column="72"/></name>  <operator pos:line="60" pos:column="74">&lt;&lt;<pos:position pos:line="60" pos:column="82"/></operator>
                       <literal type="string" pos:line="61" pos:column="24">" does not belong in "<pos:position pos:line="61" pos:column="46"/></literal> <operator pos:line="61" pos:column="47">&lt;&lt;<pos:position pos:line="61" pos:column="55"/></operator> <name><name pos:line="61" pos:column="50">std<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">::<pos:position pos:line="61" pos:column="55"/></operator><name pos:line="61" pos:column="55">dec<pos:position pos:line="61" pos:column="58"/></name></name> <operator pos:line="61" pos:column="59">&lt;&lt;<pos:position pos:line="61" pos:column="67"/></operator> <name><name pos:line="61" pos:column="62">sd<pos:position pos:line="61" pos:column="64"/></name><operator pos:line="61" pos:column="64">-&gt;<pos:position pos:line="61" pos:column="69"/></operator><name pos:line="61" pos:column="66">index<pos:position pos:line="61" pos:column="71"/></name></name>  <operator pos:line="61" pos:column="73">&lt;&lt;<pos:position pos:line="61" pos:column="81"/></operator> <literal type="string" pos:line="61" pos:column="76">"/"<pos:position pos:line="61" pos:column="79"/></literal> <operator pos:line="61" pos:column="80">&lt;&lt;<pos:position pos:line="61" pos:column="88"/></operator>
                       <name pos:line="62" pos:column="24">curlvl1<pos:position pos:line="62" pos:column="31"/></name>  <operator pos:line="62" pos:column="33">&lt;&lt;<pos:position pos:line="62" pos:column="41"/></operator> <literal type="string" pos:line="62" pos:column="36">"/"<pos:position pos:line="62" pos:column="39"/></literal> <operator pos:line="62" pos:column="40">&lt;&lt;<pos:position pos:line="62" pos:column="48"/></operator> <name pos:line="62" pos:column="43">curlvl2<pos:position pos:line="62" pos:column="50"/></name></expr></argument>)<pos:position pos:line="62" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="52"/></expr_stmt>

                <continue pos:line="64" pos:column="17">continue;<pos:position pos:line="64" pos:column="26"/></continue>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if>

            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><call><name><name pos:line="67" pos:column="17">sd<pos:position pos:line="67" pos:column="19"/></name><operator pos:line="67" pos:column="19">-&gt;<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="21">mapBitTest<pos:position pos:line="67" pos:column="31"/></name></name><argument_list pos:line="67" pos:column="31">(<argument><expr><name pos:line="67" pos:column="32">fn<pos:position pos:line="67" pos:column="34"/></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="36"/></condition><then pos:line="67" pos:column="36"> <block pos:line="67" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">debugs<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><literal type="number" pos:line="68" pos:column="24">47<pos:position pos:line="68" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="28">3<pos:position pos:line="68" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="31">"commonUfsDirGetNextFile: Locked, continuing with next."<pos:position pos:line="68" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="89"/></expr_stmt>
                <continue pos:line="69" pos:column="17">continue;<pos:position pos:line="69" pos:column="26"/></continue>
            }<pos:position pos:line="70" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="72" pos:column="13">snprintf<pos:position pos:line="72" pos:column="21"/></name><argument_list pos:line="72" pos:column="21">(<argument><expr><name pos:line="72" pos:column="22">fullfilename<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">SQUID_MAXPATHLEN<pos:position pos:line="72" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="54">"%s/%s"<pos:position pos:line="72" pos:column="61"/></literal></expr></argument>,
                     <argument><expr><name pos:line="73" pos:column="22">fullpath<pos:position pos:line="73" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="32">entry<pos:position pos:line="73" pos:column="37"/></name><operator pos:line="73" pos:column="37">-&gt;<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="39">d_name<pos:position pos:line="73" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">debugs<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><literal type="number" pos:line="74" pos:column="20">47<pos:position pos:line="74" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="24">3<pos:position pos:line="74" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"commonUfsDirGetNextFile: Opening "<pos:position pos:line="74" pos:column="62"/></literal> <operator pos:line="74" pos:column="63">&lt;&lt;<pos:position pos:line="74" pos:column="71"/></operator> <name pos:line="74" pos:column="66">fullfilename<pos:position pos:line="74" pos:column="78"/></name></expr></argument>)<pos:position pos:line="74" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name pos:line="75" pos:column="13">fd<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">file_open<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">fullfilename<pos:position pos:line="75" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="42">O_RDONLY<pos:position pos:line="75" pos:column="50"/></name> <operator pos:line="75" pos:column="51">|<pos:position pos:line="75" pos:column="52"/></operator> <name pos:line="75" pos:column="53">O_BINARY<pos:position pos:line="75" pos:column="61"/></name></expr></argument>)<pos:position pos:line="75" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="63"/></expr_stmt>

            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">fd<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">&lt;<pos:position pos:line="77" pos:column="24"/></operator> <literal type="number" pos:line="77" pos:column="22">0<pos:position pos:line="77" pos:column="23"/></literal></expr>)<pos:position pos:line="77" pos:column="24"/></condition><then pos:line="77" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="17">debugs<pos:position pos:line="78" pos:column="23"/></name><argument_list pos:line="78" pos:column="23">(<argument><expr><literal type="number" pos:line="78" pos:column="24">47<pos:position pos:line="78" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="28">1<pos:position pos:line="78" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="31">"commonUfsDirGetNextFile: "<pos:position pos:line="78" pos:column="58"/></literal> <operator pos:line="78" pos:column="59">&lt;&lt;<pos:position pos:line="78" pos:column="67"/></operator> <name pos:line="78" pos:column="62">fullfilename<pos:position pos:line="78" pos:column="74"/></name> <operator pos:line="78" pos:column="75">&lt;&lt;<pos:position pos:line="78" pos:column="83"/></operator> <literal type="string" pos:line="78" pos:column="78">": "<pos:position pos:line="78" pos:column="82"/></literal> <operator pos:line="78" pos:column="83">&lt;&lt;<pos:position pos:line="78" pos:column="91"/></operator> <call><name pos:line="78" pos:column="86">xstrerror<pos:position pos:line="78" pos:column="95"/></name><argument_list pos:line="78" pos:column="95">()<pos:position pos:line="78" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="99"/></expr_stmt></block></then>
            <else pos:line="79" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="17">store_open_disk_fd<pos:position pos:line="80" pos:column="35"/></name><operator pos:line="80" pos:column="35">++<pos:position pos:line="80" pos:column="37"/></operator></expr>;<pos:position pos:line="80" pos:column="38"/></expr_stmt></block></else></if>

            <continue pos:line="82" pos:column="13">continue;<pos:position pos:line="82" pos:column="22"/></continue>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><name pos:line="85" pos:column="13">td<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">!=<pos:position pos:line="85" pos:column="18"/></operator> <name pos:line="85" pos:column="19">NULL<pos:position pos:line="85" pos:column="23"/></name></expr>)<pos:position pos:line="85" pos:column="24"/></condition><then pos:line="85" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="13">closedir<pos:position pos:line="86" pos:column="21"/></name><argument_list pos:line="86" pos:column="21">(<argument><expr><name pos:line="86" pos:column="22">td<pos:position pos:line="86" pos:column="24"/></name></expr></argument>)<pos:position pos:line="86" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="26"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="88" pos:column="9">td<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <name pos:line="88" pos:column="14">NULL<pos:position pos:line="88" pos:column="18"/></name></expr>;<pos:position pos:line="88" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><name pos:line="90" pos:column="9">in_dir<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <literal type="number" pos:line="90" pos:column="18">0<pos:position pos:line="90" pos:column="19"/></literal></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>

        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><call><name><name pos:line="92" pos:column="13">sd<pos:position pos:line="92" pos:column="15"/></name><operator pos:line="92" pos:column="15">-&gt;<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="17">validL2<pos:position pos:line="92" pos:column="24"/></name></name><argument_list pos:line="92" pos:column="24">(<argument><expr><operator pos:line="92" pos:column="25">++<pos:position pos:line="92" pos:column="27"/></operator><name pos:line="92" pos:column="27">curlvl2<pos:position pos:line="92" pos:column="34"/></name></expr></argument>)<pos:position pos:line="92" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="92" pos:column="36"/></condition><then pos:line="92" pos:column="36">
            <block type="pseudo"><continue pos:line="93" pos:column="13">continue;<pos:position pos:line="93" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="95" pos:column="9">curlvl2<pos:position pos:line="95" pos:column="16"/></name> <operator pos:line="95" pos:column="17">=<pos:position pos:line="95" pos:column="18"/></operator> <literal type="number" pos:line="95" pos:column="19">0<pos:position pos:line="95" pos:column="20"/></literal></expr>;<pos:position pos:line="95" pos:column="21"/></expr_stmt>

        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><call><name><name pos:line="97" pos:column="13">sd<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">validL1<pos:position pos:line="97" pos:column="24"/></name></name><argument_list pos:line="97" pos:column="24">(<argument><expr><operator pos:line="97" pos:column="25">++<pos:position pos:line="97" pos:column="27"/></operator><name pos:line="97" pos:column="27">curlvl1<pos:position pos:line="97" pos:column="34"/></name></expr></argument>)<pos:position pos:line="97" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="36"/></condition><then pos:line="97" pos:column="36">
            <block type="pseudo"><continue pos:line="98" pos:column="13">continue;<pos:position pos:line="98" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name pos:line="100" pos:column="9">curlvl1<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">=<pos:position pos:line="100" pos:column="18"/></operator> <literal type="number" pos:line="100" pos:column="19">0<pos:position pos:line="100" pos:column="20"/></literal></expr>;<pos:position pos:line="100" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><name pos:line="102" pos:column="9">done<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">=<pos:position pos:line="102" pos:column="15"/></operator> <literal type="number" pos:line="102" pos:column="16">1<pos:position pos:line="102" pos:column="17"/></literal></expr>;<pos:position pos:line="102" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="103" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="105" pos:column="5">*<pos:position pos:line="105" pos:column="6"/></operator><name pos:line="105" pos:column="6">filn_p<pos:position pos:line="105" pos:column="12"/></name> <operator pos:line="105" pos:column="13">=<pos:position pos:line="105" pos:column="14"/></operator> <name pos:line="105" pos:column="15">fn<pos:position pos:line="105" pos:column="17"/></name></expr>;<pos:position pos:line="105" pos:column="18"/></expr_stmt>
    <return pos:line="106" pos:column="5">return <expr><name pos:line="106" pos:column="12">fd<pos:position pos:line="106" pos:column="14"/></name></expr>;<pos:position pos:line="106" pos:column="15"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2793_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">urlCanonicalClean<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">HttpRequest<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">request<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">MAX_URL<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">snprintf<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name pos:line="6" pos:column="14">buf<pos:position pos:line="6" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="19">sizeof<argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">buf<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="6" pos:column="32">SQUIDSBUFPH<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="45">SQUIDSBUFPRINT<pos:position pos:line="6" pos:column="59"/></name><argument_list pos:line="6" pos:column="59">(<argument><expr><call><name><name pos:line="6" pos:column="60">request<pos:position pos:line="6" pos:column="67"/></name><operator pos:line="6" pos:column="67">-&gt;<pos:position pos:line="6" pos:column="72"/></operator><name pos:line="6" pos:column="69">effectiveRequestUri<pos:position pos:line="6" pos:column="88"/></name></name><argument_list pos:line="6" pos:column="88">()<pos:position pos:line="6" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">buf<pos:position pos:line="7" pos:column="8"/></name><index pos:line="7" pos:column="8">[<expr><sizeof pos:line="7" pos:column="9">sizeof<argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">buf<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></sizeof><operator pos:line="7" pos:column="20">-<pos:position pos:line="7" pos:column="21"/></operator><literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr>]<pos:position pos:line="7" pos:column="23"/></index></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <literal type="char" pos:line="7" pos:column="26">'\0'<pos:position pos:line="7" pos:column="30"/></literal></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// URN, CONNECT method, and non-stripped URIs can go straight out</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">Config<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">onoff<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">strip_query_terms<pos:position pos:line="10" pos:column="39"/></name></name> <operator pos:line="10" pos:column="40">&amp;&amp;<pos:position pos:line="10" pos:column="50"/></operator> <operator pos:line="10" pos:column="43">!<pos:position pos:line="10" pos:column="44"/></operator><operator pos:line="10" pos:column="44">(<pos:position pos:line="10" pos:column="45"/></operator><name><name pos:line="10" pos:column="45">request<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">method<pos:position pos:line="10" pos:column="60"/></name></name> <operator pos:line="10" pos:column="61">==<pos:position pos:line="10" pos:column="63"/></operator> <name><name pos:line="10" pos:column="64">Http<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">::<pos:position pos:line="10" pos:column="70"/></operator><name pos:line="10" pos:column="70">METHOD_CONNECT<pos:position pos:line="10" pos:column="84"/></name></name> <operator pos:line="10" pos:column="85">||<pos:position pos:line="10" pos:column="87"/></operator> <call><name><name pos:line="10" pos:column="88">request<pos:position pos:line="10" pos:column="95"/></name><operator pos:line="10" pos:column="95">-&gt;<pos:position pos:line="10" pos:column="100"/></operator><name pos:line="10" pos:column="97">url<pos:position pos:line="10" pos:column="100"/></name><operator pos:line="10" pos:column="100">.<pos:position pos:line="10" pos:column="101"/></operator><name pos:line="10" pos:column="101">getScheme<pos:position pos:line="10" pos:column="110"/></name></name><argument_list pos:line="10" pos:column="110">()<pos:position pos:line="10" pos:column="112"/></argument_list></call> <operator pos:line="10" pos:column="113">==<pos:position pos:line="10" pos:column="115"/></operator> <name><name pos:line="10" pos:column="116">AnyP<pos:position pos:line="10" pos:column="120"/></name><operator pos:line="10" pos:column="120">::<pos:position pos:line="10" pos:column="122"/></operator><name pos:line="10" pos:column="122">PROTO_URN<pos:position pos:line="10" pos:column="131"/></name></name><operator pos:line="10" pos:column="131">)<pos:position pos:line="10" pos:column="132"/></operator></expr>)<pos:position pos:line="10" pos:column="133"/></condition><then pos:line="10" pos:column="133"> <block pos:line="10" pos:column="134">{
        <comment type="line" pos:line="11" pos:column="9">// strip anything AFTER a question-mark</comment>
        <comment type="line" pos:line="12" pos:column="9">// leaving the '?' in place</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<decl><type><name pos:line="13" pos:column="13">auto<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">t<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><call><name pos:line="13" pos:column="22">strchr<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">buf<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="34">'?'<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr></init></decl>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
            <expr_stmt><expr><operator pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></operator><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><operator pos:line="14" pos:column="15">++<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">t<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">)<pos:position pos:line="14" pos:column="19"/></operator> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="char" pos:line="14" pos:column="22">'\0'<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">stringHasCntl<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">buf<pos:position pos:line="18" pos:column="26"/></name></expr></argument>)<pos:position pos:line="18" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">xstrncpy<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">buf<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="23">rfc1738_escape_unescaped<pos:position pos:line="19" pos:column="47"/></name><argument_list pos:line="19" pos:column="47">(<argument><expr><name pos:line="19" pos:column="48">buf<pos:position pos:line="19" pos:column="51"/></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="54">MAX_URL<pos:position pos:line="19" pos:column="61"/></name></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">buf<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

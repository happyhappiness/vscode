<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5733_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLProxyAuth<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">valid<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list> <specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">authenticateSchemeCount<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call> <operator pos:line="4" pos:column="35">==<pos:position pos:line="4" pos:column="37"/></operator> <literal type="number" pos:line="4" pos:column="38">0<pos:position pos:line="4" pos:column="39"/></literal></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <block pos:line="4" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">28<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">DBG_CRITICAL<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="34">"Can't use proxy auth because no authentication schemes were compiled."<pos:position pos:line="5" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="107"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">authenticateActiveSchemeCount<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call> <operator pos:line="9" pos:column="41">==<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">28<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_CRITICAL<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"Can't use proxy auth because no authentication schemes are fully configured."<pos:position pos:line="10" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="114"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><literal type="boolean" pos:line="14" pos:column="12">true<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

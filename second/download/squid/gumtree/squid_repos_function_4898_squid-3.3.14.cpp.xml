<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4898_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSStoreState<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">kickReadQueue<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">()<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">_queued_read<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">q<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><operator pos:line="4" pos:column="23">(<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">_queued_read<pos:position pos:line="4" pos:column="36"/></name> <operator pos:line="4" pos:column="37">*<pos:position pos:line="4" pos:column="38"/></operator><operator pos:line="4" pos:column="38">)<pos:position pos:line="4" pos:column="39"/></operator><call><name pos:line="4" pos:column="39">linklistShift<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><operator pos:line="4" pos:column="53">&amp;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="54">pending_reads<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">NULL<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">q<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">false<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">79<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"UFSStoreState::kickReadQueue: reading queued request of "<pos:position pos:line="9" pos:column="77"/></literal> <operator pos:line="9" pos:column="78">&lt;&lt;<pos:position pos:line="9" pos:column="86"/></operator> <name><name pos:line="9" pos:column="81">q<pos:position pos:line="9" pos:column="82"/></name><operator pos:line="9" pos:column="82">-&gt;<pos:position pos:line="9" pos:column="87"/></operator><name pos:line="9" pos:column="84">size<pos:position pos:line="9" pos:column="88"/></name></name> <operator pos:line="9" pos:column="89">&lt;&lt;<pos:position pos:line="9" pos:column="97"/></operator> <literal type="string" pos:line="9" pos:column="92">" bytes"<pos:position pos:line="9" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="102"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">void<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">cbdata<pos:position pos:line="11" pos:column="17"/></name></decl>;<pos:position pos:line="11" pos:column="18"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">cbdataReferenceValidDone<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name><name pos:line="13" pos:column="34">q<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">callback_data<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="52">&amp;<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="53">cbdata<pos:position pos:line="13" pos:column="59"/></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="61"/></condition><then pos:line="13" pos:column="61"> <block pos:line="13" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">read_<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name><name pos:line="14" pos:column="15">q<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">buf<pos:position pos:line="14" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="23">q<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">size<pos:position pos:line="14" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="32">q<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">-&gt;<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="35">offset<pos:position pos:line="14" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="43">q<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">callback<pos:position pos:line="14" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">cbdata<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">79<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">2<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"UFSStoreState::kickReadQueue: this: "<pos:position pos:line="16" pos:column="61"/></literal> <operator pos:line="16" pos:column="62">&lt;&lt;<pos:position pos:line="16" pos:column="70"/></operator> <name pos:line="16" pos:column="65">this<pos:position pos:line="16" pos:column="69"/></name> <operator pos:line="16" pos:column="70">&lt;&lt;<pos:position pos:line="16" pos:column="78"/></operator> <literal type="string" pos:line="16" pos:column="73">" cbdataReferenceValidDone returned false."<pos:position pos:line="16" pos:column="116"/></literal> <operator pos:line="16" pos:column="117">&lt;&lt;<pos:position pos:line="16" pos:column="125"/></operator> <literal type="string" pos:line="16" pos:column="120">" closing: "<pos:position pos:line="16" pos:column="132"/></literal> <operator pos:line="16" pos:column="133">&lt;&lt;<pos:position pos:line="16" pos:column="141"/></operator> <name pos:line="16" pos:column="136">closing<pos:position pos:line="16" pos:column="143"/></name> <operator pos:line="16" pos:column="144">&lt;&lt;<pos:position pos:line="16" pos:column="152"/></operator> <literal type="string" pos:line="16" pos:column="147">" flags.try_closing: "<pos:position pos:line="16" pos:column="169"/></literal> <operator pos:line="16" pos:column="170">&lt;&lt;<pos:position pos:line="16" pos:column="178"/></operator> <name><name pos:line="16" pos:column="173">flags<pos:position pos:line="16" pos:column="178"/></name><operator pos:line="16" pos:column="178">.<pos:position pos:line="16" pos:column="179"/></operator><name pos:line="16" pos:column="179">try_closing<pos:position pos:line="16" pos:column="190"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="191"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="192"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="17" pos:column="9">delete<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">q<pos:position pos:line="17" pos:column="17"/></name></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><literal type="boolean" pos:line="18" pos:column="16">false<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="21" pos:column="5">delete<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">q<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>

    <return pos:line="23" pos:column="5">return <expr><literal type="boolean" pos:line="23" pos:column="12">true<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

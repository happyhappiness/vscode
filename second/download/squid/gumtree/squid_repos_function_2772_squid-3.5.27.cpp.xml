<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2772_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelConnectDone<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">Comm<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">ConnectionPointer<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">conn<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="56">Comm<pos:position pos:line="2" pos:column="60"/></name><operator pos:line="2" pos:column="60">::<pos:position pos:line="2" pos:column="62"/></operator><name pos:line="2" pos:column="62">Flag<pos:position pos:line="2" pos:column="66"/></name></name></type> <name pos:line="2" pos:column="67">status<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">int<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">xerrno<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="87">void<pos:position pos:line="2" pos:column="91"/></name> <modifier pos:line="2" pos:column="92">*<pos:position pos:line="2" pos:column="93"/></modifier></type><name pos:line="2" pos:column="93">data<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="98"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name><name pos:line="6" pos:column="19">Comm<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">::<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">OK<pos:position pos:line="6" pos:column="27"/></name></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28"> <block pos:line="6" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">26<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">4<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HERE<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <name pos:line="7" pos:column="31">conn<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">&lt;&lt;<pos:position pos:line="7" pos:column="44"/></operator> <literal type="string" pos:line="7" pos:column="39">", comm failure recovery."<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
        <comment type="block" pos:line="8" pos:column="9">/* At this point only the TCP handshake has failed. no data has been passed.
         * we are allowed to re-try the TCP-level connection to alternate IPs for CONNECT.
         */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">26<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">4<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"removing server 1 of "<pos:position pos:line="11" pos:column="46"/></literal> <operator pos:line="11" pos:column="47">&lt;&lt;<pos:position pos:line="11" pos:column="55"/></operator> <call><name><name pos:line="11" pos:column="50">tunnelState<pos:position pos:line="11" pos:column="61"/></name><operator pos:line="11" pos:column="61">-&gt;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="63">serverDestinations<pos:position pos:line="11" pos:column="81"/></name><operator pos:line="11" pos:column="81">.<pos:position pos:line="11" pos:column="82"/></operator><name pos:line="11" pos:column="82">size<pos:position pos:line="11" pos:column="86"/></name></name><argument_list pos:line="11" pos:column="86">()<pos:position pos:line="11" pos:column="88"/></argument_list></call> <operator pos:line="11" pos:column="89">&lt;&lt;<pos:position pos:line="11" pos:column="97"/></operator>
               <literal type="string" pos:line="12" pos:column="16">" from destinations ("<pos:position pos:line="12" pos:column="38"/></literal> <operator pos:line="12" pos:column="39">&lt;&lt;<pos:position pos:line="12" pos:column="47"/></operator> <name><name pos:line="12" pos:column="42">tunnelState<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">-&gt;<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="55">serverDestinations<pos:position pos:line="12" pos:column="73"/></name><index pos:line="12" pos:column="73">[<expr><literal type="number" pos:line="12" pos:column="74">0<pos:position pos:line="12" pos:column="75"/></literal></expr>]<pos:position pos:line="12" pos:column="76"/></index></name> <operator pos:line="12" pos:column="77">&lt;&lt;<pos:position pos:line="12" pos:column="85"/></operator> <literal type="string" pos:line="12" pos:column="80">")"<pos:position pos:line="12" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">tunnelState<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">serverDestinations<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">erase<pos:position pos:line="13" pos:column="46"/></name></name><argument_list pos:line="13" pos:column="46">(<argument><expr><call><name><name pos:line="13" pos:column="47">tunnelState<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">serverDestinations<pos:position pos:line="13" pos:column="78"/></name><operator pos:line="13" pos:column="78">.<pos:position pos:line="13" pos:column="79"/></operator><name pos:line="13" pos:column="79">begin<pos:position pos:line="13" pos:column="84"/></name></name><argument_list pos:line="13" pos:column="84">()<pos:position pos:line="13" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="88"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">time_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">fwdTimeout<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><name><name pos:line="14" pos:column="29">tunnelState<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">started<pos:position pos:line="14" pos:column="49"/></name></name> <operator pos:line="14" pos:column="50">+<pos:position pos:line="14" pos:column="51"/></operator> <name><name pos:line="14" pos:column="52">Config<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">.<pos:position pos:line="14" pos:column="59"/></operator><name pos:line="14" pos:column="59">Timeout<pos:position pos:line="14" pos:column="66"/></name><operator pos:line="14" pos:column="66">.<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="67">forward<pos:position pos:line="14" pos:column="74"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="75"/></decl_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">fwdTimeout<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&gt;<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="26">squid_curtime<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">&amp;&amp;<pos:position pos:line="15" pos:column="50"/></operator> <call><name><name pos:line="15" pos:column="43">tunnelState<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">serverDestinations<pos:position pos:line="15" pos:column="74"/></name><operator pos:line="15" pos:column="74">.<pos:position pos:line="15" pos:column="75"/></operator><name pos:line="15" pos:column="75">size<pos:position pos:line="15" pos:column="79"/></name></name><argument_list pos:line="15" pos:column="79">()<pos:position pos:line="15" pos:column="81"/></argument_list></call> <operator pos:line="15" pos:column="82">&gt;<pos:position pos:line="15" pos:column="86"/></operator> <literal type="number" pos:line="15" pos:column="84">0<pos:position pos:line="15" pos:column="85"/></literal></expr>)<pos:position pos:line="15" pos:column="86"/></condition><then pos:line="15" pos:column="86"> <block pos:line="15" pos:column="87">{
            <comment type="line" pos:line="16" pos:column="13">// find remaining forward_timeout available for this attempt</comment>
            <expr_stmt><expr><name pos:line="17" pos:column="13">fwdTimeout<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">-=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">squid_curtime<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">fwdTimeout<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&gt;<pos:position pos:line="18" pos:column="32"/></operator> <name><name pos:line="18" pos:column="30">Config<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">.<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="37">Timeout<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">.<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="45">connect<pos:position pos:line="18" pos:column="52"/></name></name></expr>)<pos:position pos:line="18" pos:column="53"/></condition><then pos:line="18" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">fwdTimeout<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name><name pos:line="19" pos:column="30">Config<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">.<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">Timeout<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">connect<pos:position pos:line="19" pos:column="52"/></name></name></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt></block></then></if>
            <comment type="block" pos:line="20" pos:column="13">/* Try another IP of this destination host */</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">GetMarkingsToServer<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><call><name><name pos:line="21" pos:column="33">tunnelState<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">request<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">getRaw<pos:position pos:line="21" pos:column="60"/></name></name><argument_list pos:line="21" pos:column="60">()<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="21" pos:column="64">*<pos:position pos:line="21" pos:column="65"/></operator><name><name pos:line="21" pos:column="65">tunnelState<pos:position pos:line="21" pos:column="76"/></name><operator pos:line="21" pos:column="76">-&gt;<pos:position pos:line="21" pos:column="81"/></operator><name pos:line="21" pos:column="78">serverDestinations<pos:position pos:line="21" pos:column="96"/></name><index pos:line="21" pos:column="96">[<expr><literal type="number" pos:line="21" pos:column="97">0<pos:position pos:line="21" pos:column="98"/></literal></expr>]<pos:position pos:line="21" pos:column="99"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="101"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">26<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">4<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">HERE<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&lt;&lt;<pos:position pos:line="22" pos:column="40"/></operator> <literal type="string" pos:line="22" pos:column="35">"retry with : "<pos:position pos:line="22" pos:column="50"/></literal> <operator pos:line="22" pos:column="51">&lt;&lt;<pos:position pos:line="22" pos:column="59"/></operator> <name><name pos:line="22" pos:column="54">tunnelState<pos:position pos:line="22" pos:column="65"/></name><operator pos:line="22" pos:column="65">-&gt;<pos:position pos:line="22" pos:column="70"/></operator><name pos:line="22" pos:column="67">serverDestinations<pos:position pos:line="22" pos:column="85"/></name><index pos:line="22" pos:column="85">[<expr><literal type="number" pos:line="22" pos:column="86">0<pos:position pos:line="22" pos:column="87"/></literal></expr>]<pos:position pos:line="22" pos:column="88"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="90"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="23" pos:column="13">AsyncCall<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">::<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">Pointer<pos:position pos:line="23" pos:column="31"/></name></name></type> <name pos:line="23" pos:column="32">call<pos:position pos:line="23" pos:column="36"/></name> <init pos:line="23" pos:column="37">= <expr><call><name pos:line="23" pos:column="39">commCbCall<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><literal type="number" pos:line="23" pos:column="50">26<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="53">3<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="56">"tunnelConnectDone"<pos:position pos:line="23" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="77">CommConnectCbPtrFun<pos:position pos:line="23" pos:column="96"/></name><argument_list pos:line="23" pos:column="96">(<argument><expr><name pos:line="23" pos:column="97">tunnelConnectDone<pos:position pos:line="23" pos:column="114"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="116">tunnelState<pos:position pos:line="23" pos:column="127"/></name></expr></argument>)<pos:position pos:line="23" pos:column="128"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="129"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="130"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="24" pos:column="13">Comm<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">::<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">ConnOpener<pos:position pos:line="24" pos:column="29"/></name></name> <modifier pos:line="24" pos:column="30">*<pos:position pos:line="24" pos:column="31"/></modifier></type><name pos:line="24" pos:column="31">cs<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><operator pos:line="24" pos:column="36">new<pos:position pos:line="24" pos:column="39"/></operator> <call><name><name pos:line="24" pos:column="40">Comm<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">::<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">ConnOpener<pos:position pos:line="24" pos:column="56"/></name></name><argument_list pos:line="24" pos:column="56">(<argument><expr><name><name pos:line="24" pos:column="57">tunnelState<pos:position pos:line="24" pos:column="68"/></name><operator pos:line="24" pos:column="68">-&gt;<pos:position pos:line="24" pos:column="73"/></operator><name pos:line="24" pos:column="70">serverDestinations<pos:position pos:line="24" pos:column="88"/></name><index pos:line="24" pos:column="88">[<expr><literal type="number" pos:line="24" pos:column="89">0<pos:position pos:line="24" pos:column="90"/></literal></expr>]<pos:position pos:line="24" pos:column="91"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="93">call<pos:position pos:line="24" pos:column="97"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="99">fwdTimeout<pos:position pos:line="24" pos:column="109"/></name></expr></argument>)<pos:position pos:line="24" pos:column="110"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="111"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="25" pos:column="13">cs<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">setHost<pos:position pos:line="25" pos:column="24"/></name></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name><name pos:line="25" pos:column="25">tunnelState<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">url<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="26" pos:column="13">AsyncJob<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">::<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">Start<pos:position pos:line="26" pos:column="28"/></name></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">cs<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">debugs<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="number" pos:line="28" pos:column="20">26<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="24">4<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">HERE<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">&lt;&lt;<pos:position pos:line="28" pos:column="40"/></operator> <literal type="string" pos:line="28" pos:column="35">"terminate with error."<pos:position pos:line="28" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">ErrorState<pos:position pos:line="29" pos:column="23"/></name> <modifier pos:line="29" pos:column="24">*<pos:position pos:line="29" pos:column="25"/></modifier></type><name pos:line="29" pos:column="25">err<pos:position pos:line="29" pos:column="28"/></name> <init pos:line="29" pos:column="29">= <expr><operator pos:line="29" pos:column="31">new<pos:position pos:line="29" pos:column="34"/></operator> <call><name pos:line="29" pos:column="35">ErrorState<pos:position pos:line="29" pos:column="45"/></name><argument_list pos:line="29" pos:column="45">(<argument><expr><name pos:line="29" pos:column="46">ERR_CONNECT_FAIL<pos:position pos:line="29" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="64">Http<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">::<pos:position pos:line="29" pos:column="70"/></operator><name pos:line="29" pos:column="70">scServiceUnavailable<pos:position pos:line="29" pos:column="90"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="29" pos:column="92">tunnelState<pos:position pos:line="29" pos:column="103"/></name><operator pos:line="29" pos:column="103">-&gt;<pos:position pos:line="29" pos:column="108"/></operator><name pos:line="29" pos:column="105">request<pos:position pos:line="29" pos:column="112"/></name><operator pos:line="29" pos:column="112">.<pos:position pos:line="29" pos:column="113"/></operator><name pos:line="29" pos:column="113">getRaw<pos:position pos:line="29" pos:column="119"/></name></name><argument_list pos:line="29" pos:column="119">()<pos:position pos:line="29" pos:column="121"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="122"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="123"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">tunnelState<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">status_ptr<pos:position pos:line="30" pos:column="37"/></name></name> <operator pos:line="30" pos:column="38">=<pos:position pos:line="30" pos:column="39"/></operator> <name><name pos:line="30" pos:column="40">Http<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">::<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">scServiceUnavailable<pos:position pos:line="30" pos:column="66"/></name></name></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">err<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">xerrno<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">xerrno<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>
            <comment type="line" pos:line="32" pos:column="13">// on timeout is this still:    err-&gt;xerrno = ETIMEDOUT;</comment>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">err<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">port<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <call><name><name pos:line="33" pos:column="25">conn<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">remote<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">port<pos:position pos:line="33" pos:column="42"/></name></name><argument_list pos:line="33" pos:column="42">()<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">err<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">callback<pos:position pos:line="34" pos:column="26"/></name></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">tunnelErrorComplete<pos:position pos:line="34" pos:column="48"/></name></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">err<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">-&gt;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="18">callback_data<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <name pos:line="35" pos:column="34">tunnelState<pos:position pos:line="35" pos:column="45"/></name></expr>;<pos:position pos:line="35" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">errorSend<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name><name pos:line="36" pos:column="23">tunnelState<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">-&gt;<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="36">client<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">.<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="43">conn<pos:position pos:line="36" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="49">err<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">tunnelState<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">request<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">!=<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">NULL<pos:position pos:line="37" pos:column="45"/></name></expr>)<pos:position pos:line="37" pos:column="46"/></condition><then pos:line="37" pos:column="46">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="38" pos:column="17">tunnelState<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">request<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">hier<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">.<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="44">stopPeerClock<pos:position pos:line="38" pos:column="57"/></name></name><argument_list pos:line="38" pos:column="57">(<argument><expr><literal type="boolean" pos:line="38" pos:column="58">false<pos:position pos:line="38" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt></block></then></if>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>
        <return pos:line="40" pos:column="9">return;<pos:position pos:line="40" pos:column="16"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="43" pos:column="20"/></name></expr></cpp:if>
    <comment type="block" pos:line="44" pos:column="5">/* no point using the delayIsNoDelay stuff since tunnel is nice and simple */</comment>
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><call><name><name pos:line="45" pos:column="9">conn<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">getPeer<pos:position pos:line="45" pos:column="22"/></name></name><argument_list pos:line="45" pos:column="22">()<pos:position pos:line="45" pos:column="24"/></argument_list></call> <operator pos:line="45" pos:column="25">&amp;&amp;<pos:position pos:line="45" pos:column="35"/></operator> <call><name><name pos:line="45" pos:column="28">conn<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">-&gt;<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="34">getPeer<pos:position pos:line="45" pos:column="41"/></name></name><argument_list pos:line="45" pos:column="41">()<pos:position pos:line="45" pos:column="43"/></argument_list></call><operator pos:line="45" pos:column="43">-&gt;<pos:position pos:line="45" pos:column="48"/></operator><name><name pos:line="45" pos:column="45">options<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">.<pos:position pos:line="45" pos:column="53"/></operator><name pos:line="45" pos:column="53">no_delay<pos:position pos:line="45" pos:column="61"/></name></name></expr>)<pos:position pos:line="45" pos:column="62"/></condition><then pos:line="45" pos:column="62">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="46" pos:column="9">tunnelState<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">server<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">.<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="29">setDelayId<pos:position pos:line="46" pos:column="39"/></name></name><argument_list pos:line="46" pos:column="39">(<argument><expr><call><name pos:line="46" pos:column="40">DelayId<pos:position pos:line="46" pos:column="47"/></name><argument_list pos:line="46" pos:column="47">()<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="49" pos:column="5">tunnelState<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">request<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">hier<pos:position pos:line="49" pos:column="31"/></name><operator pos:line="49" pos:column="31">.<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="32">note<pos:position pos:line="49" pos:column="36"/></name></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">conn<pos:position pos:line="49" pos:column="41"/></name></expr></argument>, <argument><expr><call><name><name pos:line="49" pos:column="43">tunnelState<pos:position pos:line="49" pos:column="54"/></name><operator pos:line="49" pos:column="54">-&gt;<pos:position pos:line="49" pos:column="59"/></operator><name pos:line="49" pos:column="56">getHost<pos:position pos:line="49" pos:column="63"/></name></name><argument_list pos:line="49" pos:column="63">()<pos:position pos:line="49" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">tunnelState<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">server<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">.<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="25">conn<pos:position pos:line="51" pos:column="29"/></name></name> <operator pos:line="51" pos:column="30">=<pos:position pos:line="51" pos:column="31"/></operator> <name pos:line="51" pos:column="32">conn<pos:position pos:line="51" pos:column="36"/></name></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">tunnelState<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">request<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">peer_host<pos:position pos:line="52" pos:column="36"/></name></name> <operator pos:line="52" pos:column="37">=<pos:position pos:line="52" pos:column="38"/></operator> <ternary><condition><expr><call><name><name pos:line="52" pos:column="39">conn<pos:position pos:line="52" pos:column="43"/></name><operator pos:line="52" pos:column="43">-&gt;<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="45">getPeer<pos:position pos:line="52" pos:column="52"/></name></name><argument_list pos:line="52" pos:column="52">()<pos:position pos:line="52" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="52" pos:column="56"/></condition><then pos:line="52" pos:column="56"> <expr><call><name><name pos:line="52" pos:column="57">conn<pos:position pos:line="52" pos:column="61"/></name><operator pos:line="52" pos:column="61">-&gt;<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="63">getPeer<pos:position pos:line="52" pos:column="70"/></name></name><argument_list pos:line="52" pos:column="70">()<pos:position pos:line="52" pos:column="72"/></argument_list></call><operator pos:line="52" pos:column="72">-&gt;<pos:position pos:line="52" pos:column="77"/></operator><name pos:line="52" pos:column="74">host<pos:position pos:line="52" pos:column="78"/></name></expr> <pos:position pos:line="52" pos:column="79"/></then><else pos:line="52" pos:column="79">: <expr><name pos:line="52" pos:column="81">NULL<pos:position pos:line="52" pos:column="85"/></name></expr></else></ternary></expr>;<pos:position pos:line="52" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">comm_add_close_handler<pos:position pos:line="53" pos:column="27"/></name><argument_list pos:line="53" pos:column="27">(<argument><expr><name><name pos:line="53" pos:column="28">conn<pos:position pos:line="53" pos:column="32"/></name><operator pos:line="53" pos:column="32">-&gt;<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="34">fd<pos:position pos:line="53" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="38">tunnelServerClosed<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="58">tunnelState<pos:position pos:line="53" pos:column="69"/></name></expr></argument>)<pos:position pos:line="53" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">debugs<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><literal type="number" pos:line="55" pos:column="12">26<pos:position pos:line="55" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="16">4<pos:position pos:line="55" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="19">HERE<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">&lt;&lt;<pos:position pos:line="55" pos:column="32"/></operator> <literal type="string" pos:line="55" pos:column="27">"determine post-connect handling pathway."<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="71"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name><name pos:line="56" pos:column="9">conn<pos:position pos:line="56" pos:column="13"/></name><operator pos:line="56" pos:column="13">-&gt;<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="15">getPeer<pos:position pos:line="56" pos:column="22"/></name></name><argument_list pos:line="56" pos:column="22">()<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="25"/></condition><then pos:line="56" pos:column="25"> <block pos:line="56" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">tunnelState<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">request<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">peer_login<pos:position pos:line="57" pos:column="41"/></name></name> <operator pos:line="57" pos:column="42">=<pos:position pos:line="57" pos:column="43"/></operator> <call><name><name pos:line="57" pos:column="44">conn<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">-&gt;<pos:position pos:line="57" pos:column="53"/></operator><name pos:line="57" pos:column="50">getPeer<pos:position pos:line="57" pos:column="57"/></name></name><argument_list pos:line="57" pos:column="57">()<pos:position pos:line="57" pos:column="59"/></argument_list></call><operator pos:line="57" pos:column="59">-&gt;<pos:position pos:line="57" pos:column="64"/></operator><name pos:line="57" pos:column="61">login<pos:position pos:line="57" pos:column="66"/></name></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">tunnelState<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">request<pos:position pos:line="58" pos:column="29"/></name><operator pos:line="58" pos:column="29">-&gt;<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="31">peer_domain<pos:position pos:line="58" pos:column="42"/></name></name> <operator pos:line="58" pos:column="43">=<pos:position pos:line="58" pos:column="44"/></operator> <call><name><name pos:line="58" pos:column="45">conn<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">getPeer<pos:position pos:line="58" pos:column="58"/></name></name><argument_list pos:line="58" pos:column="58">()<pos:position pos:line="58" pos:column="60"/></argument_list></call><operator pos:line="58" pos:column="60">-&gt;<pos:position pos:line="58" pos:column="65"/></operator><name pos:line="58" pos:column="62">domain<pos:position pos:line="58" pos:column="68"/></name></expr>;<pos:position pos:line="58" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">tunnelState<pos:position pos:line="59" pos:column="20"/></name><operator pos:line="59" pos:column="20">-&gt;<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="22">request<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">flags<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">.<pos:position pos:line="59" pos:column="37"/></operator><name pos:line="59" pos:column="37">proxying<pos:position pos:line="59" pos:column="45"/></name></name> <operator pos:line="59" pos:column="46">=<pos:position pos:line="59" pos:column="47"/></operator> <operator pos:line="59" pos:column="48">!<pos:position pos:line="59" pos:column="49"/></operator><operator pos:line="59" pos:column="49">(<pos:position pos:line="59" pos:column="50"/></operator><call><name><name pos:line="59" pos:column="50">conn<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">-&gt;<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="56">getPeer<pos:position pos:line="59" pos:column="63"/></name></name><argument_list pos:line="59" pos:column="63">()<pos:position pos:line="59" pos:column="65"/></argument_list></call><operator pos:line="59" pos:column="65">-&gt;<pos:position pos:line="59" pos:column="70"/></operator><name><name pos:line="59" pos:column="67">options<pos:position pos:line="59" pos:column="74"/></name><operator pos:line="59" pos:column="74">.<pos:position pos:line="59" pos:column="75"/></operator><name pos:line="59" pos:column="75">originserver<pos:position pos:line="59" pos:column="87"/></name></name><operator pos:line="59" pos:column="87">)<pos:position pos:line="59" pos:column="88"/></operator></expr>;<pos:position pos:line="59" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then> <else pos:line="60" pos:column="7">else <block pos:line="60" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">tunnelState<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">request<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">peer_login<pos:position pos:line="61" pos:column="41"/></name></name> <operator pos:line="61" pos:column="42">=<pos:position pos:line="61" pos:column="43"/></operator> <name pos:line="61" pos:column="44">NULL<pos:position pos:line="61" pos:column="48"/></name></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">tunnelState<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">request<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">-&gt;<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="31">peer_domain<pos:position pos:line="62" pos:column="42"/></name></name> <operator pos:line="62" pos:column="43">=<pos:position pos:line="62" pos:column="44"/></operator> <name pos:line="62" pos:column="45">NULL<pos:position pos:line="62" pos:column="49"/></name></expr>;<pos:position pos:line="62" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">tunnelState<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">request<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">flags<pos:position pos:line="63" pos:column="36"/></name><operator pos:line="63" pos:column="36">.<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">proxying<pos:position pos:line="63" pos:column="45"/></name></name> <operator pos:line="63" pos:column="46">=<pos:position pos:line="63" pos:column="47"/></operator> <literal type="boolean" pos:line="63" pos:column="48">false<pos:position pos:line="63" pos:column="53"/></literal></expr>;<pos:position pos:line="63" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></else></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name><name pos:line="66" pos:column="9">tunnelState<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">request<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">flags<pos:position pos:line="66" pos:column="36"/></name><operator pos:line="66" pos:column="36">.<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="37">proxying<pos:position pos:line="66" pos:column="45"/></name></name></expr>)<pos:position pos:line="66" pos:column="46"/></condition><then pos:line="66" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="67" pos:column="9">tunnelState<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">connectToPeer<pos:position pos:line="67" pos:column="35"/></name></name><argument_list pos:line="67" pos:column="35">()<pos:position pos:line="67" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="68" pos:column="5">else <block pos:line="68" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">tunnelConnected<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">conn<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="31">tunnelState<pos:position pos:line="69" pos:column="42"/></name></expr></argument>)<pos:position pos:line="69" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></else></if>

    <decl_stmt><decl><type><name><name pos:line="72" pos:column="5">AsyncCall<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">::<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">Pointer<pos:position pos:line="72" pos:column="23"/></name></name></type> <name pos:line="72" pos:column="24">timeoutCall<pos:position pos:line="72" pos:column="35"/></name> <init pos:line="72" pos:column="36">= <expr><call><name pos:line="72" pos:column="38">commCbCall<pos:position pos:line="72" pos:column="48"/></name><argument_list pos:line="72" pos:column="48">(<argument><expr><literal type="number" pos:line="72" pos:column="49">5<pos:position pos:line="72" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="72" pos:column="52">4<pos:position pos:line="72" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="55">"tunnelTimeout"<pos:position pos:line="72" pos:column="70"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="73" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="73" pos:column="57"/></name><argument_list pos:line="73" pos:column="57">(<argument><expr><name pos:line="73" pos:column="58">tunnelTimeout<pos:position pos:line="73" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="73">tunnelState<pos:position pos:line="73" pos:column="84"/></name></expr></argument>)<pos:position pos:line="73" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="73" pos:column="87"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">commSetConnTimeout<pos:position pos:line="74" pos:column="23"/></name><argument_list pos:line="74" pos:column="23">(<argument><expr><name pos:line="74" pos:column="24">conn<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="30">Config<pos:position pos:line="74" pos:column="36"/></name><operator pos:line="74" pos:column="36">.<pos:position pos:line="74" pos:column="37"/></operator><name pos:line="74" pos:column="37">Timeout<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">.<pos:position pos:line="74" pos:column="45"/></operator><name pos:line="74" pos:column="45">read<pos:position pos:line="74" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">timeoutCall<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="64"/></expr_stmt>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

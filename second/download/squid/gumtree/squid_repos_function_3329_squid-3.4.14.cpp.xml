<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3329_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Comm<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">ConnectionPointer<pos:position pos:line="1" pos:column="24"/></name></name></type>
<name><name pos:line="2" pos:column="1">PconnPool<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">pop<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name><name pos:line="2" pos:column="22">Comm<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">ConnectionPointer<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">destLink<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">char<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">domain<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">bool<pos:position pos:line="2" pos:column="81"/></name></type> <name pos:line="2" pos:column="82">isRetriable<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type> <name pos:line="4" pos:column="18">aKey<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><call><name pos:line="4" pos:column="25">key<pos:position pos:line="4" pos:column="28"/></name><argument_list pos:line="4" pos:column="28">(<argument><expr><name pos:line="4" pos:column="29">destLink<pos:position pos:line="4" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">domain<pos:position pos:line="4" pos:column="45"/></name></expr></argument>)<pos:position pos:line="4" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">IdleConnList<pos:position pos:line="6" pos:column="17"/></name> <modifier pos:line="6" pos:column="18">*<pos:position pos:line="6" pos:column="19"/></modifier></type><name pos:line="6" pos:column="19">list<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><operator pos:line="6" pos:column="26">(<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">IdleConnList<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></operator><operator pos:line="6" pos:column="41">)<pos:position pos:line="6" pos:column="42"/></operator><call><name pos:line="6" pos:column="42">hash_lookup<pos:position pos:line="6" pos:column="53"/></name><argument_list pos:line="6" pos:column="53">(<argument><expr><name pos:line="6" pos:column="54">table<pos:position pos:line="6" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="61">aKey<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">list<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">NULL<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">48<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">3<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">HERE<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">&lt;&lt;<pos:position pos:line="8" pos:column="36"/></operator> <literal type="string" pos:line="8" pos:column="31">"lookup for key {"<pos:position pos:line="8" pos:column="49"/></literal> <operator pos:line="8" pos:column="50">&lt;&lt;<pos:position pos:line="8" pos:column="58"/></operator> <name pos:line="8" pos:column="53">aKey<pos:position pos:line="8" pos:column="57"/></name> <operator pos:line="8" pos:column="58">&lt;&lt;<pos:position pos:line="8" pos:column="66"/></operator> <literal type="string" pos:line="8" pos:column="61">"} failed."<pos:position pos:line="8" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="74"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><call><name><name pos:line="9" pos:column="16">Comm<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">::<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">ConnectionPointer<pos:position pos:line="9" pos:column="39"/></name></name><argument_list pos:line="9" pos:column="39">()<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <else pos:line="10" pos:column="7">else <block pos:line="10" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">48<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">HERE<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&lt;&lt;<pos:position pos:line="11" pos:column="36"/></operator> <literal type="string" pos:line="11" pos:column="31">"found "<pos:position pos:line="11" pos:column="39"/></literal> <operator pos:line="11" pos:column="40">&lt;&lt;<pos:position pos:line="11" pos:column="48"/></operator> <call><name pos:line="11" pos:column="43">hashKeyStr<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">(<argument><expr><operator pos:line="11" pos:column="54">&amp;<pos:position pos:line="11" pos:column="59"/></operator><name><name pos:line="11" pos:column="55">list<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">hash<pos:position pos:line="11" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="66"/></argument_list></call> <operator pos:line="11" pos:column="67">&lt;&lt;<pos:position pos:line="11" pos:column="75"/></operator> <operator pos:line="11" pos:column="70">(<pos:position pos:line="11" pos:column="71"/></operator><ternary><condition><expr><name pos:line="11" pos:column="71">isRetriable<pos:position pos:line="11" pos:column="82"/></name></expr>?<pos:position pos:line="11" pos:column="83"/></condition><then><expr><literal type="string" pos:line="11" pos:column="83">"(to use)"<pos:position pos:line="11" pos:column="93"/></literal></expr></then><else pos:line="11" pos:column="93">:<expr><literal type="string" pos:line="11" pos:column="94">"(to kill)"<pos:position pos:line="11" pos:column="105"/></literal></expr></else></ternary><operator pos:line="11" pos:column="105">)<pos:position pos:line="11" pos:column="106"/></operator></expr></argument> )<pos:position pos:line="11" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="109"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="14" pos:column="5">/* may delete list */</comment>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">Comm<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">::<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">ConnectionPointer<pos:position pos:line="15" pos:column="28"/></name></name></type> <name pos:line="15" pos:column="29">temp<pos:position pos:line="15" pos:column="33"/></name> <init pos:line="15" pos:column="34">= <expr><call><name><name pos:line="15" pos:column="36">list<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">-&gt;<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="42">findUseable<pos:position pos:line="15" pos:column="53"/></name></name><argument_list pos:line="15" pos:column="53">(<argument><expr><name pos:line="15" pos:column="54">destLink<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="64"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">isRetriable<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">&amp;&amp;<pos:position pos:line="16" pos:column="32"/></operator> <call><name><name pos:line="16" pos:column="25">Comm<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">::<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">IsConnOpen<pos:position pos:line="16" pos:column="41"/></name></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">temp<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="9">temp<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">close<pos:position pos:line="17" pos:column="20"/></name></name><argument_list pos:line="17" pos:column="20">()<pos:position pos:line="17" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt></block></then></if>

    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">temp<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

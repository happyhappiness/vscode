<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6792_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ipc<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">StrandCoord<pos:position pos:line="1" pos:column="17"/></name></name><modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type> <name><name pos:line="1" pos:column="19">Ipc<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Coordinator<pos:position pos:line="1" pos:column="35"/></name><operator pos:line="1" pos:column="35">::<pos:position pos:line="1" pos:column="37"/></operator><name pos:line="1" pos:column="37">findStrand<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">int<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">kidId<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <typedef pos:line="3" pos:column="5">typedef <type><name><name pos:line="3" pos:column="13">StrandCoords<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">::<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">iterator<pos:position pos:line="3" pos:column="35"/></name></name></type> <name pos:line="3" pos:column="36">SI<pos:position pos:line="3" pos:column="38"/></name>;<pos:position pos:line="3" pos:column="39"/></typedef>
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">SI<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">iter<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name><name pos:line="4" pos:column="20">strands_<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">.<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">begin<pos:position pos:line="4" pos:column="34"/></name></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></init> <condition><expr><name pos:line="4" pos:column="38">iter<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">!=<pos:position pos:line="4" pos:column="45"/></operator> <call><name><name pos:line="4" pos:column="46">strands_<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">.<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">end<pos:position pos:line="4" pos:column="58"/></name></name><argument_list pos:line="4" pos:column="58">()<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></condition> <incr><expr><operator pos:line="4" pos:column="62">++<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="64">iter<pos:position pos:line="4" pos:column="68"/></name></expr></incr>)<pos:position pos:line="4" pos:column="69"/></control> <block pos:line="4" pos:column="70">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">iter<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">kidId<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">==<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="28">kidId<pos:position pos:line="5" pos:column="33"/></name></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><operator pos:line="6" pos:column="20">&amp;<pos:position pos:line="6" pos:column="25"/></operator><operator pos:line="6" pos:column="21">(<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">iter<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator></expr>;<pos:position pos:line="6" pos:column="29"/></return></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></for>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">NULL<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1285_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">String<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">reset<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">str<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">PROF_start<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">StringReset<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">clean<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">()<pos:position pos:line="5" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="13"/></expr_stmt> <comment type="line" pos:line="5" pos:column="14">// TODO: optimize to avoid cleaning the buffer if we can reuse it</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">str<pos:position pos:line="6" pos:column="12"/></name></expr>)<pos:position pos:line="6" pos:column="13"/></condition><then pos:line="6" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">allocAndFill<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">str<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="27">strlen<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">str<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">PROF_stop<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><name pos:line="8" pos:column="15">StringReset<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

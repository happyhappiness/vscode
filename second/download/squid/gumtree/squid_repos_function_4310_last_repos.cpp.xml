<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4310_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLServerNameStrategy<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">match<pos:position pos:line="2" pos:column="29"/></name></name> <parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name><name pos:line="2" pos:column="31">ACLData<pos:position pos:line="2" pos:column="38"/></name><argument_list type="generic" pos:line="2" pos:column="38">&lt;<argument><expr><name pos:line="2" pos:column="39">MatchType<pos:position pos:line="2" pos:column="48"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="52"/></argument_list></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">data<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">ACLFilledChecklist<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">checklist<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">checklist<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">!=<pos:position pos:line="4" pos:column="24"/></operator> <name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">&amp;&amp;<pos:position pos:line="4" pos:column="40"/></operator> <name><name pos:line="4" pos:column="33">checklist<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">request<pos:position pos:line="4" pos:column="51"/></name></name> <operator pos:line="4" pos:column="52">!=<pos:position pos:line="4" pos:column="54"/></operator> <name pos:line="4" pos:column="55">NULL<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">serverName<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><literal type="null" pos:line="6" pos:column="30">nullptr<pos:position pos:line="6" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SBuf<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">clientSniKeeper<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt> <comment type="line" pos:line="7" pos:column="27">// because c_str() is not constant</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<decl><type><name pos:line="8" pos:column="9">ConnStateData<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">conn<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><call><name><name pos:line="8" pos:column="31">checklist<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">conn<pos:position pos:line="8" pos:column="46"/></name></name><argument_list pos:line="8" pos:column="46">()<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></init></decl>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">clientRequestedServerName<pos:position pos:line="9" pos:column="46"/></name> <init pos:line="9" pos:column="47">= <expr><literal type="null" pos:line="9" pos:column="49">nullptr<pos:position pos:line="9" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">clientSniKeeper<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <call><name><name pos:line="10" pos:column="27">conn<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">tlsClientSni<pos:position pos:line="10" pos:column="45"/></name></name><argument_list pos:line="10" pos:column="45">()<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">clientSniKeeper<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">isEmpty<pos:position pos:line="11" pos:column="36"/></name></name><argument_list pos:line="11" pos:column="36">()<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <block pos:line="11" pos:column="40">{
            <decl_stmt><decl><type><specifier pos:line="12" pos:column="13">const<pos:position pos:line="12" pos:column="18"/></specifier> <name pos:line="12" pos:column="19">char<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">host<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><call><name><name pos:line="12" pos:column="32">checklist<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">request<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">-&gt;<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="52">url<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">.<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="56">host<pos:position pos:line="12" pos:column="60"/></name></name><argument_list pos:line="12" pos:column="60">()<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="63"/></decl_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">host<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="25">*<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">host<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <comment type="line" pos:line="13" pos:column="32">// paranoid first condition: host() is never nil</comment>
                <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="17">clientRequestedServerName<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">=<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="45">host<pos:position pos:line="14" pos:column="49"/></name></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt></block></then></if>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="13">clientRequestedServerName<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">=<pos:position pos:line="16" pos:column="40"/></operator> <call><name><name pos:line="16" pos:column="41">clientSniKeeper<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">.<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">c_str<pos:position pos:line="16" pos:column="62"/></name></name><argument_list pos:line="16" pos:column="62">()<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt></block></else></if>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">useConsensus<pos:position pos:line="18" pos:column="25"/></name></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26"> <block pos:line="18" pos:column="27">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">X509<pos:position pos:line="19" pos:column="17"/></name> <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier></type><name pos:line="19" pos:column="19">peer_cert<pos:position pos:line="19" pos:column="28"/></name> <init pos:line="19" pos:column="29">= <expr><ternary><condition><expr><call><name><name pos:line="19" pos:column="31">conn<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">serverBump<pos:position pos:line="19" pos:column="47"/></name></name><argument_list pos:line="19" pos:column="47">()<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr> ?<pos:position pos:line="19" pos:column="51"/></condition><then pos:line="19" pos:column="51"> <expr><call><name><name pos:line="19" pos:column="52">conn<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">serverBump<pos:position pos:line="19" pos:column="68"/></name></name><argument_list pos:line="19" pos:column="68">()<pos:position pos:line="19" pos:column="70"/></argument_list></call><operator pos:line="19" pos:column="70">-&gt;<pos:position pos:line="19" pos:column="75"/></operator><call><name><name pos:line="19" pos:column="72">serverCert<pos:position pos:line="19" pos:column="82"/></name><operator pos:line="19" pos:column="82">.<pos:position pos:line="19" pos:column="83"/></operator><name pos:line="19" pos:column="83">get<pos:position pos:line="19" pos:column="86"/></name></name><argument_list pos:line="19" pos:column="86">()<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr> <pos:position pos:line="19" pos:column="89"/></then><else pos:line="19" pos:column="89">: <expr><literal type="null" pos:line="19" pos:column="91">nullptr<pos:position pos:line="19" pos:column="98"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="19" pos:column="99"/></decl_stmt>
            <comment type="line" pos:line="20" pos:column="13">// use the client requested name if it matches the server</comment>
            <comment type="line" pos:line="21" pos:column="13">// certificate or if the certificate is not available</comment>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><operator pos:line="22" pos:column="17">!<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">peer_cert<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">||<pos:position pos:line="22" pos:column="30"/></operator> <call><name><name pos:line="22" pos:column="31">Ssl<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">::<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">checkX509ServerValidity<pos:position pos:line="22" pos:column="59"/></name></name><argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">peer_cert<pos:position pos:line="22" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="71">clientRequestedServerName<pos:position pos:line="22" pos:column="96"/></name></expr></argument>)<pos:position pos:line="22" pos:column="97"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="98"/></condition><then pos:line="22" pos:column="98">
                <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">serverName<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">clientRequestedServerName<pos:position pos:line="23" pos:column="55"/></name></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then> <elseif pos:line="24" pos:column="11">else <if pos:line="24" pos:column="16">if <condition pos:line="24" pos:column="19">(<expr><name pos:line="24" pos:column="20">useClientRequested<pos:position pos:line="24" pos:column="38"/></name></expr>)<pos:position pos:line="24" pos:column="39"/></condition><then pos:line="24" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">serverName<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">clientRequestedServerName<pos:position pos:line="25" pos:column="51"/></name></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt></block></then></if></elseif>
        <else pos:line="26" pos:column="9">else <block pos:line="26" pos:column="14">{ <comment type="line" pos:line="26" pos:column="16">// either no options or useServerProvided</comment>
            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<decl><type><name pos:line="27" pos:column="17">X509<pos:position pos:line="27" pos:column="21"/></name> <modifier pos:line="27" pos:column="22">*<pos:position pos:line="27" pos:column="23"/></modifier></type><name pos:line="27" pos:column="23">peer_cert<pos:position pos:line="27" pos:column="32"/></name> <init pos:line="27" pos:column="33">= <expr><operator pos:line="27" pos:column="35">(<pos:position pos:line="27" pos:column="36"/></operator><ternary><condition><expr><call><name><name pos:line="27" pos:column="36">conn<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-&gt;<pos:position pos:line="27" pos:column="45"/></operator><name pos:line="27" pos:column="42">serverBump<pos:position pos:line="27" pos:column="52"/></name></name><argument_list pos:line="27" pos:column="52">()<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr> ?<pos:position pos:line="27" pos:column="56"/></condition><then pos:line="27" pos:column="56"> <expr><call><name><name pos:line="27" pos:column="57">conn<pos:position pos:line="27" pos:column="61"/></name><operator pos:line="27" pos:column="61">-&gt;<pos:position pos:line="27" pos:column="66"/></operator><name pos:line="27" pos:column="63">serverBump<pos:position pos:line="27" pos:column="73"/></name></name><argument_list pos:line="27" pos:column="73">()<pos:position pos:line="27" pos:column="75"/></argument_list></call><operator pos:line="27" pos:column="75">-&gt;<pos:position pos:line="27" pos:column="80"/></operator><call><name><name pos:line="27" pos:column="77">serverCert<pos:position pos:line="27" pos:column="87"/></name><operator pos:line="27" pos:column="87">.<pos:position pos:line="27" pos:column="88"/></operator><name pos:line="27" pos:column="88">get<pos:position pos:line="27" pos:column="91"/></name></name><argument_list pos:line="27" pos:column="91">()<pos:position pos:line="27" pos:column="93"/></argument_list></call></expr> <pos:position pos:line="27" pos:column="94"/></then><else pos:line="27" pos:column="94">: <expr><literal type="null" pos:line="27" pos:column="96">nullptr<pos:position pos:line="27" pos:column="103"/></literal></expr></else></ternary><operator pos:line="27" pos:column="103">)<pos:position pos:line="27" pos:column="104"/></operator></expr></init></decl>)<pos:position pos:line="27" pos:column="105"/></condition><then pos:line="27" pos:column="105">
                <block type="pseudo"><return pos:line="28" pos:column="17">return <expr><call><name><name pos:line="28" pos:column="24">Ssl<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">::<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="29">matchX509CommonNames<pos:position pos:line="28" pos:column="49"/></name></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">peer_cert<pos:position pos:line="28" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="61">(<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="62">void<pos:position pos:line="28" pos:column="66"/></name> <operator pos:line="28" pos:column="67">*<pos:position pos:line="28" pos:column="68"/></operator><operator pos:line="28" pos:column="68">)<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="69">data<pos:position pos:line="28" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="75">check_cert_domain<pos:position pos:line="28" pos:column="92"/></name><argument_list type="generic" pos:line="28" pos:column="92">&lt;<argument><expr><name pos:line="28" pos:column="93">MatchType<pos:position pos:line="28" pos:column="102"/></name></expr></argument>&gt;<pos:position pos:line="28" pos:column="106"/></argument_list></name></expr></argument>)<pos:position pos:line="28" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="105"/></return></block></then></if>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><operator pos:line="29" pos:column="17">!<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">useServerProvided<pos:position pos:line="29" pos:column="35"/></name></expr>)<pos:position pos:line="29" pos:column="36"/></condition><then pos:line="29" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">serverName<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">clientRequestedServerName<pos:position pos:line="30" pos:column="55"/></name></expr>;<pos:position pos:line="30" pos:column="56"/></expr_stmt></block></then></if>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">serverName<pos:position pos:line="34" pos:column="20"/></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">serverName<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <literal type="string" pos:line="35" pos:column="22">"none"<pos:position pos:line="35" pos:column="28"/></literal></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt></block></then></if>

    <return pos:line="37" pos:column="5">return <expr><call><name><name pos:line="37" pos:column="12">data<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">match<pos:position pos:line="37" pos:column="23"/></name></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">serverName<pos:position pos:line="37" pos:column="34"/></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

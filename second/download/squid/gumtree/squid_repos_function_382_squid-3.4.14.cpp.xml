<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_382_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">username<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">256<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">password<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><literal type="number" pos:line="5" pos:column="19">256<pos:position pos:line="5" pos:column="22"/></literal></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">wstr<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">256<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">openlog<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="string" pos:line="9" pos:column="13">"msnt_auth"<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="26">LOG_PID<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">LOG_USER<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">setbuf<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">stdout<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Read configuration file. Abort wildly if error. */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">OpenConfigFile<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">()<pos:position pos:line="13" pos:column="25"/></argument_list></call> <operator pos:line="13" pos:column="26">==<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">1<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/*
     * Read denied and allowed user files.
     * If they fails, there is a serious problem.
     * Check syslog messages. Deny all users while in this state.
     * The msntauth process should then be killed.
     */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><call><name pos:line="22" pos:column="10">Read_denyusers<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call> <operator pos:line="22" pos:column="27">==<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator> <operator pos:line="22" pos:column="33">||<pos:position pos:line="22" pos:column="35"/></operator> <operator pos:line="22" pos:column="36">(<pos:position pos:line="22" pos:column="37"/></operator><call><name pos:line="22" pos:column="37">Read_allowusers<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">()<pos:position pos:line="22" pos:column="54"/></argument_list></call> <operator pos:line="22" pos:column="55">==<pos:position pos:line="22" pos:column="57"/></operator> <literal type="number" pos:line="22" pos:column="58">1<pos:position pos:line="22" pos:column="59"/></literal><operator pos:line="22" pos:column="59">)<pos:position pos:line="22" pos:column="60"/></operator></expr>)<pos:position pos:line="22" pos:column="61"/></condition><then pos:line="22" pos:column="61"> <block pos:line="22" pos:column="62">{
        <while pos:line="23" pos:column="9">while <condition pos:line="23" pos:column="15">(<expr><literal type="number" pos:line="23" pos:column="16">1<pos:position pos:line="23" pos:column="17"/></literal></expr>)<pos:position pos:line="23" pos:column="18"/></condition> <block pos:line="23" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">memset<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">wstr<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="24" pos:column="26">'\0'<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="32">sizeof<argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">wstr<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><call><name pos:line="25" pos:column="17">fgets<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">wstr<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="29">255<pos:position pos:line="25" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">stdin<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call> <operator pos:line="25" pos:column="41">==<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">NULL<pos:position pos:line="25" pos:column="48"/></name></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
                <block type="pseudo"><break pos:line="26" pos:column="17">break;<pos:position pos:line="26" pos:column="23"/></break></block></then></if>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">puts<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><literal type="string" pos:line="27" pos:column="18">"ERR"<pos:position pos:line="27" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></while>
        <return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="32" pos:column="5">/*
     * Make Check_forchange() the handle for HUP signals.
     * Don't use alarms any more. I don't think it was very
     * portable between systems.
     * XXX this should be sigaction()
     */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">signal<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name pos:line="38" pos:column="12">SIGHUP<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="20">Check_forchange<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>

    <while pos:line="40" pos:column="5">while <condition pos:line="40" pos:column="11">(<expr><literal type="number" pos:line="40" pos:column="12">1<pos:position pos:line="40" pos:column="13"/></literal></expr>)<pos:position pos:line="40" pos:column="14"/></condition> <block pos:line="40" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">int<pos:position pos:line="41" pos:column="12"/></name></type> <name pos:line="41" pos:column="13">n<pos:position pos:line="41" pos:column="14"/></name></decl>;<pos:position pos:line="41" pos:column="15"/></decl_stmt>
        <comment type="block" pos:line="42" pos:column="9">/* Read whole line from standard input. Terminate on break. */</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">memset<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">wstr<pos:position pos:line="43" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="43" pos:column="22">'\0'<pos:position pos:line="43" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="28">sizeof<argument_list pos:line="43" pos:column="34">(<argument><expr><name pos:line="43" pos:column="35">wstr<pos:position pos:line="43" pos:column="39"/></name></expr></argument>)<pos:position pos:line="43" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="42"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name pos:line="44" pos:column="13">fgets<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">wstr<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="25">255<pos:position pos:line="44" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">stdin<pos:position pos:line="44" pos:column="35"/></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call> <operator pos:line="44" pos:column="37">==<pos:position pos:line="44" pos:column="39"/></operator> <name pos:line="44" pos:column="40">NULL<pos:position pos:line="44" pos:column="44"/></name></expr>)<pos:position pos:line="44" pos:column="45"/></condition><then pos:line="44" pos:column="45">
            <block type="pseudo"><break pos:line="45" pos:column="13">break;<pos:position pos:line="45" pos:column="19"/></break></block></then></if>
        <comment type="block" pos:line="46" pos:column="9">/* ignore this line if we didn't get the end-of-line marker */</comment>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">NULL<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">==<pos:position pos:line="47" pos:column="20"/></operator> <call><name pos:line="47" pos:column="21">strchr<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">wstr<pos:position pos:line="47" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="47" pos:column="34">'\n'<pos:position pos:line="47" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="40"/></condition><then pos:line="47" pos:column="40"> <block pos:line="47" pos:column="41">{
            <expr_stmt><expr><name pos:line="48" pos:column="13">err<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <literal type="number" pos:line="48" pos:column="19">1<pos:position pos:line="48" pos:column="20"/></literal></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>
            <continue pos:line="49" pos:column="13">continue;<pos:position pos:line="49" pos:column="22"/></continue>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">err<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17"> <block pos:line="51" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">syslog<pos:position pos:line="52" pos:column="19"/></name><argument_list pos:line="52" pos:column="19">(<argument><expr><name pos:line="52" pos:column="20">LOG_WARNING<pos:position pos:line="52" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="33">"oversized message"<pos:position pos:line="52" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">puts<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><literal type="string" pos:line="53" pos:column="18">"ERR"<pos:position pos:line="53" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="54" pos:column="13">err<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
            <continue pos:line="55" pos:column="13">continue;<pos:position pos:line="55" pos:column="22"/></continue>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="58" pos:column="9">/*
         * extract username and password.
         * XXX is sscanf() safe?
         */</comment>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">username<pos:position pos:line="62" pos:column="17"/></name><index pos:line="62" pos:column="17">[<expr><literal type="number" pos:line="62" pos:column="18">0<pos:position pos:line="62" pos:column="19"/></literal></expr>]<pos:position pos:line="62" pos:column="20"/></index></name> <operator pos:line="62" pos:column="21">=<pos:position pos:line="62" pos:column="22"/></operator> <literal type="char" pos:line="62" pos:column="23">'\0'<pos:position pos:line="62" pos:column="27"/></literal></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">password<pos:position pos:line="63" pos:column="17"/></name><index pos:line="63" pos:column="17">[<expr><literal type="number" pos:line="63" pos:column="18">0<pos:position pos:line="63" pos:column="19"/></literal></expr>]<pos:position pos:line="63" pos:column="20"/></index></name> <operator pos:line="63" pos:column="21">=<pos:position pos:line="63" pos:column="22"/></operator> <literal type="char" pos:line="63" pos:column="23">'\0'<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">n<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">=<pos:position pos:line="64" pos:column="12"/></operator> <call><name pos:line="64" pos:column="13">sscanf<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><name pos:line="64" pos:column="20">wstr<pos:position pos:line="64" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="26">"%s %[^\n]"<pos:position pos:line="64" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="39">username<pos:position pos:line="64" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">password<pos:position pos:line="64" pos:column="57"/></name></expr></argument>)<pos:position pos:line="64" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="59"/></expr_stmt>
        <if pos:line="65" pos:column="9">if <condition pos:line="65" pos:column="12">(<expr><literal type="number" pos:line="65" pos:column="13">2<pos:position pos:line="65" pos:column="14"/></literal> <operator pos:line="65" pos:column="15">!=<pos:position pos:line="65" pos:column="17"/></operator> <name pos:line="65" pos:column="18">n<pos:position pos:line="65" pos:column="19"/></name></expr>)<pos:position pos:line="65" pos:column="20"/></condition><then pos:line="65" pos:column="20"> <block pos:line="65" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">puts<pos:position pos:line="66" pos:column="17"/></name><argument_list pos:line="66" pos:column="17">(<argument><expr><literal type="string" pos:line="66" pos:column="18">"ERR"<pos:position pos:line="66" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="25"/></expr_stmt>
            <continue pos:line="67" pos:column="13">continue;<pos:position pos:line="67" pos:column="22"/></continue>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="69" pos:column="9">/* Check for invalid or blank entries */</comment>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><operator pos:line="70" pos:column="13">(<pos:position pos:line="70" pos:column="14"/></operator><name><name pos:line="70" pos:column="14">username<pos:position pos:line="70" pos:column="22"/></name><index pos:line="70" pos:column="22">[<expr><literal type="number" pos:line="70" pos:column="23">0<pos:position pos:line="70" pos:column="24"/></literal></expr>]<pos:position pos:line="70" pos:column="25"/></index></name> <operator pos:line="70" pos:column="26">==<pos:position pos:line="70" pos:column="28"/></operator> <literal type="char" pos:line="70" pos:column="29">'\0'<pos:position pos:line="70" pos:column="33"/></literal><operator pos:line="70" pos:column="33">)<pos:position pos:line="70" pos:column="34"/></operator> <operator pos:line="70" pos:column="35">||<pos:position pos:line="70" pos:column="37"/></operator> <operator pos:line="70" pos:column="38">(<pos:position pos:line="70" pos:column="39"/></operator><name><name pos:line="70" pos:column="39">password<pos:position pos:line="70" pos:column="47"/></name><index pos:line="70" pos:column="47">[<expr><literal type="number" pos:line="70" pos:column="48">0<pos:position pos:line="70" pos:column="49"/></literal></expr>]<pos:position pos:line="70" pos:column="50"/></index></name> <operator pos:line="70" pos:column="51">==<pos:position pos:line="70" pos:column="53"/></operator> <literal type="char" pos:line="70" pos:column="54">'\0'<pos:position pos:line="70" pos:column="58"/></literal><operator pos:line="70" pos:column="58">)<pos:position pos:line="70" pos:column="59"/></operator></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60"> <block pos:line="70" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">puts<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><literal type="string" pos:line="71" pos:column="18">"ERR"<pos:position pos:line="71" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="25"/></expr_stmt>
            <continue pos:line="72" pos:column="13">continue;<pos:position pos:line="72" pos:column="22"/></continue>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">Checktimer<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">()<pos:position pos:line="74" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="74" pos:column="33">/* Check if the user lists have changed */</comment>

        <expr_stmt><expr><call><name pos:line="76" pos:column="9">rfc1738_unescape<pos:position pos:line="76" pos:column="25"/></name><argument_list pos:line="76" pos:column="25">(<argument><expr><name pos:line="76" pos:column="26">username<pos:position pos:line="76" pos:column="34"/></name></expr></argument>)<pos:position pos:line="76" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="77" pos:column="9">rfc1738_unescape<pos:position pos:line="77" pos:column="25"/></name><argument_list pos:line="77" pos:column="25">(<argument><expr><name pos:line="77" pos:column="26">password<pos:position pos:line="77" pos:column="34"/></name></expr></argument>)<pos:position pos:line="77" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt>

        <comment type="block" pos:line="79" pos:column="9">/*
         * Check if user is explicitly denied or allowed.
         * If user passes both checks, they can be authenticated.
         */</comment>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><call><name pos:line="83" pos:column="13">Check_user<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">username<pos:position pos:line="83" pos:column="32"/></name></expr></argument>)<pos:position pos:line="83" pos:column="33"/></argument_list></call> <operator pos:line="83" pos:column="34">==<pos:position pos:line="83" pos:column="36"/></operator> <literal type="number" pos:line="83" pos:column="37">1<pos:position pos:line="83" pos:column="38"/></literal></expr>)<pos:position pos:line="83" pos:column="39"/></condition><then pos:line="83" pos:column="39"> <block pos:line="83" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">syslog<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">LOG_INFO<pos:position pos:line="84" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="30">"'%s' denied"<pos:position pos:line="84" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="45">username<pos:position pos:line="84" pos:column="53"/></name></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">puts<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><literal type="string" pos:line="85" pos:column="18">"ERR"<pos:position pos:line="85" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="86" pos:column="10"/></block></then> <elseif pos:line="86" pos:column="11">else <if pos:line="86" pos:column="16">if <condition pos:line="86" pos:column="19">(<expr><call><name pos:line="86" pos:column="20">QueryServers<pos:position pos:line="86" pos:column="32"/></name><argument_list pos:line="86" pos:column="32">(<argument><expr><name pos:line="86" pos:column="33">username<pos:position pos:line="86" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="43">password<pos:position pos:line="86" pos:column="51"/></name></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></call> <operator pos:line="86" pos:column="53">==<pos:position pos:line="86" pos:column="55"/></operator> <literal type="number" pos:line="86" pos:column="56">0<pos:position pos:line="86" pos:column="57"/></literal></expr>)<pos:position pos:line="86" pos:column="58"/></condition><then pos:line="86" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="13">puts<pos:position pos:line="87" pos:column="17"/></name><argument_list pos:line="87" pos:column="17">(<argument><expr><literal type="string" pos:line="87" pos:column="18">"OK"<pos:position pos:line="87" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="24"/></expr_stmt></block></then></if></elseif>
        <else pos:line="88" pos:column="9">else <block pos:line="88" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">syslog<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><name pos:line="89" pos:column="20">LOG_INFO<pos:position pos:line="89" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="30">"'%s' login failed"<pos:position pos:line="89" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="51">username<pos:position pos:line="89" pos:column="59"/></name></expr></argument>)<pos:position pos:line="89" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">puts<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">(<argument><expr><literal type="string" pos:line="90" pos:column="18">"ERR"<pos:position pos:line="90" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="91" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="92" pos:column="9">err<pos:position pos:line="92" pos:column="12"/></name> <operator pos:line="92" pos:column="13">=<pos:position pos:line="92" pos:column="14"/></operator> <literal type="number" pos:line="92" pos:column="15">0<pos:position pos:line="92" pos:column="16"/></literal></expr>;<pos:position pos:line="92" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></while>

    <return pos:line="95" pos:column="5">return <expr><literal type="number" pos:line="95" pos:column="12">0<pos:position pos:line="95" pos:column="13"/></literal></expr>;<pos:position pos:line="95" pos:column="14"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

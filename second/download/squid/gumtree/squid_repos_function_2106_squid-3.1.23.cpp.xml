<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2106_squid-3.1.23.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">operator<name pos:line="1" pos:column="14">()<pos:position pos:line="1" pos:column="16"/></name></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">StoreMeta<pos:position pos:line="1" pos:column="26"/></name> <specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <modifier pos:line="1" pos:column="33">&amp;<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="34">x<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
        <switch pos:line="2" pos:column="9">switch <condition pos:line="2" pos:column="16">(<expr><call><name><name pos:line="2" pos:column="17">x<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">.<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">getType<pos:position pos:line="2" pos:column="26"/></name></name><argument_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="2" pos:column="29"/></condition> <block pos:line="2" pos:column="30">{

        <case pos:line="4" pos:column="9">case <expr><name pos:line="4" pos:column="14">STORE_META_KEY<pos:position pos:line="4" pos:column="28"/></name></expr>:<pos:position pos:line="4" pos:column="29"/></case>
            <expr_stmt><expr><name><name pos:line="5" pos:column="13">std<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">::<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">cout<pos:position pos:line="5" pos:column="22"/></name></name> <operator pos:line="5" pos:column="23">&lt;&lt;<pos:position pos:line="5" pos:column="31"/></operator> <literal type="string" pos:line="5" pos:column="26">"MD5: "<pos:position pos:line="5" pos:column="33"/></literal> <operator pos:line="5" pos:column="34">&lt;&lt;<pos:position pos:line="5" pos:column="42"/></operator> <call><name pos:line="5" pos:column="37">storeKeyText<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><operator pos:line="5" pos:column="50">(<pos:position pos:line="5" pos:column="51"/></operator><specifier pos:line="5" pos:column="51">const<pos:position pos:line="5" pos:column="56"/></specifier> <name pos:line="5" pos:column="57">cache_key<pos:position pos:line="5" pos:column="66"/></name> <operator pos:line="5" pos:column="67">*<pos:position pos:line="5" pos:column="68"/></operator><operator pos:line="5" pos:column="68">)<pos:position pos:line="5" pos:column="69"/></operator><name><name pos:line="5" pos:column="69">x<pos:position pos:line="5" pos:column="70"/></name><operator pos:line="5" pos:column="70">.<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="71">value<pos:position pos:line="5" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call> <operator pos:line="5" pos:column="78">&lt;&lt;<pos:position pos:line="5" pos:column="86"/></operator> <name><name pos:line="5" pos:column="81">std<pos:position pos:line="5" pos:column="84"/></name><operator pos:line="5" pos:column="84">::<pos:position pos:line="5" pos:column="86"/></operator><name pos:line="5" pos:column="86">endl<pos:position pos:line="5" pos:column="90"/></name></name></expr>;<pos:position pos:line="5" pos:column="91"/></expr_stmt>
            <break pos:line="6" pos:column="13">break;<pos:position pos:line="6" pos:column="19"/></break>

        <case pos:line="8" pos:column="9">case <expr><name pos:line="8" pos:column="14">STORE_META_STD<pos:position pos:line="8" pos:column="28"/></name></expr>:<pos:position pos:line="8" pos:column="29"/></case>
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">std<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">::<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">cout<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">&lt;&lt;<pos:position pos:line="9" pos:column="31"/></operator> <literal type="string" pos:line="9" pos:column="26">"STD, Size:"<pos:position pos:line="9" pos:column="38"/></literal> <operator pos:line="9" pos:column="39">&lt;&lt;<pos:position pos:line="9" pos:column="47"/></operator> <operator pos:line="9" pos:column="42">(<pos:position pos:line="9" pos:column="43"/></operator><operator pos:line="9" pos:column="43">(<pos:position pos:line="9" pos:column="44"/></operator>struct <name pos:line="9" pos:column="51">MetaStd<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">*<pos:position pos:line="9" pos:column="59"/></operator><operator pos:line="9" pos:column="59">)<pos:position pos:line="9" pos:column="60"/></operator><name><name pos:line="9" pos:column="60">x<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">.<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="62">value<pos:position pos:line="9" pos:column="67"/></name></name><operator pos:line="9" pos:column="67">)<pos:position pos:line="9" pos:column="68"/></operator><operator pos:line="9" pos:column="68">-&gt;<pos:position pos:line="9" pos:column="73"/></operator><name pos:line="9" pos:column="70">swap_file_sz<pos:position pos:line="9" pos:column="82"/></name> <operator pos:line="9" pos:column="83">&lt;&lt;<pos:position pos:line="9" pos:column="91"/></operator>
                      <literal type="string" pos:line="10" pos:column="23">" Flags: 0x"<pos:position pos:line="10" pos:column="35"/></literal> <operator pos:line="10" pos:column="36">&lt;&lt;<pos:position pos:line="10" pos:column="44"/></operator> <name><name pos:line="10" pos:column="39">std<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">::<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">hex<pos:position pos:line="10" pos:column="47"/></name></name> <operator pos:line="10" pos:column="48">&lt;&lt;<pos:position pos:line="10" pos:column="56"/></operator> <operator pos:line="10" pos:column="51">(<pos:position pos:line="10" pos:column="52"/></operator><operator pos:line="10" pos:column="52">(<pos:position pos:line="10" pos:column="53"/></operator>struct <name pos:line="10" pos:column="60">MetaStd<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">*<pos:position pos:line="10" pos:column="68"/></operator><operator pos:line="10" pos:column="68">)<pos:position pos:line="10" pos:column="69"/></operator><name><name pos:line="10" pos:column="69">x<pos:position pos:line="10" pos:column="70"/></name><operator pos:line="10" pos:column="70">.<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">value<pos:position pos:line="10" pos:column="76"/></name></name><operator pos:line="10" pos:column="76">)<pos:position pos:line="10" pos:column="77"/></operator><operator pos:line="10" pos:column="77">-&gt;<pos:position pos:line="10" pos:column="82"/></operator><name pos:line="10" pos:column="79">flags<pos:position pos:line="10" pos:column="84"/></name> <operator pos:line="10" pos:column="85">&lt;&lt;<pos:position pos:line="10" pos:column="93"/></operator> <name><name pos:line="10" pos:column="88">std<pos:position pos:line="10" pos:column="91"/></name><operator pos:line="10" pos:column="91">::<pos:position pos:line="10" pos:column="93"/></operator><name pos:line="10" pos:column="93">dec<pos:position pos:line="10" pos:column="96"/></name></name> <operator pos:line="10" pos:column="97">&lt;&lt;<pos:position pos:line="10" pos:column="105"/></operator>
                      <literal type="string" pos:line="11" pos:column="23">" Refcount: "<pos:position pos:line="11" pos:column="36"/></literal> <operator pos:line="11" pos:column="37">&lt;&lt;<pos:position pos:line="11" pos:column="45"/></operator> <operator pos:line="11" pos:column="40">(<pos:position pos:line="11" pos:column="41"/></operator><operator pos:line="11" pos:column="41">(<pos:position pos:line="11" pos:column="42"/></operator>struct <name pos:line="11" pos:column="49">MetaStd<pos:position pos:line="11" pos:column="56"/></name><operator pos:line="11" pos:column="56">*<pos:position pos:line="11" pos:column="57"/></operator><operator pos:line="11" pos:column="57">)<pos:position pos:line="11" pos:column="58"/></operator><name><name pos:line="11" pos:column="58">x<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">.<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">value<pos:position pos:line="11" pos:column="65"/></name></name><operator pos:line="11" pos:column="65">)<pos:position pos:line="11" pos:column="66"/></operator><operator pos:line="11" pos:column="66">-&gt;<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="68">refcount<pos:position pos:line="11" pos:column="76"/></name> <operator pos:line="11" pos:column="77">&lt;&lt;<pos:position pos:line="11" pos:column="85"/></operator>
                      <name><name pos:line="12" pos:column="23">std<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">::<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">endl<pos:position pos:line="12" pos:column="32"/></name></name></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
            <break pos:line="13" pos:column="13">break;<pos:position pos:line="13" pos:column="19"/></break>

        <case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">STORE_META_STD_LFS<pos:position pos:line="15" pos:column="32"/></name></expr>:<pos:position pos:line="15" pos:column="33"/></case>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">std<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">::<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">cout<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">&lt;&lt;<pos:position pos:line="16" pos:column="31"/></operator> <literal type="string" pos:line="16" pos:column="26">"STD_LFS, Size: "<pos:position pos:line="16" pos:column="43"/></literal> <operator pos:line="16" pos:column="44">&lt;&lt;<pos:position pos:line="16" pos:column="52"/></operator> <operator pos:line="16" pos:column="47">(<pos:position pos:line="16" pos:column="48"/></operator><operator pos:line="16" pos:column="48">(<pos:position pos:line="16" pos:column="49"/></operator>struct <name pos:line="16" pos:column="56">MetaStdLfs<pos:position pos:line="16" pos:column="66"/></name><operator pos:line="16" pos:column="66">*<pos:position pos:line="16" pos:column="67"/></operator><operator pos:line="16" pos:column="67">)<pos:position pos:line="16" pos:column="68"/></operator><name><name pos:line="16" pos:column="68">x<pos:position pos:line="16" pos:column="69"/></name><operator pos:line="16" pos:column="69">.<pos:position pos:line="16" pos:column="70"/></operator><name pos:line="16" pos:column="70">value<pos:position pos:line="16" pos:column="75"/></name></name><operator pos:line="16" pos:column="75">)<pos:position pos:line="16" pos:column="76"/></operator><operator pos:line="16" pos:column="76">-&gt;<pos:position pos:line="16" pos:column="81"/></operator><name pos:line="16" pos:column="78">swap_file_sz<pos:position pos:line="16" pos:column="90"/></name> <operator pos:line="16" pos:column="91">&lt;&lt;<pos:position pos:line="16" pos:column="99"/></operator>
                      <literal type="string" pos:line="17" pos:column="23">" Flags: 0x"<pos:position pos:line="17" pos:column="35"/></literal> <operator pos:line="17" pos:column="36">&lt;&lt;<pos:position pos:line="17" pos:column="44"/></operator> <name><name pos:line="17" pos:column="39">std<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">::<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">hex<pos:position pos:line="17" pos:column="47"/></name></name> <operator pos:line="17" pos:column="48">&lt;&lt;<pos:position pos:line="17" pos:column="56"/></operator> <operator pos:line="17" pos:column="51">(<pos:position pos:line="17" pos:column="52"/></operator><operator pos:line="17" pos:column="52">(<pos:position pos:line="17" pos:column="53"/></operator>struct <name pos:line="17" pos:column="60">MetaStdLfs<pos:position pos:line="17" pos:column="70"/></name><operator pos:line="17" pos:column="70">*<pos:position pos:line="17" pos:column="71"/></operator><operator pos:line="17" pos:column="71">)<pos:position pos:line="17" pos:column="72"/></operator><name><name pos:line="17" pos:column="72">x<pos:position pos:line="17" pos:column="73"/></name><operator pos:line="17" pos:column="73">.<pos:position pos:line="17" pos:column="74"/></operator><name pos:line="17" pos:column="74">value<pos:position pos:line="17" pos:column="79"/></name></name><operator pos:line="17" pos:column="79">)<pos:position pos:line="17" pos:column="80"/></operator><operator pos:line="17" pos:column="80">-&gt;<pos:position pos:line="17" pos:column="85"/></operator><name pos:line="17" pos:column="82">flags<pos:position pos:line="17" pos:column="87"/></name> <operator pos:line="17" pos:column="88">&lt;&lt;<pos:position pos:line="17" pos:column="96"/></operator> <name><name pos:line="17" pos:column="91">std<pos:position pos:line="17" pos:column="94"/></name><operator pos:line="17" pos:column="94">::<pos:position pos:line="17" pos:column="96"/></operator><name pos:line="17" pos:column="96">dec<pos:position pos:line="17" pos:column="99"/></name></name> <operator pos:line="17" pos:column="100">&lt;&lt;<pos:position pos:line="17" pos:column="108"/></operator>
                      <literal type="string" pos:line="18" pos:column="23">" Refcount: "<pos:position pos:line="18" pos:column="36"/></literal> <operator pos:line="18" pos:column="37">&lt;&lt;<pos:position pos:line="18" pos:column="45"/></operator> <operator pos:line="18" pos:column="40">(<pos:position pos:line="18" pos:column="41"/></operator><operator pos:line="18" pos:column="41">(<pos:position pos:line="18" pos:column="42"/></operator>struct <name pos:line="18" pos:column="49">MetaStdLfs<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">*<pos:position pos:line="18" pos:column="60"/></operator><operator pos:line="18" pos:column="60">)<pos:position pos:line="18" pos:column="61"/></operator><name><name pos:line="18" pos:column="61">x<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">.<pos:position pos:line="18" pos:column="63"/></operator><name pos:line="18" pos:column="63">value<pos:position pos:line="18" pos:column="68"/></name></name><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator><operator pos:line="18" pos:column="69">-&gt;<pos:position pos:line="18" pos:column="74"/></operator><name pos:line="18" pos:column="71">refcount<pos:position pos:line="18" pos:column="79"/></name> <operator pos:line="18" pos:column="80">&lt;&lt;<pos:position pos:line="18" pos:column="88"/></operator>
                      <name><name pos:line="19" pos:column="23">std<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">::<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">endl<pos:position pos:line="19" pos:column="32"/></name></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
            <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>

        <case pos:line="22" pos:column="9">case <expr><name pos:line="22" pos:column="14">STORE_META_URL<pos:position pos:line="22" pos:column="28"/></name></expr>:<pos:position pos:line="22" pos:column="29"/></case>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">assert<pos:position pos:line="23" pos:column="19"/></name> <argument_list pos:line="23" pos:column="20">(<argument><expr><operator pos:line="23" pos:column="21">(<pos:position pos:line="23" pos:column="22"/></operator><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">char<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></operator><operator pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></operator><name><name pos:line="23" pos:column="30">x<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">value<pos:position pos:line="23" pos:column="37"/></name></name><operator pos:line="23" pos:column="37">)<pos:position pos:line="23" pos:column="38"/></operator><index pos:line="23" pos:column="38">[<expr><name><name pos:line="23" pos:column="39">x<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">.<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">length<pos:position pos:line="23" pos:column="47"/></name></name> <operator pos:line="23" pos:column="48">-<pos:position pos:line="23" pos:column="49"/></operator> <literal type="number" pos:line="23" pos:column="50">1<pos:position pos:line="23" pos:column="51"/></literal></expr>]<pos:position pos:line="23" pos:column="52"/></index> <operator pos:line="23" pos:column="53">==<pos:position pos:line="23" pos:column="55"/></operator> <literal type="number" pos:line="23" pos:column="56">0<pos:position pos:line="23" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="24" pos:column="13">std<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">::<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">cout<pos:position pos:line="24" pos:column="22"/></name></name> <operator pos:line="24" pos:column="23">&lt;&lt;<pos:position pos:line="24" pos:column="31"/></operator> <literal type="string" pos:line="24" pos:column="26">"URL: "<pos:position pos:line="24" pos:column="33"/></literal> <operator pos:line="24" pos:column="34">&lt;&lt;<pos:position pos:line="24" pos:column="42"/></operator> <operator pos:line="24" pos:column="37">(<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">char<pos:position pos:line="24" pos:column="42"/></name> <operator pos:line="24" pos:column="43">*<pos:position pos:line="24" pos:column="44"/></operator><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator><name><name pos:line="24" pos:column="45">x<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">.<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="47">value<pos:position pos:line="24" pos:column="52"/></name></name> <operator pos:line="24" pos:column="53">&lt;&lt;<pos:position pos:line="24" pos:column="61"/></operator> <name><name pos:line="24" pos:column="56">std<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">::<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="61">endl<pos:position pos:line="24" pos:column="65"/></name></name></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>
            <break pos:line="25" pos:column="13">break;<pos:position pos:line="25" pos:column="19"/></break>

        <default pos:line="27" pos:column="9">default:<pos:position pos:line="27" pos:column="17"/></default>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">std<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">::<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">cout<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">&lt;&lt;<pos:position pos:line="28" pos:column="31"/></operator> <literal type="string" pos:line="28" pos:column="26">"Unknown store meta type: "<pos:position pos:line="28" pos:column="53"/></literal> <operator pos:line="28" pos:column="54">&lt;&lt;<pos:position pos:line="28" pos:column="62"/></operator> <operator pos:line="28" pos:column="57">(<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">int<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">)<pos:position pos:line="28" pos:column="62"/></operator><call><name><name pos:line="28" pos:column="62">x<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">.<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="64">getType<pos:position pos:line="28" pos:column="71"/></name></name><argument_list pos:line="28" pos:column="71">()<pos:position pos:line="28" pos:column="73"/></argument_list></call> <operator pos:line="28" pos:column="74">&lt;&lt;<pos:position pos:line="28" pos:column="82"/></operator>
                      <literal type="string" pos:line="29" pos:column="23">" of length "<pos:position pos:line="29" pos:column="36"/></literal> <operator pos:line="29" pos:column="37">&lt;&lt;<pos:position pos:line="29" pos:column="45"/></operator> <name><name pos:line="29" pos:column="40">x<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">.<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">length<pos:position pos:line="29" pos:column="48"/></name></name> <operator pos:line="29" pos:column="49">&lt;&lt;<pos:position pos:line="29" pos:column="57"/></operator> <name><name pos:line="29" pos:column="52">std<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">::<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="57">endl<pos:position pos:line="29" pos:column="61"/></name></name></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>
        }<pos:position pos:line="31" pos:column="10"/></block></switch>
    }<pos:position pos:line="32" pos:column="6"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_594_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">parse_dotla_file<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">FILE<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">file<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier><modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">dlname<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier><modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">libdir<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">char<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier><modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">deplibs<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier><modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">old_name<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="22">int<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">installed<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type>		<name pos:line="5" pos:column="17">errors<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type>	<name pos:line="6" pos:column="17">line_len<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><name pos:line="6" pos:column="28">LT_FILENAME_MAX<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type>	<name pos:line="7" pos:column="17">line<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><call><name pos:line="7" pos:column="24">MALLOC<pos:position pos:line="7" pos:column="30"/></name> <argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">char<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">line_len<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">line<pos:position pos:line="9" pos:column="12"/></name></expr>)<pos:position pos:line="9" pos:column="13"/></condition><then pos:line="9" pos:column="13">
    <block pos:line="10" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">LT__SETERROR<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">FILE_NOT_FOUND<pos:position pos:line="11" pos:column="35"/></name></expr></argument>)<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
      <return pos:line="12" pos:column="7">return <expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

  <while pos:line="15" pos:column="3">while <condition pos:line="15" pos:column="9">(<expr><operator pos:line="15" pos:column="10">!<pos:position pos:line="15" pos:column="11"/></operator><call><name pos:line="15" pos:column="11">feof<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">file<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="23"/></condition>
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="17" pos:column="7">line<pos:position pos:line="17" pos:column="11"/></name><index pos:line="17" pos:column="11">[<expr><name pos:line="17" pos:column="12">line_len<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-<pos:position pos:line="17" pos:column="21"/></operator><literal type="number" pos:line="17" pos:column="21">2<pos:position pos:line="17" pos:column="22"/></literal></expr>]<pos:position pos:line="17" pos:column="23"/></index></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="char" pos:line="17" pos:column="26">'\0'<pos:position pos:line="17" pos:column="30"/></literal></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
      <if pos:line="18" pos:column="7">if <condition pos:line="18" pos:column="10">(<expr><operator pos:line="18" pos:column="11">!<pos:position pos:line="18" pos:column="12"/></operator><call><name pos:line="18" pos:column="12">fgets<pos:position pos:line="18" pos:column="17"/></name> <argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">line<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="25">(<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">int<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">)<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">line_len<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">file<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="47"/></condition><then pos:line="18" pos:column="47">
	<block pos:line="19" pos:column="9">{
	  <break pos:line="20" pos:column="11">break;<pos:position pos:line="20" pos:column="17"/></break>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

      <comment type="block" pos:line="23" pos:column="7">/* Handle the case where we occasionally need to read a line
	 that is longer than the initial buffer size.
	 Behave even if the file contains NUL bytes due to corruption. */</comment>
      <while pos:line="26" pos:column="7">while <condition pos:line="26" pos:column="13">(<expr><name><name pos:line="26" pos:column="14">line<pos:position pos:line="26" pos:column="18"/></name><index pos:line="26" pos:column="18">[<expr><name pos:line="26" pos:column="19">line_len<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-<pos:position pos:line="26" pos:column="28"/></operator><literal type="number" pos:line="26" pos:column="28">2<pos:position pos:line="26" pos:column="29"/></literal></expr>]<pos:position pos:line="26" pos:column="30"/></index></name> <operator pos:line="26" pos:column="31">!=<pos:position pos:line="26" pos:column="33"/></operator> <literal type="char" pos:line="26" pos:column="34">'\0'<pos:position pos:line="26" pos:column="38"/></literal> <operator pos:line="26" pos:column="39">&amp;&amp;<pos:position pos:line="26" pos:column="49"/></operator> <name><name pos:line="26" pos:column="42">line<pos:position pos:line="26" pos:column="46"/></name><index pos:line="26" pos:column="46">[<expr><name pos:line="26" pos:column="47">line_len<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-<pos:position pos:line="26" pos:column="56"/></operator><literal type="number" pos:line="26" pos:column="56">2<pos:position pos:line="26" pos:column="57"/></literal></expr>]<pos:position pos:line="26" pos:column="58"/></index></name> <operator pos:line="26" pos:column="59">!=<pos:position pos:line="26" pos:column="61"/></operator> <literal type="char" pos:line="26" pos:column="62">'\n'<pos:position pos:line="26" pos:column="66"/></literal> <operator pos:line="26" pos:column="67">&amp;&amp;<pos:position pos:line="26" pos:column="77"/></operator> <operator pos:line="26" pos:column="70">!<pos:position pos:line="26" pos:column="71"/></operator><call><name pos:line="26" pos:column="71">feof<pos:position pos:line="26" pos:column="75"/></name> <argument_list pos:line="26" pos:column="76">(<argument><expr><name pos:line="26" pos:column="77">file<pos:position pos:line="26" pos:column="81"/></name></expr></argument>)<pos:position pos:line="26" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="83"/></condition>
	<block pos:line="27" pos:column="9">{
	  <expr_stmt><expr><name pos:line="28" pos:column="11">line<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">REALLOC<pos:position pos:line="28" pos:column="25"/></name> <argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">char<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">line<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">line_len<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">*<pos:position pos:line="28" pos:column="49"/></operator><literal type="number" pos:line="28" pos:column="49">2<pos:position pos:line="28" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
	  <if pos:line="29" pos:column="11">if <condition pos:line="29" pos:column="14">(<expr><operator pos:line="29" pos:column="15">!<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">line<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21">
	    <block pos:line="30" pos:column="13">{
	      <expr_stmt><expr><operator pos:line="31" pos:column="15">++<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">errors<pos:position pos:line="31" pos:column="23"/></name></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
	      <goto pos:line="32" pos:column="15">goto <name pos:line="32" pos:column="20">cleanup<pos:position pos:line="32" pos:column="27"/></name>;<pos:position pos:line="32" pos:column="28"/></goto>
	    }<pos:position pos:line="33" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name><name pos:line="34" pos:column="11">line<pos:position pos:line="34" pos:column="15"/></name><index pos:line="34" pos:column="15">[<expr><name pos:line="34" pos:column="16">line_len<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">*<pos:position pos:line="34" pos:column="26"/></operator> <literal type="number" pos:line="34" pos:column="27">2<pos:position pos:line="34" pos:column="28"/></literal> <operator pos:line="34" pos:column="29">-<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="31">2<pos:position pos:line="34" pos:column="32"/></literal></expr>]<pos:position pos:line="34" pos:column="33"/></index></name> <operator pos:line="34" pos:column="34">=<pos:position pos:line="34" pos:column="35"/></operator> <literal type="char" pos:line="34" pos:column="36">'\0'<pos:position pos:line="34" pos:column="40"/></literal></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
	  <if pos:line="35" pos:column="11">if <condition pos:line="35" pos:column="14">(<expr><operator pos:line="35" pos:column="15">!<pos:position pos:line="35" pos:column="16"/></operator><call><name pos:line="35" pos:column="16">fgets<pos:position pos:line="35" pos:column="21"/></name> <argument_list pos:line="35" pos:column="22">(<argument><expr><operator pos:line="35" pos:column="23">&amp;<pos:position pos:line="35" pos:column="28"/></operator><name><name pos:line="35" pos:column="24">line<pos:position pos:line="35" pos:column="28"/></name><index pos:line="35" pos:column="28">[<expr><name pos:line="35" pos:column="29">line_len<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">-<pos:position pos:line="35" pos:column="39"/></operator><literal type="number" pos:line="35" pos:column="39">1<pos:position pos:line="35" pos:column="40"/></literal></expr>]<pos:position pos:line="35" pos:column="41"/></index></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">(<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="44">int<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">)<pos:position pos:line="35" pos:column="48"/></operator> <name pos:line="35" pos:column="49">line_len<pos:position pos:line="35" pos:column="57"/></name> <operator pos:line="35" pos:column="58">+<pos:position pos:line="35" pos:column="59"/></operator><literal type="number" pos:line="35" pos:column="59">1<pos:position pos:line="35" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="62">file<pos:position pos:line="35" pos:column="66"/></name></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="68"/></condition><then pos:line="35" pos:column="68">
	    <block pos:line="36" pos:column="13">{
	      <break pos:line="37" pos:column="15">break;<pos:position pos:line="37" pos:column="21"/></break>
	    }<pos:position pos:line="38" pos:column="14"/></block></then></if>
	  <expr_stmt><expr><name pos:line="39" pos:column="11">line_len<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">*=<pos:position pos:line="39" pos:column="22"/></operator> <literal type="number" pos:line="39" pos:column="23">2<pos:position pos:line="39" pos:column="24"/></literal></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></while>

      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><name><name pos:line="42" pos:column="11">line<pos:position pos:line="42" pos:column="15"/></name><index pos:line="42" pos:column="15">[<expr><literal type="number" pos:line="42" pos:column="16">0<pos:position pos:line="42" pos:column="17"/></literal></expr>]<pos:position pos:line="42" pos:column="18"/></index></name> <operator pos:line="42" pos:column="19">==<pos:position pos:line="42" pos:column="21"/></operator> <literal type="char" pos:line="42" pos:column="22">'\n'<pos:position pos:line="42" pos:column="26"/></literal> <operator pos:line="42" pos:column="27">||<pos:position pos:line="42" pos:column="29"/></operator> <name><name pos:line="42" pos:column="30">line<pos:position pos:line="42" pos:column="34"/></name><index pos:line="42" pos:column="34">[<expr><literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal></expr>]<pos:position pos:line="42" pos:column="37"/></index></name> <operator pos:line="42" pos:column="38">==<pos:position pos:line="42" pos:column="40"/></operator> <literal type="char" pos:line="42" pos:column="41">'#'<pos:position pos:line="42" pos:column="44"/></literal></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45">
	<block pos:line="43" pos:column="9">{
	  <continue pos:line="44" pos:column="11">continue;<pos:position pos:line="44" pos:column="20"/></continue>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

<cpp:undef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">undef<pos:position pos:line="47" pos:column="7"/></cpp:directive>  <name pos:line="47" pos:column="9">STR_DLNAME<pos:position pos:line="47" pos:column="19"/></name></cpp:undef>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define<pos:position pos:line="48" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">STR_DLNAME<pos:position pos:line="48" pos:column="19"/></name></cpp:macro>	<cpp:value pos:line="48" pos:column="25">"dlname="<pos:position pos:line="48" pos:column="34"/></cpp:value></cpp:define>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><call><name pos:line="49" pos:column="11">strncmp<pos:position pos:line="49" pos:column="18"/></name> <argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">line<pos:position pos:line="49" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="26">STR_DLNAME<pos:position pos:line="49" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="38">sizeof <argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">STR_DLNAME<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></sizeof> <operator pos:line="49" pos:column="58">-<pos:position pos:line="49" pos:column="59"/></operator> <literal type="number" pos:line="49" pos:column="60">1<pos:position pos:line="49" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call> <operator pos:line="49" pos:column="63">==<pos:position pos:line="49" pos:column="65"/></operator> <literal type="number" pos:line="49" pos:column="66">0<pos:position pos:line="49" pos:column="67"/></literal></expr>)<pos:position pos:line="49" pos:column="68"/></condition><then pos:line="49" pos:column="68">
	<block pos:line="50" pos:column="9">{
	  <expr_stmt><expr><name pos:line="51" pos:column="11">errors<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">+=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">trim<pos:position pos:line="51" pos:column="25"/></name> <argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">dlname<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="35">&amp;<pos:position pos:line="51" pos:column="40"/></operator><name><name pos:line="51" pos:column="36">line<pos:position pos:line="51" pos:column="40"/></name><index pos:line="51" pos:column="40">[<expr><sizeof pos:line="51" pos:column="41">sizeof <argument_list pos:line="51" pos:column="48">(<argument><expr><name pos:line="51" pos:column="49">STR_DLNAME<pos:position pos:line="51" pos:column="59"/></name></expr></argument>)<pos:position pos:line="51" pos:column="60"/></argument_list></sizeof> <operator pos:line="51" pos:column="61">-<pos:position pos:line="51" pos:column="62"/></operator> <literal type="number" pos:line="51" pos:column="63">1<pos:position pos:line="51" pos:column="64"/></literal></expr>]<pos:position pos:line="51" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then>

<cpp:undef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">undef<pos:position pos:line="54" pos:column="7"/></cpp:directive>  <name pos:line="54" pos:column="9">STR_OLD_LIBRARY<pos:position pos:line="54" pos:column="24"/></name></cpp:undef>
<cpp:define pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">define<pos:position pos:line="55" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="55" pos:column="9">STR_OLD_LIBRARY<pos:position pos:line="55" pos:column="24"/></name></cpp:macro>	<cpp:value pos:line="55" pos:column="25">"old_library="<pos:position pos:line="55" pos:column="39"/></cpp:value></cpp:define>
      <elseif pos:line="56" pos:column="7">else <if pos:line="56" pos:column="12">if <condition pos:line="56" pos:column="15">(<expr><call><name pos:line="56" pos:column="16">strncmp<pos:position pos:line="56" pos:column="23"/></name> <argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">line<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="31">STR_OLD_LIBRARY<pos:position pos:line="56" pos:column="46"/></name></expr></argument>,
	    <argument><expr><sizeof pos:line="57" pos:column="13">sizeof <argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">STR_OLD_LIBRARY<pos:position pos:line="57" pos:column="36"/></name></expr></argument>)<pos:position pos:line="57" pos:column="37"/></argument_list></sizeof> <operator pos:line="57" pos:column="38">-<pos:position pos:line="57" pos:column="39"/></operator> <literal type="number" pos:line="57" pos:column="40">1<pos:position pos:line="57" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call> <operator pos:line="57" pos:column="43">==<pos:position pos:line="57" pos:column="45"/></operator> <literal type="number" pos:line="57" pos:column="46">0<pos:position pos:line="57" pos:column="47"/></literal></expr>)<pos:position pos:line="57" pos:column="48"/></condition><then pos:line="57" pos:column="48">
	<block pos:line="58" pos:column="9">{
	  <expr_stmt><expr><name pos:line="59" pos:column="11">errors<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">+=<pos:position pos:line="59" pos:column="20"/></operator> <call><name pos:line="59" pos:column="21">trim<pos:position pos:line="59" pos:column="25"/></name> <argument_list pos:line="59" pos:column="26">(<argument><expr><name pos:line="59" pos:column="27">old_name<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="37">&amp;<pos:position pos:line="59" pos:column="42"/></operator><name><name pos:line="59" pos:column="38">line<pos:position pos:line="59" pos:column="42"/></name><index pos:line="59" pos:column="42">[<expr><sizeof pos:line="59" pos:column="43">sizeof <argument_list pos:line="59" pos:column="50">(<argument><expr><name pos:line="59" pos:column="51">STR_OLD_LIBRARY<pos:position pos:line="59" pos:column="66"/></name></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></sizeof> <operator pos:line="59" pos:column="68">-<pos:position pos:line="59" pos:column="69"/></operator> <literal type="number" pos:line="59" pos:column="70">1<pos:position pos:line="59" pos:column="71"/></literal></expr>]<pos:position pos:line="59" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif>

      <comment type="block" pos:line="62" pos:column="7">/* Windows native tools do not understand the POSIX paths we store
	 in libdir. */</comment>
<cpp:undef pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">undef<pos:position pos:line="64" pos:column="7"/></cpp:directive>  <name pos:line="64" pos:column="9">STR_LIBDIR<pos:position pos:line="64" pos:column="19"/></name></cpp:undef>
<cpp:define pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">define<pos:position pos:line="65" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="65" pos:column="9">STR_LIBDIR<pos:position pos:line="65" pos:column="19"/></name></cpp:macro>	<cpp:value pos:line="65" pos:column="25">"libdir="<pos:position pos:line="65" pos:column="34"/></cpp:value></cpp:define>
      <elseif pos:line="66" pos:column="7">else <if pos:line="66" pos:column="12">if <condition pos:line="66" pos:column="15">(<expr><call><name pos:line="66" pos:column="16">strncmp<pos:position pos:line="66" pos:column="23"/></name> <argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">line<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">STR_LIBDIR<pos:position pos:line="66" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="43">sizeof <argument_list pos:line="66" pos:column="50">(<argument><expr><name pos:line="66" pos:column="51">STR_LIBDIR<pos:position pos:line="66" pos:column="61"/></name></expr></argument>)<pos:position pos:line="66" pos:column="62"/></argument_list></sizeof> <operator pos:line="66" pos:column="63">-<pos:position pos:line="66" pos:column="64"/></operator> <literal type="number" pos:line="66" pos:column="65">1<pos:position pos:line="66" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="67"/></argument_list></call> <operator pos:line="66" pos:column="68">==<pos:position pos:line="66" pos:column="70"/></operator> <literal type="number" pos:line="66" pos:column="71">0<pos:position pos:line="66" pos:column="72"/></literal></expr>)<pos:position pos:line="66" pos:column="73"/></condition><then pos:line="66" pos:column="73">
	<block pos:line="67" pos:column="9">{
	  <expr_stmt><expr><name pos:line="68" pos:column="11">errors<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">+=<pos:position pos:line="68" pos:column="20"/></operator> <call><name pos:line="68" pos:column="21">trim<pos:position pos:line="68" pos:column="25"/></name> <argument_list pos:line="68" pos:column="26">(<argument><expr><name pos:line="68" pos:column="27">libdir<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="35">&amp;<pos:position pos:line="68" pos:column="40"/></operator><name><name pos:line="68" pos:column="36">line<pos:position pos:line="68" pos:column="40"/></name><index pos:line="68" pos:column="40">[<expr><sizeof pos:line="68" pos:column="41">sizeof<argument_list pos:line="68" pos:column="47">(<argument><expr><name pos:line="68" pos:column="48">STR_LIBDIR<pos:position pos:line="68" pos:column="58"/></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></sizeof> <operator pos:line="68" pos:column="60">-<pos:position pos:line="68" pos:column="61"/></operator> <literal type="number" pos:line="68" pos:column="62">1<pos:position pos:line="68" pos:column="63"/></literal></expr>]<pos:position pos:line="68" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt>
<cpp:ifdef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifdef<pos:position pos:line="69" pos:column="7"/></cpp:directive> <name pos:line="69" pos:column="8">__WINDOWS__<pos:position pos:line="69" pos:column="19"/></name></cpp:ifdef>
	  <comment type="block" pos:line="70" pos:column="11">/* Disallow following unix-style paths on MinGW.  */</comment>
	  <if pos:line="71" pos:column="11">if <condition pos:line="71" pos:column="14">(<expr><operator pos:line="71" pos:column="15">*<pos:position pos:line="71" pos:column="16"/></operator><name pos:line="71" pos:column="16">libdir<pos:position pos:line="71" pos:column="22"/></name> <operator pos:line="71" pos:column="23">&amp;&amp;<pos:position pos:line="71" pos:column="33"/></operator> <operator pos:line="71" pos:column="26">(<pos:position pos:line="71" pos:column="27"/></operator><operator pos:line="71" pos:column="27">*<pos:position pos:line="71" pos:column="28"/></operator><operator pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="29">libdir<pos:position pos:line="71" pos:column="35"/></name> <operator pos:line="71" pos:column="36">==<pos:position pos:line="71" pos:column="38"/></operator> <literal type="char" pos:line="71" pos:column="39">'/'<pos:position pos:line="71" pos:column="42"/></literal> <operator pos:line="71" pos:column="43">||<pos:position pos:line="71" pos:column="45"/></operator> <operator pos:line="71" pos:column="46">*<pos:position pos:line="71" pos:column="47"/></operator><operator pos:line="71" pos:column="47">*<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="48">libdir<pos:position pos:line="71" pos:column="54"/></name> <operator pos:line="71" pos:column="55">==<pos:position pos:line="71" pos:column="57"/></operator> <literal type="char" pos:line="71" pos:column="58">'\\'<pos:position pos:line="71" pos:column="62"/></literal><operator pos:line="71" pos:column="62">)<pos:position pos:line="71" pos:column="63"/></operator></expr>)<pos:position pos:line="71" pos:column="64"/></condition><then pos:line="71" pos:column="64">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="72" pos:column="13">*<pos:position pos:line="72" pos:column="14"/></operator><operator pos:line="72" pos:column="14">*<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">libdir<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">=<pos:position pos:line="72" pos:column="23"/></operator> <literal type="char" pos:line="72" pos:column="24">'\0'<pos:position pos:line="72" pos:column="28"/></literal></expr>;<pos:position pos:line="72" pos:column="29"/></expr_stmt></block></then></if>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="74" pos:column="10"/></block></then></if></elseif>

<cpp:undef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">undef<pos:position pos:line="76" pos:column="7"/></cpp:directive>  <name pos:line="76" pos:column="9">STR_DL_DEPLIBS<pos:position pos:line="76" pos:column="23"/></name></cpp:undef>
<cpp:define pos:line="77" pos:column="1">#<cpp:directive pos:line="77" pos:column="2">define<pos:position pos:line="77" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="77" pos:column="9">STR_DL_DEPLIBS<pos:position pos:line="77" pos:column="23"/></name></cpp:macro>	<cpp:value pos:line="77" pos:column="25">"dependency_libs="<pos:position pos:line="77" pos:column="43"/></cpp:value></cpp:define>
      <elseif pos:line="78" pos:column="7">else <if pos:line="78" pos:column="12">if <condition pos:line="78" pos:column="15">(<expr><call><name pos:line="78" pos:column="16">strncmp<pos:position pos:line="78" pos:column="23"/></name> <argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">line<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="31">STR_DL_DEPLIBS<pos:position pos:line="78" pos:column="45"/></name></expr></argument>,
	    <argument><expr><sizeof pos:line="79" pos:column="13">sizeof <argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">STR_DL_DEPLIBS<pos:position pos:line="79" pos:column="35"/></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></sizeof> <operator pos:line="79" pos:column="37">-<pos:position pos:line="79" pos:column="38"/></operator> <literal type="number" pos:line="79" pos:column="39">1<pos:position pos:line="79" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call> <operator pos:line="79" pos:column="42">==<pos:position pos:line="79" pos:column="44"/></operator> <literal type="number" pos:line="79" pos:column="45">0<pos:position pos:line="79" pos:column="46"/></literal></expr>)<pos:position pos:line="79" pos:column="47"/></condition><then pos:line="79" pos:column="47">
	<block pos:line="80" pos:column="9">{
	  <expr_stmt><expr><name pos:line="81" pos:column="11">errors<pos:position pos:line="81" pos:column="17"/></name> <operator pos:line="81" pos:column="18">+=<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">trim<pos:position pos:line="81" pos:column="25"/></name> <argument_list pos:line="81" pos:column="26">(<argument><expr><name pos:line="81" pos:column="27">deplibs<pos:position pos:line="81" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="36">&amp;<pos:position pos:line="81" pos:column="41"/></operator><name><name pos:line="81" pos:column="37">line<pos:position pos:line="81" pos:column="41"/></name><index pos:line="81" pos:column="41">[<expr><sizeof pos:line="81" pos:column="42">sizeof <argument_list pos:line="81" pos:column="49">(<argument><expr><name pos:line="81" pos:column="50">STR_DL_DEPLIBS<pos:position pos:line="81" pos:column="64"/></name></expr></argument>)<pos:position pos:line="81" pos:column="65"/></argument_list></sizeof> <operator pos:line="81" pos:column="66">-<pos:position pos:line="81" pos:column="67"/></operator> <literal type="number" pos:line="81" pos:column="68">1<pos:position pos:line="81" pos:column="69"/></literal></expr>]<pos:position pos:line="81" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="82" pos:column="10"/></block></then></if></elseif>
      <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><call><name pos:line="83" pos:column="16">streq<pos:position pos:line="83" pos:column="21"/></name> <argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">line<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="29">"installed=yes\n"<pos:position pos:line="83" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="48"/></condition><then pos:line="83" pos:column="48">
	<block pos:line="84" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="85" pos:column="11">*<pos:position pos:line="85" pos:column="12"/></operator><name pos:line="85" pos:column="12">installed<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <literal type="number" pos:line="85" pos:column="24">1<pos:position pos:line="85" pos:column="25"/></literal></expr>;<pos:position pos:line="85" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="86" pos:column="10"/></block></then></if></elseif>
      <elseif pos:line="87" pos:column="7">else <if pos:line="87" pos:column="12">if <condition pos:line="87" pos:column="15">(<expr><call><name pos:line="87" pos:column="16">streq<pos:position pos:line="87" pos:column="21"/></name> <argument_list pos:line="87" pos:column="22">(<argument><expr><name pos:line="87" pos:column="23">line<pos:position pos:line="87" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="29">"installed=no\n"<pos:position pos:line="87" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="47"/></condition><then pos:line="87" pos:column="47">
	<block pos:line="88" pos:column="9">{
	  <expr_stmt><expr><operator pos:line="89" pos:column="11">*<pos:position pos:line="89" pos:column="12"/></operator><name pos:line="89" pos:column="12">installed<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">=<pos:position pos:line="89" pos:column="23"/></operator> <literal type="number" pos:line="89" pos:column="24">0<pos:position pos:line="89" pos:column="25"/></literal></expr>;<pos:position pos:line="89" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></then></if></elseif>

<cpp:undef pos:line="92" pos:column="1">#<cpp:directive pos:line="92" pos:column="2">undef<pos:position pos:line="92" pos:column="7"/></cpp:directive>  <name pos:line="92" pos:column="9">STR_LIBRARY_NAMES<pos:position pos:line="92" pos:column="26"/></name></cpp:undef>
<cpp:define pos:line="93" pos:column="1">#<cpp:directive pos:line="93" pos:column="2">define<pos:position pos:line="93" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="93" pos:column="9">STR_LIBRARY_NAMES<pos:position pos:line="93" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="93" pos:column="27">"library_names="<pos:position pos:line="93" pos:column="43"/></cpp:value></cpp:define>
      <elseif pos:line="94" pos:column="7">else <if pos:line="94" pos:column="12">if <condition pos:line="94" pos:column="15">(<expr><operator pos:line="94" pos:column="16">!<pos:position pos:line="94" pos:column="17"/></operator><operator pos:line="94" pos:column="17">*<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">dlname<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">&amp;&amp;<pos:position pos:line="94" pos:column="35"/></operator> <call><name pos:line="94" pos:column="28">strncmp<pos:position pos:line="94" pos:column="35"/></name> <argument_list pos:line="94" pos:column="36">(<argument><expr><name pos:line="94" pos:column="37">line<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="43">STR_LIBRARY_NAMES<pos:position pos:line="94" pos:column="60"/></name></expr></argument>,
	    <argument><expr><sizeof pos:line="95" pos:column="13">sizeof <argument_list pos:line="95" pos:column="20">(<argument><expr><name pos:line="95" pos:column="21">STR_LIBRARY_NAMES<pos:position pos:line="95" pos:column="38"/></name></expr></argument>)<pos:position pos:line="95" pos:column="39"/></argument_list></sizeof> <operator pos:line="95" pos:column="40">-<pos:position pos:line="95" pos:column="41"/></operator> <literal type="number" pos:line="95" pos:column="42">1<pos:position pos:line="95" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="44"/></argument_list></call> <operator pos:line="95" pos:column="45">==<pos:position pos:line="95" pos:column="47"/></operator> <literal type="number" pos:line="95" pos:column="48">0<pos:position pos:line="95" pos:column="49"/></literal></expr>)<pos:position pos:line="95" pos:column="50"/></condition><then pos:line="95" pos:column="50">
	<block pos:line="96" pos:column="9">{
	  <decl_stmt><decl><type><name pos:line="97" pos:column="11">char<pos:position pos:line="97" pos:column="15"/></name> <modifier pos:line="97" pos:column="16">*<pos:position pos:line="97" pos:column="17"/></modifier></type><name pos:line="97" pos:column="17">last_libname<pos:position pos:line="97" pos:column="29"/></name></decl>;<pos:position pos:line="97" pos:column="30"/></decl_stmt>
	  <expr_stmt><expr><name pos:line="98" pos:column="11">errors<pos:position pos:line="98" pos:column="17"/></name> <operator pos:line="98" pos:column="18">+=<pos:position pos:line="98" pos:column="20"/></operator> <call><name pos:line="98" pos:column="21">trim<pos:position pos:line="98" pos:column="25"/></name> <argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">dlname<pos:position pos:line="98" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="35">&amp;<pos:position pos:line="98" pos:column="40"/></operator><name><name pos:line="98" pos:column="36">line<pos:position pos:line="98" pos:column="40"/></name><index pos:line="98" pos:column="40">[<expr><sizeof pos:line="98" pos:column="41">sizeof <argument_list pos:line="98" pos:column="48">(<argument><expr><name pos:line="98" pos:column="49">STR_LIBRARY_NAMES<pos:position pos:line="98" pos:column="66"/></name></expr></argument>)<pos:position pos:line="98" pos:column="67"/></argument_list></sizeof> <operator pos:line="98" pos:column="68">-<pos:position pos:line="98" pos:column="69"/></operator> <literal type="number" pos:line="98" pos:column="70">1<pos:position pos:line="98" pos:column="71"/></literal></expr>]<pos:position pos:line="98" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="98" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="74"/></expr_stmt>
	  <if pos:line="99" pos:column="11">if <condition pos:line="99" pos:column="14">(<expr><operator pos:line="99" pos:column="15">!<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="16">errors<pos:position pos:line="99" pos:column="22"/></name>
	      <operator pos:line="100" pos:column="15">&amp;&amp;<pos:position pos:line="100" pos:column="25"/></operator> <operator pos:line="100" pos:column="18">*<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="19">dlname<pos:position pos:line="100" pos:column="25"/></name>
	      <operator pos:line="101" pos:column="15">&amp;&amp;<pos:position pos:line="101" pos:column="25"/></operator> <operator pos:line="101" pos:column="18">(<pos:position pos:line="101" pos:column="19"/></operator><name pos:line="101" pos:column="19">last_libname<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">=<pos:position pos:line="101" pos:column="33"/></operator> <call><name pos:line="101" pos:column="34">strrchr<pos:position pos:line="101" pos:column="41"/></name> <argument_list pos:line="101" pos:column="42">(<argument><expr><operator pos:line="101" pos:column="43">*<pos:position pos:line="101" pos:column="44"/></operator><name pos:line="101" pos:column="44">dlname<pos:position pos:line="101" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="101" pos:column="52">' '<pos:position pos:line="101" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="56"/></argument_list></call><operator pos:line="101" pos:column="56">)<pos:position pos:line="101" pos:column="57"/></operator> <operator pos:line="101" pos:column="58">!=<pos:position pos:line="101" pos:column="60"/></operator> <literal type="number" pos:line="101" pos:column="61">0<pos:position pos:line="101" pos:column="62"/></literal></expr>)<pos:position pos:line="101" pos:column="63"/></condition><then pos:line="101" pos:column="63">
	    <block pos:line="102" pos:column="13">{
	      <expr_stmt><expr><name pos:line="103" pos:column="15">last_libname<pos:position pos:line="103" pos:column="27"/></name> <operator pos:line="103" pos:column="28">=<pos:position pos:line="103" pos:column="29"/></operator> <call><name pos:line="103" pos:column="30">lt__strdup<pos:position pos:line="103" pos:column="40"/></name> <argument_list pos:line="103" pos:column="41">(<argument><expr><name pos:line="103" pos:column="42">last_libname<pos:position pos:line="103" pos:column="54"/></name> <operator pos:line="103" pos:column="55">+<pos:position pos:line="103" pos:column="56"/></operator> <literal type="number" pos:line="103" pos:column="57">1<pos:position pos:line="103" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="60"/></expr_stmt>
	      <if pos:line="104" pos:column="15">if <condition pos:line="104" pos:column="18">(<expr><operator pos:line="104" pos:column="19">!<pos:position pos:line="104" pos:column="20"/></operator><name pos:line="104" pos:column="20">last_libname<pos:position pos:line="104" pos:column="32"/></name></expr>)<pos:position pos:line="104" pos:column="33"/></condition><then pos:line="104" pos:column="33">
		<block pos:line="105" pos:column="17">{
		  <expr_stmt><expr><operator pos:line="106" pos:column="19">++<pos:position pos:line="106" pos:column="21"/></operator><name pos:line="106" pos:column="21">errors<pos:position pos:line="106" pos:column="27"/></name></expr>;<pos:position pos:line="106" pos:column="28"/></expr_stmt>
		  <goto pos:line="107" pos:column="19">goto <name pos:line="107" pos:column="24">cleanup<pos:position pos:line="107" pos:column="31"/></name>;<pos:position pos:line="107" pos:column="32"/></goto>
		}<pos:position pos:line="108" pos:column="18"/></block></then></if>
	      <expr_stmt><expr><call><name pos:line="109" pos:column="15">MEMREASSIGN<pos:position pos:line="109" pos:column="26"/></name> <argument_list pos:line="109" pos:column="27">(<argument><expr><operator pos:line="109" pos:column="28">*<pos:position pos:line="109" pos:column="29"/></operator><name pos:line="109" pos:column="29">dlname<pos:position pos:line="109" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="37">last_libname<pos:position pos:line="109" pos:column="49"/></name></expr></argument>)<pos:position pos:line="109" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="51"/></expr_stmt>
	    }<pos:position pos:line="110" pos:column="14"/></block></then></if>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if></elseif></if>

      <if pos:line="113" pos:column="7">if <condition pos:line="113" pos:column="10">(<expr><name pos:line="113" pos:column="11">errors<pos:position pos:line="113" pos:column="17"/></name></expr>)<pos:position pos:line="113" pos:column="18"/></condition><then pos:line="113" pos:column="18">
	<block type="pseudo"><break pos:line="114" pos:column="9">break;<pos:position pos:line="114" pos:column="15"/></break></block></then></if>
    }<pos:position pos:line="115" pos:column="6"/></block></while>
<label><name pos:line="116" pos:column="1">cleanup<pos:position pos:line="116" pos:column="8"/></name>:<pos:position pos:line="116" pos:column="9"/></label>
  <expr_stmt><expr><call><name pos:line="117" pos:column="3">FREE<pos:position pos:line="117" pos:column="7"/></name> <argument_list pos:line="117" pos:column="8">(<argument><expr><name pos:line="117" pos:column="9">line<pos:position pos:line="117" pos:column="13"/></name></expr></argument>)<pos:position pos:line="117" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="15"/></expr_stmt>
  <return pos:line="118" pos:column="3">return <expr><name pos:line="118" pos:column="10">errors<pos:position pos:line="118" pos:column="16"/></name></expr>;<pos:position pos:line="118" pos:column="17"/></return>
}<pos:position pos:line="119" pos:column="2"/></block></function></unit>

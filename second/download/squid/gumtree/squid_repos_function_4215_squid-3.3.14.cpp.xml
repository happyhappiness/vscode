<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4215_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Options<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">TransferList<pos:position pos:line="1" pos:column="45"/></name><operator pos:line="1" pos:column="45">::<pos:position pos:line="1" pos:column="47"/></operator><name pos:line="1" pos:column="47">report<pos:position pos:line="1" pos:column="53"/></name></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">level<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="65">const<pos:position pos:line="1" pos:column="70"/></specifier> <name pos:line="1" pos:column="71">char<pos:position pos:line="1" pos:column="75"/></name> <modifier pos:line="1" pos:column="76">*<pos:position pos:line="1" pos:column="77"/></modifier></type><name pos:line="1" pos:column="77">prefix<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list> <specifier pos:line="1" pos:column="85">const<pos:position pos:line="1" pos:column="90"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">extensions<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20"> <block pos:line="3" pos:column="21">{
        <for pos:line="4" pos:column="9">for <control pos:line="4" pos:column="13">(<init><decl><type><name pos:line="4" pos:column="14">wordlist<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">e<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">extensions<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></init> <condition><expr><name pos:line="4" pos:column="40">e<pos:position pos:line="4" pos:column="41"/></name></expr>;<pos:position pos:line="4" pos:column="42"/></condition> <incr><expr><name pos:line="4" pos:column="43">e<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">=<pos:position pos:line="4" pos:column="46"/></operator> <name><name pos:line="4" pos:column="47">e<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><name pos:line="4" pos:column="50">next<pos:position pos:line="4" pos:column="54"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="55"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="13">debugs<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><literal type="number" pos:line="5" pos:column="20">93<pos:position pos:line="5" pos:column="22"/></literal></expr></argument>,<argument><expr><name pos:line="5" pos:column="23">level<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">prefix<pos:position pos:line="5" pos:column="36"/></name> <operator pos:line="5" pos:column="37">&lt;&lt;<pos:position pos:line="5" pos:column="45"/></operator> <name pos:line="5" pos:column="40">name<pos:position pos:line="5" pos:column="44"/></name> <operator pos:line="5" pos:column="45">&lt;&lt;<pos:position pos:line="5" pos:column="53"/></operator> <literal type="string" pos:line="5" pos:column="48">": "<pos:position pos:line="5" pos:column="52"/></literal> <operator pos:line="5" pos:column="53">&lt;&lt;<pos:position pos:line="5" pos:column="61"/></operator> <name><name pos:line="5" pos:column="56">e<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">-&gt;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="59">key<pos:position pos:line="5" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="64"/></expr_stmt></block></for>
    }<pos:position pos:line="6" pos:column="6"/></block></then> <else pos:line="6" pos:column="7">else <block pos:line="6" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">93<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>,<argument><expr><name pos:line="7" pos:column="19">level<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">prefix<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">&lt;&lt;<pos:position pos:line="7" pos:column="41"/></operator> <literal type="string" pos:line="7" pos:column="36">"no "<pos:position pos:line="7" pos:column="41"/></literal> <operator pos:line="7" pos:column="42">&lt;&lt;<pos:position pos:line="7" pos:column="50"/></operator> <name pos:line="7" pos:column="45">name<pos:position pos:line="7" pos:column="49"/></name> <operator pos:line="7" pos:column="50">&lt;&lt;<pos:position pos:line="7" pos:column="58"/></operator> <literal type="string" pos:line="7" pos:column="53">" extensions"<pos:position pos:line="7" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1429_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDigestRequest<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">PeerDigest<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">pd<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">p<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name><name pos:line="4" pos:column="20">pd<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">peer<pos:position pos:line="4" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">old_e<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">url<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">cache_key<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">key<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HttpRequest<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">req<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">StoreIOBuffer<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">tempBuffer<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">pd<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">req_result<pos:position pos:line="11" pos:column="19"/></name></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">pd<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">flags<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">requested<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">=<pos:position pos:line="12" pos:column="26"/></operator> <literal type="boolean" pos:line="12" pos:column="27">true<pos:position pos:line="12" pos:column="31"/></literal></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* compute future request components */</comment>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">p<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">digest_url<pos:position pos:line="16" pos:column="22"/></name></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">url<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">xstrdup<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">p<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">digest_url<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt></block></then>
    <else pos:line="18" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">url<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">xstrdup<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><call><name pos:line="19" pos:column="23">internalRemoteUri<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name><name pos:line="19" pos:column="41">p<pos:position pos:line="19" pos:column="42"/></name><operator pos:line="19" pos:column="42">-&gt;<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="44">host<pos:position pos:line="19" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="50">p<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">http_port<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="64">"/squid-internal-periodic/"<pos:position pos:line="19" pos:column="91"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="93">SBuf<pos:position pos:line="19" pos:column="97"/></name><argument_list pos:line="19" pos:column="97">(<argument><expr><name pos:line="19" pos:column="98">StoreDigestFileName<pos:position pos:line="19" pos:column="117"/></name></expr></argument>)<pos:position pos:line="19" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="121"/></expr_stmt></block></else></if>

    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name><name pos:line="21" pos:column="11">MasterXaction<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">::<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">Pointer<pos:position pos:line="21" pos:column="33"/></name></name></type> <name pos:line="21" pos:column="34">mx<pos:position pos:line="21" pos:column="36"/></name> <init pos:line="21" pos:column="37">= <expr><operator pos:line="21" pos:column="39">new<pos:position pos:line="21" pos:column="42"/></operator> <call><name pos:line="21" pos:column="43">MasterXaction<pos:position pos:line="21" pos:column="56"/></name><argument_list pos:line="21" pos:column="56">(<argument><expr><name><name pos:line="21" pos:column="57">XactionInitiator<pos:position pos:line="21" pos:column="73"/></name><operator pos:line="21" pos:column="73">::<pos:position pos:line="21" pos:column="75"/></operator><name pos:line="21" pos:column="75">initCacheDigest<pos:position pos:line="21" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="92"/></decl_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">req<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <call><name><name pos:line="22" pos:column="11">HttpRequest<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">::<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">FromUrl<pos:position pos:line="22" pos:column="31"/></name></name><argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">url<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">mx<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">req<pos:position pos:line="24" pos:column="15"/></name></expr></argument>)<pos:position pos:line="24" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">key<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <call><name pos:line="26" pos:column="11">storeKeyPublicByRequest<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">req<pos:position pos:line="26" pos:column="38"/></name></expr></argument>)<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">debugs<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="number" pos:line="28" pos:column="12">72<pos:position pos:line="28" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="16">2<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="19">"peerDigestRequest: "<pos:position pos:line="28" pos:column="40"/></literal> <operator pos:line="28" pos:column="41">&lt;&lt;<pos:position pos:line="28" pos:column="49"/></operator> <name pos:line="28" pos:column="44">url<pos:position pos:line="28" pos:column="47"/></name> <operator pos:line="28" pos:column="48">&lt;&lt;<pos:position pos:line="28" pos:column="56"/></operator> <literal type="string" pos:line="28" pos:column="51">" key: "<pos:position pos:line="28" pos:column="59"/></literal> <operator pos:line="28" pos:column="60">&lt;&lt;<pos:position pos:line="28" pos:column="68"/></operator> <call><name pos:line="28" pos:column="63">storeKeyText<pos:position pos:line="28" pos:column="75"/></name><argument_list pos:line="28" pos:column="75">(<argument><expr><name pos:line="28" pos:column="76">key<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="82"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/* add custom headers */</comment>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">assert<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><operator pos:line="31" pos:column="12">!<pos:position pos:line="31" pos:column="13"/></operator><name><name pos:line="31" pos:column="13">req<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">header<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">len<pos:position pos:line="31" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">req<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">header<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">putStr<pos:position pos:line="33" pos:column="23"/></name></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name><name pos:line="33" pos:column="24">Http<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">::<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">HdrType<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">::<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">ACCEPT<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">StoreDigestMimeStr<pos:position pos:line="33" pos:column="65"/></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">req<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">header<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">putStr<pos:position pos:line="35" pos:column="23"/></name></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name><name pos:line="35" pos:column="24">Http<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">::<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">HdrType<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">::<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">ACCEPT<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="47">"text/html"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">p<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">login<pos:position pos:line="37" pos:column="17"/></name></name> <operator pos:line="37" pos:column="18">&amp;&amp;<pos:position pos:line="37" pos:column="28"/></operator>
            <name><name pos:line="38" pos:column="13">p<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">login<pos:position pos:line="38" pos:column="21"/></name><index pos:line="38" pos:column="21">[<expr><literal type="number" pos:line="38" pos:column="22">0<pos:position pos:line="38" pos:column="23"/></literal></expr>]<pos:position pos:line="38" pos:column="24"/></index></name> <operator pos:line="38" pos:column="25">!=<pos:position pos:line="38" pos:column="27"/></operator> <literal type="char" pos:line="38" pos:column="28">'*'<pos:position pos:line="38" pos:column="31"/></literal> <operator pos:line="38" pos:column="32">&amp;&amp;<pos:position pos:line="38" pos:column="42"/></operator>
            <call><name pos:line="39" pos:column="13">strcmp<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name><name pos:line="39" pos:column="20">p<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">-&gt;<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="23">login<pos:position pos:line="39" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="30">"PASS"<pos:position pos:line="39" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call> <operator pos:line="39" pos:column="38">!=<pos:position pos:line="39" pos:column="40"/></operator> <literal type="number" pos:line="39" pos:column="41">0<pos:position pos:line="39" pos:column="42"/></literal> <operator pos:line="39" pos:column="43">&amp;&amp;<pos:position pos:line="39" pos:column="53"/></operator>
            <call><name pos:line="40" pos:column="13">strcmp<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><name><name pos:line="40" pos:column="20">p<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">login<pos:position pos:line="40" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="30">"PASSTHRU"<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call> <operator pos:line="40" pos:column="42">!=<pos:position pos:line="40" pos:column="44"/></operator> <literal type="number" pos:line="40" pos:column="45">0<pos:position pos:line="40" pos:column="46"/></literal> <operator pos:line="40" pos:column="47">&amp;&amp;<pos:position pos:line="40" pos:column="57"/></operator>
            <call><name pos:line="41" pos:column="13">strncmp<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name><name pos:line="41" pos:column="21">p<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">-&gt;<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="24">login<pos:position pos:line="41" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="31">"NEGOTIATE"<pos:position pos:line="41" pos:column="42"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="41" pos:column="43">9<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call> <operator pos:line="41" pos:column="46">!=<pos:position pos:line="41" pos:column="48"/></operator> <literal type="number" pos:line="41" pos:column="49">0<pos:position pos:line="41" pos:column="50"/></literal> <operator pos:line="41" pos:column="51">&amp;&amp;<pos:position pos:line="41" pos:column="61"/></operator>
            <call><name pos:line="42" pos:column="13">strcmp<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name><name pos:line="42" pos:column="20">p<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">-&gt;<pos:position pos:line="42" pos:column="26"/></operator><name pos:line="42" pos:column="23">login<pos:position pos:line="42" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="30">"PROXYPASS"<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call> <operator pos:line="42" pos:column="43">!=<pos:position pos:line="42" pos:column="45"/></operator> <literal type="number" pos:line="42" pos:column="46">0<pos:position pos:line="42" pos:column="47"/></literal></expr>)<pos:position pos:line="42" pos:column="48"/></condition><then pos:line="42" pos:column="48"> <block pos:line="42" pos:column="49">{
        <expr_stmt><expr><call><name><name pos:line="43" pos:column="9">req<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">url<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">.<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">userInfo<pos:position pos:line="43" pos:column="26"/></name></name><argument_list pos:line="43" pos:column="26">(<argument><expr><call><name pos:line="43" pos:column="27">SBuf<pos:position pos:line="43" pos:column="31"/></name><argument_list pos:line="43" pos:column="31">(<argument><expr><name><name pos:line="43" pos:column="32">p<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">-&gt;<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="35">login<pos:position pos:line="43" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt> <comment type="line" pos:line="43" pos:column="44">// XXX: performance regression make peer login SBuf as well.</comment>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="45" pos:column="5">/* create fetch state structure */</comment>
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">DigestFetchState<pos:position pos:line="46" pos:column="21"/></name> <modifier pos:line="46" pos:column="22">*<pos:position pos:line="46" pos:column="23"/></modifier></type><name pos:line="46" pos:column="23">fetch<pos:position pos:line="46" pos:column="28"/></name> <init pos:line="46" pos:column="29">= <expr><operator pos:line="46" pos:column="31">new<pos:position pos:line="46" pos:column="34"/></operator> <call><name pos:line="46" pos:column="35">DigestFetchState<pos:position pos:line="46" pos:column="51"/></name><argument_list pos:line="46" pos:column="51">(<argument><expr><name pos:line="46" pos:column="52">pd<pos:position pos:line="46" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="56">req<pos:position pos:line="46" pos:column="59"/></name></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="61"/></decl_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* update timestamps */</comment>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">pd<pos:position pos:line="49" pos:column="7"/></name><operator pos:line="49" pos:column="7">-&gt;<pos:position pos:line="49" pos:column="12"/></operator><name pos:line="49" pos:column="9">times<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">.<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="15">requested<pos:position pos:line="49" pos:column="24"/></name></name> <operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">squid_curtime<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">pd_last_req_time<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">squid_curtime<pos:position pos:line="50" pos:column="37"/></name></expr>;<pos:position pos:line="50" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">req<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">-&gt;<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="10">flags<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">.<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">cachable<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <literal type="boolean" pos:line="51" pos:column="27">true<pos:position pos:line="51" pos:column="31"/></literal></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/* the rest is based on clientProcessExpired() */</comment>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">req<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">-&gt;<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="10">flags<pos:position pos:line="54" pos:column="15"/></name><operator pos:line="54" pos:column="15">.<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">refresh<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="boolean" pos:line="54" pos:column="26">true<pos:position pos:line="54" pos:column="30"/></literal></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="56" pos:column="5">old_e<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <name><name pos:line="56" pos:column="13">fetch<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">old_entry<pos:position pos:line="56" pos:column="29"/></name></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <call><name><name pos:line="56" pos:column="32">Store<pos:position pos:line="56" pos:column="37"/></name><operator pos:line="56" pos:column="37">::<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">Root<pos:position pos:line="56" pos:column="43"/></name></name><argument_list pos:line="56" pos:column="43">()<pos:position pos:line="56" pos:column="45"/></argument_list></call><operator pos:line="56" pos:column="45">.<pos:position pos:line="56" pos:column="46"/></operator><call><name pos:line="56" pos:column="46">get<pos:position pos:line="56" pos:column="49"/></name><argument_list pos:line="56" pos:column="49">(<argument><expr><name pos:line="56" pos:column="50">key<pos:position pos:line="56" pos:column="53"/></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="55"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">old_e<pos:position pos:line="58" pos:column="14"/></name></expr>)<pos:position pos:line="58" pos:column="15"/></condition><then pos:line="58" pos:column="15"> <block pos:line="58" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">debugs<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="number" pos:line="59" pos:column="16">72<pos:position pos:line="59" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="20">5<pos:position pos:line="59" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="23">"peerDigestRequest: found old entry"<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="61" pos:column="9">old_e<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">lock<pos:position pos:line="61" pos:column="20"/></name></name><argument_list pos:line="61" pos:column="20">(<argument><expr><literal type="string" pos:line="61" pos:column="21">"peerDigestRequest"<pos:position pos:line="61" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="62" pos:column="9">old_e<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">createMemObject<pos:position pos:line="62" pos:column="31"/></name></name><argument_list pos:line="62" pos:column="31">(<argument><expr><name pos:line="62" pos:column="32">url<pos:position pos:line="62" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="37">url<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="42">req<pos:position pos:line="62" pos:column="45"/></name><operator pos:line="62" pos:column="45">-&gt;<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="47">method<pos:position pos:line="62" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="55"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="64" pos:column="9">fetch<pos:position pos:line="64" pos:column="14"/></name><operator pos:line="64" pos:column="14">-&gt;<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="16">old_sc<pos:position pos:line="64" pos:column="22"/></name></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <call><name pos:line="64" pos:column="25">storeClientListAdd<pos:position pos:line="64" pos:column="43"/></name><argument_list pos:line="64" pos:column="43">(<argument><expr><name pos:line="64" pos:column="44">old_e<pos:position pos:line="64" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="51">fetch<pos:position pos:line="64" pos:column="56"/></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="67" pos:column="5">e<pos:position pos:line="67" pos:column="6"/></name> <operator pos:line="67" pos:column="7">=<pos:position pos:line="67" pos:column="8"/></operator> <name><name pos:line="67" pos:column="9">fetch<pos:position pos:line="67" pos:column="14"/></name><operator pos:line="67" pos:column="14">-&gt;<pos:position pos:line="67" pos:column="19"/></operator><name pos:line="67" pos:column="16">entry<pos:position pos:line="67" pos:column="21"/></name></name> <operator pos:line="67" pos:column="22">=<pos:position pos:line="67" pos:column="23"/></operator> <call><name pos:line="67" pos:column="24">storeCreateEntry<pos:position pos:line="67" pos:column="40"/></name><argument_list pos:line="67" pos:column="40">(<argument><expr><name pos:line="67" pos:column="41">url<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="46">url<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="51">req<pos:position pos:line="67" pos:column="54"/></name><operator pos:line="67" pos:column="54">-&gt;<pos:position pos:line="67" pos:column="59"/></operator><name pos:line="67" pos:column="56">flags<pos:position pos:line="67" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="63">req<pos:position pos:line="67" pos:column="66"/></name><operator pos:line="67" pos:column="66">-&gt;<pos:position pos:line="67" pos:column="71"/></operator><name pos:line="67" pos:column="68">method<pos:position pos:line="67" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">assert<pos:position pos:line="68" pos:column="11"/></name><argument_list pos:line="68" pos:column="11">(<argument><expr><call><name pos:line="68" pos:column="12">EBIT_TEST<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name><name pos:line="68" pos:column="22">e<pos:position pos:line="68" pos:column="23"/></name><operator pos:line="68" pos:column="23">-&gt;<pos:position pos:line="68" pos:column="28"/></operator><name pos:line="68" pos:column="25">flags<pos:position pos:line="68" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="32">KEY_PRIVATE<pos:position pos:line="68" pos:column="43"/></name></expr></argument>)<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="69" pos:column="5">fetch<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">-&gt;<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="12">sc<pos:position pos:line="69" pos:column="14"/></name></name> <operator pos:line="69" pos:column="15">=<pos:position pos:line="69" pos:column="16"/></operator> <call><name pos:line="69" pos:column="17">storeClientListAdd<pos:position pos:line="69" pos:column="35"/></name><argument_list pos:line="69" pos:column="35">(<argument><expr><name pos:line="69" pos:column="36">e<pos:position pos:line="69" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">fetch<pos:position pos:line="69" pos:column="44"/></name></expr></argument>)<pos:position pos:line="69" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="46"/></expr_stmt>
    <comment type="block" pos:line="70" pos:column="5">/* set lastmod to trigger IMS request if possible */</comment>

    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name pos:line="72" pos:column="9">old_e<pos:position pos:line="72" pos:column="14"/></name></expr>)<pos:position pos:line="72" pos:column="15"/></condition><then pos:line="72" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="73" pos:column="9">e<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">-&gt;<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="12">lastModified<pos:position pos:line="73" pos:column="24"/></name></name><argument_list pos:line="73" pos:column="24">(<argument><expr><call><name><name pos:line="73" pos:column="25">old_e<pos:position pos:line="73" pos:column="30"/></name><operator pos:line="73" pos:column="30">-&gt;<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="32">lastModified<pos:position pos:line="73" pos:column="44"/></name></name><argument_list pos:line="73" pos:column="44">()<pos:position pos:line="73" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="48"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="75" pos:column="5">/* push towards peer cache */</comment>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">debugs<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><literal type="number" pos:line="76" pos:column="12">72<pos:position pos:line="76" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="16">3<pos:position pos:line="76" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="19">"peerDigestRequest: forwarding to fwdStart..."<pos:position pos:line="76" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="78" pos:column="5">FwdState<pos:position pos:line="78" pos:column="13"/></name><operator pos:line="78" pos:column="13">::<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="15">fwdStart<pos:position pos:line="78" pos:column="23"/></name></name><argument_list pos:line="78" pos:column="23">(<argument><expr><call><name><name pos:line="78" pos:column="24">Comm<pos:position pos:line="78" pos:column="28"/></name><operator pos:line="78" pos:column="28">::<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="30">ConnectionPointer<pos:position pos:line="78" pos:column="47"/></name></name><argument_list pos:line="78" pos:column="47">()<pos:position pos:line="78" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="78" pos:column="51">e<pos:position pos:line="78" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="54">req<pos:position pos:line="78" pos:column="57"/></name></expr></argument>)<pos:position pos:line="78" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="80" pos:column="5">tempBuffer<pos:position pos:line="80" pos:column="15"/></name><operator pos:line="80" pos:column="15">.<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="16">offset<pos:position pos:line="80" pos:column="22"/></name></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator> <literal type="number" pos:line="80" pos:column="25">0<pos:position pos:line="80" pos:column="26"/></literal></expr>;<pos:position pos:line="80" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="82" pos:column="5">tempBuffer<pos:position pos:line="82" pos:column="15"/></name><operator pos:line="82" pos:column="15">.<pos:position pos:line="82" pos:column="16"/></operator><name pos:line="82" pos:column="16">length<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator> <name pos:line="82" pos:column="25">SM_PAGE_SIZE<pos:position pos:line="82" pos:column="37"/></name></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="84" pos:column="5">tempBuffer<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">.<pos:position pos:line="84" pos:column="16"/></operator><name pos:line="84" pos:column="16">data<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <name><name pos:line="84" pos:column="23">fetch<pos:position pos:line="84" pos:column="28"/></name><operator pos:line="84" pos:column="28">-&gt;<pos:position pos:line="84" pos:column="33"/></operator><name pos:line="84" pos:column="30">buf<pos:position pos:line="84" pos:column="33"/></name></name></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="86" pos:column="5">storeClientCopy<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name><name pos:line="86" pos:column="21">fetch<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">-&gt;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="28">sc<pos:position pos:line="86" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="32">e<pos:position pos:line="86" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">tempBuffer<pos:position pos:line="86" pos:column="45"/></name></expr></argument>,
                    <argument><expr><name pos:line="87" pos:column="21">peerDigestHandleReply<pos:position pos:line="87" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="44">fetch<pos:position pos:line="87" pos:column="49"/></name></expr></argument>)<pos:position pos:line="87" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">safe_free<pos:position pos:line="89" pos:column="14"/></name><argument_list pos:line="89" pos:column="14">(<argument><expr><name pos:line="89" pos:column="15">url<pos:position pos:line="89" pos:column="18"/></name></expr></argument>)<pos:position pos:line="89" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="20"/></expr_stmt>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

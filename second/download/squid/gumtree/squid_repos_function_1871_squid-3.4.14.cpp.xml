<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1871_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">neighborUpdateRtt<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">CachePeer<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">p<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">MemObject<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">mem<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rtt<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">rtt_av_factor<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">mem<pos:position pos:line="6" pos:column="13"/></name></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">mem<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">start_ping<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">tv_sec<pos:position pos:line="9" pos:column="32"/></name></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">rtt<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">tvSubMsec<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name><name pos:line="12" pos:column="21">mem<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">start_ping<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">current_time<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">rtt<pos:position pos:line="14" pos:column="12"/></name> <argument_list type="generic" pos:line="14" pos:column="13">&lt; <argument><expr><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal> <operator pos:line="14" pos:column="17">||<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">rtt<pos:position pos:line="14" pos:column="23"/></name></expr></argument> &gt;<pos:position pos:line="14" pos:column="28"/></argument_list></name> <literal type="number" pos:line="14" pos:column="26">10000<pos:position pos:line="14" pos:column="31"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
        <block type="pseudo"><return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rtt_av_factor<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">RTT_AV_FACTOR<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">p<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">options<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">weighted_roundrobin<pos:position pos:line="19" pos:column="39"/></name></name></expr>)<pos:position pos:line="19" pos:column="40"/></condition><then pos:line="19" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">rtt_av_factor<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">RTT_BACKGROUND_AV_FACTOR<pos:position pos:line="20" pos:column="49"/></name></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">p<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">stats<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">rtt<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name><name pos:line="22" pos:column="20">Math<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">::<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">intAverage<pos:position pos:line="22" pos:column="36"/></name></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">p<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">stats<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">.<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">rtt<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">rtt<pos:position pos:line="22" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="56">p<pos:position pos:line="22" pos:column="57"/></name><operator pos:line="22" pos:column="57">-&gt;<pos:position pos:line="22" pos:column="62"/></operator><name pos:line="22" pos:column="59">stats<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">.<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="65">pings_acked<pos:position pos:line="22" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="78">rtt_av_factor<pos:position pos:line="22" pos:column="91"/></name></expr></argument>)<pos:position pos:line="22" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="93"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3545_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">parseHttpHead<pos:position pos:line="1" pos:column="46"/></name></name><parameter_list pos:line="1" pos:column="46">()<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">gotEncapsulated<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><literal type="string" pos:line="3" pos:column="25">"res-hdr"<pos:position pos:line="3" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call> <operator pos:line="3" pos:column="36">||<pos:position pos:line="3" pos:column="38"/></operator> <call><name pos:line="3" pos:column="39">gotEncapsulated<pos:position pos:line="3" pos:column="54"/></name><argument_list pos:line="3" pos:column="54">(<argument><expr><literal type="string" pos:line="3" pos:column="55">"req-hdr"<pos:position pos:line="3" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="66"/></condition><then pos:line="3" pos:column="66"> <block pos:line="3" pos:column="67">{
        <expr_stmt><expr><name pos:line="4" pos:column="9">replyHttpHeaderSize<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">=<pos:position pos:line="4" pos:column="30"/></operator> <literal type="number" pos:line="4" pos:column="31">0<pos:position pos:line="4" pos:column="32"/></literal></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">maybeAllocateHttpMsg<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">()<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>

        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><call><name pos:line="7" pos:column="14">parseHead<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name><name pos:line="7" pos:column="24">adapted<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">header<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="40"/></condition><then pos:line="7" pos:column="40">
            <block type="pseudo"><return pos:line="8" pos:column="13">return;<pos:position pos:line="8" pos:column="20"/></return></block></then></if> <comment type="line" pos:line="8" pos:column="21">// need more header data</comment>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">adapted<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">header<pos:position pos:line="10" pos:column="27"/></name></name></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="13">replyHttpHeaderSize<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">=<pos:position pos:line="11" pos:column="34"/></operator> <name><name pos:line="11" pos:column="35">adapted<pos:position pos:line="11" pos:column="42"/></name><operator pos:line="11" pos:column="42">.<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="43">header<pos:position pos:line="11" pos:column="49"/></name><operator pos:line="11" pos:column="49">-&gt;<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="51">hdr_sz<pos:position pos:line="11" pos:column="57"/></name></name></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt></block></then></if>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><cast type="dynamic" pos:line="13" pos:column="13">dynamic_cast<argument_list type="generic" pos:line="13" pos:column="25">&lt;<argument><expr><name pos:line="13" pos:column="26">HttpRequest<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">*<pos:position pos:line="13" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="42"/></argument_list><argument_list pos:line="13" pos:column="39">(<argument><expr><name><name pos:line="13" pos:column="40">adapted<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">.<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">header<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></cast></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56"> <block pos:line="13" pos:column="57">{
            <decl_stmt><decl><type><specifier pos:line="14" pos:column="13">const<pos:position pos:line="14" pos:column="18"/></specifier> <name pos:line="14" pos:column="19">HttpRequest<pos:position pos:line="14" pos:column="30"/></name> <modifier pos:line="14" pos:column="31">*<pos:position pos:line="14" pos:column="32"/></modifier></type><name pos:line="14" pos:column="32">oldR<pos:position pos:line="14" pos:column="36"/></name> <init pos:line="14" pos:column="37">= <expr><cast type="dynamic" pos:line="14" pos:column="39">dynamic_cast<argument_list type="generic" pos:line="14" pos:column="51">&lt;<argument><expr><specifier pos:line="14" pos:column="52">const<pos:position pos:line="14" pos:column="57"/></specifier> <name pos:line="14" pos:column="58">HttpRequest<pos:position pos:line="14" pos:column="69"/></name><operator pos:line="14" pos:column="69">*<pos:position pos:line="14" pos:column="70"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="74"/></argument_list><argument_list pos:line="14" pos:column="71">(<argument><expr><name><name pos:line="14" pos:column="72">virgin<pos:position pos:line="14" pos:column="78"/></name><operator pos:line="14" pos:column="78">.<pos:position pos:line="14" pos:column="79"/></operator><name pos:line="14" pos:column="79">header<pos:position pos:line="14" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="86"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="14" pos:column="87"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">Must<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">oldR<pos:position pos:line="15" pos:column="22"/></name></expr></argument>)<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
            <comment type="line" pos:line="16" pos:column="13">// TODO: the adapted request did not really originate from the</comment>
            <comment type="line" pos:line="17" pos:column="13">// client; give proxy admin an option to prevent copying of</comment>
            <comment type="line" pos:line="18" pos:column="13">// sensitive client information here. See the following thread:</comment>
            <comment type="line" pos:line="19" pos:column="13">// http://www.squid-cache.org/mail-archive/squid-dev/200703/0040.html</comment>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="22" pos:column="9">// Maybe adapted.header==NULL if HttpReply and have Http 0.9 ....</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">adapted<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">.<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">header<pos:position pos:line="23" pos:column="27"/></name></name></expr>)<pos:position pos:line="23" pos:column="28"/></condition><then pos:line="23" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="13">adapted<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">header<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">inheritProperties<pos:position pos:line="24" pos:column="46"/></name></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name><name pos:line="24" pos:column="47">virgin<pos:position pos:line="24" pos:column="53"/></name><operator pos:line="24" pos:column="53">.<pos:position pos:line="24" pos:column="54"/></operator><name pos:line="24" pos:column="54">header<pos:position pos:line="24" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">decideOnParsingBody<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">()<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

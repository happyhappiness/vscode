<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_867_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">unsigned<pos:position pos:line="1" pos:column="9"/></name> <name pos:line="1" pos:column="10">short<pos:position pos:line="1" pos:column="15"/></name></type>
<name pos:line="2" pos:column="1">comm_local_port<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">fd<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">temp<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">addrinfo<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">addr<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name pos:line="5" pos:column="29">NULL<pos:position pos:line="5" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">fde<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">F<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><operator pos:line="6" pos:column="14">&amp;<pos:position pos:line="6" pos:column="19"/></operator><name><name pos:line="6" pos:column="15">fd_table<pos:position pos:line="6" pos:column="23"/></name><index pos:line="6" pos:column="23">[<expr><name pos:line="6" pos:column="24">fd<pos:position pos:line="6" pos:column="26"/></name></expr>]<pos:position pos:line="6" pos:column="27"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* If the fd is closed already, just return */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">F<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">-&gt;<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="13">flags<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">open<pos:position pos:line="10" pos:column="23"/></name></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="22">"comm_local_port: FD "<pos:position pos:line="11" pos:column="44"/></literal> <operator pos:line="11" pos:column="45">&lt;&lt;<pos:position pos:line="11" pos:column="53"/></operator> <name pos:line="11" pos:column="48">fd<pos:position pos:line="11" pos:column="50"/></name> <operator pos:line="11" pos:column="51">&lt;&lt;<pos:position pos:line="11" pos:column="59"/></operator> <literal type="string" pos:line="11" pos:column="54">" has been closed."<pos:position pos:line="11" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">F<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">local_addr<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">GetPort<pos:position pos:line="15" pos:column="30"/></name></name><argument_list pos:line="15" pos:column="30">()<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><call><name><name pos:line="16" pos:column="16">F<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">local_addr<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">.<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="30">GetPort<pos:position pos:line="16" pos:column="37"/></name></name><argument_list pos:line="16" pos:column="37">()<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">F<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">sock_family<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">==<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">AF_INET<pos:position pos:line="18" pos:column="34"/></name></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="9">temp<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">SetIPv4<pos:position pos:line="19" pos:column="21"/></name></name><argument_list pos:line="19" pos:column="21">()<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">temp<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">.<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">InitAddrInfo<pos:position pos:line="21" pos:column="22"/></name></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">addr<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">getsockname<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name pos:line="23" pos:column="21">fd<pos:position pos:line="23" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="25">addr<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">ai_addr<pos:position pos:line="23" pos:column="38"/></name></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><operator pos:line="23" pos:column="41">(<pos:position pos:line="23" pos:column="42"/></operator><name><name pos:line="23" pos:column="42">addr<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">ai_addrlen<pos:position pos:line="23" pos:column="58"/></name></name><operator pos:line="23" pos:column="58">)<pos:position pos:line="23" pos:column="59"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr> )<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block pos:line="23" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">50<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">DBG_IMPORTANT<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"comm_local_port: Failed to retrieve TCP/UDP port number for socket: FD "<pos:position pos:line="24" pos:column="108"/></literal> <operator pos:line="24" pos:column="109">&lt;&lt;<pos:position pos:line="24" pos:column="117"/></operator> <name pos:line="24" pos:column="112">fd<pos:position pos:line="24" pos:column="114"/></name> <operator pos:line="24" pos:column="115">&lt;&lt;<pos:position pos:line="24" pos:column="123"/></operator> <literal type="string" pos:line="24" pos:column="118">": "<pos:position pos:line="24" pos:column="122"/></literal> <operator pos:line="24" pos:column="123">&lt;&lt;<pos:position pos:line="24" pos:column="131"/></operator> <call><name pos:line="24" pos:column="126">xstrerror<pos:position pos:line="24" pos:column="135"/></name><argument_list pos:line="24" pos:column="135">()<pos:position pos:line="24" pos:column="137"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="139"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">temp<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">.<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">FreeAddrInfo<pos:position pos:line="25" pos:column="26"/></name></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">addr<pos:position pos:line="25" pos:column="31"/></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">temp<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">*<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">addr<pos:position pos:line="28" pos:column="17"/></name></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">temp<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">.<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">FreeAddrInfo<pos:position pos:line="30" pos:column="22"/></name></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">addr<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name><name pos:line="32" pos:column="9">F<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">local_addr<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">IsAnyAddr<pos:position pos:line="32" pos:column="32"/></name></name><argument_list pos:line="32" pos:column="32">()<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35"> <block pos:line="32" pos:column="36">{
        <comment type="block" pos:line="33" pos:column="9">/* save the whole local address, not just the port. */</comment>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">F<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">local_addr<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="25">temp<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <else pos:line="35" pos:column="7">else <block pos:line="35" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="36" pos:column="9">F<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">local_addr<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">SetPort<pos:position pos:line="36" pos:column="30"/></name></name><argument_list pos:line="36" pos:column="30">(<argument><expr><call><name><name pos:line="36" pos:column="31">temp<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">GetPort<pos:position pos:line="36" pos:column="43"/></name></name><argument_list pos:line="36" pos:column="43">()<pos:position pos:line="36" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">debugs<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="number" pos:line="39" pos:column="12">5<pos:position pos:line="39" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="15">6<pos:position pos:line="39" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="18">"comm_local_port: FD "<pos:position pos:line="39" pos:column="40"/></literal> <operator pos:line="39" pos:column="41">&lt;&lt;<pos:position pos:line="39" pos:column="49"/></operator> <name pos:line="39" pos:column="44">fd<pos:position pos:line="39" pos:column="46"/></name> <operator pos:line="39" pos:column="47">&lt;&lt;<pos:position pos:line="39" pos:column="55"/></operator> <literal type="string" pos:line="39" pos:column="50">": port "<pos:position pos:line="39" pos:column="59"/></literal> <operator pos:line="39" pos:column="60">&lt;&lt;<pos:position pos:line="39" pos:column="68"/></operator> <call><name><name pos:line="39" pos:column="63">F<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">-&gt;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="66">local_addr<pos:position pos:line="39" pos:column="76"/></name><operator pos:line="39" pos:column="76">.<pos:position pos:line="39" pos:column="77"/></operator><name pos:line="39" pos:column="77">GetPort<pos:position pos:line="39" pos:column="84"/></name></name><argument_list pos:line="39" pos:column="84">()<pos:position pos:line="39" pos:column="86"/></argument_list></call> <operator pos:line="39" pos:column="87">&lt;&lt;<pos:position pos:line="39" pos:column="95"/></operator> <literal type="string" pos:line="39" pos:column="90">"(family="<pos:position pos:line="39" pos:column="100"/></literal> <operator pos:line="39" pos:column="101">&lt;&lt;<pos:position pos:line="39" pos:column="109"/></operator> <name><name pos:line="39" pos:column="104">F<pos:position pos:line="39" pos:column="105"/></name><operator pos:line="39" pos:column="105">-&gt;<pos:position pos:line="39" pos:column="110"/></operator><name pos:line="39" pos:column="107">sock_family<pos:position pos:line="39" pos:column="118"/></name></name> <operator pos:line="39" pos:column="119">&lt;&lt;<pos:position pos:line="39" pos:column="127"/></operator> <literal type="string" pos:line="39" pos:column="122">")"<pos:position pos:line="39" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="127"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><call><name><name pos:line="40" pos:column="12">F<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">local_addr<pos:position pos:line="40" pos:column="25"/></name><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">GetPort<pos:position pos:line="40" pos:column="33"/></name></name><argument_list pos:line="40" pos:column="33">()<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

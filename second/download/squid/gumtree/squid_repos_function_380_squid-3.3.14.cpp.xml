<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_380_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">name_cmp<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">a<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">void<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">b<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier> <specifier pos:line="4" pos:column="18">const<pos:position pos:line="4" pos:column="23"/></specifier> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">A<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><cast type="static" pos:line="4" pos:column="29">static_cast<argument_list type="generic" pos:line="4" pos:column="40">&lt;<argument><expr><specifier pos:line="4" pos:column="41">const<pos:position pos:line="4" pos:column="46"/></specifier> <name pos:line="4" pos:column="47">char<pos:position pos:line="4" pos:column="51"/></name> <operator pos:line="4" pos:column="52">*<pos:position pos:line="4" pos:column="53"/></operator> <specifier pos:line="4" pos:column="54">const<pos:position pos:line="4" pos:column="59"/></specifier> <operator pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="65"/></argument_list><argument_list pos:line="4" pos:column="62">(<argument><expr><name pos:line="4" pos:column="63">a<pos:position pos:line="4" pos:column="64"/></name></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier> <specifier pos:line="5" pos:column="18">const<pos:position pos:line="5" pos:column="23"/></specifier> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">B<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><cast type="static" pos:line="5" pos:column="29">static_cast<argument_list type="generic" pos:line="5" pos:column="40">&lt;<argument><expr><specifier pos:line="5" pos:column="41">const<pos:position pos:line="5" pos:column="46"/></specifier> <name pos:line="5" pos:column="47">char<pos:position pos:line="5" pos:column="51"/></name> <operator pos:line="5" pos:column="52">*<pos:position pos:line="5" pos:column="53"/></operator> <specifier pos:line="5" pos:column="54">const<pos:position pos:line="5" pos:column="59"/></specifier> <operator pos:line="5" pos:column="60">*<pos:position pos:line="5" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="65"/></argument_list><argument_list pos:line="5" pos:column="62">(<argument><expr><name pos:line="5" pos:column="63">b<pos:position pos:line="5" pos:column="64"/></name></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="5" pos:column="66"/></decl_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">strcasecmp<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">A<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">B<pos:position pos:line="6" pos:column="29"/></name></expr></argument>)<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

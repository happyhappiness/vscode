<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2655_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">IamPrimaryProcess<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// when there is only one process, it has to be primary</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">opt_no_daemon<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">||<pos:position pos:line="5" pos:column="25"/></operator> <name><name pos:line="5" pos:column="26">Config<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">workers<pos:position pos:line="5" pos:column="40"/></name></name> <operator pos:line="5" pos:column="41">==<pos:position pos:line="5" pos:column="43"/></operator> <literal type="number" pos:line="5" pos:column="44">0<pos:position pos:line="5" pos:column="45"/></literal></expr>)<pos:position pos:line="5" pos:column="46"/></condition><then pos:line="5" pos:column="46">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">true<pos:position pos:line="6" pos:column="20"/></literal></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

    <comment type="line" pos:line="8" pos:column="5">// when there is a master and worker process, the master delegates</comment>
    <comment type="line" pos:line="9" pos:column="5">// primary functions to its only kid</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">NumberOfKids<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">()<pos:position pos:line="10" pos:column="23"/></argument_list></call> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="27">1<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">IamWorkerProcess<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">()<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></return></block></then></if>

    <comment type="line" pos:line="13" pos:column="5">// in SMP mode, multiple kids delegate primary functions to the coordinator</comment>
    <return pos:line="14" pos:column="5">return <expr><call><name pos:line="14" pos:column="12">IamCoordinatorProcess<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">()<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

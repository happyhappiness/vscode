<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5273_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Relay<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">readFeatReply<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name pos:line="4" pos:column="12">serverState<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call> <operator pos:line="4" pos:column="26">==<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="29">fssHandleFeat<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><literal type="number" pos:line="6" pos:column="9">100<pos:position pos:line="6" pos:column="12"/></literal> <operator pos:line="6" pos:column="13">&lt;=<pos:position pos:line="6" pos:column="18"/></operator> <name><name pos:line="6" pos:column="16">ctrl<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">replycode<pos:position pos:line="6" pos:column="30"/></name></name> <operator pos:line="6" pos:column="31">&amp;&amp;<pos:position pos:line="6" pos:column="41"/></operator> <name><name pos:line="6" pos:column="34">ctrl<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">.<pos:position pos:line="6" pos:column="39"/></operator><name pos:line="6" pos:column="39">replycode<pos:position pos:line="6" pos:column="48"/></name></name> <operator pos:line="6" pos:column="49">&lt;<pos:position pos:line="6" pos:column="53"/></operator> <literal type="number" pos:line="6" pos:column="51">200<pos:position pos:line="6" pos:column="54"/></literal></expr>)<pos:position pos:line="6" pos:column="55"/></condition><then pos:line="6" pos:column="55">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="7" pos:column="17">// ignore preliminary replies</comment>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">forwardReply<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">()<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

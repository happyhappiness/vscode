<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_702_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Raw<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">printHex<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">std<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">ostream<pos:position pos:line="2" pos:column="27"/></name></name> <modifier pos:line="2" pos:column="28">&amp;<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="29">os<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list> <specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <specifier pos:line="4" pos:column="11">auto<pos:position pos:line="4" pos:column="15"/></specifier></type> <name pos:line="4" pos:column="16">savedFill<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name><name pos:line="4" pos:column="28">os<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">fill<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">(<argument><expr><literal type="char" pos:line="4" pos:column="36">'0'<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <specifier pos:line="5" pos:column="11">auto<pos:position pos:line="5" pos:column="15"/></specifier></type> <name pos:line="5" pos:column="16">savedFlags<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name><name pos:line="5" pos:column="29">os<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">flags<pos:position pos:line="5" pos:column="37"/></name></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt> <comment type="line" pos:line="5" pos:column="41">// std::ios_base::fmtflags</comment>
    <expr_stmt><expr><name pos:line="6" pos:column="5">os<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">&lt;&lt;<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="11">std<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">hex<pos:position pos:line="6" pos:column="19"/></name></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">std<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">for_each<pos:position pos:line="7" pos:column="18"/></name></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">data_<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="26">data_<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">+<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">size_<pos:position pos:line="7" pos:column="39"/></name></expr></argument>,
    <argument><expr><lambda><capture pos:line="8" pos:column="5">[<argument><modifier pos:line="8" pos:column="6">&amp;<pos:position pos:line="8" pos:column="11"/></modifier><name pos:line="8" pos:column="7">os<pos:position pos:line="8" pos:column="9"/></name></argument>]<pos:position pos:line="8" pos:column="10"/></capture><parameter_list pos:line="8" pos:column="10">(<parameter><decl><type><specifier pos:line="8" pos:column="11">const<pos:position pos:line="8" pos:column="16"/></specifier> <name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="23">c<pos:position pos:line="8" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="25"/></parameter_list> <block pos:line="8" pos:column="26">{ <expr_stmt><expr><name pos:line="8" pos:column="28">os<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">&lt;&lt;<pos:position pos:line="8" pos:column="39"/></operator> <call><name><name pos:line="8" pos:column="34">std<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">::<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">setw<pos:position pos:line="8" pos:column="43"/></name></name><argument_list pos:line="8" pos:column="43">(<argument><expr><literal type="number" pos:line="8" pos:column="44">2<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call> <operator pos:line="8" pos:column="47">&lt;&lt;<pos:position pos:line="8" pos:column="55"/></operator> <cast type="static" pos:line="8" pos:column="50">static_cast<argument_list type="generic" pos:line="8" pos:column="61">&lt;<argument><expr><name pos:line="8" pos:column="62">uint8_t<pos:position pos:line="8" pos:column="69"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="73"/></argument_list><argument_list pos:line="8" pos:column="70">(<argument><expr><name pos:line="8" pos:column="71">c<pos:position pos:line="8" pos:column="72"/></name></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></cast></expr>;<pos:position pos:line="8" pos:column="74"/></expr_stmt> }<pos:position pos:line="8" pos:column="76"/></block></lambda></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">os<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">flags<pos:position pos:line="9" pos:column="13"/></name></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">savedFlags<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">os<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">.<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">fill<pos:position pos:line="10" pos:column="12"/></name></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">savedFill<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2633_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parseEtcHosts<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FILE<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">fp<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">1024<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf2<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">512<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">nt<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">buf<pos:position pos:line="7" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">lt<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><name pos:line="8" pos:column="16">buf<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">NULL<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name><name pos:line="10" pos:column="17">Config<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">etcHostsPath<pos:position pos:line="10" pos:column="36"/></name></name></expr>)<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><literal type="number" pos:line="13" pos:column="9">0<pos:position pos:line="13" pos:column="10"/></literal> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strcmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name><name pos:line="13" pos:column="21">Config<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">.<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">etcHostsPath<pos:position pos:line="13" pos:column="40"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"none"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">fp<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">fopen<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">Config<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">etcHostsPath<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="37">"r"<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">fp<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">==<pos:position pos:line="18" pos:column="14"/></operator> <name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20"> <block pos:line="18" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">1<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="19">DBG_IMPORTANT<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"parseEtcHosts: "<pos:position pos:line="19" pos:column="51"/></literal> <operator pos:line="19" pos:column="52">&lt;&lt;<pos:position pos:line="19" pos:column="60"/></operator> <name><name pos:line="19" pos:column="55">Config<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">.<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="62">etcHostsPath<pos:position pos:line="19" pos:column="74"/></name></name> <operator pos:line="19" pos:column="75">&lt;&lt;<pos:position pos:line="19" pos:column="83"/></operator> <literal type="string" pos:line="19" pos:column="78">": "<pos:position pos:line="19" pos:column="82"/></literal> <operator pos:line="19" pos:column="83">&lt;&lt;<pos:position pos:line="19" pos:column="91"/></operator> <call><name pos:line="19" pos:column="86">xstrerror<pos:position pos:line="19" pos:column="95"/></name><argument_list pos:line="19" pos:column="95">()<pos:position pos:line="19" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="99"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="23" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">setmode<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><call><name pos:line="24" pos:column="13">fileno<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">fp<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="25">O_TEXT<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

    <while pos:line="27" pos:column="5">while <condition pos:line="27" pos:column="11">(<expr><call><name pos:line="27" pos:column="12">fgets<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">buf<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="23">1024<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="29">fp<pos:position pos:line="27" pos:column="31"/></name></expr></argument>)<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="33"/></condition> <block pos:line="27" pos:column="34">{	<comment type="block" pos:line="27" pos:column="41">/* for each line */</comment>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">wordlist<pos:position pos:line="28" pos:column="17"/></name> <modifier pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></modifier></type><name pos:line="28" pos:column="19">hosts<pos:position pos:line="28" pos:column="24"/></name> <init pos:line="28" pos:column="25">= <expr><name pos:line="28" pos:column="27">NULL<pos:position pos:line="28" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="32"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">char<pos:position pos:line="29" pos:column="13"/></name> <modifier pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></modifier></type><name pos:line="29" pos:column="15">addr<pos:position pos:line="29" pos:column="19"/></name></decl>;<pos:position pos:line="29" pos:column="20"/></decl_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">buf<pos:position pos:line="31" pos:column="16"/></name><index pos:line="31" pos:column="16">[<expr><literal type="number" pos:line="31" pos:column="17">0<pos:position pos:line="31" pos:column="18"/></literal></expr>]<pos:position pos:line="31" pos:column="19"/></index></name> <operator pos:line="31" pos:column="20">==<pos:position pos:line="31" pos:column="22"/></operator> <literal type="char" pos:line="31" pos:column="23">'#'<pos:position pos:line="31" pos:column="26"/></literal></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">	<comment type="block" pos:line="31" pos:column="33">/* MS-windows likes to add comments */</comment>
            <block type="pseudo"><continue pos:line="32" pos:column="13">continue;<pos:position pos:line="32" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">strtok<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">buf<pos:position pos:line="34" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="21">"#"<pos:position pos:line="34" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>	<comment type="block" pos:line="34" pos:column="33">/* chop everything following a comment marker */</comment>

        <expr_stmt><expr><name pos:line="36" pos:column="9">lt<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">buf<pos:position pos:line="36" pos:column="17"/></name></expr>;<pos:position pos:line="36" pos:column="18"/></expr_stmt>

        <expr_stmt><expr><name pos:line="38" pos:column="9">addr<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">buf<pos:position pos:line="38" pos:column="19"/></name></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="40" pos:column="9">debugs<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="19">5<pos:position pos:line="40" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="22">"etc_hosts: line is '"<pos:position pos:line="40" pos:column="44"/></literal> <operator pos:line="40" pos:column="45">&lt;&lt;<pos:position pos:line="40" pos:column="53"/></operator> <name pos:line="40" pos:column="48">buf<pos:position pos:line="40" pos:column="51"/></name> <operator pos:line="40" pos:column="52">&lt;&lt;<pos:position pos:line="40" pos:column="60"/></operator> <literal type="string" pos:line="40" pos:column="55">"'"<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt>

        <expr_stmt><expr><name pos:line="42" pos:column="9">nt<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">strpbrk<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">lt<pos:position pos:line="42" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="26">w_space<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">nt<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">==<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">NULL<pos:position pos:line="44" pos:column="23"/></name></expr>)<pos:position pos:line="44" pos:column="24"/></condition><then pos:line="44" pos:column="24">		<comment type="block" pos:line="44" pos:column="33">/* empty line */</comment>
            <block type="pseudo"><continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><operator pos:line="47" pos:column="9">*<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">nt<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <literal type="char" pos:line="47" pos:column="15">'\0'<pos:position pos:line="47" pos:column="19"/></literal></expr>;<pos:position pos:line="47" pos:column="20"/></expr_stmt>		<comment type="block" pos:line="47" pos:column="33">/* null-terminate the address */</comment>

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">debugs<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="number" pos:line="49" pos:column="16">1<pos:position pos:line="49" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="19">5<pos:position pos:line="49" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="22">"etc_hosts: address is '"<pos:position pos:line="49" pos:column="47"/></literal> <operator pos:line="49" pos:column="48">&lt;&lt;<pos:position pos:line="49" pos:column="56"/></operator> <name pos:line="49" pos:column="51">addr<pos:position pos:line="49" pos:column="55"/></name> <operator pos:line="49" pos:column="56">&lt;&lt;<pos:position pos:line="49" pos:column="64"/></operator> <literal type="string" pos:line="49" pos:column="59">"'"<pos:position pos:line="49" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>

        <expr_stmt><expr><name pos:line="51" pos:column="9">lt<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <name pos:line="51" pos:column="14">nt<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">+<pos:position pos:line="51" pos:column="18"/></operator> <literal type="number" pos:line="51" pos:column="19">1<pos:position pos:line="51" pos:column="20"/></literal></expr>;<pos:position pos:line="51" pos:column="21"/></expr_stmt>

        <while pos:line="53" pos:column="9">while <condition pos:line="53" pos:column="15">(<expr><operator pos:line="53" pos:column="16">(<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">nt<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">strpbrk<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">lt<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="34">w_space<pos:position pos:line="53" pos:column="41"/></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call><operator pos:line="53" pos:column="42">)<pos:position pos:line="53" pos:column="43"/></operator></expr>)<pos:position pos:line="53" pos:column="44"/></condition> <block pos:line="53" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">char<pos:position pos:line="54" pos:column="17"/></name> <modifier pos:line="54" pos:column="18">*<pos:position pos:line="54" pos:column="19"/></modifier></type><name pos:line="54" pos:column="19">host<pos:position pos:line="54" pos:column="23"/></name> <init pos:line="54" pos:column="24">= <expr><name pos:line="54" pos:column="26">NULL<pos:position pos:line="54" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="54" pos:column="31"/></decl_stmt>

            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">nt<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">==<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">lt<pos:position pos:line="56" pos:column="25"/></name></expr>)<pos:position pos:line="56" pos:column="26"/></condition><then pos:line="56" pos:column="26"> <block pos:line="56" pos:column="27">{	<comment type="block" pos:line="56" pos:column="33">/* multiple spaces */</comment>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">debugs<pos:position pos:line="57" pos:column="23"/></name><argument_list pos:line="57" pos:column="23">(<argument><expr><literal type="number" pos:line="57" pos:column="24">1<pos:position pos:line="57" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="27">5<pos:position pos:line="57" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="30">"etc_hosts: multiple spaces, skipping"<pos:position pos:line="57" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt>
                <expr_stmt><expr><name pos:line="58" pos:column="17">lt<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">=<pos:position pos:line="58" pos:column="21"/></operator> <name pos:line="58" pos:column="22">nt<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">+<pos:position pos:line="58" pos:column="26"/></operator> <literal type="number" pos:line="58" pos:column="27">1<pos:position pos:line="58" pos:column="28"/></literal></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
                <continue pos:line="59" pos:column="17">continue;<pos:position pos:line="59" pos:column="26"/></continue>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="62" pos:column="13">*<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">nt<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">=<pos:position pos:line="62" pos:column="18"/></operator> <literal type="char" pos:line="62" pos:column="19">'\0'<pos:position pos:line="62" pos:column="23"/></literal></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">debugs<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="number" pos:line="63" pos:column="20">1<pos:position pos:line="63" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="23">5<pos:position pos:line="63" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="26">"etc_hosts: got hostname '"<pos:position pos:line="63" pos:column="53"/></literal> <operator pos:line="63" pos:column="54">&lt;&lt;<pos:position pos:line="63" pos:column="62"/></operator> <name pos:line="63" pos:column="57">lt<pos:position pos:line="63" pos:column="59"/></name> <operator pos:line="63" pos:column="60">&lt;&lt;<pos:position pos:line="63" pos:column="68"/></operator> <literal type="string" pos:line="63" pos:column="63">"'"<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt>

            <comment type="block" pos:line="65" pos:column="13">/* For IPV6 addresses also check for a colon */</comment>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name><name pos:line="66" pos:column="17">Config<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">.<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">appendDomain<pos:position pos:line="66" pos:column="36"/></name></name> <operator pos:line="66" pos:column="37">&amp;&amp;<pos:position pos:line="66" pos:column="47"/></operator> <operator pos:line="66" pos:column="40">!<pos:position pos:line="66" pos:column="41"/></operator><call><name pos:line="66" pos:column="41">strchr<pos:position pos:line="66" pos:column="47"/></name><argument_list pos:line="66" pos:column="47">(<argument><expr><name pos:line="66" pos:column="48">lt<pos:position pos:line="66" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="66" pos:column="52">'.'<pos:position pos:line="66" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call> <operator pos:line="66" pos:column="57">&amp;&amp;<pos:position pos:line="66" pos:column="67"/></operator> <operator pos:line="66" pos:column="60">!<pos:position pos:line="66" pos:column="61"/></operator><call><name pos:line="66" pos:column="61">strchr<pos:position pos:line="66" pos:column="67"/></name><argument_list pos:line="66" pos:column="67">(<argument><expr><name pos:line="66" pos:column="68">lt<pos:position pos:line="66" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="66" pos:column="72">':'<pos:position pos:line="66" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="77"/></condition><then pos:line="66" pos:column="77"> <block pos:line="66" pos:column="78">{
                <comment type="block" pos:line="67" pos:column="17">/* I know it's ugly, but it's only at reconfig */</comment>
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">strncpy<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">(<argument><expr><name pos:line="68" pos:column="25">buf2<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="31">lt<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="68" pos:column="35">sizeof<argument_list pos:line="68" pos:column="41">(<argument><expr><name pos:line="68" pos:column="42">buf2<pos:position pos:line="68" pos:column="46"/></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></sizeof><operator pos:line="68" pos:column="47">-<pos:position pos:line="68" pos:column="48"/></operator><literal type="number" pos:line="68" pos:column="48">1<pos:position pos:line="68" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="51"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">strncat<pos:position pos:line="69" pos:column="24"/></name><argument_list pos:line="69" pos:column="24">(<argument><expr><name pos:line="69" pos:column="25">buf2<pos:position pos:line="69" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="31">Config<pos:position pos:line="69" pos:column="37"/></name><operator pos:line="69" pos:column="37">.<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="38">appendDomain<pos:position pos:line="69" pos:column="50"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="52">sizeof<argument_list pos:line="69" pos:column="58">(<argument><expr><name pos:line="69" pos:column="59">buf2<pos:position pos:line="69" pos:column="63"/></name></expr></argument>)<pos:position pos:line="69" pos:column="64"/></argument_list></sizeof> <operator pos:line="69" pos:column="65">-<pos:position pos:line="69" pos:column="66"/></operator> <call><name pos:line="69" pos:column="67">strlen<pos:position pos:line="69" pos:column="73"/></name><argument_list pos:line="69" pos:column="73">(<argument><expr><name pos:line="69" pos:column="74">lt<pos:position pos:line="69" pos:column="76"/></name></expr></argument>)<pos:position pos:line="69" pos:column="77"/></argument_list></call> <operator pos:line="69" pos:column="78">-<pos:position pos:line="69" pos:column="79"/></operator> <literal type="number" pos:line="69" pos:column="80">1<pos:position pos:line="69" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="83"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="70" pos:column="17">buf2<pos:position pos:line="70" pos:column="21"/></name><index pos:line="70" pos:column="21">[<expr><sizeof pos:line="70" pos:column="22">sizeof<argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">buf2<pos:position pos:line="70" pos:column="33"/></name></expr></argument>)<pos:position pos:line="70" pos:column="34"/></argument_list></sizeof><operator pos:line="70" pos:column="34">-<pos:position pos:line="70" pos:column="35"/></operator><literal type="number" pos:line="70" pos:column="35">1<pos:position pos:line="70" pos:column="36"/></literal></expr>]<pos:position pos:line="70" pos:column="37"/></index></name> <operator pos:line="70" pos:column="38">=<pos:position pos:line="70" pos:column="39"/></operator> <literal type="char" pos:line="70" pos:column="40">'\0'<pos:position pos:line="70" pos:column="44"/></literal></expr>;<pos:position pos:line="70" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="71" pos:column="17">host<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <name pos:line="71" pos:column="24">buf2<pos:position pos:line="71" pos:column="28"/></name></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then> <else pos:line="72" pos:column="15">else <block pos:line="72" pos:column="20">{
                <expr_stmt><expr><name pos:line="73" pos:column="17">host<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">lt<pos:position pos:line="73" pos:column="26"/></name></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></else></if>

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><call><name pos:line="76" pos:column="17">ipcacheAddEntryFromHosts<pos:position pos:line="76" pos:column="41"/></name><argument_list pos:line="76" pos:column="41">(<argument><expr><name pos:line="76" pos:column="42">host<pos:position pos:line="76" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="48">addr<pos:position pos:line="76" pos:column="52"/></name></expr></argument>)<pos:position pos:line="76" pos:column="53"/></argument_list></call> <operator pos:line="76" pos:column="54">!=<pos:position pos:line="76" pos:column="56"/></operator> <literal type="number" pos:line="76" pos:column="57">0<pos:position pos:line="76" pos:column="58"/></literal></expr>)<pos:position pos:line="76" pos:column="59"/></condition><then pos:line="76" pos:column="59"> <block pos:line="76" pos:column="60">{
                <comment type="block" pos:line="77" pos:column="17">/* invalid address, continuing is useless */</comment>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">wordlistDestroy<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><operator pos:line="78" pos:column="33">&amp;<pos:position pos:line="78" pos:column="38"/></operator><name pos:line="78" pos:column="34">hosts<pos:position pos:line="78" pos:column="39"/></name></expr></argument>)<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name pos:line="79" pos:column="17">hosts<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <name pos:line="79" pos:column="25">NULL<pos:position pos:line="79" pos:column="29"/></name></expr>;<pos:position pos:line="79" pos:column="30"/></expr_stmt>
                <break pos:line="80" pos:column="17">break;<pos:position pos:line="80" pos:column="23"/></break>
            }<pos:position pos:line="81" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">wordlistAdd<pos:position pos:line="82" pos:column="24"/></name><argument_list pos:line="82" pos:column="24">(<argument><expr><operator pos:line="82" pos:column="25">&amp;<pos:position pos:line="82" pos:column="30"/></operator><name pos:line="82" pos:column="26">hosts<pos:position pos:line="82" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="33">host<pos:position pos:line="82" pos:column="37"/></name></expr></argument>)<pos:position pos:line="82" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><name pos:line="84" pos:column="13">lt<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <name pos:line="84" pos:column="18">nt<pos:position pos:line="84" pos:column="20"/></name> <operator pos:line="84" pos:column="21">+<pos:position pos:line="84" pos:column="22"/></operator> <literal type="number" pos:line="84" pos:column="23">1<pos:position pos:line="84" pos:column="24"/></literal></expr>;<pos:position pos:line="84" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="85" pos:column="10"/></block></while>

        <if pos:line="87" pos:column="9">if <condition pos:line="87" pos:column="12">(<expr><name pos:line="87" pos:column="13">hosts<pos:position pos:line="87" pos:column="18"/></name></expr>)<pos:position pos:line="87" pos:column="19"/></condition><then pos:line="87" pos:column="19"> <block pos:line="87" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">fqdncacheAddEntryFromHosts<pos:position pos:line="88" pos:column="39"/></name><argument_list pos:line="88" pos:column="39">(<argument><expr><name pos:line="88" pos:column="40">addr<pos:position pos:line="88" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="46">hosts<pos:position pos:line="88" pos:column="51"/></name></expr></argument>)<pos:position pos:line="88" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">wordlistDestroy<pos:position pos:line="89" pos:column="28"/></name><argument_list pos:line="89" pos:column="28">(<argument><expr><operator pos:line="89" pos:column="29">&amp;<pos:position pos:line="89" pos:column="34"/></operator><name pos:line="89" pos:column="30">hosts<pos:position pos:line="89" pos:column="35"/></name></expr></argument>)<pos:position pos:line="89" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></then></if>
    }<pos:position pos:line="91" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="93" pos:column="5">fclose<pos:position pos:line="93" pos:column="11"/></name> <argument_list pos:line="93" pos:column="12">(<argument><expr><name pos:line="93" pos:column="13">fp<pos:position pos:line="93" pos:column="15"/></name></expr></argument>)<pos:position pos:line="93" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="17"/></expr_stmt>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2274_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">String<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">getByNameListMember<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">name<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">member<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="71">const<pos:position pos:line="2" pos:column="76"/></specifier> <name pos:line="2" pos:column="77">char<pos:position pos:line="2" pos:column="81"/></name></type> <name pos:line="2" pos:column="82">separator<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list> <specifier pos:line="2" pos:column="93">const<pos:position pos:line="2" pos:column="98"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">header<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pos<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">item<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ilen<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">mlen<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><call><name pos:line="8" pos:column="16">strlen<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">member<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">name<pos:position pos:line="10" pos:column="16"/></name></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">header<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">getByName<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">name<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">String<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">result<pos:position pos:line="14" pos:column="18"/></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><call><name pos:line="16" pos:column="12">strListGetItem<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="28">header<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">separator<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="47">&amp;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="48">item<pos:position pos:line="16" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="54">&amp;<pos:position pos:line="16" pos:column="59"/></operator><name pos:line="16" pos:column="55">ilen<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="61">&amp;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="62">pos<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="67"/></condition> <block pos:line="16" pos:column="68">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">strncmp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">item<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="27">member<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="35">mlen<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">==<pos:position pos:line="17" pos:column="43"/></operator> <literal type="number" pos:line="17" pos:column="44">0<pos:position pos:line="17" pos:column="45"/></literal> <operator pos:line="17" pos:column="46">&amp;&amp;<pos:position pos:line="17" pos:column="56"/></operator> <name><name pos:line="17" pos:column="49">item<pos:position pos:line="17" pos:column="53"/></name><index pos:line="17" pos:column="53">[<expr><name pos:line="17" pos:column="54">mlen<pos:position pos:line="17" pos:column="58"/></name></expr>]<pos:position pos:line="17" pos:column="59"/></index></name> <operator pos:line="17" pos:column="60">==<pos:position pos:line="17" pos:column="62"/></operator> <literal type="char" pos:line="17" pos:column="63">'='<pos:position pos:line="17" pos:column="66"/></literal></expr>)<pos:position pos:line="17" pos:column="67"/></condition><then pos:line="17" pos:column="67"> <block pos:line="17" pos:column="68">{
            <expr_stmt><expr><call><name><name pos:line="18" pos:column="13">result<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">append<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">item<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">+<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">mlen<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">+<pos:position pos:line="18" pos:column="40"/></operator> <literal type="number" pos:line="18" pos:column="41">1<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">ilen<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">-<pos:position pos:line="18" pos:column="50"/></operator> <name pos:line="18" pos:column="51">mlen<pos:position pos:line="18" pos:column="55"/></name> <operator pos:line="18" pos:column="56">-<pos:position pos:line="18" pos:column="57"/></operator> <literal type="number" pos:line="18" pos:column="58">1<pos:position pos:line="18" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
            <break pos:line="19" pos:column="13">break;<pos:position pos:line="19" pos:column="19"/></break>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></while>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">result<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

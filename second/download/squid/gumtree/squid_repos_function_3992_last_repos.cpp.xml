<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3992_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">AllOf<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">dump<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list> <specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><ternary><condition><expr><call><name pos:line="4" pos:column="12">empty<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">()<pos:position pos:line="4" pos:column="19"/></argument_list></call></expr> ?<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <expr><call><name pos:line="4" pos:column="22">SBufList<pos:position pos:line="4" pos:column="30"/></name><argument_list pos:line="4" pos:column="30">()<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="33"/></then><else pos:line="4" pos:column="33">: <expr><call><name><name pos:line="4" pos:column="35">nodes<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">.<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">front<pos:position pos:line="4" pos:column="46"/></name></name><argument_list pos:line="4" pos:column="46">()<pos:position pos:line="4" pos:column="48"/></argument_list></call><operator pos:line="4" pos:column="48">-&gt;<pos:position pos:line="4" pos:column="53"/></operator><call><name pos:line="4" pos:column="50">dump<pos:position pos:line="4" pos:column="54"/></name><argument_list pos:line="4" pos:column="54">()<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="57"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

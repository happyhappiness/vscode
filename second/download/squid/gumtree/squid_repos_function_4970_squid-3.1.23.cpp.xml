<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4970_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">AuthUserRequest<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name><name pos:line="2" pos:column="1">AuthDigestConfig<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">decode<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">proxy_auth<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">item<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">username<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">digest_nonce_h<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">nonce<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ilen<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">29<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">9<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"authenticateDigestDecodeAuth: beginning"<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">AuthDigestUserRequest<pos:position pos:line="13" pos:column="26"/></name> <modifier pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></modifier></type><name pos:line="13" pos:column="28">digest_request<pos:position pos:line="13" pos:column="42"/></name> <init pos:line="13" pos:column="43">= <expr><operator pos:line="13" pos:column="45">new<pos:position pos:line="13" pos:column="48"/></operator> <call><name pos:line="13" pos:column="49">AuthDigestUserRequest<pos:position pos:line="13" pos:column="70"/></name><argument_list pos:line="13" pos:column="70">()<pos:position pos:line="13" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="73"/></decl_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* trim DIGEST from string */</comment>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><call><name pos:line="17" pos:column="12">xisgraph<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">proxy_auth<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="34"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">proxy_auth<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">++<pos:position pos:line="18" pos:column="21"/></operator></expr>;<pos:position pos:line="18" pos:column="22"/></expr_stmt></block></while>

    <comment type="block" pos:line="20" pos:column="5">/* Trim leading whitespace before decoding */</comment>
    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><call><name pos:line="21" pos:column="12">xisspace<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">proxy_auth<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="34"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">proxy_auth<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">++<pos:position pos:line="22" pos:column="21"/></operator></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt></block></while>

    <decl_stmt><decl><type><name pos:line="24" pos:column="5">String<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">temp<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">proxy_auth<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></decl>;<pos:position pos:line="24" pos:column="29"/></decl_stmt>

    <while pos:line="26" pos:column="5">while <condition pos:line="26" pos:column="11">(<expr><call><name pos:line="26" pos:column="12">strListGetItem<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="28">temp<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="26" pos:column="34">','<pos:position pos:line="26" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="39">&amp;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="40">item<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="46">&amp;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="47">ilen<pos:position pos:line="26" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="53">&amp;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="54">pos<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="59"/></condition> <block pos:line="26" pos:column="60">{
        <comment type="block" pos:line="27" pos:column="9">/* isolate directive name &amp; value */</comment>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">size_t<pos:position pos:line="28" pos:column="15"/></name></type> <name pos:line="28" pos:column="16">nlen<pos:position pos:line="28" pos:column="20"/></name></decl>;<pos:position pos:line="28" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">size_t<pos:position pos:line="29" pos:column="15"/></name></type> <name pos:line="29" pos:column="16">vlen<pos:position pos:line="29" pos:column="20"/></name></decl>;<pos:position pos:line="29" pos:column="21"/></decl_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">p<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <operator pos:line="30" pos:column="18">(<pos:position pos:line="30" pos:column="19"/></operator><specifier pos:line="30" pos:column="19">const<pos:position pos:line="30" pos:column="24"/></specifier> <name pos:line="30" pos:column="25">char<pos:position pos:line="30" pos:column="29"/></name> <operator pos:line="30" pos:column="30">*<pos:position pos:line="30" pos:column="31"/></operator><operator pos:line="30" pos:column="31">)<pos:position pos:line="30" pos:column="32"/></operator><call><name pos:line="30" pos:column="32">memchr<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><name pos:line="30" pos:column="39">item<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="45">'='<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">ilen<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call><operator pos:line="30" pos:column="55">)<pos:position pos:line="30" pos:column="56"/></operator> <operator pos:line="30" pos:column="57">&amp;&amp;<pos:position pos:line="30" pos:column="67"/></operator> <operator pos:line="30" pos:column="60">(<pos:position pos:line="30" pos:column="61"/></operator><name pos:line="30" pos:column="61">p<pos:position pos:line="30" pos:column="62"/></name> <operator pos:line="30" pos:column="63">-<pos:position pos:line="30" pos:column="64"/></operator> <name pos:line="30" pos:column="65">item<pos:position pos:line="30" pos:column="69"/></name> <operator pos:line="30" pos:column="70">&lt;<pos:position pos:line="30" pos:column="74"/></operator> <name pos:line="30" pos:column="72">ilen<pos:position pos:line="30" pos:column="76"/></name><operator pos:line="30" pos:column="76">)<pos:position pos:line="30" pos:column="77"/></operator></expr>)<pos:position pos:line="30" pos:column="78"/></condition><then pos:line="30" pos:column="78"> <block pos:line="30" pos:column="79">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">nlen<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <name pos:line="31" pos:column="20">p<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">++<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">-<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">item<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">vlen<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name pos:line="32" pos:column="20">ilen<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">-<pos:position pos:line="32" pos:column="26"/></operator> <operator pos:line="32" pos:column="27">(<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">p<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">-<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">item<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">)<pos:position pos:line="32" pos:column="37"/></operator></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then> <else pos:line="33" pos:column="11">else <block pos:line="33" pos:column="16">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">nlen<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <name pos:line="34" pos:column="20">ilen<pos:position pos:line="34" pos:column="24"/></name></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">vlen<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">=<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>

        <decl_stmt><decl><type><name pos:line="38" pos:column="9">String<pos:position pos:line="38" pos:column="15"/></name></type> <name pos:line="38" pos:column="16">value<pos:position pos:line="38" pos:column="21"/></name></decl>;<pos:position pos:line="38" pos:column="22"/></decl_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">vlen<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">&gt;<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22"> <block pos:line="40" pos:column="23">{
            <comment type="line" pos:line="41" pos:column="13">// see RFC 2617 section 3.2.1 and 3.2.2 for details on the BNF</comment>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">( <expr><operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">nlen<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">==<pos:position pos:line="43" pos:column="26"/></operator> <literal type="number" pos:line="43" pos:column="27">6<pos:position pos:line="43" pos:column="28"/></literal> <operator pos:line="43" pos:column="29">&amp;&amp;<pos:position pos:line="43" pos:column="39"/></operator> <call><name pos:line="43" pos:column="32">memcmp<pos:position pos:line="43" pos:column="38"/></name><argument_list pos:line="43" pos:column="38">(<argument><expr><name pos:line="43" pos:column="39">item<pos:position pos:line="43" pos:column="43"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="44">"domain"<pos:position pos:line="43" pos:column="52"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="43" pos:column="53">6<pos:position pos:line="43" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call> <operator pos:line="43" pos:column="56">==<pos:position pos:line="43" pos:column="58"/></operator> <literal type="number" pos:line="43" pos:column="59">0<pos:position pos:line="43" pos:column="60"/></literal><operator pos:line="43" pos:column="60">)<pos:position pos:line="43" pos:column="61"/></operator> <operator pos:line="43" pos:column="62">||<pos:position pos:line="43" pos:column="64"/></operator> <operator pos:line="43" pos:column="65">(<pos:position pos:line="43" pos:column="66"/></operator><name pos:line="43" pos:column="66">nlen<pos:position pos:line="43" pos:column="70"/></name> <operator pos:line="43" pos:column="71">==<pos:position pos:line="43" pos:column="73"/></operator> <literal type="number" pos:line="43" pos:column="74">3<pos:position pos:line="43" pos:column="75"/></literal> <operator pos:line="43" pos:column="76">&amp;&amp;<pos:position pos:line="43" pos:column="86"/></operator> <call><name pos:line="43" pos:column="79">memcmp<pos:position pos:line="43" pos:column="85"/></name><argument_list pos:line="43" pos:column="85">(<argument><expr><name pos:line="43" pos:column="86">item<pos:position pos:line="43" pos:column="90"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="91">"uri"<pos:position pos:line="43" pos:column="96"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="43" pos:column="97">3<pos:position pos:line="43" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="99"/></argument_list></call> <operator pos:line="43" pos:column="100">==<pos:position pos:line="43" pos:column="102"/></operator> <literal type="number" pos:line="43" pos:column="103">0<pos:position pos:line="43" pos:column="104"/></literal><operator pos:line="43" pos:column="104">)<pos:position pos:line="43" pos:column="105"/></operator></expr> )<pos:position pos:line="43" pos:column="107"/></condition><then pos:line="43" pos:column="107"> <block pos:line="43" pos:column="108">{
                <comment type="line" pos:line="44" pos:column="17">// domain is Special. Not a quoted-string, must not be de-quoted. But is wrapped in '"'</comment>
                <comment type="line" pos:line="45" pos:column="17">// BUG 3077: uri= can also be sent to us in a mangled (invalid!) form like domain</comment>
                <if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><operator pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="22">p<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">==<pos:position pos:line="46" pos:column="26"/></operator> <literal type="char" pos:line="46" pos:column="27">'"'<pos:position pos:line="46" pos:column="30"/></literal> <operator pos:line="46" pos:column="31">&amp;&amp;<pos:position pos:line="46" pos:column="41"/></operator> <operator pos:line="46" pos:column="34">*<pos:position pos:line="46" pos:column="35"/></operator><operator pos:line="46" pos:column="35">(<pos:position pos:line="46" pos:column="36"/></operator><name pos:line="46" pos:column="36">p<pos:position pos:line="46" pos:column="37"/></name> <operator pos:line="46" pos:column="38">+<pos:position pos:line="46" pos:column="39"/></operator> <name pos:line="46" pos:column="40">vlen<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">-<pos:position pos:line="46" pos:column="45"/></operator><literal type="number" pos:line="46" pos:column="45">1<pos:position pos:line="46" pos:column="46"/></literal><operator pos:line="46" pos:column="46">)<pos:position pos:line="46" pos:column="47"/></operator> <operator pos:line="46" pos:column="48">==<pos:position pos:line="46" pos:column="50"/></operator> <literal type="char" pos:line="46" pos:column="51">'"'<pos:position pos:line="46" pos:column="54"/></literal></expr>)<pos:position pos:line="46" pos:column="55"/></condition><then pos:line="46" pos:column="55"> <block pos:line="46" pos:column="56">{
                    <expr_stmt><expr><call><name><name pos:line="47" pos:column="21">value<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">.<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="27">limitInit<pos:position pos:line="47" pos:column="36"/></name></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name pos:line="47" pos:column="37">p<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">+<pos:position pos:line="47" pos:column="39"/></operator><literal type="number" pos:line="47" pos:column="39">1<pos:position pos:line="47" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">vlen<pos:position pos:line="47" pos:column="46"/></name><operator pos:line="47" pos:column="46">-<pos:position pos:line="47" pos:column="47"/></operator><literal type="number" pos:line="47" pos:column="47">2<pos:position pos:line="47" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="48" pos:column="18"/></block></then> <else pos:line="48" pos:column="19">else <block pos:line="48" pos:column="24">{
                    <expr_stmt><expr><call><name><name pos:line="49" pos:column="21">value<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">.<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">limitInit<pos:position pos:line="49" pos:column="36"/></name></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">p<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">vlen<pos:position pos:line="49" pos:column="44"/></name></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="50" pos:column="18"/></block></else></if>
            }<pos:position pos:line="51" pos:column="14"/></block></then> <elseif pos:line="51" pos:column="15">else <if pos:line="51" pos:column="20">if <condition pos:line="51" pos:column="23">(<expr><name pos:line="51" pos:column="24">nlen<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">==<pos:position pos:line="51" pos:column="31"/></operator> <literal type="number" pos:line="51" pos:column="32">3<pos:position pos:line="51" pos:column="33"/></literal> <operator pos:line="51" pos:column="34">&amp;&amp;<pos:position pos:line="51" pos:column="44"/></operator> <call><name pos:line="51" pos:column="37">memcmp<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">item<pos:position pos:line="51" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="51" pos:column="49">"qop"<pos:position pos:line="51" pos:column="54"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="51" pos:column="55">3<pos:position pos:line="51" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call> <operator pos:line="51" pos:column="58">==<pos:position pos:line="51" pos:column="60"/></operator> <literal type="number" pos:line="51" pos:column="61">0<pos:position pos:line="51" pos:column="62"/></literal></expr>)<pos:position pos:line="51" pos:column="63"/></condition><then pos:line="51" pos:column="63"> <block pos:line="51" pos:column="64">{
                <comment type="line" pos:line="52" pos:column="17">// qop is more special.</comment>
                <comment type="line" pos:line="53" pos:column="17">// On request this must not be quoted-string de-quoted. But is several values wrapped in '"'</comment>
                <comment type="line" pos:line="54" pos:column="17">// On response this is a single un-quoted token.</comment>
                <if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">*<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">p<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">==<pos:position pos:line="55" pos:column="26"/></operator> <literal type="char" pos:line="55" pos:column="27">'"'<pos:position pos:line="55" pos:column="30"/></literal> <operator pos:line="55" pos:column="31">&amp;&amp;<pos:position pos:line="55" pos:column="41"/></operator> <operator pos:line="55" pos:column="34">*<pos:position pos:line="55" pos:column="35"/></operator><operator pos:line="55" pos:column="35">(<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="36">p<pos:position pos:line="55" pos:column="37"/></name> <operator pos:line="55" pos:column="38">+<pos:position pos:line="55" pos:column="39"/></operator> <name pos:line="55" pos:column="40">vlen<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-<pos:position pos:line="55" pos:column="45"/></operator><literal type="number" pos:line="55" pos:column="45">1<pos:position pos:line="55" pos:column="46"/></literal><operator pos:line="55" pos:column="46">)<pos:position pos:line="55" pos:column="47"/></operator> <operator pos:line="55" pos:column="48">==<pos:position pos:line="55" pos:column="50"/></operator> <literal type="char" pos:line="55" pos:column="51">'"'<pos:position pos:line="55" pos:column="54"/></literal></expr>)<pos:position pos:line="55" pos:column="55"/></condition><then pos:line="55" pos:column="55"> <block pos:line="55" pos:column="56">{
                    <expr_stmt><expr><call><name><name pos:line="56" pos:column="21">value<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">.<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">limitInit<pos:position pos:line="56" pos:column="36"/></name></name><argument_list pos:line="56" pos:column="36">(<argument><expr><name pos:line="56" pos:column="37">p<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">+<pos:position pos:line="56" pos:column="39"/></operator><literal type="number" pos:line="56" pos:column="39">1<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="42">vlen<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">-<pos:position pos:line="56" pos:column="47"/></operator><literal type="number" pos:line="56" pos:column="47">2<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="57" pos:column="18"/></block></then> <else pos:line="57" pos:column="19">else <block pos:line="57" pos:column="24">{
                    <expr_stmt><expr><call><name><name pos:line="58" pos:column="21">value<pos:position pos:line="58" pos:column="26"/></name><operator pos:line="58" pos:column="26">.<pos:position pos:line="58" pos:column="27"/></operator><name pos:line="58" pos:column="27">limitInit<pos:position pos:line="58" pos:column="36"/></name></name><argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">p<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">vlen<pos:position pos:line="58" pos:column="44"/></name></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
                }<pos:position pos:line="59" pos:column="18"/></block></else></if>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if></elseif> <elseif pos:line="60" pos:column="15">else <if pos:line="60" pos:column="20">if <condition pos:line="60" pos:column="23">(<expr><operator pos:line="60" pos:column="24">*<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">p<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">==<pos:position pos:line="60" pos:column="29"/></operator> <literal type="char" pos:line="60" pos:column="30">'"'<pos:position pos:line="60" pos:column="33"/></literal></expr>)<pos:position pos:line="60" pos:column="34"/></condition><then pos:line="60" pos:column="34"> <block pos:line="60" pos:column="35">{
                <if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><operator pos:line="61" pos:column="21">!<pos:position pos:line="61" pos:column="22"/></operator><call><name pos:line="61" pos:column="22">httpHeaderParseQuotedString<pos:position pos:line="61" pos:column="49"/></name><argument_list pos:line="61" pos:column="49">(<argument><expr><name pos:line="61" pos:column="50">p<pos:position pos:line="61" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="53">&amp;<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="54">value<pos:position pos:line="61" pos:column="59"/></name></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="61"/></condition><then pos:line="61" pos:column="61"> <block pos:line="61" pos:column="62">{
                    <expr_stmt><expr><call><name pos:line="62" pos:column="21">debugs<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><literal type="number" pos:line="62" pos:column="28">29<pos:position pos:line="62" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="32">9<pos:position pos:line="62" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="35">"authDigestDecodeAuth: Failed to parse attribute '"<pos:position pos:line="62" pos:column="86"/></literal> <operator pos:line="62" pos:column="87">&lt;&lt;<pos:position pos:line="62" pos:column="95"/></operator> <name pos:line="62" pos:column="90">item<pos:position pos:line="62" pos:column="94"/></name> <operator pos:line="62" pos:column="95">&lt;&lt;<pos:position pos:line="62" pos:column="103"/></operator> <literal type="string" pos:line="62" pos:column="98">"' in '"<pos:position pos:line="62" pos:column="106"/></literal> <operator pos:line="62" pos:column="107">&lt;&lt;<pos:position pos:line="62" pos:column="115"/></operator> <name pos:line="62" pos:column="110">temp<pos:position pos:line="62" pos:column="114"/></name> <operator pos:line="62" pos:column="115">&lt;&lt;<pos:position pos:line="62" pos:column="123"/></operator> <literal type="string" pos:line="62" pos:column="118">"'"<pos:position pos:line="62" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="123"/></expr_stmt>
                    <continue pos:line="63" pos:column="21">continue;<pos:position pos:line="63" pos:column="30"/></continue>
                }<pos:position pos:line="64" pos:column="18"/></block></then></if>
            }<pos:position pos:line="65" pos:column="14"/></block></then></if></elseif> <else pos:line="65" pos:column="15">else <block pos:line="65" pos:column="20">{
                <expr_stmt><expr><call><name><name pos:line="66" pos:column="17">value<pos:position pos:line="66" pos:column="22"/></name><operator pos:line="66" pos:column="22">.<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="23">limitInit<pos:position pos:line="66" pos:column="32"/></name></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">p<pos:position pos:line="66" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="36">vlen<pos:position pos:line="66" pos:column="40"/></name></expr></argument>)<pos:position pos:line="66" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="67" pos:column="14"/></block></else></if>
        }<pos:position pos:line="68" pos:column="10"/></block></then> <else pos:line="68" pos:column="11">else <block pos:line="68" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">debugs<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><literal type="number" pos:line="69" pos:column="20">29<pos:position pos:line="69" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="24">9<pos:position pos:line="69" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="27">"authDigestDecodeAuth: Failed to parse attribute '"<pos:position pos:line="69" pos:column="78"/></literal> <operator pos:line="69" pos:column="79">&lt;&lt;<pos:position pos:line="69" pos:column="87"/></operator> <name pos:line="69" pos:column="82">item<pos:position pos:line="69" pos:column="86"/></name> <operator pos:line="69" pos:column="87">&lt;&lt;<pos:position pos:line="69" pos:column="95"/></operator> <literal type="string" pos:line="69" pos:column="90">"' in '"<pos:position pos:line="69" pos:column="98"/></literal> <operator pos:line="69" pos:column="99">&lt;&lt;<pos:position pos:line="69" pos:column="107"/></operator> <name pos:line="69" pos:column="102">temp<pos:position pos:line="69" pos:column="106"/></name> <operator pos:line="69" pos:column="107">&lt;&lt;<pos:position pos:line="69" pos:column="115"/></operator> <literal type="string" pos:line="69" pos:column="110">"'"<pos:position pos:line="69" pos:column="113"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="115"/></expr_stmt>
            <continue pos:line="70" pos:column="13">continue;<pos:position pos:line="70" pos:column="22"/></continue>
        }<pos:position pos:line="71" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="73" pos:column="9">/* find type */</comment>
        <decl_stmt><decl><type><name pos:line="74" pos:column="9">http_digest_attr_type<pos:position pos:line="74" pos:column="30"/></name></type> <name pos:line="74" pos:column="31">type<pos:position pos:line="74" pos:column="35"/></name> <init pos:line="74" pos:column="36">= <expr><operator pos:line="74" pos:column="38">(<pos:position pos:line="74" pos:column="39"/></operator><name pos:line="74" pos:column="39">http_digest_attr_type<pos:position pos:line="74" pos:column="60"/></name><operator pos:line="74" pos:column="60">)<pos:position pos:line="74" pos:column="61"/></operator><call><name pos:line="74" pos:column="61">httpHeaderIdByName<pos:position pos:line="74" pos:column="79"/></name><argument_list pos:line="74" pos:column="79">(<argument><expr><name pos:line="74" pos:column="80">item<pos:position pos:line="74" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="86">nlen<pos:position pos:line="74" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="92">DigestFieldsInfo<pos:position pos:line="74" pos:column="108"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="110">DIGEST_ENUM_END<pos:position pos:line="74" pos:column="125"/></name></expr></argument>)<pos:position pos:line="74" pos:column="126"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="127"/></decl_stmt>

        <switch pos:line="76" pos:column="9">switch <condition pos:line="76" pos:column="16">(<expr><name pos:line="76" pos:column="17">type<pos:position pos:line="76" pos:column="21"/></name></expr>)<pos:position pos:line="76" pos:column="22"/></condition> <block pos:line="76" pos:column="23">{
        <case pos:line="77" pos:column="9">case <expr><name pos:line="77" pos:column="14">DIGEST_USERNAME<pos:position pos:line="77" pos:column="29"/></name></expr>:<pos:position pos:line="77" pos:column="30"/></case>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">safe_free<pos:position pos:line="78" pos:column="22"/></name><argument_list pos:line="78" pos:column="22">(<argument><expr><name pos:line="78" pos:column="23">username<pos:position pos:line="78" pos:column="31"/></name></expr></argument>)<pos:position pos:line="78" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="79" pos:column="13">username<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <call><name pos:line="79" pos:column="24">xstrndup<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><call><name><name pos:line="79" pos:column="33">value<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">.<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="39">rawBuf<pos:position pos:line="79" pos:column="45"/></name></name><argument_list pos:line="79" pos:column="45">()<pos:position pos:line="79" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="79" pos:column="49">value<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">.<pos:position pos:line="79" pos:column="55"/></operator><name pos:line="79" pos:column="55">size<pos:position pos:line="79" pos:column="59"/></name></name><argument_list pos:line="79" pos:column="59">()<pos:position pos:line="79" pos:column="61"/></argument_list></call> <operator pos:line="79" pos:column="62">+<pos:position pos:line="79" pos:column="63"/></operator> <literal type="number" pos:line="79" pos:column="64">1<pos:position pos:line="79" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">debugs<pos:position pos:line="80" pos:column="19"/></name><argument_list pos:line="80" pos:column="19">(<argument><expr><literal type="number" pos:line="80" pos:column="20">29<pos:position pos:line="80" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="24">9<pos:position pos:line="80" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="27">"authDigestDecodeAuth: Found Username '"<pos:position pos:line="80" pos:column="67"/></literal> <operator pos:line="80" pos:column="68">&lt;&lt;<pos:position pos:line="80" pos:column="76"/></operator> <name pos:line="80" pos:column="71">username<pos:position pos:line="80" pos:column="79"/></name> <operator pos:line="80" pos:column="80">&lt;&lt;<pos:position pos:line="80" pos:column="88"/></operator> <literal type="string" pos:line="80" pos:column="83">"'"<pos:position pos:line="80" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="88"/></expr_stmt>
            <break pos:line="81" pos:column="13">break;<pos:position pos:line="81" pos:column="19"/></break>

        <case pos:line="83" pos:column="9">case <expr><name pos:line="83" pos:column="14">DIGEST_REALM<pos:position pos:line="83" pos:column="26"/></name></expr>:<pos:position pos:line="83" pos:column="27"/></case>
            <expr_stmt><expr><call><name pos:line="84" pos:column="13">safe_free<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name><name pos:line="84" pos:column="23">digest_request<pos:position pos:line="84" pos:column="37"/></name><operator pos:line="84" pos:column="37">-&gt;<pos:position pos:line="84" pos:column="42"/></operator><name pos:line="84" pos:column="39">realm<pos:position pos:line="84" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="46"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">digest_request<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">realm<pos:position pos:line="85" pos:column="34"/></name></name> <operator pos:line="85" pos:column="35">=<pos:position pos:line="85" pos:column="36"/></operator> <call><name pos:line="85" pos:column="37">xstrndup<pos:position pos:line="85" pos:column="45"/></name><argument_list pos:line="85" pos:column="45">(<argument><expr><call><name><name pos:line="85" pos:column="46">value<pos:position pos:line="85" pos:column="51"/></name><operator pos:line="85" pos:column="51">.<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="52">rawBuf<pos:position pos:line="85" pos:column="58"/></name></name><argument_list pos:line="85" pos:column="58">()<pos:position pos:line="85" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="85" pos:column="62">value<pos:position pos:line="85" pos:column="67"/></name><operator pos:line="85" pos:column="67">.<pos:position pos:line="85" pos:column="68"/></operator><name pos:line="85" pos:column="68">size<pos:position pos:line="85" pos:column="72"/></name></name><argument_list pos:line="85" pos:column="72">()<pos:position pos:line="85" pos:column="74"/></argument_list></call> <operator pos:line="85" pos:column="75">+<pos:position pos:line="85" pos:column="76"/></operator> <literal type="number" pos:line="85" pos:column="77">1<pos:position pos:line="85" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">debugs<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><literal type="number" pos:line="86" pos:column="20">29<pos:position pos:line="86" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="24">9<pos:position pos:line="86" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="27">"authDigestDecodeAuth: Found realm '"<pos:position pos:line="86" pos:column="64"/></literal> <operator pos:line="86" pos:column="65">&lt;&lt;<pos:position pos:line="86" pos:column="73"/></operator> <name><name pos:line="86" pos:column="68">digest_request<pos:position pos:line="86" pos:column="82"/></name><operator pos:line="86" pos:column="82">-&gt;<pos:position pos:line="86" pos:column="87"/></operator><name pos:line="86" pos:column="84">realm<pos:position pos:line="86" pos:column="89"/></name></name> <operator pos:line="86" pos:column="90">&lt;&lt;<pos:position pos:line="86" pos:column="98"/></operator> <literal type="string" pos:line="86" pos:column="93">"'"<pos:position pos:line="86" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="98"/></expr_stmt>
            <break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break>

        <case pos:line="89" pos:column="9">case <expr><name pos:line="89" pos:column="14">DIGEST_QOP<pos:position pos:line="89" pos:column="24"/></name></expr>:<pos:position pos:line="89" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">safe_free<pos:position pos:line="90" pos:column="22"/></name><argument_list pos:line="90" pos:column="22">(<argument><expr><name><name pos:line="90" pos:column="23">digest_request<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">-&gt;<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="39">qop<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="91" pos:column="13">digest_request<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">-&gt;<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="29">qop<pos:position pos:line="91" pos:column="32"/></name></name> <operator pos:line="91" pos:column="33">=<pos:position pos:line="91" pos:column="34"/></operator> <call><name pos:line="91" pos:column="35">xstrndup<pos:position pos:line="91" pos:column="43"/></name><argument_list pos:line="91" pos:column="43">(<argument><expr><call><name><name pos:line="91" pos:column="44">value<pos:position pos:line="91" pos:column="49"/></name><operator pos:line="91" pos:column="49">.<pos:position pos:line="91" pos:column="50"/></operator><name pos:line="91" pos:column="50">rawBuf<pos:position pos:line="91" pos:column="56"/></name></name><argument_list pos:line="91" pos:column="56">()<pos:position pos:line="91" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="91" pos:column="60">value<pos:position pos:line="91" pos:column="65"/></name><operator pos:line="91" pos:column="65">.<pos:position pos:line="91" pos:column="66"/></operator><name pos:line="91" pos:column="66">size<pos:position pos:line="91" pos:column="70"/></name></name><argument_list pos:line="91" pos:column="70">()<pos:position pos:line="91" pos:column="72"/></argument_list></call> <operator pos:line="91" pos:column="73">+<pos:position pos:line="91" pos:column="74"/></operator> <literal type="number" pos:line="91" pos:column="75">1<pos:position pos:line="91" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">debugs<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><literal type="number" pos:line="92" pos:column="20">29<pos:position pos:line="92" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="24">9<pos:position pos:line="92" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="27">"authDigestDecodeAuth: Found qop '"<pos:position pos:line="92" pos:column="62"/></literal> <operator pos:line="92" pos:column="63">&lt;&lt;<pos:position pos:line="92" pos:column="71"/></operator> <name><name pos:line="92" pos:column="66">digest_request<pos:position pos:line="92" pos:column="80"/></name><operator pos:line="92" pos:column="80">-&gt;<pos:position pos:line="92" pos:column="85"/></operator><name pos:line="92" pos:column="82">qop<pos:position pos:line="92" pos:column="85"/></name></name> <operator pos:line="92" pos:column="86">&lt;&lt;<pos:position pos:line="92" pos:column="94"/></operator> <literal type="string" pos:line="92" pos:column="89">"'"<pos:position pos:line="92" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="94"/></expr_stmt>
            <break pos:line="93" pos:column="13">break;<pos:position pos:line="93" pos:column="19"/></break>

        <case pos:line="95" pos:column="9">case <expr><name pos:line="95" pos:column="14">DIGEST_ALGORITHM<pos:position pos:line="95" pos:column="30"/></name></expr>:<pos:position pos:line="95" pos:column="31"/></case>
            <expr_stmt><expr><call><name pos:line="96" pos:column="13">safe_free<pos:position pos:line="96" pos:column="22"/></name><argument_list pos:line="96" pos:column="22">(<argument><expr><name><name pos:line="96" pos:column="23">digest_request<pos:position pos:line="96" pos:column="37"/></name><operator pos:line="96" pos:column="37">-&gt;<pos:position pos:line="96" pos:column="42"/></operator><name pos:line="96" pos:column="39">algorithm<pos:position pos:line="96" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="50"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="97" pos:column="13">digest_request<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">-&gt;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="29">algorithm<pos:position pos:line="97" pos:column="38"/></name></name> <operator pos:line="97" pos:column="39">=<pos:position pos:line="97" pos:column="40"/></operator> <call><name pos:line="97" pos:column="41">xstrndup<pos:position pos:line="97" pos:column="49"/></name><argument_list pos:line="97" pos:column="49">(<argument><expr><call><name><name pos:line="97" pos:column="50">value<pos:position pos:line="97" pos:column="55"/></name><operator pos:line="97" pos:column="55">.<pos:position pos:line="97" pos:column="56"/></operator><name pos:line="97" pos:column="56">rawBuf<pos:position pos:line="97" pos:column="62"/></name></name><argument_list pos:line="97" pos:column="62">()<pos:position pos:line="97" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="97" pos:column="66">value<pos:position pos:line="97" pos:column="71"/></name><operator pos:line="97" pos:column="71">.<pos:position pos:line="97" pos:column="72"/></operator><name pos:line="97" pos:column="72">size<pos:position pos:line="97" pos:column="76"/></name></name><argument_list pos:line="97" pos:column="76">()<pos:position pos:line="97" pos:column="78"/></argument_list></call> <operator pos:line="97" pos:column="79">+<pos:position pos:line="97" pos:column="80"/></operator> <literal type="number" pos:line="97" pos:column="81">1<pos:position pos:line="97" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="84"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">debugs<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><literal type="number" pos:line="98" pos:column="20">29<pos:position pos:line="98" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="24">9<pos:position pos:line="98" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="27">"authDigestDecodeAuth: Found algorithm '"<pos:position pos:line="98" pos:column="68"/></literal> <operator pos:line="98" pos:column="69">&lt;&lt;<pos:position pos:line="98" pos:column="77"/></operator> <name><name pos:line="98" pos:column="72">digest_request<pos:position pos:line="98" pos:column="86"/></name><operator pos:line="98" pos:column="86">-&gt;<pos:position pos:line="98" pos:column="91"/></operator><name pos:line="98" pos:column="88">algorithm<pos:position pos:line="98" pos:column="97"/></name></name> <operator pos:line="98" pos:column="98">&lt;&lt;<pos:position pos:line="98" pos:column="106"/></operator> <literal type="string" pos:line="98" pos:column="101">"'"<pos:position pos:line="98" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="106"/></expr_stmt>
            <break pos:line="99" pos:column="13">break;<pos:position pos:line="99" pos:column="19"/></break>

        <case pos:line="101" pos:column="9">case <expr><name pos:line="101" pos:column="14">DIGEST_URI<pos:position pos:line="101" pos:column="24"/></name></expr>:<pos:position pos:line="101" pos:column="25"/></case>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">safe_free<pos:position pos:line="102" pos:column="22"/></name><argument_list pos:line="102" pos:column="22">(<argument><expr><name><name pos:line="102" pos:column="23">digest_request<pos:position pos:line="102" pos:column="37"/></name><operator pos:line="102" pos:column="37">-&gt;<pos:position pos:line="102" pos:column="42"/></operator><name pos:line="102" pos:column="39">uri<pos:position pos:line="102" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">digest_request<pos:position pos:line="103" pos:column="27"/></name><operator pos:line="103" pos:column="27">-&gt;<pos:position pos:line="103" pos:column="32"/></operator><name pos:line="103" pos:column="29">uri<pos:position pos:line="103" pos:column="32"/></name></name> <operator pos:line="103" pos:column="33">=<pos:position pos:line="103" pos:column="34"/></operator> <call><name pos:line="103" pos:column="35">xstrndup<pos:position pos:line="103" pos:column="43"/></name><argument_list pos:line="103" pos:column="43">(<argument><expr><call><name><name pos:line="103" pos:column="44">value<pos:position pos:line="103" pos:column="49"/></name><operator pos:line="103" pos:column="49">.<pos:position pos:line="103" pos:column="50"/></operator><name pos:line="103" pos:column="50">rawBuf<pos:position pos:line="103" pos:column="56"/></name></name><argument_list pos:line="103" pos:column="56">()<pos:position pos:line="103" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="103" pos:column="60">value<pos:position pos:line="103" pos:column="65"/></name><operator pos:line="103" pos:column="65">.<pos:position pos:line="103" pos:column="66"/></operator><name pos:line="103" pos:column="66">size<pos:position pos:line="103" pos:column="70"/></name></name><argument_list pos:line="103" pos:column="70">()<pos:position pos:line="103" pos:column="72"/></argument_list></call> <operator pos:line="103" pos:column="73">+<pos:position pos:line="103" pos:column="74"/></operator> <literal type="number" pos:line="103" pos:column="75">1<pos:position pos:line="103" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">debugs<pos:position pos:line="104" pos:column="19"/></name><argument_list pos:line="104" pos:column="19">(<argument><expr><literal type="number" pos:line="104" pos:column="20">29<pos:position pos:line="104" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="24">9<pos:position pos:line="104" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="27">"authDigestDecodeAuth: Found uri '"<pos:position pos:line="104" pos:column="62"/></literal> <operator pos:line="104" pos:column="63">&lt;&lt;<pos:position pos:line="104" pos:column="71"/></operator> <name><name pos:line="104" pos:column="66">digest_request<pos:position pos:line="104" pos:column="80"/></name><operator pos:line="104" pos:column="80">-&gt;<pos:position pos:line="104" pos:column="85"/></operator><name pos:line="104" pos:column="82">uri<pos:position pos:line="104" pos:column="85"/></name></name> <operator pos:line="104" pos:column="86">&lt;&lt;<pos:position pos:line="104" pos:column="94"/></operator> <literal type="string" pos:line="104" pos:column="89">"'"<pos:position pos:line="104" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="94"/></expr_stmt>
            <break pos:line="105" pos:column="13">break;<pos:position pos:line="105" pos:column="19"/></break>

        <case pos:line="107" pos:column="9">case <expr><name pos:line="107" pos:column="14">DIGEST_NONCE<pos:position pos:line="107" pos:column="26"/></name></expr>:<pos:position pos:line="107" pos:column="27"/></case>
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">safe_free<pos:position pos:line="108" pos:column="22"/></name><argument_list pos:line="108" pos:column="22">(<argument><expr><name><name pos:line="108" pos:column="23">digest_request<pos:position pos:line="108" pos:column="37"/></name><operator pos:line="108" pos:column="37">-&gt;<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="39">nonceb64<pos:position pos:line="108" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="109" pos:column="13">digest_request<pos:position pos:line="109" pos:column="27"/></name><operator pos:line="109" pos:column="27">-&gt;<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="29">nonceb64<pos:position pos:line="109" pos:column="37"/></name></name> <operator pos:line="109" pos:column="38">=<pos:position pos:line="109" pos:column="39"/></operator> <call><name pos:line="109" pos:column="40">xstrndup<pos:position pos:line="109" pos:column="48"/></name><argument_list pos:line="109" pos:column="48">(<argument><expr><call><name><name pos:line="109" pos:column="49">value<pos:position pos:line="109" pos:column="54"/></name><operator pos:line="109" pos:column="54">.<pos:position pos:line="109" pos:column="55"/></operator><name pos:line="109" pos:column="55">rawBuf<pos:position pos:line="109" pos:column="61"/></name></name><argument_list pos:line="109" pos:column="61">()<pos:position pos:line="109" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="109" pos:column="65">value<pos:position pos:line="109" pos:column="70"/></name><operator pos:line="109" pos:column="70">.<pos:position pos:line="109" pos:column="71"/></operator><name pos:line="109" pos:column="71">size<pos:position pos:line="109" pos:column="75"/></name></name><argument_list pos:line="109" pos:column="75">()<pos:position pos:line="109" pos:column="77"/></argument_list></call> <operator pos:line="109" pos:column="78">+<pos:position pos:line="109" pos:column="79"/></operator> <literal type="number" pos:line="109" pos:column="80">1<pos:position pos:line="109" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="110" pos:column="13">debugs<pos:position pos:line="110" pos:column="19"/></name><argument_list pos:line="110" pos:column="19">(<argument><expr><literal type="number" pos:line="110" pos:column="20">29<pos:position pos:line="110" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="110" pos:column="24">9<pos:position pos:line="110" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="27">"authDigestDecodeAuth: Found nonce '"<pos:position pos:line="110" pos:column="64"/></literal> <operator pos:line="110" pos:column="65">&lt;&lt;<pos:position pos:line="110" pos:column="73"/></operator> <name><name pos:line="110" pos:column="68">digest_request<pos:position pos:line="110" pos:column="82"/></name><operator pos:line="110" pos:column="82">-&gt;<pos:position pos:line="110" pos:column="87"/></operator><name pos:line="110" pos:column="84">nonceb64<pos:position pos:line="110" pos:column="92"/></name></name> <operator pos:line="110" pos:column="93">&lt;&lt;<pos:position pos:line="110" pos:column="101"/></operator> <literal type="string" pos:line="110" pos:column="96">"'"<pos:position pos:line="110" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="101"/></expr_stmt>
            <break pos:line="111" pos:column="13">break;<pos:position pos:line="111" pos:column="19"/></break>

        <case pos:line="113" pos:column="9">case <expr><name pos:line="113" pos:column="14">DIGEST_NC<pos:position pos:line="113" pos:column="23"/></name></expr>:<pos:position pos:line="113" pos:column="24"/></case>
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><call><name><name pos:line="114" pos:column="17">value<pos:position pos:line="114" pos:column="22"/></name><operator pos:line="114" pos:column="22">.<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="23">size<pos:position pos:line="114" pos:column="27"/></name></name><argument_list pos:line="114" pos:column="27">()<pos:position pos:line="114" pos:column="29"/></argument_list></call> <operator pos:line="114" pos:column="30">!=<pos:position pos:line="114" pos:column="32"/></operator> <literal type="number" pos:line="114" pos:column="33">8<pos:position pos:line="114" pos:column="34"/></literal></expr>)<pos:position pos:line="114" pos:column="35"/></condition><then pos:line="114" pos:column="35"> <block pos:line="114" pos:column="36">{
                <expr_stmt><expr><call><name pos:line="115" pos:column="17">debugs<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><literal type="number" pos:line="115" pos:column="24">29<pos:position pos:line="115" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="28">9<pos:position pos:line="115" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="31">"authDigestDecodeAuth: Invalid nc '"<pos:position pos:line="115" pos:column="67"/></literal> <operator pos:line="115" pos:column="68">&lt;&lt;<pos:position pos:line="115" pos:column="76"/></operator> <name pos:line="115" pos:column="71">value<pos:position pos:line="115" pos:column="76"/></name> <operator pos:line="115" pos:column="77">&lt;&lt;<pos:position pos:line="115" pos:column="85"/></operator> <literal type="string" pos:line="115" pos:column="80">"' in '"<pos:position pos:line="115" pos:column="88"/></literal> <operator pos:line="115" pos:column="89">&lt;&lt;<pos:position pos:line="115" pos:column="97"/></operator> <name pos:line="115" pos:column="92">temp<pos:position pos:line="115" pos:column="96"/></name> <operator pos:line="115" pos:column="97">&lt;&lt;<pos:position pos:line="115" pos:column="105"/></operator> <literal type="string" pos:line="115" pos:column="100">"'"<pos:position pos:line="115" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="105"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="117" pos:column="13">xstrncpy<pos:position pos:line="117" pos:column="21"/></name><argument_list pos:line="117" pos:column="21">(<argument><expr><name><name pos:line="117" pos:column="22">digest_request<pos:position pos:line="117" pos:column="36"/></name><operator pos:line="117" pos:column="36">-&gt;<pos:position pos:line="117" pos:column="41"/></operator><name pos:line="117" pos:column="38">nc<pos:position pos:line="117" pos:column="40"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="117" pos:column="42">value<pos:position pos:line="117" pos:column="47"/></name><operator pos:line="117" pos:column="47">.<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="48">rawBuf<pos:position pos:line="117" pos:column="54"/></name></name><argument_list pos:line="117" pos:column="54">()<pos:position pos:line="117" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="117" pos:column="58">value<pos:position pos:line="117" pos:column="63"/></name><operator pos:line="117" pos:column="63">.<pos:position pos:line="117" pos:column="64"/></operator><name pos:line="117" pos:column="64">size<pos:position pos:line="117" pos:column="68"/></name></name><argument_list pos:line="117" pos:column="68">()<pos:position pos:line="117" pos:column="70"/></argument_list></call> <operator pos:line="117" pos:column="71">+<pos:position pos:line="117" pos:column="72"/></operator> <literal type="number" pos:line="117" pos:column="73">1<pos:position pos:line="117" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="118" pos:column="13">debugs<pos:position pos:line="118" pos:column="19"/></name><argument_list pos:line="118" pos:column="19">(<argument><expr><literal type="number" pos:line="118" pos:column="20">29<pos:position pos:line="118" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="24">9<pos:position pos:line="118" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="27">"authDigestDecodeAuth: Found noncecount '"<pos:position pos:line="118" pos:column="69"/></literal> <operator pos:line="118" pos:column="70">&lt;&lt;<pos:position pos:line="118" pos:column="78"/></operator> <name><name pos:line="118" pos:column="73">digest_request<pos:position pos:line="118" pos:column="87"/></name><operator pos:line="118" pos:column="87">-&gt;<pos:position pos:line="118" pos:column="92"/></operator><name pos:line="118" pos:column="89">nc<pos:position pos:line="118" pos:column="91"/></name></name> <operator pos:line="118" pos:column="92">&lt;&lt;<pos:position pos:line="118" pos:column="100"/></operator> <literal type="string" pos:line="118" pos:column="95">"'"<pos:position pos:line="118" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="100"/></expr_stmt>
            <break pos:line="119" pos:column="13">break;<pos:position pos:line="119" pos:column="19"/></break>

        <case pos:line="121" pos:column="9">case <expr><name pos:line="121" pos:column="14">DIGEST_CNONCE<pos:position pos:line="121" pos:column="27"/></name></expr>:<pos:position pos:line="121" pos:column="28"/></case>
            <expr_stmt><expr><call><name pos:line="122" pos:column="13">safe_free<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">(<argument><expr><name><name pos:line="122" pos:column="23">digest_request<pos:position pos:line="122" pos:column="37"/></name><operator pos:line="122" pos:column="37">-&gt;<pos:position pos:line="122" pos:column="42"/></operator><name pos:line="122" pos:column="39">cnonce<pos:position pos:line="122" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="123" pos:column="13">digest_request<pos:position pos:line="123" pos:column="27"/></name><operator pos:line="123" pos:column="27">-&gt;<pos:position pos:line="123" pos:column="32"/></operator><name pos:line="123" pos:column="29">cnonce<pos:position pos:line="123" pos:column="35"/></name></name> <operator pos:line="123" pos:column="36">=<pos:position pos:line="123" pos:column="37"/></operator> <call><name pos:line="123" pos:column="38">xstrndup<pos:position pos:line="123" pos:column="46"/></name><argument_list pos:line="123" pos:column="46">(<argument><expr><call><name><name pos:line="123" pos:column="47">value<pos:position pos:line="123" pos:column="52"/></name><operator pos:line="123" pos:column="52">.<pos:position pos:line="123" pos:column="53"/></operator><name pos:line="123" pos:column="53">rawBuf<pos:position pos:line="123" pos:column="59"/></name></name><argument_list pos:line="123" pos:column="59">()<pos:position pos:line="123" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="123" pos:column="63">value<pos:position pos:line="123" pos:column="68"/></name><operator pos:line="123" pos:column="68">.<pos:position pos:line="123" pos:column="69"/></operator><name pos:line="123" pos:column="69">size<pos:position pos:line="123" pos:column="73"/></name></name><argument_list pos:line="123" pos:column="73">()<pos:position pos:line="123" pos:column="75"/></argument_list></call> <operator pos:line="123" pos:column="76">+<pos:position pos:line="123" pos:column="77"/></operator> <literal type="number" pos:line="123" pos:column="78">1<pos:position pos:line="123" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">debugs<pos:position pos:line="124" pos:column="19"/></name><argument_list pos:line="124" pos:column="19">(<argument><expr><literal type="number" pos:line="124" pos:column="20">29<pos:position pos:line="124" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="24">9<pos:position pos:line="124" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="27">"authDigestDecodeAuth: Found cnonce '"<pos:position pos:line="124" pos:column="65"/></literal> <operator pos:line="124" pos:column="66">&lt;&lt;<pos:position pos:line="124" pos:column="74"/></operator> <name><name pos:line="124" pos:column="69">digest_request<pos:position pos:line="124" pos:column="83"/></name><operator pos:line="124" pos:column="83">-&gt;<pos:position pos:line="124" pos:column="88"/></operator><name pos:line="124" pos:column="85">cnonce<pos:position pos:line="124" pos:column="91"/></name></name> <operator pos:line="124" pos:column="92">&lt;&lt;<pos:position pos:line="124" pos:column="100"/></operator> <literal type="string" pos:line="124" pos:column="95">"'"<pos:position pos:line="124" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="100"/></expr_stmt>
            <break pos:line="125" pos:column="13">break;<pos:position pos:line="125" pos:column="19"/></break>

        <case pos:line="127" pos:column="9">case <expr><name pos:line="127" pos:column="14">DIGEST_RESPONSE<pos:position pos:line="127" pos:column="29"/></name></expr>:<pos:position pos:line="127" pos:column="30"/></case>
            <expr_stmt><expr><call><name pos:line="128" pos:column="13">safe_free<pos:position pos:line="128" pos:column="22"/></name><argument_list pos:line="128" pos:column="22">(<argument><expr><name><name pos:line="128" pos:column="23">digest_request<pos:position pos:line="128" pos:column="37"/></name><operator pos:line="128" pos:column="37">-&gt;<pos:position pos:line="128" pos:column="42"/></operator><name pos:line="128" pos:column="39">response<pos:position pos:line="128" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="129" pos:column="13">digest_request<pos:position pos:line="129" pos:column="27"/></name><operator pos:line="129" pos:column="27">-&gt;<pos:position pos:line="129" pos:column="32"/></operator><name pos:line="129" pos:column="29">response<pos:position pos:line="129" pos:column="37"/></name></name> <operator pos:line="129" pos:column="38">=<pos:position pos:line="129" pos:column="39"/></operator> <call><name pos:line="129" pos:column="40">xstrndup<pos:position pos:line="129" pos:column="48"/></name><argument_list pos:line="129" pos:column="48">(<argument><expr><call><name><name pos:line="129" pos:column="49">value<pos:position pos:line="129" pos:column="54"/></name><operator pos:line="129" pos:column="54">.<pos:position pos:line="129" pos:column="55"/></operator><name pos:line="129" pos:column="55">rawBuf<pos:position pos:line="129" pos:column="61"/></name></name><argument_list pos:line="129" pos:column="61">()<pos:position pos:line="129" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="129" pos:column="65">value<pos:position pos:line="129" pos:column="70"/></name><operator pos:line="129" pos:column="70">.<pos:position pos:line="129" pos:column="71"/></operator><name pos:line="129" pos:column="71">size<pos:position pos:line="129" pos:column="75"/></name></name><argument_list pos:line="129" pos:column="75">()<pos:position pos:line="129" pos:column="77"/></argument_list></call> <operator pos:line="129" pos:column="78">+<pos:position pos:line="129" pos:column="79"/></operator> <literal type="number" pos:line="129" pos:column="80">1<pos:position pos:line="129" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="130" pos:column="13">debugs<pos:position pos:line="130" pos:column="19"/></name><argument_list pos:line="130" pos:column="19">(<argument><expr><literal type="number" pos:line="130" pos:column="20">29<pos:position pos:line="130" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="24">9<pos:position pos:line="130" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="27">"authDigestDecodeAuth: Found response '"<pos:position pos:line="130" pos:column="67"/></literal> <operator pos:line="130" pos:column="68">&lt;&lt;<pos:position pos:line="130" pos:column="76"/></operator> <name><name pos:line="130" pos:column="71">digest_request<pos:position pos:line="130" pos:column="85"/></name><operator pos:line="130" pos:column="85">-&gt;<pos:position pos:line="130" pos:column="90"/></operator><name pos:line="130" pos:column="87">response<pos:position pos:line="130" pos:column="95"/></name></name> <operator pos:line="130" pos:column="96">&lt;&lt;<pos:position pos:line="130" pos:column="104"/></operator> <literal type="string" pos:line="130" pos:column="99">"'"<pos:position pos:line="130" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="104"/></expr_stmt>
            <break pos:line="131" pos:column="13">break;<pos:position pos:line="131" pos:column="19"/></break>

        <default pos:line="133" pos:column="9">default:<pos:position pos:line="133" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">debugs<pos:position pos:line="134" pos:column="19"/></name><argument_list pos:line="134" pos:column="19">(<argument><expr><literal type="number" pos:line="134" pos:column="20">29<pos:position pos:line="134" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="24">3<pos:position pos:line="134" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="27">"authDigestDecodeAuth: Unknown attribute '"<pos:position pos:line="134" pos:column="70"/></literal> <operator pos:line="134" pos:column="71">&lt;&lt;<pos:position pos:line="134" pos:column="79"/></operator> <name pos:line="134" pos:column="74">item<pos:position pos:line="134" pos:column="78"/></name> <operator pos:line="134" pos:column="79">&lt;&lt;<pos:position pos:line="134" pos:column="87"/></operator> <literal type="string" pos:line="134" pos:column="82">"' in '"<pos:position pos:line="134" pos:column="90"/></literal> <operator pos:line="134" pos:column="91">&lt;&lt;<pos:position pos:line="134" pos:column="99"/></operator> <name pos:line="134" pos:column="94">temp<pos:position pos:line="134" pos:column="98"/></name> <operator pos:line="134" pos:column="99">&lt;&lt;<pos:position pos:line="134" pos:column="107"/></operator> <literal type="string" pos:line="134" pos:column="102">"'"<pos:position pos:line="134" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="107"/></expr_stmt>
            <break pos:line="135" pos:column="13">break;<pos:position pos:line="135" pos:column="19"/></break>
        }<pos:position pos:line="136" pos:column="10"/></block></switch>
    }<pos:position pos:line="137" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="139" pos:column="5">temp<pos:position pos:line="139" pos:column="9"/></name><operator pos:line="139" pos:column="9">.<pos:position pos:line="139" pos:column="10"/></operator><name pos:line="139" pos:column="10">clean<pos:position pos:line="139" pos:column="15"/></name></name><argument_list pos:line="139" pos:column="15">()<pos:position pos:line="139" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="18"/></expr_stmt>


    <comment type="block" pos:line="142" pos:column="5">/* now we validate the data given to us */</comment>

    <comment type="block" pos:line="144" pos:column="5">/*
     * TODO: on invalid parameters we should return 400, not 407.
     * Find some clean way of doing this. perhaps return a valid
     * struct, and set the direction to clientwards combined with
     * a change to the clientwards handling code (ie let the
     * clientwards call set the error type (but limited to known
     * correct values - 400/401/407
     */</comment>

    <comment type="block" pos:line="153" pos:column="5">/* 2069 requirements */</comment>

    <comment type="block" pos:line="155" pos:column="5">/* do we have a username ? */</comment>
    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><operator pos:line="156" pos:column="9">!<pos:position pos:line="156" pos:column="10"/></operator><name pos:line="156" pos:column="10">username<pos:position pos:line="156" pos:column="18"/></name> <operator pos:line="156" pos:column="19">||<pos:position pos:line="156" pos:column="21"/></operator> <name><name pos:line="156" pos:column="22">username<pos:position pos:line="156" pos:column="30"/></name><index pos:line="156" pos:column="30">[<expr><literal type="number" pos:line="156" pos:column="31">0<pos:position pos:line="156" pos:column="32"/></literal></expr>]<pos:position pos:line="156" pos:column="33"/></index></name> <operator pos:line="156" pos:column="34">==<pos:position pos:line="156" pos:column="36"/></operator> <literal type="char" pos:line="156" pos:column="37">'\0'<pos:position pos:line="156" pos:column="41"/></literal></expr>)<pos:position pos:line="156" pos:column="42"/></condition><then pos:line="156" pos:column="42"> <block pos:line="156" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">debugs<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">(<argument><expr><literal type="number" pos:line="157" pos:column="16">29<pos:position pos:line="157" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="20">2<pos:position pos:line="157" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="23">"authenticateDigestDecode: Empty or not present username"<pos:position pos:line="157" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="82"/></expr_stmt>
        <return pos:line="158" pos:column="9">return <expr><call><name pos:line="158" pos:column="16">authDigestLogUsername<pos:position pos:line="158" pos:column="37"/></name><argument_list pos:line="158" pos:column="37">(<argument><expr><name pos:line="158" pos:column="38">username<pos:position pos:line="158" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="48">digest_request<pos:position pos:line="158" pos:column="62"/></name></expr></argument>)<pos:position pos:line="158" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="64"/></return>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="161" pos:column="5">/* Sanity check of the username.
     * " can not be allowed in usernames until * the digest helper protocol
     * have been redone
     */</comment>
    <if pos:line="165" pos:column="5">if <condition pos:line="165" pos:column="8">(<expr><call><name pos:line="165" pos:column="9">strchr<pos:position pos:line="165" pos:column="15"/></name><argument_list pos:line="165" pos:column="15">(<argument><expr><name pos:line="165" pos:column="16">username<pos:position pos:line="165" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="165" pos:column="26">'"'<pos:position pos:line="165" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="165" pos:column="31"/></condition><then pos:line="165" pos:column="31"> <block pos:line="165" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="166" pos:column="9">debugs<pos:position pos:line="166" pos:column="15"/></name><argument_list pos:line="166" pos:column="15">(<argument><expr><literal type="number" pos:line="166" pos:column="16">29<pos:position pos:line="166" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="20">2<pos:position pos:line="166" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="23">"authenticateDigestDecode: Unacceptable username '"<pos:position pos:line="166" pos:column="74"/></literal> <operator pos:line="166" pos:column="75">&lt;&lt;<pos:position pos:line="166" pos:column="83"/></operator> <name pos:line="166" pos:column="78">username<pos:position pos:line="166" pos:column="86"/></name> <operator pos:line="166" pos:column="87">&lt;&lt;<pos:position pos:line="166" pos:column="95"/></operator> <literal type="string" pos:line="166" pos:column="90">"'"<pos:position pos:line="166" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="95"/></expr_stmt>
        <return pos:line="167" pos:column="9">return <expr><call><name pos:line="167" pos:column="16">authDigestLogUsername<pos:position pos:line="167" pos:column="37"/></name><argument_list pos:line="167" pos:column="37">(<argument><expr><name pos:line="167" pos:column="38">username<pos:position pos:line="167" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="167" pos:column="48">digest_request<pos:position pos:line="167" pos:column="62"/></name></expr></argument>)<pos:position pos:line="167" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="64"/></return>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="170" pos:column="5">/* do we have a realm ? */</comment>
    <if pos:line="171" pos:column="5">if <condition pos:line="171" pos:column="8">(<expr><operator pos:line="171" pos:column="9">!<pos:position pos:line="171" pos:column="10"/></operator><name><name pos:line="171" pos:column="10">digest_request<pos:position pos:line="171" pos:column="24"/></name><operator pos:line="171" pos:column="24">-&gt;<pos:position pos:line="171" pos:column="29"/></operator><name pos:line="171" pos:column="26">realm<pos:position pos:line="171" pos:column="31"/></name></name> <operator pos:line="171" pos:column="32">||<pos:position pos:line="171" pos:column="34"/></operator> <name><name pos:line="171" pos:column="35">digest_request<pos:position pos:line="171" pos:column="49"/></name><operator pos:line="171" pos:column="49">-&gt;<pos:position pos:line="171" pos:column="54"/></operator><name pos:line="171" pos:column="51">realm<pos:position pos:line="171" pos:column="56"/></name><index pos:line="171" pos:column="56">[<expr><literal type="number" pos:line="171" pos:column="57">0<pos:position pos:line="171" pos:column="58"/></literal></expr>]<pos:position pos:line="171" pos:column="59"/></index></name> <operator pos:line="171" pos:column="60">==<pos:position pos:line="171" pos:column="62"/></operator> <literal type="char" pos:line="171" pos:column="63">'\0'<pos:position pos:line="171" pos:column="67"/></literal></expr>)<pos:position pos:line="171" pos:column="68"/></condition><then pos:line="171" pos:column="68"> <block pos:line="171" pos:column="69">{
        <expr_stmt><expr><call><name pos:line="172" pos:column="9">debugs<pos:position pos:line="172" pos:column="15"/></name><argument_list pos:line="172" pos:column="15">(<argument><expr><literal type="number" pos:line="172" pos:column="16">29<pos:position pos:line="172" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="20">2<pos:position pos:line="172" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="23">"authenticateDigestDecode: Empty or not present realm"<pos:position pos:line="172" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="79"/></expr_stmt>
        <return pos:line="173" pos:column="9">return <expr><call><name pos:line="173" pos:column="16">authDigestLogUsername<pos:position pos:line="173" pos:column="37"/></name><argument_list pos:line="173" pos:column="37">(<argument><expr><name pos:line="173" pos:column="38">username<pos:position pos:line="173" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="173" pos:column="48">digest_request<pos:position pos:line="173" pos:column="62"/></name></expr></argument>)<pos:position pos:line="173" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="64"/></return>
    }<pos:position pos:line="174" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="176" pos:column="5">/* and a nonce? */</comment>
    <if pos:line="177" pos:column="5">if <condition pos:line="177" pos:column="8">(<expr><operator pos:line="177" pos:column="9">!<pos:position pos:line="177" pos:column="10"/></operator><name><name pos:line="177" pos:column="10">digest_request<pos:position pos:line="177" pos:column="24"/></name><operator pos:line="177" pos:column="24">-&gt;<pos:position pos:line="177" pos:column="29"/></operator><name pos:line="177" pos:column="26">nonceb64<pos:position pos:line="177" pos:column="34"/></name></name> <operator pos:line="177" pos:column="35">||<pos:position pos:line="177" pos:column="37"/></operator> <name><name pos:line="177" pos:column="38">digest_request<pos:position pos:line="177" pos:column="52"/></name><operator pos:line="177" pos:column="52">-&gt;<pos:position pos:line="177" pos:column="57"/></operator><name pos:line="177" pos:column="54">nonceb64<pos:position pos:line="177" pos:column="62"/></name><index pos:line="177" pos:column="62">[<expr><literal type="number" pos:line="177" pos:column="63">0<pos:position pos:line="177" pos:column="64"/></literal></expr>]<pos:position pos:line="177" pos:column="65"/></index></name> <operator pos:line="177" pos:column="66">==<pos:position pos:line="177" pos:column="68"/></operator> <literal type="char" pos:line="177" pos:column="69">'\0'<pos:position pos:line="177" pos:column="73"/></literal></expr>)<pos:position pos:line="177" pos:column="74"/></condition><then pos:line="177" pos:column="74"> <block pos:line="177" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="178" pos:column="9">debugs<pos:position pos:line="178" pos:column="15"/></name><argument_list pos:line="178" pos:column="15">(<argument><expr><literal type="number" pos:line="178" pos:column="16">29<pos:position pos:line="178" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="178" pos:column="20">2<pos:position pos:line="178" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="23">"authenticateDigestDecode: Empty or not present nonce"<pos:position pos:line="178" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="79"/></expr_stmt>
        <return pos:line="179" pos:column="9">return <expr><call><name pos:line="179" pos:column="16">authDigestLogUsername<pos:position pos:line="179" pos:column="37"/></name><argument_list pos:line="179" pos:column="37">(<argument><expr><name pos:line="179" pos:column="38">username<pos:position pos:line="179" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="48">digest_request<pos:position pos:line="179" pos:column="62"/></name></expr></argument>)<pos:position pos:line="179" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="64"/></return>
    }<pos:position pos:line="180" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="182" pos:column="5">/* we can't check the URI just yet. We'll check it in the
     * authenticate phase, but needs to be given */</comment>
    <if pos:line="184" pos:column="5">if <condition pos:line="184" pos:column="8">(<expr><operator pos:line="184" pos:column="9">!<pos:position pos:line="184" pos:column="10"/></operator><name><name pos:line="184" pos:column="10">digest_request<pos:position pos:line="184" pos:column="24"/></name><operator pos:line="184" pos:column="24">-&gt;<pos:position pos:line="184" pos:column="29"/></operator><name pos:line="184" pos:column="26">uri<pos:position pos:line="184" pos:column="29"/></name></name> <operator pos:line="184" pos:column="30">||<pos:position pos:line="184" pos:column="32"/></operator> <name><name pos:line="184" pos:column="33">digest_request<pos:position pos:line="184" pos:column="47"/></name><operator pos:line="184" pos:column="47">-&gt;<pos:position pos:line="184" pos:column="52"/></operator><name pos:line="184" pos:column="49">uri<pos:position pos:line="184" pos:column="52"/></name><index pos:line="184" pos:column="52">[<expr><literal type="number" pos:line="184" pos:column="53">0<pos:position pos:line="184" pos:column="54"/></literal></expr>]<pos:position pos:line="184" pos:column="55"/></index></name> <operator pos:line="184" pos:column="56">==<pos:position pos:line="184" pos:column="58"/></operator> <literal type="char" pos:line="184" pos:column="59">'\0'<pos:position pos:line="184" pos:column="63"/></literal></expr>)<pos:position pos:line="184" pos:column="64"/></condition><then pos:line="184" pos:column="64"> <block pos:line="184" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="185" pos:column="9">debugs<pos:position pos:line="185" pos:column="15"/></name><argument_list pos:line="185" pos:column="15">(<argument><expr><literal type="number" pos:line="185" pos:column="16">29<pos:position pos:line="185" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="185" pos:column="20">2<pos:position pos:line="185" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="23">"authenticateDigestDecode: Missing URI field"<pos:position pos:line="185" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="185" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="70"/></expr_stmt>
        <return pos:line="186" pos:column="9">return <expr><call><name pos:line="186" pos:column="16">authDigestLogUsername<pos:position pos:line="186" pos:column="37"/></name><argument_list pos:line="186" pos:column="37">(<argument><expr><name pos:line="186" pos:column="38">username<pos:position pos:line="186" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="48">digest_request<pos:position pos:line="186" pos:column="62"/></name></expr></argument>)<pos:position pos:line="186" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="64"/></return>
    }<pos:position pos:line="187" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="189" pos:column="5">/* is the response the correct length? */</comment>
    <if pos:line="190" pos:column="5">if <condition pos:line="190" pos:column="8">(<expr><operator pos:line="190" pos:column="9">!<pos:position pos:line="190" pos:column="10"/></operator><name><name pos:line="190" pos:column="10">digest_request<pos:position pos:line="190" pos:column="24"/></name><operator pos:line="190" pos:column="24">-&gt;<pos:position pos:line="190" pos:column="29"/></operator><name pos:line="190" pos:column="26">response<pos:position pos:line="190" pos:column="34"/></name></name> <operator pos:line="190" pos:column="35">||<pos:position pos:line="190" pos:column="37"/></operator> <call><name pos:line="190" pos:column="38">strlen<pos:position pos:line="190" pos:column="44"/></name><argument_list pos:line="190" pos:column="44">(<argument><expr><name><name pos:line="190" pos:column="45">digest_request<pos:position pos:line="190" pos:column="59"/></name><operator pos:line="190" pos:column="59">-&gt;<pos:position pos:line="190" pos:column="64"/></operator><name pos:line="190" pos:column="61">response<pos:position pos:line="190" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="190" pos:column="70"/></argument_list></call> <operator pos:line="190" pos:column="71">!=<pos:position pos:line="190" pos:column="73"/></operator> <literal type="number" pos:line="190" pos:column="74">32<pos:position pos:line="190" pos:column="76"/></literal></expr>)<pos:position pos:line="190" pos:column="77"/></condition><then pos:line="190" pos:column="77"> <block pos:line="190" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="191" pos:column="9">debugs<pos:position pos:line="191" pos:column="15"/></name><argument_list pos:line="191" pos:column="15">(<argument><expr><literal type="number" pos:line="191" pos:column="16">29<pos:position pos:line="191" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="191" pos:column="20">2<pos:position pos:line="191" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="23">"authenticateDigestDecode: Response length invalid"<pos:position pos:line="191" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="76"/></expr_stmt>
        <return pos:line="192" pos:column="9">return <expr><call><name pos:line="192" pos:column="16">authDigestLogUsername<pos:position pos:line="192" pos:column="37"/></name><argument_list pos:line="192" pos:column="37">(<argument><expr><name pos:line="192" pos:column="38">username<pos:position pos:line="192" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="48">digest_request<pos:position pos:line="192" pos:column="62"/></name></expr></argument>)<pos:position pos:line="192" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="64"/></return>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="195" pos:column="5">/* check the algorithm is present and supported */</comment>
    <if pos:line="196" pos:column="5">if <condition pos:line="196" pos:column="8">(<expr><operator pos:line="196" pos:column="9">!<pos:position pos:line="196" pos:column="10"/></operator><name><name pos:line="196" pos:column="10">digest_request<pos:position pos:line="196" pos:column="24"/></name><operator pos:line="196" pos:column="24">-&gt;<pos:position pos:line="196" pos:column="29"/></operator><name pos:line="196" pos:column="26">algorithm<pos:position pos:line="196" pos:column="35"/></name></name></expr>)<pos:position pos:line="196" pos:column="36"/></condition><then pos:line="196" pos:column="36">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="197" pos:column="9">digest_request<pos:position pos:line="197" pos:column="23"/></name><operator pos:line="197" pos:column="23">-&gt;<pos:position pos:line="197" pos:column="28"/></operator><name pos:line="197" pos:column="25">algorithm<pos:position pos:line="197" pos:column="34"/></name></name> <operator pos:line="197" pos:column="35">=<pos:position pos:line="197" pos:column="36"/></operator> <call><name pos:line="197" pos:column="37">xstrndup<pos:position pos:line="197" pos:column="45"/></name><argument_list pos:line="197" pos:column="45">(<argument><expr><literal type="string" pos:line="197" pos:column="46">"MD5"<pos:position pos:line="197" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="197" pos:column="53">4<pos:position pos:line="197" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="56"/></expr_stmt></block></then>
    <elseif pos:line="198" pos:column="5">else <if pos:line="198" pos:column="10">if <condition pos:line="198" pos:column="13">(<expr><call><name pos:line="198" pos:column="14">strcmp<pos:position pos:line="198" pos:column="20"/></name><argument_list pos:line="198" pos:column="20">(<argument><expr><name><name pos:line="198" pos:column="21">digest_request<pos:position pos:line="198" pos:column="35"/></name><operator pos:line="198" pos:column="35">-&gt;<pos:position pos:line="198" pos:column="40"/></operator><name pos:line="198" pos:column="37">algorithm<pos:position pos:line="198" pos:column="46"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="48">"MD5"<pos:position pos:line="198" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="54"/></argument_list></call>
             <operator pos:line="199" pos:column="14">&amp;&amp;<pos:position pos:line="199" pos:column="24"/></operator> <call><name pos:line="199" pos:column="17">strcmp<pos:position pos:line="199" pos:column="23"/></name><argument_list pos:line="199" pos:column="23">(<argument><expr><name><name pos:line="199" pos:column="24">digest_request<pos:position pos:line="199" pos:column="38"/></name><operator pos:line="199" pos:column="38">-&gt;<pos:position pos:line="199" pos:column="43"/></operator><name pos:line="199" pos:column="40">algorithm<pos:position pos:line="199" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="199" pos:column="51">"MD5-sess"<pos:position pos:line="199" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="199" pos:column="63"/></condition><then pos:line="199" pos:column="63"> <block pos:line="199" pos:column="64">{
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">debugs<pos:position pos:line="200" pos:column="15"/></name><argument_list pos:line="200" pos:column="15">(<argument><expr><literal type="number" pos:line="200" pos:column="16">29<pos:position pos:line="200" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="200" pos:column="20">2<pos:position pos:line="200" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="23">"authenticateDigestDecode: invalid algorithm specified!"<pos:position pos:line="200" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="81"/></expr_stmt>
        <return pos:line="201" pos:column="9">return <expr><call><name pos:line="201" pos:column="16">authDigestLogUsername<pos:position pos:line="201" pos:column="37"/></name><argument_list pos:line="201" pos:column="37">(<argument><expr><name pos:line="201" pos:column="38">username<pos:position pos:line="201" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="48">digest_request<pos:position pos:line="201" pos:column="62"/></name></expr></argument>)<pos:position pos:line="201" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="64"/></return>
    }<pos:position pos:line="202" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="204" pos:column="5">/* 2617 requirements, indicated by qop */</comment>
    <if pos:line="205" pos:column="5">if <condition pos:line="205" pos:column="8">(<expr><name><name pos:line="205" pos:column="9">digest_request<pos:position pos:line="205" pos:column="23"/></name><operator pos:line="205" pos:column="23">-&gt;<pos:position pos:line="205" pos:column="28"/></operator><name pos:line="205" pos:column="25">qop<pos:position pos:line="205" pos:column="28"/></name></name></expr>)<pos:position pos:line="205" pos:column="29"/></condition><then pos:line="205" pos:column="29"> <block pos:line="205" pos:column="30">{

        <comment type="block" pos:line="207" pos:column="9">/* check the qop is what we expected. */</comment>
        <if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><call><name pos:line="208" pos:column="13">strcmp<pos:position pos:line="208" pos:column="19"/></name><argument_list pos:line="208" pos:column="19">(<argument><expr><name><name pos:line="208" pos:column="20">digest_request<pos:position pos:line="208" pos:column="34"/></name><operator pos:line="208" pos:column="34">-&gt;<pos:position pos:line="208" pos:column="39"/></operator><name pos:line="208" pos:column="36">qop<pos:position pos:line="208" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="41">QOP_AUTH<pos:position pos:line="208" pos:column="49"/></name></expr></argument>)<pos:position pos:line="208" pos:column="50"/></argument_list></call> <operator pos:line="208" pos:column="51">!=<pos:position pos:line="208" pos:column="53"/></operator> <literal type="number" pos:line="208" pos:column="54">0<pos:position pos:line="208" pos:column="55"/></literal></expr>)<pos:position pos:line="208" pos:column="56"/></condition><then pos:line="208" pos:column="56"> <block pos:line="208" pos:column="57">{
            <comment type="block" pos:line="209" pos:column="13">/* we received a qop option we didn't send */</comment>
            <expr_stmt><expr><call><name pos:line="210" pos:column="13">debugs<pos:position pos:line="210" pos:column="19"/></name><argument_list pos:line="210" pos:column="19">(<argument><expr><literal type="number" pos:line="210" pos:column="20">29<pos:position pos:line="210" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="210" pos:column="24">2<pos:position pos:line="210" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="27">"authenticateDigestDecode: Invalid qop option received"<pos:position pos:line="210" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="84"/></expr_stmt>
            <return pos:line="211" pos:column="13">return <expr><call><name pos:line="211" pos:column="20">authDigestLogUsername<pos:position pos:line="211" pos:column="41"/></name><argument_list pos:line="211" pos:column="41">(<argument><expr><name pos:line="211" pos:column="42">username<pos:position pos:line="211" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="211" pos:column="52">digest_request<pos:position pos:line="211" pos:column="66"/></name></expr></argument>)<pos:position pos:line="211" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="68"/></return>
        }<pos:position pos:line="212" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="214" pos:column="9">/* check cnonce */</comment>
        <if pos:line="215" pos:column="9">if <condition pos:line="215" pos:column="12">(<expr><operator pos:line="215" pos:column="13">!<pos:position pos:line="215" pos:column="14"/></operator><name><name pos:line="215" pos:column="14">digest_request<pos:position pos:line="215" pos:column="28"/></name><operator pos:line="215" pos:column="28">-&gt;<pos:position pos:line="215" pos:column="33"/></operator><name pos:line="215" pos:column="30">cnonce<pos:position pos:line="215" pos:column="36"/></name></name> <operator pos:line="215" pos:column="37">||<pos:position pos:line="215" pos:column="39"/></operator> <name><name pos:line="215" pos:column="40">digest_request<pos:position pos:line="215" pos:column="54"/></name><operator pos:line="215" pos:column="54">-&gt;<pos:position pos:line="215" pos:column="59"/></operator><name pos:line="215" pos:column="56">cnonce<pos:position pos:line="215" pos:column="62"/></name><index pos:line="215" pos:column="62">[<expr><literal type="number" pos:line="215" pos:column="63">0<pos:position pos:line="215" pos:column="64"/></literal></expr>]<pos:position pos:line="215" pos:column="65"/></index></name> <operator pos:line="215" pos:column="66">==<pos:position pos:line="215" pos:column="68"/></operator> <literal type="char" pos:line="215" pos:column="69">'\0'<pos:position pos:line="215" pos:column="73"/></literal></expr>)<pos:position pos:line="215" pos:column="74"/></condition><then pos:line="215" pos:column="74"> <block pos:line="215" pos:column="75">{
            <expr_stmt><expr><call><name pos:line="216" pos:column="13">debugs<pos:position pos:line="216" pos:column="19"/></name><argument_list pos:line="216" pos:column="19">(<argument><expr><literal type="number" pos:line="216" pos:column="20">29<pos:position pos:line="216" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="216" pos:column="24">2<pos:position pos:line="216" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="27">"authenticateDigestDecode: Missing cnonce field"<pos:position pos:line="216" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="77"/></expr_stmt>
            <return pos:line="217" pos:column="13">return <expr><call><name pos:line="217" pos:column="20">authDigestLogUsername<pos:position pos:line="217" pos:column="41"/></name><argument_list pos:line="217" pos:column="41">(<argument><expr><name pos:line="217" pos:column="42">username<pos:position pos:line="217" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="217" pos:column="52">digest_request<pos:position pos:line="217" pos:column="66"/></name></expr></argument>)<pos:position pos:line="217" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="68"/></return>
        }<pos:position pos:line="218" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="220" pos:column="9">/* check nc */</comment>
        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><call><name pos:line="221" pos:column="13">strlen<pos:position pos:line="221" pos:column="19"/></name><argument_list pos:line="221" pos:column="19">(<argument><expr><name><name pos:line="221" pos:column="20">digest_request<pos:position pos:line="221" pos:column="34"/></name><operator pos:line="221" pos:column="34">-&gt;<pos:position pos:line="221" pos:column="39"/></operator><name pos:line="221" pos:column="36">nc<pos:position pos:line="221" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="39"/></argument_list></call> <operator pos:line="221" pos:column="40">!=<pos:position pos:line="221" pos:column="42"/></operator> <literal type="number" pos:line="221" pos:column="43">8<pos:position pos:line="221" pos:column="44"/></literal> <operator pos:line="221" pos:column="45">||<pos:position pos:line="221" pos:column="47"/></operator> <call><name pos:line="221" pos:column="48">strspn<pos:position pos:line="221" pos:column="54"/></name><argument_list pos:line="221" pos:column="54">(<argument><expr><name><name pos:line="221" pos:column="55">digest_request<pos:position pos:line="221" pos:column="69"/></name><operator pos:line="221" pos:column="69">-&gt;<pos:position pos:line="221" pos:column="74"/></operator><name pos:line="221" pos:column="71">nc<pos:position pos:line="221" pos:column="73"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="75">"0123456789abcdefABCDEF"<pos:position pos:line="221" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="100"/></argument_list></call> <operator pos:line="221" pos:column="101">!=<pos:position pos:line="221" pos:column="103"/></operator> <literal type="number" pos:line="221" pos:column="104">8<pos:position pos:line="221" pos:column="105"/></literal></expr>)<pos:position pos:line="221" pos:column="106"/></condition><then pos:line="221" pos:column="106"> <block pos:line="221" pos:column="107">{
            <expr_stmt><expr><call><name pos:line="222" pos:column="13">debugs<pos:position pos:line="222" pos:column="19"/></name><argument_list pos:line="222" pos:column="19">(<argument><expr><literal type="number" pos:line="222" pos:column="20">29<pos:position pos:line="222" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="222" pos:column="24">2<pos:position pos:line="222" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="27">"authenticateDigestDecode: invalid nonce count"<pos:position pos:line="222" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="76"/></expr_stmt>
            <return pos:line="223" pos:column="13">return <expr><call><name pos:line="223" pos:column="20">authDigestLogUsername<pos:position pos:line="223" pos:column="41"/></name><argument_list pos:line="223" pos:column="41">(<argument><expr><name pos:line="223" pos:column="42">username<pos:position pos:line="223" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="223" pos:column="52">digest_request<pos:position pos:line="223" pos:column="66"/></name></expr></argument>)<pos:position pos:line="223" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="68"/></return>
        }<pos:position pos:line="224" pos:column="10"/></block></then></if>
    }<pos:position pos:line="225" pos:column="6"/></block></then> <else pos:line="225" pos:column="7">else <block pos:line="225" pos:column="12">{
        <comment type="block" pos:line="226" pos:column="9">/* cnonce and nc both require qop */</comment>
        <if pos:line="227" pos:column="9">if <condition pos:line="227" pos:column="12">(<expr><name><name pos:line="227" pos:column="13">digest_request<pos:position pos:line="227" pos:column="27"/></name><operator pos:line="227" pos:column="27">-&gt;<pos:position pos:line="227" pos:column="32"/></operator><name pos:line="227" pos:column="29">cnonce<pos:position pos:line="227" pos:column="35"/></name></name> <operator pos:line="227" pos:column="36">||<pos:position pos:line="227" pos:column="38"/></operator> <name><name pos:line="227" pos:column="39">digest_request<pos:position pos:line="227" pos:column="53"/></name><operator pos:line="227" pos:column="53">-&gt;<pos:position pos:line="227" pos:column="58"/></operator><name pos:line="227" pos:column="55">nc<pos:position pos:line="227" pos:column="57"/></name></name></expr>)<pos:position pos:line="227" pos:column="58"/></condition><then pos:line="227" pos:column="58"> <block pos:line="227" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="228" pos:column="13">debugs<pos:position pos:line="228" pos:column="19"/></name><argument_list pos:line="228" pos:column="19">(<argument><expr><literal type="number" pos:line="228" pos:column="20">29<pos:position pos:line="228" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="228" pos:column="24">2<pos:position pos:line="228" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="27">"authenticateDigestDecode: missing qop!"<pos:position pos:line="228" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="69"/></expr_stmt>
            <return pos:line="229" pos:column="13">return <expr><call><name pos:line="229" pos:column="20">authDigestLogUsername<pos:position pos:line="229" pos:column="41"/></name><argument_list pos:line="229" pos:column="41">(<argument><expr><name pos:line="229" pos:column="42">username<pos:position pos:line="229" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="52">digest_request<pos:position pos:line="229" pos:column="66"/></name></expr></argument>)<pos:position pos:line="229" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="68"/></return>
        }<pos:position pos:line="230" pos:column="10"/></block></then></if>
    }<pos:position pos:line="231" pos:column="6"/></block></else></if>

    <comment type="block" format="doxygen" pos:line="233" pos:column="5">/** below nonce state dependent **/</comment>

    <comment type="block" pos:line="235" pos:column="5">/* now the nonce */</comment>
    <expr_stmt><expr><name pos:line="236" pos:column="5">nonce<pos:position pos:line="236" pos:column="10"/></name> <operator pos:line="236" pos:column="11">=<pos:position pos:line="236" pos:column="12"/></operator> <call><name pos:line="236" pos:column="13">authenticateDigestNonceFindNonce<pos:position pos:line="236" pos:column="45"/></name><argument_list pos:line="236" pos:column="45">(<argument><expr><name><name pos:line="236" pos:column="46">digest_request<pos:position pos:line="236" pos:column="60"/></name><operator pos:line="236" pos:column="60">-&gt;<pos:position pos:line="236" pos:column="65"/></operator><name pos:line="236" pos:column="62">nonceb64<pos:position pos:line="236" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="236" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="72"/></expr_stmt>
    <if pos:line="237" pos:column="5">if <condition pos:line="237" pos:column="8">(<expr><operator pos:line="237" pos:column="9">!<pos:position pos:line="237" pos:column="10"/></operator><name pos:line="237" pos:column="10">nonce<pos:position pos:line="237" pos:column="15"/></name></expr>)<pos:position pos:line="237" pos:column="16"/></condition><then pos:line="237" pos:column="16"> <block pos:line="237" pos:column="17">{
        <comment type="block" pos:line="238" pos:column="9">/* we couldn't find a matching nonce! */</comment>
        <expr_stmt><expr><call><name pos:line="239" pos:column="9">debugs<pos:position pos:line="239" pos:column="15"/></name><argument_list pos:line="239" pos:column="15">(<argument><expr><literal type="number" pos:line="239" pos:column="16">29<pos:position pos:line="239" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="239" pos:column="20">2<pos:position pos:line="239" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="23">"authenticateDigestDecode: Unexpected or invalid nonce received"<pos:position pos:line="239" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="240" pos:column="9">digest_request<pos:position pos:line="240" pos:column="23"/></name><operator pos:line="240" pos:column="23">-&gt;<pos:position pos:line="240" pos:column="28"/></operator><name pos:line="240" pos:column="25">credentials<pos:position pos:line="240" pos:column="36"/></name></name><argument_list pos:line="240" pos:column="36">(<argument><expr><name><name pos:line="240" pos:column="37">AuthDigestUserRequest<pos:position pos:line="240" pos:column="58"/></name><operator pos:line="240" pos:column="58">::<pos:position pos:line="240" pos:column="60"/></operator><name pos:line="240" pos:column="60">Failed<pos:position pos:line="240" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="240" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="68"/></expr_stmt>
        <return pos:line="241" pos:column="9">return <expr><call><name pos:line="241" pos:column="16">authDigestLogUsername<pos:position pos:line="241" pos:column="37"/></name><argument_list pos:line="241" pos:column="37">(<argument><expr><name pos:line="241" pos:column="38">username<pos:position pos:line="241" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="48">digest_request<pos:position pos:line="241" pos:column="62"/></name></expr></argument>)<pos:position pos:line="241" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="64"/></return>
    }<pos:position pos:line="242" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="244" pos:column="5">digest_request<pos:position pos:line="244" pos:column="19"/></name><operator pos:line="244" pos:column="19">-&gt;<pos:position pos:line="244" pos:column="24"/></operator><name pos:line="244" pos:column="21">nonce<pos:position pos:line="244" pos:column="26"/></name></name> <operator pos:line="244" pos:column="27">=<pos:position pos:line="244" pos:column="28"/></operator> <name pos:line="244" pos:column="29">nonce<pos:position pos:line="244" pos:column="34"/></name></expr>;<pos:position pos:line="244" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="245" pos:column="5">authDigestNonceLink<pos:position pos:line="245" pos:column="24"/></name><argument_list pos:line="245" pos:column="24">(<argument><expr><name pos:line="245" pos:column="25">nonce<pos:position pos:line="245" pos:column="30"/></name></expr></argument>)<pos:position pos:line="245" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="247" pos:column="5">/* check that we're not being hacked / the username hasn't changed */</comment>
    <if pos:line="248" pos:column="5">if <condition pos:line="248" pos:column="8">(<expr><name><name pos:line="248" pos:column="9">nonce<pos:position pos:line="248" pos:column="14"/></name><operator pos:line="248" pos:column="14">-&gt;<pos:position pos:line="248" pos:column="19"/></operator><name pos:line="248" pos:column="16">user<pos:position pos:line="248" pos:column="20"/></name></name> <operator pos:line="248" pos:column="21">&amp;&amp;<pos:position pos:line="248" pos:column="31"/></operator> <call><name pos:line="248" pos:column="24">strcmp<pos:position pos:line="248" pos:column="30"/></name><argument_list pos:line="248" pos:column="30">(<argument><expr><name pos:line="248" pos:column="31">username<pos:position pos:line="248" pos:column="39"/></name></expr></argument>, <argument><expr><call><name><name pos:line="248" pos:column="41">nonce<pos:position pos:line="248" pos:column="46"/></name><operator pos:line="248" pos:column="46">-&gt;<pos:position pos:line="248" pos:column="51"/></operator><name pos:line="248" pos:column="48">user<pos:position pos:line="248" pos:column="52"/></name><operator pos:line="248" pos:column="52">-&gt;<pos:position pos:line="248" pos:column="57"/></operator><name pos:line="248" pos:column="54">username<pos:position pos:line="248" pos:column="62"/></name></name><argument_list pos:line="248" pos:column="62">()<pos:position pos:line="248" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="248" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="248" pos:column="66"/></condition><then pos:line="248" pos:column="66"> <block pos:line="248" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="249" pos:column="9">debugs<pos:position pos:line="249" pos:column="15"/></name><argument_list pos:line="249" pos:column="15">(<argument><expr><literal type="number" pos:line="249" pos:column="16">29<pos:position pos:line="249" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="249" pos:column="20">2<pos:position pos:line="249" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="23">"authenticateDigestDecode: Username for the nonce does not equal the username for the request"<pos:position pos:line="249" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="249" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="119"/></expr_stmt>
        <return pos:line="250" pos:column="9">return <expr><call><name pos:line="250" pos:column="16">authDigestLogUsername<pos:position pos:line="250" pos:column="37"/></name><argument_list pos:line="250" pos:column="37">(<argument><expr><name pos:line="250" pos:column="38">username<pos:position pos:line="250" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="48">digest_request<pos:position pos:line="250" pos:column="62"/></name></expr></argument>)<pos:position pos:line="250" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="64"/></return>
    }<pos:position pos:line="251" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="253" pos:column="5">/* the method we'll check at the authenticate step as well */</comment>


    <comment type="block" pos:line="256" pos:column="5">/* we don't send or parse opaques. Ok so we're flexable ... */</comment>

    <comment type="block" pos:line="258" pos:column="5">/* find the user */</comment>
    <decl_stmt><decl><type><name pos:line="259" pos:column="5">digest_user_h<pos:position pos:line="259" pos:column="18"/></name> <modifier pos:line="259" pos:column="19">*<pos:position pos:line="259" pos:column="20"/></modifier></type><name pos:line="259" pos:column="20">digest_user<pos:position pos:line="259" pos:column="31"/></name></decl>;<pos:position pos:line="259" pos:column="32"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="261" pos:column="5">AuthUser<pos:position pos:line="261" pos:column="13"/></name> <modifier pos:line="261" pos:column="14">*<pos:position pos:line="261" pos:column="15"/></modifier></type><name pos:line="261" pos:column="15">auth_user<pos:position pos:line="261" pos:column="24"/></name></decl>;<pos:position pos:line="261" pos:column="25"/></decl_stmt>

    <if pos:line="263" pos:column="5">if <condition pos:line="263" pos:column="8">(<expr><operator pos:line="263" pos:column="9">(<pos:position pos:line="263" pos:column="10"/></operator><name pos:line="263" pos:column="10">auth_user<pos:position pos:line="263" pos:column="19"/></name> <operator pos:line="263" pos:column="20">=<pos:position pos:line="263" pos:column="21"/></operator> <call><name pos:line="263" pos:column="22">authDigestUserFindUsername<pos:position pos:line="263" pos:column="48"/></name><argument_list pos:line="263" pos:column="48">(<argument><expr><name pos:line="263" pos:column="49">username<pos:position pos:line="263" pos:column="57"/></name></expr></argument>)<pos:position pos:line="263" pos:column="58"/></argument_list></call><operator pos:line="263" pos:column="58">)<pos:position pos:line="263" pos:column="59"/></operator> <operator pos:line="263" pos:column="60">==<pos:position pos:line="263" pos:column="62"/></operator> <name pos:line="263" pos:column="63">NULL<pos:position pos:line="263" pos:column="67"/></name></expr>)<pos:position pos:line="263" pos:column="68"/></condition><then pos:line="263" pos:column="68"> <block pos:line="263" pos:column="69">{
        <comment type="block" pos:line="264" pos:column="9">/* the user doesn't exist in the username cache yet */</comment>
        <expr_stmt><expr><call><name pos:line="265" pos:column="9">debugs<pos:position pos:line="265" pos:column="15"/></name><argument_list pos:line="265" pos:column="15">(<argument><expr><literal type="number" pos:line="265" pos:column="16">29<pos:position pos:line="265" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="265" pos:column="20">9<pos:position pos:line="265" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="23">"authDigestDecodeAuth: Creating new digest user '"<pos:position pos:line="265" pos:column="73"/></literal> <operator pos:line="265" pos:column="74">&lt;&lt;<pos:position pos:line="265" pos:column="82"/></operator> <name pos:line="265" pos:column="77">username<pos:position pos:line="265" pos:column="85"/></name> <operator pos:line="265" pos:column="86">&lt;&lt;<pos:position pos:line="265" pos:column="94"/></operator> <literal type="string" pos:line="265" pos:column="89">"'"<pos:position pos:line="265" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="265" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><name pos:line="266" pos:column="9">digest_user<pos:position pos:line="266" pos:column="20"/></name> <operator pos:line="266" pos:column="21">=<pos:position pos:line="266" pos:column="22"/></operator> <operator pos:line="266" pos:column="23">new<pos:position pos:line="266" pos:column="26"/></operator> <call><name pos:line="266" pos:column="27">DigestUser<pos:position pos:line="266" pos:column="37"/></name> <argument_list pos:line="266" pos:column="38">(<argument><expr><operator pos:line="266" pos:column="39">&amp;<pos:position pos:line="266" pos:column="44"/></operator><name pos:line="266" pos:column="40">digestConfig<pos:position pos:line="266" pos:column="52"/></name></expr></argument>)<pos:position pos:line="266" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="54"/></expr_stmt>
        <comment type="block" pos:line="267" pos:column="9">/* auth_user is a parent */</comment>
        <expr_stmt><expr><name pos:line="268" pos:column="9">auth_user<pos:position pos:line="268" pos:column="18"/></name> <operator pos:line="268" pos:column="19">=<pos:position pos:line="268" pos:column="20"/></operator> <name pos:line="268" pos:column="21">digest_user<pos:position pos:line="268" pos:column="32"/></name></expr>;<pos:position pos:line="268" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="269" pos:column="9">/* save the username */</comment>
        <expr_stmt><expr><call><name><name pos:line="270" pos:column="9">digest_user<pos:position pos:line="270" pos:column="20"/></name><operator pos:line="270" pos:column="20">-&gt;<pos:position pos:line="270" pos:column="25"/></operator><name pos:line="270" pos:column="22">username<pos:position pos:line="270" pos:column="30"/></name></name><argument_list pos:line="270" pos:column="30">(<argument><expr><name pos:line="270" pos:column="31">username<pos:position pos:line="270" pos:column="39"/></name></expr></argument>)<pos:position pos:line="270" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="41"/></expr_stmt>
        <comment type="block" pos:line="271" pos:column="9">/* set the user type */</comment>
        <expr_stmt><expr><name><name pos:line="272" pos:column="9">digest_user<pos:position pos:line="272" pos:column="20"/></name><operator pos:line="272" pos:column="20">-&gt;<pos:position pos:line="272" pos:column="25"/></operator><name pos:line="272" pos:column="22">auth_type<pos:position pos:line="272" pos:column="31"/></name></name> <operator pos:line="272" pos:column="32">=<pos:position pos:line="272" pos:column="33"/></operator> <name pos:line="272" pos:column="34">AUTH_DIGEST<pos:position pos:line="272" pos:column="45"/></name></expr>;<pos:position pos:line="272" pos:column="46"/></expr_stmt>
        <comment type="block" pos:line="273" pos:column="9">/* this auth_user struct is the one to get added to the
         * username cache */</comment>
        <comment type="block" pos:line="275" pos:column="9">/* store user in hash's */</comment>
        <expr_stmt><expr><call><name><name pos:line="276" pos:column="9">digest_user<pos:position pos:line="276" pos:column="20"/></name><operator pos:line="276" pos:column="20">-&gt;<pos:position pos:line="276" pos:column="25"/></operator><name pos:line="276" pos:column="22">addToNameCache<pos:position pos:line="276" pos:column="36"/></name></name><argument_list pos:line="276" pos:column="36">()<pos:position pos:line="276" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="276" pos:column="39"/></expr_stmt>

        <comment type="block" pos:line="278" pos:column="9">/*
         * Add the digest to the user so we can tell if a hacking
         * or spoofing attack is taking place. We do this by assuming
         * the user agent won't change user name without warning.
         */</comment>
        <expr_stmt><expr><call><name pos:line="283" pos:column="9">authDigestUserLinkNonce<pos:position pos:line="283" pos:column="32"/></name><argument_list pos:line="283" pos:column="32">(<argument><expr><name pos:line="283" pos:column="33">digest_user<pos:position pos:line="283" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="46">nonce<pos:position pos:line="283" pos:column="51"/></name></expr></argument>)<pos:position pos:line="283" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="284" pos:column="6"/></block></then> <else pos:line="284" pos:column="7">else <block pos:line="284" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="285" pos:column="9">debugs<pos:position pos:line="285" pos:column="15"/></name><argument_list pos:line="285" pos:column="15">(<argument><expr><literal type="number" pos:line="285" pos:column="16">29<pos:position pos:line="285" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="285" pos:column="20">9<pos:position pos:line="285" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="285" pos:column="23">"authDigestDecodeAuth: Found user '"<pos:position pos:line="285" pos:column="59"/></literal> <operator pos:line="285" pos:column="60">&lt;&lt;<pos:position pos:line="285" pos:column="68"/></operator> <name pos:line="285" pos:column="63">username<pos:position pos:line="285" pos:column="71"/></name> <operator pos:line="285" pos:column="72">&lt;&lt;<pos:position pos:line="285" pos:column="80"/></operator> <literal type="string" pos:line="285" pos:column="75">"' in the user cache as '"<pos:position pos:line="285" pos:column="101"/></literal> <operator pos:line="285" pos:column="102">&lt;&lt;<pos:position pos:line="285" pos:column="110"/></operator> <name pos:line="285" pos:column="105">auth_user<pos:position pos:line="285" pos:column="114"/></name> <operator pos:line="285" pos:column="115">&lt;&lt;<pos:position pos:line="285" pos:column="123"/></operator> <literal type="string" pos:line="285" pos:column="118">"'"<pos:position pos:line="285" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="123"/></expr_stmt>
        <expr_stmt><expr><name pos:line="286" pos:column="9">digest_user<pos:position pos:line="286" pos:column="20"/></name> <operator pos:line="286" pos:column="21">=<pos:position pos:line="286" pos:column="22"/></operator> <cast type="static" pos:line="286" pos:column="23">static_cast <argument_list type="generic" pos:line="286" pos:column="35">&lt; <argument><expr><name pos:line="286" pos:column="37">digest_user_h<pos:position pos:line="286" pos:column="50"/></name> <operator pos:line="286" pos:column="51">*<pos:position pos:line="286" pos:column="52"/></operator></expr></argument> &gt;<pos:position pos:line="286" pos:column="57"/></argument_list><argument_list pos:line="286" pos:column="54">(<argument><expr><name pos:line="286" pos:column="55">auth_user<pos:position pos:line="286" pos:column="64"/></name></expr></argument>)<pos:position pos:line="286" pos:column="65"/></argument_list></cast></expr>;<pos:position pos:line="286" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="287" pos:column="9">xfree<pos:position pos:line="287" pos:column="14"/></name><argument_list pos:line="287" pos:column="14">(<argument><expr><name pos:line="287" pos:column="15">username<pos:position pos:line="287" pos:column="23"/></name></expr></argument>)<pos:position pos:line="287" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="288" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="290" pos:column="5">/*link the request and the user */</comment>
    <expr_stmt><expr><call><name pos:line="291" pos:column="5">assert<pos:position pos:line="291" pos:column="11"/></name><argument_list pos:line="291" pos:column="11">(<argument><expr><name pos:line="291" pos:column="12">digest_request<pos:position pos:line="291" pos:column="26"/></name> <operator pos:line="291" pos:column="27">!=<pos:position pos:line="291" pos:column="29"/></operator> <name pos:line="291" pos:column="30">NULL<pos:position pos:line="291" pos:column="34"/></name></expr></argument>)<pos:position pos:line="291" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="293" pos:column="5">digest_request<pos:position pos:line="293" pos:column="19"/></name><operator pos:line="293" pos:column="19">-&gt;<pos:position pos:line="293" pos:column="24"/></operator><name pos:line="293" pos:column="21">user<pos:position pos:line="293" pos:column="25"/></name></name><argument_list pos:line="293" pos:column="25">(<argument><expr><name pos:line="293" pos:column="26">digest_user<pos:position pos:line="293" pos:column="37"/></name></expr></argument>)<pos:position pos:line="293" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="295" pos:column="5">digest_user<pos:position pos:line="295" pos:column="16"/></name><operator pos:line="295" pos:column="16">-&gt;<pos:position pos:line="295" pos:column="21"/></operator><name pos:line="295" pos:column="18">addRequest<pos:position pos:line="295" pos:column="28"/></name></name> <argument_list pos:line="295" pos:column="29">(<argument><expr><name pos:line="295" pos:column="30">digest_request<pos:position pos:line="295" pos:column="44"/></name></expr></argument>)<pos:position pos:line="295" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="295" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="297" pos:column="5">debugs<pos:position pos:line="297" pos:column="11"/></name><argument_list pos:line="297" pos:column="11">(<argument><expr><literal type="number" pos:line="297" pos:column="12">29<pos:position pos:line="297" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="297" pos:column="16">9<pos:position pos:line="297" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="19">"username = '"<pos:position pos:line="297" pos:column="33"/></literal> <operator pos:line="297" pos:column="34">&lt;&lt;<pos:position pos:line="297" pos:column="42"/></operator> <call><name><name pos:line="297" pos:column="37">digest_user<pos:position pos:line="297" pos:column="48"/></name><operator pos:line="297" pos:column="48">-&gt;<pos:position pos:line="297" pos:column="53"/></operator><name pos:line="297" pos:column="50">username<pos:position pos:line="297" pos:column="58"/></name></name><argument_list pos:line="297" pos:column="58">()<pos:position pos:line="297" pos:column="60"/></argument_list></call> <operator pos:line="297" pos:column="61">&lt;&lt;<pos:position pos:line="297" pos:column="69"/></operator> <literal type="string" pos:line="297" pos:column="64">"'\nrealm = '"<pos:position pos:line="297" pos:column="78"/></literal> <operator pos:line="297" pos:column="79">&lt;&lt;<pos:position pos:line="297" pos:column="87"/></operator>
           <name><name pos:line="298" pos:column="12">digest_request<pos:position pos:line="298" pos:column="26"/></name><operator pos:line="298" pos:column="26">-&gt;<pos:position pos:line="298" pos:column="31"/></operator><name pos:line="298" pos:column="28">realm<pos:position pos:line="298" pos:column="33"/></name></name> <operator pos:line="298" pos:column="34">&lt;&lt;<pos:position pos:line="298" pos:column="42"/></operator> <literal type="string" pos:line="298" pos:column="37">"'\nqop = '"<pos:position pos:line="298" pos:column="49"/></literal> <operator pos:line="298" pos:column="50">&lt;&lt;<pos:position pos:line="298" pos:column="58"/></operator> <name><name pos:line="298" pos:column="53">digest_request<pos:position pos:line="298" pos:column="67"/></name><operator pos:line="298" pos:column="67">-&gt;<pos:position pos:line="298" pos:column="72"/></operator><name pos:line="298" pos:column="69">qop<pos:position pos:line="298" pos:column="72"/></name></name> <operator pos:line="298" pos:column="73">&lt;&lt;<pos:position pos:line="298" pos:column="81"/></operator>
           <literal type="string" pos:line="299" pos:column="12">"'\nalgorithm = '"<pos:position pos:line="299" pos:column="30"/></literal> <operator pos:line="299" pos:column="31">&lt;&lt;<pos:position pos:line="299" pos:column="39"/></operator> <name><name pos:line="299" pos:column="34">digest_request<pos:position pos:line="299" pos:column="48"/></name><operator pos:line="299" pos:column="48">-&gt;<pos:position pos:line="299" pos:column="53"/></operator><name pos:line="299" pos:column="50">algorithm<pos:position pos:line="299" pos:column="59"/></name></name> <operator pos:line="299" pos:column="60">&lt;&lt;<pos:position pos:line="299" pos:column="68"/></operator> <literal type="string" pos:line="299" pos:column="63">"'\nuri = '"<pos:position pos:line="299" pos:column="75"/></literal> <operator pos:line="299" pos:column="76">&lt;&lt;<pos:position pos:line="299" pos:column="84"/></operator>
           <name><name pos:line="300" pos:column="12">digest_request<pos:position pos:line="300" pos:column="26"/></name><operator pos:line="300" pos:column="26">-&gt;<pos:position pos:line="300" pos:column="31"/></operator><name pos:line="300" pos:column="28">uri<pos:position pos:line="300" pos:column="31"/></name></name> <operator pos:line="300" pos:column="32">&lt;&lt;<pos:position pos:line="300" pos:column="40"/></operator> <literal type="string" pos:line="300" pos:column="35">"'\nnonce = '"<pos:position pos:line="300" pos:column="49"/></literal> <operator pos:line="300" pos:column="50">&lt;&lt;<pos:position pos:line="300" pos:column="58"/></operator> <name><name pos:line="300" pos:column="53">digest_request<pos:position pos:line="300" pos:column="67"/></name><operator pos:line="300" pos:column="67">-&gt;<pos:position pos:line="300" pos:column="72"/></operator><name pos:line="300" pos:column="69">nonceb64<pos:position pos:line="300" pos:column="77"/></name></name> <operator pos:line="300" pos:column="78">&lt;&lt;<pos:position pos:line="300" pos:column="86"/></operator>
           <literal type="string" pos:line="301" pos:column="12">"'\nnc = '"<pos:position pos:line="301" pos:column="23"/></literal> <operator pos:line="301" pos:column="24">&lt;&lt;<pos:position pos:line="301" pos:column="32"/></operator> <name><name pos:line="301" pos:column="27">digest_request<pos:position pos:line="301" pos:column="41"/></name><operator pos:line="301" pos:column="41">-&gt;<pos:position pos:line="301" pos:column="46"/></operator><name pos:line="301" pos:column="43">nc<pos:position pos:line="301" pos:column="45"/></name></name> <operator pos:line="301" pos:column="46">&lt;&lt;<pos:position pos:line="301" pos:column="54"/></operator> <literal type="string" pos:line="301" pos:column="49">"'\ncnonce = '"<pos:position pos:line="301" pos:column="64"/></literal> <operator pos:line="301" pos:column="65">&lt;&lt;<pos:position pos:line="301" pos:column="73"/></operator>
           <name><name pos:line="302" pos:column="12">digest_request<pos:position pos:line="302" pos:column="26"/></name><operator pos:line="302" pos:column="26">-&gt;<pos:position pos:line="302" pos:column="31"/></operator><name pos:line="302" pos:column="28">cnonce<pos:position pos:line="302" pos:column="34"/></name></name> <operator pos:line="302" pos:column="35">&lt;&lt;<pos:position pos:line="302" pos:column="43"/></operator> <literal type="string" pos:line="302" pos:column="38">"'\nresponse = '"<pos:position pos:line="302" pos:column="55"/></literal> <operator pos:line="302" pos:column="56">&lt;&lt;<pos:position pos:line="302" pos:column="64"/></operator>
           <name><name pos:line="303" pos:column="12">digest_request<pos:position pos:line="303" pos:column="26"/></name><operator pos:line="303" pos:column="26">-&gt;<pos:position pos:line="303" pos:column="31"/></operator><name pos:line="303" pos:column="28">response<pos:position pos:line="303" pos:column="36"/></name></name> <operator pos:line="303" pos:column="37">&lt;&lt;<pos:position pos:line="303" pos:column="45"/></operator> <literal type="string" pos:line="303" pos:column="40">"'\ndigestnonce = '"<pos:position pos:line="303" pos:column="60"/></literal> <operator pos:line="303" pos:column="61">&lt;&lt;<pos:position pos:line="303" pos:column="69"/></operator> <name pos:line="303" pos:column="64">nonce<pos:position pos:line="303" pos:column="69"/></name> <operator pos:line="303" pos:column="70">&lt;&lt;<pos:position pos:line="303" pos:column="78"/></operator> <literal type="string" pos:line="303" pos:column="73">"'"<pos:position pos:line="303" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="303" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="78"/></expr_stmt>

    <return pos:line="305" pos:column="5">return <expr><name pos:line="305" pos:column="12">digest_request<pos:position pos:line="305" pos:column="26"/></name></expr>;<pos:position pos:line="305" pos:column="27"/></return>
}<pos:position pos:line="306" pos:column="2"/></block></function></unit>

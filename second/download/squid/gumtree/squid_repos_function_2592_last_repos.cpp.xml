<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2592_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">cache_key<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name pos:line="2" pos:column="1">storeKeyPublicByRequestMethod<pos:position pos:line="2" pos:column="30"/></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">HttpRequest<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="45">request<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name pos:line="2" pos:column="60">HttpRequestMethod<pos:position pos:line="2" pos:column="77"/></name><modifier pos:line="2" pos:column="77">&amp;<pos:position pos:line="2" pos:column="82"/></modifier></type> <name pos:line="2" pos:column="79">method<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="87">const<pos:position pos:line="2" pos:column="92"/></specifier> <name pos:line="2" pos:column="93">KeyScope<pos:position pos:line="2" pos:column="101"/></name></type> <name pos:line="2" pos:column="102">keyScope<pos:position pos:line="2" pos:column="110"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="111"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">cache_key<pos:position pos:line="4" pos:column="21"/></name></type> <name><name pos:line="4" pos:column="22">digest<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[<expr><name pos:line="4" pos:column="29">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="4" pos:column="52"/></name></expr>]<pos:position pos:line="4" pos:column="53"/></index></name></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">m<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">unsigned<pos:position pos:line="5" pos:column="32"/></name> <name pos:line="5" pos:column="33">char<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator> <call><name><name pos:line="5" pos:column="39">method<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">id<pos:position pos:line="5" pos:column="48"/></name></name><argument_list pos:line="5" pos:column="48">()<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">SBuf<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">url<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><call><name><name pos:line="6" pos:column="22">request<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">storeId<pos:position pos:line="6" pos:column="38"/></name></name><argument_list pos:line="6" pos:column="38">()<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt> <comment type="block" pos:line="6" pos:column="42">/* returns the right storeID\URL for the MD5 calc */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SquidMD5_CTX<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">M<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">SquidMD5Init<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><operator pos:line="8" pos:column="18">&amp;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="19">M<pos:position pos:line="8" pos:column="20"/></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">SquidMD5Update<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><operator pos:line="9" pos:column="20">&amp;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="21">M<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="24">&amp;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="25">m<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="28">sizeof<argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">m<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">SquidMD5Update<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="21">M<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">unsigned<pos:position pos:line="10" pos:column="33"/></name> <name pos:line="10" pos:column="34">char<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">*<pos:position pos:line="10" pos:column="40"/></operator><operator pos:line="10" pos:column="40">)<pos:position pos:line="10" pos:column="41"/></operator> <call><name><name pos:line="10" pos:column="42">url<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">.<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="46">rawContent<pos:position pos:line="10" pos:column="56"/></name></name><argument_list pos:line="10" pos:column="56">()<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="10" pos:column="60">url<pos:position pos:line="10" pos:column="63"/></name><operator pos:line="10" pos:column="63">.<pos:position pos:line="10" pos:column="64"/></operator><name pos:line="10" pos:column="64">length<pos:position pos:line="10" pos:column="70"/></name></name><argument_list pos:line="10" pos:column="70">()<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="74"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">keyScope<pos:position pos:line="11" pos:column="17"/></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">SquidMD5Update<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="25">M<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="28">&amp;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="29">keyScope<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="39">sizeof<argument_list pos:line="12" pos:column="45">(<argument><expr><name pos:line="12" pos:column="46">keyScope<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name><name pos:line="14" pos:column="10">request<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">vary_headers<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">isEmpty<pos:position pos:line="14" pos:column="39"/></name></name><argument_list pos:line="14" pos:column="39">()<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">SquidMD5Update<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><operator pos:line="15" pos:column="24">&amp;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="25">M<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="28">request<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">vary_headers<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">.<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="50">rawContent<pos:position pos:line="15" pos:column="60"/></name></name><argument_list pos:line="15" pos:column="60">()<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="64">request<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">-&gt;<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="73">vary_headers<pos:position pos:line="15" pos:column="85"/></name><operator pos:line="15" pos:column="85">.<pos:position pos:line="15" pos:column="86"/></operator><name pos:line="15" pos:column="86">length<pos:position pos:line="15" pos:column="92"/></name></name><argument_list pos:line="15" pos:column="92">()<pos:position pos:line="15" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">20<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">3<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"updating public key by vary headers: "<pos:position pos:line="16" pos:column="62"/></literal> <operator pos:line="16" pos:column="63">&lt;&lt;<pos:position pos:line="16" pos:column="71"/></operator> <name><name pos:line="16" pos:column="66">request<pos:position pos:line="16" pos:column="73"/></name><operator pos:line="16" pos:column="73">-&gt;<pos:position pos:line="16" pos:column="78"/></operator><name pos:line="16" pos:column="75">vary_headers<pos:position pos:line="16" pos:column="87"/></name></name> <operator pos:line="16" pos:column="88">&lt;&lt;<pos:position pos:line="16" pos:column="96"/></operator> <literal type="string" pos:line="16" pos:column="91">" for: "<pos:position pos:line="16" pos:column="99"/></literal> <operator pos:line="16" pos:column="100">&lt;&lt;<pos:position pos:line="16" pos:column="108"/></operator> <name pos:line="16" pos:column="103">url<pos:position pos:line="16" pos:column="106"/></name></expr></argument>)<pos:position pos:line="16" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="108"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">SquidMD5Final<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">digest<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="27">&amp;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="28">M<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">digest<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

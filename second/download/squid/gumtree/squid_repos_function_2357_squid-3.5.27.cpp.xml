<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2357_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">checkRetriable<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Optimize: A compliant proxy may retry PUTs, but Squid lacks the [rather</comment>
    <comment type="line" pos:line="5" pos:column="5">// complicated] code required to protect the PUT request body from being</comment>
    <comment type="line" pos:line="6" pos:column="5">// nibbled during the first try. Thus, Squid cannot retry some PUTs today.</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">request<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">body_pipe<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">!=<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">NULL<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// RFC2616 9.1 Safe and Idempotent Methods</comment>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><call><name><name pos:line="11" pos:column="13">request<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">method<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">.<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">isHttpSafe<pos:position pos:line="11" pos:column="39"/></name></name><argument_list pos:line="11" pos:column="39">()<pos:position pos:line="11" pos:column="41"/></argument_list></call> <operator pos:line="11" pos:column="42">||<pos:position pos:line="11" pos:column="44"/></operator> <call><name><name pos:line="11" pos:column="45">request<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-&gt;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="54">method<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">.<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">isIdempotent<pos:position pos:line="11" pos:column="73"/></name></name><argument_list pos:line="11" pos:column="73">()<pos:position pos:line="11" pos:column="75"/></argument_list></call><operator pos:line="11" pos:column="75">)<pos:position pos:line="11" pos:column="76"/></operator></expr>;<pos:position pos:line="11" pos:column="77"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7849_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">debug<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><specifier pos:line="2" pos:column="7">const<pos:position pos:line="2" pos:column="12"/></specifier> <name pos:line="2" pos:column="13">char<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">format<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>,<parameter><decl><type><modifier pos:line="2" pos:column="26">...<pos:position pos:line="2" pos:column="29"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">debug_enabled<pos:position pos:line="4" pos:column="23"/></name></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">va_list<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">args<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">va_start<pos:position pos:line="7" pos:column="13"/></name> <argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">args<pos:position pos:line="7" pos:column="19"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="20">format<pos:position pos:line="7" pos:column="26"/></name></expr></argument>)<pos:position pos:line="7" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">vfprintf<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">stderr<pos:position pos:line="8" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="21">format<pos:position pos:line="8" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="28">args<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">va_end<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">args<pos:position pos:line="9" pos:column="16"/></name></expr></argument>)<pos:position pos:line="9" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3678_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientListenerConnectionOpened<pos:position pos:line="2" pos:column="31"/></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name><name pos:line="2" pos:column="32">AnyP<pos:position pos:line="2" pos:column="36"/></name><operator pos:line="2" pos:column="36">::<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="38">PortCfgPointer<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="54">s<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name><name pos:line="2" pos:column="63">Ipc<pos:position pos:line="2" pos:column="66"/></name><operator pos:line="2" pos:column="66">::<pos:position pos:line="2" pos:column="68"/></operator><name pos:line="2" pos:column="68">FdNoteId<pos:position pos:line="2" pos:column="76"/></name></name></type> <name pos:line="2" pos:column="77">portTypeNote<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="91">const<pos:position pos:line="2" pos:column="96"/></specifier> <name><name pos:line="2" pos:column="97">Subscription<pos:position pos:line="2" pos:column="109"/></name><operator pos:line="2" pos:column="109">::<pos:position pos:line="2" pos:column="111"/></operator><name pos:line="2" pos:column="111">Pointer<pos:position pos:line="2" pos:column="118"/></name></name> <modifier pos:line="2" pos:column="119">&amp;<pos:position pos:line="2" pos:column="124"/></modifier></type><name pos:line="2" pos:column="120">sub<pos:position pos:line="2" pos:column="123"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="124"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">s<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">!=<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></argument>)<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">OpenedHttpSocket<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><name pos:line="6" pos:column="27">s<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">listenConn<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">portTypeNote<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="56"/></condition><then pos:line="6" pos:column="56">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Must<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><call><name><name pos:line="9" pos:column="10">Comm<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">IsConnOpen<pos:position pos:line="9" pos:column="26"/></name></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name><name pos:line="9" pos:column="27">s<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">listenConn<pos:position pos:line="9" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>

    <comment type="line" pos:line="11" pos:column="5">// TCP: setup a job to handle accept() with subscribed handler</comment>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">AsyncJob<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">::<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">Start<pos:position pos:line="12" pos:column="20"/></name></name><argument_list pos:line="12" pos:column="20">(<argument><expr><operator pos:line="12" pos:column="21">new<pos:position pos:line="12" pos:column="24"/></operator> <call><name><name pos:line="12" pos:column="25">Comm<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">::<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">TcpAcceptor<pos:position pos:line="12" pos:column="42"/></name></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">s<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="46">FdNote<pos:position pos:line="12" pos:column="52"/></name><argument_list pos:line="12" pos:column="52">(<argument><expr><name pos:line="12" pos:column="53">portTypeNote<pos:position pos:line="12" pos:column="65"/></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="68">sub<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">1<pos:position pos:line="14" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="15">DBG_IMPORTANT<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"Accepting "<pos:position pos:line="14" pos:column="42"/></literal> <operator pos:line="14" pos:column="43">&lt;&lt;<pos:position pos:line="14" pos:column="51"/></operator>
           <operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="15" pos:column="13">s<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">flags<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">natIntercept<pos:position pos:line="15" pos:column="34"/></name></name></expr> ?<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <expr><literal type="string" pos:line="15" pos:column="37">"NAT intercepted "<pos:position pos:line="15" pos:column="55"/></literal></expr> <pos:position pos:line="15" pos:column="56"/></then><else pos:line="15" pos:column="56">: <expr><literal type="string" pos:line="15" pos:column="58">""<pos:position pos:line="15" pos:column="60"/></literal></expr></else></ternary><operator pos:line="15" pos:column="60">)<pos:position pos:line="15" pos:column="61"/></operator> <operator pos:line="15" pos:column="62">&lt;&lt;<pos:position pos:line="15" pos:column="70"/></operator>
           <operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="16" pos:column="13">s<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">flags<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">tproxyIntercept<pos:position pos:line="16" pos:column="37"/></name></name></expr> ?<pos:position pos:line="16" pos:column="39"/></condition><then pos:line="16" pos:column="39"> <expr><literal type="string" pos:line="16" pos:column="40">"TPROXY intercepted "<pos:position pos:line="16" pos:column="61"/></literal></expr> <pos:position pos:line="16" pos:column="62"/></then><else pos:line="16" pos:column="62">: <expr><literal type="string" pos:line="16" pos:column="64">""<pos:position pos:line="16" pos:column="66"/></literal></expr></else></ternary><operator pos:line="16" pos:column="66">)<pos:position pos:line="16" pos:column="67"/></operator> <operator pos:line="16" pos:column="68">&lt;&lt;<pos:position pos:line="16" pos:column="76"/></operator>
           <operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="17" pos:column="13">s<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">flags<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">tunnelSslBumping<pos:position pos:line="17" pos:column="38"/></name></name></expr> ?<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40"> <expr><literal type="string" pos:line="17" pos:column="41">"SSL bumped "<pos:position pos:line="17" pos:column="54"/></literal></expr> <pos:position pos:line="17" pos:column="55"/></then><else pos:line="17" pos:column="55">: <expr><literal type="string" pos:line="17" pos:column="57">""<pos:position pos:line="17" pos:column="59"/></literal></expr></else></ternary><operator pos:line="17" pos:column="59">)<pos:position pos:line="17" pos:column="60"/></operator> <operator pos:line="17" pos:column="61">&lt;&lt;<pos:position pos:line="17" pos:column="69"/></operator>
           <operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">flags<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">.<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">accelSurrogate<pos:position pos:line="18" pos:column="36"/></name></name></expr> ?<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <expr><literal type="string" pos:line="18" pos:column="39">"reverse-proxy "<pos:position pos:line="18" pos:column="55"/></literal></expr> <pos:position pos:line="18" pos:column="56"/></then><else pos:line="18" pos:column="56">: <expr><literal type="string" pos:line="18" pos:column="58">""<pos:position pos:line="18" pos:column="60"/></literal></expr></else></ternary><operator pos:line="18" pos:column="60">)<pos:position pos:line="18" pos:column="61"/></operator>
           <operator pos:line="19" pos:column="12">&lt;&lt;<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="15">FdNote<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">portTypeNote<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call> <operator pos:line="19" pos:column="36">&lt;&lt;<pos:position pos:line="19" pos:column="44"/></operator> <literal type="string" pos:line="19" pos:column="39">" connections at "<pos:position pos:line="19" pos:column="57"/></literal>
           <operator pos:line="20" pos:column="12">&lt;&lt;<pos:position pos:line="20" pos:column="20"/></operator> <name><name pos:line="20" pos:column="15">s<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">listenConn<pos:position pos:line="20" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">Must<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><call><name pos:line="22" pos:column="10">AddOpenedHttpSocket<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name><name pos:line="22" pos:column="30">s<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">listenConn<pos:position pos:line="22" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt> <comment type="line" pos:line="22" pos:column="47">// otherwise, we have received a fd we did not ask for</comment>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

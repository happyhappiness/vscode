<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7465_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Security<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">ContextPointer<pos:position pos:line="1" pos:column="25"/></name></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerOptions<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">createBlankContext<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">()<pos:position pos:line="2" pos:column="44"/></parameter_list> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Security<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">ContextPointer<pos:position pos:line="4" pos:column="29"/></name></name></type> <name pos:line="4" pos:column="30">ctx<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_OPENSSL<pos:position pos:line="5" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">Ssl<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">::<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">Initialize<pos:position pos:line="6" pos:column="20"/></name></name><argument_list pos:line="6" pos:column="20">()<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HAVE_OPENSSL_TLS_CLIENT_METHOD<pos:position pos:line="8" pos:column="35"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">SSL_CTX<pos:position pos:line="9" pos:column="12"/></name> <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">t<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><call><name pos:line="9" pos:column="18">SSL_CTX_new<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><call><name pos:line="9" pos:column="30">TLS_client_method<pos:position pos:line="9" pos:column="47"/></name><argument_list pos:line="9" pos:column="47">()<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">SSL_CTX<pos:position pos:line="11" pos:column="12"/></name> <modifier pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></modifier></type><name pos:line="11" pos:column="14">t<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><call><name pos:line="11" pos:column="18">SSL_CTX_new<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><call><name pos:line="11" pos:column="30">SSLv23_client_method<pos:position pos:line="11" pos:column="50"/></name><argument_list pos:line="11" pos:column="50">()<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="54"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">t<pos:position pos:line="13" pos:column="11"/></name></expr>)<pos:position pos:line="13" pos:column="12"/></condition><then pos:line="13" pos:column="12"> <block pos:line="13" pos:column="13">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <specifier pos:line="14" pos:column="15">auto<pos:position pos:line="14" pos:column="19"/></specifier></type> <name pos:line="14" pos:column="20">x<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><call><name pos:line="14" pos:column="24">ERR_get_error<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">()<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">fatalf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"Failed to allocate TLS client context: %s\n"<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="63">Security<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">::<pos:position pos:line="15" pos:column="73"/></operator><name pos:line="15" pos:column="73">ErrorString<pos:position pos:line="15" pos:column="84"/></name></name><argument_list pos:line="15" pos:column="84">(<argument><expr><name pos:line="15" pos:column="85">x<pos:position pos:line="15" pos:column="86"/></name></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">ctx<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">=<pos:position pos:line="17" pos:column="10"/></operator> <call><name pos:line="17" pos:column="11">convertContextFromRawPtr<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">t<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>

<cpp:elif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">elif<pos:position pos:line="19" pos:column="6"/></cpp:directive> <expr><name pos:line="19" pos:column="7">USE_GNUTLS<pos:position pos:line="19" pos:column="17"/></name></expr></cpp:elif>
    <comment type="line" pos:line="20" pos:column="5">// Initialize for X.509 certificate exchange</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">gnutls_certificate_credentials_t<pos:position pos:line="21" pos:column="37"/></name></type> <name pos:line="21" pos:column="38">t<pos:position pos:line="21" pos:column="39"/></name></decl>;<pos:position pos:line="21" pos:column="40"/></decl_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<decl><type><specifier pos:line="22" pos:column="9">const<pos:position pos:line="22" pos:column="14"/></specifier> <name pos:line="22" pos:column="15">int<pos:position pos:line="22" pos:column="18"/></name></type> <name pos:line="22" pos:column="19">x<pos:position pos:line="22" pos:column="20"/></name> <init pos:line="22" pos:column="21">= <expr><call><name pos:line="22" pos:column="23">gnutls_certificate_allocate_credentials<pos:position pos:line="22" pos:column="62"/></name><argument_list pos:line="22" pos:column="62">(<argument><expr><operator pos:line="22" pos:column="63">&amp;<pos:position pos:line="22" pos:column="68"/></operator><name pos:line="22" pos:column="64">t<pos:position pos:line="22" pos:column="65"/></name></expr></argument>)<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr></init></decl>)<pos:position pos:line="22" pos:column="67"/></condition><then pos:line="22" pos:column="67"> <block pos:line="22" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">fatalf<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="string" pos:line="23" pos:column="16">"Failed to allocate TLS client context: %s\n"<pos:position pos:line="23" pos:column="61"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="63">Security<pos:position pos:line="23" pos:column="71"/></name><operator pos:line="23" pos:column="71">::<pos:position pos:line="23" pos:column="73"/></operator><name pos:line="23" pos:column="73">ErrorString<pos:position pos:line="23" pos:column="84"/></name></name><argument_list pos:line="23" pos:column="84">(<argument><expr><name pos:line="23" pos:column="85">x<pos:position pos:line="23" pos:column="86"/></name></expr></argument>)<pos:position pos:line="23" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">ctx<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">convertContextFromRawPtr<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">t<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>

<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">debugs<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="number" pos:line="28" pos:column="12">83<pos:position pos:line="28" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="19">"WARNING: Failed to allocate TLS client context: No TLS library"<pos:position pos:line="28" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="85"/></expr_stmt>

<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="32" pos:column="5">return <expr><name pos:line="32" pos:column="12">ctx<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

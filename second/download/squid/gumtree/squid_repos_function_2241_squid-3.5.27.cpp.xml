<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2241_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">file_write<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">fd<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="3" pos:column="12">off_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">file_offset<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="4" pos:column="12">void<pos:position pos:line="4" pos:column="16"/></name> <specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">ptr_to_buf<pos:position pos:line="4" pos:column="34"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">len<pos:position pos:line="5" pos:column="19"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="6" pos:column="12">DWCB<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type> <name pos:line="6" pos:column="19">handle<pos:position pos:line="6" pos:column="25"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="7" pos:column="12">void<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">handle_data<pos:position pos:line="7" pos:column="29"/></name></decl></parameter>,
           <parameter><decl><type><name pos:line="8" pos:column="12">FREE<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type> <name pos:line="8" pos:column="19">free_func<pos:position pos:line="8" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="29"/></parameter_list>
<block pos:line="9" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">dwrite_q<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">wq<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">fde<pos:position pos:line="11" pos:column="8"/></name> <modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">F<pos:position pos:line="11" pos:column="11"/></name> <init pos:line="11" pos:column="12">= <expr><operator pos:line="11" pos:column="14">&amp;<pos:position pos:line="11" pos:column="19"/></operator><name><name pos:line="11" pos:column="15">fd_table<pos:position pos:line="11" pos:column="23"/></name><index pos:line="11" pos:column="23">[<expr><name pos:line="11" pos:column="24">fd<pos:position pos:line="11" pos:column="26"/></name></expr>]<pos:position pos:line="11" pos:column="27"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">PROF_start<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">file_write<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">fd<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&gt;=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">F<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">flags<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">open<pos:position pos:line="14" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* if we got here. Caller is eligible to write. */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">wq<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">dwrite_q<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></operator><operator pos:line="16" pos:column="21">)<pos:position pos:line="16" pos:column="22"/></operator><call><name pos:line="16" pos:column="22">memAllocate<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">MEM_DWRITE_Q<pos:position pos:line="16" pos:column="46"/></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">wq<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">file_offset<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">file_offset<pos:position pos:line="17" pos:column="34"/></name></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">wq<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">buf<pos:position pos:line="18" pos:column="12"/></name></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">char<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><operator pos:line="18" pos:column="22">)<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">ptr_to_buf<pos:position pos:line="18" pos:column="33"/></name></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">wq<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">len<pos:position pos:line="19" pos:column="12"/></name></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">len<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">wq<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">-&gt;<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="9">buf_offset<pos:position pos:line="20" pos:column="19"/></name></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">wq<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">-&gt;<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="9">next<pos:position pos:line="21" pos:column="13"/></name></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <name pos:line="21" pos:column="16">NULL<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">wq<pos:position pos:line="22" pos:column="7"/></name><operator pos:line="22" pos:column="7">-&gt;<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="9">free_func<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <name pos:line="22" pos:column="21">free_func<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name><name pos:line="24" pos:column="10">F<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">disk<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">wrt_handle_data<pos:position pos:line="24" pos:column="33"/></name></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <block pos:line="24" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">F<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">disk<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">.<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">wrt_handle<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">=<pos:position pos:line="25" pos:column="29"/></operator> <name pos:line="25" pos:column="30">handle<pos:position pos:line="25" pos:column="36"/></name></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">F<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">disk<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">.<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">wrt_handle_data<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">=<pos:position pos:line="26" pos:column="34"/></operator> <call><name pos:line="26" pos:column="35">cbdataReference<pos:position pos:line="26" pos:column="50"/></name><argument_list pos:line="26" pos:column="50">(<argument><expr><name pos:line="26" pos:column="51">handle_data<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <comment type="block" pos:line="28" pos:column="9">/* Detect if there is multiple concurrent users of this fd.. we only support one callback */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">assert<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name><name pos:line="29" pos:column="16">F<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">disk<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">wrt_handle_data<pos:position pos:line="29" pos:column="39"/></name></name> <operator pos:line="29" pos:column="40">==<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">handle_data<pos:position pos:line="29" pos:column="54"/></name> <operator pos:line="29" pos:column="55">&amp;&amp;<pos:position pos:line="29" pos:column="65"/></operator> <name><name pos:line="29" pos:column="58">F<pos:position pos:line="29" pos:column="59"/></name><operator pos:line="29" pos:column="59">-&gt;<pos:position pos:line="29" pos:column="64"/></operator><name pos:line="29" pos:column="61">disk<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">.<pos:position pos:line="29" pos:column="66"/></operator><name pos:line="29" pos:column="66">wrt_handle<pos:position pos:line="29" pos:column="76"/></name></name> <operator pos:line="29" pos:column="77">==<pos:position pos:line="29" pos:column="79"/></operator> <name pos:line="29" pos:column="80">handle<pos:position pos:line="29" pos:column="86"/></name></expr></argument>)<pos:position pos:line="29" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="88"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="32" pos:column="5">/* add to queue */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">F<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">disk<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">write_q<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">==<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">NULL<pos:position pos:line="33" pos:column="32"/></name></expr>)<pos:position pos:line="33" pos:column="33"/></condition><then pos:line="33" pos:column="33"> <block pos:line="33" pos:column="34">{
        <comment type="block" pos:line="34" pos:column="9">/* empty queue */</comment>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">F<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">disk<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">write_q<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <name><name pos:line="35" pos:column="27">F<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">disk<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">.<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="35">write_q_tail<pos:position pos:line="35" pos:column="47"/></name></name> <operator pos:line="35" pos:column="48">=<pos:position pos:line="35" pos:column="49"/></operator> <name pos:line="35" pos:column="50">wq<pos:position pos:line="35" pos:column="52"/></name></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then> <else pos:line="36" pos:column="7">else <block pos:line="36" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">F<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">disk<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">.<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">write_q_tail<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">next<pos:position pos:line="37" pos:column="35"/></name></name> <operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator> <name pos:line="37" pos:column="38">wq<pos:position pos:line="37" pos:column="40"/></name></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">F<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">disk<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">.<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">write_q_tail<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <name pos:line="38" pos:column="32">wq<pos:position pos:line="38" pos:column="34"/></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">!<pos:position pos:line="41" pos:column="10"/></operator><name><name pos:line="41" pos:column="10">F<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">flags<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">write_daemon<pos:position pos:line="41" pos:column="31"/></name></name></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32"> <block pos:line="41" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">diskHandleWrite<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">fd<pos:position pos:line="42" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="29">NULL<pos:position pos:line="42" pos:column="33"/></name></expr></argument>)<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">PROF_stop<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">file_write<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

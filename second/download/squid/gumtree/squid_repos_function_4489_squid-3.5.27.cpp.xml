<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4489_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">remove_session_cb<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">SSL_CTX<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">SSL_SESSION<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">sessionID<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">SslSessionCache<pos:position pos:line="4" pos:column="25"/></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
        <block type="pseudo"><return pos:line="5" pos:column="9">return ;<pos:position pos:line="5" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">83<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">5<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"Request to remove corrupted or not valid SSL Session "<pos:position pos:line="7" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="76"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">pos<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">Ipc<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">::<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">MemMap<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">::<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">Slot<pos:position pos:line="9" pos:column="22"/></name></name> <specifier pos:line="9" pos:column="23">const<pos:position pos:line="9" pos:column="28"/></specifier> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier></type><name pos:line="9" pos:column="30">slot<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><call><name><name pos:line="9" pos:column="37">SslSessionCache<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">-&gt;<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="54">openForReading<pos:position pos:line="9" pos:column="68"/></name></name><argument_list pos:line="9" pos:column="68">(<argument><expr><operator pos:line="9" pos:column="69">(<pos:position pos:line="9" pos:column="70"/></operator><specifier pos:line="9" pos:column="70">const<pos:position pos:line="9" pos:column="75"/></specifier> <name pos:line="9" pos:column="76">cache_key<pos:position pos:line="9" pos:column="85"/></name><operator pos:line="9" pos:column="85">*<pos:position pos:line="9" pos:column="86"/></operator><operator pos:line="9" pos:column="86">)<pos:position pos:line="9" pos:column="87"/></operator><name pos:line="9" pos:column="87">sessionID<pos:position pos:line="9" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="98">pos<pos:position pos:line="9" pos:column="101"/></name></expr></argument>)<pos:position pos:line="9" pos:column="102"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="103"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">slot<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">NULL<pos:position pos:line="10" pos:column="21"/></name></expr>)<pos:position pos:line="10" pos:column="22"/></condition><then pos:line="10" pos:column="22">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">SslSessionCache<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">closeForReading<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">pos<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
    <comment type="line" pos:line="13" pos:column="5">// TODO:</comment>
    <comment type="line" pos:line="14" pos:column="5">// What if we are not able to remove the session?</comment>
    <comment type="line" pos:line="15" pos:column="5">// Maybe schedule a job to remove it later?</comment>
    <comment type="line" pos:line="16" pos:column="5">// For now we just have an invalid entry in cache until will be expired</comment>
    <comment type="line" pos:line="17" pos:column="5">// The openSSL will reject it when we try to use it</comment>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">SslSessionCache<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">free<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">pos<pos:position pos:line="18" pos:column="30"/></name></expr></argument>)<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

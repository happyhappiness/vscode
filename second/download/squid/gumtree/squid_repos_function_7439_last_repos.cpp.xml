<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7439_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">Extension<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">supported<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list> <specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">Extensions<pos:position pos:line="4" pos:column="28"/></name></type> <name pos:line="4" pos:column="29">supportedExtensions<pos:position pos:line="4" pos:column="48"/></name> <init pos:line="4" pos:column="49">= <expr><call><name pos:line="4" pos:column="51">SupportedExtensions<pos:position pos:line="4" pos:column="70"/></name><argument_list pos:line="4" pos:column="70">()<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="73"/></decl_stmt>
    <return pos:line="5" pos:column="5">return <expr><call><name><name pos:line="5" pos:column="12">supportedExtensions<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">find<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">(<argument><expr><name pos:line="5" pos:column="37">type<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call> <operator pos:line="5" pos:column="43">!=<pos:position pos:line="5" pos:column="45"/></operator> <call><name><name pos:line="5" pos:column="46">supportedExtensions<pos:position pos:line="5" pos:column="65"/></name><operator pos:line="5" pos:column="65">.<pos:position pos:line="5" pos:column="66"/></operator><name pos:line="5" pos:column="66">end<pos:position pos:line="5" pos:column="69"/></name></name><argument_list pos:line="5" pos:column="69">()<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="72"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4527_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeerConnector<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">handleNegotiateError<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">ret<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">fd<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><call><name pos:line="4" pos:column="20">serverConnection<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">()<pos:position pos:line="4" pos:column="38"/></argument_list></call><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">fd<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">long<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">ssl_lib_error<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">SSL_ERROR_NONE<pos:position pos:line="5" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><name><name pos:line="6" pos:column="16">fd_table<pos:position pos:line="6" pos:column="24"/></name><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">fd<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">ssl<pos:position pos:line="6" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ssl_error<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><call><name pos:line="7" pos:column="21">SSL_get_error<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">ssl<pos:position pos:line="7" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">ret<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">BIO<pos:position pos:line="8" pos:column="8"/></name> <modifier pos:line="8" pos:column="9">*<pos:position pos:line="8" pos:column="10"/></modifier></type><name pos:line="8" pos:column="10">b<pos:position pos:line="8" pos:column="11"/></name> <init pos:line="8" pos:column="12">= <expr><call><name pos:line="8" pos:column="14">SSL_get_rbio<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">ssl<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">Ssl<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">::<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">ServerBio<pos:position pos:line="9" pos:column="19"/></name></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">srvBio<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><cast type="static" pos:line="9" pos:column="30">static_cast<argument_list type="generic" pos:line="9" pos:column="41">&lt;<argument><expr><name><name pos:line="9" pos:column="42">Ssl<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">::<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="47">ServerBio<pos:position pos:line="9" pos:column="56"/></name></name> <operator pos:line="9" pos:column="57">*<pos:position pos:line="9" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="62"/></argument_list><argument_list pos:line="9" pos:column="59">(<argument><expr><name><name pos:line="9" pos:column="60">b<pos:position pos:line="9" pos:column="61"/></name><operator pos:line="9" pos:column="61">-&gt;<pos:position pos:line="9" pos:column="66"/></operator><name pos:line="9" pos:column="63">ptr<pos:position pos:line="9" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="68"/></decl_stmt>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">EPROTO<pos:position pos:line="11" pos:column="14"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">sysErrNo<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><name pos:line="12" pos:column="20">EPROTO<pos:position pos:line="12" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">sysErrNo<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><name pos:line="14" pos:column="20">EACCES<pos:position pos:line="14" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

    <switch pos:line="17" pos:column="5">switch <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ssl_error<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition> <block pos:line="17" pos:column="24">{

    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="19" pos:column="29"/></name></expr>:<pos:position pos:line="19" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">setReadTimeout<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">()<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">Comm<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">::<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">SetSelect<pos:position pos:line="21" pos:column="24"/></name></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">fd<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="29">COMM_SELECT_READ<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="48">NegotiateSsl<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="62">this<pos:position pos:line="21" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="68">0<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>

    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">SSL_ERROR_WANT_WRITE<pos:position pos:line="24" pos:column="30"/></name></expr>:<pos:position pos:line="24" pos:column="31"/></case>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><call><name><name pos:line="25" pos:column="14">srvBio<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">bumpMode<pos:position pos:line="25" pos:column="30"/></name></name><argument_list pos:line="25" pos:column="30">()<pos:position pos:line="25" pos:column="32"/></argument_list></call> <operator pos:line="25" pos:column="33">==<pos:position pos:line="25" pos:column="35"/></operator> <name><name pos:line="25" pos:column="36">Ssl<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">::<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">bumpPeek<pos:position pos:line="25" pos:column="49"/></name></name> <operator pos:line="25" pos:column="50">||<pos:position pos:line="25" pos:column="52"/></operator> <call><name><name pos:line="25" pos:column="53">srvBio<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">-&gt;<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="61">bumpMode<pos:position pos:line="25" pos:column="69"/></name></name><argument_list pos:line="25" pos:column="69">()<pos:position pos:line="25" pos:column="71"/></argument_list></call> <operator pos:line="25" pos:column="72">==<pos:position pos:line="25" pos:column="74"/></operator> <name><name pos:line="25" pos:column="75">Ssl<pos:position pos:line="25" pos:column="78"/></name><operator pos:line="25" pos:column="78">::<pos:position pos:line="25" pos:column="80"/></operator><name pos:line="25" pos:column="80">bumpStare<pos:position pos:line="25" pos:column="89"/></name></name><operator pos:line="25" pos:column="89">)<pos:position pos:line="25" pos:column="90"/></operator> <operator pos:line="25" pos:column="91">&amp;&amp;<pos:position pos:line="25" pos:column="101"/></operator> <call><name><name pos:line="25" pos:column="94">srvBio<pos:position pos:line="25" pos:column="100"/></name><operator pos:line="25" pos:column="100">-&gt;<pos:position pos:line="25" pos:column="105"/></operator><name pos:line="25" pos:column="102">holdWrite<pos:position pos:line="25" pos:column="111"/></name></name><argument_list pos:line="25" pos:column="111">()<pos:position pos:line="25" pos:column="113"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="114"/></condition><then pos:line="25" pos:column="114"> <block pos:line="25" pos:column="115">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">81<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">3<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="27">"hold write on SSL connection on FD "<pos:position pos:line="26" pos:column="64"/></literal> <operator pos:line="26" pos:column="65">&lt;&lt;<pos:position pos:line="26" pos:column="73"/></operator> <name pos:line="26" pos:column="68">fd<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">checkForPeekAndSplice<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">()<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
            <return pos:line="28" pos:column="13">return;<pos:position pos:line="28" pos:column="20"/></return>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="30" pos:column="9">Comm<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">::<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">SetSelect<pos:position pos:line="30" pos:column="24"/></name></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">fd<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="29">COMM_SELECT_WRITE<pos:position pos:line="30" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="48">&amp;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="49">NegotiateSsl<pos:position pos:line="30" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="63">this<pos:position pos:line="30" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="69">0<pos:position pos:line="30" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>

    <case pos:line="33" pos:column="5">case <expr><name pos:line="33" pos:column="10">SSL_ERROR_SSL<pos:position pos:line="33" pos:column="23"/></name></expr>:<pos:position pos:line="33" pos:column="24"/></case>
    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">SSL_ERROR_SYSCALL<pos:position pos:line="34" pos:column="27"/></name></expr>:<pos:position pos:line="34" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="35" pos:column="9">ssl_lib_error<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <call><name pos:line="35" pos:column="25">ERR_get_error<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">()<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>

        <comment type="line" pos:line="37" pos:column="9">// In Peek mode, the ClientHello message sent to the server. If the</comment>
        <comment type="line" pos:line="38" pos:column="9">// server resuming a previous (spliced) SSL session with the client,</comment>
        <comment type="line" pos:line="39" pos:column="9">// then probably we are here because local SSL object does not know</comment>
        <comment type="line" pos:line="40" pos:column="9">// anything about the session being resumed.</comment>
        <comment type="line" pos:line="41" pos:column="9">//</comment>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name><name pos:line="42" pos:column="13">srvBio<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">bumpMode<pos:position pos:line="42" pos:column="29"/></name></name><argument_list pos:line="42" pos:column="29">()<pos:position pos:line="42" pos:column="31"/></argument_list></call> <operator pos:line="42" pos:column="32">==<pos:position pos:line="42" pos:column="34"/></operator> <name><name pos:line="42" pos:column="35">Ssl<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">::<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">bumpPeek<pos:position pos:line="42" pos:column="48"/></name></name> <operator pos:line="42" pos:column="49">&amp;&amp;<pos:position pos:line="42" pos:column="59"/></operator> <operator pos:line="42" pos:column="52">(<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">resumingSession<pos:position pos:line="42" pos:column="68"/></name> <operator pos:line="42" pos:column="69">=<pos:position pos:line="42" pos:column="70"/></operator> <call><name><name pos:line="42" pos:column="71">srvBio<pos:position pos:line="42" pos:column="77"/></name><operator pos:line="42" pos:column="77">-&gt;<pos:position pos:line="42" pos:column="82"/></operator><name pos:line="42" pos:column="79">resumingSession<pos:position pos:line="42" pos:column="94"/></name></name><argument_list pos:line="42" pos:column="94">()<pos:position pos:line="42" pos:column="96"/></argument_list></call><operator pos:line="42" pos:column="96">)<pos:position pos:line="42" pos:column="97"/></operator></expr>)<pos:position pos:line="42" pos:column="98"/></condition><then pos:line="42" pos:column="98"> <block pos:line="42" pos:column="99">{
            <comment type="line" pos:line="43" pos:column="13">// we currently splice all resumed sessions unconditionally</comment>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<decl><type><specifier pos:line="44" pos:column="17">const<pos:position pos:line="44" pos:column="22"/></specifier> <name pos:line="44" pos:column="23">bool<pos:position pos:line="44" pos:column="27"/></name></type> <name pos:line="44" pos:column="28">spliceResumed<pos:position pos:line="44" pos:column="41"/></name> <init pos:line="44" pos:column="42">= <expr><literal type="boolean" pos:line="44" pos:column="44">true<pos:position pos:line="44" pos:column="48"/></literal></expr></init></decl>)<pos:position pos:line="44" pos:column="49"/></condition><then pos:line="44" pos:column="49"> <block pos:line="44" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">checkForPeekAndSpliceMatched<pos:position pos:line="45" pos:column="45"/></name><argument_list pos:line="45" pos:column="45">(<argument><expr><name><name pos:line="45" pos:column="46">Ssl<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">::<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">bumpSplice<pos:position pos:line="45" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="63"/></expr_stmt>
                <return pos:line="46" pos:column="17">return;<pos:position pos:line="46" pos:column="24"/></return>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if> <comment type="line" pos:line="47" pos:column="15">// else fall through to find a matching ssl_bump action (with limited info)</comment>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="50" pos:column="9">// If we are in peek-and-splice mode and still we did not write to</comment>
        <comment type="line" pos:line="51" pos:column="9">// server yet, try to see if we should splice.</comment>
        <comment type="line" pos:line="52" pos:column="9">// In this case the connection can be saved.</comment>
        <comment type="line" pos:line="53" pos:column="9">// If the checklist decision is do not splice a new error will</comment>
        <comment type="line" pos:line="54" pos:column="9">// occure in the next SSL_connect call, and we will fail again.</comment>
        <comment type="line" pos:line="55" pos:column="9">// Abort on certificate validation errors to avoid splicing and</comment>
        <comment type="line" pos:line="56" pos:column="9">// thus hiding them.</comment>
        <comment type="line" pos:line="57" pos:column="9">// Abort if no certificate found probably because of malformed or</comment>
        <comment type="line" pos:line="58" pos:column="9">// unsupported server Hello message (TODO: make configurable).</comment>
<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="59" pos:column="5">1<pos:position pos:line="59" pos:column="6"/></literal></expr></cpp:if>
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><operator pos:line="60" pos:column="13">!<pos:position pos:line="60" pos:column="14"/></operator><call><name pos:line="60" pos:column="14">SSL_get_ex_data<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><name pos:line="60" pos:column="30">ssl<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="35">ssl_ex_index_ssl_error_detail<pos:position pos:line="60" pos:column="64"/></name></expr></argument>)<pos:position pos:line="60" pos:column="65"/></argument_list></call> <operator pos:line="60" pos:column="66">&amp;&amp;<pos:position pos:line="60" pos:column="76"/></operator>
                <operator pos:line="61" pos:column="17">(<pos:position pos:line="61" pos:column="18"/></operator><call><name><name pos:line="61" pos:column="18">srvBio<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">-&gt;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="26">bumpMode<pos:position pos:line="61" pos:column="34"/></name></name><argument_list pos:line="61" pos:column="34">()<pos:position pos:line="61" pos:column="36"/></argument_list></call> <operator pos:line="61" pos:column="37">==<pos:position pos:line="61" pos:column="39"/></operator> <name><name pos:line="61" pos:column="40">Ssl<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">::<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="45">bumpPeek<pos:position pos:line="61" pos:column="53"/></name></name>  <operator pos:line="61" pos:column="55">||<pos:position pos:line="61" pos:column="57"/></operator> <call><name><name pos:line="61" pos:column="58">srvBio<pos:position pos:line="61" pos:column="64"/></name><operator pos:line="61" pos:column="64">-&gt;<pos:position pos:line="61" pos:column="69"/></operator><name pos:line="61" pos:column="66">bumpMode<pos:position pos:line="61" pos:column="74"/></name></name><argument_list pos:line="61" pos:column="74">()<pos:position pos:line="61" pos:column="76"/></argument_list></call> <operator pos:line="61" pos:column="77">==<pos:position pos:line="61" pos:column="79"/></operator> <name><name pos:line="61" pos:column="80">Ssl<pos:position pos:line="61" pos:column="83"/></name><operator pos:line="61" pos:column="83">::<pos:position pos:line="61" pos:column="85"/></operator><name pos:line="61" pos:column="85">bumpStare<pos:position pos:line="61" pos:column="94"/></name></name><operator pos:line="61" pos:column="94">)<pos:position pos:line="61" pos:column="95"/></operator> <operator pos:line="61" pos:column="96">&amp;&amp;<pos:position pos:line="61" pos:column="106"/></operator> <call><name><name pos:line="61" pos:column="99">srvBio<pos:position pos:line="61" pos:column="105"/></name><operator pos:line="61" pos:column="105">-&gt;<pos:position pos:line="61" pos:column="110"/></operator><name pos:line="61" pos:column="107">holdWrite<pos:position pos:line="61" pos:column="116"/></name></name><argument_list pos:line="61" pos:column="116">()<pos:position pos:line="61" pos:column="118"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="119"/></condition><then pos:line="61" pos:column="119"> <block pos:line="61" pos:column="120">{
            <decl_stmt><decl><type><name><name pos:line="62" pos:column="13">Ssl<pos:position pos:line="62" pos:column="16"/></name><operator pos:line="62" pos:column="16">::<pos:position pos:line="62" pos:column="18"/></operator><name pos:line="62" pos:column="18">X509_Pointer<pos:position pos:line="62" pos:column="30"/></name></name></type> <name pos:line="62" pos:column="31">serverCert<pos:position pos:line="62" pos:column="41"/></name><argument_list pos:line="62" pos:column="41">(<argument><expr><call><name pos:line="62" pos:column="42">SSL_get_peer_certificate<pos:position pos:line="62" pos:column="66"/></name><argument_list pos:line="62" pos:column="66">(<argument><expr><name pos:line="62" pos:column="67">ssl<pos:position pos:line="62" pos:column="70"/></name></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></decl>;<pos:position pos:line="62" pos:column="73"/></decl_stmt>
            <if pos:line="63" pos:column="13">if <condition pos:line="63" pos:column="16">(<expr><call><name><name pos:line="63" pos:column="17">serverCert<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">get<pos:position pos:line="63" pos:column="31"/></name></name><argument_list pos:line="63" pos:column="31">()<pos:position pos:line="63" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="34"/></condition><then pos:line="63" pos:column="34"> <block pos:line="63" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="64" pos:column="17">debugs<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><literal type="number" pos:line="64" pos:column="24">81<pos:position pos:line="64" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="28">3<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="31">"Error ("<pos:position pos:line="64" pos:column="40"/></literal>  <operator pos:line="64" pos:column="42">&lt;&lt;<pos:position pos:line="64" pos:column="50"/></operator> <call><name pos:line="64" pos:column="45">ERR_error_string<pos:position pos:line="64" pos:column="61"/></name><argument_list pos:line="64" pos:column="61">(<argument><expr><name pos:line="64" pos:column="62">ssl_lib_error<pos:position pos:line="64" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="77">NULL<pos:position pos:line="64" pos:column="81"/></name></expr></argument>)<pos:position pos:line="64" pos:column="82"/></argument_list></call> <operator pos:line="64" pos:column="83">&lt;&lt;<pos:position pos:line="64" pos:column="91"/></operator>  <literal type="string" pos:line="64" pos:column="87">") but, hold write on SSL connection on FD "<pos:position pos:line="64" pos:column="131"/></literal> <operator pos:line="64" pos:column="132">&lt;&lt;<pos:position pos:line="64" pos:column="140"/></operator> <name pos:line="64" pos:column="135">fd<pos:position pos:line="64" pos:column="137"/></name></expr></argument>)<pos:position pos:line="64" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="139"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">checkForPeekAndSplice<pos:position pos:line="65" pos:column="38"/></name><argument_list pos:line="65" pos:column="38">()<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
                <return pos:line="66" pos:column="17">return;<pos:position pos:line="66" pos:column="24"/></return>
            }<pos:position pos:line="67" pos:column="14"/></block></then></if>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="line" pos:line="71" pos:column="9">// store/report errno when ssl_error is SSL_ERROR_SYSCALL, ssl_lib_error is 0, and ret is -1</comment>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">ssl_error<pos:position pos:line="72" pos:column="22"/></name> <operator pos:line="72" pos:column="23">==<pos:position pos:line="72" pos:column="25"/></operator> <name pos:line="72" pos:column="26">SSL_ERROR_SYSCALL<pos:position pos:line="72" pos:column="43"/></name> <operator pos:line="72" pos:column="44">&amp;&amp;<pos:position pos:line="72" pos:column="54"/></operator> <name pos:line="72" pos:column="47">ret<pos:position pos:line="72" pos:column="50"/></name> <operator pos:line="72" pos:column="51">==<pos:position pos:line="72" pos:column="53"/></operator> <operator pos:line="72" pos:column="54">-<pos:position pos:line="72" pos:column="55"/></operator><literal type="number" pos:line="72" pos:column="55">1<pos:position pos:line="72" pos:column="56"/></literal> <operator pos:line="72" pos:column="57">&amp;&amp;<pos:position pos:line="72" pos:column="67"/></operator> <name pos:line="72" pos:column="60">ssl_lib_error<pos:position pos:line="72" pos:column="73"/></name> <operator pos:line="72" pos:column="74">==<pos:position pos:line="72" pos:column="76"/></operator> <literal type="number" pos:line="72" pos:column="77">0<pos:position pos:line="72" pos:column="78"/></literal></expr>)<pos:position pos:line="72" pos:column="79"/></condition><then pos:line="72" pos:column="79">
            <block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="13">sysErrNo<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <name pos:line="73" pos:column="24">errno<pos:position pos:line="73" pos:column="29"/></name></expr>;<pos:position pos:line="73" pos:column="30"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="75" pos:column="9">debugs<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><literal type="number" pos:line="75" pos:column="16">83<pos:position pos:line="75" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="20">DBG_IMPORTANT<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="35">"Error negotiating SSL on FD "<pos:position pos:line="75" pos:column="65"/></literal> <operator pos:line="75" pos:column="66">&lt;&lt;<pos:position pos:line="75" pos:column="74"/></operator> <name pos:line="75" pos:column="69">fd<pos:position pos:line="75" pos:column="71"/></name> <operator pos:line="75" pos:column="72">&lt;&lt;<pos:position pos:line="75" pos:column="80"/></operator>
               <literal type="string" pos:line="76" pos:column="16">": "<pos:position pos:line="76" pos:column="20"/></literal> <operator pos:line="76" pos:column="21">&lt;&lt;<pos:position pos:line="76" pos:column="29"/></operator> <call><name pos:line="76" pos:column="24">ERR_error_string<pos:position pos:line="76" pos:column="40"/></name><argument_list pos:line="76" pos:column="40">(<argument><expr><name pos:line="76" pos:column="41">ssl_lib_error<pos:position pos:line="76" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="56">NULL<pos:position pos:line="76" pos:column="60"/></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call> <operator pos:line="76" pos:column="62">&lt;&lt;<pos:position pos:line="76" pos:column="70"/></operator> <literal type="string" pos:line="76" pos:column="65">" ("<pos:position pos:line="76" pos:column="69"/></literal> <operator pos:line="76" pos:column="70">&lt;&lt;<pos:position pos:line="76" pos:column="78"/></operator>
               <name pos:line="77" pos:column="16">ssl_error<pos:position pos:line="77" pos:column="25"/></name> <operator pos:line="77" pos:column="26">&lt;&lt;<pos:position pos:line="77" pos:column="34"/></operator> <literal type="string" pos:line="77" pos:column="29">"/"<pos:position pos:line="77" pos:column="32"/></literal> <operator pos:line="77" pos:column="33">&lt;&lt;<pos:position pos:line="77" pos:column="41"/></operator> <name pos:line="77" pos:column="36">ret<pos:position pos:line="77" pos:column="39"/></name> <operator pos:line="77" pos:column="40">&lt;&lt;<pos:position pos:line="77" pos:column="48"/></operator> <literal type="string" pos:line="77" pos:column="43">"/"<pos:position pos:line="77" pos:column="46"/></literal> <operator pos:line="77" pos:column="47">&lt;&lt;<pos:position pos:line="77" pos:column="55"/></operator> <name pos:line="77" pos:column="50">errno<pos:position pos:line="77" pos:column="55"/></name> <operator pos:line="77" pos:column="56">&lt;&lt;<pos:position pos:line="77" pos:column="64"/></operator> <literal type="string" pos:line="77" pos:column="59">")"<pos:position pos:line="77" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="64"/></expr_stmt>

        <break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break> <comment type="line" pos:line="79" pos:column="16">// proceed to the general error handling code</comment>

    <default pos:line="81" pos:column="5">default:<pos:position pos:line="81" pos:column="13"/></default>
        <break pos:line="82" pos:column="9">break;<pos:position pos:line="82" pos:column="15"/></break> <comment type="line" pos:line="82" pos:column="16">// no special error handling for all other errors</comment>
    }<pos:position pos:line="83" pos:column="6"/></block></switch>

    <decl_stmt><decl><type><name pos:line="85" pos:column="5">ErrorState<pos:position pos:line="85" pos:column="15"/></name> <modifier pos:line="85" pos:column="16">*<pos:position pos:line="85" pos:column="17"/></modifier><specifier pos:line="85" pos:column="17">const<pos:position pos:line="85" pos:column="22"/></specifier></type> <name pos:line="85" pos:column="23">anErr<pos:position pos:line="85" pos:column="28"/></name> <init pos:line="85" pos:column="29">= <expr><call><name><name pos:line="85" pos:column="31">ErrorState<pos:position pos:line="85" pos:column="41"/></name><operator pos:line="85" pos:column="41">::<pos:position pos:line="85" pos:column="43"/></operator><name pos:line="85" pos:column="43">NewForwarding<pos:position pos:line="85" pos:column="56"/></name></name><argument_list pos:line="85" pos:column="56">(<argument><expr><name pos:line="85" pos:column="57">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="85" pos:column="80"/></name></expr></argument>, <argument><expr><call><name><name pos:line="85" pos:column="82">request<pos:position pos:line="85" pos:column="89"/></name><operator pos:line="85" pos:column="89">.<pos:position pos:line="85" pos:column="90"/></operator><name pos:line="85" pos:column="90">getRaw<pos:position pos:line="85" pos:column="96"/></name></name><argument_list pos:line="85" pos:column="96">()<pos:position pos:line="85" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="85" pos:column="99"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="100"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="86" pos:column="5">anErr<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">-&gt;<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="12">xerrno<pos:position pos:line="86" pos:column="18"/></name></name> <operator pos:line="86" pos:column="19">=<pos:position pos:line="86" pos:column="20"/></operator> <name pos:line="86" pos:column="21">sysErrNo<pos:position pos:line="86" pos:column="29"/></name></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="88" pos:column="5">Ssl<pos:position pos:line="88" pos:column="8"/></name><operator pos:line="88" pos:column="8">::<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="10">ErrorDetail<pos:position pos:line="88" pos:column="21"/></name></name> <modifier pos:line="88" pos:column="22">*<pos:position pos:line="88" pos:column="23"/></modifier></type><name pos:line="88" pos:column="23">errFromFailure<pos:position pos:line="88" pos:column="37"/></name> <init pos:line="88" pos:column="38">= <expr><operator pos:line="88" pos:column="40">(<pos:position pos:line="88" pos:column="41"/></operator><name><name pos:line="88" pos:column="41">Ssl<pos:position pos:line="88" pos:column="44"/></name><operator pos:line="88" pos:column="44">::<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="46">ErrorDetail<pos:position pos:line="88" pos:column="57"/></name></name> <operator pos:line="88" pos:column="58">*<pos:position pos:line="88" pos:column="59"/></operator><operator pos:line="88" pos:column="59">)<pos:position pos:line="88" pos:column="60"/></operator><call><name pos:line="88" pos:column="60">SSL_get_ex_data<pos:position pos:line="88" pos:column="75"/></name><argument_list pos:line="88" pos:column="75">(<argument><expr><name pos:line="88" pos:column="76">ssl<pos:position pos:line="88" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="81">ssl_ex_index_ssl_error_detail<pos:position pos:line="88" pos:column="110"/></name></expr></argument>)<pos:position pos:line="88" pos:column="111"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="112"/></decl_stmt>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">errFromFailure<pos:position pos:line="89" pos:column="23"/></name> <operator pos:line="89" pos:column="24">!=<pos:position pos:line="89" pos:column="26"/></operator> <name pos:line="89" pos:column="27">NULL<pos:position pos:line="89" pos:column="31"/></name></expr>)<pos:position pos:line="89" pos:column="32"/></condition><then pos:line="89" pos:column="32"> <block pos:line="89" pos:column="33">{
        <comment type="line" pos:line="90" pos:column="9">// The errFromFailure is attached to the ssl object</comment>
        <comment type="line" pos:line="91" pos:column="9">// and will be released when ssl object destroyed.</comment>
        <comment type="line" pos:line="92" pos:column="9">// Copy errFromFailure to a new Ssl::ErrorDetail object</comment>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">anErr<pos:position pos:line="93" pos:column="14"/></name><operator pos:line="93" pos:column="14">-&gt;<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="16">detail<pos:position pos:line="93" pos:column="22"/></name></name> <operator pos:line="93" pos:column="23">=<pos:position pos:line="93" pos:column="24"/></operator> <operator pos:line="93" pos:column="25">new<pos:position pos:line="93" pos:column="28"/></operator> <call><name><name pos:line="93" pos:column="29">Ssl<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">::<pos:position pos:line="93" pos:column="34"/></operator><name pos:line="93" pos:column="34">ErrorDetail<pos:position pos:line="93" pos:column="45"/></name></name><argument_list pos:line="93" pos:column="45">(<argument><expr><operator pos:line="93" pos:column="46">*<pos:position pos:line="93" pos:column="47"/></operator><name pos:line="93" pos:column="47">errFromFailure<pos:position pos:line="93" pos:column="61"/></name></expr></argument>)<pos:position pos:line="93" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="94" pos:column="6"/></block></then> <else pos:line="94" pos:column="7">else <block pos:line="94" pos:column="12">{
        <comment type="line" pos:line="95" pos:column="9">// server_cert can be NULL here</comment>
        <decl_stmt><decl><type><name pos:line="96" pos:column="9">X509<pos:position pos:line="96" pos:column="13"/></name> <modifier pos:line="96" pos:column="14">*<pos:position pos:line="96" pos:column="15"/></modifier></type><name pos:line="96" pos:column="15">server_cert<pos:position pos:line="96" pos:column="26"/></name> <init pos:line="96" pos:column="27">= <expr><call><name pos:line="96" pos:column="29">SSL_get_peer_certificate<pos:position pos:line="96" pos:column="53"/></name><argument_list pos:line="96" pos:column="53">(<argument><expr><name pos:line="96" pos:column="54">ssl<pos:position pos:line="96" pos:column="57"/></name></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="59"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">anErr<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">-&gt;<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="16">detail<pos:position pos:line="97" pos:column="22"/></name></name> <operator pos:line="97" pos:column="23">=<pos:position pos:line="97" pos:column="24"/></operator> <operator pos:line="97" pos:column="25">new<pos:position pos:line="97" pos:column="28"/></operator> <call><name><name pos:line="97" pos:column="29">Ssl<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">::<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="34">ErrorDetail<pos:position pos:line="97" pos:column="45"/></name></name><argument_list pos:line="97" pos:column="45">(<argument><expr><name pos:line="97" pos:column="46">SQUID_ERR_SSL_HANDSHAKE<pos:position pos:line="97" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="71">server_cert<pos:position pos:line="97" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="84">NULL<pos:position pos:line="97" pos:column="88"/></name></expr></argument>)<pos:position pos:line="97" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="98" pos:column="9">X509_free<pos:position pos:line="98" pos:column="18"/></name><argument_list pos:line="98" pos:column="18">(<argument><expr><name pos:line="98" pos:column="19">server_cert<pos:position pos:line="98" pos:column="30"/></name></expr></argument>)<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="99" pos:column="6"/></block></else></if>

    <if pos:line="101" pos:column="5">if <condition pos:line="101" pos:column="8">(<expr><name pos:line="101" pos:column="9">ssl_lib_error<pos:position pos:line="101" pos:column="22"/></name> <operator pos:line="101" pos:column="23">!=<pos:position pos:line="101" pos:column="25"/></operator> <name pos:line="101" pos:column="26">SSL_ERROR_NONE<pos:position pos:line="101" pos:column="40"/></name></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="102" pos:column="9">anErr<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">detail<pos:position pos:line="102" pos:column="22"/></name><operator pos:line="102" pos:column="22">-&gt;<pos:position pos:line="102" pos:column="27"/></operator><name pos:line="102" pos:column="24">setLibError<pos:position pos:line="102" pos:column="35"/></name></name><argument_list pos:line="102" pos:column="35">(<argument><expr><name pos:line="102" pos:column="36">ssl_lib_error<pos:position pos:line="102" pos:column="49"/></name></expr></argument>)<pos:position pos:line="102" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="51"/></expr_stmt></block></then></if>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><call><name><name pos:line="104" pos:column="9">request<pos:position pos:line="104" pos:column="16"/></name><operator pos:line="104" pos:column="16">-&gt;<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="18">clientConnectionManager<pos:position pos:line="104" pos:column="41"/></name><operator pos:line="104" pos:column="41">.<pos:position pos:line="104" pos:column="42"/></operator><name pos:line="104" pos:column="42">valid<pos:position pos:line="104" pos:column="47"/></name></name><argument_list pos:line="104" pos:column="47">()<pos:position pos:line="104" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="50"/></condition><then pos:line="104" pos:column="50"> <block pos:line="104" pos:column="51">{
        <comment type="line" pos:line="105" pos:column="9">// remember the server certificate from the ErrorDetail object</comment>
        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<decl><type><name><name pos:line="106" pos:column="13">Ssl<pos:position pos:line="106" pos:column="16"/></name><operator pos:line="106" pos:column="16">::<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="18">ServerBump<pos:position pos:line="106" pos:column="28"/></name></name> <modifier pos:line="106" pos:column="29">*<pos:position pos:line="106" pos:column="30"/></modifier></type><name pos:line="106" pos:column="30">serverBump<pos:position pos:line="106" pos:column="40"/></name> <init pos:line="106" pos:column="41">= <expr><call><name><name pos:line="106" pos:column="43">request<pos:position pos:line="106" pos:column="50"/></name><operator pos:line="106" pos:column="50">-&gt;<pos:position pos:line="106" pos:column="55"/></operator><name pos:line="106" pos:column="52">clientConnectionManager<pos:position pos:line="106" pos:column="75"/></name><operator pos:line="106" pos:column="75">-&gt;<pos:position pos:line="106" pos:column="80"/></operator><name pos:line="106" pos:column="77">serverBump<pos:position pos:line="106" pos:column="87"/></name></name><argument_list pos:line="106" pos:column="87">()<pos:position pos:line="106" pos:column="89"/></argument_list></call></expr></init></decl>)<pos:position pos:line="106" pos:column="90"/></condition><then pos:line="106" pos:column="90">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="107" pos:column="13">serverBump<pos:position pos:line="107" pos:column="23"/></name><operator pos:line="107" pos:column="23">-&gt;<pos:position pos:line="107" pos:column="28"/></operator><name pos:line="107" pos:column="25">serverCert<pos:position pos:line="107" pos:column="35"/></name><operator pos:line="107" pos:column="35">.<pos:position pos:line="107" pos:column="36"/></operator><name pos:line="107" pos:column="36">resetAndLock<pos:position pos:line="107" pos:column="48"/></name></name><argument_list pos:line="107" pos:column="48">(<argument><expr><call><name><name pos:line="107" pos:column="49">anErr<pos:position pos:line="107" pos:column="54"/></name><operator pos:line="107" pos:column="54">-&gt;<pos:position pos:line="107" pos:column="59"/></operator><name pos:line="107" pos:column="56">detail<pos:position pos:line="107" pos:column="62"/></name><operator pos:line="107" pos:column="62">-&gt;<pos:position pos:line="107" pos:column="67"/></operator><name pos:line="107" pos:column="64">peerCert<pos:position pos:line="107" pos:column="72"/></name></name><argument_list pos:line="107" pos:column="72">()<pos:position pos:line="107" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="107" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="76"/></expr_stmt></block></then></if>

        <comment type="line" pos:line="109" pos:column="9">// For intercepted connections, set the host name to the server</comment>
        <comment type="line" pos:line="110" pos:column="9">// certificate CN. Otherwise, we just hope that CONNECT is using</comment>
        <comment type="line" pos:line="111" pos:column="9">// a user-entered address (a host name or a user-entered IP).</comment>
        <decl_stmt><decl><type><specifier pos:line="112" pos:column="9">const<pos:position pos:line="112" pos:column="14"/></specifier> <name pos:line="112" pos:column="15">bool<pos:position pos:line="112" pos:column="19"/></name></type> <name pos:line="112" pos:column="20">isConnectRequest<pos:position pos:line="112" pos:column="36"/></name> <init pos:line="112" pos:column="37">= <expr><operator pos:line="112" pos:column="39">!<pos:position pos:line="112" pos:column="40"/></operator><call><name><name pos:line="112" pos:column="40">request<pos:position pos:line="112" pos:column="47"/></name><operator pos:line="112" pos:column="47">-&gt;<pos:position pos:line="112" pos:column="52"/></operator><name pos:line="112" pos:column="49">clientConnectionManager<pos:position pos:line="112" pos:column="72"/></name><operator pos:line="112" pos:column="72">-&gt;<pos:position pos:line="112" pos:column="77"/></operator><name pos:line="112" pos:column="74">port<pos:position pos:line="112" pos:column="78"/></name><operator pos:line="112" pos:column="78">-&gt;<pos:position pos:line="112" pos:column="83"/></operator><name pos:line="112" pos:column="80">flags<pos:position pos:line="112" pos:column="85"/></name><operator pos:line="112" pos:column="85">.<pos:position pos:line="112" pos:column="86"/></operator><name pos:line="112" pos:column="86">isIntercepted<pos:position pos:line="112" pos:column="99"/></name></name><argument_list pos:line="112" pos:column="99">()<pos:position pos:line="112" pos:column="101"/></argument_list></call></expr></init></decl>;<pos:position pos:line="112" pos:column="102"/></decl_stmt>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">request<pos:position pos:line="113" pos:column="20"/></name><operator pos:line="113" pos:column="20">-&gt;<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="22">flags<pos:position pos:line="113" pos:column="27"/></name><operator pos:line="113" pos:column="27">.<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="28">sslPeek<pos:position pos:line="113" pos:column="35"/></name></name> <operator pos:line="113" pos:column="36">&amp;&amp;<pos:position pos:line="113" pos:column="46"/></operator> <operator pos:line="113" pos:column="39">!<pos:position pos:line="113" pos:column="40"/></operator><name pos:line="113" pos:column="40">isConnectRequest<pos:position pos:line="113" pos:column="56"/></name></expr>)<pos:position pos:line="113" pos:column="57"/></condition><then pos:line="113" pos:column="57"> <block pos:line="113" pos:column="58">{
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<decl><type><name pos:line="114" pos:column="17">X509<pos:position pos:line="114" pos:column="21"/></name> <modifier pos:line="114" pos:column="22">*<pos:position pos:line="114" pos:column="23"/></modifier></type><name pos:line="114" pos:column="23">srvX509<pos:position pos:line="114" pos:column="30"/></name> <init pos:line="114" pos:column="31">= <expr><call><name><name pos:line="114" pos:column="33">anErr<pos:position pos:line="114" pos:column="38"/></name><operator pos:line="114" pos:column="38">-&gt;<pos:position pos:line="114" pos:column="43"/></operator><name pos:line="114" pos:column="40">detail<pos:position pos:line="114" pos:column="46"/></name><operator pos:line="114" pos:column="46">-&gt;<pos:position pos:line="114" pos:column="51"/></operator><name pos:line="114" pos:column="48">peerCert<pos:position pos:line="114" pos:column="56"/></name></name><argument_list pos:line="114" pos:column="56">()<pos:position pos:line="114" pos:column="58"/></argument_list></call></expr></init></decl>)<pos:position pos:line="114" pos:column="59"/></condition><then pos:line="114" pos:column="59"> <block pos:line="114" pos:column="60">{
                <if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<decl><type><specifier pos:line="115" pos:column="21">const<pos:position pos:line="115" pos:column="26"/></specifier> <name pos:line="115" pos:column="27">char<pos:position pos:line="115" pos:column="31"/></name> <modifier pos:line="115" pos:column="32">*<pos:position pos:line="115" pos:column="33"/></modifier></type><name pos:line="115" pos:column="33">name<pos:position pos:line="115" pos:column="37"/></name> <init pos:line="115" pos:column="38">= <expr><call><name><name pos:line="115" pos:column="40">Ssl<pos:position pos:line="115" pos:column="43"/></name><operator pos:line="115" pos:column="43">::<pos:position pos:line="115" pos:column="45"/></operator><name pos:line="115" pos:column="45">CommonHostName<pos:position pos:line="115" pos:column="59"/></name></name><argument_list pos:line="115" pos:column="59">(<argument><expr><name pos:line="115" pos:column="60">srvX509<pos:position pos:line="115" pos:column="67"/></name></expr></argument>)<pos:position pos:line="115" pos:column="68"/></argument_list></call></expr></init></decl>)<pos:position pos:line="115" pos:column="69"/></condition><then pos:line="115" pos:column="69"> <block pos:line="115" pos:column="70">{
                    <expr_stmt><expr><call><name><name pos:line="116" pos:column="21">request<pos:position pos:line="116" pos:column="28"/></name><operator pos:line="116" pos:column="28">-&gt;<pos:position pos:line="116" pos:column="33"/></operator><name pos:line="116" pos:column="30">SetHost<pos:position pos:line="116" pos:column="37"/></name></name><argument_list pos:line="116" pos:column="37">(<argument><expr><name pos:line="116" pos:column="38">name<pos:position pos:line="116" pos:column="42"/></name></expr></argument>)<pos:position pos:line="116" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="44"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="117" pos:column="21">debugs<pos:position pos:line="117" pos:column="27"/></name><argument_list pos:line="117" pos:column="27">(<argument><expr><literal type="number" pos:line="117" pos:column="28">83<pos:position pos:line="117" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="32">3<pos:position pos:line="117" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="35">HERE<pos:position pos:line="117" pos:column="39"/></name> <operator pos:line="117" pos:column="40">&lt;&lt;<pos:position pos:line="117" pos:column="48"/></operator> <literal type="string" pos:line="117" pos:column="43">"reset request host: "<pos:position pos:line="117" pos:column="65"/></literal> <operator pos:line="117" pos:column="66">&lt;&lt;<pos:position pos:line="117" pos:column="74"/></operator> <name pos:line="117" pos:column="69">name<pos:position pos:line="117" pos:column="73"/></name></expr></argument>)<pos:position pos:line="117" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="75"/></expr_stmt>
                }<pos:position pos:line="118" pos:column="18"/></block></then></if>
            }<pos:position pos:line="119" pos:column="14"/></block></then></if>
        }<pos:position pos:line="120" pos:column="10"/></block></then></if>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="123" pos:column="5">bail<pos:position pos:line="123" pos:column="9"/></name><argument_list pos:line="123" pos:column="9">(<argument><expr><name pos:line="123" pos:column="10">anErr<pos:position pos:line="123" pos:column="15"/></name></expr></argument>)<pos:position pos:line="123" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="17"/></expr_stmt>
}<pos:position pos:line="124" pos:column="2"/></block></function></unit>

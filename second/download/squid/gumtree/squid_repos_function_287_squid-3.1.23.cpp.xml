<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_287_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">ntlmGetString<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">ntlmhdr<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">hdr<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">strhdr<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">str<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">flags<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">512<pos:position pos:line="4" pos:column="24"/></literal></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">short<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">s<pos:position pos:line="5" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">c<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">d<pos:position pos:line="6" pos:column="12"/></name></decl>, <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="15">sc<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">l<pos:position pos:line="7" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="12">o<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">l<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">le16toh<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name><name pos:line="9" pos:column="17">str<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">len<pos:position pos:line="9" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">o<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">le32toh<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name><name pos:line="10" pos:column="17">str<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">offset<pos:position pos:line="10" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Sanity checks. XXX values arbitrarialy chosen */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">l<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&lt;=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal> <operator pos:line="13" pos:column="16">||<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">l<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">&gt;=<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="24">32<pos:position pos:line="13" pos:column="26"/></literal> <operator pos:line="13" pos:column="27">||<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">o<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">&gt;=<pos:position pos:line="13" pos:column="37"/></operator> <literal type="number" pos:line="13" pos:column="35">256<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">fprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">stderr<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"ntlmGetString: insane: l:%d o:%d\n"<pos:position pos:line="14" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">l<pos:position pos:line="14" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">o<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">NULL<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">)<pos:position pos:line="15" pos:column="22"/></operator></expr>;<pos:position pos:line="15" pos:column="23"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">(<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">flags<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&amp;<pos:position pos:line="17" pos:column="21"/></operator> <name pos:line="17" pos:column="18">NEGOTIATE_ASCII<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">)<pos:position pos:line="17" pos:column="34"/></operator> <operator pos:line="17" pos:column="35">==<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">0<pos:position pos:line="17" pos:column="39"/></literal></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40"> <block pos:line="17" pos:column="41">{
        <comment type="block" pos:line="18" pos:column="9">/* UNICODE string */</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">s<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">unsigned<pos:position pos:line="19" pos:column="22"/></name> <name pos:line="19" pos:column="23">short<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">*<pos:position pos:line="19" pos:column="30"/></operator><operator pos:line="19" pos:column="30">)<pos:position pos:line="19" pos:column="31"/></operator> <operator pos:line="19" pos:column="32">(<pos:position pos:line="19" pos:column="33"/></operator><operator pos:line="19" pos:column="33">(<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">char<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">*<pos:position pos:line="19" pos:column="40"/></operator><operator pos:line="19" pos:column="40">)<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="42">hdr<pos:position pos:line="19" pos:column="45"/></name> <operator pos:line="19" pos:column="46">+<pos:position pos:line="19" pos:column="47"/></operator> <name pos:line="19" pos:column="48">o<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">)<pos:position pos:line="19" pos:column="50"/></operator></expr>;<pos:position pos:line="19" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">d<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">buf<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>

        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">l<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&gt;&gt;=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="20">1<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></init> <condition><expr><name pos:line="22" pos:column="23">l<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></condition> <incr><expr><name pos:line="22" pos:column="26">s<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">++<pos:position pos:line="22" pos:column="29"/></operator></expr><operator pos:line="22" pos:column="29">,<pos:position pos:line="22" pos:column="30"/></operator> <expr><name pos:line="22" pos:column="31">l<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">--<pos:position pos:line="22" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="35"/></control> <block pos:line="22" pos:column="36">{
            <expr_stmt><expr><name pos:line="23" pos:column="13">c<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">le16toh<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><operator pos:line="23" pos:column="25">*<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">s<pos:position pos:line="23" pos:column="27"/></name></expr></argument>)<pos:position pos:line="23" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">c<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&gt;<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="21">254<pos:position pos:line="24" pos:column="24"/></literal> <operator pos:line="24" pos:column="25">||<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">c<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <literal type="char" pos:line="24" pos:column="33">'\0'<pos:position pos:line="24" pos:column="37"/></literal></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">fprintf<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">stderr<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"ntlmGetString: bad uni: %04x\n"<pos:position pos:line="25" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="67">c<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
                <return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">(<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">NULL<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">)<pos:position pos:line="26" pos:column="30"/></operator></expr>;<pos:position pos:line="26" pos:column="31"/></return>
            }<pos:position pos:line="27" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">d<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">++<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">c<pos:position pos:line="28" pos:column="21"/></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></for>

        <expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">d<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then> <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
        <comment type="block" pos:line="33" pos:column="9">/* ASCII/OEM string */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">sc<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <operator pos:line="34" pos:column="14">(<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">char<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">*<pos:position pos:line="34" pos:column="21"/></operator><operator pos:line="34" pos:column="21">)<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">hdr<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">+<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">o<pos:position pos:line="34" pos:column="30"/></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">d<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">buf<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>

        <for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init pos:line="37" pos:column="14">;<pos:position pos:line="37" pos:column="15"/></init> <condition><expr><name pos:line="37" pos:column="16">l<pos:position pos:line="37" pos:column="17"/></name></expr>;<pos:position pos:line="37" pos:column="18"/></condition> <incr><expr><name pos:line="37" pos:column="19">l<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">--<pos:position pos:line="37" pos:column="22"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="23"/></control> <block pos:line="37" pos:column="24">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><operator pos:line="38" pos:column="17">*<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">sc<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">==<pos:position pos:line="38" pos:column="23"/></operator> <literal type="char" pos:line="38" pos:column="24">'\0'<pos:position pos:line="38" pos:column="28"/></literal> <operator pos:line="38" pos:column="29">||<pos:position pos:line="38" pos:column="31"/></operator> <operator pos:line="38" pos:column="32">!<pos:position pos:line="38" pos:column="33"/></operator><call><name pos:line="38" pos:column="33">xisprint<pos:position pos:line="38" pos:column="41"/></name><argument_list pos:line="38" pos:column="41">(<argument><expr><operator pos:line="38" pos:column="42">*<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="43">sc<pos:position pos:line="38" pos:column="45"/></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="47"/></condition><then pos:line="38" pos:column="47"> <block pos:line="38" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">fprintf<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">stderr<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="33">"ntlmGetString: bad ascii: %04x\n"<pos:position pos:line="39" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="39" pos:column="69">*<pos:position pos:line="39" pos:column="70"/></operator><name pos:line="39" pos:column="70">sc<pos:position pos:line="39" pos:column="72"/></name></expr></argument>)<pos:position pos:line="39" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="74"/></expr_stmt>
                <return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">NULL<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">)<pos:position pos:line="40" pos:column="30"/></operator></expr>;<pos:position pos:line="40" pos:column="31"/></return>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="42" pos:column="13">*<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">d<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">++<pos:position pos:line="42" pos:column="17"/></operator> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <operator pos:line="42" pos:column="20">*<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="21">sc<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">++<pos:position pos:line="42" pos:column="25"/></operator></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></for>

        <expr_stmt><expr><operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">d<pos:position pos:line="45" pos:column="11"/></name> <operator pos:line="45" pos:column="12">=<pos:position pos:line="45" pos:column="13"/></operator> <literal type="number" pos:line="45" pos:column="14">0<pos:position pos:line="45" pos:column="15"/></literal></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">buf<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">)<pos:position pos:line="48" pos:column="17"/></operator></expr>;<pos:position pos:line="48" pos:column="18"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6236_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">DiskdIOStrategy<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">SEND<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">diomsg<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">M<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">mtype<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">id<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">size_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">size<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">off_t<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">offset<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="80">ssize_t<pos:position pos:line="2" pos:column="87"/></name></type> <name pos:line="2" pos:column="88">shm_offset<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="99"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">int<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">send_errors<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">int<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">last_seq_no<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">seq_no<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">x<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">M<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">mtype<pos:position pos:line="9" pos:column="13"/></name></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name pos:line="9" pos:column="16">mtype<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">M<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">size<pos:position pos:line="10" pos:column="12"/></name></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">size<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">M<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">offset<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">offset<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">M<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">status<pos:position pos:line="12" pos:column="14"/></name></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">-<pos:position pos:line="12" pos:column="18"/></operator><literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">M<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">shm_offset<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">int<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">shm_offset<pos:position pos:line="13" pos:column="37"/></name></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">M<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">id<pos:position pos:line="14" pos:column="10"/></name></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">id<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">M<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">seq_no<pos:position pos:line="15" pos:column="14"/></name></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">seq_no<pos:position pos:line="15" pos:column="25"/></name></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">M<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">seq_no<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">&lt;<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="21">last_seq_no<pos:position pos:line="17" pos:column="32"/></name></expr>)<pos:position pos:line="17" pos:column="33"/></condition><then pos:line="17" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">79<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">DBG_IMPORTANT<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="35">"WARNING: sequencing out of order"<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">x<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">msgsnd<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">smsgid<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="24">M<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="27">diomsg<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">::<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">msg_snd_rcv_sz<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">IPC_NOWAIT<pos:position pos:line="20" pos:column="61"/></name></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">last_seq_no<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name><name pos:line="22" pos:column="19">M<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">seq_no<pos:position pos:line="22" pos:column="28"/></name></name></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><literal type="number" pos:line="24" pos:column="9">0<pos:position pos:line="24" pos:column="10"/></literal> <operator pos:line="24" pos:column="11">==<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">x<pos:position pos:line="24" pos:column="15"/></name></expr>)<pos:position pos:line="24" pos:column="16"/></condition><then pos:line="24" pos:column="16"> <block pos:line="24" pos:column="17">{
        <expr_stmt><expr><operator pos:line="25" pos:column="9">++<pos:position pos:line="25" pos:column="11"/></operator><name><name pos:line="25" pos:column="11">diskd_stats<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">sent_count<pos:position pos:line="25" pos:column="33"/></name></name></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">++<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">away<pos:position pos:line="26" pos:column="15"/></name></expr>;<pos:position pos:line="26" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">79<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="20">DBG_IMPORTANT<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="35">"storeDiskdSend: msgsnd: "<pos:position pos:line="28" pos:column="61"/></literal> <operator pos:line="28" pos:column="62">&lt;&lt;<pos:position pos:line="28" pos:column="70"/></operator> <call><name pos:line="28" pos:column="65">xstrerror<pos:position pos:line="28" pos:column="74"/></name><argument_list pos:line="28" pos:column="74">()<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">cbdataReferenceDone<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name><name pos:line="29" pos:column="29">M<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">callback_data<pos:position pos:line="29" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="30" pos:column="9">++<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">send_errors<pos:position pos:line="30" pos:column="22"/></name></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">assert<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">send_errors<pos:position pos:line="31" pos:column="27"/></name> <operator pos:line="31" pos:column="28">&lt;<pos:position pos:line="31" pos:column="32"/></operator> <literal type="number" pos:line="31" pos:column="30">100<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">shm_offset<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">&gt;<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="26">-<pos:position pos:line="32" pos:column="27"/></operator><literal type="number" pos:line="32" pos:column="27">1<pos:position pos:line="32" pos:column="28"/></literal></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="33" pos:column="13">shm<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">put<pos:position pos:line="33" pos:column="20"/></name></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">shm_offset<pos:position pos:line="33" pos:column="31"/></name></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="36" pos:column="5">/*
     * We have to drain the queue here if necessary.  If we don't,
     * then we can have a lot of messages in the queue (probably
     * up to 2*magic1) and we can run out of shared memory buffers.
     */</comment>
    <comment type="block" pos:line="41" pos:column="5">/*
     * Note that we call Store::Root().callbackk (for all SDs), rather
     * than callback for just this SD, so that while
     * we're "blocking" on this SD we can also handle callbacks
     * from other SDs that might be ready.
     */</comment>

    <decl_stmt><decl><type><name><name pos:line="48" pos:column="5">struct<pos:position pos:line="48" pos:column="11"/></name> <name pos:line="48" pos:column="12">timeval<pos:position pos:line="48" pos:column="19"/></name></name></type> <name pos:line="48" pos:column="20">delay<pos:position pos:line="48" pos:column="25"/></name> <init pos:line="48" pos:column="26">= <expr><block pos:line="48" pos:column="28">{<expr><literal type="number" pos:line="48" pos:column="29">0<pos:position pos:line="48" pos:column="30"/></literal></expr>, <expr><literal type="number" pos:line="48" pos:column="32">1<pos:position pos:line="48" pos:column="33"/></literal></expr>}<pos:position pos:line="48" pos:column="34"/></block></expr></init></decl>;<pos:position pos:line="48" pos:column="35"/></decl_stmt>

    <while pos:line="50" pos:column="5">while <condition pos:line="50" pos:column="11">(<expr><name pos:line="50" pos:column="12">away<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">&gt;<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="19">magic2<pos:position pos:line="50" pos:column="25"/></name></expr>)<pos:position pos:line="50" pos:column="26"/></condition> <block pos:line="50" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">select<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="19">NULL<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="25">NULL<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">NULL<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="37">&amp;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="38">delay<pos:position pos:line="51" pos:column="43"/></name></expr></argument>)<pos:position pos:line="51" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="52" pos:column="9">Store<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">::<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="16">Root<pos:position pos:line="52" pos:column="20"/></name></name><argument_list pos:line="52" pos:column="20">()<pos:position pos:line="52" pos:column="22"/></argument_list></call><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><call><name pos:line="52" pos:column="23">callback<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">()<pos:position pos:line="52" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>

        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">delay<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">.<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="19">tv_usec<pos:position pos:line="54" pos:column="26"/></name></name> <operator pos:line="54" pos:column="27">&lt;<pos:position pos:line="54" pos:column="31"/></operator> <literal type="number" pos:line="54" pos:column="29">1000000<pos:position pos:line="54" pos:column="36"/></literal></expr>)<pos:position pos:line="54" pos:column="37"/></condition><then pos:line="54" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="13">delay<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">.<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">tv_usec<pos:position pos:line="55" pos:column="26"/></name></name> <operator pos:line="55" pos:column="27">&lt;&lt;=<pos:position pos:line="55" pos:column="36"/></operator> <literal type="number" pos:line="55" pos:column="31">1<pos:position pos:line="55" pos:column="32"/></literal></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt></block></then></if>
    }<pos:position pos:line="56" pos:column="6"/></block></while>

    <return pos:line="58" pos:column="5">return <expr><name pos:line="58" pos:column="12">x<pos:position pos:line="58" pos:column="13"/></name></expr>;<pos:position pos:line="58" pos:column="14"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

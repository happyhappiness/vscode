<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3654_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">Squid_SSL_accept<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">ConnStateData<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">conn<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">PF<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">callback<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name><name pos:line="4" pos:column="14">conn<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">clientConnection<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="38">fd<pos:position pos:line="4" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ssl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name><name pos:line="5" pos:column="16">fd_table<pos:position pos:line="5" pos:column="24"/></name><index pos:line="5" pos:column="24">[<expr><name pos:line="5" pos:column="25">fd<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">ssl<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">errno<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">ret<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">SSL_accept<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">ssl<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator> <operator pos:line="9" pos:column="33">&lt;=<pos:position pos:line="9" pos:column="38"/></operator> <literal type="number" pos:line="9" pos:column="36">0<pos:position pos:line="9" pos:column="37"/></literal></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38"> <block pos:line="9" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">xerrno<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">errno<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">ssl_error<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name pos:line="11" pos:column="25">SSL_get_error<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name pos:line="11" pos:column="39">ssl<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">ret<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="49"/></decl_stmt>

        <switch pos:line="13" pos:column="9">switch <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">ssl_error<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition> <block pos:line="13" pos:column="28">{

        <case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">SSL_ERROR_WANT_READ<pos:position pos:line="15" pos:column="33"/></name></expr>:<pos:position pos:line="15" pos:column="34"/></case>
            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">Comm<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">::<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">SetSelect<pos:position pos:line="16" pos:column="28"/></name></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">fd<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">COMM_SELECT_READ<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">callback<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">conn<pos:position pos:line="16" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="67">0<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt>
            <return pos:line="17" pos:column="13">return <expr><literal type="boolean" pos:line="17" pos:column="20">false<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return>

        <case pos:line="19" pos:column="9">case <expr><name pos:line="19" pos:column="14">SSL_ERROR_WANT_WRITE<pos:position pos:line="19" pos:column="34"/></name></expr>:<pos:position pos:line="19" pos:column="35"/></case>
            <expr_stmt><expr><call><name><name pos:line="20" pos:column="13">Comm<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">::<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="19">SetSelect<pos:position pos:line="20" pos:column="28"/></name></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">fd<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">COMM_SELECT_WRITE<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">callback<pos:position pos:line="20" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">conn<pos:position pos:line="20" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="68">0<pos:position pos:line="20" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><literal type="boolean" pos:line="21" pos:column="20">false<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return>

        <case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">SSL_ERROR_SYSCALL<pos:position pos:line="23" pos:column="31"/></name></expr>:<pos:position pos:line="23" pos:column="32"/></case>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">ret<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">==<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="25" pos:column="17">debugs<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="number" pos:line="25" pos:column="24">83<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="28">2<pos:position pos:line="25" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"Error negotiating SSL connection on FD "<pos:position pos:line="25" pos:column="72"/></literal> <operator pos:line="25" pos:column="73">&lt;&lt;<pos:position pos:line="25" pos:column="81"/></operator> <name pos:line="25" pos:column="76">fd<pos:position pos:line="25" pos:column="78"/></name> <operator pos:line="25" pos:column="79">&lt;&lt;<pos:position pos:line="25" pos:column="87"/></operator> <literal type="string" pos:line="25" pos:column="82">": Aborted by client: "<pos:position pos:line="25" pos:column="105"/></literal> <operator pos:line="25" pos:column="106">&lt;&lt;<pos:position pos:line="25" pos:column="114"/></operator> <name pos:line="25" pos:column="109">ssl_error<pos:position pos:line="25" pos:column="118"/></name></expr></argument>)<pos:position pos:line="25" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="120"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then> <else pos:line="26" pos:column="15">else <block pos:line="26" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">debugs<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="number" pos:line="27" pos:column="24">83<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="27" pos:column="28">(<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">xerrno<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">==<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">ECONNRESET<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">)<pos:position pos:line="27" pos:column="50"/></operator></expr> ?<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52"> <expr><literal type="number" pos:line="27" pos:column="53">1<pos:position pos:line="27" pos:column="54"/></literal></expr> <pos:position pos:line="27" pos:column="55"/></then><else pos:line="27" pos:column="55">: <expr><literal type="number" pos:line="27" pos:column="57">2<pos:position pos:line="27" pos:column="58"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="60">"Error negotiating SSL connection on FD "<pos:position pos:line="27" pos:column="101"/></literal> <operator pos:line="27" pos:column="102">&lt;&lt;<pos:position pos:line="27" pos:column="110"/></operator> <name pos:line="27" pos:column="105">fd<pos:position pos:line="27" pos:column="107"/></name> <operator pos:line="27" pos:column="108">&lt;&lt;<pos:position pos:line="27" pos:column="116"/></operator> <literal type="string" pos:line="27" pos:column="111">": "<pos:position pos:line="27" pos:column="115"/></literal> <operator pos:line="27" pos:column="116">&lt;&lt;<pos:position pos:line="27" pos:column="124"/></operator>
                       <operator pos:line="28" pos:column="24">(<pos:position pos:line="28" pos:column="25"/></operator><ternary><condition><expr><name pos:line="28" pos:column="25">xerrno<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <literal type="number" pos:line="28" pos:column="35">0<pos:position pos:line="28" pos:column="36"/></literal></expr> ?<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <expr><call><name pos:line="28" pos:column="39">ERR_error_string<pos:position pos:line="28" pos:column="55"/></name><argument_list pos:line="28" pos:column="55">(<argument><expr><name pos:line="28" pos:column="56">ssl_error<pos:position pos:line="28" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="67">NULL<pos:position pos:line="28" pos:column="71"/></name></expr></argument>)<pos:position pos:line="28" pos:column="72"/></argument_list></call></expr> <pos:position pos:line="28" pos:column="73"/></then><else pos:line="28" pos:column="73">: <expr><call><name pos:line="28" pos:column="75">xstrerr<pos:position pos:line="28" pos:column="82"/></name><argument_list pos:line="28" pos:column="82">(<argument><expr><name pos:line="28" pos:column="83">xerrno<pos:position pos:line="28" pos:column="89"/></name></expr></argument>)<pos:position pos:line="28" pos:column="90"/></argument_list></call></expr></else></ternary><operator pos:line="28" pos:column="90">)<pos:position pos:line="28" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="93"/></expr_stmt>
            }<pos:position pos:line="29" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">conn<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">-&gt;<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="19">clientConnection<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">-&gt;<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="37">close<pos:position pos:line="30" pos:column="42"/></name></name><argument_list pos:line="30" pos:column="42">()<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
            <return pos:line="31" pos:column="13">return <expr><literal type="boolean" pos:line="31" pos:column="20">false<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></return>

        <case pos:line="33" pos:column="9">case <expr><name pos:line="33" pos:column="14">SSL_ERROR_ZERO_RETURN<pos:position pos:line="33" pos:column="35"/></name></expr>:<pos:position pos:line="33" pos:column="36"/></case>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">83<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">DBG_IMPORTANT<pos:position pos:line="34" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"Error negotiating SSL connection on FD "<pos:position pos:line="34" pos:column="80"/></literal> <operator pos:line="34" pos:column="81">&lt;&lt;<pos:position pos:line="34" pos:column="89"/></operator> <name pos:line="34" pos:column="84">fd<pos:position pos:line="34" pos:column="86"/></name> <operator pos:line="34" pos:column="87">&lt;&lt;<pos:position pos:line="34" pos:column="95"/></operator> <literal type="string" pos:line="34" pos:column="90">": Closed by client"<pos:position pos:line="34" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="112"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">conn<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">-&gt;<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="19">clientConnection<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">-&gt;<pos:position pos:line="35" pos:column="40"/></operator><name pos:line="35" pos:column="37">close<pos:position pos:line="35" pos:column="42"/></name></name><argument_list pos:line="35" pos:column="42">()<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
            <return pos:line="36" pos:column="13">return <expr><literal type="boolean" pos:line="36" pos:column="20">false<pos:position pos:line="36" pos:column="25"/></literal></expr>;<pos:position pos:line="36" pos:column="26"/></return>

        <default pos:line="38" pos:column="9">default:<pos:position pos:line="38" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">debugs<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><literal type="number" pos:line="39" pos:column="20">83<pos:position pos:line="39" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">DBG_IMPORTANT<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="39">"Error negotiating SSL connection on FD "<pos:position pos:line="39" pos:column="80"/></literal> <operator pos:line="39" pos:column="81">&lt;&lt;<pos:position pos:line="39" pos:column="89"/></operator>
                   <name pos:line="40" pos:column="20">fd<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">&lt;&lt;<pos:position pos:line="40" pos:column="31"/></operator> <literal type="string" pos:line="40" pos:column="26">": "<pos:position pos:line="40" pos:column="30"/></literal> <operator pos:line="40" pos:column="31">&lt;&lt;<pos:position pos:line="40" pos:column="39"/></operator> <call><name pos:line="40" pos:column="34">ERR_error_string<pos:position pos:line="40" pos:column="50"/></name><argument_list pos:line="40" pos:column="50">(<argument><expr><call><name pos:line="40" pos:column="51">ERR_get_error<pos:position pos:line="40" pos:column="64"/></name><argument_list pos:line="40" pos:column="64">()<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="68">NULL<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call> <operator pos:line="40" pos:column="74">&lt;&lt;<pos:position pos:line="40" pos:column="82"/></operator>
                   <literal type="string" pos:line="41" pos:column="20">" ("<pos:position pos:line="41" pos:column="24"/></literal> <operator pos:line="41" pos:column="25">&lt;&lt;<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="28">ssl_error<pos:position pos:line="41" pos:column="37"/></name> <operator pos:line="41" pos:column="38">&lt;&lt;<pos:position pos:line="41" pos:column="46"/></operator> <literal type="string" pos:line="41" pos:column="41">"/"<pos:position pos:line="41" pos:column="44"/></literal> <operator pos:line="41" pos:column="45">&lt;&lt;<pos:position pos:line="41" pos:column="53"/></operator> <name pos:line="41" pos:column="48">ret<pos:position pos:line="41" pos:column="51"/></name> <operator pos:line="41" pos:column="52">&lt;&lt;<pos:position pos:line="41" pos:column="60"/></operator> <literal type="string" pos:line="41" pos:column="55">")"<pos:position pos:line="41" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">conn<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">clientConnection<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">close<pos:position pos:line="42" pos:column="42"/></name></name><argument_list pos:line="42" pos:column="42">()<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
            <return pos:line="43" pos:column="13">return <expr><literal type="boolean" pos:line="43" pos:column="20">false<pos:position pos:line="43" pos:column="25"/></literal></expr>;<pos:position pos:line="43" pos:column="26"/></return>
        }<pos:position pos:line="44" pos:column="10"/></block></switch>

        <comment type="block" pos:line="46" pos:column="9">/* NOTREACHED */</comment>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
    <return pos:line="48" pos:column="5">return <expr><literal type="boolean" pos:line="48" pos:column="12">true<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

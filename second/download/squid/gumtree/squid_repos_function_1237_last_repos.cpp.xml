<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1237_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">sfileno<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">FileMap<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">allocate<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">sfileno<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">suggestion<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">word<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">suggestion<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">&gt;=<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="23">capacity_<pos:position pos:line="6" pos:column="32"/></name></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">suggestion<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">=<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">testBit<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">suggestion<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">suggestion<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">word<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <name pos:line="12" pos:column="12">suggestion<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&gt;&gt;<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="26">LONG_BIT_SHIFT<pos:position pos:line="12" pos:column="40"/></name></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><decl><type><name pos:line="14" pos:column="10">unsigned<pos:position pos:line="14" pos:column="18"/></name> <name pos:line="14" pos:column="19">int<pos:position pos:line="14" pos:column="22"/></name></type> <name pos:line="14" pos:column="23">count<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></init> <condition><expr><name pos:line="14" pos:column="34">count<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">&lt;<pos:position pos:line="14" pos:column="44"/></operator> <name pos:line="14" pos:column="42">nwords<pos:position pos:line="14" pos:column="48"/></name></expr>;<pos:position pos:line="14" pos:column="49"/></condition> <incr><expr><operator pos:line="14" pos:column="50">++<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="52">count<pos:position pos:line="14" pos:column="57"/></name></expr></incr>)<pos:position pos:line="14" pos:column="58"/></control> <block pos:line="14" pos:column="59">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">bitmap<pos:position pos:line="15" pos:column="19"/></name><index pos:line="15" pos:column="19">[<expr><name pos:line="15" pos:column="20">word<pos:position pos:line="15" pos:column="24"/></name></expr>]<pos:position pos:line="15" pos:column="25"/></index></name> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <name pos:line="15" pos:column="29">ALL_ONES<pos:position pos:line="15" pos:column="37"/></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
            <block type="pseudo"><break pos:line="16" pos:column="13">break;<pos:position pos:line="16" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><name pos:line="18" pos:column="9">word<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">word<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">+<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal><operator pos:line="18" pos:column="25">)<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="27">%<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">nwords<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><decl><type><name pos:line="21" pos:column="10">unsigned<pos:position pos:line="21" pos:column="18"/></name> <name pos:line="21" pos:column="19">char<pos:position pos:line="21" pos:column="23"/></name></type> <name pos:line="21" pos:column="24">bit<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">= <expr><literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="32"/></init> <condition><expr><name pos:line="21" pos:column="33">bit<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&lt;<pos:position pos:line="21" pos:column="41"/></operator> <name pos:line="21" pos:column="39">BITS_IN_A_LONG<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></condition> <incr><expr><operator pos:line="21" pos:column="55">++<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">bit<pos:position pos:line="21" pos:column="60"/></name></expr></incr>)<pos:position pos:line="21" pos:column="61"/></control> <block pos:line="21" pos:column="62">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">suggestion<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <operator pos:line="22" pos:column="22">(<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">(<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">unsigned<pos:position pos:line="22" pos:column="32"/></name> <name pos:line="22" pos:column="33">long<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator> <name pos:line="22" pos:column="39">word<pos:position pos:line="22" pos:column="43"/></name> <operator pos:line="22" pos:column="44">&lt;&lt;<pos:position pos:line="22" pos:column="52"/></operator> <name pos:line="22" pos:column="47">LONG_BIT_SHIFT<pos:position pos:line="22" pos:column="61"/></name><operator pos:line="22" pos:column="61">)<pos:position pos:line="22" pos:column="62"/></operator> <operator pos:line="22" pos:column="63">|<pos:position pos:line="22" pos:column="64"/></operator> <name pos:line="22" pos:column="65">bit<pos:position pos:line="22" pos:column="68"/></name></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><call><name pos:line="24" pos:column="14">testBit<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><name pos:line="24" pos:column="22">suggestion<pos:position pos:line="24" pos:column="32"/></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34"> <block pos:line="24" pos:column="35">{
            <return pos:line="25" pos:column="13">return <expr><name pos:line="25" pos:column="20">suggestion<pos:position pos:line="25" pos:column="30"/></name></expr>;<pos:position pos:line="25" pos:column="31"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">grow<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">()<pos:position pos:line="29" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="12"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><call><name pos:line="30" pos:column="12">allocate<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">capacity_<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">&gt;&gt;<pos:position pos:line="30" pos:column="36"/></operator> <literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

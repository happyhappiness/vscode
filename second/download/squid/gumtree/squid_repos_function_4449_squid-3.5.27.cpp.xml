<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4449_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">configureSslEECDH<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">SSL_CTX<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">sslContext<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">curve<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">OPENSSL_VERSION_NUMBER<pos:position pos:line="4" pos:column="27"/></name> <operator pos:line="4" pos:column="28">&gt;=<pos:position pos:line="4" pos:column="33"/></operator> <literal type="number" pos:line="4" pos:column="31">0x0090800fL<pos:position pos:line="4" pos:column="42"/></literal> <operator pos:line="4" pos:column="43">&amp;&amp;<pos:position pos:line="4" pos:column="53"/></operator> <operator pos:line="4" pos:column="46">!<pos:position pos:line="4" pos:column="47"/></operator><call><name pos:line="4" pos:column="47">defined<pos:position pos:line="4" pos:column="54"/></name><argument_list pos:line="4" pos:column="54">(<argument><expr><name pos:line="4" pos:column="55">OPENSSL_NO_ECDH<pos:position pos:line="4" pos:column="70"/></name></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">nid<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><call><name pos:line="5" pos:column="15">OBJ_sn2nid<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">curve<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">nid<pos:position pos:line="6" pos:column="13"/></name></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14"> <block pos:line="6" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">83<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_CRITICAL<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"ERROR: Unknown EECDH curve '"<pos:position pos:line="7" pos:column="64"/></literal> <operator pos:line="7" pos:column="65">&lt;&lt;<pos:position pos:line="7" pos:column="73"/></operator> <name pos:line="7" pos:column="68">curve<pos:position pos:line="7" pos:column="73"/></name> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator> <literal type="string" pos:line="7" pos:column="77">"'"<pos:position pos:line="7" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="82"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">EC_KEY<pos:position pos:line="11" pos:column="11"/></name> <modifier pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></modifier></type><name pos:line="11" pos:column="13">ecdh<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><call><name pos:line="11" pos:column="20">EC_KEY_new_by_curve_name<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">nid<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ecdh<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">==<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">false<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">bool<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">ok<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><call><name pos:line="15" pos:column="21">SSL_CTX_set_tmp_ecdh<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">sslContext<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">ecdh<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call> <operator pos:line="15" pos:column="60">!=<pos:position pos:line="15" pos:column="62"/></operator> <literal type="number" pos:line="15" pos:column="63">0<pos:position pos:line="15" pos:column="64"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">EC_KEY_free<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">ecdh<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">ok<pos:position pos:line="17" pos:column="14"/></name></expr>;<pos:position pos:line="17" pos:column="15"/></return>
<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">83<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="16">DBG_CRITICAL<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="30">"ERROR: EECDH is not available in this build. Please link against OpenSSL&gt;=0.9.8 and ensure OPENSSL_NO_ECDH is not set."<pos:position pos:line="19" pos:column="153"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="151"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="152"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><literal type="boolean" pos:line="20" pos:column="12">false<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

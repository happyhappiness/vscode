<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1002_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerSelectDnsPaths<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">ps_state<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">psstate<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FwdServer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">fs<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">psstate<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">servers<pos:position pos:line="4" pos:column="37"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">cbdataReferenceValid<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name><name pos:line="6" pos:column="31">psstate<pos:position pos:line="6" pos:column="38"/></name><operator pos:line="6" pos:column="38">-&gt;<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="40">callback_data<pos:position pos:line="6" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="55"/></condition><then pos:line="6" pos:column="55"> <block pos:line="6" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">44<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">3<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"Aborting peer selection. Parent Job went away."<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="8" pos:column="9">delete<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">psstate<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="12" pos:column="5">// Bug 3243: CVE 2009-0801</comment>
    <comment type="line" pos:line="13" pos:column="5">// Bypass of browser same-origin access control in intercepted communication</comment>
    <comment type="line" pos:line="14" pos:column="5">// To resolve this we must use only the original client destination when going DIRECT</comment>
    <comment type="line" pos:line="15" pos:column="5">// on intercepted traffic which failed Host verification</comment>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">HttpRequest<pos:position pos:line="16" pos:column="22"/></name> <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></type><name pos:line="16" pos:column="24">req<pos:position pos:line="16" pos:column="27"/></name> <init pos:line="16" pos:column="28">= <expr><name><name pos:line="16" pos:column="30">psstate<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">request<pos:position pos:line="16" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">bool<pos:position pos:line="17" pos:column="15"/></name></type> <name pos:line="17" pos:column="16">isIntercepted<pos:position pos:line="17" pos:column="29"/></name> <init pos:line="17" pos:column="30">= <expr><operator pos:line="17" pos:column="32">!<pos:position pos:line="17" pos:column="33"/></operator><name><name pos:line="17" pos:column="33">req<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">flags<pos:position pos:line="17" pos:column="43"/></name><operator pos:line="17" pos:column="43">.<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="44">redirected<pos:position pos:line="17" pos:column="54"/></name></name> <operator pos:line="17" pos:column="55">&amp;&amp;<pos:position pos:line="17" pos:column="65"/></operator>
                               <operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name><name pos:line="18" pos:column="33">req<pos:position pos:line="18" pos:column="36"/></name><operator pos:line="18" pos:column="36">-&gt;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="38">flags<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">.<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="44">intercepted<pos:position pos:line="18" pos:column="55"/></name></name> <operator pos:line="18" pos:column="56">||<pos:position pos:line="18" pos:column="58"/></operator> <name><name pos:line="18" pos:column="59">req<pos:position pos:line="18" pos:column="62"/></name><operator pos:line="18" pos:column="62">-&gt;<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="64">flags<pos:position pos:line="18" pos:column="69"/></name><operator pos:line="18" pos:column="69">.<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="70">interceptTproxy<pos:position pos:line="18" pos:column="85"/></name></name><operator pos:line="18" pos:column="85">)<pos:position pos:line="18" pos:column="86"/></operator></expr></init></decl>;<pos:position pos:line="18" pos:column="87"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">bool<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">useOriginalDst<pos:position pos:line="19" pos:column="30"/></name> <init pos:line="19" pos:column="31">= <expr><name><name pos:line="19" pos:column="33">Config<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">onoff<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">client_dst_passthru<pos:position pos:line="19" pos:column="65"/></name></name> <operator pos:line="19" pos:column="66">||<pos:position pos:line="19" pos:column="68"/></operator> <operator pos:line="19" pos:column="69">!<pos:position pos:line="19" pos:column="70"/></operator><name><name pos:line="19" pos:column="70">req<pos:position pos:line="19" pos:column="73"/></name><operator pos:line="19" pos:column="73">-&gt;<pos:position pos:line="19" pos:column="78"/></operator><name pos:line="19" pos:column="75">flags<pos:position pos:line="19" pos:column="80"/></name><operator pos:line="19" pos:column="80">.<pos:position pos:line="19" pos:column="81"/></operator><name pos:line="19" pos:column="81">hostVerified<pos:position pos:line="19" pos:column="93"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="94"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">bool<pos:position pos:line="20" pos:column="15"/></name></type> <name pos:line="20" pos:column="16">choseDirect<pos:position pos:line="20" pos:column="27"/></name> <init pos:line="20" pos:column="28">= <expr><name pos:line="20" pos:column="30">fs<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">&amp;&amp;<pos:position pos:line="20" pos:column="43"/></operator> <name><name pos:line="20" pos:column="36">fs<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">code<pos:position pos:line="20" pos:column="44"/></name></name> <operator pos:line="20" pos:column="45">==<pos:position pos:line="20" pos:column="47"/></operator> <name pos:line="20" pos:column="48">HIER_DIRECT<pos:position pos:line="20" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="60"/></decl_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">isIntercepted<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&amp;&amp;<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="26">useOriginalDst<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">&amp;&amp;<pos:position pos:line="21" pos:column="51"/></operator> <name pos:line="21" pos:column="44">choseDirect<pos:position pos:line="21" pos:column="55"/></name></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56"> <block pos:line="21" pos:column="57">{
        <comment type="line" pos:line="22" pos:column="9">// check the client is still around before using any of its details</comment>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name><name pos:line="23" pos:column="13">req<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">clientConnectionManager<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">valid<pos:position pos:line="23" pos:column="47"/></name></name><argument_list pos:line="23" pos:column="47">()<pos:position pos:line="23" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <block pos:line="23" pos:column="51">{
            <comment type="line" pos:line="24" pos:column="13">// construct a "result" adding the ORIGINAL_DST to the set instead of DIRECT</comment>
            <decl_stmt><decl><type><name><name pos:line="25" pos:column="13">Comm<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">::<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">ConnectionPointer<pos:position pos:line="25" pos:column="36"/></name></name></type> <name pos:line="25" pos:column="37">p<pos:position pos:line="25" pos:column="38"/></name> <init pos:line="25" pos:column="39">= <expr><operator pos:line="25" pos:column="41">new<pos:position pos:line="25" pos:column="44"/></operator> <call><name><name pos:line="25" pos:column="45">Comm<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">::<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">Connection<pos:position pos:line="25" pos:column="61"/></name></name><argument_list pos:line="25" pos:column="61">()<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="64"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">p<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">remote<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name><name pos:line="26" pos:column="25">req<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">-&gt;<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="30">clientConnectionManager<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">-&gt;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="55">clientConnection<pos:position pos:line="26" pos:column="71"/></name><operator pos:line="26" pos:column="71">-&gt;<pos:position pos:line="26" pos:column="76"/></operator><name pos:line="26" pos:column="73">local<pos:position pos:line="26" pos:column="78"/></name></name></expr>;<pos:position pos:line="26" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">p<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">peerType<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">ORIGINAL_DST<pos:position pos:line="27" pos:column="39"/></name></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt> <comment type="line" pos:line="27" pos:column="41">// fs-&gt;code is DIRECT. This fixes the display.</comment>
            <expr_stmt><expr><call><name><name pos:line="28" pos:column="13">p<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">setPeer<pos:position pos:line="28" pos:column="23"/></name></name><argument_list pos:line="28" pos:column="23">(<argument><expr><call><name><name pos:line="28" pos:column="24">fs<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">_peer<pos:position pos:line="28" pos:column="33"/></name><operator pos:line="28" pos:column="33">.<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">get<pos:position pos:line="28" pos:column="37"/></name></name><argument_list pos:line="28" pos:column="37">()<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>

            <comment type="line" pos:line="30" pos:column="13">// check for a configured outgoing address for this destination...</comment>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">getOutgoingAddress<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name><name pos:line="31" pos:column="32">psstate<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">request<pos:position pos:line="31" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="50">p<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">psstate<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">paths<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">push_back<pos:position pos:line="32" pos:column="38"/></name></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name pos:line="32" pos:column="39">p<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="35" pos:column="9">// clear the used fs and continue</comment>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">psstate<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">servers<pos:position pos:line="36" pos:column="25"/></name></name> <operator pos:line="36" pos:column="26">=<pos:position pos:line="36" pos:column="27"/></operator> <name><name pos:line="36" pos:column="28">fs<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">next<pos:position pos:line="36" pos:column="36"/></name></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="37" pos:column="9">delete<pos:position pos:line="37" pos:column="15"/></operator> <name pos:line="37" pos:column="16">fs<pos:position pos:line="37" pos:column="18"/></name></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">peerSelectDnsPaths<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">psstate<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
        <return pos:line="39" pos:column="9">return;<pos:position pos:line="39" pos:column="16"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="42" pos:column="5">// convert the list of FwdServer destinations into destinations IP addresses</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">fs<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">&amp;&amp;<pos:position pos:line="43" pos:column="22"/></operator> <call><name><name pos:line="43" pos:column="15">psstate<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">paths<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">size<pos:position pos:line="43" pos:column="35"/></name></name><argument_list pos:line="43" pos:column="35">()<pos:position pos:line="43" pos:column="37"/></argument_list></call> <operator pos:line="43" pos:column="38">&lt;<pos:position pos:line="43" pos:column="42"/></operator> <operator pos:line="43" pos:column="40">(<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="41">unsigned<pos:position pos:line="43" pos:column="49"/></name> <name pos:line="43" pos:column="50">int<pos:position pos:line="43" pos:column="53"/></name><operator pos:line="43" pos:column="53">)<pos:position pos:line="43" pos:column="54"/></operator><name><name pos:line="43" pos:column="54">Config<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">.<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="61">forward_max_tries<pos:position pos:line="43" pos:column="78"/></name></name></expr>)<pos:position pos:line="43" pos:column="79"/></condition><then pos:line="43" pos:column="79"> <block pos:line="43" pos:column="80">{
        <comment type="line" pos:line="44" pos:column="9">// send the next one off for DNS lookup.</comment>
        <decl_stmt><decl><type><specifier pos:line="45" pos:column="9">const<pos:position pos:line="45" pos:column="14"/></specifier> <name pos:line="45" pos:column="15">char<pos:position pos:line="45" pos:column="19"/></name> <modifier pos:line="45" pos:column="20">*<pos:position pos:line="45" pos:column="21"/></modifier></type><name pos:line="45" pos:column="21">host<pos:position pos:line="45" pos:column="25"/></name> <init pos:line="45" pos:column="26">= <expr><ternary><condition><expr><call><name><name pos:line="45" pos:column="28">fs<pos:position pos:line="45" pos:column="30"/></name><operator pos:line="45" pos:column="30">-&gt;<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="32">_peer<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">valid<pos:position pos:line="45" pos:column="43"/></name></name><argument_list pos:line="45" pos:column="43">()<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr> ?<pos:position pos:line="45" pos:column="47"/></condition><then pos:line="45" pos:column="47"> <expr><name><name pos:line="45" pos:column="48">fs<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">-&gt;<pos:position pos:line="45" pos:column="55"/></operator><name pos:line="45" pos:column="52">_peer<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">-&gt;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="59">host<pos:position pos:line="45" pos:column="63"/></name></name></expr> <pos:position pos:line="45" pos:column="64"/></then><else pos:line="45" pos:column="64">: <expr><call><name><name pos:line="45" pos:column="66">psstate<pos:position pos:line="45" pos:column="73"/></name><operator pos:line="45" pos:column="73">-&gt;<pos:position pos:line="45" pos:column="78"/></operator><name pos:line="45" pos:column="75">request<pos:position pos:line="45" pos:column="82"/></name><operator pos:line="45" pos:column="82">-&gt;<pos:position pos:line="45" pos:column="87"/></operator><name pos:line="45" pos:column="84">url<pos:position pos:line="45" pos:column="87"/></name><operator pos:line="45" pos:column="87">.<pos:position pos:line="45" pos:column="88"/></operator><name pos:line="45" pos:column="88">host<pos:position pos:line="45" pos:column="92"/></name></name><argument_list pos:line="45" pos:column="92">()<pos:position pos:line="45" pos:column="94"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="45" pos:column="95"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">debugs<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">44<pos:position pos:line="46" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="20">2<pos:position pos:line="46" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"Find IP destination for: "<pos:position pos:line="46" pos:column="50"/></literal> <operator pos:line="46" pos:column="51">&lt;&lt;<pos:position pos:line="46" pos:column="59"/></operator> <call><name><name pos:line="46" pos:column="54">psstate<pos:position pos:line="46" pos:column="61"/></name><operator pos:line="46" pos:column="61">-&gt;<pos:position pos:line="46" pos:column="66"/></operator><name pos:line="46" pos:column="63">url<pos:position pos:line="46" pos:column="66"/></name></name><argument_list pos:line="46" pos:column="66">()<pos:position pos:line="46" pos:column="68"/></argument_list></call> <operator pos:line="46" pos:column="69">&lt;&lt;<pos:position pos:line="46" pos:column="77"/></operator> <literal type="string" pos:line="46" pos:column="72">"' via "<pos:position pos:line="46" pos:column="80"/></literal> <operator pos:line="46" pos:column="81">&lt;&lt;<pos:position pos:line="46" pos:column="89"/></operator> <name pos:line="46" pos:column="84">host<pos:position pos:line="46" pos:column="88"/></name></expr></argument>)<pos:position pos:line="46" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ipcache_nbgethostbyname<pos:position pos:line="47" pos:column="32"/></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">host<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="39">peerSelectDnsResults<pos:position pos:line="47" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="61">psstate<pos:position pos:line="47" pos:column="68"/></name></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt>
        <return pos:line="48" pos:column="9">return;<pos:position pos:line="48" pos:column="16"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="51" pos:column="5">// Bug 3605: clear any extra listed FwdServer destinations, when the options exceeds max_foward_tries.</comment>
    <comment type="line" pos:line="52" pos:column="5">// due to the allocation method of fs, we must deallocate each manually.</comment>
    <comment type="line" pos:line="53" pos:column="5">// TODO: use a std::list so we can get the size and abort adding whenever the selection loops reach Config.forward_max_tries</comment>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">fs<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">&amp;&amp;<pos:position pos:line="54" pos:column="22"/></operator> <call><name><name pos:line="54" pos:column="15">psstate<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">-&gt;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="24">paths<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">size<pos:position pos:line="54" pos:column="35"/></name></name><argument_list pos:line="54" pos:column="35">()<pos:position pos:line="54" pos:column="37"/></argument_list></call> <operator pos:line="54" pos:column="38">&gt;=<pos:position pos:line="54" pos:column="43"/></operator> <operator pos:line="54" pos:column="41">(<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="42">unsigned<pos:position pos:line="54" pos:column="50"/></name> <name pos:line="54" pos:column="51">int<pos:position pos:line="54" pos:column="54"/></name><operator pos:line="54" pos:column="54">)<pos:position pos:line="54" pos:column="55"/></operator><name><name pos:line="54" pos:column="55">Config<pos:position pos:line="54" pos:column="61"/></name><operator pos:line="54" pos:column="61">.<pos:position pos:line="54" pos:column="62"/></operator><name pos:line="54" pos:column="62">forward_max_tries<pos:position pos:line="54" pos:column="79"/></name></name></expr>)<pos:position pos:line="54" pos:column="80"/></condition><then pos:line="54" pos:column="80"> <block pos:line="54" pos:column="81">{
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">assert<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">fs<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">==<pos:position pos:line="55" pos:column="21"/></operator> <name><name pos:line="55" pos:column="22">psstate<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">servers<pos:position pos:line="55" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="40"/></expr_stmt>
        <while pos:line="56" pos:column="9">while <condition pos:line="56" pos:column="15">(<expr><name pos:line="56" pos:column="16">fs<pos:position pos:line="56" pos:column="18"/></name></expr>)<pos:position pos:line="56" pos:column="19"/></condition> <block pos:line="56" pos:column="20">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">psstate<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">servers<pos:position pos:line="57" pos:column="29"/></name></name> <operator pos:line="57" pos:column="30">=<pos:position pos:line="57" pos:column="31"/></operator> <name><name pos:line="57" pos:column="32">fs<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">next<pos:position pos:line="57" pos:column="40"/></name></name></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="58" pos:column="13">delete<pos:position pos:line="58" pos:column="19"/></operator> <name pos:line="58" pos:column="20">fs<pos:position pos:line="58" pos:column="22"/></name></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">fs<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <name><name pos:line="59" pos:column="18">psstate<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-&gt;<pos:position pos:line="59" pos:column="30"/></operator><name pos:line="59" pos:column="27">servers<pos:position pos:line="59" pos:column="34"/></name></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></while>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="63" pos:column="5">// done with DNS lookups. pass back to caller</comment>
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">PSC<pos:position pos:line="64" pos:column="8"/></name> <modifier pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></modifier></type><name pos:line="64" pos:column="10">callback<pos:position pos:line="64" pos:column="18"/></name> <init pos:line="64" pos:column="19">= <expr><name><name pos:line="64" pos:column="21">psstate<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">callback<pos:position pos:line="64" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="64" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="65" pos:column="5">psstate<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">-&gt;<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="14">callback<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <name pos:line="65" pos:column="25">NULL<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="67" pos:column="5">debugs<pos:position pos:line="67" pos:column="11"/></name><argument_list pos:line="67" pos:column="11">(<argument><expr><literal type="number" pos:line="67" pos:column="12">44<pos:position pos:line="67" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="16">2<pos:position pos:line="67" pos:column="17"/></literal></expr></argument>, <argument><expr><operator pos:line="67" pos:column="19">(<pos:position pos:line="67" pos:column="20"/></operator><ternary><condition><expr><call><name><name pos:line="67" pos:column="20">psstate<pos:position pos:line="67" pos:column="27"/></name><operator pos:line="67" pos:column="27">-&gt;<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="29">paths<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">size<pos:position pos:line="67" pos:column="40"/></name></name><argument_list pos:line="67" pos:column="40">()<pos:position pos:line="67" pos:column="42"/></argument_list></call><operator pos:line="67" pos:column="42">&lt;<pos:position pos:line="67" pos:column="46"/></operator><literal type="number" pos:line="67" pos:column="43">1<pos:position pos:line="67" pos:column="44"/></literal></expr>?<pos:position pos:line="67" pos:column="45"/></condition><then><expr><literal type="string" pos:line="67" pos:column="45">"Failed to select source"<pos:position pos:line="67" pos:column="70"/></literal></expr></then><else pos:line="67" pos:column="70">:<expr><literal type="string" pos:line="67" pos:column="71">"Found sources"<pos:position pos:line="67" pos:column="86"/></literal></expr></else></ternary><operator pos:line="67" pos:column="86">)<pos:position pos:line="67" pos:column="87"/></operator> <operator pos:line="67" pos:column="88">&lt;&lt;<pos:position pos:line="67" pos:column="96"/></operator> <literal type="string" pos:line="67" pos:column="91">" for '"<pos:position pos:line="67" pos:column="99"/></literal> <operator pos:line="67" pos:column="100">&lt;&lt;<pos:position pos:line="67" pos:column="108"/></operator> <call><name><name pos:line="67" pos:column="103">psstate<pos:position pos:line="67" pos:column="110"/></name><operator pos:line="67" pos:column="110">-&gt;<pos:position pos:line="67" pos:column="115"/></operator><name pos:line="67" pos:column="112">url<pos:position pos:line="67" pos:column="115"/></name></name><argument_list pos:line="67" pos:column="115">()<pos:position pos:line="67" pos:column="117"/></argument_list></call> <operator pos:line="67" pos:column="118">&lt;&lt;<pos:position pos:line="67" pos:column="126"/></operator> <literal type="string" pos:line="67" pos:column="121">"'"<pos:position pos:line="67" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="126"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">debugs<pos:position pos:line="68" pos:column="11"/></name><argument_list pos:line="68" pos:column="11">(<argument><expr><literal type="number" pos:line="68" pos:column="12">44<pos:position pos:line="68" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="16">2<pos:position pos:line="68" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="19">"  always_direct = "<pos:position pos:line="68" pos:column="39"/></literal> <operator pos:line="68" pos:column="40">&lt;&lt;<pos:position pos:line="68" pos:column="48"/></operator> <name><name pos:line="68" pos:column="43">psstate<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">-&gt;<pos:position pos:line="68" pos:column="55"/></operator><name pos:line="68" pos:column="52">always_direct<pos:position pos:line="68" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">debugs<pos:position pos:line="69" pos:column="11"/></name><argument_list pos:line="69" pos:column="11">(<argument><expr><literal type="number" pos:line="69" pos:column="12">44<pos:position pos:line="69" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="16">2<pos:position pos:line="69" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="19">"   never_direct = "<pos:position pos:line="69" pos:column="39"/></literal> <operator pos:line="69" pos:column="40">&lt;&lt;<pos:position pos:line="69" pos:column="48"/></operator> <name><name pos:line="69" pos:column="43">psstate<pos:position pos:line="69" pos:column="50"/></name><operator pos:line="69" pos:column="50">-&gt;<pos:position pos:line="69" pos:column="55"/></operator><name pos:line="69" pos:column="52">never_direct<pos:position pos:line="69" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="66"/></expr_stmt>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name><name pos:line="70" pos:column="9">psstate<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">-&gt;<pos:position pos:line="70" pos:column="21"/></operator><name pos:line="70" pos:column="18">paths<pos:position pos:line="70" pos:column="23"/></name></name></expr>)<pos:position pos:line="70" pos:column="24"/></condition><then pos:line="70" pos:column="24"> <block pos:line="70" pos:column="25">{
        <for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">(<init><decl><type><name pos:line="71" pos:column="14">size_t<pos:position pos:line="71" pos:column="20"/></name></type> <name pos:line="71" pos:column="21">i<pos:position pos:line="71" pos:column="22"/></name> <init pos:line="71" pos:column="23">= <expr><literal type="number" pos:line="71" pos:column="25">0<pos:position pos:line="71" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="71" pos:column="27"/></init> <condition><expr><name pos:line="71" pos:column="28">i<pos:position pos:line="71" pos:column="29"/></name> <operator pos:line="71" pos:column="30">&lt;<pos:position pos:line="71" pos:column="34"/></operator> <call><name><name pos:line="71" pos:column="32">psstate<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">-&gt;<pos:position pos:line="71" pos:column="44"/></operator><name pos:line="71" pos:column="41">paths<pos:position pos:line="71" pos:column="46"/></name><operator pos:line="71" pos:column="46">-&gt;<pos:position pos:line="71" pos:column="51"/></operator><name pos:line="71" pos:column="48">size<pos:position pos:line="71" pos:column="52"/></name></name><argument_list pos:line="71" pos:column="52">()<pos:position pos:line="71" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="55"/></condition> <incr><expr><operator pos:line="71" pos:column="56">++<pos:position pos:line="71" pos:column="58"/></operator><name pos:line="71" pos:column="58">i<pos:position pos:line="71" pos:column="59"/></name></expr></incr>)<pos:position pos:line="71" pos:column="60"/></control> <block pos:line="71" pos:column="61">{
            <if pos:line="72" pos:column="13">if <condition pos:line="72" pos:column="16">(<expr><operator pos:line="72" pos:column="17">(<pos:position pos:line="72" pos:column="18"/></operator><operator pos:line="72" pos:column="18">*<pos:position pos:line="72" pos:column="19"/></operator><name><name pos:line="72" pos:column="19">psstate<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">paths<pos:position pos:line="72" pos:column="33"/></name></name><operator pos:line="72" pos:column="33">)<pos:position pos:line="72" pos:column="34"/></operator><index pos:line="72" pos:column="34">[<expr><name pos:line="72" pos:column="35">i<pos:position pos:line="72" pos:column="36"/></name></expr>]<pos:position pos:line="72" pos:column="37"/></index><operator pos:line="72" pos:column="37">-&gt;<pos:position pos:line="72" pos:column="42"/></operator><name pos:line="72" pos:column="39">peerType<pos:position pos:line="72" pos:column="47"/></name> <operator pos:line="72" pos:column="48">==<pos:position pos:line="72" pos:column="50"/></operator> <name pos:line="72" pos:column="51">HIER_DIRECT<pos:position pos:line="72" pos:column="62"/></name></expr>)<pos:position pos:line="72" pos:column="63"/></condition><then pos:line="72" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="17">debugs<pos:position pos:line="73" pos:column="23"/></name><argument_list pos:line="73" pos:column="23">(<argument><expr><literal type="number" pos:line="73" pos:column="24">44<pos:position pos:line="73" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="28">2<pos:position pos:line="73" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="31">"         DIRECT = "<pos:position pos:line="73" pos:column="51"/></literal> <operator pos:line="73" pos:column="52">&lt;&lt;<pos:position pos:line="73" pos:column="60"/></operator> <operator pos:line="73" pos:column="55">(<pos:position pos:line="73" pos:column="56"/></operator><operator pos:line="73" pos:column="56">*<pos:position pos:line="73" pos:column="57"/></operator><name><name pos:line="73" pos:column="57">psstate<pos:position pos:line="73" pos:column="64"/></name><operator pos:line="73" pos:column="64">-&gt;<pos:position pos:line="73" pos:column="69"/></operator><name pos:line="73" pos:column="66">paths<pos:position pos:line="73" pos:column="71"/></name></name><operator pos:line="73" pos:column="71">)<pos:position pos:line="73" pos:column="72"/></operator><index pos:line="73" pos:column="72">[<expr><name pos:line="73" pos:column="73">i<pos:position pos:line="73" pos:column="74"/></name></expr>]<pos:position pos:line="73" pos:column="75"/></index></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="77"/></expr_stmt></block></then>
            <elseif pos:line="74" pos:column="13">else <if pos:line="74" pos:column="18">if <condition pos:line="74" pos:column="21">(<expr><operator pos:line="74" pos:column="22">(<pos:position pos:line="74" pos:column="23"/></operator><operator pos:line="74" pos:column="23">*<pos:position pos:line="74" pos:column="24"/></operator><name><name pos:line="74" pos:column="24">psstate<pos:position pos:line="74" pos:column="31"/></name><operator pos:line="74" pos:column="31">-&gt;<pos:position pos:line="74" pos:column="36"/></operator><name pos:line="74" pos:column="33">paths<pos:position pos:line="74" pos:column="38"/></name></name><operator pos:line="74" pos:column="38">)<pos:position pos:line="74" pos:column="39"/></operator><index pos:line="74" pos:column="39">[<expr><name pos:line="74" pos:column="40">i<pos:position pos:line="74" pos:column="41"/></name></expr>]<pos:position pos:line="74" pos:column="42"/></index><operator pos:line="74" pos:column="42">-&gt;<pos:position pos:line="74" pos:column="47"/></operator><name pos:line="74" pos:column="44">peerType<pos:position pos:line="74" pos:column="52"/></name> <operator pos:line="74" pos:column="53">==<pos:position pos:line="74" pos:column="55"/></operator> <name pos:line="74" pos:column="56">ORIGINAL_DST<pos:position pos:line="74" pos:column="68"/></name></expr>)<pos:position pos:line="74" pos:column="69"/></condition><then pos:line="74" pos:column="69">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="17">debugs<pos:position pos:line="75" pos:column="23"/></name><argument_list pos:line="75" pos:column="23">(<argument><expr><literal type="number" pos:line="75" pos:column="24">44<pos:position pos:line="75" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="28">2<pos:position pos:line="75" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="31">"   ORIGINAL_DST = "<pos:position pos:line="75" pos:column="51"/></literal> <operator pos:line="75" pos:column="52">&lt;&lt;<pos:position pos:line="75" pos:column="60"/></operator> <operator pos:line="75" pos:column="55">(<pos:position pos:line="75" pos:column="56"/></operator><operator pos:line="75" pos:column="56">*<pos:position pos:line="75" pos:column="57"/></operator><name><name pos:line="75" pos:column="57">psstate<pos:position pos:line="75" pos:column="64"/></name><operator pos:line="75" pos:column="64">-&gt;<pos:position pos:line="75" pos:column="69"/></operator><name pos:line="75" pos:column="66">paths<pos:position pos:line="75" pos:column="71"/></name></name><operator pos:line="75" pos:column="71">)<pos:position pos:line="75" pos:column="72"/></operator><index pos:line="75" pos:column="72">[<expr><name pos:line="75" pos:column="73">i<pos:position pos:line="75" pos:column="74"/></name></expr>]<pos:position pos:line="75" pos:column="75"/></index></expr></argument>)<pos:position pos:line="75" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="77"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="76" pos:column="13">else <if pos:line="76" pos:column="18">if <condition pos:line="76" pos:column="21">(<expr><operator pos:line="76" pos:column="22">(<pos:position pos:line="76" pos:column="23"/></operator><operator pos:line="76" pos:column="23">*<pos:position pos:line="76" pos:column="24"/></operator><name><name pos:line="76" pos:column="24">psstate<pos:position pos:line="76" pos:column="31"/></name><operator pos:line="76" pos:column="31">-&gt;<pos:position pos:line="76" pos:column="36"/></operator><name pos:line="76" pos:column="33">paths<pos:position pos:line="76" pos:column="38"/></name></name><operator pos:line="76" pos:column="38">)<pos:position pos:line="76" pos:column="39"/></operator><index pos:line="76" pos:column="39">[<expr><name pos:line="76" pos:column="40">i<pos:position pos:line="76" pos:column="41"/></name></expr>]<pos:position pos:line="76" pos:column="42"/></index><operator pos:line="76" pos:column="42">-&gt;<pos:position pos:line="76" pos:column="47"/></operator><name pos:line="76" pos:column="44">peerType<pos:position pos:line="76" pos:column="52"/></name> <operator pos:line="76" pos:column="53">==<pos:position pos:line="76" pos:column="55"/></operator> <name pos:line="76" pos:column="56">PINNED<pos:position pos:line="76" pos:column="62"/></name></expr>)<pos:position pos:line="76" pos:column="63"/></condition><then pos:line="76" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="17">debugs<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><literal type="number" pos:line="77" pos:column="24">44<pos:position pos:line="77" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="28">2<pos:position pos:line="77" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="31">"         PINNED = "<pos:position pos:line="77" pos:column="51"/></literal> <operator pos:line="77" pos:column="52">&lt;&lt;<pos:position pos:line="77" pos:column="60"/></operator> <operator pos:line="77" pos:column="55">(<pos:position pos:line="77" pos:column="56"/></operator><operator pos:line="77" pos:column="56">*<pos:position pos:line="77" pos:column="57"/></operator><name><name pos:line="77" pos:column="57">psstate<pos:position pos:line="77" pos:column="64"/></name><operator pos:line="77" pos:column="64">-&gt;<pos:position pos:line="77" pos:column="69"/></operator><name pos:line="77" pos:column="66">paths<pos:position pos:line="77" pos:column="71"/></name></name><operator pos:line="77" pos:column="71">)<pos:position pos:line="77" pos:column="72"/></operator><index pos:line="77" pos:column="72">[<expr><name pos:line="77" pos:column="73">i<pos:position pos:line="77" pos:column="74"/></name></expr>]<pos:position pos:line="77" pos:column="75"/></index></expr></argument>)<pos:position pos:line="77" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="77"/></expr_stmt></block></then></if></elseif>
            <else pos:line="78" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">debugs<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><literal type="number" pos:line="79" pos:column="24">44<pos:position pos:line="79" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="28">2<pos:position pos:line="79" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="31">"     cache_peer = "<pos:position pos:line="79" pos:column="51"/></literal> <operator pos:line="79" pos:column="52">&lt;&lt;<pos:position pos:line="79" pos:column="60"/></operator> <operator pos:line="79" pos:column="55">(<pos:position pos:line="79" pos:column="56"/></operator><operator pos:line="79" pos:column="56">*<pos:position pos:line="79" pos:column="57"/></operator><name><name pos:line="79" pos:column="57">psstate<pos:position pos:line="79" pos:column="64"/></name><operator pos:line="79" pos:column="64">-&gt;<pos:position pos:line="79" pos:column="69"/></operator><name pos:line="79" pos:column="66">paths<pos:position pos:line="79" pos:column="71"/></name></name><operator pos:line="79" pos:column="71">)<pos:position pos:line="79" pos:column="72"/></operator><index pos:line="79" pos:column="72">[<expr><name pos:line="79" pos:column="73">i<pos:position pos:line="79" pos:column="74"/></name></expr>]<pos:position pos:line="79" pos:column="75"/></index></expr></argument>)<pos:position pos:line="79" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="77"/></expr_stmt></block></else></if>
        }<pos:position pos:line="80" pos:column="10"/></block></for>
    }<pos:position pos:line="81" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">debugs<pos:position pos:line="82" pos:column="11"/></name><argument_list pos:line="82" pos:column="11">(<argument><expr><literal type="number" pos:line="82" pos:column="12">44<pos:position pos:line="82" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="82" pos:column="16">2<pos:position pos:line="82" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="19">"       timedout = "<pos:position pos:line="82" pos:column="39"/></literal> <operator pos:line="82" pos:column="40">&lt;&lt;<pos:position pos:line="82" pos:column="48"/></operator> <name><name pos:line="82" pos:column="43">psstate<pos:position pos:line="82" pos:column="50"/></name><operator pos:line="82" pos:column="50">-&gt;<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="52">ping<pos:position pos:line="82" pos:column="56"/></name><operator pos:line="82" pos:column="56">.<pos:position pos:line="82" pos:column="57"/></operator><name pos:line="82" pos:column="57">timedout<pos:position pos:line="82" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="84" pos:column="5">psstate<pos:position pos:line="84" pos:column="12"/></name><operator pos:line="84" pos:column="12">-&gt;<pos:position pos:line="84" pos:column="17"/></operator><name pos:line="84" pos:column="14">ping<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">.<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="19">stop<pos:position pos:line="84" pos:column="23"/></name></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <name pos:line="84" pos:column="26">current_time<pos:position pos:line="84" pos:column="38"/></name></expr>;<pos:position pos:line="84" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="85" pos:column="5">psstate<pos:position pos:line="85" pos:column="12"/></name><operator pos:line="85" pos:column="12">-&gt;<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="14">request<pos:position pos:line="85" pos:column="21"/></name><operator pos:line="85" pos:column="21">-&gt;<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="23">hier<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">.<pos:position pos:line="85" pos:column="28"/></operator><name pos:line="85" pos:column="28">ping<pos:position pos:line="85" pos:column="32"/></name></name> <operator pos:line="85" pos:column="33">=<pos:position pos:line="85" pos:column="34"/></operator> <name><name pos:line="85" pos:column="35">psstate<pos:position pos:line="85" pos:column="42"/></name><operator pos:line="85" pos:column="42">-&gt;<pos:position pos:line="85" pos:column="47"/></operator><name pos:line="85" pos:column="44">ping<pos:position pos:line="85" pos:column="48"/></name></name></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="87" pos:column="5">void<pos:position pos:line="87" pos:column="9"/></name> <modifier pos:line="87" pos:column="10">*<pos:position pos:line="87" pos:column="11"/></modifier></type><name pos:line="87" pos:column="11">cbdata<pos:position pos:line="87" pos:column="17"/></name></decl>;<pos:position pos:line="87" pos:column="18"/></decl_stmt>
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><call><name pos:line="88" pos:column="9">cbdataReferenceValidDone<pos:position pos:line="88" pos:column="33"/></name><argument_list pos:line="88" pos:column="33">(<argument><expr><name><name pos:line="88" pos:column="34">psstate<pos:position pos:line="88" pos:column="41"/></name><operator pos:line="88" pos:column="41">-&gt;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="43">callback_data<pos:position pos:line="88" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="58">&amp;<pos:position pos:line="88" pos:column="63"/></operator><name pos:line="88" pos:column="59">cbdata<pos:position pos:line="88" pos:column="65"/></name></expr></argument>)<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="88" pos:column="67"/></condition><then pos:line="88" pos:column="67"> <block pos:line="88" pos:column="68">{
        <expr_stmt><expr><call><name pos:line="89" pos:column="9">callback<pos:position pos:line="89" pos:column="17"/></name><argument_list pos:line="89" pos:column="17">(<argument><expr><name><name pos:line="89" pos:column="18">psstate<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">-&gt;<pos:position pos:line="89" pos:column="30"/></operator><name pos:line="89" pos:column="27">paths<pos:position pos:line="89" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="34">psstate<pos:position pos:line="89" pos:column="41"/></name><operator pos:line="89" pos:column="41">-&gt;<pos:position pos:line="89" pos:column="46"/></operator><name pos:line="89" pos:column="43">lastError<pos:position pos:line="89" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="54">cbdata<pos:position pos:line="89" pos:column="60"/></name></expr></argument>)<pos:position pos:line="89" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">psstate<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">lastError<pos:position pos:line="90" pos:column="27"/></name></name> <operator pos:line="90" pos:column="28">=<pos:position pos:line="90" pos:column="29"/></operator> <name pos:line="90" pos:column="30">NULL<pos:position pos:line="90" pos:column="34"/></name></expr>;<pos:position pos:line="90" pos:column="35"/></expr_stmt> <comment type="line" pos:line="90" pos:column="36">// FwdState has taken control over the ErrorState object.</comment>
    }<pos:position pos:line="91" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="93" pos:column="5">delete<pos:position pos:line="93" pos:column="11"/></operator> <name pos:line="93" pos:column="12">psstate<pos:position pos:line="93" pos:column="19"/></name></expr>;<pos:position pos:line="93" pos:column="20"/></expr_stmt>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_857_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">comm_open<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">sock_type<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="3" pos:column="11">int<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">proto<pos:position pos:line="3" pos:column="20"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="4" pos:column="11">IpAddress<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">&amp;<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="22">addr<pos:position pos:line="4" pos:column="26"/></name></decl></parameter>,
          <parameter><decl><type><name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">flags<pos:position pos:line="5" pos:column="20"/></name></decl></parameter>,
          <parameter><decl><type><specifier pos:line="6" pos:column="11">const<pos:position pos:line="6" pos:column="16"/></specifier> <name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">note<pos:position pos:line="6" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="28"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <return pos:line="8" pos:column="5">return <expr><call><name pos:line="8" pos:column="12">comm_openex<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">sock_type<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">proto<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">addr<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">flags<pos:position pos:line="8" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="55">0<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="58">note<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4005_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">swanSong<pos:position pos:line="1" pos:column="41"/></name></name><parameter_list pos:line="1" pos:column="41">()<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// kids should sing first and then call the parent method.</comment>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">closeConnection<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt> <comment type="line" pos:line="5" pos:column="24">// TODO: rename because we do not always close</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">readBuf<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">isNull<pos:position pos:line="7" pos:column="24"/></name></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">readBuf<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">clean<pos:position pos:line="8" pos:column="22"/></name></name><argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">commBuf<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">memFreeBuf<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">commBufSize<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="33">commBuf<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">tellQueryAborted<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">()<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">maybeLog<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">()<pos:position pos:line="15" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">Adaptation<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">::<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">Initiate<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">::<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">swanSong<pos:position pos:line="17" pos:column="35"/></name></name><argument_list pos:line="17" pos:column="35">()<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4048_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">validate200Ok<pos:position pos:line="1" pos:column="46"/></name></name><parameter_list pos:line="1" pos:column="46">()<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name><name pos:line="3" pos:column="9">ICAP<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">::<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">methodRespmod<pos:position pos:line="3" pos:column="28"/></name></name> <operator pos:line="3" pos:column="29">==<pos:position pos:line="3" pos:column="31"/></operator> <call><name pos:line="3" pos:column="32">service<pos:position pos:line="3" pos:column="39"/></name><argument_list pos:line="3" pos:column="39">()<pos:position pos:line="3" pos:column="41"/></argument_list></call><operator pos:line="3" pos:column="41">.<pos:position pos:line="3" pos:column="42"/></operator><call><name pos:line="3" pos:column="42">cfg<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">()<pos:position pos:line="3" pos:column="47"/></argument_list></call><operator pos:line="3" pos:column="47">.<pos:position pos:line="3" pos:column="48"/></operator><name pos:line="3" pos:column="48">method<pos:position pos:line="3" pos:column="54"/></name></expr>)<pos:position pos:line="3" pos:column="55"/></condition><then pos:line="3" pos:column="55"> <block pos:line="3" pos:column="56">{
        <if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><call><name pos:line="4" pos:column="14">gotEncapsulated<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><literal type="string" pos:line="4" pos:column="30">"res-hdr"<pos:position pos:line="4" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41">
            <block type="pseudo"><return pos:line="5" pos:column="13">return <expr><literal type="boolean" pos:line="5" pos:column="20">false<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return></block></then></if>

        <return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">true<pos:position pos:line="7" pos:column="20"/></literal></expr>;<pos:position pos:line="7" pos:column="21"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">ICAP<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">::<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">methodReqmod<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">==<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">service<pos:position pos:line="10" pos:column="38"/></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><call><name pos:line="10" pos:column="41">cfg<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">()<pos:position pos:line="10" pos:column="46"/></argument_list></call><operator pos:line="10" pos:column="46">.<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="47">method<pos:position pos:line="10" pos:column="53"/></name></expr>)<pos:position pos:line="10" pos:column="54"/></condition><then pos:line="10" pos:column="54"> <block pos:line="10" pos:column="55">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">gotEncapsulated<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><literal type="string" pos:line="11" pos:column="30">"res-hdr"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call> <operator pos:line="11" pos:column="41">&amp;&amp;<pos:position pos:line="11" pos:column="51"/></operator> <operator pos:line="11" pos:column="44">!<pos:position pos:line="11" pos:column="45"/></operator><call><name pos:line="11" pos:column="45">gotEncapsulated<pos:position pos:line="11" pos:column="60"/></name><argument_list pos:line="11" pos:column="60">(<argument><expr><literal type="string" pos:line="11" pos:column="61">"req-hdr"<pos:position pos:line="11" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="72"/></condition><then pos:line="11" pos:column="72">
            <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><literal type="boolean" pos:line="12" pos:column="20">false<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

        <return pos:line="14" pos:column="9">return <expr><literal type="boolean" pos:line="14" pos:column="16">true<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <return pos:line="17" pos:column="5">return <expr><literal type="boolean" pos:line="17" pos:column="12">false<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

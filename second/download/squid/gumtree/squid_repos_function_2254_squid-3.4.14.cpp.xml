<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2254_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ServerStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">serverComplete<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">11<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>,<argument><expr><name pos:line="4" pos:column="17">HERE<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&lt;&lt;<pos:position pos:line="4" pos:column="30"/></operator> <literal type="string" pos:line="4" pos:column="25">"serverComplete "<pos:position pos:line="4" pos:column="42"/></literal> <operator pos:line="4" pos:column="43">&lt;&lt;<pos:position pos:line="4" pos:column="51"/></operator> <name pos:line="4" pos:column="46">this<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="52"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">doneWithServer<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">()<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">closeServer<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">()<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><call><name pos:line="8" pos:column="16">doneWithServer<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">()<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">completed<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="boolean" pos:line="11" pos:column="17">true<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">HttpRequest<pos:position pos:line="13" pos:column="16"/></name> <modifier pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></modifier></type><name pos:line="13" pos:column="18">r<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><call><name pos:line="13" pos:column="22">originalRequest<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">()<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">r<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">hier<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">.<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">total_response_time<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">=<pos:position pos:line="14" pos:column="34"/></operator> <ternary><condition><expr><name><name pos:line="14" pos:column="35">r<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">hier<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">.<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">first_conn_start<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">.<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="60">tv_sec<pos:position pos:line="14" pos:column="66"/></name></name></expr> ?<pos:position pos:line="14" pos:column="68"/></condition><then pos:line="14" pos:column="68">
                                  <expr><call><name pos:line="15" pos:column="35">tvSubMsec<pos:position pos:line="15" pos:column="44"/></name><argument_list pos:line="15" pos:column="44">(<argument><expr><name><name pos:line="15" pos:column="45">r<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">hier<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">.<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="53">first_conn_start<pos:position pos:line="15" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="71">current_time<pos:position pos:line="15" pos:column="83"/></name></expr></argument>)<pos:position pos:line="15" pos:column="84"/></argument_list></call></expr> <pos:position pos:line="15" pos:column="85"/></then><else pos:line="15" pos:column="85">: <expr><operator pos:line="15" pos:column="87">-<pos:position pos:line="15" pos:column="88"/></operator><literal type="number" pos:line="15" pos:column="88">1<pos:position pos:line="15" pos:column="89"/></literal></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="90"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">requestBodySource<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">!=<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">NULL<pos:position pos:line="17" pos:column="34"/></name></expr>)<pos:position pos:line="17" pos:column="35"/></condition><then pos:line="17" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">stopConsumingFrom<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">requestBodySource<pos:position pos:line="18" pos:column="44"/></name></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">responseBodyBuffer<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">!=<pos:position pos:line="20" pos:column="30"/></operator> <name pos:line="20" pos:column="31">NULL<pos:position pos:line="20" pos:column="35"/></name></expr>)<pos:position pos:line="20" pos:column="36"/></condition><then pos:line="20" pos:column="36">
        <block type="pseudo"><return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">serverComplete2<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">()<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

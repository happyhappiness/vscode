<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4047_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type> <name><name pos:line="1" pos:column="8">Adaptation<pos:position pos:line="1" pos:column="18"/></name><operator pos:line="1" pos:column="18">::<pos:position pos:line="1" pos:column="20"/></operator><name pos:line="1" pos:column="20">Icap<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">ModXact<pos:position pos:line="1" pos:column="33"/></name><operator pos:line="1" pos:column="33">::<pos:position pos:line="1" pos:column="35"/></operator><name pos:line="1" pos:column="35">virginContentSize<pos:position pos:line="1" pos:column="52"/></name></name><parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier> <name><name pos:line="1" pos:column="59">Adaptation<pos:position pos:line="1" pos:column="69"/></name><operator pos:line="1" pos:column="69">::<pos:position pos:line="1" pos:column="71"/></operator><name pos:line="1" pos:column="71">Icap<pos:position pos:line="1" pos:column="75"/></name><operator pos:line="1" pos:column="75">::<pos:position pos:line="1" pos:column="77"/></operator><name pos:line="1" pos:column="77">VirginBodyAct<pos:position pos:line="1" pos:column="90"/></name></name> <modifier pos:line="1" pos:column="91">&amp;<pos:position pos:line="1" pos:column="96"/></modifier></type><name pos:line="1" pos:column="92">act<pos:position pos:line="1" pos:column="95"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="96"/></parameter_list> <specifier pos:line="1" pos:column="97">const<pos:position pos:line="1" pos:column="102"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name><name pos:line="3" pos:column="10">act<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">.<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">active<pos:position pos:line="3" pos:column="20"/></name></name><argument_list pos:line="3" pos:column="20">()<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="24"/></expr_stmt>
    <comment type="line" pos:line="4" pos:column="5">// asbolute start of unprocessed data</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">uint64_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">dataStart<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><call><name><name pos:line="5" pos:column="32">act<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">.<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">offset<pos:position pos:line="5" pos:column="42"/></name></name><argument_list pos:line="5" pos:column="42">()<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
    <comment type="line" pos:line="6" pos:column="5">// absolute end of buffered data</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">uint64_t<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">dataEnd<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><name pos:line="7" pos:column="30">virginConsumed<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">+<pos:position pos:line="7" pos:column="46"/></operator> <call><name><name pos:line="7" pos:column="47">virgin<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">.<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">body_pipe<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">-&gt;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="65">buf<pos:position pos:line="7" pos:column="68"/></name></name><argument_list pos:line="7" pos:column="68">()<pos:position pos:line="7" pos:column="70"/></argument_list></call><operator pos:line="7" pos:column="70">.<pos:position pos:line="7" pos:column="71"/></operator><call><name pos:line="7" pos:column="71">contentSize<pos:position pos:line="7" pos:column="82"/></name><argument_list pos:line="7" pos:column="82">()<pos:position pos:line="7" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="85"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">virginConsumed<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">&lt;=<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="28">dataStart<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">&amp;&amp;<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="41">dataStart<pos:position pos:line="8" pos:column="50"/></name> <operator pos:line="8" pos:column="51">&lt;=<pos:position pos:line="8" pos:column="56"/></operator> <name pos:line="8" pos:column="54">dataEnd<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><cast type="static" pos:line="9" pos:column="12">static_cast<argument_list type="generic" pos:line="9" pos:column="23">&lt;<argument><expr><name pos:line="9" pos:column="24">size_t<pos:position pos:line="9" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="34"/></argument_list><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">dataEnd<pos:position pos:line="9" pos:column="39"/></name> <operator pos:line="9" pos:column="40">-<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">dataStart<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></cast></expr>;<pos:position pos:line="9" pos:column="53"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

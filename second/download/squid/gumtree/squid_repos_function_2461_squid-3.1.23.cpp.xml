<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2461_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_domain<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">( <parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">check_data<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">ASN1_STRING<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">cn_data<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type> <name><name pos:line="3" pos:column="10">cn<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><literal type="number" pos:line="3" pos:column="13">1024<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">server<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">char<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">check_data<pos:position pos:line="4" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="51"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">cn_data<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">length<pos:position pos:line="6" pos:column="24"/></name></name> <operator pos:line="6" pos:column="25">&gt;<pos:position pos:line="6" pos:column="29"/></operator> <operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">int<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator><sizeof pos:line="6" pos:column="32">sizeof<argument_list pos:line="6" pos:column="38">(<argument><expr><name pos:line="6" pos:column="39">cn<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></sizeof> <operator pos:line="6" pos:column="43">-<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="45">1<pos:position pos:line="6" pos:column="46"/></literal></expr>)<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47"> <block pos:line="6" pos:column="48">{
        <return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return> <comment type="line" pos:line="7" pos:column="19">//if does not fit our buffer just ignore</comment>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memcpy<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">cn<pos:position pos:line="9" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="16">cn_data<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">data<pos:position pos:line="9" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="31">cn_data<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">length<pos:position pos:line="9" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">cn<pos:position pos:line="10" pos:column="7"/></name><index pos:line="10" pos:column="7">[<expr><name><name pos:line="10" pos:column="8">cn_data<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">length<pos:position pos:line="10" pos:column="23"/></name></name></expr>]<pos:position pos:line="10" pos:column="24"/></index></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <literal type="char" pos:line="10" pos:column="27">'\0'<pos:position pos:line="10" pos:column="31"/></literal></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">83<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">4<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"Verifying server domain "<pos:position pos:line="11" pos:column="45"/></literal> <operator pos:line="11" pos:column="46">&lt;&lt;<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="49">server<pos:position pos:line="11" pos:column="55"/></name> <operator pos:line="11" pos:column="56">&lt;&lt;<pos:position pos:line="11" pos:column="64"/></operator> <literal type="string" pos:line="11" pos:column="59">" to certificate name/subjectAltName "<pos:position pos:line="11" pos:column="97"/></literal> <operator pos:line="11" pos:column="98">&lt;&lt;<pos:position pos:line="11" pos:column="106"/></operator> <name pos:line="11" pos:column="101">cn<pos:position pos:line="11" pos:column="103"/></name></expr></argument>)<pos:position pos:line="11" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="105"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><call><name pos:line="12" pos:column="12">matchDomainName<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">server<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="12" pos:column="36">cn<pos:position pos:line="12" pos:column="38"/></name><index pos:line="12" pos:column="38">[<expr><literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr>]<pos:position pos:line="12" pos:column="41"/></index></name> <operator pos:line="12" pos:column="42">==<pos:position pos:line="12" pos:column="44"/></operator> <literal type="char" pos:line="12" pos:column="45">'*'<pos:position pos:line="12" pos:column="48"/></literal></expr> ?<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50"> <expr><name pos:line="12" pos:column="51">cn<pos:position pos:line="12" pos:column="53"/></name> <operator pos:line="12" pos:column="54">+<pos:position pos:line="12" pos:column="55"/></operator> <literal type="number" pos:line="12" pos:column="56">1<pos:position pos:line="12" pos:column="57"/></literal></expr> <pos:position pos:line="12" pos:column="58"/></then><else pos:line="12" pos:column="58">: <expr><name pos:line="12" pos:column="60">cn<pos:position pos:line="12" pos:column="62"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

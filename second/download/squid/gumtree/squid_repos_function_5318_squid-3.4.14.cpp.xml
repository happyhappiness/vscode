<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5318_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Basic<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">Config<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">dump<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">StoreEntry<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">entry<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">name<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="65">Auth<pos:position pos:line="2" pos:column="69"/></name><operator pos:line="2" pos:column="69">::<pos:position pos:line="2" pos:column="71"/></operator><name pos:line="2" pos:column="71">Config<pos:position pos:line="2" pos:column="77"/></name></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type> <name pos:line="2" pos:column="80">scheme<pos:position pos:line="2" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="87"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">wordlist<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">list<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name pos:line="4" pos:column="22">authenticateProgram<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">storeAppendPrintf<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">entry<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="30">"%s %s"<pos:position pos:line="5" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="39">name<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="45">"basic"<pos:position pos:line="5" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="54"/></expr_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">list<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">NULL<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition> <block pos:line="7" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">entry<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">" %s"<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="41">list<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">key<pos:position pos:line="8" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">list<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name><name pos:line="9" pos:column="16">list<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">next<pos:position pos:line="9" pos:column="26"/></name></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">storeAppendPrintf<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">entry<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"\n"<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">storeAppendPrintf<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">entry<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"%s basic realm %s\n"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="53">name<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">basicAuthRealm<pos:position pos:line="14" pos:column="73"/></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">storeAppendPrintf<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">entry<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="30">"%s basic children %d startup=%d idle=%d concurrency=%d\n"<pos:position pos:line="15" pos:column="88"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="90">name<pos:position pos:line="15" pos:column="94"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="96">authenticateChildren<pos:position pos:line="15" pos:column="116"/></name><operator pos:line="15" pos:column="116">.<pos:position pos:line="15" pos:column="117"/></operator><name pos:line="15" pos:column="117">n_max<pos:position pos:line="15" pos:column="122"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="124">authenticateChildren<pos:position pos:line="15" pos:column="144"/></name><operator pos:line="15" pos:column="144">.<pos:position pos:line="15" pos:column="145"/></operator><name pos:line="15" pos:column="145">n_startup<pos:position pos:line="15" pos:column="154"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="156">authenticateChildren<pos:position pos:line="15" pos:column="176"/></name><operator pos:line="15" pos:column="176">.<pos:position pos:line="15" pos:column="177"/></operator><name pos:line="15" pos:column="177">n_idle<pos:position pos:line="15" pos:column="183"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="185">authenticateChildren<pos:position pos:line="15" pos:column="205"/></name><operator pos:line="15" pos:column="205">.<pos:position pos:line="15" pos:column="206"/></operator><name pos:line="15" pos:column="206">concurrency<pos:position pos:line="15" pos:column="217"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="218"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="219"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">storeAppendPrintf<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">entry<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="30">"%s basic credentialsttl %d seconds\n"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="70">name<pos:position pos:line="16" pos:column="74"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="76">(<pos:position pos:line="16" pos:column="77"/></operator><name pos:line="16" pos:column="77">int<pos:position pos:line="16" pos:column="80"/></name><operator pos:line="16" pos:column="80">)<pos:position pos:line="16" pos:column="81"/></operator> <name pos:line="16" pos:column="82">credentialsTTL<pos:position pos:line="16" pos:column="96"/></name></expr></argument>)<pos:position pos:line="16" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">storeAppendPrintf<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">entry<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"%s basic casesensitive %s\n"<pos:position pos:line="17" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="61">name<pos:position pos:line="17" pos:column="65"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="17" pos:column="67">casesensitive<pos:position pos:line="17" pos:column="80"/></name></expr> ?<pos:position pos:line="17" pos:column="82"/></condition><then pos:line="17" pos:column="82"> <expr><literal type="string" pos:line="17" pos:column="83">"on"<pos:position pos:line="17" pos:column="87"/></literal></expr> <pos:position pos:line="17" pos:column="88"/></then><else pos:line="17" pos:column="88">: <expr><literal type="string" pos:line="17" pos:column="90">"off"<pos:position pos:line="17" pos:column="95"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="17" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="97"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

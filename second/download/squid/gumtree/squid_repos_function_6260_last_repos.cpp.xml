<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6260_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">aioCancel<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">fd<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">squidaio_ctrl_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">ctrlp<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dlink_node<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">m<pos:position pos:line="5" pos:column="18"/></name></decl>, <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="21">next<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">DiskThreadsIOStrategy<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">::<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">Instance<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">.<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">initialised<pos:position pos:line="7" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">++<pos:position pos:line="8" pos:column="7"/></operator><name><name pos:line="8" pos:column="7">squidaio_counts<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">.<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">cancel<pos:position pos:line="8" pos:column="29"/></name></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">m<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">used_list<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">head<pos:position pos:line="10" pos:column="28"/></name></name></expr>;<pos:position pos:line="10" pos:column="29"/></init> <condition><expr><name pos:line="10" pos:column="30">m<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></condition> <incr><expr><name pos:line="10" pos:column="33">m<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">=<pos:position pos:line="10" pos:column="36"/></operator> <name pos:line="10" pos:column="37">next<pos:position pos:line="10" pos:column="41"/></name></expr></incr>)<pos:position pos:line="10" pos:column="42"/></control> <block pos:line="10" pos:column="43">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">next<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">m<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">next<pos:position pos:line="11" pos:column="23"/></name></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">ctrlp<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">squidaio_ctrl_t<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><operator pos:line="12" pos:column="35">)<pos:position pos:line="12" pos:column="36"/></operator><name><name pos:line="12" pos:column="36">m<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">data<pos:position pos:line="12" pos:column="43"/></name></name></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">ctrlp<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">fd<pos:position pos:line="14" pos:column="22"/></name></name> <operator pos:line="14" pos:column="23">!=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">fd<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29">
            <block type="pseudo"><continue pos:line="15" pos:column="13">continue;<pos:position pos:line="15" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">squidaio_cancel<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name><name pos:line="17" pos:column="26">ctrlp<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">result<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">ctrlp<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">done_handler<pos:position pos:line="19" pos:column="32"/></name></name></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
            <decl_stmt><decl><type><name pos:line="20" pos:column="13">AIOCB<pos:position pos:line="20" pos:column="18"/></name> <modifier pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></modifier></type><name pos:line="20" pos:column="20">callback<pos:position pos:line="20" pos:column="28"/></name> <init pos:line="20" pos:column="29">= <expr><name><name pos:line="20" pos:column="31">ctrlp<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">done_handler<pos:position pos:line="20" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="51"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="21" pos:column="13">void<pos:position pos:line="21" pos:column="17"/></name> <modifier pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></modifier></type><name pos:line="21" pos:column="19">cbdata<pos:position pos:line="21" pos:column="25"/></name></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">ctrlp<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">done_handler<pos:position pos:line="22" pos:column="32"/></name></name> <operator pos:line="22" pos:column="33">=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">NULL<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="23" pos:column="13">debugs<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><literal type="number" pos:line="23" pos:column="20">32<pos:position pos:line="23" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="24">DBG_IMPORTANT<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="39">"this be aioCancel. Danger ahead!"<pos:position pos:line="23" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="75"/></expr_stmt>

            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><call><name pos:line="25" pos:column="17">cbdataReferenceValidDone<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">ctrlp<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">done_handler_data<pos:position pos:line="25" pos:column="66"/></name></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="68">&amp;<pos:position pos:line="25" pos:column="73"/></operator><name pos:line="25" pos:column="69">cbdata<pos:position pos:line="25" pos:column="75"/></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="77"/></condition><then pos:line="25" pos:column="77">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">callback<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">fd<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="30">cbdata<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="38">NULL<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="44">-<pos:position pos:line="26" pos:column="45"/></operator><literal type="number" pos:line="26" pos:column="45">2<pos:position pos:line="26" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="48">-<pos:position pos:line="26" pos:column="49"/></operator><literal type="number" pos:line="26" pos:column="49">2<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="28" pos:column="13">/* free data if requested to aioWrite() */</comment>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name><name pos:line="29" pos:column="17">ctrlp<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">-&gt;<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="24">free_func<pos:position pos:line="29" pos:column="33"/></name></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="17">ctrlp<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">free_func<pos:position pos:line="30" pos:column="33"/></name></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name><name pos:line="30" pos:column="34">ctrlp<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">bufp<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="32" pos:column="13">/* free temporary read buffer */</comment>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name><name pos:line="33" pos:column="17">ctrlp<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">operation<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">==<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="37">_AIO_READ<pos:position pos:line="33" pos:column="46"/></name></expr>)<pos:position pos:line="33" pos:column="47"/></condition><then pos:line="33" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">squidaio_xfree<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name><name pos:line="34" pos:column="32">ctrlp<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">bufp<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="45">ctrlp<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">len<pos:position pos:line="34" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="37" pos:column="9">dlinkDelete<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">m<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="25">used_list<pos:position pos:line="37" pos:column="34"/></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="38" pos:column="9">delete<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">ctrlp<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></for>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

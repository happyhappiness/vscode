<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7443_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lstring<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">ntlm_fetch_string<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">ntlmhdr<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">packet<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">int32_t<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">packet_size<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="69">const<pos:position pos:line="2" pos:column="74"/></specifier> <name pos:line="2" pos:column="75">strhdr<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type> <name pos:line="2" pos:column="84">str<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="89">const<pos:position pos:line="2" pos:column="94"/></specifier> <name pos:line="2" pos:column="95">uint32_t<pos:position pos:line="2" pos:column="103"/></name></type> <name pos:line="2" pos:column="104">flags<pos:position pos:line="2" pos:column="109"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="110"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><name pos:line="4" pos:column="21">NTLM_MAX_FIELD_LENGTH<pos:position pos:line="4" pos:column="42"/></name></expr>]<pos:position pos:line="4" pos:column="43"/></index></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">lstring<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">rv<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">d<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">rv<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">.<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">str<pos:position pos:line="8" pos:column="11"/></name></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">rv<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">l<pos:position pos:line="9" pos:column="9"/></name></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int16_t<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">l<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><call><name pos:line="11" pos:column="17">le16toh<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name><name pos:line="11" pos:column="25">str<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">len<pos:position pos:line="11" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int32_t<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">o<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><call><name pos:line="12" pos:column="17">le32toh<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name><name pos:line="12" pos:column="25">str<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">offset<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
    <comment type="line" pos:line="13" pos:column="5">// debug("ntlm_fetch_string(plength=%d,l=%d,o=%d)\n",packet_size,l,o);</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">l<pos:position pos:line="15" pos:column="10"/></name> <argument_list type="generic" pos:line="15" pos:column="11">&lt; <argument><expr><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal> <operator pos:line="15" pos:column="15">||<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">l<pos:position pos:line="15" pos:column="19"/></name></expr></argument> &gt;<pos:position pos:line="15" pos:column="24"/></argument_list></name> <name pos:line="15" pos:column="22">NTLM_MAX_FIELD_LENGTH<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">||<pos:position pos:line="15" pos:column="46"/></operator> <name pos:line="15" pos:column="47">o<pos:position pos:line="15" pos:column="48"/></name> <operator pos:line="15" pos:column="49">+<pos:position pos:line="15" pos:column="50"/></operator> <name pos:line="15" pos:column="51">l<pos:position pos:line="15" pos:column="52"/></name> <operator pos:line="15" pos:column="53">&gt;<pos:position pos:line="15" pos:column="57"/></operator> <name pos:line="15" pos:column="55">packet_size<pos:position pos:line="15" pos:column="66"/></name> <operator pos:line="15" pos:column="67">||<pos:position pos:line="15" pos:column="69"/></operator> <name pos:line="15" pos:column="70">o<pos:position pos:line="15" pos:column="71"/></name> <operator pos:line="15" pos:column="72">==<pos:position pos:line="15" pos:column="74"/></operator> <literal type="number" pos:line="15" pos:column="75">0<pos:position pos:line="15" pos:column="76"/></literal></expr>)<pos:position pos:line="15" pos:column="77"/></condition><then pos:line="15" pos:column="77"> <block pos:line="15" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debug<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><literal type="string" pos:line="16" pos:column="15">"ntlm_fetch_string: insane data (pkt-sz: %d, fetch len: %d, offset: %d)\n"<pos:position pos:line="16" pos:column="89"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="91">packet_size<pos:position pos:line="16" pos:column="102"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="103">l<pos:position pos:line="16" pos:column="104"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="105">o<pos:position pos:line="16" pos:column="106"/></name></expr></argument>)<pos:position pos:line="16" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="108"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">rv<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">rv<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">.<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">str<pos:position pos:line="19" pos:column="11"/></name></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">char<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></operator><operator pos:line="19" pos:column="21">)<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">packet<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">+<pos:position pos:line="19" pos:column="30"/></operator> <name pos:line="19" pos:column="31">o<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">rv<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">.<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">l<pos:position pos:line="20" pos:column="9"/></name></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">flags<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator> <name pos:line="21" pos:column="18">NTLM_NEGOTIATE_ASCII<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">)<pos:position pos:line="21" pos:column="39"/></operator> <operator pos:line="21" pos:column="40">==<pos:position pos:line="21" pos:column="42"/></operator> <literal type="number" pos:line="21" pos:column="43">0<pos:position pos:line="21" pos:column="44"/></literal></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45"> <block pos:line="21" pos:column="46">{
        <comment type="block" pos:line="22" pos:column="9">/* UNICODE string */</comment>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">unsigned<pos:position pos:line="23" pos:column="17"/></name> <name pos:line="23" pos:column="18">short<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">s<pos:position pos:line="23" pos:column="26"/></name> <init pos:line="23" pos:column="27">= <expr><operator pos:line="23" pos:column="29">(<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">unsigned<pos:position pos:line="23" pos:column="38"/></name> <name pos:line="23" pos:column="39">short<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">*<pos:position pos:line="23" pos:column="46"/></operator><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator><name><name pos:line="23" pos:column="47">rv<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">.<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">str<pos:position pos:line="23" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="23" pos:column="54"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">rv<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">.<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="12">str<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">d<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">buf<pos:position pos:line="24" pos:column="25"/></name></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>

        <for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><decl><type><name pos:line="26" pos:column="14">uint32_t<pos:position pos:line="26" pos:column="22"/></name></type> <name pos:line="26" pos:column="23">len<pos:position pos:line="26" pos:column="26"/></name> <init pos:line="26" pos:column="27">= <expr><operator pos:line="26" pos:column="29">(<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">l<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">&gt;&gt;<pos:position pos:line="26" pos:column="36"/></operator><literal type="number" pos:line="26" pos:column="33">1<pos:position pos:line="26" pos:column="34"/></literal><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator></expr></init></decl>;<pos:position pos:line="26" pos:column="36"/></init> <condition><expr><name pos:line="26" pos:column="37">len<pos:position pos:line="26" pos:column="40"/></name></expr>;<pos:position pos:line="26" pos:column="41"/></condition> <incr><expr><operator pos:line="26" pos:column="42">++<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="44">s<pos:position pos:line="26" pos:column="45"/></name></expr><operator pos:line="26" pos:column="45">,<pos:position pos:line="26" pos:column="46"/></operator> <expr><operator pos:line="26" pos:column="47">--<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">len<pos:position pos:line="26" pos:column="52"/></name></expr></incr>)<pos:position pos:line="26" pos:column="53"/></control> <block pos:line="26" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="27" pos:column="13">uint16_t<pos:position pos:line="27" pos:column="21"/></name></type> <name pos:line="27" pos:column="22">c<pos:position pos:line="27" pos:column="23"/></name> <init pos:line="27" pos:column="24">= <expr><call><name pos:line="27" pos:column="26">le16toh<pos:position pos:line="27" pos:column="33"/></name><argument_list pos:line="27" pos:column="33">(<argument><expr><operator pos:line="27" pos:column="34">*<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="35">s<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="38"/></decl_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name pos:line="28" pos:column="17">c<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">&gt;<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="21">254<pos:position pos:line="28" pos:column="24"/></literal> <operator pos:line="28" pos:column="25">||<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">c<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">==<pos:position pos:line="28" pos:column="32"/></operator> <literal type="char" pos:line="28" pos:column="33">'\0'<pos:position pos:line="28" pos:column="37"/></literal></expr>)<pos:position pos:line="28" pos:column="38"/></condition><then pos:line="28" pos:column="38"> <block pos:line="28" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">fprintf<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">stderr<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="33">"ntlmssp: bad unicode: %04x\n"<pos:position pos:line="29" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">c<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">rv<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">d<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <cast type="static" pos:line="32" pos:column="18">static_cast<argument_list type="generic" pos:line="32" pos:column="29">&lt;<argument><expr><name pos:line="32" pos:column="30">char<pos:position pos:line="32" pos:column="34"/></name></expr></argument>&gt;<pos:position pos:line="32" pos:column="38"/></argument_list><argument_list pos:line="32" pos:column="35">(<argument><expr><name pos:line="32" pos:column="36">c<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">&amp;<pos:position pos:line="32" pos:column="42"/></operator><literal type="number" pos:line="32" pos:column="38">0xFF<pos:position pos:line="32" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></cast></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="33" pos:column="13">++<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">d<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name><name pos:line="34" pos:column="15">rv<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">l<pos:position pos:line="34" pos:column="19"/></name></name></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></for>
    }<pos:position pos:line="36" pos:column="6"/></block></then> <else pos:line="36" pos:column="7">else <block pos:line="36" pos:column="12">{
        <comment type="block" pos:line="37" pos:column="9">/* ASCII/OEM string */</comment>
        <decl_stmt><decl><type><name pos:line="38" pos:column="9">char<pos:position pos:line="38" pos:column="13"/></name> <modifier pos:line="38" pos:column="14">*<pos:position pos:line="38" pos:column="15"/></modifier></type><name pos:line="38" pos:column="15">sc<pos:position pos:line="38" pos:column="17"/></name> <init pos:line="38" pos:column="18">= <expr><name><name pos:line="38" pos:column="20">rv<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">.<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">str<pos:position pos:line="38" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="27"/></decl_stmt>

        <for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init pos:line="40" pos:column="14">;<pos:position pos:line="40" pos:column="15"/></init> <condition><expr><name pos:line="40" pos:column="16">l<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">&gt;=<pos:position pos:line="40" pos:column="22"/></operator><literal type="number" pos:line="40" pos:column="19">0<pos:position pos:line="40" pos:column="20"/></literal></expr>;<pos:position pos:line="40" pos:column="21"/></condition> <incr><expr><operator pos:line="40" pos:column="22">++<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">sc<pos:position pos:line="40" pos:column="26"/></name></expr><operator pos:line="40" pos:column="26">,<pos:position pos:line="40" pos:column="27"/></operator> <expr><operator pos:line="40" pos:column="28">--<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">l<pos:position pos:line="40" pos:column="31"/></name></expr></incr>)<pos:position pos:line="40" pos:column="32"/></control> <block pos:line="40" pos:column="33">{
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><operator pos:line="41" pos:column="17">*<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">sc<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <literal type="char" pos:line="41" pos:column="24">'\0'<pos:position pos:line="41" pos:column="28"/></literal> <operator pos:line="41" pos:column="29">||<pos:position pos:line="41" pos:column="31"/></operator> <operator pos:line="41" pos:column="32">!<pos:position pos:line="41" pos:column="33"/></operator><call><name pos:line="41" pos:column="33">xisprint<pos:position pos:line="41" pos:column="41"/></name><argument_list pos:line="41" pos:column="41">(<argument><expr><operator pos:line="41" pos:column="42">*<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">sc<pos:position pos:line="41" pos:column="45"/></name></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">fprintf<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">stderr<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="33">"ntlmssp: bad ascii: %04x\n"<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="42" pos:column="63">*<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="64">sc<pos:position pos:line="42" pos:column="66"/></name></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>
                <return pos:line="43" pos:column="17">return <expr><name pos:line="43" pos:column="24">rv<pos:position pos:line="43" pos:column="26"/></name></expr>;<pos:position pos:line="43" pos:column="27"/></return>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="45" pos:column="13">++<pos:position pos:line="45" pos:column="15"/></operator><name><name pos:line="45" pos:column="15">rv<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">.<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">l<pos:position pos:line="45" pos:column="19"/></name></name></expr>;<pos:position pos:line="45" pos:column="20"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></for>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">rv<pos:position pos:line="49" pos:column="14"/></name></expr>;<pos:position pos:line="49" pos:column="15"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7509_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertificateDb<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">sq_TXT_DB_delete<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">TXT_DB<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">db<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier><modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">row<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">db<pos:position pos:line="3" pos:column="12"/></name></expr>)<pos:position pos:line="3" pos:column="13"/></condition><then pos:line="3" pos:column="13">
        <block type="pseudo"><return pos:line="4" pos:column="9">return;<pos:position pos:line="4" pos:column="16"/></return></block></then></if>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="6" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">int<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="7" pos:column="47"/></name><argument_list pos:line="7" pos:column="47">(<argument><expr><name><name pos:line="7" pos:column="48">db<pos:position pos:line="7" pos:column="50"/></name><operator pos:line="7" pos:column="50">-&gt;<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="52">data<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></condition> <incr><expr><operator pos:line="7" pos:column="59">++<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="61">i<pos:position pos:line="7" pos:column="62"/></name></expr></incr>)<pos:position pos:line="7" pos:column="63"/></control> <block pos:line="7" pos:column="64">{
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="8" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier><modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type> <name pos:line="9" pos:column="23">current_row<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><operator pos:line="9" pos:column="37">(<pos:position pos:line="9" pos:column="38"/></operator><operator pos:line="9" pos:column="38">(<pos:position pos:line="9" pos:column="39"/></operator><specifier pos:line="9" pos:column="39">const<pos:position pos:line="9" pos:column="44"/></specifier> <name pos:line="9" pos:column="45">char<pos:position pos:line="9" pos:column="49"/></name> <operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator><operator pos:line="9" pos:column="51">*<pos:position pos:line="9" pos:column="52"/></operator><operator pos:line="9" pos:column="52">)<pos:position pos:line="9" pos:column="53"/></operator><call><name pos:line="9" pos:column="53">sk_value<pos:position pos:line="9" pos:column="61"/></name><argument_list pos:line="9" pos:column="61">(<argument><expr><call><name pos:line="9" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="9" pos:column="78"/></name><argument_list pos:line="9" pos:column="78">(<argument><expr><name pos:line="9" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="9" pos:column="94"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="96">db<pos:position pos:line="9" pos:column="98"/></name><operator pos:line="9" pos:column="98">-&gt;<pos:position pos:line="9" pos:column="103"/></operator><name pos:line="9" pos:column="100">data<pos:position pos:line="9" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="105"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="107">i<pos:position pos:line="9" pos:column="108"/></name></expr></argument>)<pos:position pos:line="9" pos:column="109"/></argument_list></call><operator pos:line="9" pos:column="109">)<pos:position pos:line="9" pos:column="110"/></operator></expr></init></decl>;<pos:position pos:line="9" pos:column="111"/></decl_stmt>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">char<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier><modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type> <name pos:line="11" pos:column="23">current_row<pos:position pos:line="11" pos:column="34"/></name> <init pos:line="11" pos:column="35">= <expr><operator pos:line="11" pos:column="37">(<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">(<pos:position pos:line="11" pos:column="39"/></operator><specifier pos:line="11" pos:column="39">const<pos:position pos:line="11" pos:column="44"/></specifier> <name pos:line="11" pos:column="45">char<pos:position pos:line="11" pos:column="49"/></name> <operator pos:line="11" pos:column="50">*<pos:position pos:line="11" pos:column="51"/></operator><operator pos:line="11" pos:column="51">*<pos:position pos:line="11" pos:column="52"/></operator><operator pos:line="11" pos:column="52">)<pos:position pos:line="11" pos:column="53"/></operator><call><name pos:line="11" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="11" pos:column="77"/></name><argument_list pos:line="11" pos:column="77">(<argument><expr><name><name pos:line="11" pos:column="78">db<pos:position pos:line="11" pos:column="80"/></name><operator pos:line="11" pos:column="80">-&gt;<pos:position pos:line="11" pos:column="85"/></operator><name pos:line="11" pos:column="82">data<pos:position pos:line="11" pos:column="86"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="88">i<pos:position pos:line="11" pos:column="89"/></name></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call><operator pos:line="11" pos:column="90">)<pos:position pos:line="11" pos:column="91"/></operator></expr></init></decl>;<pos:position pos:line="11" pos:column="92"/></decl_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><decl><type><name pos:line="14" pos:column="10">int<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">i<pos:position pos:line="14" pos:column="15"/></name> <init pos:line="14" pos:column="16">= <expr><literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">i<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&lt;<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="25">sk_num<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name><name pos:line="14" pos:column="32">db<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">data<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></condition> <incr><expr><operator pos:line="14" pos:column="43">++<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="45">i<pos:position pos:line="14" pos:column="46"/></name></expr></incr>)<pos:position pos:line="14" pos:column="47"/></control> <block pos:line="14" pos:column="48">{
        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier><modifier pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></modifier></type> <name pos:line="15" pos:column="23">current_row<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">= <expr><operator pos:line="15" pos:column="37">(<pos:position pos:line="15" pos:column="38"/></operator><operator pos:line="15" pos:column="38">(<pos:position pos:line="15" pos:column="39"/></operator><specifier pos:line="15" pos:column="39">const<pos:position pos:line="15" pos:column="44"/></specifier> <name pos:line="15" pos:column="45">char<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">*<pos:position pos:line="15" pos:column="51"/></operator><operator pos:line="15" pos:column="51">*<pos:position pos:line="15" pos:column="52"/></operator><operator pos:line="15" pos:column="52">)<pos:position pos:line="15" pos:column="53"/></operator><call><name pos:line="15" pos:column="53">sk_value<pos:position pos:line="15" pos:column="61"/></name><argument_list pos:line="15" pos:column="61">(<argument><expr><name><name pos:line="15" pos:column="62">db<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-&gt;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="66">data<pos:position pos:line="15" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="72">i<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call><operator pos:line="15" pos:column="74">)<pos:position pos:line="15" pos:column="75"/></operator></expr></init></decl>;<pos:position pos:line="15" pos:column="76"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">current_row<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">==<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">row<pos:position pos:line="17" pos:column="31"/></name></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32"> <block pos:line="17" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">sq_TXT_DB_delete_row<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name pos:line="18" pos:column="34">db<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
            <return pos:line="19" pos:column="13">return;<pos:position pos:line="19" pos:column="20"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
}<pos:position pos:line="22" pos:column="2"/></block></for>

<cpp:define pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">define<pos:position pos:line="24" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="24" pos:column="9">countof<pos:position pos:line="24" pos:column="16"/></name><parameter_list pos:line="24" pos:column="16">(<parameter><type><name pos:line="24" pos:column="17">arr<pos:position pos:line="24" pos:column="20"/></name></type></parameter>)<pos:position pos:line="24" pos:column="21"/></parameter_list></cpp:macro> <cpp:value pos:line="24" pos:column="22">(sizeof(arr)/sizeof(*arr))<pos:position pos:line="24" pos:column="48"/></cpp:value></cpp:define>
<function><type><name pos:line="25" pos:column="1">void<pos:position pos:line="25" pos:column="5"/></name></type> <name><name pos:line="25" pos:column="6">Ssl<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">::<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">CertificateDb<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">::<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">sq_TXT_DB_delete_row<pos:position pos:line="25" pos:column="46"/></name></name><parameter_list pos:line="25" pos:column="46">(<parameter><decl><type><name pos:line="25" pos:column="47">TXT_DB<pos:position pos:line="25" pos:column="53"/></name> <modifier pos:line="25" pos:column="54">*<pos:position pos:line="25" pos:column="55"/></modifier></type><name pos:line="25" pos:column="55">db<pos:position pos:line="25" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="25" pos:column="59">int<pos:position pos:line="25" pos:column="62"/></name></type> <name pos:line="25" pos:column="63">idx<pos:position pos:line="25" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="25" pos:column="67"/></parameter_list> <block pos:line="25" pos:column="68">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier><modifier pos:line="26" pos:column="11">*<pos:position pos:line="26" pos:column="12"/></modifier></type><name pos:line="26" pos:column="12">rrow<pos:position pos:line="26" pos:column="16"/></name></decl>;<pos:position pos:line="26" pos:column="17"/></decl_stmt>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="27" pos:column="31"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">rrow<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">char<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">*<pos:position pos:line="28" pos:column="19"/></operator><operator pos:line="28" pos:column="19">*<pos:position pos:line="28" pos:column="20"/></operator><operator pos:line="28" pos:column="20">)<pos:position pos:line="28" pos:column="21"/></operator><call><name pos:line="28" pos:column="21">sk_OPENSSL_PSTRING_delete<pos:position pos:line="28" pos:column="46"/></name><argument_list pos:line="28" pos:column="46">(<argument><expr><name><name pos:line="28" pos:column="47">db<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">data<pos:position pos:line="28" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">idx<pos:position pos:line="28" pos:column="60"/></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="30" pos:column="5">rrow<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">char<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">*<pos:position pos:line="30" pos:column="19"/></operator><operator pos:line="30" pos:column="19">*<pos:position pos:line="30" pos:column="20"/></operator><operator pos:line="30" pos:column="20">)<pos:position pos:line="30" pos:column="21"/></operator><call><name pos:line="30" pos:column="21">sk_delete<pos:position pos:line="30" pos:column="30"/></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name><name pos:line="30" pos:column="31">db<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">data<pos:position pos:line="30" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">idx<pos:position pos:line="30" pos:column="44"/></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">rrow<pos:position pos:line="33" pos:column="14"/></name></expr>)<pos:position pos:line="33" pos:column="15"/></condition><then pos:line="33" pos:column="15">
        <block type="pseudo"><return pos:line="34" pos:column="9">return;<pos:position pos:line="34" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="36" pos:column="5">Row<pos:position pos:line="36" pos:column="8"/></name></type> <name pos:line="36" pos:column="9">row<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><name pos:line="36" pos:column="13">rrow<pos:position pos:line="36" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="19">cnlNumber<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></decl>;<pos:position pos:line="36" pos:column="30"/></decl_stmt> <comment type="line" pos:line="36" pos:column="31">// row wrapper used to free the rrow</comment>

    <decl_stmt><decl><type><specifier pos:line="38" pos:column="5">const<pos:position pos:line="38" pos:column="10"/></specifier> <name pos:line="38" pos:column="11">Columns<pos:position pos:line="38" pos:column="18"/></name></type> <name><name pos:line="38" pos:column="19">db_indexes<pos:position pos:line="38" pos:column="29"/></name><index pos:line="38" pos:column="29">[]<pos:position pos:line="38" pos:column="31"/></index></name><init pos:line="38" pos:column="31">= <expr><block pos:line="38" pos:column="33">{<expr><name pos:line="38" pos:column="34">cnlSerial<pos:position pos:line="38" pos:column="43"/></name></expr>, <expr><name pos:line="38" pos:column="45">cnlName<pos:position pos:line="38" pos:column="52"/></name></expr>}<pos:position pos:line="38" pos:column="53"/></block></expr></init></decl>;<pos:position pos:line="38" pos:column="54"/></decl_stmt>
    <for pos:line="39" pos:column="5">for <control pos:line="39" pos:column="9">(<init><decl><type><name pos:line="39" pos:column="10">unsigned<pos:position pos:line="39" pos:column="18"/></name> <name pos:line="39" pos:column="19">int<pos:position pos:line="39" pos:column="22"/></name></type> <name pos:line="39" pos:column="23">i<pos:position pos:line="39" pos:column="24"/></name> <init pos:line="39" pos:column="25">= <expr><literal type="number" pos:line="39" pos:column="27">0<pos:position pos:line="39" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="39" pos:column="29"/></init> <condition><expr><name pos:line="39" pos:column="30">i<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&lt;<pos:position pos:line="39" pos:column="36"/></operator> <call><name pos:line="39" pos:column="34">countof<pos:position pos:line="39" pos:column="41"/></name><argument_list pos:line="39" pos:column="41">(<argument><expr><name pos:line="39" pos:column="42">db_indexes<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="54"/></condition> <incr><expr><operator pos:line="39" pos:column="55">++<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="57">i<pos:position pos:line="39" pos:column="58"/></name></expr></incr>)<pos:position pos:line="39" pos:column="59"/></control> <block pos:line="39" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">void<pos:position pos:line="40" pos:column="13"/></name> <modifier pos:line="40" pos:column="14">*<pos:position pos:line="40" pos:column="15"/></modifier></type><name pos:line="40" pos:column="15">data<pos:position pos:line="40" pos:column="19"/></name> <init pos:line="40" pos:column="20">= <expr><name pos:line="40" pos:column="22">NULL<pos:position pos:line="40" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="27"/></decl_stmt>
<cpp:if pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">if<pos:position pos:line="41" pos:column="4"/></cpp:directive> <expr><name pos:line="41" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="41" pos:column="31"/></name></expr></cpp:if>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">LHASH_OF<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">OPENSSL_STRING<pos:position pos:line="42" pos:column="36"/></name></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call> <operator pos:line="42" pos:column="38">*<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">fieldIndex<pos:position pos:line="42" pos:column="49"/></name> <operator pos:line="42" pos:column="50">=<pos:position pos:line="42" pos:column="51"/></operator>  <name><name pos:line="42" pos:column="53">db<pos:position pos:line="42" pos:column="55"/></name><operator pos:line="42" pos:column="55">-&gt;<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="57">index<pos:position pos:line="42" pos:column="62"/></name><index pos:line="42" pos:column="62">[<expr><name><name pos:line="42" pos:column="63">db_indexes<pos:position pos:line="42" pos:column="73"/></name><index pos:line="42" pos:column="73">[<expr><name pos:line="42" pos:column="74">i<pos:position pos:line="42" pos:column="75"/></name></expr>]<pos:position pos:line="42" pos:column="76"/></index></name></expr>]<pos:position pos:line="42" pos:column="77"/></index></name></expr>)<pos:position pos:line="42" pos:column="78"/></condition><then pos:line="42" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="13">data<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <call><name pos:line="43" pos:column="20">lh_OPENSSL_STRING_delete<pos:position pos:line="43" pos:column="44"/></name><argument_list pos:line="43" pos:column="44">(<argument><expr><name pos:line="43" pos:column="45">fieldIndex<pos:position pos:line="43" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="57">rrow<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt></block></then></if>
<cpp:else pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">else<pos:position pos:line="44" pos:column="6"/></cpp:directive></cpp:else>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<decl><type><name pos:line="45" pos:column="13">LHASH<pos:position pos:line="45" pos:column="18"/></name> <modifier pos:line="45" pos:column="19">*<pos:position pos:line="45" pos:column="20"/></modifier></type><name pos:line="45" pos:column="20">fieldIndex<pos:position pos:line="45" pos:column="30"/></name> <init pos:line="45" pos:column="31">= <expr><name><name pos:line="45" pos:column="33">db<pos:position pos:line="45" pos:column="35"/></name><operator pos:line="45" pos:column="35">-&gt;<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="37">index<pos:position pos:line="45" pos:column="42"/></name><index pos:line="45" pos:column="42">[<expr><name><name pos:line="45" pos:column="43">db_indexes<pos:position pos:line="45" pos:column="53"/></name><index pos:line="45" pos:column="53">[<expr><name pos:line="45" pos:column="54">i<pos:position pos:line="45" pos:column="55"/></name></expr>]<pos:position pos:line="45" pos:column="56"/></index></name></expr>]<pos:position pos:line="45" pos:column="57"/></index></name></expr></init></decl>)<pos:position pos:line="45" pos:column="58"/></condition><then pos:line="45" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="13">data<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">=<pos:position pos:line="46" pos:column="19"/></operator> <call><name pos:line="46" pos:column="20">lh_delete<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">fieldIndex<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="42">rrow<pos:position pos:line="46" pos:column="46"/></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt></block></then></if>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">data<pos:position pos:line="48" pos:column="17"/></name></expr>)<pos:position pos:line="48" pos:column="18"/></condition><then pos:line="48" pos:column="18">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="13">assert<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">data<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">==<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">rrow<pos:position pos:line="49" pos:column="32"/></name></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></for>
}<pos:position pos:line="51" pos:column="2"/></block></function>

<function><type><name pos:line="53" pos:column="1">unsigned<pos:position pos:line="53" pos:column="9"/></name> <name pos:line="53" pos:column="10">long<pos:position pos:line="53" pos:column="14"/></name></type> <name><name pos:line="53" pos:column="15">Ssl<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">::<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="20">CertificateDb<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">::<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">index_serial_hash<pos:position pos:line="53" pos:column="52"/></name></name><parameter_list pos:line="53" pos:column="52">(<parameter><decl><type><specifier pos:line="53" pos:column="53">const<pos:position pos:line="53" pos:column="58"/></specifier> <name pos:line="53" pos:column="59">char<pos:position pos:line="53" pos:column="63"/></name> <modifier pos:line="53" pos:column="64">*<pos:position pos:line="53" pos:column="65"/></modifier><modifier pos:line="53" pos:column="65">*<pos:position pos:line="53" pos:column="66"/></modifier></type><name pos:line="53" pos:column="66">a<pos:position pos:line="53" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="53" pos:column="68"/></parameter_list> <block pos:line="53" pos:column="69">{
    <decl_stmt><decl><type><specifier pos:line="54" pos:column="5">const<pos:position pos:line="54" pos:column="10"/></specifier> <name pos:line="54" pos:column="11">char<pos:position pos:line="54" pos:column="15"/></name> <modifier pos:line="54" pos:column="16">*<pos:position pos:line="54" pos:column="17"/></modifier></type><name pos:line="54" pos:column="17">n<pos:position pos:line="54" pos:column="18"/></name> <init pos:line="54" pos:column="19">= <expr><name><name pos:line="54" pos:column="21">a<pos:position pos:line="54" pos:column="22"/></name><index pos:line="54" pos:column="22">[<expr><name><name pos:line="54" pos:column="23">Ssl<pos:position pos:line="54" pos:column="26"/></name><operator pos:line="54" pos:column="26">::<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="28">CertificateDb<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">::<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="43">cnlSerial<pos:position pos:line="54" pos:column="52"/></name></name></expr>]<pos:position pos:line="54" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="54" pos:column="54"/></decl_stmt>
    <while pos:line="55" pos:column="5">while <condition pos:line="55" pos:column="11">(<expr><operator pos:line="55" pos:column="12">*<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">n<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">==<pos:position pos:line="55" pos:column="17"/></operator> <literal type="char" pos:line="55" pos:column="18">'0'<pos:position pos:line="55" pos:column="21"/></literal></expr>)<pos:position pos:line="55" pos:column="22"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="56" pos:column="9">++<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="11">n<pos:position pos:line="56" pos:column="12"/></name></expr>;<pos:position pos:line="56" pos:column="13"/></expr_stmt></block></while>
    <return pos:line="57" pos:column="5">return <expr><call><name pos:line="57" pos:column="12">lh_strhash<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">(<argument><expr><name pos:line="57" pos:column="23">n<pos:position pos:line="57" pos:column="24"/></name></expr></argument>)<pos:position pos:line="57" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="26"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function>

<function><type><name pos:line="60" pos:column="1">int<pos:position pos:line="60" pos:column="4"/></name></type> <name><name pos:line="60" pos:column="5">Ssl<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">::<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">CertificateDb<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">::<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">index_serial_cmp<pos:position pos:line="60" pos:column="41"/></name></name><parameter_list pos:line="60" pos:column="41">(<parameter><decl><type><specifier pos:line="60" pos:column="42">const<pos:position pos:line="60" pos:column="47"/></specifier> <name pos:line="60" pos:column="48">char<pos:position pos:line="60" pos:column="52"/></name> <modifier pos:line="60" pos:column="53">*<pos:position pos:line="60" pos:column="54"/></modifier><modifier pos:line="60" pos:column="54">*<pos:position pos:line="60" pos:column="55"/></modifier></type><name pos:line="60" pos:column="55">a<pos:position pos:line="60" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="60" pos:column="58">const<pos:position pos:line="60" pos:column="63"/></specifier> <name pos:line="60" pos:column="64">char<pos:position pos:line="60" pos:column="68"/></name> <modifier pos:line="60" pos:column="69">*<pos:position pos:line="60" pos:column="70"/></modifier><modifier pos:line="60" pos:column="70">*<pos:position pos:line="60" pos:column="71"/></modifier></type><name pos:line="60" pos:column="71">b<pos:position pos:line="60" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="60" pos:column="73"/></parameter_list> <block pos:line="60" pos:column="74">{
    <decl_stmt><decl><type><specifier pos:line="61" pos:column="5">const<pos:position pos:line="61" pos:column="10"/></specifier> <name pos:line="61" pos:column="11">char<pos:position pos:line="61" pos:column="15"/></name> <modifier pos:line="61" pos:column="16">*<pos:position pos:line="61" pos:column="17"/></modifier></type><name pos:line="61" pos:column="17">aa<pos:position pos:line="61" pos:column="19"/></name></decl>, <modifier pos:line="61" pos:column="21">*<pos:position pos:line="61" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="61" pos:column="22">bb<pos:position pos:line="61" pos:column="24"/></name></decl>;<pos:position pos:line="61" pos:column="25"/></decl_stmt>
    <for pos:line="62" pos:column="5">for <control pos:line="62" pos:column="9">(<init><expr><name pos:line="62" pos:column="10">aa<pos:position pos:line="62" pos:column="12"/></name> <operator pos:line="62" pos:column="13">=<pos:position pos:line="62" pos:column="14"/></operator> <name><name pos:line="62" pos:column="15">a<pos:position pos:line="62" pos:column="16"/></name><index pos:line="62" pos:column="16">[<expr><name><name pos:line="62" pos:column="17">Ssl<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">::<pos:position pos:line="62" pos:column="22"/></operator><name pos:line="62" pos:column="22">CertificateDb<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">::<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">cnlSerial<pos:position pos:line="62" pos:column="46"/></name></name></expr>]<pos:position pos:line="62" pos:column="47"/></index></name></expr>;<pos:position pos:line="62" pos:column="48"/></init> <condition><expr><operator pos:line="62" pos:column="49">*<pos:position pos:line="62" pos:column="50"/></operator><name pos:line="62" pos:column="50">aa<pos:position pos:line="62" pos:column="52"/></name> <operator pos:line="62" pos:column="53">==<pos:position pos:line="62" pos:column="55"/></operator> <literal type="char" pos:line="62" pos:column="56">'0'<pos:position pos:line="62" pos:column="59"/></literal></expr>;<pos:position pos:line="62" pos:column="60"/></condition> <incr><expr><operator pos:line="62" pos:column="61">++<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="63">aa<pos:position pos:line="62" pos:column="65"/></name></expr></incr>)<pos:position pos:line="62" pos:column="66"/></control><block type="pseudo"><empty_stmt pos:line="62" pos:column="66">;<pos:position pos:line="62" pos:column="67"/></empty_stmt></block></for>
    <for pos:line="63" pos:column="5">for <control pos:line="63" pos:column="9">(<init><expr><name pos:line="63" pos:column="10">bb<pos:position pos:line="63" pos:column="12"/></name> <operator pos:line="63" pos:column="13">=<pos:position pos:line="63" pos:column="14"/></operator> <name><name pos:line="63" pos:column="15">b<pos:position pos:line="63" pos:column="16"/></name><index pos:line="63" pos:column="16">[<expr><name><name pos:line="63" pos:column="17">Ssl<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">::<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">CertificateDb<pos:position pos:line="63" pos:column="35"/></name><operator pos:line="63" pos:column="35">::<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">cnlSerial<pos:position pos:line="63" pos:column="46"/></name></name></expr>]<pos:position pos:line="63" pos:column="47"/></index></name></expr>;<pos:position pos:line="63" pos:column="48"/></init> <condition><expr><operator pos:line="63" pos:column="49">*<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">bb<pos:position pos:line="63" pos:column="52"/></name> <operator pos:line="63" pos:column="53">==<pos:position pos:line="63" pos:column="55"/></operator> <literal type="char" pos:line="63" pos:column="56">'0'<pos:position pos:line="63" pos:column="59"/></literal></expr>;<pos:position pos:line="63" pos:column="60"/></condition> <incr><expr><operator pos:line="63" pos:column="61">++<pos:position pos:line="63" pos:column="63"/></operator><name pos:line="63" pos:column="63">bb<pos:position pos:line="63" pos:column="65"/></name></expr></incr>)<pos:position pos:line="63" pos:column="66"/></control><block type="pseudo"><empty_stmt pos:line="63" pos:column="66">;<pos:position pos:line="63" pos:column="67"/></empty_stmt></block></for>
    <return pos:line="64" pos:column="5">return <expr><call><name pos:line="64" pos:column="12">strcmp<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">aa<pos:position pos:line="64" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="23">bb<pos:position pos:line="64" pos:column="25"/></name></expr></argument>)<pos:position pos:line="64" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="27"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function>

<function><type><name pos:line="67" pos:column="1">unsigned<pos:position pos:line="67" pos:column="9"/></name> <name pos:line="67" pos:column="10">long<pos:position pos:line="67" pos:column="14"/></name></type> <name><name pos:line="67" pos:column="15">Ssl<pos:position pos:line="67" pos:column="18"/></name><operator pos:line="67" pos:column="18">::<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">CertificateDb<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">::<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">index_name_hash<pos:position pos:line="67" pos:column="50"/></name></name><parameter_list pos:line="67" pos:column="50">(<parameter><decl><type><specifier pos:line="67" pos:column="51">const<pos:position pos:line="67" pos:column="56"/></specifier> <name pos:line="67" pos:column="57">char<pos:position pos:line="67" pos:column="61"/></name> <modifier pos:line="67" pos:column="62">*<pos:position pos:line="67" pos:column="63"/></modifier><modifier pos:line="67" pos:column="63">*<pos:position pos:line="67" pos:column="64"/></modifier></type><name pos:line="67" pos:column="64">a<pos:position pos:line="67" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="67" pos:column="66"/></parameter_list> <block pos:line="67" pos:column="67">{
    <return pos:line="68" pos:column="5">return<expr><operator pos:line="68" pos:column="11">(<pos:position pos:line="68" pos:column="12"/></operator><call><name pos:line="68" pos:column="12">lh_strhash<pos:position pos:line="68" pos:column="22"/></name><argument_list pos:line="68" pos:column="22">(<argument><expr><name><name pos:line="68" pos:column="23">a<pos:position pos:line="68" pos:column="24"/></name><index pos:line="68" pos:column="24">[<expr><name><name pos:line="68" pos:column="25">Ssl<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">::<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="30">CertificateDb<pos:position pos:line="68" pos:column="43"/></name><operator pos:line="68" pos:column="43">::<pos:position pos:line="68" pos:column="45"/></operator><name pos:line="68" pos:column="45">cnlName<pos:position pos:line="68" pos:column="52"/></name></name></expr>]<pos:position pos:line="68" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="54"/></argument_list></call><operator pos:line="68" pos:column="54">)<pos:position pos:line="68" pos:column="55"/></operator></expr>;<pos:position pos:line="68" pos:column="56"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function>

<function><type><name pos:line="71" pos:column="1">int<pos:position pos:line="71" pos:column="4"/></name></type> <name><name pos:line="71" pos:column="5">Ssl<pos:position pos:line="71" pos:column="8"/></name><operator pos:line="71" pos:column="8">::<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="10">CertificateDb<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">::<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="25">index_name_cmp<pos:position pos:line="71" pos:column="39"/></name></name><parameter_list pos:line="71" pos:column="39">(<parameter><decl><type><specifier pos:line="71" pos:column="40">const<pos:position pos:line="71" pos:column="45"/></specifier> <name pos:line="71" pos:column="46">char<pos:position pos:line="71" pos:column="50"/></name> <modifier pos:line="71" pos:column="51">*<pos:position pos:line="71" pos:column="52"/></modifier><modifier pos:line="71" pos:column="52">*<pos:position pos:line="71" pos:column="53"/></modifier></type><name pos:line="71" pos:column="53">a<pos:position pos:line="71" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="71" pos:column="56">const<pos:position pos:line="71" pos:column="61"/></specifier> <name pos:line="71" pos:column="62">char<pos:position pos:line="71" pos:column="66"/></name> <modifier pos:line="71" pos:column="67">*<pos:position pos:line="71" pos:column="68"/></modifier><modifier pos:line="71" pos:column="68">*<pos:position pos:line="71" pos:column="69"/></modifier></type><name pos:line="71" pos:column="69">b<pos:position pos:line="71" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="71" pos:column="71"/></parameter_list> <block pos:line="71" pos:column="72">{
    <return pos:line="72" pos:column="5">return<expr><operator pos:line="72" pos:column="11">(<pos:position pos:line="72" pos:column="12"/></operator><call><name pos:line="72" pos:column="12">strcmp<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name><name pos:line="72" pos:column="19">a<pos:position pos:line="72" pos:column="20"/></name><index pos:line="72" pos:column="20">[<expr><name><name pos:line="72" pos:column="21">Ssl<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">::<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">CertificateDb<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">::<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="41">cnlName<pos:position pos:line="72" pos:column="48"/></name></name></expr>]<pos:position pos:line="72" pos:column="49"/></index></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="51">b<pos:position pos:line="72" pos:column="52"/></name><index pos:line="72" pos:column="52">[<expr><name><name pos:line="72" pos:column="53">CertificateDb<pos:position pos:line="72" pos:column="66"/></name><operator pos:line="72" pos:column="66">::<pos:position pos:line="72" pos:column="68"/></operator><name pos:line="72" pos:column="68">cnlName<pos:position pos:line="72" pos:column="75"/></name></name></expr>]<pos:position pos:line="72" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="77"/></argument_list></call><operator pos:line="72" pos:column="77">)<pos:position pos:line="72" pos:column="78"/></operator></expr>;<pos:position pos:line="72" pos:column="79"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function>

<decl_stmt><decl><type><specifier pos:line="75" pos:column="1">const<pos:position pos:line="75" pos:column="6"/></specifier> <name><name pos:line="75" pos:column="7">std<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">::<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="12">string<pos:position pos:line="75" pos:column="18"/></name></name></type> <name><name pos:line="75" pos:column="19">Ssl<pos:position pos:line="75" pos:column="22"/></name><operator pos:line="75" pos:column="22">::<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">CertificateDb<pos:position pos:line="75" pos:column="37"/></name><operator pos:line="75" pos:column="37">::<pos:position pos:line="75" pos:column="39"/></operator><name pos:line="75" pos:column="39">db_file<pos:position pos:line="75" pos:column="46"/></name></name><argument_list pos:line="75" pos:column="46">(<argument><expr><literal type="string" pos:line="75" pos:column="47">"index.txt"<pos:position pos:line="75" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></decl>;<pos:position pos:line="75" pos:column="60"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="76" pos:column="1">const<pos:position pos:line="76" pos:column="6"/></specifier> <name><name pos:line="76" pos:column="7">std<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">::<pos:position pos:line="76" pos:column="12"/></operator><name pos:line="76" pos:column="12">string<pos:position pos:line="76" pos:column="18"/></name></name></type> <name><name pos:line="76" pos:column="19">Ssl<pos:position pos:line="76" pos:column="22"/></name><operator pos:line="76" pos:column="22">::<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">CertificateDb<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">::<pos:position pos:line="76" pos:column="39"/></operator><name pos:line="76" pos:column="39">cert_dir<pos:position pos:line="76" pos:column="47"/></name></name><argument_list pos:line="76" pos:column="47">(<argument><expr><literal type="string" pos:line="76" pos:column="48">"certs"<pos:position pos:line="76" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="56"/></argument_list></decl>;<pos:position pos:line="76" pos:column="57"/></decl_stmt>
<decl_stmt><decl><type><specifier pos:line="77" pos:column="1">const<pos:position pos:line="77" pos:column="6"/></specifier> <name><name pos:line="77" pos:column="7">std<pos:position pos:line="77" pos:column="10"/></name><operator pos:line="77" pos:column="10">::<pos:position pos:line="77" pos:column="12"/></operator><name pos:line="77" pos:column="12">string<pos:position pos:line="77" pos:column="18"/></name></name></type> <name><name pos:line="77" pos:column="19">Ssl<pos:position pos:line="77" pos:column="22"/></name><operator pos:line="77" pos:column="22">::<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="24">CertificateDb<pos:position pos:line="77" pos:column="37"/></name><operator pos:line="77" pos:column="37">::<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="39">size_file<pos:position pos:line="77" pos:column="48"/></name></name><argument_list pos:line="77" pos:column="48">(<argument><expr><literal type="string" pos:line="77" pos:column="49">"size"<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></decl>;<pos:position pos:line="77" pos:column="57"/></decl_stmt>

<constructor><name><name pos:line="79" pos:column="1">Ssl<pos:position pos:line="79" pos:column="4"/></name><operator pos:line="79" pos:column="4">::<pos:position pos:line="79" pos:column="6"/></operator><name pos:line="79" pos:column="6">CertificateDb<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">::<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="21">CertificateDb<pos:position pos:line="79" pos:column="34"/></name></name><parameter_list pos:line="79" pos:column="34">(<parameter><decl><type><name><name pos:line="79" pos:column="35">std<pos:position pos:line="79" pos:column="38"/></name><operator pos:line="79" pos:column="38">::<pos:position pos:line="79" pos:column="40"/></operator><name pos:line="79" pos:column="40">string<pos:position pos:line="79" pos:column="46"/></name></name> <specifier pos:line="79" pos:column="47">const<pos:position pos:line="79" pos:column="52"/></specifier> <modifier pos:line="79" pos:column="53">&amp;<pos:position pos:line="79" pos:column="58"/></modifier></type> <name pos:line="79" pos:column="55">aDb_path<pos:position pos:line="79" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="79" pos:column="65">size_t<pos:position pos:line="79" pos:column="71"/></name></type> <name pos:line="79" pos:column="72">aMax_db_size<pos:position pos:line="79" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="79" pos:column="86">size_t<pos:position pos:line="79" pos:column="92"/></name></type> <name pos:line="79" pos:column="93">aFs_block_size<pos:position pos:line="79" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="79" pos:column="108"/></parameter_list>
    <member_init_list pos:line="80" pos:column="5">:  <call><name pos:line="80" pos:column="8">db_path<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><name pos:line="80" pos:column="16">aDb_path<pos:position pos:line="80" pos:column="24"/></name></expr></argument>)<pos:position pos:line="80" pos:column="25"/></argument_list></call>,
       <call><name pos:line="81" pos:column="8">db_full<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">aDb_path<pos:position pos:line="81" pos:column="24"/></name> <operator pos:line="81" pos:column="25">+<pos:position pos:line="81" pos:column="26"/></operator> <literal type="string" pos:line="81" pos:column="27">"/"<pos:position pos:line="81" pos:column="30"/></literal> <operator pos:line="81" pos:column="31">+<pos:position pos:line="81" pos:column="32"/></operator> <name pos:line="81" pos:column="33">db_file<pos:position pos:line="81" pos:column="40"/></name></expr></argument>)<pos:position pos:line="81" pos:column="41"/></argument_list></call>,
       <call><name pos:line="82" pos:column="8">cert_full<pos:position pos:line="82" pos:column="17"/></name><argument_list pos:line="82" pos:column="17">(<argument><expr><name pos:line="82" pos:column="18">aDb_path<pos:position pos:line="82" pos:column="26"/></name> <operator pos:line="82" pos:column="27">+<pos:position pos:line="82" pos:column="28"/></operator> <literal type="string" pos:line="82" pos:column="29">"/"<pos:position pos:line="82" pos:column="32"/></literal> <operator pos:line="82" pos:column="33">+<pos:position pos:line="82" pos:column="34"/></operator> <name pos:line="82" pos:column="35">cert_dir<pos:position pos:line="82" pos:column="43"/></name></expr></argument>)<pos:position pos:line="82" pos:column="44"/></argument_list></call>,
       <call><name pos:line="83" pos:column="8">size_full<pos:position pos:line="83" pos:column="17"/></name><argument_list pos:line="83" pos:column="17">(<argument><expr><name pos:line="83" pos:column="18">aDb_path<pos:position pos:line="83" pos:column="26"/></name> <operator pos:line="83" pos:column="27">+<pos:position pos:line="83" pos:column="28"/></operator> <literal type="string" pos:line="83" pos:column="29">"/"<pos:position pos:line="83" pos:column="32"/></literal> <operator pos:line="83" pos:column="33">+<pos:position pos:line="83" pos:column="34"/></operator> <name pos:line="83" pos:column="35">size_file<pos:position pos:line="83" pos:column="44"/></name></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call>,
       <call><name pos:line="84" pos:column="8">max_db_size<pos:position pos:line="84" pos:column="19"/></name><argument_list pos:line="84" pos:column="19">(<argument><expr><name pos:line="84" pos:column="20">aMax_db_size<pos:position pos:line="84" pos:column="32"/></name></expr></argument>)<pos:position pos:line="84" pos:column="33"/></argument_list></call>,
       <call><name pos:line="85" pos:column="8">fs_block_size<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><operator pos:line="85" pos:column="22">(<pos:position pos:line="85" pos:column="23"/></operator><ternary><condition><expr><name pos:line="85" pos:column="23">aFs_block_size<pos:position pos:line="85" pos:column="37"/></name></expr> ?<pos:position pos:line="85" pos:column="39"/></condition><then pos:line="85" pos:column="39"> <expr><name pos:line="85" pos:column="40">aFs_block_size<pos:position pos:line="85" pos:column="54"/></name></expr> <pos:position pos:line="85" pos:column="55"/></then><else pos:line="85" pos:column="55">: <expr><literal type="number" pos:line="85" pos:column="57">2048<pos:position pos:line="85" pos:column="61"/></literal></expr></else></ternary><operator pos:line="85" pos:column="61">)<pos:position pos:line="85" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="85" pos:column="63"/></argument_list></call>,
       <call><name pos:line="86" pos:column="8">dbLock<pos:position pos:line="86" pos:column="14"/></name><argument_list pos:line="86" pos:column="14">(<argument><expr><name pos:line="86" pos:column="15">db_full<pos:position pos:line="86" pos:column="22"/></name></expr></argument>)<pos:position pos:line="86" pos:column="23"/></argument_list></call>,
       <call><name pos:line="87" pos:column="8">enabled_disk_store<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><literal type="boolean" pos:line="87" pos:column="27">true<pos:position pos:line="87" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="32"/></argument_list></call> <pos:position pos:line="87" pos:column="33"/></member_init_list><block pos:line="87" pos:column="33">{
    <if pos:line="88" pos:column="5">if <condition pos:line="88" pos:column="8">(<expr><call><name><name pos:line="88" pos:column="9">db_path<pos:position pos:line="88" pos:column="16"/></name><operator pos:line="88" pos:column="16">.<pos:position pos:line="88" pos:column="17"/></operator><name pos:line="88" pos:column="17">empty<pos:position pos:line="88" pos:column="22"/></name></name><argument_list pos:line="88" pos:column="22">()<pos:position pos:line="88" pos:column="24"/></argument_list></call> <operator pos:line="88" pos:column="25">&amp;&amp;<pos:position pos:line="88" pos:column="35"/></operator> <operator pos:line="88" pos:column="28">!<pos:position pos:line="88" pos:column="29"/></operator><name pos:line="88" pos:column="29">max_db_size<pos:position pos:line="88" pos:column="40"/></name></expr>)<pos:position pos:line="88" pos:column="41"/></condition><then pos:line="88" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name pos:line="89" pos:column="9">enabled_disk_store<pos:position pos:line="89" pos:column="27"/></name> <operator pos:line="89" pos:column="28">=<pos:position pos:line="89" pos:column="29"/></operator> <literal type="boolean" pos:line="89" pos:column="30">false<pos:position pos:line="89" pos:column="35"/></literal></expr>;<pos:position pos:line="89" pos:column="36"/></expr_stmt></block></then>
    <elseif pos:line="90" pos:column="5">else <if pos:line="90" pos:column="10">if <condition pos:line="90" pos:column="13">(<expr><operator pos:line="90" pos:column="14">(<pos:position pos:line="90" pos:column="15"/></operator><call><name><name pos:line="90" pos:column="15">db_path<pos:position pos:line="90" pos:column="22"/></name><operator pos:line="90" pos:column="22">.<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">empty<pos:position pos:line="90" pos:column="28"/></name></name><argument_list pos:line="90" pos:column="28">()<pos:position pos:line="90" pos:column="30"/></argument_list></call> <operator pos:line="90" pos:column="31">&amp;&amp;<pos:position pos:line="90" pos:column="41"/></operator> <name pos:line="90" pos:column="34">max_db_size<pos:position pos:line="90" pos:column="45"/></name><operator pos:line="90" pos:column="45">)<pos:position pos:line="90" pos:column="46"/></operator> <operator pos:line="90" pos:column="47">||<pos:position pos:line="90" pos:column="49"/></operator> <operator pos:line="90" pos:column="50">(<pos:position pos:line="90" pos:column="51"/></operator><operator pos:line="90" pos:column="51">!<pos:position pos:line="90" pos:column="52"/></operator><call><name><name pos:line="90" pos:column="52">db_path<pos:position pos:line="90" pos:column="59"/></name><operator pos:line="90" pos:column="59">.<pos:position pos:line="90" pos:column="60"/></operator><name pos:line="90" pos:column="60">empty<pos:position pos:line="90" pos:column="65"/></name></name><argument_list pos:line="90" pos:column="65">()<pos:position pos:line="90" pos:column="67"/></argument_list></call> <operator pos:line="90" pos:column="68">&amp;&amp;<pos:position pos:line="90" pos:column="78"/></operator> <operator pos:line="90" pos:column="71">!<pos:position pos:line="90" pos:column="72"/></operator><name pos:line="90" pos:column="72">max_db_size<pos:position pos:line="90" pos:column="83"/></name><operator pos:line="90" pos:column="83">)<pos:position pos:line="90" pos:column="84"/></operator></expr>)<pos:position pos:line="90" pos:column="85"/></condition><then pos:line="90" pos:column="85">
        <block type="pseudo"><throw pos:line="91" pos:column="9">throw <expr><call><name><name pos:line="91" pos:column="15">std<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">::<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">runtime_error<pos:position pos:line="91" pos:column="33"/></name></name><argument_list pos:line="91" pos:column="33">(<argument><expr><literal type="string" pos:line="91" pos:column="34">"security_file_certgen is missing the required parameter. There should be -s and -M parameters together."<pos:position pos:line="91" pos:column="139"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="141"/></throw></block></then></if></elseif></if>
}<pos:position pos:line="92" pos:column="2"/></block></constructor>

<function><type><name pos:line="94" pos:column="1">bool<pos:position pos:line="94" pos:column="5"/></name></type> <name><name pos:line="94" pos:column="6">Ssl<pos:position pos:line="94" pos:column="9"/></name><operator pos:line="94" pos:column="9">::<pos:position pos:line="94" pos:column="11"/></operator><name pos:line="94" pos:column="11">CertificateDb<pos:position pos:line="94" pos:column="24"/></name><operator pos:line="94" pos:column="24">::<pos:position pos:line="94" pos:column="26"/></operator><name pos:line="94" pos:column="26">find<pos:position pos:line="94" pos:column="30"/></name></name><parameter_list pos:line="94" pos:column="30">(<parameter><decl><type><name><name pos:line="94" pos:column="31">std<pos:position pos:line="94" pos:column="34"/></name><operator pos:line="94" pos:column="34">::<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">string<pos:position pos:line="94" pos:column="42"/></name></name> <specifier pos:line="94" pos:column="43">const<pos:position pos:line="94" pos:column="48"/></specifier> <modifier pos:line="94" pos:column="49">&amp;<pos:position pos:line="94" pos:column="54"/></modifier></type> <name pos:line="94" pos:column="51">host_name<pos:position pos:line="94" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="94" pos:column="62">Security<pos:position pos:line="94" pos:column="70"/></name><operator pos:line="94" pos:column="70">::<pos:position pos:line="94" pos:column="72"/></operator><name pos:line="94" pos:column="72">CertPointer<pos:position pos:line="94" pos:column="83"/></name></name> <modifier pos:line="94" pos:column="84">&amp;<pos:position pos:line="94" pos:column="89"/></modifier></type> <name pos:line="94" pos:column="86">cert<pos:position pos:line="94" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="94" pos:column="92">Ssl<pos:position pos:line="94" pos:column="95"/></name><operator pos:line="94" pos:column="95">::<pos:position pos:line="94" pos:column="97"/></operator><name pos:line="94" pos:column="97">EVP_PKEY_Pointer<pos:position pos:line="94" pos:column="113"/></name></name> <modifier pos:line="94" pos:column="114">&amp;<pos:position pos:line="94" pos:column="119"/></modifier></type> <name pos:line="94" pos:column="116">pkey<pos:position pos:line="94" pos:column="120"/></name></decl></parameter>)<pos:position pos:line="94" pos:column="121"/></parameter_list> <block pos:line="94" pos:column="122">{
    <decl_stmt><decl><type><specifier pos:line="95" pos:column="5">const<pos:position pos:line="95" pos:column="10"/></specifier> <name pos:line="95" pos:column="11">Locker<pos:position pos:line="95" pos:column="17"/></name></type> <name pos:line="95" pos:column="18">locker<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">dbLock<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="33">Here<pos:position pos:line="95" pos:column="37"/></name></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></decl>;<pos:position pos:line="95" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">load<pos:position pos:line="96" pos:column="9"/></name><argument_list pos:line="96" pos:column="9">()<pos:position pos:line="96" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="12"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><call><name pos:line="97" pos:column="12">pure_find<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">host_name<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">cert<pos:position pos:line="97" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="39">pkey<pos:position pos:line="97" pos:column="43"/></name></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function>

<function><type><name pos:line="100" pos:column="1">bool<pos:position pos:line="100" pos:column="5"/></name></type> <name><name pos:line="100" pos:column="6">Ssl<pos:position pos:line="100" pos:column="9"/></name><operator pos:line="100" pos:column="9">::<pos:position pos:line="100" pos:column="11"/></operator><name pos:line="100" pos:column="11">CertificateDb<pos:position pos:line="100" pos:column="24"/></name><operator pos:line="100" pos:column="24">::<pos:position pos:line="100" pos:column="26"/></operator><name pos:line="100" pos:column="26">purgeCert<pos:position pos:line="100" pos:column="35"/></name></name><parameter_list pos:line="100" pos:column="35">(<parameter><decl><type><name><name pos:line="100" pos:column="36">std<pos:position pos:line="100" pos:column="39"/></name><operator pos:line="100" pos:column="39">::<pos:position pos:line="100" pos:column="41"/></operator><name pos:line="100" pos:column="41">string<pos:position pos:line="100" pos:column="47"/></name></name> <specifier pos:line="100" pos:column="48">const<pos:position pos:line="100" pos:column="53"/></specifier> <modifier pos:line="100" pos:column="54">&amp;<pos:position pos:line="100" pos:column="59"/></modifier></type> <name pos:line="100" pos:column="56">key<pos:position pos:line="100" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="100" pos:column="60"/></parameter_list> <block pos:line="100" pos:column="61">{
    <decl_stmt><decl><type><specifier pos:line="101" pos:column="5">const<pos:position pos:line="101" pos:column="10"/></specifier> <name pos:line="101" pos:column="11">Locker<pos:position pos:line="101" pos:column="17"/></name></type> <name pos:line="101" pos:column="18">locker<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><name pos:line="101" pos:column="25">dbLock<pos:position pos:line="101" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="33">Here<pos:position pos:line="101" pos:column="37"/></name></expr></argument>)<pos:position pos:line="101" pos:column="38"/></argument_list></decl>;<pos:position pos:line="101" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">load<pos:position pos:line="102" pos:column="9"/></name><argument_list pos:line="102" pos:column="9">()<pos:position pos:line="102" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="12"/></expr_stmt>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><operator pos:line="103" pos:column="9">!<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">db<pos:position pos:line="103" pos:column="12"/></name></expr>)<pos:position pos:line="103" pos:column="13"/></condition><then pos:line="103" pos:column="13">
        <block type="pseudo"><return pos:line="104" pos:column="9">return <expr><literal type="boolean" pos:line="104" pos:column="16">false<pos:position pos:line="104" pos:column="21"/></literal></expr>;<pos:position pos:line="104" pos:column="22"/></return></block></then></if>

    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><operator pos:line="106" pos:column="9">!<pos:position pos:line="106" pos:column="10"/></operator><call><name pos:line="106" pos:column="10">deleteByHostname<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">(<argument><expr><name pos:line="106" pos:column="27">key<pos:position pos:line="106" pos:column="30"/></name></expr></argument>)<pos:position pos:line="106" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="106" pos:column="32"/></condition><then pos:line="106" pos:column="32">
        <block type="pseudo"><return pos:line="107" pos:column="9">return <expr><literal type="boolean" pos:line="107" pos:column="16">false<pos:position pos:line="107" pos:column="21"/></literal></expr>;<pos:position pos:line="107" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="109" pos:column="5">save<pos:position pos:line="109" pos:column="9"/></name><argument_list pos:line="109" pos:column="9">()<pos:position pos:line="109" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="12"/></expr_stmt>
    <return pos:line="110" pos:column="5">return <expr><literal type="boolean" pos:line="110" pos:column="12">true<pos:position pos:line="110" pos:column="16"/></literal></expr>;<pos:position pos:line="110" pos:column="17"/></return>
}<pos:position pos:line="111" pos:column="2"/></block></function>

<function><type><name pos:line="113" pos:column="1">bool<pos:position pos:line="113" pos:column="5"/></name></type> <name><name pos:line="113" pos:column="6">Ssl<pos:position pos:line="113" pos:column="9"/></name><operator pos:line="113" pos:column="9">::<pos:position pos:line="113" pos:column="11"/></operator><name pos:line="113" pos:column="11">CertificateDb<pos:position pos:line="113" pos:column="24"/></name><operator pos:line="113" pos:column="24">::<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="26">addCertAndPrivateKey<pos:position pos:line="113" pos:column="46"/></name></name><parameter_list pos:line="113" pos:column="46">(<parameter><decl><type><name><name pos:line="113" pos:column="47">Security<pos:position pos:line="113" pos:column="55"/></name><operator pos:line="113" pos:column="55">::<pos:position pos:line="113" pos:column="57"/></operator><name pos:line="113" pos:column="57">CertPointer<pos:position pos:line="113" pos:column="68"/></name></name> <modifier pos:line="113" pos:column="69">&amp;<pos:position pos:line="113" pos:column="74"/></modifier></type> <name pos:line="113" pos:column="71">cert<pos:position pos:line="113" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="113" pos:column="77">Ssl<pos:position pos:line="113" pos:column="80"/></name><operator pos:line="113" pos:column="80">::<pos:position pos:line="113" pos:column="82"/></operator><name pos:line="113" pos:column="82">EVP_PKEY_Pointer<pos:position pos:line="113" pos:column="98"/></name></name> <modifier pos:line="113" pos:column="99">&amp;<pos:position pos:line="113" pos:column="104"/></modifier></type> <name pos:line="113" pos:column="101">pkey<pos:position pos:line="113" pos:column="105"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="113" pos:column="107">std<pos:position pos:line="113" pos:column="110"/></name><operator pos:line="113" pos:column="110">::<pos:position pos:line="113" pos:column="112"/></operator><name pos:line="113" pos:column="112">string<pos:position pos:line="113" pos:column="118"/></name></name> <specifier pos:line="113" pos:column="119">const<pos:position pos:line="113" pos:column="124"/></specifier> <modifier pos:line="113" pos:column="125">&amp;<pos:position pos:line="113" pos:column="130"/></modifier></type> <name pos:line="113" pos:column="127">useName<pos:position pos:line="113" pos:column="134"/></name></decl></parameter>)<pos:position pos:line="113" pos:column="135"/></parameter_list> <block pos:line="113" pos:column="136">{
    <decl_stmt><decl><type><specifier pos:line="114" pos:column="5">const<pos:position pos:line="114" pos:column="10"/></specifier> <name pos:line="114" pos:column="11">Locker<pos:position pos:line="114" pos:column="17"/></name></type> <name pos:line="114" pos:column="18">locker<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">dbLock<pos:position pos:line="114" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="114" pos:column="33">Here<pos:position pos:line="114" pos:column="37"/></name></expr></argument>)<pos:position pos:line="114" pos:column="38"/></argument_list></decl>;<pos:position pos:line="114" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">load<pos:position pos:line="115" pos:column="9"/></name><argument_list pos:line="115" pos:column="9">()<pos:position pos:line="115" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="12"/></expr_stmt>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><operator pos:line="116" pos:column="9">!<pos:position pos:line="116" pos:column="10"/></operator><name pos:line="116" pos:column="10">db<pos:position pos:line="116" pos:column="12"/></name> <operator pos:line="116" pos:column="13">||<pos:position pos:line="116" pos:column="15"/></operator> <operator pos:line="116" pos:column="16">!<pos:position pos:line="116" pos:column="17"/></operator><name pos:line="116" pos:column="17">cert<pos:position pos:line="116" pos:column="21"/></name> <operator pos:line="116" pos:column="22">||<pos:position pos:line="116" pos:column="24"/></operator> <operator pos:line="116" pos:column="25">!<pos:position pos:line="116" pos:column="26"/></operator><name pos:line="116" pos:column="26">pkey<pos:position pos:line="116" pos:column="30"/></name></expr>)<pos:position pos:line="116" pos:column="31"/></condition><then pos:line="116" pos:column="31">
        <block type="pseudo"><return pos:line="117" pos:column="9">return <expr><literal type="boolean" pos:line="117" pos:column="16">false<pos:position pos:line="117" pos:column="21"/></literal></expr>;<pos:position pos:line="117" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="119" pos:column="5">// Functor to wrap xfree() for std::unique_ptr</comment>
    <typedef pos:line="120" pos:column="5">typedef <type><name><name pos:line="120" pos:column="13">HardFun<pos:position pos:line="120" pos:column="20"/></name><argument_list type="generic" pos:line="120" pos:column="20">&lt;<argument><expr><name pos:line="120" pos:column="21">void<pos:position pos:line="120" pos:column="25"/></name></expr></argument>, <argument><expr><specifier pos:line="120" pos:column="27">const<pos:position pos:line="120" pos:column="32"/></specifier> <name pos:line="120" pos:column="33">void<pos:position pos:line="120" pos:column="37"/></name><modifier pos:line="120" pos:column="37">*<pos:position pos:line="120" pos:column="38"/></modifier></expr></argument>, <argument><expr><operator pos:line="120" pos:column="40">&amp;<pos:position pos:line="120" pos:column="45"/></operator><name pos:line="120" pos:column="41">xfree<pos:position pos:line="120" pos:column="46"/></name></expr></argument>&gt;<pos:position pos:line="120" pos:column="50"/></argument_list></name></type> <name pos:line="120" pos:column="48">CharDeleter<pos:position pos:line="120" pos:column="59"/></name>;<pos:position pos:line="120" pos:column="60"/></typedef>

    <decl_stmt><decl><type><name pos:line="122" pos:column="5">Row<pos:position pos:line="122" pos:column="8"/></name></type> <name pos:line="122" pos:column="9">row<pos:position pos:line="122" pos:column="12"/></name></decl>;<pos:position pos:line="122" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="123" pos:column="5">ASN1_INTEGER<pos:position pos:line="123" pos:column="17"/></name> <modifier pos:line="123" pos:column="18">*<pos:position pos:line="123" pos:column="19"/></modifier></type> <name pos:line="123" pos:column="20">ai<pos:position pos:line="123" pos:column="22"/></name> <init pos:line="123" pos:column="23">= <expr><call><name pos:line="123" pos:column="25">X509_get_serialNumber<pos:position pos:line="123" pos:column="46"/></name><argument_list pos:line="123" pos:column="46">(<argument><expr><call><name><name pos:line="123" pos:column="47">cert<pos:position pos:line="123" pos:column="51"/></name><operator pos:line="123" pos:column="51">.<pos:position pos:line="123" pos:column="52"/></operator><name pos:line="123" pos:column="52">get<pos:position pos:line="123" pos:column="55"/></name></name><argument_list pos:line="123" pos:column="55">()<pos:position pos:line="123" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="123" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="123" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="124" pos:column="5">std<pos:position pos:line="124" pos:column="8"/></name><operator pos:line="124" pos:column="8">::<pos:position pos:line="124" pos:column="10"/></operator><name pos:line="124" pos:column="10">string<pos:position pos:line="124" pos:column="16"/></name></name></type> <name pos:line="124" pos:column="17">serial_string<pos:position pos:line="124" pos:column="30"/></name></decl>;<pos:position pos:line="124" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="125" pos:column="5">Ssl<pos:position pos:line="125" pos:column="8"/></name><operator pos:line="125" pos:column="8">::<pos:position pos:line="125" pos:column="10"/></operator><name pos:line="125" pos:column="10">BIGNUM_Pointer<pos:position pos:line="125" pos:column="24"/></name></name></type> <name pos:line="125" pos:column="25">serial<pos:position pos:line="125" pos:column="31"/></name><argument_list pos:line="125" pos:column="31">(<argument><expr><call><name pos:line="125" pos:column="32">ASN1_INTEGER_to_BN<pos:position pos:line="125" pos:column="50"/></name><argument_list pos:line="125" pos:column="50">(<argument><expr><name pos:line="125" pos:column="51">ai<pos:position pos:line="125" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="55">NULL<pos:position pos:line="125" pos:column="59"/></name></expr></argument>)<pos:position pos:line="125" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="61"/></argument_list></decl>;<pos:position pos:line="125" pos:column="62"/></decl_stmt>
    <block pos:line="126" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="127" pos:column="9">std<pos:position pos:line="127" pos:column="12"/></name><operator pos:line="127" pos:column="12">::<pos:position pos:line="127" pos:column="14"/></operator><name><name pos:line="127" pos:column="14">unique_ptr<pos:position pos:line="127" pos:column="24"/></name><argument_list type="generic" pos:line="127" pos:column="24">&lt;<argument><expr><name pos:line="127" pos:column="25">char<pos:position pos:line="127" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="31">CharDeleter<pos:position pos:line="127" pos:column="42"/></name></expr></argument>&gt;<pos:position pos:line="127" pos:column="46"/></argument_list></name></name></type> <name pos:line="127" pos:column="44">hex_bn<pos:position pos:line="127" pos:column="50"/></name><argument_list pos:line="127" pos:column="50">(<argument><expr><call><name pos:line="127" pos:column="51">BN_bn2hex<pos:position pos:line="127" pos:column="60"/></name><argument_list pos:line="127" pos:column="60">(<argument><expr><call><name><name pos:line="127" pos:column="61">serial<pos:position pos:line="127" pos:column="67"/></name><operator pos:line="127" pos:column="67">.<pos:position pos:line="127" pos:column="68"/></operator><name pos:line="127" pos:column="68">get<pos:position pos:line="127" pos:column="71"/></name></name><argument_list pos:line="127" pos:column="71">()<pos:position pos:line="127" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="75"/></argument_list></decl>;<pos:position pos:line="127" pos:column="76"/></decl_stmt>
        <expr_stmt><expr><name pos:line="128" pos:column="9">serial_string<pos:position pos:line="128" pos:column="22"/></name> <operator pos:line="128" pos:column="23">=<pos:position pos:line="128" pos:column="24"/></operator> <call><name><name pos:line="128" pos:column="25">std<pos:position pos:line="128" pos:column="28"/></name><operator pos:line="128" pos:column="28">::<pos:position pos:line="128" pos:column="30"/></operator><name pos:line="128" pos:column="30">string<pos:position pos:line="128" pos:column="36"/></name></name><argument_list pos:line="128" pos:column="36">(<argument><expr><call><name><name pos:line="128" pos:column="37">hex_bn<pos:position pos:line="128" pos:column="43"/></name><operator pos:line="128" pos:column="43">.<pos:position pos:line="128" pos:column="44"/></operator><name pos:line="128" pos:column="44">get<pos:position pos:line="128" pos:column="47"/></name></name><argument_list pos:line="128" pos:column="47">()<pos:position pos:line="128" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="129" pos:column="6"/></block>
    <expr_stmt><expr><call><name><name pos:line="130" pos:column="5">row<pos:position pos:line="130" pos:column="8"/></name><operator pos:line="130" pos:column="8">.<pos:position pos:line="130" pos:column="9"/></operator><name pos:line="130" pos:column="9">setValue<pos:position pos:line="130" pos:column="17"/></name></name><argument_list pos:line="130" pos:column="17">(<argument><expr><name pos:line="130" pos:column="18">cnlSerial<pos:position pos:line="130" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="130" pos:column="29">serial_string<pos:position pos:line="130" pos:column="42"/></name><operator pos:line="130" pos:column="42">.<pos:position pos:line="130" pos:column="43"/></operator><name pos:line="130" pos:column="43">c_str<pos:position pos:line="130" pos:column="48"/></name></name><argument_list pos:line="130" pos:column="48">()<pos:position pos:line="130" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="52"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="131" pos:column="5">char<pos:position pos:line="131" pos:column="9"/></name> <modifier pos:line="131" pos:column="10">*<pos:position pos:line="131" pos:column="11"/></modifier><modifier pos:line="131" pos:column="11">*<pos:position pos:line="131" pos:column="12"/></modifier></type> <name pos:line="131" pos:column="13">rrow<pos:position pos:line="131" pos:column="17"/></name> <init pos:line="131" pos:column="18">= <expr><call><name pos:line="131" pos:column="20">TXT_DB_get_by_index<pos:position pos:line="131" pos:column="39"/></name><argument_list pos:line="131" pos:column="39">(<argument><expr><call><name><name pos:line="131" pos:column="40">db<pos:position pos:line="131" pos:column="42"/></name><operator pos:line="131" pos:column="42">.<pos:position pos:line="131" pos:column="43"/></operator><name pos:line="131" pos:column="43">get<pos:position pos:line="131" pos:column="46"/></name></name><argument_list pos:line="131" pos:column="46">()<pos:position pos:line="131" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="131" pos:column="50">cnlSerial<pos:position pos:line="131" pos:column="59"/></name></expr></argument>, <argument><expr><call><name><name pos:line="131" pos:column="61">row<pos:position pos:line="131" pos:column="64"/></name><operator pos:line="131" pos:column="64">.<pos:position pos:line="131" pos:column="65"/></operator><name pos:line="131" pos:column="65">getRow<pos:position pos:line="131" pos:column="71"/></name></name><argument_list pos:line="131" pos:column="71">()<pos:position pos:line="131" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="131" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="131" pos:column="75"/></decl_stmt>
    <comment type="line" pos:line="132" pos:column="5">// We are creating certificates with unique serial numbers. If the serial</comment>
    <comment type="line" pos:line="133" pos:column="5">// number is found in the database, the same certificate is already stored.</comment>
    <if pos:line="134" pos:column="5">if <condition pos:line="134" pos:column="8">(<expr><name pos:line="134" pos:column="9">rrow<pos:position pos:line="134" pos:column="13"/></name> <operator pos:line="134" pos:column="14">!=<pos:position pos:line="134" pos:column="16"/></operator> <name pos:line="134" pos:column="17">NULL<pos:position pos:line="134" pos:column="21"/></name></expr>)<pos:position pos:line="134" pos:column="22"/></condition><then pos:line="134" pos:column="22"> <block pos:line="134" pos:column="23">{
        <comment type="line" pos:line="135" pos:column="9">// TODO: check if the stored row is valid.</comment>
        <return pos:line="136" pos:column="9">return <expr><literal type="boolean" pos:line="136" pos:column="16">true<pos:position pos:line="136" pos:column="20"/></literal></expr>;<pos:position pos:line="136" pos:column="21"/></return>
    }<pos:position pos:line="137" pos:column="6"/></block></then></if>

    <block pos:line="139" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="140" pos:column="9">std<pos:position pos:line="140" pos:column="12"/></name><operator pos:line="140" pos:column="12">::<pos:position pos:line="140" pos:column="14"/></operator><name><name pos:line="140" pos:column="14">unique_ptr<pos:position pos:line="140" pos:column="24"/></name><argument_list type="generic" pos:line="140" pos:column="24">&lt;<argument><expr><name pos:line="140" pos:column="25">char<pos:position pos:line="140" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="31">CharDeleter<pos:position pos:line="140" pos:column="42"/></name></expr></argument>&gt;<pos:position pos:line="140" pos:column="46"/></argument_list></name></name></type> <name pos:line="140" pos:column="44">subject<pos:position pos:line="140" pos:column="51"/></name><argument_list pos:line="140" pos:column="51">(<argument><expr><call><name pos:line="140" pos:column="52">X509_NAME_oneline<pos:position pos:line="140" pos:column="69"/></name><argument_list pos:line="140" pos:column="69">(<argument><expr><call><name pos:line="140" pos:column="70">X509_get_subject_name<pos:position pos:line="140" pos:column="91"/></name><argument_list pos:line="140" pos:column="91">(<argument><expr><call><name><name pos:line="140" pos:column="92">cert<pos:position pos:line="140" pos:column="96"/></name><operator pos:line="140" pos:column="96">.<pos:position pos:line="140" pos:column="97"/></operator><name pos:line="140" pos:column="97">get<pos:position pos:line="140" pos:column="100"/></name></name><argument_list pos:line="140" pos:column="100">()<pos:position pos:line="140" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><literal type="null" pos:line="140" pos:column="105">nullptr<pos:position pos:line="140" pos:column="112"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="140" pos:column="114">0<pos:position pos:line="140" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="117"/></argument_list></decl>;<pos:position pos:line="140" pos:column="118"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="141" pos:column="9">Security<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">::<pos:position pos:line="141" pos:column="19"/></operator><name pos:line="141" pos:column="19">CertPointer<pos:position pos:line="141" pos:column="30"/></name></name></type> <name pos:line="141" pos:column="31">findCert<pos:position pos:line="141" pos:column="39"/></name></decl>;<pos:position pos:line="141" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="142" pos:column="9">Ssl<pos:position pos:line="142" pos:column="12"/></name><operator pos:line="142" pos:column="12">::<pos:position pos:line="142" pos:column="14"/></operator><name pos:line="142" pos:column="14">EVP_PKEY_Pointer<pos:position pos:line="142" pos:column="30"/></name></name></type> <name pos:line="142" pos:column="31">findPkey<pos:position pos:line="142" pos:column="39"/></name></decl>;<pos:position pos:line="142" pos:column="40"/></decl_stmt>
        <if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><call><name pos:line="143" pos:column="13">pure_find<pos:position pos:line="143" pos:column="22"/></name><argument_list pos:line="143" pos:column="22">(<argument><expr><ternary><condition><expr><call><name><name pos:line="143" pos:column="23">useName<pos:position pos:line="143" pos:column="30"/></name><operator pos:line="143" pos:column="30">.<pos:position pos:line="143" pos:column="31"/></operator><name pos:line="143" pos:column="31">empty<pos:position pos:line="143" pos:column="36"/></name></name><argument_list pos:line="143" pos:column="36">()<pos:position pos:line="143" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="143" pos:column="40"/></condition><then pos:line="143" pos:column="40"> <expr><call><name><name pos:line="143" pos:column="41">subject<pos:position pos:line="143" pos:column="48"/></name><operator pos:line="143" pos:column="48">.<pos:position pos:line="143" pos:column="49"/></operator><name pos:line="143" pos:column="49">get<pos:position pos:line="143" pos:column="52"/></name></name><argument_list pos:line="143" pos:column="52">()<pos:position pos:line="143" pos:column="54"/></argument_list></call></expr> <pos:position pos:line="143" pos:column="55"/></then><else pos:line="143" pos:column="55">: <expr><name pos:line="143" pos:column="57">useName<pos:position pos:line="143" pos:column="64"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="143" pos:column="66">findCert<pos:position pos:line="143" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="76">findPkey<pos:position pos:line="143" pos:column="84"/></name></expr></argument>)<pos:position pos:line="143" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="143" pos:column="86"/></condition><then pos:line="143" pos:column="86"> <block pos:line="143" pos:column="87">{
            <comment type="line" pos:line="144" pos:column="13">// Replace with database certificate</comment>
            <expr_stmt><expr><name pos:line="145" pos:column="13">cert<pos:position pos:line="145" pos:column="17"/></name> <operator pos:line="145" pos:column="18">=<pos:position pos:line="145" pos:column="19"/></operator> <call><name><name pos:line="145" pos:column="20">std<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">::<pos:position pos:line="145" pos:column="25"/></operator><name pos:line="145" pos:column="25">move<pos:position pos:line="145" pos:column="29"/></name></name><argument_list pos:line="145" pos:column="29">(<argument><expr><name pos:line="145" pos:column="30">findCert<pos:position pos:line="145" pos:column="38"/></name></expr></argument>)<pos:position pos:line="145" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="146" pos:column="13">pkey<pos:position pos:line="146" pos:column="17"/></name> <operator pos:line="146" pos:column="18">=<pos:position pos:line="146" pos:column="19"/></operator> <call><name><name pos:line="146" pos:column="20">std<pos:position pos:line="146" pos:column="23"/></name><operator pos:line="146" pos:column="23">::<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="25">move<pos:position pos:line="146" pos:column="29"/></name></name><argument_list pos:line="146" pos:column="29">(<argument><expr><name pos:line="146" pos:column="30">findPkey<pos:position pos:line="146" pos:column="38"/></name></expr></argument>)<pos:position pos:line="146" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="40"/></expr_stmt>
            <return pos:line="147" pos:column="13">return <expr><literal type="boolean" pos:line="147" pos:column="20">true<pos:position pos:line="147" pos:column="24"/></literal></expr>;<pos:position pos:line="147" pos:column="25"/></return>
        }<pos:position pos:line="148" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="149" pos:column="9">// pure_find may fail because the entry is expired, or because the</comment>
        <comment type="line" pos:line="150" pos:column="9">// certs file is corrupted. Remove any entry with given hostname</comment>
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">deleteByHostname<pos:position pos:line="151" pos:column="25"/></name><argument_list pos:line="151" pos:column="25">(<argument><expr><ternary><condition><expr><call><name><name pos:line="151" pos:column="26">useName<pos:position pos:line="151" pos:column="33"/></name><operator pos:line="151" pos:column="33">.<pos:position pos:line="151" pos:column="34"/></operator><name pos:line="151" pos:column="34">empty<pos:position pos:line="151" pos:column="39"/></name></name><argument_list pos:line="151" pos:column="39">()<pos:position pos:line="151" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="151" pos:column="43"/></condition><then pos:line="151" pos:column="43"> <expr><call><name><name pos:line="151" pos:column="44">subject<pos:position pos:line="151" pos:column="51"/></name><operator pos:line="151" pos:column="51">.<pos:position pos:line="151" pos:column="52"/></operator><name pos:line="151" pos:column="52">get<pos:position pos:line="151" pos:column="55"/></name></name><argument_list pos:line="151" pos:column="55">()<pos:position pos:line="151" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="151" pos:column="58"/></then><else pos:line="151" pos:column="58">: <expr><name pos:line="151" pos:column="60">useName<pos:position pos:line="151" pos:column="67"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="151" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="152" pos:column="6"/></block>

    <comment type="line" pos:line="154" pos:column="5">// check db size while trying to minimize calls to size()</comment>
    <decl_stmt><decl><type><name pos:line="155" pos:column="5">size_t<pos:position pos:line="155" pos:column="11"/></name></type> <name pos:line="155" pos:column="12">dbSize<pos:position pos:line="155" pos:column="18"/></name> <init pos:line="155" pos:column="19">= <expr><call><name pos:line="155" pos:column="21">size<pos:position pos:line="155" pos:column="25"/></name><argument_list pos:line="155" pos:column="25">()<pos:position pos:line="155" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="155" pos:column="28"/></decl_stmt>
    <if pos:line="156" pos:column="5">if <condition pos:line="156" pos:column="8">(<expr><operator pos:line="156" pos:column="9">(<pos:position pos:line="156" pos:column="10"/></operator><name pos:line="156" pos:column="10">dbSize<pos:position pos:line="156" pos:column="16"/></name> <operator pos:line="156" pos:column="17">==<pos:position pos:line="156" pos:column="19"/></operator> <literal type="number" pos:line="156" pos:column="20">0<pos:position pos:line="156" pos:column="21"/></literal> <operator pos:line="156" pos:column="22">&amp;&amp;<pos:position pos:line="156" pos:column="32"/></operator> <call><name pos:line="156" pos:column="25">hasRows<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">()<pos:position pos:line="156" pos:column="34"/></argument_list></call><operator pos:line="156" pos:column="34">)<pos:position pos:line="156" pos:column="35"/></operator> <operator pos:line="156" pos:column="36">||<pos:position pos:line="156" pos:column="38"/></operator>
            <operator pos:line="157" pos:column="13">(<pos:position pos:line="157" pos:column="14"/></operator><name pos:line="157" pos:column="14">dbSize<pos:position pos:line="157" pos:column="20"/></name> <operator pos:line="157" pos:column="21">&gt;<pos:position pos:line="157" pos:column="25"/></operator> <literal type="number" pos:line="157" pos:column="23">0<pos:position pos:line="157" pos:column="24"/></literal> <operator pos:line="157" pos:column="25">&amp;&amp;<pos:position pos:line="157" pos:column="35"/></operator> <operator pos:line="157" pos:column="28">!<pos:position pos:line="157" pos:column="29"/></operator><call><name pos:line="157" pos:column="29">hasRows<pos:position pos:line="157" pos:column="36"/></name><argument_list pos:line="157" pos:column="36">()<pos:position pos:line="157" pos:column="38"/></argument_list></call><operator pos:line="157" pos:column="38">)<pos:position pos:line="157" pos:column="39"/></operator> <operator pos:line="157" pos:column="40">||<pos:position pos:line="157" pos:column="42"/></operator>
            <operator pos:line="158" pos:column="13">(<pos:position pos:line="158" pos:column="14"/></operator><name pos:line="158" pos:column="14">dbSize<pos:position pos:line="158" pos:column="20"/></name> <operator pos:line="158" pos:column="21">&gt;<pos:position pos:line="158" pos:column="25"/></operator>  <literal type="number" pos:line="158" pos:column="24">10<pos:position pos:line="158" pos:column="26"/></literal> <operator pos:line="158" pos:column="27">*<pos:position pos:line="158" pos:column="28"/></operator> <name pos:line="158" pos:column="29">max_db_size<pos:position pos:line="158" pos:column="40"/></name><operator pos:line="158" pos:column="40">)<pos:position pos:line="158" pos:column="41"/></operator></expr>)<pos:position pos:line="158" pos:column="42"/></condition><then pos:line="158" pos:column="42"> <block pos:line="158" pos:column="43">{
        <comment type="line" pos:line="159" pos:column="9">// Invalid database size, rebuild</comment>
        <expr_stmt><expr><name pos:line="160" pos:column="9">dbSize<pos:position pos:line="160" pos:column="15"/></name> <operator pos:line="160" pos:column="16">=<pos:position pos:line="160" pos:column="17"/></operator> <call><name pos:line="160" pos:column="18">rebuildSize<pos:position pos:line="160" pos:column="29"/></name><argument_list pos:line="160" pos:column="29">()<pos:position pos:line="160" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></then></if>
    <while pos:line="162" pos:column="5">while <condition pos:line="162" pos:column="11">(<expr><name pos:line="162" pos:column="12">dbSize<pos:position pos:line="162" pos:column="18"/></name> <operator pos:line="162" pos:column="19">&gt;<pos:position pos:line="162" pos:column="23"/></operator> <name pos:line="162" pos:column="21">max_db_size<pos:position pos:line="162" pos:column="32"/></name> <operator pos:line="162" pos:column="33">&amp;&amp;<pos:position pos:line="162" pos:column="43"/></operator> <call><name pos:line="162" pos:column="36">deleteInvalidCertificate<pos:position pos:line="162" pos:column="60"/></name><argument_list pos:line="162" pos:column="60">()<pos:position pos:line="162" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="162" pos:column="63"/></condition> <block pos:line="162" pos:column="64">{
        <expr_stmt><expr><name pos:line="163" pos:column="9">dbSize<pos:position pos:line="163" pos:column="15"/></name> <operator pos:line="163" pos:column="16">=<pos:position pos:line="163" pos:column="17"/></operator> <call><name pos:line="163" pos:column="18">size<pos:position pos:line="163" pos:column="22"/></name><argument_list pos:line="163" pos:column="22">()<pos:position pos:line="163" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="25"/></expr_stmt> <comment type="line" pos:line="163" pos:column="26">// get the current database size</comment>
        <comment type="line" pos:line="164" pos:column="9">// and try to find another invalid certificate if needed</comment>
    }<pos:position pos:line="165" pos:column="6"/></block></while>
    <comment type="line" pos:line="166" pos:column="5">// there are no more invalid ones, but there must be valid certificates</comment>
    <while pos:line="167" pos:column="5">while <condition pos:line="167" pos:column="11">(<expr><name pos:line="167" pos:column="12">dbSize<pos:position pos:line="167" pos:column="18"/></name> <operator pos:line="167" pos:column="19">&gt;<pos:position pos:line="167" pos:column="23"/></operator> <name pos:line="167" pos:column="21">max_db_size<pos:position pos:line="167" pos:column="32"/></name></expr>)<pos:position pos:line="167" pos:column="33"/></condition> <block pos:line="167" pos:column="34">{
        <if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><operator pos:line="168" pos:column="13">!<pos:position pos:line="168" pos:column="14"/></operator><call><name pos:line="168" pos:column="14">deleteOldestCertificate<pos:position pos:line="168" pos:column="37"/></name><argument_list pos:line="168" pos:column="37">()<pos:position pos:line="168" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="168" pos:column="40"/></condition><then pos:line="168" pos:column="40"> <block pos:line="168" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="169" pos:column="13">rebuildSize<pos:position pos:line="169" pos:column="24"/></name><argument_list pos:line="169" pos:column="24">()<pos:position pos:line="169" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="27"/></expr_stmt> <comment type="line" pos:line="169" pos:column="28">// No certificates in database.Update the size file.</comment>
            <expr_stmt><expr><call><name pos:line="170" pos:column="13">save<pos:position pos:line="170" pos:column="17"/></name><argument_list pos:line="170" pos:column="17">()<pos:position pos:line="170" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="20"/></expr_stmt> <comment type="line" pos:line="170" pos:column="21">// Some entries may have been removed. Update the index file.</comment>
            <return pos:line="171" pos:column="13">return <expr><literal type="boolean" pos:line="171" pos:column="20">false<pos:position pos:line="171" pos:column="25"/></literal></expr>;<pos:position pos:line="171" pos:column="26"/></return> <comment type="line" pos:line="171" pos:column="27">// errors prevented us from freeing enough space</comment>
        }<pos:position pos:line="172" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="173" pos:column="9">dbSize<pos:position pos:line="173" pos:column="15"/></name> <operator pos:line="173" pos:column="16">=<pos:position pos:line="173" pos:column="17"/></operator> <call><name pos:line="173" pos:column="18">size<pos:position pos:line="173" pos:column="22"/></name><argument_list pos:line="173" pos:column="22">()<pos:position pos:line="173" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="25"/></expr_stmt> <comment type="line" pos:line="173" pos:column="26">// get the current database size</comment>
    }<pos:position pos:line="174" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="176" pos:column="5">row<pos:position pos:line="176" pos:column="8"/></name><operator pos:line="176" pos:column="8">.<pos:position pos:line="176" pos:column="9"/></operator><name pos:line="176" pos:column="9">setValue<pos:position pos:line="176" pos:column="17"/></name></name><argument_list pos:line="176" pos:column="17">(<argument><expr><name pos:line="176" pos:column="18">cnlType<pos:position pos:line="176" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="27">"V"<pos:position pos:line="176" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="32"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="177" pos:column="5">ASN1_UTCTIME<pos:position pos:line="177" pos:column="17"/></name> <modifier pos:line="177" pos:column="18">*<pos:position pos:line="177" pos:column="19"/></modifier></type> <name pos:line="177" pos:column="20">tm<pos:position pos:line="177" pos:column="22"/></name> <init pos:line="177" pos:column="23">= <expr><call><name pos:line="177" pos:column="25">X509_get_notAfter<pos:position pos:line="177" pos:column="42"/></name><argument_list pos:line="177" pos:column="42">(<argument><expr><call><name><name pos:line="177" pos:column="43">cert<pos:position pos:line="177" pos:column="47"/></name><operator pos:line="177" pos:column="47">.<pos:position pos:line="177" pos:column="48"/></operator><name pos:line="177" pos:column="48">get<pos:position pos:line="177" pos:column="51"/></name></name><argument_list pos:line="177" pos:column="51">()<pos:position pos:line="177" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="177" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="177" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="178" pos:column="5">row<pos:position pos:line="178" pos:column="8"/></name><operator pos:line="178" pos:column="8">.<pos:position pos:line="178" pos:column="9"/></operator><name pos:line="178" pos:column="9">setValue<pos:position pos:line="178" pos:column="17"/></name></name><argument_list pos:line="178" pos:column="17">(<argument><expr><name pos:line="178" pos:column="18">cnlExp_date<pos:position pos:line="178" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="178" pos:column="31">std<pos:position pos:line="178" pos:column="34"/></name><operator pos:line="178" pos:column="34">::<pos:position pos:line="178" pos:column="36"/></operator><name pos:line="178" pos:column="36">string<pos:position pos:line="178" pos:column="42"/></name></name><argument_list pos:line="178" pos:column="42">(<argument><expr><cast type="reinterpret" pos:line="178" pos:column="43">reinterpret_cast<argument_list type="generic" pos:line="178" pos:column="59">&lt;<argument><expr><name pos:line="178" pos:column="60">char<pos:position pos:line="178" pos:column="64"/></name> <operator pos:line="178" pos:column="65">*<pos:position pos:line="178" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="178" pos:column="70"/></argument_list><argument_list pos:line="178" pos:column="67">(<argument><expr><name><name pos:line="178" pos:column="68">tm<pos:position pos:line="178" pos:column="70"/></name><operator pos:line="178" pos:column="70">-&gt;<pos:position pos:line="178" pos:column="75"/></operator><name pos:line="178" pos:column="72">data<pos:position pos:line="178" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="77"/></argument_list></cast></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="79">tm<pos:position pos:line="178" pos:column="81"/></name><operator pos:line="178" pos:column="81">-&gt;<pos:position pos:line="178" pos:column="86"/></operator><name pos:line="178" pos:column="83">length<pos:position pos:line="178" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="178" pos:column="90"/></argument_list></call><operator pos:line="178" pos:column="90">.<pos:position pos:line="178" pos:column="91"/></operator><call><name pos:line="178" pos:column="91">c_str<pos:position pos:line="178" pos:column="96"/></name><argument_list pos:line="178" pos:column="96">()<pos:position pos:line="178" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="178" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="100"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="179" pos:column="5">row<pos:position pos:line="179" pos:column="8"/></name><operator pos:line="179" pos:column="8">.<pos:position pos:line="179" pos:column="9"/></operator><name pos:line="179" pos:column="9">setValue<pos:position pos:line="179" pos:column="17"/></name></name><argument_list pos:line="179" pos:column="17">(<argument><expr><name pos:line="179" pos:column="18">cnlFile<pos:position pos:line="179" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="27">"unknown"<pos:position pos:line="179" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="38"/></expr_stmt>
    <if pos:line="180" pos:column="5">if <condition pos:line="180" pos:column="8">(<expr><operator pos:line="180" pos:column="9">!<pos:position pos:line="180" pos:column="10"/></operator><call><name><name pos:line="180" pos:column="10">useName<pos:position pos:line="180" pos:column="17"/></name><operator pos:line="180" pos:column="17">.<pos:position pos:line="180" pos:column="18"/></operator><name pos:line="180" pos:column="18">empty<pos:position pos:line="180" pos:column="23"/></name></name><argument_list pos:line="180" pos:column="23">()<pos:position pos:line="180" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="180" pos:column="26"/></condition><then pos:line="180" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="181" pos:column="9">row<pos:position pos:line="181" pos:column="12"/></name><operator pos:line="181" pos:column="12">.<pos:position pos:line="181" pos:column="13"/></operator><name pos:line="181" pos:column="13">setValue<pos:position pos:line="181" pos:column="21"/></name></name><argument_list pos:line="181" pos:column="21">(<argument><expr><name pos:line="181" pos:column="22">cnlName<pos:position pos:line="181" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="181" pos:column="31">useName<pos:position pos:line="181" pos:column="38"/></name><operator pos:line="181" pos:column="38">.<pos:position pos:line="181" pos:column="39"/></operator><name pos:line="181" pos:column="39">c_str<pos:position pos:line="181" pos:column="44"/></name></name><argument_list pos:line="181" pos:column="44">()<pos:position pos:line="181" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="181" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="182" pos:column="5">else <block pos:line="182" pos:column="10">{
        <decl_stmt><decl><type><name><name pos:line="183" pos:column="9">std<pos:position pos:line="183" pos:column="12"/></name><operator pos:line="183" pos:column="12">::<pos:position pos:line="183" pos:column="14"/></operator><name><name pos:line="183" pos:column="14">unique_ptr<pos:position pos:line="183" pos:column="24"/></name><argument_list type="generic" pos:line="183" pos:column="24">&lt;<argument><expr><name pos:line="183" pos:column="25">char<pos:position pos:line="183" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="31">CharDeleter<pos:position pos:line="183" pos:column="42"/></name></expr></argument>&gt;<pos:position pos:line="183" pos:column="46"/></argument_list></name></name></type> <name pos:line="183" pos:column="44">subject<pos:position pos:line="183" pos:column="51"/></name><argument_list pos:line="183" pos:column="51">(<argument><expr><call><name pos:line="183" pos:column="52">X509_NAME_oneline<pos:position pos:line="183" pos:column="69"/></name><argument_list pos:line="183" pos:column="69">(<argument><expr><call><name pos:line="183" pos:column="70">X509_get_subject_name<pos:position pos:line="183" pos:column="91"/></name><argument_list pos:line="183" pos:column="91">(<argument><expr><call><name><name pos:line="183" pos:column="92">cert<pos:position pos:line="183" pos:column="96"/></name><operator pos:line="183" pos:column="96">.<pos:position pos:line="183" pos:column="97"/></operator><name pos:line="183" pos:column="97">get<pos:position pos:line="183" pos:column="100"/></name></name><argument_list pos:line="183" pos:column="100">()<pos:position pos:line="183" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><literal type="null" pos:line="183" pos:column="105">nullptr<pos:position pos:line="183" pos:column="112"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="183" pos:column="114">0<pos:position pos:line="183" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="183" pos:column="117"/></argument_list></decl>;<pos:position pos:line="183" pos:column="118"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="184" pos:column="9">row<pos:position pos:line="184" pos:column="12"/></name><operator pos:line="184" pos:column="12">.<pos:position pos:line="184" pos:column="13"/></operator><name pos:line="184" pos:column="13">setValue<pos:position pos:line="184" pos:column="21"/></name></name><argument_list pos:line="184" pos:column="21">(<argument><expr><name pos:line="184" pos:column="22">cnlName<pos:position pos:line="184" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="184" pos:column="31">subject<pos:position pos:line="184" pos:column="38"/></name><operator pos:line="184" pos:column="38">.<pos:position pos:line="184" pos:column="39"/></operator><name pos:line="184" pos:column="39">get<pos:position pos:line="184" pos:column="42"/></name></name><argument_list pos:line="184" pos:column="42">()<pos:position pos:line="184" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="184" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="185" pos:column="6"/></block></else></if>

    <if pos:line="187" pos:column="5">if <condition pos:line="187" pos:column="8">(<expr><operator pos:line="187" pos:column="9">!<pos:position pos:line="187" pos:column="10"/></operator><call><name pos:line="187" pos:column="10">TXT_DB_insert<pos:position pos:line="187" pos:column="23"/></name><argument_list pos:line="187" pos:column="23">(<argument><expr><call><name><name pos:line="187" pos:column="24">db<pos:position pos:line="187" pos:column="26"/></name><operator pos:line="187" pos:column="26">.<pos:position pos:line="187" pos:column="27"/></operator><name pos:line="187" pos:column="27">get<pos:position pos:line="187" pos:column="30"/></name></name><argument_list pos:line="187" pos:column="30">()<pos:position pos:line="187" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="187" pos:column="34">row<pos:position pos:line="187" pos:column="37"/></name><operator pos:line="187" pos:column="37">.<pos:position pos:line="187" pos:column="38"/></operator><name pos:line="187" pos:column="38">getRow<pos:position pos:line="187" pos:column="44"/></name></name><argument_list pos:line="187" pos:column="44">()<pos:position pos:line="187" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="187" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="48"/></condition><then pos:line="187" pos:column="48"> <block pos:line="187" pos:column="49">{
        <comment type="line" pos:line="188" pos:column="9">// failed to add index (???) but we may have already modified</comment>
        <comment type="line" pos:line="189" pos:column="9">// the database so save before exit</comment>
        <expr_stmt><expr><call><name pos:line="190" pos:column="9">save<pos:position pos:line="190" pos:column="13"/></name><argument_list pos:line="190" pos:column="13">()<pos:position pos:line="190" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="16"/></expr_stmt>
        <return pos:line="191" pos:column="9">return <expr><literal type="boolean" pos:line="191" pos:column="16">false<pos:position pos:line="191" pos:column="21"/></literal></expr>;<pos:position pos:line="191" pos:column="22"/></return>
    }<pos:position pos:line="192" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="193" pos:column="5">rrow<pos:position pos:line="193" pos:column="9"/></name> <operator pos:line="193" pos:column="10">=<pos:position pos:line="193" pos:column="11"/></operator> <call><name><name pos:line="193" pos:column="12">row<pos:position pos:line="193" pos:column="15"/></name><operator pos:line="193" pos:column="15">.<pos:position pos:line="193" pos:column="16"/></operator><name pos:line="193" pos:column="16">getRow<pos:position pos:line="193" pos:column="22"/></name></name><argument_list pos:line="193" pos:column="22">()<pos:position pos:line="193" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="194" pos:column="5">row<pos:position pos:line="194" pos:column="8"/></name><operator pos:line="194" pos:column="8">.<pos:position pos:line="194" pos:column="9"/></operator><name pos:line="194" pos:column="9">reset<pos:position pos:line="194" pos:column="14"/></name></name><argument_list pos:line="194" pos:column="14">()<pos:position pos:line="194" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="17"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="196" pos:column="5">std<pos:position pos:line="196" pos:column="8"/></name><operator pos:line="196" pos:column="8">::<pos:position pos:line="196" pos:column="10"/></operator><name pos:line="196" pos:column="10">string<pos:position pos:line="196" pos:column="16"/></name></name></type> <name pos:line="196" pos:column="17">filename<pos:position pos:line="196" pos:column="25"/></name><argument_list pos:line="196" pos:column="25">(<argument><expr><name pos:line="196" pos:column="26">cert_full<pos:position pos:line="196" pos:column="35"/></name> <operator pos:line="196" pos:column="36">+<pos:position pos:line="196" pos:column="37"/></operator> <literal type="string" pos:line="196" pos:column="38">"/"<pos:position pos:line="196" pos:column="41"/></literal> <operator pos:line="196" pos:column="42">+<pos:position pos:line="196" pos:column="43"/></operator> <name pos:line="196" pos:column="44">serial_string<pos:position pos:line="196" pos:column="57"/></name> <operator pos:line="196" pos:column="58">+<pos:position pos:line="196" pos:column="59"/></operator> <literal type="string" pos:line="196" pos:column="60">".pem"<pos:position pos:line="196" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="67"/></argument_list></decl>;<pos:position pos:line="196" pos:column="68"/></decl_stmt>
    <if pos:line="197" pos:column="5">if <condition pos:line="197" pos:column="8">(<expr><operator pos:line="197" pos:column="9">!<pos:position pos:line="197" pos:column="10"/></operator><call><name pos:line="197" pos:column="10">writeCertAndPrivateKeyToFile<pos:position pos:line="197" pos:column="38"/></name><argument_list pos:line="197" pos:column="38">(<argument><expr><name pos:line="197" pos:column="39">cert<pos:position pos:line="197" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="45">pkey<pos:position pos:line="197" pos:column="49"/></name></expr></argument>, <argument><expr><call><name><name pos:line="197" pos:column="51">filename<pos:position pos:line="197" pos:column="59"/></name><operator pos:line="197" pos:column="59">.<pos:position pos:line="197" pos:column="60"/></operator><name pos:line="197" pos:column="60">c_str<pos:position pos:line="197" pos:column="65"/></name></name><argument_list pos:line="197" pos:column="65">()<pos:position pos:line="197" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="197" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="197" pos:column="69"/></condition><then pos:line="197" pos:column="69"> <block pos:line="197" pos:column="70">{
        <comment type="line" pos:line="198" pos:column="9">//remove row from txt_db and save</comment>
        <expr_stmt><expr><call><name pos:line="199" pos:column="9">sq_TXT_DB_delete<pos:position pos:line="199" pos:column="25"/></name><argument_list pos:line="199" pos:column="25">(<argument><expr><call><name><name pos:line="199" pos:column="26">db<pos:position pos:line="199" pos:column="28"/></name><operator pos:line="199" pos:column="28">.<pos:position pos:line="199" pos:column="29"/></operator><name pos:line="199" pos:column="29">get<pos:position pos:line="199" pos:column="32"/></name></name><argument_list pos:line="199" pos:column="32">()<pos:position pos:line="199" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="199" pos:column="36">(<pos:position pos:line="199" pos:column="37"/></operator><specifier pos:line="199" pos:column="37">const<pos:position pos:line="199" pos:column="42"/></specifier> <name pos:line="199" pos:column="43">char<pos:position pos:line="199" pos:column="47"/></name> <operator pos:line="199" pos:column="48">*<pos:position pos:line="199" pos:column="49"/></operator><operator pos:line="199" pos:column="49">*<pos:position pos:line="199" pos:column="50"/></operator><operator pos:line="199" pos:column="50">)<pos:position pos:line="199" pos:column="51"/></operator><name pos:line="199" pos:column="51">rrow<pos:position pos:line="199" pos:column="55"/></name></expr></argument>)<pos:position pos:line="199" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="200" pos:column="9">save<pos:position pos:line="200" pos:column="13"/></name><argument_list pos:line="200" pos:column="13">()<pos:position pos:line="200" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="16"/></expr_stmt>
        <return pos:line="201" pos:column="9">return <expr><literal type="boolean" pos:line="201" pos:column="16">false<pos:position pos:line="201" pos:column="21"/></literal></expr>;<pos:position pos:line="201" pos:column="22"/></return>
    }<pos:position pos:line="202" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="203" pos:column="5">addSize<pos:position pos:line="203" pos:column="12"/></name><argument_list pos:line="203" pos:column="12">(<argument><expr><name pos:line="203" pos:column="13">filename<pos:position pos:line="203" pos:column="21"/></name></expr></argument>)<pos:position pos:line="203" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="205" pos:column="5">save<pos:position pos:line="205" pos:column="9"/></name><argument_list pos:line="205" pos:column="9">()<pos:position pos:line="205" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="12"/></expr_stmt>
    <return pos:line="206" pos:column="5">return <expr><literal type="boolean" pos:line="206" pos:column="12">true<pos:position pos:line="206" pos:column="16"/></literal></expr>;<pos:position pos:line="206" pos:column="17"/></return>
}<pos:position pos:line="207" pos:column="2"/></block></function>

<function><type><name pos:line="209" pos:column="1">void<pos:position pos:line="209" pos:column="5"/></name></type> <name><name pos:line="209" pos:column="6">Ssl<pos:position pos:line="209" pos:column="9"/></name><operator pos:line="209" pos:column="9">::<pos:position pos:line="209" pos:column="11"/></operator><name pos:line="209" pos:column="11">CertificateDb<pos:position pos:line="209" pos:column="24"/></name><operator pos:line="209" pos:column="24">::<pos:position pos:line="209" pos:column="26"/></operator><name pos:line="209" pos:column="26">create<pos:position pos:line="209" pos:column="32"/></name></name><parameter_list pos:line="209" pos:column="32">(<parameter><decl><type><name><name pos:line="209" pos:column="33">std<pos:position pos:line="209" pos:column="36"/></name><operator pos:line="209" pos:column="36">::<pos:position pos:line="209" pos:column="38"/></operator><name pos:line="209" pos:column="38">string<pos:position pos:line="209" pos:column="44"/></name></name> <specifier pos:line="209" pos:column="45">const<pos:position pos:line="209" pos:column="50"/></specifier> <modifier pos:line="209" pos:column="51">&amp;<pos:position pos:line="209" pos:column="56"/></modifier></type> <name pos:line="209" pos:column="53">db_path<pos:position pos:line="209" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="209" pos:column="61"/></parameter_list> <block pos:line="209" pos:column="62">{
    <if pos:line="210" pos:column="5">if <condition pos:line="210" pos:column="8">(<expr><name pos:line="210" pos:column="9">db_path<pos:position pos:line="210" pos:column="16"/></name> <operator pos:line="210" pos:column="17">==<pos:position pos:line="210" pos:column="19"/></operator> <literal type="string" pos:line="210" pos:column="20">""<pos:position pos:line="210" pos:column="22"/></literal></expr>)<pos:position pos:line="210" pos:column="23"/></condition><then pos:line="210" pos:column="23">
        <block type="pseudo"><throw pos:line="211" pos:column="9">throw <expr><call><name><name pos:line="211" pos:column="15">std<pos:position pos:line="211" pos:column="18"/></name><operator pos:line="211" pos:column="18">::<pos:position pos:line="211" pos:column="20"/></operator><name pos:line="211" pos:column="20">runtime_error<pos:position pos:line="211" pos:column="33"/></name></name><argument_list pos:line="211" pos:column="33">(<argument><expr><literal type="string" pos:line="211" pos:column="34">"Path to db is empty"<pos:position pos:line="211" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="57"/></throw></block></then></if>
    <decl_stmt><decl><type><name><name pos:line="212" pos:column="5">std<pos:position pos:line="212" pos:column="8"/></name><operator pos:line="212" pos:column="8">::<pos:position pos:line="212" pos:column="10"/></operator><name pos:line="212" pos:column="10">string<pos:position pos:line="212" pos:column="16"/></name></name></type> <name pos:line="212" pos:column="17">db_full<pos:position pos:line="212" pos:column="24"/></name><argument_list pos:line="212" pos:column="24">(<argument><expr><name pos:line="212" pos:column="25">db_path<pos:position pos:line="212" pos:column="32"/></name> <operator pos:line="212" pos:column="33">+<pos:position pos:line="212" pos:column="34"/></operator> <literal type="string" pos:line="212" pos:column="35">"/"<pos:position pos:line="212" pos:column="38"/></literal> <operator pos:line="212" pos:column="39">+<pos:position pos:line="212" pos:column="40"/></operator> <name pos:line="212" pos:column="41">db_file<pos:position pos:line="212" pos:column="48"/></name></expr></argument>)<pos:position pos:line="212" pos:column="49"/></argument_list></decl>;<pos:position pos:line="212" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="213" pos:column="5">std<pos:position pos:line="213" pos:column="8"/></name><operator pos:line="213" pos:column="8">::<pos:position pos:line="213" pos:column="10"/></operator><name pos:line="213" pos:column="10">string<pos:position pos:line="213" pos:column="16"/></name></name></type> <name pos:line="213" pos:column="17">cert_full<pos:position pos:line="213" pos:column="26"/></name><argument_list pos:line="213" pos:column="26">(<argument><expr><name pos:line="213" pos:column="27">db_path<pos:position pos:line="213" pos:column="34"/></name> <operator pos:line="213" pos:column="35">+<pos:position pos:line="213" pos:column="36"/></operator> <literal type="string" pos:line="213" pos:column="37">"/"<pos:position pos:line="213" pos:column="40"/></literal> <operator pos:line="213" pos:column="41">+<pos:position pos:line="213" pos:column="42"/></operator> <name pos:line="213" pos:column="43">cert_dir<pos:position pos:line="213" pos:column="51"/></name></expr></argument>)<pos:position pos:line="213" pos:column="52"/></argument_list></decl>;<pos:position pos:line="213" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="214" pos:column="5">std<pos:position pos:line="214" pos:column="8"/></name><operator pos:line="214" pos:column="8">::<pos:position pos:line="214" pos:column="10"/></operator><name pos:line="214" pos:column="10">string<pos:position pos:line="214" pos:column="16"/></name></name></type> <name pos:line="214" pos:column="17">size_full<pos:position pos:line="214" pos:column="26"/></name><argument_list pos:line="214" pos:column="26">(<argument><expr><name pos:line="214" pos:column="27">db_path<pos:position pos:line="214" pos:column="34"/></name> <operator pos:line="214" pos:column="35">+<pos:position pos:line="214" pos:column="36"/></operator> <literal type="string" pos:line="214" pos:column="37">"/"<pos:position pos:line="214" pos:column="40"/></literal> <operator pos:line="214" pos:column="41">+<pos:position pos:line="214" pos:column="42"/></operator> <name pos:line="214" pos:column="43">size_file<pos:position pos:line="214" pos:column="52"/></name></expr></argument>)<pos:position pos:line="214" pos:column="53"/></argument_list></decl>;<pos:position pos:line="214" pos:column="54"/></decl_stmt>

    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><call><name pos:line="216" pos:column="9">mkdir<pos:position pos:line="216" pos:column="14"/></name><argument_list pos:line="216" pos:column="14">(<argument><expr><call><name><name pos:line="216" pos:column="15">db_path<pos:position pos:line="216" pos:column="22"/></name><operator pos:line="216" pos:column="22">.<pos:position pos:line="216" pos:column="23"/></operator><name pos:line="216" pos:column="23">c_str<pos:position pos:line="216" pos:column="28"/></name></name><argument_list pos:line="216" pos:column="28">()<pos:position pos:line="216" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="216" pos:column="32">0777<pos:position pos:line="216" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="216" pos:column="38"/></condition><then pos:line="216" pos:column="38">
        <block type="pseudo"><throw pos:line="217" pos:column="9">throw <expr><call><name><name pos:line="217" pos:column="15">std<pos:position pos:line="217" pos:column="18"/></name><operator pos:line="217" pos:column="18">::<pos:position pos:line="217" pos:column="20"/></operator><name pos:line="217" pos:column="20">runtime_error<pos:position pos:line="217" pos:column="33"/></name></name><argument_list pos:line="217" pos:column="33">(<argument><expr><literal type="string" pos:line="217" pos:column="34">"Cannot create "<pos:position pos:line="217" pos:column="50"/></literal> <operator pos:line="217" pos:column="51">+<pos:position pos:line="217" pos:column="52"/></operator> <name pos:line="217" pos:column="53">db_path<pos:position pos:line="217" pos:column="60"/></name></expr></argument>)<pos:position pos:line="217" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="62"/></throw></block></then></if>

    <if pos:line="219" pos:column="5">if <condition pos:line="219" pos:column="8">(<expr><call><name pos:line="219" pos:column="9">mkdir<pos:position pos:line="219" pos:column="14"/></name><argument_list pos:line="219" pos:column="14">(<argument><expr><call><name><name pos:line="219" pos:column="15">cert_full<pos:position pos:line="219" pos:column="24"/></name><operator pos:line="219" pos:column="24">.<pos:position pos:line="219" pos:column="25"/></operator><name pos:line="219" pos:column="25">c_str<pos:position pos:line="219" pos:column="30"/></name></name><argument_list pos:line="219" pos:column="30">()<pos:position pos:line="219" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="219" pos:column="34">0777<pos:position pos:line="219" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="219" pos:column="40"/></condition><then pos:line="219" pos:column="40">
        <block type="pseudo"><throw pos:line="220" pos:column="9">throw <expr><call><name><name pos:line="220" pos:column="15">std<pos:position pos:line="220" pos:column="18"/></name><operator pos:line="220" pos:column="18">::<pos:position pos:line="220" pos:column="20"/></operator><name pos:line="220" pos:column="20">runtime_error<pos:position pos:line="220" pos:column="33"/></name></name><argument_list pos:line="220" pos:column="33">(<argument><expr><literal type="string" pos:line="220" pos:column="34">"Cannot create "<pos:position pos:line="220" pos:column="50"/></literal> <operator pos:line="220" pos:column="51">+<pos:position pos:line="220" pos:column="52"/></operator> <name pos:line="220" pos:column="53">cert_full<pos:position pos:line="220" pos:column="62"/></name></expr></argument>)<pos:position pos:line="220" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="64"/></throw></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="222" pos:column="5">std<pos:position pos:line="222" pos:column="8"/></name><operator pos:line="222" pos:column="8">::<pos:position pos:line="222" pos:column="10"/></operator><name pos:line="222" pos:column="10">ofstream<pos:position pos:line="222" pos:column="18"/></name></name></type> <name pos:line="222" pos:column="19">size<pos:position pos:line="222" pos:column="23"/></name><argument_list pos:line="222" pos:column="23">(<argument><expr><call><name><name pos:line="222" pos:column="24">size_full<pos:position pos:line="222" pos:column="33"/></name><operator pos:line="222" pos:column="33">.<pos:position pos:line="222" pos:column="34"/></operator><name pos:line="222" pos:column="34">c_str<pos:position pos:line="222" pos:column="39"/></name></name><argument_list pos:line="222" pos:column="39">()<pos:position pos:line="222" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="222" pos:column="42"/></argument_list></decl>;<pos:position pos:line="222" pos:column="43"/></decl_stmt>
    <if pos:line="223" pos:column="5">if <condition pos:line="223" pos:column="8">(<expr><name pos:line="223" pos:column="9">size<pos:position pos:line="223" pos:column="13"/></name></expr>)<pos:position pos:line="223" pos:column="14"/></condition><then pos:line="223" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><name pos:line="224" pos:column="9">size<pos:position pos:line="224" pos:column="13"/></name> <operator pos:line="224" pos:column="14">&lt;&lt;<pos:position pos:line="224" pos:column="22"/></operator> <literal type="number" pos:line="224" pos:column="17">0<pos:position pos:line="224" pos:column="18"/></literal></expr>;<pos:position pos:line="224" pos:column="19"/></expr_stmt></block></then>
    <else pos:line="225" pos:column="5">else
        <block type="pseudo"><throw pos:line="226" pos:column="9">throw <expr><call><name><name pos:line="226" pos:column="15">std<pos:position pos:line="226" pos:column="18"/></name><operator pos:line="226" pos:column="18">::<pos:position pos:line="226" pos:column="20"/></operator><name pos:line="226" pos:column="20">runtime_error<pos:position pos:line="226" pos:column="33"/></name></name><argument_list pos:line="226" pos:column="33">(<argument><expr><literal type="string" pos:line="226" pos:column="34">"Cannot open "<pos:position pos:line="226" pos:column="48"/></literal> <operator pos:line="226" pos:column="49">+<pos:position pos:line="226" pos:column="50"/></operator> <name pos:line="226" pos:column="51">size_full<pos:position pos:line="226" pos:column="60"/></name> <operator pos:line="226" pos:column="61">+<pos:position pos:line="226" pos:column="62"/></operator> <literal type="string" pos:line="226" pos:column="63">" to open"<pos:position pos:line="226" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="226" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="75"/></throw></block></else></if>
    <decl_stmt><decl><type><name><name pos:line="227" pos:column="5">std<pos:position pos:line="227" pos:column="8"/></name><operator pos:line="227" pos:column="8">::<pos:position pos:line="227" pos:column="10"/></operator><name pos:line="227" pos:column="10">ofstream<pos:position pos:line="227" pos:column="18"/></name></name></type> <name pos:line="227" pos:column="19">db<pos:position pos:line="227" pos:column="21"/></name><argument_list pos:line="227" pos:column="21">(<argument><expr><call><name><name pos:line="227" pos:column="22">db_full<pos:position pos:line="227" pos:column="29"/></name><operator pos:line="227" pos:column="29">.<pos:position pos:line="227" pos:column="30"/></operator><name pos:line="227" pos:column="30">c_str<pos:position pos:line="227" pos:column="35"/></name></name><argument_list pos:line="227" pos:column="35">()<pos:position pos:line="227" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="227" pos:column="38"/></argument_list></decl>;<pos:position pos:line="227" pos:column="39"/></decl_stmt>
    <if pos:line="228" pos:column="5">if <condition pos:line="228" pos:column="8">(<expr><operator pos:line="228" pos:column="9">!<pos:position pos:line="228" pos:column="10"/></operator><name pos:line="228" pos:column="10">db<pos:position pos:line="228" pos:column="12"/></name></expr>)<pos:position pos:line="228" pos:column="13"/></condition><then pos:line="228" pos:column="13">
        <block type="pseudo"><throw pos:line="229" pos:column="9">throw <expr><call><name><name pos:line="229" pos:column="15">std<pos:position pos:line="229" pos:column="18"/></name><operator pos:line="229" pos:column="18">::<pos:position pos:line="229" pos:column="20"/></operator><name pos:line="229" pos:column="20">runtime_error<pos:position pos:line="229" pos:column="33"/></name></name><argument_list pos:line="229" pos:column="33">(<argument><expr><literal type="string" pos:line="229" pos:column="34">"Cannot open "<pos:position pos:line="229" pos:column="48"/></literal> <operator pos:line="229" pos:column="49">+<pos:position pos:line="229" pos:column="50"/></operator> <name pos:line="229" pos:column="51">db_full<pos:position pos:line="229" pos:column="58"/></name> <operator pos:line="229" pos:column="59">+<pos:position pos:line="229" pos:column="60"/></operator> <literal type="string" pos:line="229" pos:column="61">" to open"<pos:position pos:line="229" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="73"/></throw></block></then></if>
}<pos:position pos:line="230" pos:column="2"/></block></function>

<function><type><name pos:line="232" pos:column="1">void<pos:position pos:line="232" pos:column="5"/></name></type> <name><name pos:line="232" pos:column="6">Ssl<pos:position pos:line="232" pos:column="9"/></name><operator pos:line="232" pos:column="9">::<pos:position pos:line="232" pos:column="11"/></operator><name pos:line="232" pos:column="11">CertificateDb<pos:position pos:line="232" pos:column="24"/></name><operator pos:line="232" pos:column="24">::<pos:position pos:line="232" pos:column="26"/></operator><name pos:line="232" pos:column="26">check<pos:position pos:line="232" pos:column="31"/></name></name><parameter_list pos:line="232" pos:column="31">(<parameter><decl><type><name><name pos:line="232" pos:column="32">std<pos:position pos:line="232" pos:column="35"/></name><operator pos:line="232" pos:column="35">::<pos:position pos:line="232" pos:column="37"/></operator><name pos:line="232" pos:column="37">string<pos:position pos:line="232" pos:column="43"/></name></name> <specifier pos:line="232" pos:column="44">const<pos:position pos:line="232" pos:column="49"/></specifier> <modifier pos:line="232" pos:column="50">&amp;<pos:position pos:line="232" pos:column="55"/></modifier></type> <name pos:line="232" pos:column="52">db_path<pos:position pos:line="232" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="232" pos:column="61">size_t<pos:position pos:line="232" pos:column="67"/></name></type> <name pos:line="232" pos:column="68">max_db_size<pos:position pos:line="232" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="232" pos:column="81">size_t<pos:position pos:line="232" pos:column="87"/></name></type> <name pos:line="232" pos:column="88">fs_block_size<pos:position pos:line="232" pos:column="101"/></name></decl></parameter>)<pos:position pos:line="232" pos:column="102"/></parameter_list> <block pos:line="232" pos:column="103">{
    <decl_stmt><decl><type><name pos:line="233" pos:column="5">CertificateDb<pos:position pos:line="233" pos:column="18"/></name></type> <name pos:line="233" pos:column="19">db<pos:position pos:line="233" pos:column="21"/></name><argument_list pos:line="233" pos:column="21">(<argument><expr><name pos:line="233" pos:column="22">db_path<pos:position pos:line="233" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="31">max_db_size<pos:position pos:line="233" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="44">fs_block_size<pos:position pos:line="233" pos:column="57"/></name></expr></argument>)<pos:position pos:line="233" pos:column="58"/></argument_list></decl>;<pos:position pos:line="233" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="234" pos:column="5">db<pos:position pos:line="234" pos:column="7"/></name><operator pos:line="234" pos:column="7">.<pos:position pos:line="234" pos:column="8"/></operator><name pos:line="234" pos:column="8">load<pos:position pos:line="234" pos:column="12"/></name></name><argument_list pos:line="234" pos:column="12">()<pos:position pos:line="234" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="15"/></expr_stmt>

    <comment type="line" pos:line="236" pos:column="5">// Call readSize to force rebuild size file in the case it is corrupted</comment>
    <expr_stmt><expr><operator pos:line="237" pos:column="5">(<pos:position pos:line="237" pos:column="6"/></operator><name pos:line="237" pos:column="6">void<pos:position pos:line="237" pos:column="10"/></name><operator pos:line="237" pos:column="10">)<pos:position pos:line="237" pos:column="11"/></operator><call><name><name pos:line="237" pos:column="11">db<pos:position pos:line="237" pos:column="13"/></name><operator pos:line="237" pos:column="13">.<pos:position pos:line="237" pos:column="14"/></operator><name pos:line="237" pos:column="14">readSize<pos:position pos:line="237" pos:column="22"/></name></name><argument_list pos:line="237" pos:column="22">()<pos:position pos:line="237" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="237" pos:column="25"/></expr_stmt>
}<pos:position pos:line="238" pos:column="2"/></block></function>

<function><type><name pos:line="240" pos:column="1">size_t<pos:position pos:line="240" pos:column="7"/></name></type> <name><name pos:line="240" pos:column="8">Ssl<pos:position pos:line="240" pos:column="11"/></name><operator pos:line="240" pos:column="11">::<pos:position pos:line="240" pos:column="13"/></operator><name pos:line="240" pos:column="13">CertificateDb<pos:position pos:line="240" pos:column="26"/></name><operator pos:line="240" pos:column="26">::<pos:position pos:line="240" pos:column="28"/></operator><name pos:line="240" pos:column="28">rebuildSize<pos:position pos:line="240" pos:column="39"/></name></name><parameter_list pos:line="240" pos:column="39">()<pos:position pos:line="240" pos:column="41"/></parameter_list>
<block pos:line="241" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="242" pos:column="5">size_t<pos:position pos:line="242" pos:column="11"/></name></type> <name pos:line="242" pos:column="12">dbSize<pos:position pos:line="242" pos:column="18"/></name> <init pos:line="242" pos:column="19">= <expr><literal type="number" pos:line="242" pos:column="21">0<pos:position pos:line="242" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="242" pos:column="23"/></decl_stmt>
<cpp:if pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">if<pos:position pos:line="243" pos:column="4"/></cpp:directive> <expr><name pos:line="243" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="243" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="244" pos:column="5">for <control pos:line="244" pos:column="9">(<init><decl><type><name pos:line="244" pos:column="10">int<pos:position pos:line="244" pos:column="13"/></name></type> <name pos:line="244" pos:column="14">i<pos:position pos:line="244" pos:column="15"/></name> <init pos:line="244" pos:column="16">= <expr><literal type="number" pos:line="244" pos:column="18">0<pos:position pos:line="244" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="244" pos:column="20"/></init> <condition><expr><name pos:line="244" pos:column="21">i<pos:position pos:line="244" pos:column="22"/></name> <operator pos:line="244" pos:column="23">&lt;<pos:position pos:line="244" pos:column="27"/></operator> <call><name pos:line="244" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="244" pos:column="47"/></name><argument_list pos:line="244" pos:column="47">(<argument><expr><call><name><name pos:line="244" pos:column="48">db<pos:position pos:line="244" pos:column="50"/></name><operator pos:line="244" pos:column="50">.<pos:position pos:line="244" pos:column="51"/></operator><name pos:line="244" pos:column="51">get<pos:position pos:line="244" pos:column="54"/></name></name><argument_list pos:line="244" pos:column="54">()<pos:position pos:line="244" pos:column="56"/></argument_list></call><operator pos:line="244" pos:column="56">-&gt;<pos:position pos:line="244" pos:column="61"/></operator><name pos:line="244" pos:column="58">data<pos:position pos:line="244" pos:column="62"/></name></expr></argument>)<pos:position pos:line="244" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="64"/></condition> <incr><expr><operator pos:line="244" pos:column="65">++<pos:position pos:line="244" pos:column="67"/></operator><name pos:line="244" pos:column="67">i<pos:position pos:line="244" pos:column="68"/></name></expr></incr>)<pos:position pos:line="244" pos:column="69"/></control> <block pos:line="244" pos:column="70">{
<cpp:if pos:line="245" pos:column="1">#<cpp:directive pos:line="245" pos:column="2">if<pos:position pos:line="245" pos:column="4"/></cpp:directive> <expr><name pos:line="245" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="245" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="246" pos:column="9">const<pos:position pos:line="246" pos:column="14"/></specifier> <name pos:line="246" pos:column="15">char<pos:position pos:line="246" pos:column="19"/></name> <modifier pos:line="246" pos:column="20">*<pos:position pos:line="246" pos:column="21"/></modifier><modifier pos:line="246" pos:column="21">*<pos:position pos:line="246" pos:column="22"/></modifier></type> <name pos:line="246" pos:column="23">current_row<pos:position pos:line="246" pos:column="34"/></name> <init pos:line="246" pos:column="35">= <expr><operator pos:line="246" pos:column="37">(<pos:position pos:line="246" pos:column="38"/></operator><operator pos:line="246" pos:column="38">(<pos:position pos:line="246" pos:column="39"/></operator><specifier pos:line="246" pos:column="39">const<pos:position pos:line="246" pos:column="44"/></specifier> <name pos:line="246" pos:column="45">char<pos:position pos:line="246" pos:column="49"/></name> <operator pos:line="246" pos:column="50">*<pos:position pos:line="246" pos:column="51"/></operator><operator pos:line="246" pos:column="51">*<pos:position pos:line="246" pos:column="52"/></operator><operator pos:line="246" pos:column="52">)<pos:position pos:line="246" pos:column="53"/></operator><call><name pos:line="246" pos:column="53">sk_value<pos:position pos:line="246" pos:column="61"/></name><argument_list pos:line="246" pos:column="61">(<argument><expr><call><name pos:line="246" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="246" pos:column="78"/></name><argument_list pos:line="246" pos:column="78">(<argument><expr><name pos:line="246" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="246" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="246" pos:column="96">db<pos:position pos:line="246" pos:column="98"/></name><operator pos:line="246" pos:column="98">.<pos:position pos:line="246" pos:column="99"/></operator><name pos:line="246" pos:column="99">get<pos:position pos:line="246" pos:column="102"/></name></name><argument_list pos:line="246" pos:column="102">()<pos:position pos:line="246" pos:column="104"/></argument_list></call><operator pos:line="246" pos:column="104">-&gt;<pos:position pos:line="246" pos:column="109"/></operator><name pos:line="246" pos:column="106">data<pos:position pos:line="246" pos:column="110"/></name></expr></argument>)<pos:position pos:line="246" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="246" pos:column="113">i<pos:position pos:line="246" pos:column="114"/></name></expr></argument>)<pos:position pos:line="246" pos:column="115"/></argument_list></call><operator pos:line="246" pos:column="115">)<pos:position pos:line="246" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="246" pos:column="117"/></decl_stmt>
<cpp:else pos:line="247" pos:column="1">#<cpp:directive pos:line="247" pos:column="2">else<pos:position pos:line="247" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="248" pos:column="9">const<pos:position pos:line="248" pos:column="14"/></specifier> <name pos:line="248" pos:column="15">char<pos:position pos:line="248" pos:column="19"/></name> <modifier pos:line="248" pos:column="20">*<pos:position pos:line="248" pos:column="21"/></modifier><modifier pos:line="248" pos:column="21">*<pos:position pos:line="248" pos:column="22"/></modifier></type> <name pos:line="248" pos:column="23">current_row<pos:position pos:line="248" pos:column="34"/></name> <init pos:line="248" pos:column="35">= <expr><operator pos:line="248" pos:column="37">(<pos:position pos:line="248" pos:column="38"/></operator><operator pos:line="248" pos:column="38">(<pos:position pos:line="248" pos:column="39"/></operator><specifier pos:line="248" pos:column="39">const<pos:position pos:line="248" pos:column="44"/></specifier> <name pos:line="248" pos:column="45">char<pos:position pos:line="248" pos:column="49"/></name> <operator pos:line="248" pos:column="50">*<pos:position pos:line="248" pos:column="51"/></operator><operator pos:line="248" pos:column="51">*<pos:position pos:line="248" pos:column="52"/></operator><operator pos:line="248" pos:column="52">)<pos:position pos:line="248" pos:column="53"/></operator><call><name pos:line="248" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="248" pos:column="77"/></name><argument_list pos:line="248" pos:column="77">(<argument><expr><call><name><name pos:line="248" pos:column="78">db<pos:position pos:line="248" pos:column="80"/></name><operator pos:line="248" pos:column="80">.<pos:position pos:line="248" pos:column="81"/></operator><name pos:line="248" pos:column="81">get<pos:position pos:line="248" pos:column="84"/></name></name><argument_list pos:line="248" pos:column="84">()<pos:position pos:line="248" pos:column="86"/></argument_list></call><operator pos:line="248" pos:column="86">-&gt;<pos:position pos:line="248" pos:column="91"/></operator><name pos:line="248" pos:column="88">data<pos:position pos:line="248" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="94">i<pos:position pos:line="248" pos:column="95"/></name></expr></argument>)<pos:position pos:line="248" pos:column="96"/></argument_list></call><operator pos:line="248" pos:column="96">)<pos:position pos:line="248" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="248" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">endif<pos:position pos:line="249" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">else<pos:position pos:line="250" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="251" pos:column="5">for <control pos:line="251" pos:column="9">(<init><decl><type><name pos:line="251" pos:column="10">int<pos:position pos:line="251" pos:column="13"/></name></type> <name pos:line="251" pos:column="14">i<pos:position pos:line="251" pos:column="15"/></name> <init pos:line="251" pos:column="16">= <expr><literal type="number" pos:line="251" pos:column="18">0<pos:position pos:line="251" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="251" pos:column="20"/></init> <condition><expr><name pos:line="251" pos:column="21">i<pos:position pos:line="251" pos:column="22"/></name> <operator pos:line="251" pos:column="23">&lt;<pos:position pos:line="251" pos:column="27"/></operator> <call><name pos:line="251" pos:column="25">sk_num<pos:position pos:line="251" pos:column="31"/></name><argument_list pos:line="251" pos:column="31">(<argument><expr><call><name><name pos:line="251" pos:column="32">db<pos:position pos:line="251" pos:column="34"/></name><operator pos:line="251" pos:column="34">.<pos:position pos:line="251" pos:column="35"/></operator><name pos:line="251" pos:column="35">get<pos:position pos:line="251" pos:column="38"/></name></name><argument_list pos:line="251" pos:column="38">()<pos:position pos:line="251" pos:column="40"/></argument_list></call><operator pos:line="251" pos:column="40">-&gt;<pos:position pos:line="251" pos:column="45"/></operator><name pos:line="251" pos:column="42">data<pos:position pos:line="251" pos:column="46"/></name></expr></argument>)<pos:position pos:line="251" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="48"/></condition> <incr><expr><operator pos:line="251" pos:column="49">++<pos:position pos:line="251" pos:column="51"/></operator><name pos:line="251" pos:column="51">i<pos:position pos:line="251" pos:column="52"/></name></expr></incr>)<pos:position pos:line="251" pos:column="53"/></control> <block pos:line="251" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="252" pos:column="9">const<pos:position pos:line="252" pos:column="14"/></specifier> <name pos:line="252" pos:column="15">char<pos:position pos:line="252" pos:column="19"/></name> <modifier pos:line="252" pos:column="20">*<pos:position pos:line="252" pos:column="21"/></modifier><modifier pos:line="252" pos:column="21">*<pos:position pos:line="252" pos:column="22"/></modifier></type> <name pos:line="252" pos:column="23">current_row<pos:position pos:line="252" pos:column="34"/></name> <init pos:line="252" pos:column="35">= <expr><operator pos:line="252" pos:column="37">(<pos:position pos:line="252" pos:column="38"/></operator><operator pos:line="252" pos:column="38">(<pos:position pos:line="252" pos:column="39"/></operator><specifier pos:line="252" pos:column="39">const<pos:position pos:line="252" pos:column="44"/></specifier> <name pos:line="252" pos:column="45">char<pos:position pos:line="252" pos:column="49"/></name> <operator pos:line="252" pos:column="50">*<pos:position pos:line="252" pos:column="51"/></operator><operator pos:line="252" pos:column="51">*<pos:position pos:line="252" pos:column="52"/></operator><operator pos:line="252" pos:column="52">)<pos:position pos:line="252" pos:column="53"/></operator><call><name pos:line="252" pos:column="53">sk_value<pos:position pos:line="252" pos:column="61"/></name><argument_list pos:line="252" pos:column="61">(<argument><expr><call><name><name pos:line="252" pos:column="62">db<pos:position pos:line="252" pos:column="64"/></name><operator pos:line="252" pos:column="64">.<pos:position pos:line="252" pos:column="65"/></operator><name pos:line="252" pos:column="65">get<pos:position pos:line="252" pos:column="68"/></name></name><argument_list pos:line="252" pos:column="68">()<pos:position pos:line="252" pos:column="70"/></argument_list></call><operator pos:line="252" pos:column="70">-&gt;<pos:position pos:line="252" pos:column="75"/></operator><name pos:line="252" pos:column="72">data<pos:position pos:line="252" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="78">i<pos:position pos:line="252" pos:column="79"/></name></expr></argument>)<pos:position pos:line="252" pos:column="80"/></argument_list></call><operator pos:line="252" pos:column="80">)<pos:position pos:line="252" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="252" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">endif<pos:position pos:line="253" pos:column="7"/></cpp:directive></cpp:endif>
        <decl_stmt><decl><type><specifier pos:line="254" pos:column="9">const<pos:position pos:line="254" pos:column="14"/></specifier> <name><name pos:line="254" pos:column="15">std<pos:position pos:line="254" pos:column="18"/></name><operator pos:line="254" pos:column="18">::<pos:position pos:line="254" pos:column="20"/></operator><name pos:line="254" pos:column="20">string<pos:position pos:line="254" pos:column="26"/></name></name></type> <name pos:line="254" pos:column="27">filename<pos:position pos:line="254" pos:column="35"/></name><argument_list pos:line="254" pos:column="35">(<argument><expr><name pos:line="254" pos:column="36">cert_full<pos:position pos:line="254" pos:column="45"/></name> <operator pos:line="254" pos:column="46">+<pos:position pos:line="254" pos:column="47"/></operator> <literal type="string" pos:line="254" pos:column="48">"/"<pos:position pos:line="254" pos:column="51"/></literal> <operator pos:line="254" pos:column="52">+<pos:position pos:line="254" pos:column="53"/></operator> <name><name pos:line="254" pos:column="54">current_row<pos:position pos:line="254" pos:column="65"/></name><index pos:line="254" pos:column="65">[<expr><name pos:line="254" pos:column="66">cnlSerial<pos:position pos:line="254" pos:column="75"/></name></expr>]<pos:position pos:line="254" pos:column="76"/></index></name> <operator pos:line="254" pos:column="77">+<pos:position pos:line="254" pos:column="78"/></operator> <literal type="string" pos:line="254" pos:column="79">".pem"<pos:position pos:line="254" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="86"/></argument_list></decl>;<pos:position pos:line="254" pos:column="87"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="255" pos:column="9">const<pos:position pos:line="255" pos:column="14"/></specifier> <name pos:line="255" pos:column="15">size_t<pos:position pos:line="255" pos:column="21"/></name></type> <name pos:line="255" pos:column="22">fSize<pos:position pos:line="255" pos:column="27"/></name> <init pos:line="255" pos:column="28">= <expr><call><name pos:line="255" pos:column="30">getFileSize<pos:position pos:line="255" pos:column="41"/></name><argument_list pos:line="255" pos:column="41">(<argument><expr><name pos:line="255" pos:column="42">filename<pos:position pos:line="255" pos:column="50"/></name></expr></argument>)<pos:position pos:line="255" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="255" pos:column="52"/></decl_stmt>
        <expr_stmt><expr><name pos:line="256" pos:column="9">dbSize<pos:position pos:line="256" pos:column="15"/></name> <operator pos:line="256" pos:column="16">+=<pos:position pos:line="256" pos:column="18"/></operator> <name pos:line="256" pos:column="19">fSize<pos:position pos:line="256" pos:column="24"/></name></expr>;<pos:position pos:line="256" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="257" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="258" pos:column="5">writeSize<pos:position pos:line="258" pos:column="14"/></name><argument_list pos:line="258" pos:column="14">(<argument><expr><name pos:line="258" pos:column="15">dbSize<pos:position pos:line="258" pos:column="21"/></name></expr></argument>)<pos:position pos:line="258" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="23"/></expr_stmt>
    <return pos:line="259" pos:column="5">return <expr><name pos:line="259" pos:column="12">dbSize<pos:position pos:line="259" pos:column="18"/></name></expr>;<pos:position pos:line="259" pos:column="19"/></return>
}<pos:position pos:line="260" pos:column="2"/></block></for>

<function><type><name pos:line="262" pos:column="1">bool<pos:position pos:line="262" pos:column="5"/></name></type> <name><name pos:line="262" pos:column="6">Ssl<pos:position pos:line="262" pos:column="9"/></name><operator pos:line="262" pos:column="9">::<pos:position pos:line="262" pos:column="11"/></operator><name pos:line="262" pos:column="11">CertificateDb<pos:position pos:line="262" pos:column="24"/></name><operator pos:line="262" pos:column="24">::<pos:position pos:line="262" pos:column="26"/></operator><name pos:line="262" pos:column="26">pure_find<pos:position pos:line="262" pos:column="35"/></name></name><parameter_list pos:line="262" pos:column="35">(<parameter><decl><type><name><name pos:line="262" pos:column="36">std<pos:position pos:line="262" pos:column="39"/></name><operator pos:line="262" pos:column="39">::<pos:position pos:line="262" pos:column="41"/></operator><name pos:line="262" pos:column="41">string<pos:position pos:line="262" pos:column="47"/></name></name> <specifier pos:line="262" pos:column="48">const<pos:position pos:line="262" pos:column="53"/></specifier> <modifier pos:line="262" pos:column="54">&amp;<pos:position pos:line="262" pos:column="59"/></modifier></type> <name pos:line="262" pos:column="56">host_name<pos:position pos:line="262" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="262" pos:column="67">Security<pos:position pos:line="262" pos:column="75"/></name><operator pos:line="262" pos:column="75">::<pos:position pos:line="262" pos:column="77"/></operator><name pos:line="262" pos:column="77">CertPointer<pos:position pos:line="262" pos:column="88"/></name></name> <modifier pos:line="262" pos:column="89">&amp;<pos:position pos:line="262" pos:column="94"/></modifier></type> <name pos:line="262" pos:column="91">cert<pos:position pos:line="262" pos:column="95"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="262" pos:column="97">Ssl<pos:position pos:line="262" pos:column="100"/></name><operator pos:line="262" pos:column="100">::<pos:position pos:line="262" pos:column="102"/></operator><name pos:line="262" pos:column="102">EVP_PKEY_Pointer<pos:position pos:line="262" pos:column="118"/></name></name> <modifier pos:line="262" pos:column="119">&amp;<pos:position pos:line="262" pos:column="124"/></modifier></type> <name pos:line="262" pos:column="121">pkey<pos:position pos:line="262" pos:column="125"/></name></decl></parameter>)<pos:position pos:line="262" pos:column="126"/></parameter_list> <block pos:line="262" pos:column="127">{
    <if pos:line="263" pos:column="5">if <condition pos:line="263" pos:column="8">(<expr><operator pos:line="263" pos:column="9">!<pos:position pos:line="263" pos:column="10"/></operator><name pos:line="263" pos:column="10">db<pos:position pos:line="263" pos:column="12"/></name></expr>)<pos:position pos:line="263" pos:column="13"/></condition><then pos:line="263" pos:column="13">
        <block type="pseudo"><return pos:line="264" pos:column="9">return <expr><literal type="boolean" pos:line="264" pos:column="16">false<pos:position pos:line="264" pos:column="21"/></literal></expr>;<pos:position pos:line="264" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="266" pos:column="5">Row<pos:position pos:line="266" pos:column="8"/></name></type> <name pos:line="266" pos:column="9">row<pos:position pos:line="266" pos:column="12"/></name></decl>;<pos:position pos:line="266" pos:column="13"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="267" pos:column="5">row<pos:position pos:line="267" pos:column="8"/></name><operator pos:line="267" pos:column="8">.<pos:position pos:line="267" pos:column="9"/></operator><name pos:line="267" pos:column="9">setValue<pos:position pos:line="267" pos:column="17"/></name></name><argument_list pos:line="267" pos:column="17">(<argument><expr><name pos:line="267" pos:column="18">cnlName<pos:position pos:line="267" pos:column="25"/></name></expr></argument>, <argument><expr><call><name><name pos:line="267" pos:column="27">host_name<pos:position pos:line="267" pos:column="36"/></name><operator pos:line="267" pos:column="36">.<pos:position pos:line="267" pos:column="37"/></operator><name pos:line="267" pos:column="37">c_str<pos:position pos:line="267" pos:column="42"/></name></name><argument_list pos:line="267" pos:column="42">()<pos:position pos:line="267" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="267" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="46"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="269" pos:column="5">char<pos:position pos:line="269" pos:column="9"/></name> <modifier pos:line="269" pos:column="10">*<pos:position pos:line="269" pos:column="11"/></modifier><modifier pos:line="269" pos:column="11">*<pos:position pos:line="269" pos:column="12"/></modifier></type><name pos:line="269" pos:column="12">rrow<pos:position pos:line="269" pos:column="16"/></name> <init pos:line="269" pos:column="17">= <expr><call><name pos:line="269" pos:column="19">TXT_DB_get_by_index<pos:position pos:line="269" pos:column="38"/></name><argument_list pos:line="269" pos:column="38">(<argument><expr><call><name><name pos:line="269" pos:column="39">db<pos:position pos:line="269" pos:column="41"/></name><operator pos:line="269" pos:column="41">.<pos:position pos:line="269" pos:column="42"/></operator><name pos:line="269" pos:column="42">get<pos:position pos:line="269" pos:column="45"/></name></name><argument_list pos:line="269" pos:column="45">()<pos:position pos:line="269" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="269" pos:column="49">cnlName<pos:position pos:line="269" pos:column="56"/></name></expr></argument>, <argument><expr><call><name><name pos:line="269" pos:column="58">row<pos:position pos:line="269" pos:column="61"/></name><operator pos:line="269" pos:column="61">.<pos:position pos:line="269" pos:column="62"/></operator><name pos:line="269" pos:column="62">getRow<pos:position pos:line="269" pos:column="68"/></name></name><argument_list pos:line="269" pos:column="68">()<pos:position pos:line="269" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="269" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="269" pos:column="72"/></decl_stmt>
    <if pos:line="270" pos:column="5">if <condition pos:line="270" pos:column="8">(<expr><name pos:line="270" pos:column="9">rrow<pos:position pos:line="270" pos:column="13"/></name> <operator pos:line="270" pos:column="14">==<pos:position pos:line="270" pos:column="16"/></operator> <name pos:line="270" pos:column="17">NULL<pos:position pos:line="270" pos:column="21"/></name></expr>)<pos:position pos:line="270" pos:column="22"/></condition><then pos:line="270" pos:column="22">
        <block type="pseudo"><return pos:line="271" pos:column="9">return <expr><literal type="boolean" pos:line="271" pos:column="16">false<pos:position pos:line="271" pos:column="21"/></literal></expr>;<pos:position pos:line="271" pos:column="22"/></return></block></then></if>

    <if pos:line="273" pos:column="5">if <condition pos:line="273" pos:column="8">(<expr><operator pos:line="273" pos:column="9">!<pos:position pos:line="273" pos:column="10"/></operator><call><name pos:line="273" pos:column="10">sslDateIsInTheFuture<pos:position pos:line="273" pos:column="30"/></name><argument_list pos:line="273" pos:column="30">(<argument><expr><name><name pos:line="273" pos:column="31">rrow<pos:position pos:line="273" pos:column="35"/></name><index pos:line="273" pos:column="35">[<expr><name pos:line="273" pos:column="36">cnlExp_date<pos:position pos:line="273" pos:column="47"/></name></expr>]<pos:position pos:line="273" pos:column="48"/></index></name></expr></argument>)<pos:position pos:line="273" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="273" pos:column="50"/></condition><then pos:line="273" pos:column="50">
        <block type="pseudo"><return pos:line="274" pos:column="9">return <expr><literal type="boolean" pos:line="274" pos:column="16">false<pos:position pos:line="274" pos:column="21"/></literal></expr>;<pos:position pos:line="274" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="276" pos:column="5">// read cert and pkey from file.</comment>
    <decl_stmt><decl><type><name><name pos:line="277" pos:column="5">std<pos:position pos:line="277" pos:column="8"/></name><operator pos:line="277" pos:column="8">::<pos:position pos:line="277" pos:column="10"/></operator><name pos:line="277" pos:column="10">string<pos:position pos:line="277" pos:column="16"/></name></name></type> <name pos:line="277" pos:column="17">filename<pos:position pos:line="277" pos:column="25"/></name><argument_list pos:line="277" pos:column="25">(<argument><expr><name pos:line="277" pos:column="26">cert_full<pos:position pos:line="277" pos:column="35"/></name> <operator pos:line="277" pos:column="36">+<pos:position pos:line="277" pos:column="37"/></operator> <literal type="string" pos:line="277" pos:column="38">"/"<pos:position pos:line="277" pos:column="41"/></literal> <operator pos:line="277" pos:column="42">+<pos:position pos:line="277" pos:column="43"/></operator> <name><name pos:line="277" pos:column="44">rrow<pos:position pos:line="277" pos:column="48"/></name><index pos:line="277" pos:column="48">[<expr><name pos:line="277" pos:column="49">cnlSerial<pos:position pos:line="277" pos:column="58"/></name></expr>]<pos:position pos:line="277" pos:column="59"/></index></name> <operator pos:line="277" pos:column="60">+<pos:position pos:line="277" pos:column="61"/></operator> <literal type="string" pos:line="277" pos:column="62">".pem"<pos:position pos:line="277" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="277" pos:column="69"/></argument_list></decl>;<pos:position pos:line="277" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="278" pos:column="5">readCertAndPrivateKeyFromFiles<pos:position pos:line="278" pos:column="35"/></name><argument_list pos:line="278" pos:column="35">(<argument><expr><name pos:line="278" pos:column="36">cert<pos:position pos:line="278" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="42">pkey<pos:position pos:line="278" pos:column="46"/></name></expr></argument>, <argument><expr><call><name><name pos:line="278" pos:column="48">filename<pos:position pos:line="278" pos:column="56"/></name><operator pos:line="278" pos:column="56">.<pos:position pos:line="278" pos:column="57"/></operator><name pos:line="278" pos:column="57">c_str<pos:position pos:line="278" pos:column="62"/></name></name><argument_list pos:line="278" pos:column="62">()<pos:position pos:line="278" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="278" pos:column="66">NULL<pos:position pos:line="278" pos:column="70"/></name></expr></argument>)<pos:position pos:line="278" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="72"/></expr_stmt>
    <if pos:line="279" pos:column="5">if <condition pos:line="279" pos:column="8">(<expr><operator pos:line="279" pos:column="9">!<pos:position pos:line="279" pos:column="10"/></operator><name pos:line="279" pos:column="10">cert<pos:position pos:line="279" pos:column="14"/></name> <operator pos:line="279" pos:column="15">||<pos:position pos:line="279" pos:column="17"/></operator> <operator pos:line="279" pos:column="18">!<pos:position pos:line="279" pos:column="19"/></operator><name pos:line="279" pos:column="19">pkey<pos:position pos:line="279" pos:column="23"/></name></expr>)<pos:position pos:line="279" pos:column="24"/></condition><then pos:line="279" pos:column="24">
        <block type="pseudo"><return pos:line="280" pos:column="9">return <expr><literal type="boolean" pos:line="280" pos:column="16">false<pos:position pos:line="280" pos:column="21"/></literal></expr>;<pos:position pos:line="280" pos:column="22"/></return></block></then></if>
    <return pos:line="281" pos:column="5">return <expr><literal type="boolean" pos:line="281" pos:column="12">true<pos:position pos:line="281" pos:column="16"/></literal></expr>;<pos:position pos:line="281" pos:column="17"/></return>
}<pos:position pos:line="282" pos:column="2"/></block></function>

<function><type><name pos:line="284" pos:column="1">size_t<pos:position pos:line="284" pos:column="7"/></name></type> <name><name pos:line="284" pos:column="8">Ssl<pos:position pos:line="284" pos:column="11"/></name><operator pos:line="284" pos:column="11">::<pos:position pos:line="284" pos:column="13"/></operator><name pos:line="284" pos:column="13">CertificateDb<pos:position pos:line="284" pos:column="26"/></name><operator pos:line="284" pos:column="26">::<pos:position pos:line="284" pos:column="28"/></operator><name pos:line="284" pos:column="28">size<pos:position pos:line="284" pos:column="32"/></name></name><parameter_list pos:line="284" pos:column="32">()<pos:position pos:line="284" pos:column="34"/></parameter_list> <block pos:line="284" pos:column="35">{
    <return pos:line="285" pos:column="5">return <expr><call><name pos:line="285" pos:column="12">readSize<pos:position pos:line="285" pos:column="20"/></name><argument_list pos:line="285" pos:column="20">()<pos:position pos:line="285" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="285" pos:column="23"/></return>
}<pos:position pos:line="286" pos:column="2"/></block></function>

<function><type><name pos:line="288" pos:column="1">void<pos:position pos:line="288" pos:column="5"/></name></type> <name><name pos:line="288" pos:column="6">Ssl<pos:position pos:line="288" pos:column="9"/></name><operator pos:line="288" pos:column="9">::<pos:position pos:line="288" pos:column="11"/></operator><name pos:line="288" pos:column="11">CertificateDb<pos:position pos:line="288" pos:column="24"/></name><operator pos:line="288" pos:column="24">::<pos:position pos:line="288" pos:column="26"/></operator><name pos:line="288" pos:column="26">addSize<pos:position pos:line="288" pos:column="33"/></name></name><parameter_list pos:line="288" pos:column="33">(<parameter><decl><type><name><name pos:line="288" pos:column="34">std<pos:position pos:line="288" pos:column="37"/></name><operator pos:line="288" pos:column="37">::<pos:position pos:line="288" pos:column="39"/></operator><name pos:line="288" pos:column="39">string<pos:position pos:line="288" pos:column="45"/></name></name> <specifier pos:line="288" pos:column="46">const<pos:position pos:line="288" pos:column="51"/></specifier> <modifier pos:line="288" pos:column="52">&amp;<pos:position pos:line="288" pos:column="57"/></modifier></type> <name pos:line="288" pos:column="54">filename<pos:position pos:line="288" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="288" pos:column="63"/></parameter_list> <block pos:line="288" pos:column="64">{
    <comment type="line" pos:line="289" pos:column="5">// readSize will rebuild 'size' file if missing or it is corrupted</comment>
    <decl_stmt><decl><type><name pos:line="290" pos:column="5">size_t<pos:position pos:line="290" pos:column="11"/></name></type> <name pos:line="290" pos:column="12">dbSize<pos:position pos:line="290" pos:column="18"/></name> <init pos:line="290" pos:column="19">= <expr><call><name pos:line="290" pos:column="21">readSize<pos:position pos:line="290" pos:column="29"/></name><argument_list pos:line="290" pos:column="29">()<pos:position pos:line="290" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="290" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><name pos:line="291" pos:column="5">dbSize<pos:position pos:line="291" pos:column="11"/></name> <operator pos:line="291" pos:column="12">+=<pos:position pos:line="291" pos:column="14"/></operator> <call><name pos:line="291" pos:column="15">getFileSize<pos:position pos:line="291" pos:column="26"/></name><argument_list pos:line="291" pos:column="26">(<argument><expr><name pos:line="291" pos:column="27">filename<pos:position pos:line="291" pos:column="35"/></name></expr></argument>)<pos:position pos:line="291" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="292" pos:column="5">writeSize<pos:position pos:line="292" pos:column="14"/></name><argument_list pos:line="292" pos:column="14">(<argument><expr><name pos:line="292" pos:column="15">dbSize<pos:position pos:line="292" pos:column="21"/></name></expr></argument>)<pos:position pos:line="292" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="23"/></expr_stmt>
}<pos:position pos:line="293" pos:column="2"/></block></function>

<function><type><name pos:line="295" pos:column="1">void<pos:position pos:line="295" pos:column="5"/></name></type> <name><name pos:line="295" pos:column="6">Ssl<pos:position pos:line="295" pos:column="9"/></name><operator pos:line="295" pos:column="9">::<pos:position pos:line="295" pos:column="11"/></operator><name pos:line="295" pos:column="11">CertificateDb<pos:position pos:line="295" pos:column="24"/></name><operator pos:line="295" pos:column="24">::<pos:position pos:line="295" pos:column="26"/></operator><name pos:line="295" pos:column="26">subSize<pos:position pos:line="295" pos:column="33"/></name></name><parameter_list pos:line="295" pos:column="33">(<parameter><decl><type><name><name pos:line="295" pos:column="34">std<pos:position pos:line="295" pos:column="37"/></name><operator pos:line="295" pos:column="37">::<pos:position pos:line="295" pos:column="39"/></operator><name pos:line="295" pos:column="39">string<pos:position pos:line="295" pos:column="45"/></name></name> <specifier pos:line="295" pos:column="46">const<pos:position pos:line="295" pos:column="51"/></specifier> <modifier pos:line="295" pos:column="52">&amp;<pos:position pos:line="295" pos:column="57"/></modifier></type> <name pos:line="295" pos:column="54">filename<pos:position pos:line="295" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="295" pos:column="63"/></parameter_list> <block pos:line="295" pos:column="64">{
    <comment type="line" pos:line="296" pos:column="5">// readSize will rebuild 'size' file if missing or it is corrupted</comment>
    <decl_stmt><decl><type><name pos:line="297" pos:column="5">size_t<pos:position pos:line="297" pos:column="11"/></name></type> <name pos:line="297" pos:column="12">dbSize<pos:position pos:line="297" pos:column="18"/></name> <init pos:line="297" pos:column="19">= <expr><call><name pos:line="297" pos:column="21">readSize<pos:position pos:line="297" pos:column="29"/></name><argument_list pos:line="297" pos:column="29">()<pos:position pos:line="297" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="297" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="298" pos:column="5">const<pos:position pos:line="298" pos:column="10"/></specifier> <name pos:line="298" pos:column="11">size_t<pos:position pos:line="298" pos:column="17"/></name></type> <name pos:line="298" pos:column="18">fileSize<pos:position pos:line="298" pos:column="26"/></name> <init pos:line="298" pos:column="27">= <expr><call><name pos:line="298" pos:column="29">getFileSize<pos:position pos:line="298" pos:column="40"/></name><argument_list pos:line="298" pos:column="40">(<argument><expr><name pos:line="298" pos:column="41">filename<pos:position pos:line="298" pos:column="49"/></name></expr></argument>)<pos:position pos:line="298" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="298" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><name pos:line="299" pos:column="5">dbSize<pos:position pos:line="299" pos:column="11"/></name> <operator pos:line="299" pos:column="12">=<pos:position pos:line="299" pos:column="13"/></operator> <ternary><condition><expr><name pos:line="299" pos:column="14">dbSize<pos:position pos:line="299" pos:column="20"/></name> <operator pos:line="299" pos:column="21">&gt;<pos:position pos:line="299" pos:column="25"/></operator> <name pos:line="299" pos:column="23">fileSize<pos:position pos:line="299" pos:column="31"/></name></expr> ?<pos:position pos:line="299" pos:column="33"/></condition><then pos:line="299" pos:column="33"> <expr><name pos:line="299" pos:column="34">dbSize<pos:position pos:line="299" pos:column="40"/></name> <operator pos:line="299" pos:column="41">-<pos:position pos:line="299" pos:column="42"/></operator> <name pos:line="299" pos:column="43">fileSize<pos:position pos:line="299" pos:column="51"/></name></expr> <pos:position pos:line="299" pos:column="52"/></then><else pos:line="299" pos:column="52">: <expr><literal type="number" pos:line="299" pos:column="54">0<pos:position pos:line="299" pos:column="55"/></literal></expr></else></ternary></expr>;<pos:position pos:line="299" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="300" pos:column="5">writeSize<pos:position pos:line="300" pos:column="14"/></name><argument_list pos:line="300" pos:column="14">(<argument><expr><name pos:line="300" pos:column="15">dbSize<pos:position pos:line="300" pos:column="21"/></name></expr></argument>)<pos:position pos:line="300" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="23"/></expr_stmt>
}<pos:position pos:line="301" pos:column="2"/></block></function>

<function><type><name pos:line="303" pos:column="1">size_t<pos:position pos:line="303" pos:column="7"/></name></type> <name><name pos:line="303" pos:column="8">Ssl<pos:position pos:line="303" pos:column="11"/></name><operator pos:line="303" pos:column="11">::<pos:position pos:line="303" pos:column="13"/></operator><name pos:line="303" pos:column="13">CertificateDb<pos:position pos:line="303" pos:column="26"/></name><operator pos:line="303" pos:column="26">::<pos:position pos:line="303" pos:column="28"/></operator><name pos:line="303" pos:column="28">readSize<pos:position pos:line="303" pos:column="36"/></name></name><parameter_list pos:line="303" pos:column="36">()<pos:position pos:line="303" pos:column="38"/></parameter_list> <block pos:line="303" pos:column="39">{
    <decl_stmt><decl><type><name><name pos:line="304" pos:column="5">std<pos:position pos:line="304" pos:column="8"/></name><operator pos:line="304" pos:column="8">::<pos:position pos:line="304" pos:column="10"/></operator><name pos:line="304" pos:column="10">ifstream<pos:position pos:line="304" pos:column="18"/></name></name></type> <name pos:line="304" pos:column="19">ifstr<pos:position pos:line="304" pos:column="24"/></name><argument_list pos:line="304" pos:column="24">(<argument><expr><call><name><name pos:line="304" pos:column="25">size_full<pos:position pos:line="304" pos:column="34"/></name><operator pos:line="304" pos:column="34">.<pos:position pos:line="304" pos:column="35"/></operator><name pos:line="304" pos:column="35">c_str<pos:position pos:line="304" pos:column="40"/></name></name><argument_list pos:line="304" pos:column="40">()<pos:position pos:line="304" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="304" pos:column="43"/></argument_list></decl>;<pos:position pos:line="304" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="305" pos:column="5">size_t<pos:position pos:line="305" pos:column="11"/></name></type> <name pos:line="305" pos:column="12">db_size<pos:position pos:line="305" pos:column="19"/></name> <init pos:line="305" pos:column="20">= <expr><literal type="number" pos:line="305" pos:column="22">0<pos:position pos:line="305" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="305" pos:column="24"/></decl_stmt>
    <if pos:line="306" pos:column="5">if <condition pos:line="306" pos:column="8">(<expr><operator pos:line="306" pos:column="9">!<pos:position pos:line="306" pos:column="10"/></operator><name pos:line="306" pos:column="10">ifstr<pos:position pos:line="306" pos:column="15"/></name> <operator pos:line="306" pos:column="16">||<pos:position pos:line="306" pos:column="18"/></operator> <operator pos:line="306" pos:column="19">!<pos:position pos:line="306" pos:column="20"/></operator><operator pos:line="306" pos:column="20">(<pos:position pos:line="306" pos:column="21"/></operator><name pos:line="306" pos:column="21">ifstr<pos:position pos:line="306" pos:column="26"/></name> <operator pos:line="306" pos:column="27">&gt;&gt;<pos:position pos:line="306" pos:column="32"/></operator> <name pos:line="306" pos:column="30">db_size<pos:position pos:line="306" pos:column="37"/></name><operator pos:line="306" pos:column="37">)<pos:position pos:line="306" pos:column="38"/></operator></expr>)<pos:position pos:line="306" pos:column="39"/></condition><then pos:line="306" pos:column="39">
        <block type="pseudo"><return pos:line="307" pos:column="9">return <expr><call><name pos:line="307" pos:column="16">rebuildSize<pos:position pos:line="307" pos:column="27"/></name><argument_list pos:line="307" pos:column="27">()<pos:position pos:line="307" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="30"/></return></block></then></if>
    <return pos:line="308" pos:column="5">return <expr><name pos:line="308" pos:column="12">db_size<pos:position pos:line="308" pos:column="19"/></name></expr>;<pos:position pos:line="308" pos:column="20"/></return>
}<pos:position pos:line="309" pos:column="2"/></block></function>

<function><type><name pos:line="311" pos:column="1">void<pos:position pos:line="311" pos:column="5"/></name></type> <name><name pos:line="311" pos:column="6">Ssl<pos:position pos:line="311" pos:column="9"/></name><operator pos:line="311" pos:column="9">::<pos:position pos:line="311" pos:column="11"/></operator><name pos:line="311" pos:column="11">CertificateDb<pos:position pos:line="311" pos:column="24"/></name><operator pos:line="311" pos:column="24">::<pos:position pos:line="311" pos:column="26"/></operator><name pos:line="311" pos:column="26">writeSize<pos:position pos:line="311" pos:column="35"/></name></name><parameter_list pos:line="311" pos:column="35">(<parameter><decl><type><name pos:line="311" pos:column="36">size_t<pos:position pos:line="311" pos:column="42"/></name></type> <name pos:line="311" pos:column="43">db_size<pos:position pos:line="311" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="311" pos:column="51"/></parameter_list> <block pos:line="311" pos:column="52">{
    <decl_stmt><decl><type><name><name pos:line="312" pos:column="5">std<pos:position pos:line="312" pos:column="8"/></name><operator pos:line="312" pos:column="8">::<pos:position pos:line="312" pos:column="10"/></operator><name pos:line="312" pos:column="10">ofstream<pos:position pos:line="312" pos:column="18"/></name></name></type> <name pos:line="312" pos:column="19">ofstr<pos:position pos:line="312" pos:column="24"/></name><argument_list pos:line="312" pos:column="24">(<argument><expr><call><name><name pos:line="312" pos:column="25">size_full<pos:position pos:line="312" pos:column="34"/></name><operator pos:line="312" pos:column="34">.<pos:position pos:line="312" pos:column="35"/></operator><name pos:line="312" pos:column="35">c_str<pos:position pos:line="312" pos:column="40"/></name></name><argument_list pos:line="312" pos:column="40">()<pos:position pos:line="312" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="312" pos:column="43"/></argument_list></decl>;<pos:position pos:line="312" pos:column="44"/></decl_stmt>
    <if pos:line="313" pos:column="5">if <condition pos:line="313" pos:column="8">(<expr><operator pos:line="313" pos:column="9">!<pos:position pos:line="313" pos:column="10"/></operator><name pos:line="313" pos:column="10">ofstr<pos:position pos:line="313" pos:column="15"/></name></expr>)<pos:position pos:line="313" pos:column="16"/></condition><then pos:line="313" pos:column="16">
        <block type="pseudo"><throw pos:line="314" pos:column="9">throw <expr><call><name><name pos:line="314" pos:column="15">std<pos:position pos:line="314" pos:column="18"/></name><operator pos:line="314" pos:column="18">::<pos:position pos:line="314" pos:column="20"/></operator><name pos:line="314" pos:column="20">runtime_error<pos:position pos:line="314" pos:column="33"/></name></name><argument_list pos:line="314" pos:column="33">(<argument><expr><literal type="string" pos:line="314" pos:column="34">"cannot write \""<pos:position pos:line="314" pos:column="51"/></literal> <operator pos:line="314" pos:column="52">+<pos:position pos:line="314" pos:column="53"/></operator> <name pos:line="314" pos:column="54">size_full<pos:position pos:line="314" pos:column="63"/></name> <operator pos:line="314" pos:column="64">+<pos:position pos:line="314" pos:column="65"/></operator> <literal type="string" pos:line="314" pos:column="66">"\" file"<pos:position pos:line="314" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="314" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="77"/></throw></block></then></if>
    <expr_stmt><expr><name pos:line="315" pos:column="5">ofstr<pos:position pos:line="315" pos:column="10"/></name> <operator pos:line="315" pos:column="11">&lt;&lt;<pos:position pos:line="315" pos:column="19"/></operator> <name pos:line="315" pos:column="14">db_size<pos:position pos:line="315" pos:column="21"/></name></expr>;<pos:position pos:line="315" pos:column="22"/></expr_stmt>
}<pos:position pos:line="316" pos:column="2"/></block></function>

<function><type><name pos:line="318" pos:column="1">size_t<pos:position pos:line="318" pos:column="7"/></name></type> <name><name pos:line="318" pos:column="8">Ssl<pos:position pos:line="318" pos:column="11"/></name><operator pos:line="318" pos:column="11">::<pos:position pos:line="318" pos:column="13"/></operator><name pos:line="318" pos:column="13">CertificateDb<pos:position pos:line="318" pos:column="26"/></name><operator pos:line="318" pos:column="26">::<pos:position pos:line="318" pos:column="28"/></operator><name pos:line="318" pos:column="28">getFileSize<pos:position pos:line="318" pos:column="39"/></name></name><parameter_list pos:line="318" pos:column="39">(<parameter><decl><type><name><name pos:line="318" pos:column="40">std<pos:position pos:line="318" pos:column="43"/></name><operator pos:line="318" pos:column="43">::<pos:position pos:line="318" pos:column="45"/></operator><name pos:line="318" pos:column="45">string<pos:position pos:line="318" pos:column="51"/></name></name> <specifier pos:line="318" pos:column="52">const<pos:position pos:line="318" pos:column="57"/></specifier> <modifier pos:line="318" pos:column="58">&amp;<pos:position pos:line="318" pos:column="63"/></modifier></type> <name pos:line="318" pos:column="60">filename<pos:position pos:line="318" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="318" pos:column="69"/></parameter_list> <block pos:line="318" pos:column="70">{
    <decl_stmt><decl><type><name><name pos:line="319" pos:column="5">std<pos:position pos:line="319" pos:column="8"/></name><operator pos:line="319" pos:column="8">::<pos:position pos:line="319" pos:column="10"/></operator><name pos:line="319" pos:column="10">ifstream<pos:position pos:line="319" pos:column="18"/></name></name></type> <name pos:line="319" pos:column="19">file<pos:position pos:line="319" pos:column="23"/></name><argument_list pos:line="319" pos:column="23">(<argument><expr><call><name><name pos:line="319" pos:column="24">filename<pos:position pos:line="319" pos:column="32"/></name><operator pos:line="319" pos:column="32">.<pos:position pos:line="319" pos:column="33"/></operator><name pos:line="319" pos:column="33">c_str<pos:position pos:line="319" pos:column="38"/></name></name><argument_list pos:line="319" pos:column="38">()<pos:position pos:line="319" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="319" pos:column="42">std<pos:position pos:line="319" pos:column="45"/></name><operator pos:line="319" pos:column="45">::<pos:position pos:line="319" pos:column="47"/></operator><name pos:line="319" pos:column="47">ios<pos:position pos:line="319" pos:column="50"/></name><operator pos:line="319" pos:column="50">::<pos:position pos:line="319" pos:column="52"/></operator><name pos:line="319" pos:column="52">binary<pos:position pos:line="319" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="319" pos:column="59"/></argument_list></decl>;<pos:position pos:line="319" pos:column="60"/></decl_stmt>
    <if pos:line="320" pos:column="5">if <condition pos:line="320" pos:column="8">(<expr><operator pos:line="320" pos:column="9">!<pos:position pos:line="320" pos:column="10"/></operator><name pos:line="320" pos:column="10">file<pos:position pos:line="320" pos:column="14"/></name></expr>)<pos:position pos:line="320" pos:column="15"/></condition><then pos:line="320" pos:column="15">
        <block type="pseudo"><return pos:line="321" pos:column="9">return <expr><literal type="number" pos:line="321" pos:column="16">0<pos:position pos:line="321" pos:column="17"/></literal></expr>;<pos:position pos:line="321" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="322" pos:column="5">file<pos:position pos:line="322" pos:column="9"/></name><operator pos:line="322" pos:column="9">.<pos:position pos:line="322" pos:column="10"/></operator><name pos:line="322" pos:column="10">seekg<pos:position pos:line="322" pos:column="15"/></name></name><argument_list pos:line="322" pos:column="15">(<argument><expr><literal type="number" pos:line="322" pos:column="16">0<pos:position pos:line="322" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="322" pos:column="19">std<pos:position pos:line="322" pos:column="22"/></name><operator pos:line="322" pos:column="22">::<pos:position pos:line="322" pos:column="24"/></operator><name pos:line="322" pos:column="24">ios_base<pos:position pos:line="322" pos:column="32"/></name><operator pos:line="322" pos:column="32">::<pos:position pos:line="322" pos:column="34"/></operator><name pos:line="322" pos:column="34">end<pos:position pos:line="322" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="322" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="322" pos:column="39"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="323" pos:column="5">const<pos:position pos:line="323" pos:column="10"/></specifier> <name><name pos:line="323" pos:column="11">std<pos:position pos:line="323" pos:column="14"/></name><operator pos:line="323" pos:column="14">::<pos:position pos:line="323" pos:column="16"/></operator><name pos:line="323" pos:column="16">streampos<pos:position pos:line="323" pos:column="25"/></name></name></type> <name pos:line="323" pos:column="26">file_size<pos:position pos:line="323" pos:column="35"/></name> <init pos:line="323" pos:column="36">= <expr><call><name><name pos:line="323" pos:column="38">file<pos:position pos:line="323" pos:column="42"/></name><operator pos:line="323" pos:column="42">.<pos:position pos:line="323" pos:column="43"/></operator><name pos:line="323" pos:column="43">tellg<pos:position pos:line="323" pos:column="48"/></name></name><argument_list pos:line="323" pos:column="48">()<pos:position pos:line="323" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="323" pos:column="51"/></decl_stmt>
    <if pos:line="324" pos:column="5">if <condition pos:line="324" pos:column="8">(<expr><name pos:line="324" pos:column="9">file_size<pos:position pos:line="324" pos:column="18"/></name> <operator pos:line="324" pos:column="19">&lt;<pos:position pos:line="324" pos:column="23"/></operator> <literal type="number" pos:line="324" pos:column="21">0<pos:position pos:line="324" pos:column="22"/></literal></expr>)<pos:position pos:line="324" pos:column="23"/></condition><then pos:line="324" pos:column="23">
        <block type="pseudo"><return pos:line="325" pos:column="9">return <expr><literal type="number" pos:line="325" pos:column="16">0<pos:position pos:line="325" pos:column="17"/></literal></expr>;<pos:position pos:line="325" pos:column="18"/></return></block></then></if>
    <return pos:line="326" pos:column="5">return <expr><operator pos:line="326" pos:column="12">(<pos:position pos:line="326" pos:column="13"/></operator><operator pos:line="326" pos:column="13">(<pos:position pos:line="326" pos:column="14"/></operator><cast type="static" pos:line="326" pos:column="14">static_cast<argument_list type="generic" pos:line="326" pos:column="25">&lt;<argument><expr><name pos:line="326" pos:column="26">size_t<pos:position pos:line="326" pos:column="32"/></name></expr></argument>&gt;<pos:position pos:line="326" pos:column="36"/></argument_list><argument_list pos:line="326" pos:column="33">(<argument><expr><name pos:line="326" pos:column="34">file_size<pos:position pos:line="326" pos:column="43"/></name></expr></argument>)<pos:position pos:line="326" pos:column="44"/></argument_list></cast> <operator pos:line="326" pos:column="45">+<pos:position pos:line="326" pos:column="46"/></operator> <name pos:line="326" pos:column="47">fs_block_size<pos:position pos:line="326" pos:column="60"/></name> <operator pos:line="326" pos:column="61">-<pos:position pos:line="326" pos:column="62"/></operator> <literal type="number" pos:line="326" pos:column="63">1<pos:position pos:line="326" pos:column="64"/></literal><operator pos:line="326" pos:column="64">)<pos:position pos:line="326" pos:column="65"/></operator> <operator pos:line="326" pos:column="66">/<pos:position pos:line="326" pos:column="67"/></operator> <name pos:line="326" pos:column="68">fs_block_size<pos:position pos:line="326" pos:column="81"/></name><operator pos:line="326" pos:column="81">)<pos:position pos:line="326" pos:column="82"/></operator> <operator pos:line="326" pos:column="83">*<pos:position pos:line="326" pos:column="84"/></operator> <name pos:line="326" pos:column="85">fs_block_size<pos:position pos:line="326" pos:column="98"/></name></expr>;<pos:position pos:line="326" pos:column="99"/></return>
}<pos:position pos:line="327" pos:column="2"/></block></function>

<function><type><name pos:line="329" pos:column="1">void<pos:position pos:line="329" pos:column="5"/></name></type> <name><name pos:line="329" pos:column="6">Ssl<pos:position pos:line="329" pos:column="9"/></name><operator pos:line="329" pos:column="9">::<pos:position pos:line="329" pos:column="11"/></operator><name pos:line="329" pos:column="11">CertificateDb<pos:position pos:line="329" pos:column="24"/></name><operator pos:line="329" pos:column="24">::<pos:position pos:line="329" pos:column="26"/></operator><name pos:line="329" pos:column="26">load<pos:position pos:line="329" pos:column="30"/></name></name><parameter_list pos:line="329" pos:column="30">()<pos:position pos:line="329" pos:column="32"/></parameter_list> <block pos:line="329" pos:column="33">{
    <comment type="line" pos:line="330" pos:column="5">// Load db from file.</comment>
    <decl_stmt><decl><type><name><name pos:line="331" pos:column="5">Ssl<pos:position pos:line="331" pos:column="8"/></name><operator pos:line="331" pos:column="8">::<pos:position pos:line="331" pos:column="10"/></operator><name pos:line="331" pos:column="10">BIO_Pointer<pos:position pos:line="331" pos:column="21"/></name></name></type> <name pos:line="331" pos:column="22">in<pos:position pos:line="331" pos:column="24"/></name><argument_list pos:line="331" pos:column="24">(<argument><expr><call><name pos:line="331" pos:column="25">BIO_new<pos:position pos:line="331" pos:column="32"/></name><argument_list pos:line="331" pos:column="32">(<argument><expr><call><name pos:line="331" pos:column="33">BIO_s_file<pos:position pos:line="331" pos:column="43"/></name><argument_list pos:line="331" pos:column="43">()<pos:position pos:line="331" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="331" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="331" pos:column="47"/></argument_list></decl>;<pos:position pos:line="331" pos:column="48"/></decl_stmt>
    <if pos:line="332" pos:column="5">if <condition pos:line="332" pos:column="8">(<expr><operator pos:line="332" pos:column="9">!<pos:position pos:line="332" pos:column="10"/></operator><name pos:line="332" pos:column="10">in<pos:position pos:line="332" pos:column="12"/></name> <operator pos:line="332" pos:column="13">||<pos:position pos:line="332" pos:column="15"/></operator> <call><name pos:line="332" pos:column="16">BIO_read_filename<pos:position pos:line="332" pos:column="33"/></name><argument_list pos:line="332" pos:column="33">(<argument><expr><call><name><name pos:line="332" pos:column="34">in<pos:position pos:line="332" pos:column="36"/></name><operator pos:line="332" pos:column="36">.<pos:position pos:line="332" pos:column="37"/></operator><name pos:line="332" pos:column="37">get<pos:position pos:line="332" pos:column="40"/></name></name><argument_list pos:line="332" pos:column="40">()<pos:position pos:line="332" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="332" pos:column="44">db_full<pos:position pos:line="332" pos:column="51"/></name><operator pos:line="332" pos:column="51">.<pos:position pos:line="332" pos:column="52"/></operator><name pos:line="332" pos:column="52">c_str<pos:position pos:line="332" pos:column="57"/></name></name><argument_list pos:line="332" pos:column="57">()<pos:position pos:line="332" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="332" pos:column="60"/></argument_list></call> <operator pos:line="332" pos:column="61">&lt;=<pos:position pos:line="332" pos:column="66"/></operator> <literal type="number" pos:line="332" pos:column="64">0<pos:position pos:line="332" pos:column="65"/></literal></expr>)<pos:position pos:line="332" pos:column="66"/></condition><then pos:line="332" pos:column="66">
        <block type="pseudo"><throw pos:line="333" pos:column="9">throw <expr><call><name><name pos:line="333" pos:column="15">std<pos:position pos:line="333" pos:column="18"/></name><operator pos:line="333" pos:column="18">::<pos:position pos:line="333" pos:column="20"/></operator><name pos:line="333" pos:column="20">runtime_error<pos:position pos:line="333" pos:column="33"/></name></name><argument_list pos:line="333" pos:column="33">(<argument><expr><literal type="string" pos:line="333" pos:column="34">"Uninitialized SSL certificate database directory: "<pos:position pos:line="333" pos:column="86"/></literal> <operator pos:line="333" pos:column="87">+<pos:position pos:line="333" pos:column="88"/></operator> <name pos:line="333" pos:column="89">db_path<pos:position pos:line="333" pos:column="96"/></name> <operator pos:line="333" pos:column="97">+<pos:position pos:line="333" pos:column="98"/></operator> <literal type="string" pos:line="333" pos:column="99">". To initialize, run \"security_file_certgen -c -s "<pos:position pos:line="333" pos:column="152"/></literal> <operator pos:line="333" pos:column="153">+<pos:position pos:line="333" pos:column="154"/></operator> <name pos:line="333" pos:column="155">db_path<pos:position pos:line="333" pos:column="162"/></name> <operator pos:line="333" pos:column="163">+<pos:position pos:line="333" pos:column="164"/></operator> <literal type="string" pos:line="333" pos:column="165">"\"."<pos:position pos:line="333" pos:column="170"/></literal></expr></argument>)<pos:position pos:line="333" pos:column="171"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="172"/></throw></block></then></if>

    <decl_stmt><decl><type><name pos:line="335" pos:column="5">bool<pos:position pos:line="335" pos:column="9"/></name></type> <name pos:line="335" pos:column="10">corrupt<pos:position pos:line="335" pos:column="17"/></name> <init pos:line="335" pos:column="18">= <expr><literal type="boolean" pos:line="335" pos:column="20">false<pos:position pos:line="335" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="335" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="336" pos:column="5">Ssl<pos:position pos:line="336" pos:column="8"/></name><operator pos:line="336" pos:column="8">::<pos:position pos:line="336" pos:column="10"/></operator><name pos:line="336" pos:column="10">TXT_DB_Pointer<pos:position pos:line="336" pos:column="24"/></name></name></type> <name pos:line="336" pos:column="25">temp_db<pos:position pos:line="336" pos:column="32"/></name><argument_list pos:line="336" pos:column="32">(<argument><expr><call><name pos:line="336" pos:column="33">TXT_DB_read<pos:position pos:line="336" pos:column="44"/></name><argument_list pos:line="336" pos:column="44">(<argument><expr><call><name><name pos:line="336" pos:column="45">in<pos:position pos:line="336" pos:column="47"/></name><operator pos:line="336" pos:column="47">.<pos:position pos:line="336" pos:column="48"/></operator><name pos:line="336" pos:column="48">get<pos:position pos:line="336" pos:column="51"/></name></name><argument_list pos:line="336" pos:column="51">()<pos:position pos:line="336" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="336" pos:column="55">cnlNumber<pos:position pos:line="336" pos:column="64"/></name></expr></argument>)<pos:position pos:line="336" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="336" pos:column="66"/></argument_list></decl>;<pos:position pos:line="336" pos:column="67"/></decl_stmt>
    <if pos:line="337" pos:column="5">if <condition pos:line="337" pos:column="8">(<expr><operator pos:line="337" pos:column="9">!<pos:position pos:line="337" pos:column="10"/></operator><name pos:line="337" pos:column="10">temp_db<pos:position pos:line="337" pos:column="17"/></name></expr>)<pos:position pos:line="337" pos:column="18"/></condition><then pos:line="337" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="338" pos:column="9">corrupt<pos:position pos:line="338" pos:column="16"/></name> <operator pos:line="338" pos:column="17">=<pos:position pos:line="338" pos:column="18"/></operator> <literal type="boolean" pos:line="338" pos:column="19">true<pos:position pos:line="338" pos:column="23"/></literal></expr>;<pos:position pos:line="338" pos:column="24"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="340" pos:column="5">// Create indexes in db.</comment>
    <if pos:line="341" pos:column="5">if <condition pos:line="341" pos:column="8">(<expr><operator pos:line="341" pos:column="9">!<pos:position pos:line="341" pos:column="10"/></operator><name pos:line="341" pos:column="10">corrupt<pos:position pos:line="341" pos:column="17"/></name> <operator pos:line="341" pos:column="18">&amp;&amp;<pos:position pos:line="341" pos:column="28"/></operator> <operator pos:line="341" pos:column="21">!<pos:position pos:line="341" pos:column="22"/></operator><call><name pos:line="341" pos:column="22">TXT_DB_create_index<pos:position pos:line="341" pos:column="41"/></name><argument_list pos:line="341" pos:column="41">(<argument><expr><call><name><name pos:line="341" pos:column="42">temp_db<pos:position pos:line="341" pos:column="49"/></name><operator pos:line="341" pos:column="49">.<pos:position pos:line="341" pos:column="50"/></operator><name pos:line="341" pos:column="50">get<pos:position pos:line="341" pos:column="53"/></name></name><argument_list pos:line="341" pos:column="53">()<pos:position pos:line="341" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="341" pos:column="57">cnlSerial<pos:position pos:line="341" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="68">NULL<pos:position pos:line="341" pos:column="72"/></name></expr></argument>, <argument><expr><call><name pos:line="341" pos:column="74">LHASH_HASH_FN<pos:position pos:line="341" pos:column="87"/></name><argument_list pos:line="341" pos:column="87">(<argument><expr><name pos:line="341" pos:column="88">index_serial_hash<pos:position pos:line="341" pos:column="105"/></name></expr></argument>)<pos:position pos:line="341" pos:column="106"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="341" pos:column="108">LHASH_COMP_FN<pos:position pos:line="341" pos:column="121"/></name><argument_list pos:line="341" pos:column="121">(<argument><expr><name pos:line="341" pos:column="122">index_serial_cmp<pos:position pos:line="341" pos:column="138"/></name></expr></argument>)<pos:position pos:line="341" pos:column="139"/></argument_list></call></expr></argument>)<pos:position pos:line="341" pos:column="140"/></argument_list></call></expr>)<pos:position pos:line="341" pos:column="141"/></condition><then pos:line="341" pos:column="141">
        <block type="pseudo"><expr_stmt><expr><name pos:line="342" pos:column="9">corrupt<pos:position pos:line="342" pos:column="16"/></name> <operator pos:line="342" pos:column="17">=<pos:position pos:line="342" pos:column="18"/></operator> <literal type="boolean" pos:line="342" pos:column="19">true<pos:position pos:line="342" pos:column="23"/></literal></expr>;<pos:position pos:line="342" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="344" pos:column="5">if <condition pos:line="344" pos:column="8">(<expr><operator pos:line="344" pos:column="9">!<pos:position pos:line="344" pos:column="10"/></operator><name pos:line="344" pos:column="10">corrupt<pos:position pos:line="344" pos:column="17"/></name> <operator pos:line="344" pos:column="18">&amp;&amp;<pos:position pos:line="344" pos:column="28"/></operator> <operator pos:line="344" pos:column="21">!<pos:position pos:line="344" pos:column="22"/></operator><call><name pos:line="344" pos:column="22">TXT_DB_create_index<pos:position pos:line="344" pos:column="41"/></name><argument_list pos:line="344" pos:column="41">(<argument><expr><call><name><name pos:line="344" pos:column="42">temp_db<pos:position pos:line="344" pos:column="49"/></name><operator pos:line="344" pos:column="49">.<pos:position pos:line="344" pos:column="50"/></operator><name pos:line="344" pos:column="50">get<pos:position pos:line="344" pos:column="53"/></name></name><argument_list pos:line="344" pos:column="53">()<pos:position pos:line="344" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="344" pos:column="57">cnlName<pos:position pos:line="344" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="66">NULL<pos:position pos:line="344" pos:column="70"/></name></expr></argument>, <argument><expr><call><name pos:line="344" pos:column="72">LHASH_HASH_FN<pos:position pos:line="344" pos:column="85"/></name><argument_list pos:line="344" pos:column="85">(<argument><expr><name pos:line="344" pos:column="86">index_name_hash<pos:position pos:line="344" pos:column="101"/></name></expr></argument>)<pos:position pos:line="344" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="344" pos:column="104">LHASH_COMP_FN<pos:position pos:line="344" pos:column="117"/></name><argument_list pos:line="344" pos:column="117">(<argument><expr><name pos:line="344" pos:column="118">index_name_cmp<pos:position pos:line="344" pos:column="132"/></name></expr></argument>)<pos:position pos:line="344" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="344" pos:column="134"/></argument_list></call></expr>)<pos:position pos:line="344" pos:column="135"/></condition><then pos:line="344" pos:column="135">
        <block type="pseudo"><expr_stmt><expr><name pos:line="345" pos:column="9">corrupt<pos:position pos:line="345" pos:column="16"/></name> <operator pos:line="345" pos:column="17">=<pos:position pos:line="345" pos:column="18"/></operator> <literal type="boolean" pos:line="345" pos:column="19">true<pos:position pos:line="345" pos:column="23"/></literal></expr>;<pos:position pos:line="345" pos:column="24"/></expr_stmt></block></then></if>

    <if pos:line="347" pos:column="5">if <condition pos:line="347" pos:column="8">(<expr><name pos:line="347" pos:column="9">corrupt<pos:position pos:line="347" pos:column="16"/></name></expr>)<pos:position pos:line="347" pos:column="17"/></condition><then pos:line="347" pos:column="17">
        <block type="pseudo"><throw pos:line="348" pos:column="9">throw <expr><call><name><name pos:line="348" pos:column="15">std<pos:position pos:line="348" pos:column="18"/></name><operator pos:line="348" pos:column="18">::<pos:position pos:line="348" pos:column="20"/></operator><name pos:line="348" pos:column="20">runtime_error<pos:position pos:line="348" pos:column="33"/></name></name><argument_list pos:line="348" pos:column="33">(<argument><expr><literal type="string" pos:line="348" pos:column="34">"The SSL certificate database "<pos:position pos:line="348" pos:column="65"/></literal> <operator pos:line="348" pos:column="66">+<pos:position pos:line="348" pos:column="67"/></operator> <name pos:line="348" pos:column="68">db_path<pos:position pos:line="348" pos:column="75"/></name> <operator pos:line="348" pos:column="76">+<pos:position pos:line="348" pos:column="77"/></operator> <literal type="string" pos:line="348" pos:column="78">" is corrupted. Please rebuild"<pos:position pos:line="348" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="348" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="111"/></throw></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="350" pos:column="5">db<pos:position pos:line="350" pos:column="7"/></name><operator pos:line="350" pos:column="7">.<pos:position pos:line="350" pos:column="8"/></operator><name pos:line="350" pos:column="8">reset<pos:position pos:line="350" pos:column="13"/></name></name><argument_list pos:line="350" pos:column="13">(<argument><expr><call><name><name pos:line="350" pos:column="14">temp_db<pos:position pos:line="350" pos:column="21"/></name><operator pos:line="350" pos:column="21">.<pos:position pos:line="350" pos:column="22"/></operator><name pos:line="350" pos:column="22">release<pos:position pos:line="350" pos:column="29"/></name></name><argument_list pos:line="350" pos:column="29">()<pos:position pos:line="350" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="350" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="33"/></expr_stmt>
}<pos:position pos:line="351" pos:column="2"/></block></function>

<function><type><name pos:line="353" pos:column="1">void<pos:position pos:line="353" pos:column="5"/></name></type> <name><name pos:line="353" pos:column="6">Ssl<pos:position pos:line="353" pos:column="9"/></name><operator pos:line="353" pos:column="9">::<pos:position pos:line="353" pos:column="11"/></operator><name pos:line="353" pos:column="11">CertificateDb<pos:position pos:line="353" pos:column="24"/></name><operator pos:line="353" pos:column="24">::<pos:position pos:line="353" pos:column="26"/></operator><name pos:line="353" pos:column="26">save<pos:position pos:line="353" pos:column="30"/></name></name><parameter_list pos:line="353" pos:column="30">()<pos:position pos:line="353" pos:column="32"/></parameter_list> <block pos:line="353" pos:column="33">{
    <if pos:line="354" pos:column="5">if <condition pos:line="354" pos:column="8">(<expr><operator pos:line="354" pos:column="9">!<pos:position pos:line="354" pos:column="10"/></operator><name pos:line="354" pos:column="10">db<pos:position pos:line="354" pos:column="12"/></name></expr>)<pos:position pos:line="354" pos:column="13"/></condition><then pos:line="354" pos:column="13">
        <block type="pseudo"><throw pos:line="355" pos:column="9">throw <expr><call><name><name pos:line="355" pos:column="15">std<pos:position pos:line="355" pos:column="18"/></name><operator pos:line="355" pos:column="18">::<pos:position pos:line="355" pos:column="20"/></operator><name pos:line="355" pos:column="20">runtime_error<pos:position pos:line="355" pos:column="33"/></name></name><argument_list pos:line="355" pos:column="33">(<argument><expr><literal type="string" pos:line="355" pos:column="34">"The certificates database is not loaded"<pos:position pos:line="355" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="355" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="77"/></throw></block></then></if><empty_stmt pos:line="355" pos:column="77">;<pos:position pos:line="355" pos:column="78"/></empty_stmt>

    <comment type="line" pos:line="357" pos:column="5">// To save the db to file,  create a new BIO with BIO file methods.</comment>
    <decl_stmt><decl><type><name><name pos:line="358" pos:column="5">Ssl<pos:position pos:line="358" pos:column="8"/></name><operator pos:line="358" pos:column="8">::<pos:position pos:line="358" pos:column="10"/></operator><name pos:line="358" pos:column="10">BIO_Pointer<pos:position pos:line="358" pos:column="21"/></name></name></type> <name pos:line="358" pos:column="22">out<pos:position pos:line="358" pos:column="25"/></name><argument_list pos:line="358" pos:column="25">(<argument><expr><call><name pos:line="358" pos:column="26">BIO_new<pos:position pos:line="358" pos:column="33"/></name><argument_list pos:line="358" pos:column="33">(<argument><expr><call><name pos:line="358" pos:column="34">BIO_s_file<pos:position pos:line="358" pos:column="44"/></name><argument_list pos:line="358" pos:column="44">()<pos:position pos:line="358" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="358" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="358" pos:column="48"/></argument_list></decl>;<pos:position pos:line="358" pos:column="49"/></decl_stmt>
    <if pos:line="359" pos:column="5">if <condition pos:line="359" pos:column="8">(<expr><operator pos:line="359" pos:column="9">!<pos:position pos:line="359" pos:column="10"/></operator><name pos:line="359" pos:column="10">out<pos:position pos:line="359" pos:column="13"/></name> <operator pos:line="359" pos:column="14">||<pos:position pos:line="359" pos:column="16"/></operator> <operator pos:line="359" pos:column="17">!<pos:position pos:line="359" pos:column="18"/></operator><call><name pos:line="359" pos:column="18">BIO_write_filename<pos:position pos:line="359" pos:column="36"/></name><argument_list pos:line="359" pos:column="36">(<argument><expr><call><name><name pos:line="359" pos:column="37">out<pos:position pos:line="359" pos:column="40"/></name><operator pos:line="359" pos:column="40">.<pos:position pos:line="359" pos:column="41"/></operator><name pos:line="359" pos:column="41">get<pos:position pos:line="359" pos:column="44"/></name></name><argument_list pos:line="359" pos:column="44">()<pos:position pos:line="359" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><cast type="const" pos:line="359" pos:column="48">const_cast<argument_list type="generic" pos:line="359" pos:column="58">&lt;<argument><expr><name pos:line="359" pos:column="59">char<pos:position pos:line="359" pos:column="63"/></name> <operator pos:line="359" pos:column="64">*<pos:position pos:line="359" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="359" pos:column="69"/></argument_list><argument_list pos:line="359" pos:column="66">(<argument><expr><call><name><name pos:line="359" pos:column="67">db_full<pos:position pos:line="359" pos:column="74"/></name><operator pos:line="359" pos:column="74">.<pos:position pos:line="359" pos:column="75"/></operator><name pos:line="359" pos:column="75">c_str<pos:position pos:line="359" pos:column="80"/></name></name><argument_list pos:line="359" pos:column="80">()<pos:position pos:line="359" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="359" pos:column="83"/></argument_list></cast></expr></argument>)<pos:position pos:line="359" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="359" pos:column="85"/></condition><then pos:line="359" pos:column="85">
        <block type="pseudo"><throw pos:line="360" pos:column="9">throw <expr><call><name><name pos:line="360" pos:column="15">std<pos:position pos:line="360" pos:column="18"/></name><operator pos:line="360" pos:column="18">::<pos:position pos:line="360" pos:column="20"/></operator><name pos:line="360" pos:column="20">runtime_error<pos:position pos:line="360" pos:column="33"/></name></name><argument_list pos:line="360" pos:column="33">(<argument><expr><literal type="string" pos:line="360" pos:column="34">"Failed to initialize "<pos:position pos:line="360" pos:column="57"/></literal> <operator pos:line="360" pos:column="58">+<pos:position pos:line="360" pos:column="59"/></operator> <name pos:line="360" pos:column="60">db_full<pos:position pos:line="360" pos:column="67"/></name> <operator pos:line="360" pos:column="68">+<pos:position pos:line="360" pos:column="69"/></operator> <literal type="string" pos:line="360" pos:column="70">" file for writing"<pos:position pos:line="360" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="360" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="91"/></throw></block></then></if><empty_stmt pos:line="360" pos:column="91">;<pos:position pos:line="360" pos:column="92"/></empty_stmt>

    <if pos:line="362" pos:column="5">if <condition pos:line="362" pos:column="8">(<expr><call><name pos:line="362" pos:column="9">TXT_DB_write<pos:position pos:line="362" pos:column="21"/></name><argument_list pos:line="362" pos:column="21">(<argument><expr><call><name><name pos:line="362" pos:column="22">out<pos:position pos:line="362" pos:column="25"/></name><operator pos:line="362" pos:column="25">.<pos:position pos:line="362" pos:column="26"/></operator><name pos:line="362" pos:column="26">get<pos:position pos:line="362" pos:column="29"/></name></name><argument_list pos:line="362" pos:column="29">()<pos:position pos:line="362" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="362" pos:column="33">db<pos:position pos:line="362" pos:column="35"/></name><operator pos:line="362" pos:column="35">.<pos:position pos:line="362" pos:column="36"/></operator><name pos:line="362" pos:column="36">get<pos:position pos:line="362" pos:column="39"/></name></name><argument_list pos:line="362" pos:column="39">()<pos:position pos:line="362" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="362" pos:column="42"/></argument_list></call> <operator pos:line="362" pos:column="43">&lt;<pos:position pos:line="362" pos:column="47"/></operator> <literal type="number" pos:line="362" pos:column="45">0<pos:position pos:line="362" pos:column="46"/></literal></expr>)<pos:position pos:line="362" pos:column="47"/></condition><then pos:line="362" pos:column="47">
        <block type="pseudo"><throw pos:line="363" pos:column="9">throw <expr><call><name><name pos:line="363" pos:column="15">std<pos:position pos:line="363" pos:column="18"/></name><operator pos:line="363" pos:column="18">::<pos:position pos:line="363" pos:column="20"/></operator><name pos:line="363" pos:column="20">runtime_error<pos:position pos:line="363" pos:column="33"/></name></name><argument_list pos:line="363" pos:column="33">(<argument><expr><literal type="string" pos:line="363" pos:column="34">"Failed to write "<pos:position pos:line="363" pos:column="52"/></literal> <operator pos:line="363" pos:column="53">+<pos:position pos:line="363" pos:column="54"/></operator> <name pos:line="363" pos:column="55">db_full<pos:position pos:line="363" pos:column="62"/></name> <operator pos:line="363" pos:column="63">+<pos:position pos:line="363" pos:column="64"/></operator> <literal type="string" pos:line="363" pos:column="65">" file"<pos:position pos:line="363" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="363" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="74"/></throw></block></then></if>
}<pos:position pos:line="364" pos:column="2"/></block></function>

<comment type="line" pos:line="366" pos:column="1">// Normally defined in defines.h file</comment>
<function><type><name pos:line="367" pos:column="1">void<pos:position pos:line="367" pos:column="5"/></name></type> <name><name pos:line="367" pos:column="6">Ssl<pos:position pos:line="367" pos:column="9"/></name><operator pos:line="367" pos:column="9">::<pos:position pos:line="367" pos:column="11"/></operator><name pos:line="367" pos:column="11">CertificateDb<pos:position pos:line="367" pos:column="24"/></name><operator pos:line="367" pos:column="24">::<pos:position pos:line="367" pos:column="26"/></operator><name pos:line="367" pos:column="26">deleteRow<pos:position pos:line="367" pos:column="35"/></name></name><parameter_list pos:line="367" pos:column="35">(<parameter><decl><type><specifier pos:line="367" pos:column="36">const<pos:position pos:line="367" pos:column="41"/></specifier> <name pos:line="367" pos:column="42">char<pos:position pos:line="367" pos:column="46"/></name> <modifier pos:line="367" pos:column="47">*<pos:position pos:line="367" pos:column="48"/></modifier><modifier pos:line="367" pos:column="48">*<pos:position pos:line="367" pos:column="49"/></modifier></type><name pos:line="367" pos:column="49">row<pos:position pos:line="367" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="367" pos:column="54">int<pos:position pos:line="367" pos:column="57"/></name></type> <name pos:line="367" pos:column="58">rowIndex<pos:position pos:line="367" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="367" pos:column="67"/></parameter_list> <block pos:line="367" pos:column="68">{
    <decl_stmt><decl><type><specifier pos:line="368" pos:column="5">const<pos:position pos:line="368" pos:column="10"/></specifier> <name><name pos:line="368" pos:column="11">std<pos:position pos:line="368" pos:column="14"/></name><operator pos:line="368" pos:column="14">::<pos:position pos:line="368" pos:column="16"/></operator><name pos:line="368" pos:column="16">string<pos:position pos:line="368" pos:column="22"/></name></name></type> <name pos:line="368" pos:column="23">filename<pos:position pos:line="368" pos:column="31"/></name><argument_list pos:line="368" pos:column="31">(<argument><expr><name pos:line="368" pos:column="32">cert_full<pos:position pos:line="368" pos:column="41"/></name> <operator pos:line="368" pos:column="42">+<pos:position pos:line="368" pos:column="43"/></operator> <literal type="string" pos:line="368" pos:column="44">"/"<pos:position pos:line="368" pos:column="47"/></literal> <operator pos:line="368" pos:column="48">+<pos:position pos:line="368" pos:column="49"/></operator> <name><name pos:line="368" pos:column="50">row<pos:position pos:line="368" pos:column="53"/></name><index pos:line="368" pos:column="53">[<expr><name pos:line="368" pos:column="54">cnlSerial<pos:position pos:line="368" pos:column="63"/></name></expr>]<pos:position pos:line="368" pos:column="64"/></index></name> <operator pos:line="368" pos:column="65">+<pos:position pos:line="368" pos:column="66"/></operator> <literal type="string" pos:line="368" pos:column="67">".pem"<pos:position pos:line="368" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="368" pos:column="74"/></argument_list></decl>;<pos:position pos:line="368" pos:column="75"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="369" pos:column="5">sq_TXT_DB_delete_row<pos:position pos:line="369" pos:column="25"/></name><argument_list pos:line="369" pos:column="25">(<argument><expr><call><name><name pos:line="369" pos:column="26">db<pos:position pos:line="369" pos:column="28"/></name><operator pos:line="369" pos:column="28">.<pos:position pos:line="369" pos:column="29"/></operator><name pos:line="369" pos:column="29">get<pos:position pos:line="369" pos:column="32"/></name></name><argument_list pos:line="369" pos:column="32">()<pos:position pos:line="369" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="369" pos:column="36">rowIndex<pos:position pos:line="369" pos:column="44"/></name></expr></argument>)<pos:position pos:line="369" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="371" pos:column="5">subSize<pos:position pos:line="371" pos:column="12"/></name><argument_list pos:line="371" pos:column="12">(<argument><expr><name pos:line="371" pos:column="13">filename<pos:position pos:line="371" pos:column="21"/></name></expr></argument>)<pos:position pos:line="371" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="23"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="372" pos:column="5">int<pos:position pos:line="372" pos:column="8"/></name></type> <name pos:line="372" pos:column="9">ret<pos:position pos:line="372" pos:column="12"/></name> <init pos:line="372" pos:column="13">= <expr><call><name pos:line="372" pos:column="15">remove<pos:position pos:line="372" pos:column="21"/></name><argument_list pos:line="372" pos:column="21">(<argument><expr><call><name><name pos:line="372" pos:column="22">filename<pos:position pos:line="372" pos:column="30"/></name><operator pos:line="372" pos:column="30">.<pos:position pos:line="372" pos:column="31"/></operator><name pos:line="372" pos:column="31">c_str<pos:position pos:line="372" pos:column="36"/></name></name><argument_list pos:line="372" pos:column="36">()<pos:position pos:line="372" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="372" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="372" pos:column="40"/></decl_stmt>
    <if pos:line="373" pos:column="5">if <condition pos:line="373" pos:column="8">(<expr><name pos:line="373" pos:column="9">ret<pos:position pos:line="373" pos:column="12"/></name> <operator pos:line="373" pos:column="13">&lt;<pos:position pos:line="373" pos:column="17"/></operator> <literal type="number" pos:line="373" pos:column="15">0<pos:position pos:line="373" pos:column="16"/></literal> <operator pos:line="373" pos:column="17">&amp;&amp;<pos:position pos:line="373" pos:column="27"/></operator> <name pos:line="373" pos:column="20">errno<pos:position pos:line="373" pos:column="25"/></name> <operator pos:line="373" pos:column="26">!=<pos:position pos:line="373" pos:column="28"/></operator> <name pos:line="373" pos:column="29">ENOENT<pos:position pos:line="373" pos:column="35"/></name></expr>)<pos:position pos:line="373" pos:column="36"/></condition><then pos:line="373" pos:column="36">
        <block type="pseudo"><throw pos:line="374" pos:column="9">throw <expr><call><name><name pos:line="374" pos:column="15">std<pos:position pos:line="374" pos:column="18"/></name><operator pos:line="374" pos:column="18">::<pos:position pos:line="374" pos:column="20"/></operator><name pos:line="374" pos:column="20">runtime_error<pos:position pos:line="374" pos:column="33"/></name></name><argument_list pos:line="374" pos:column="33">(<argument><expr><literal type="string" pos:line="374" pos:column="34">"Failed to remove certficate file "<pos:position pos:line="374" pos:column="69"/></literal> <operator pos:line="374" pos:column="70">+<pos:position pos:line="374" pos:column="71"/></operator> <name pos:line="374" pos:column="72">filename<pos:position pos:line="374" pos:column="80"/></name> <operator pos:line="374" pos:column="81">+<pos:position pos:line="374" pos:column="82"/></operator> <literal type="string" pos:line="374" pos:column="83">" from db"<pos:position pos:line="374" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="374" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="95"/></throw></block></then></if>
}<pos:position pos:line="375" pos:column="2"/></block></function>

<function><type><name pos:line="377" pos:column="1">bool<pos:position pos:line="377" pos:column="5"/></name></type> <name><name pos:line="377" pos:column="6">Ssl<pos:position pos:line="377" pos:column="9"/></name><operator pos:line="377" pos:column="9">::<pos:position pos:line="377" pos:column="11"/></operator><name pos:line="377" pos:column="11">CertificateDb<pos:position pos:line="377" pos:column="24"/></name><operator pos:line="377" pos:column="24">::<pos:position pos:line="377" pos:column="26"/></operator><name pos:line="377" pos:column="26">deleteInvalidCertificate<pos:position pos:line="377" pos:column="50"/></name></name><parameter_list pos:line="377" pos:column="50">()<pos:position pos:line="377" pos:column="52"/></parameter_list> <block pos:line="377" pos:column="53">{
    <if pos:line="378" pos:column="5">if <condition pos:line="378" pos:column="8">(<expr><operator pos:line="378" pos:column="9">!<pos:position pos:line="378" pos:column="10"/></operator><name pos:line="378" pos:column="10">db<pos:position pos:line="378" pos:column="12"/></name></expr>)<pos:position pos:line="378" pos:column="13"/></condition><then pos:line="378" pos:column="13">
        <block type="pseudo"><return pos:line="379" pos:column="9">return <expr><literal type="boolean" pos:line="379" pos:column="16">false<pos:position pos:line="379" pos:column="21"/></literal></expr>;<pos:position pos:line="379" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="381" pos:column="5">bool<pos:position pos:line="381" pos:column="9"/></name></type> <name pos:line="381" pos:column="10">removed_one<pos:position pos:line="381" pos:column="21"/></name> <init pos:line="381" pos:column="22">= <expr><literal type="boolean" pos:line="381" pos:column="24">false<pos:position pos:line="381" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="381" pos:column="30"/></decl_stmt>
<cpp:if pos:line="382" pos:column="1">#<cpp:directive pos:line="382" pos:column="2">if<pos:position pos:line="382" pos:column="4"/></cpp:directive> <expr><name pos:line="382" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="382" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="383" pos:column="5">for <control pos:line="383" pos:column="9">(<init><decl><type><name pos:line="383" pos:column="10">int<pos:position pos:line="383" pos:column="13"/></name></type> <name pos:line="383" pos:column="14">i<pos:position pos:line="383" pos:column="15"/></name> <init pos:line="383" pos:column="16">= <expr><literal type="number" pos:line="383" pos:column="18">0<pos:position pos:line="383" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="383" pos:column="20"/></init> <condition><expr><name pos:line="383" pos:column="21">i<pos:position pos:line="383" pos:column="22"/></name> <operator pos:line="383" pos:column="23">&lt;<pos:position pos:line="383" pos:column="27"/></operator> <call><name pos:line="383" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="383" pos:column="47"/></name><argument_list pos:line="383" pos:column="47">(<argument><expr><call><name><name pos:line="383" pos:column="48">db<pos:position pos:line="383" pos:column="50"/></name><operator pos:line="383" pos:column="50">.<pos:position pos:line="383" pos:column="51"/></operator><name pos:line="383" pos:column="51">get<pos:position pos:line="383" pos:column="54"/></name></name><argument_list pos:line="383" pos:column="54">()<pos:position pos:line="383" pos:column="56"/></argument_list></call><operator pos:line="383" pos:column="56">-&gt;<pos:position pos:line="383" pos:column="61"/></operator><name pos:line="383" pos:column="58">data<pos:position pos:line="383" pos:column="62"/></name></expr></argument>)<pos:position pos:line="383" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="64"/></condition> <incr><expr><operator pos:line="383" pos:column="65">++<pos:position pos:line="383" pos:column="67"/></operator><name pos:line="383" pos:column="67">i<pos:position pos:line="383" pos:column="68"/></name></expr></incr>)<pos:position pos:line="383" pos:column="69"/></control> <block pos:line="383" pos:column="70">{
<cpp:if pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">if<pos:position pos:line="384" pos:column="4"/></cpp:directive> <expr><name pos:line="384" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="384" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="385" pos:column="9">const<pos:position pos:line="385" pos:column="14"/></specifier> <name pos:line="385" pos:column="15">char<pos:position pos:line="385" pos:column="19"/></name> <modifier pos:line="385" pos:column="20">*<pos:position pos:line="385" pos:column="21"/></modifier><modifier pos:line="385" pos:column="21">*<pos:position pos:line="385" pos:column="22"/></modifier></type> <name pos:line="385" pos:column="23">current_row<pos:position pos:line="385" pos:column="34"/></name> <init pos:line="385" pos:column="35">= <expr><operator pos:line="385" pos:column="37">(<pos:position pos:line="385" pos:column="38"/></operator><operator pos:line="385" pos:column="38">(<pos:position pos:line="385" pos:column="39"/></operator><specifier pos:line="385" pos:column="39">const<pos:position pos:line="385" pos:column="44"/></specifier> <name pos:line="385" pos:column="45">char<pos:position pos:line="385" pos:column="49"/></name> <operator pos:line="385" pos:column="50">*<pos:position pos:line="385" pos:column="51"/></operator><operator pos:line="385" pos:column="51">*<pos:position pos:line="385" pos:column="52"/></operator><operator pos:line="385" pos:column="52">)<pos:position pos:line="385" pos:column="53"/></operator><call><name pos:line="385" pos:column="53">sk_value<pos:position pos:line="385" pos:column="61"/></name><argument_list pos:line="385" pos:column="61">(<argument><expr><call><name pos:line="385" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="385" pos:column="78"/></name><argument_list pos:line="385" pos:column="78">(<argument><expr><name pos:line="385" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="385" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="385" pos:column="96">db<pos:position pos:line="385" pos:column="98"/></name><operator pos:line="385" pos:column="98">.<pos:position pos:line="385" pos:column="99"/></operator><name pos:line="385" pos:column="99">get<pos:position pos:line="385" pos:column="102"/></name></name><argument_list pos:line="385" pos:column="102">()<pos:position pos:line="385" pos:column="104"/></argument_list></call><operator pos:line="385" pos:column="104">-&gt;<pos:position pos:line="385" pos:column="109"/></operator><name pos:line="385" pos:column="106">data<pos:position pos:line="385" pos:column="110"/></name></expr></argument>)<pos:position pos:line="385" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="385" pos:column="113">i<pos:position pos:line="385" pos:column="114"/></name></expr></argument>)<pos:position pos:line="385" pos:column="115"/></argument_list></call><operator pos:line="385" pos:column="115">)<pos:position pos:line="385" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="385" pos:column="117"/></decl_stmt>
<cpp:else pos:line="386" pos:column="1">#<cpp:directive pos:line="386" pos:column="2">else<pos:position pos:line="386" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="387" pos:column="9">const<pos:position pos:line="387" pos:column="14"/></specifier> <name pos:line="387" pos:column="15">char<pos:position pos:line="387" pos:column="19"/></name> <modifier pos:line="387" pos:column="20">*<pos:position pos:line="387" pos:column="21"/></modifier><modifier pos:line="387" pos:column="21">*<pos:position pos:line="387" pos:column="22"/></modifier></type> <name pos:line="387" pos:column="23">current_row<pos:position pos:line="387" pos:column="34"/></name> <init pos:line="387" pos:column="35">= <expr><operator pos:line="387" pos:column="37">(<pos:position pos:line="387" pos:column="38"/></operator><operator pos:line="387" pos:column="38">(<pos:position pos:line="387" pos:column="39"/></operator><specifier pos:line="387" pos:column="39">const<pos:position pos:line="387" pos:column="44"/></specifier> <name pos:line="387" pos:column="45">char<pos:position pos:line="387" pos:column="49"/></name> <operator pos:line="387" pos:column="50">*<pos:position pos:line="387" pos:column="51"/></operator><operator pos:line="387" pos:column="51">*<pos:position pos:line="387" pos:column="52"/></operator><operator pos:line="387" pos:column="52">)<pos:position pos:line="387" pos:column="53"/></operator><call><name pos:line="387" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="387" pos:column="77"/></name><argument_list pos:line="387" pos:column="77">(<argument><expr><call><name><name pos:line="387" pos:column="78">db<pos:position pos:line="387" pos:column="80"/></name><operator pos:line="387" pos:column="80">.<pos:position pos:line="387" pos:column="81"/></operator><name pos:line="387" pos:column="81">get<pos:position pos:line="387" pos:column="84"/></name></name><argument_list pos:line="387" pos:column="84">()<pos:position pos:line="387" pos:column="86"/></argument_list></call><operator pos:line="387" pos:column="86">-&gt;<pos:position pos:line="387" pos:column="91"/></operator><name pos:line="387" pos:column="88">data<pos:position pos:line="387" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="387" pos:column="94">i<pos:position pos:line="387" pos:column="95"/></name></expr></argument>)<pos:position pos:line="387" pos:column="96"/></argument_list></call><operator pos:line="387" pos:column="96">)<pos:position pos:line="387" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="387" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="388" pos:column="1">#<cpp:directive pos:line="388" pos:column="2">endif<pos:position pos:line="388" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="389" pos:column="1">#<cpp:directive pos:line="389" pos:column="2">else<pos:position pos:line="389" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="390" pos:column="5">for <control pos:line="390" pos:column="9">(<init><decl><type><name pos:line="390" pos:column="10">int<pos:position pos:line="390" pos:column="13"/></name></type> <name pos:line="390" pos:column="14">i<pos:position pos:line="390" pos:column="15"/></name> <init pos:line="390" pos:column="16">= <expr><literal type="number" pos:line="390" pos:column="18">0<pos:position pos:line="390" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="390" pos:column="20"/></init> <condition><expr><name pos:line="390" pos:column="21">i<pos:position pos:line="390" pos:column="22"/></name> <operator pos:line="390" pos:column="23">&lt;<pos:position pos:line="390" pos:column="27"/></operator> <call><name pos:line="390" pos:column="25">sk_num<pos:position pos:line="390" pos:column="31"/></name><argument_list pos:line="390" pos:column="31">(<argument><expr><call><name><name pos:line="390" pos:column="32">db<pos:position pos:line="390" pos:column="34"/></name><operator pos:line="390" pos:column="34">.<pos:position pos:line="390" pos:column="35"/></operator><name pos:line="390" pos:column="35">get<pos:position pos:line="390" pos:column="38"/></name></name><argument_list pos:line="390" pos:column="38">()<pos:position pos:line="390" pos:column="40"/></argument_list></call><operator pos:line="390" pos:column="40">-&gt;<pos:position pos:line="390" pos:column="45"/></operator><name pos:line="390" pos:column="42">data<pos:position pos:line="390" pos:column="46"/></name></expr></argument>)<pos:position pos:line="390" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="48"/></condition> <incr><expr><operator pos:line="390" pos:column="49">++<pos:position pos:line="390" pos:column="51"/></operator><name pos:line="390" pos:column="51">i<pos:position pos:line="390" pos:column="52"/></name></expr></incr>)<pos:position pos:line="390" pos:column="53"/></control> <block pos:line="390" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="391" pos:column="9">const<pos:position pos:line="391" pos:column="14"/></specifier> <name pos:line="391" pos:column="15">char<pos:position pos:line="391" pos:column="19"/></name> <modifier pos:line="391" pos:column="20">*<pos:position pos:line="391" pos:column="21"/></modifier><modifier pos:line="391" pos:column="21">*<pos:position pos:line="391" pos:column="22"/></modifier></type> <name pos:line="391" pos:column="23">current_row<pos:position pos:line="391" pos:column="34"/></name> <init pos:line="391" pos:column="35">= <expr><operator pos:line="391" pos:column="37">(<pos:position pos:line="391" pos:column="38"/></operator><operator pos:line="391" pos:column="38">(<pos:position pos:line="391" pos:column="39"/></operator><specifier pos:line="391" pos:column="39">const<pos:position pos:line="391" pos:column="44"/></specifier> <name pos:line="391" pos:column="45">char<pos:position pos:line="391" pos:column="49"/></name> <operator pos:line="391" pos:column="50">*<pos:position pos:line="391" pos:column="51"/></operator><operator pos:line="391" pos:column="51">*<pos:position pos:line="391" pos:column="52"/></operator><operator pos:line="391" pos:column="52">)<pos:position pos:line="391" pos:column="53"/></operator><call><name pos:line="391" pos:column="53">sk_value<pos:position pos:line="391" pos:column="61"/></name><argument_list pos:line="391" pos:column="61">(<argument><expr><call><name><name pos:line="391" pos:column="62">db<pos:position pos:line="391" pos:column="64"/></name><operator pos:line="391" pos:column="64">.<pos:position pos:line="391" pos:column="65"/></operator><name pos:line="391" pos:column="65">get<pos:position pos:line="391" pos:column="68"/></name></name><argument_list pos:line="391" pos:column="68">()<pos:position pos:line="391" pos:column="70"/></argument_list></call><operator pos:line="391" pos:column="70">-&gt;<pos:position pos:line="391" pos:column="75"/></operator><name pos:line="391" pos:column="72">data<pos:position pos:line="391" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="78">i<pos:position pos:line="391" pos:column="79"/></name></expr></argument>)<pos:position pos:line="391" pos:column="80"/></argument_list></call><operator pos:line="391" pos:column="80">)<pos:position pos:line="391" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="391" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="392" pos:column="1">#<cpp:directive pos:line="392" pos:column="2">endif<pos:position pos:line="392" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="394" pos:column="9">if <condition pos:line="394" pos:column="12">(<expr><operator pos:line="394" pos:column="13">!<pos:position pos:line="394" pos:column="14"/></operator><call><name pos:line="394" pos:column="14">sslDateIsInTheFuture<pos:position pos:line="394" pos:column="34"/></name><argument_list pos:line="394" pos:column="34">(<argument><expr><name><name pos:line="394" pos:column="35">current_row<pos:position pos:line="394" pos:column="46"/></name><index pos:line="394" pos:column="46">[<expr><name pos:line="394" pos:column="47">cnlExp_date<pos:position pos:line="394" pos:column="58"/></name></expr>]<pos:position pos:line="394" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="394" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="394" pos:column="61"/></condition><then pos:line="394" pos:column="61"> <block pos:line="394" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="395" pos:column="13">deleteRow<pos:position pos:line="395" pos:column="22"/></name><argument_list pos:line="395" pos:column="22">(<argument><expr><name pos:line="395" pos:column="23">current_row<pos:position pos:line="395" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="395" pos:column="36">i<pos:position pos:line="395" pos:column="37"/></name></expr></argument>)<pos:position pos:line="395" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="396" pos:column="13">removed_one<pos:position pos:line="396" pos:column="24"/></name> <operator pos:line="396" pos:column="25">=<pos:position pos:line="396" pos:column="26"/></operator> <literal type="boolean" pos:line="396" pos:column="27">true<pos:position pos:line="396" pos:column="31"/></literal></expr>;<pos:position pos:line="396" pos:column="32"/></expr_stmt>
            <break pos:line="397" pos:column="13">break;<pos:position pos:line="397" pos:column="19"/></break>
        }<pos:position pos:line="398" pos:column="10"/></block></then></if>
    }<pos:position pos:line="399" pos:column="6"/></block></for>

    <if pos:line="401" pos:column="5">if <condition pos:line="401" pos:column="8">(<expr><operator pos:line="401" pos:column="9">!<pos:position pos:line="401" pos:column="10"/></operator><name pos:line="401" pos:column="10">removed_one<pos:position pos:line="401" pos:column="21"/></name></expr>)<pos:position pos:line="401" pos:column="22"/></condition><then pos:line="401" pos:column="22">
        <block type="pseudo"><return pos:line="402" pos:column="9">return <expr><literal type="boolean" pos:line="402" pos:column="16">false<pos:position pos:line="402" pos:column="21"/></literal></expr>;<pos:position pos:line="402" pos:column="22"/></return></block></then></if>
    <return pos:line="403" pos:column="5">return <expr><literal type="boolean" pos:line="403" pos:column="12">true<pos:position pos:line="403" pos:column="16"/></literal></expr>;<pos:position pos:line="403" pos:column="17"/></return>
}<pos:position pos:line="404" pos:column="2"/></block></for>

<function><type><name pos:line="406" pos:column="1">bool<pos:position pos:line="406" pos:column="5"/></name></type> <name><name pos:line="406" pos:column="6">Ssl<pos:position pos:line="406" pos:column="9"/></name><operator pos:line="406" pos:column="9">::<pos:position pos:line="406" pos:column="11"/></operator><name pos:line="406" pos:column="11">CertificateDb<pos:position pos:line="406" pos:column="24"/></name><operator pos:line="406" pos:column="24">::<pos:position pos:line="406" pos:column="26"/></operator><name pos:line="406" pos:column="26">deleteOldestCertificate<pos:position pos:line="406" pos:column="49"/></name></name><parameter_list pos:line="406" pos:column="49">()<pos:position pos:line="406" pos:column="51"/></parameter_list>
<block pos:line="407" pos:column="1">{
    <if pos:line="408" pos:column="5">if <condition pos:line="408" pos:column="8">(<expr><operator pos:line="408" pos:column="9">!<pos:position pos:line="408" pos:column="10"/></operator><call><name pos:line="408" pos:column="10">hasRows<pos:position pos:line="408" pos:column="17"/></name><argument_list pos:line="408" pos:column="17">()<pos:position pos:line="408" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="408" pos:column="20"/></condition><then pos:line="408" pos:column="20">
        <block type="pseudo"><return pos:line="409" pos:column="9">return <expr><literal type="boolean" pos:line="409" pos:column="16">false<pos:position pos:line="409" pos:column="21"/></literal></expr>;<pos:position pos:line="409" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="411" pos:column="1">#<cpp:directive pos:line="411" pos:column="2">if<pos:position pos:line="411" pos:column="4"/></cpp:directive> <expr><name pos:line="411" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="411" pos:column="31"/></name></expr></cpp:if>
<cpp:if pos:line="412" pos:column="1">#<cpp:directive pos:line="412" pos:column="2">if<pos:position pos:line="412" pos:column="4"/></cpp:directive> <expr><name pos:line="412" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="412" pos:column="35"/></name></expr></cpp:if>
    <decl_stmt><decl><type><specifier pos:line="413" pos:column="5">const<pos:position pos:line="413" pos:column="10"/></specifier> <name pos:line="413" pos:column="11">char<pos:position pos:line="413" pos:column="15"/></name> <modifier pos:line="413" pos:column="16">*<pos:position pos:line="413" pos:column="17"/></modifier><modifier pos:line="413" pos:column="17">*<pos:position pos:line="413" pos:column="18"/></modifier></type><name pos:line="413" pos:column="18">row<pos:position pos:line="413" pos:column="21"/></name> <init pos:line="413" pos:column="22">= <expr><operator pos:line="413" pos:column="24">(<pos:position pos:line="413" pos:column="25"/></operator><operator pos:line="413" pos:column="25">(<pos:position pos:line="413" pos:column="26"/></operator><specifier pos:line="413" pos:column="26">const<pos:position pos:line="413" pos:column="31"/></specifier> <name pos:line="413" pos:column="32">char<pos:position pos:line="413" pos:column="36"/></name> <operator pos:line="413" pos:column="37">*<pos:position pos:line="413" pos:column="38"/></operator><operator pos:line="413" pos:column="38">*<pos:position pos:line="413" pos:column="39"/></operator><operator pos:line="413" pos:column="39">)<pos:position pos:line="413" pos:column="40"/></operator><call><name pos:line="413" pos:column="40">sk_value<pos:position pos:line="413" pos:column="48"/></name><argument_list pos:line="413" pos:column="48">(<argument><expr><call><name pos:line="413" pos:column="49">CHECKED_STACK_OF<pos:position pos:line="413" pos:column="65"/></name><argument_list pos:line="413" pos:column="65">(<argument><expr><name pos:line="413" pos:column="66">OPENSSL_PSTRING<pos:position pos:line="413" pos:column="81"/></name></expr></argument>, <argument><expr><call><name><name pos:line="413" pos:column="83">db<pos:position pos:line="413" pos:column="85"/></name><operator pos:line="413" pos:column="85">.<pos:position pos:line="413" pos:column="86"/></operator><name pos:line="413" pos:column="86">get<pos:position pos:line="413" pos:column="89"/></name></name><argument_list pos:line="413" pos:column="89">()<pos:position pos:line="413" pos:column="91"/></argument_list></call><operator pos:line="413" pos:column="91">-&gt;<pos:position pos:line="413" pos:column="96"/></operator><name pos:line="413" pos:column="93">data<pos:position pos:line="413" pos:column="97"/></name></expr></argument>)<pos:position pos:line="413" pos:column="98"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="413" pos:column="100">0<pos:position pos:line="413" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="413" pos:column="102"/></argument_list></call><operator pos:line="413" pos:column="102">)<pos:position pos:line="413" pos:column="103"/></operator></expr></init></decl>;<pos:position pos:line="413" pos:column="104"/></decl_stmt>
<cpp:else pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">else<pos:position pos:line="414" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="415" pos:column="5">const<pos:position pos:line="415" pos:column="10"/></specifier> <name pos:line="415" pos:column="11">char<pos:position pos:line="415" pos:column="15"/></name> <modifier pos:line="415" pos:column="16">*<pos:position pos:line="415" pos:column="17"/></modifier><modifier pos:line="415" pos:column="17">*<pos:position pos:line="415" pos:column="18"/></modifier></type><name pos:line="415" pos:column="18">row<pos:position pos:line="415" pos:column="21"/></name> <init pos:line="415" pos:column="22">= <expr><operator pos:line="415" pos:column="24">(<pos:position pos:line="415" pos:column="25"/></operator><specifier pos:line="415" pos:column="25">const<pos:position pos:line="415" pos:column="30"/></specifier> <name pos:line="415" pos:column="31">char<pos:position pos:line="415" pos:column="35"/></name> <operator pos:line="415" pos:column="36">*<pos:position pos:line="415" pos:column="37"/></operator><operator pos:line="415" pos:column="37">*<pos:position pos:line="415" pos:column="38"/></operator><operator pos:line="415" pos:column="38">)<pos:position pos:line="415" pos:column="39"/></operator><call><name pos:line="415" pos:column="39">sk_OPENSSL_PSTRING_value<pos:position pos:line="415" pos:column="63"/></name><argument_list pos:line="415" pos:column="63">(<argument><expr><call><name><name pos:line="415" pos:column="64">db<pos:position pos:line="415" pos:column="66"/></name><operator pos:line="415" pos:column="66">.<pos:position pos:line="415" pos:column="67"/></operator><name pos:line="415" pos:column="67">get<pos:position pos:line="415" pos:column="70"/></name></name><argument_list pos:line="415" pos:column="70">()<pos:position pos:line="415" pos:column="72"/></argument_list></call><operator pos:line="415" pos:column="72">-&gt;<pos:position pos:line="415" pos:column="77"/></operator><name pos:line="415" pos:column="74">data<pos:position pos:line="415" pos:column="78"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="415" pos:column="80">0<pos:position pos:line="415" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="415" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="415" pos:column="83"/></decl_stmt>
<cpp:endif pos:line="416" pos:column="1">#<cpp:directive pos:line="416" pos:column="2">endif<pos:position pos:line="416" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">else<pos:position pos:line="417" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><specifier pos:line="418" pos:column="5">const<pos:position pos:line="418" pos:column="10"/></specifier> <name pos:line="418" pos:column="11">char<pos:position pos:line="418" pos:column="15"/></name> <modifier pos:line="418" pos:column="16">*<pos:position pos:line="418" pos:column="17"/></modifier><modifier pos:line="418" pos:column="17">*<pos:position pos:line="418" pos:column="18"/></modifier></type><name pos:line="418" pos:column="18">row<pos:position pos:line="418" pos:column="21"/></name> <init pos:line="418" pos:column="22">= <expr><operator pos:line="418" pos:column="24">(<pos:position pos:line="418" pos:column="25"/></operator><specifier pos:line="418" pos:column="25">const<pos:position pos:line="418" pos:column="30"/></specifier> <name pos:line="418" pos:column="31">char<pos:position pos:line="418" pos:column="35"/></name> <operator pos:line="418" pos:column="36">*<pos:position pos:line="418" pos:column="37"/></operator><operator pos:line="418" pos:column="37">*<pos:position pos:line="418" pos:column="38"/></operator><operator pos:line="418" pos:column="38">)<pos:position pos:line="418" pos:column="39"/></operator><call><name pos:line="418" pos:column="39">sk_value<pos:position pos:line="418" pos:column="47"/></name><argument_list pos:line="418" pos:column="47">(<argument><expr><call><name><name pos:line="418" pos:column="48">db<pos:position pos:line="418" pos:column="50"/></name><operator pos:line="418" pos:column="50">.<pos:position pos:line="418" pos:column="51"/></operator><name pos:line="418" pos:column="51">get<pos:position pos:line="418" pos:column="54"/></name></name><argument_list pos:line="418" pos:column="54">()<pos:position pos:line="418" pos:column="56"/></argument_list></call><operator pos:line="418" pos:column="56">-&gt;<pos:position pos:line="418" pos:column="61"/></operator><name pos:line="418" pos:column="58">data<pos:position pos:line="418" pos:column="62"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="418" pos:column="64">0<pos:position pos:line="418" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="418" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="418" pos:column="67"/></decl_stmt>
<cpp:endif pos:line="419" pos:column="1">#<cpp:directive pos:line="419" pos:column="2">endif<pos:position pos:line="419" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="421" pos:column="5">deleteRow<pos:position pos:line="421" pos:column="14"/></name><argument_list pos:line="421" pos:column="14">(<argument><expr><name pos:line="421" pos:column="15">row<pos:position pos:line="421" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="421" pos:column="20">0<pos:position pos:line="421" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="421" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="23"/></expr_stmt>

    <return pos:line="423" pos:column="5">return <expr><literal type="boolean" pos:line="423" pos:column="12">true<pos:position pos:line="423" pos:column="16"/></literal></expr>;<pos:position pos:line="423" pos:column="17"/></return>
}<pos:position pos:line="424" pos:column="2"/></block></function>

<function><type><name pos:line="426" pos:column="1">bool<pos:position pos:line="426" pos:column="5"/></name></type> <name><name pos:line="426" pos:column="6">Ssl<pos:position pos:line="426" pos:column="9"/></name><operator pos:line="426" pos:column="9">::<pos:position pos:line="426" pos:column="11"/></operator><name pos:line="426" pos:column="11">CertificateDb<pos:position pos:line="426" pos:column="24"/></name><operator pos:line="426" pos:column="24">::<pos:position pos:line="426" pos:column="26"/></operator><name pos:line="426" pos:column="26">deleteByHostname<pos:position pos:line="426" pos:column="42"/></name></name><parameter_list pos:line="426" pos:column="42">(<parameter><decl><type><name><name pos:line="426" pos:column="43">std<pos:position pos:line="426" pos:column="46"/></name><operator pos:line="426" pos:column="46">::<pos:position pos:line="426" pos:column="48"/></operator><name pos:line="426" pos:column="48">string<pos:position pos:line="426" pos:column="54"/></name></name> <specifier pos:line="426" pos:column="55">const<pos:position pos:line="426" pos:column="60"/></specifier> <modifier pos:line="426" pos:column="61">&amp;<pos:position pos:line="426" pos:column="66"/></modifier></type> <name pos:line="426" pos:column="63">host<pos:position pos:line="426" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="426" pos:column="68"/></parameter_list> <block pos:line="426" pos:column="69">{
    <if pos:line="427" pos:column="5">if <condition pos:line="427" pos:column="8">(<expr><operator pos:line="427" pos:column="9">!<pos:position pos:line="427" pos:column="10"/></operator><name pos:line="427" pos:column="10">db<pos:position pos:line="427" pos:column="12"/></name></expr>)<pos:position pos:line="427" pos:column="13"/></condition><then pos:line="427" pos:column="13">
        <block type="pseudo"><return pos:line="428" pos:column="9">return <expr><literal type="boolean" pos:line="428" pos:column="16">false<pos:position pos:line="428" pos:column="21"/></literal></expr>;<pos:position pos:line="428" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="430" pos:column="1">#<cpp:directive pos:line="430" pos:column="2">if<pos:position pos:line="430" pos:column="4"/></cpp:directive> <expr><name pos:line="430" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="430" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="431" pos:column="5">for <control pos:line="431" pos:column="9">(<init><decl><type><name pos:line="431" pos:column="10">int<pos:position pos:line="431" pos:column="13"/></name></type> <name pos:line="431" pos:column="14">i<pos:position pos:line="431" pos:column="15"/></name> <init pos:line="431" pos:column="16">= <expr><literal type="number" pos:line="431" pos:column="18">0<pos:position pos:line="431" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="431" pos:column="20"/></init> <condition><expr><name pos:line="431" pos:column="21">i<pos:position pos:line="431" pos:column="22"/></name> <operator pos:line="431" pos:column="23">&lt;<pos:position pos:line="431" pos:column="27"/></operator> <call><name pos:line="431" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="431" pos:column="47"/></name><argument_list pos:line="431" pos:column="47">(<argument><expr><call><name><name pos:line="431" pos:column="48">db<pos:position pos:line="431" pos:column="50"/></name><operator pos:line="431" pos:column="50">.<pos:position pos:line="431" pos:column="51"/></operator><name pos:line="431" pos:column="51">get<pos:position pos:line="431" pos:column="54"/></name></name><argument_list pos:line="431" pos:column="54">()<pos:position pos:line="431" pos:column="56"/></argument_list></call><operator pos:line="431" pos:column="56">-&gt;<pos:position pos:line="431" pos:column="61"/></operator><name pos:line="431" pos:column="58">data<pos:position pos:line="431" pos:column="62"/></name></expr></argument>)<pos:position pos:line="431" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="64"/></condition> <incr><expr><operator pos:line="431" pos:column="65">++<pos:position pos:line="431" pos:column="67"/></operator><name pos:line="431" pos:column="67">i<pos:position pos:line="431" pos:column="68"/></name></expr></incr>)<pos:position pos:line="431" pos:column="69"/></control> <block pos:line="431" pos:column="70">{
<cpp:if pos:line="432" pos:column="1">#<cpp:directive pos:line="432" pos:column="2">if<pos:position pos:line="432" pos:column="4"/></cpp:directive> <expr><name pos:line="432" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="432" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="433" pos:column="9">const<pos:position pos:line="433" pos:column="14"/></specifier> <name pos:line="433" pos:column="15">char<pos:position pos:line="433" pos:column="19"/></name> <modifier pos:line="433" pos:column="20">*<pos:position pos:line="433" pos:column="21"/></modifier><modifier pos:line="433" pos:column="21">*<pos:position pos:line="433" pos:column="22"/></modifier></type> <name pos:line="433" pos:column="23">current_row<pos:position pos:line="433" pos:column="34"/></name> <init pos:line="433" pos:column="35">= <expr><operator pos:line="433" pos:column="37">(<pos:position pos:line="433" pos:column="38"/></operator><operator pos:line="433" pos:column="38">(<pos:position pos:line="433" pos:column="39"/></operator><specifier pos:line="433" pos:column="39">const<pos:position pos:line="433" pos:column="44"/></specifier> <name pos:line="433" pos:column="45">char<pos:position pos:line="433" pos:column="49"/></name> <operator pos:line="433" pos:column="50">*<pos:position pos:line="433" pos:column="51"/></operator><operator pos:line="433" pos:column="51">*<pos:position pos:line="433" pos:column="52"/></operator><operator pos:line="433" pos:column="52">)<pos:position pos:line="433" pos:column="53"/></operator><call><name pos:line="433" pos:column="53">sk_value<pos:position pos:line="433" pos:column="61"/></name><argument_list pos:line="433" pos:column="61">(<argument><expr><call><name pos:line="433" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="433" pos:column="78"/></name><argument_list pos:line="433" pos:column="78">(<argument><expr><name pos:line="433" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="433" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="433" pos:column="96">db<pos:position pos:line="433" pos:column="98"/></name><operator pos:line="433" pos:column="98">.<pos:position pos:line="433" pos:column="99"/></operator><name pos:line="433" pos:column="99">get<pos:position pos:line="433" pos:column="102"/></name></name><argument_list pos:line="433" pos:column="102">()<pos:position pos:line="433" pos:column="104"/></argument_list></call><operator pos:line="433" pos:column="104">-&gt;<pos:position pos:line="433" pos:column="109"/></operator><name pos:line="433" pos:column="106">data<pos:position pos:line="433" pos:column="110"/></name></expr></argument>)<pos:position pos:line="433" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="433" pos:column="113">i<pos:position pos:line="433" pos:column="114"/></name></expr></argument>)<pos:position pos:line="433" pos:column="115"/></argument_list></call><operator pos:line="433" pos:column="115">)<pos:position pos:line="433" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="433" pos:column="117"/></decl_stmt>
<cpp:else pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">else<pos:position pos:line="434" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="435" pos:column="9">const<pos:position pos:line="435" pos:column="14"/></specifier> <name pos:line="435" pos:column="15">char<pos:position pos:line="435" pos:column="19"/></name> <modifier pos:line="435" pos:column="20">*<pos:position pos:line="435" pos:column="21"/></modifier><modifier pos:line="435" pos:column="21">*<pos:position pos:line="435" pos:column="22"/></modifier></type> <name pos:line="435" pos:column="23">current_row<pos:position pos:line="435" pos:column="34"/></name> <init pos:line="435" pos:column="35">= <expr><operator pos:line="435" pos:column="37">(<pos:position pos:line="435" pos:column="38"/></operator><operator pos:line="435" pos:column="38">(<pos:position pos:line="435" pos:column="39"/></operator><specifier pos:line="435" pos:column="39">const<pos:position pos:line="435" pos:column="44"/></specifier> <name pos:line="435" pos:column="45">char<pos:position pos:line="435" pos:column="49"/></name> <operator pos:line="435" pos:column="50">*<pos:position pos:line="435" pos:column="51"/></operator><operator pos:line="435" pos:column="51">*<pos:position pos:line="435" pos:column="52"/></operator><operator pos:line="435" pos:column="52">)<pos:position pos:line="435" pos:column="53"/></operator><call><name pos:line="435" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="435" pos:column="77"/></name><argument_list pos:line="435" pos:column="77">(<argument><expr><call><name><name pos:line="435" pos:column="78">db<pos:position pos:line="435" pos:column="80"/></name><operator pos:line="435" pos:column="80">.<pos:position pos:line="435" pos:column="81"/></operator><name pos:line="435" pos:column="81">get<pos:position pos:line="435" pos:column="84"/></name></name><argument_list pos:line="435" pos:column="84">()<pos:position pos:line="435" pos:column="86"/></argument_list></call><operator pos:line="435" pos:column="86">-&gt;<pos:position pos:line="435" pos:column="91"/></operator><name pos:line="435" pos:column="88">data<pos:position pos:line="435" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="435" pos:column="94">i<pos:position pos:line="435" pos:column="95"/></name></expr></argument>)<pos:position pos:line="435" pos:column="96"/></argument_list></call><operator pos:line="435" pos:column="96">)<pos:position pos:line="435" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="435" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="436" pos:column="1">#<cpp:directive pos:line="436" pos:column="2">endif<pos:position pos:line="436" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="437" pos:column="1">#<cpp:directive pos:line="437" pos:column="2">else<pos:position pos:line="437" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="438" pos:column="5">for <control pos:line="438" pos:column="9">(<init><decl><type><name pos:line="438" pos:column="10">int<pos:position pos:line="438" pos:column="13"/></name></type> <name pos:line="438" pos:column="14">i<pos:position pos:line="438" pos:column="15"/></name> <init pos:line="438" pos:column="16">= <expr><literal type="number" pos:line="438" pos:column="18">0<pos:position pos:line="438" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="438" pos:column="20"/></init> <condition><expr><name pos:line="438" pos:column="21">i<pos:position pos:line="438" pos:column="22"/></name> <operator pos:line="438" pos:column="23">&lt;<pos:position pos:line="438" pos:column="27"/></operator> <call><name pos:line="438" pos:column="25">sk_num<pos:position pos:line="438" pos:column="31"/></name><argument_list pos:line="438" pos:column="31">(<argument><expr><call><name><name pos:line="438" pos:column="32">db<pos:position pos:line="438" pos:column="34"/></name><operator pos:line="438" pos:column="34">.<pos:position pos:line="438" pos:column="35"/></operator><name pos:line="438" pos:column="35">get<pos:position pos:line="438" pos:column="38"/></name></name><argument_list pos:line="438" pos:column="38">()<pos:position pos:line="438" pos:column="40"/></argument_list></call><operator pos:line="438" pos:column="40">-&gt;<pos:position pos:line="438" pos:column="45"/></operator><name pos:line="438" pos:column="42">data<pos:position pos:line="438" pos:column="46"/></name></expr></argument>)<pos:position pos:line="438" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="48"/></condition> <incr><expr><operator pos:line="438" pos:column="49">++<pos:position pos:line="438" pos:column="51"/></operator><name pos:line="438" pos:column="51">i<pos:position pos:line="438" pos:column="52"/></name></expr></incr>)<pos:position pos:line="438" pos:column="53"/></control> <block pos:line="438" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="439" pos:column="9">const<pos:position pos:line="439" pos:column="14"/></specifier> <name pos:line="439" pos:column="15">char<pos:position pos:line="439" pos:column="19"/></name> <modifier pos:line="439" pos:column="20">*<pos:position pos:line="439" pos:column="21"/></modifier><modifier pos:line="439" pos:column="21">*<pos:position pos:line="439" pos:column="22"/></modifier></type> <name pos:line="439" pos:column="23">current_row<pos:position pos:line="439" pos:column="34"/></name> <init pos:line="439" pos:column="35">= <expr><operator pos:line="439" pos:column="37">(<pos:position pos:line="439" pos:column="38"/></operator><operator pos:line="439" pos:column="38">(<pos:position pos:line="439" pos:column="39"/></operator><specifier pos:line="439" pos:column="39">const<pos:position pos:line="439" pos:column="44"/></specifier> <name pos:line="439" pos:column="45">char<pos:position pos:line="439" pos:column="49"/></name> <operator pos:line="439" pos:column="50">*<pos:position pos:line="439" pos:column="51"/></operator><operator pos:line="439" pos:column="51">*<pos:position pos:line="439" pos:column="52"/></operator><operator pos:line="439" pos:column="52">)<pos:position pos:line="439" pos:column="53"/></operator><call><name pos:line="439" pos:column="53">sk_value<pos:position pos:line="439" pos:column="61"/></name><argument_list pos:line="439" pos:column="61">(<argument><expr><call><name><name pos:line="439" pos:column="62">db<pos:position pos:line="439" pos:column="64"/></name><operator pos:line="439" pos:column="64">.<pos:position pos:line="439" pos:column="65"/></operator><name pos:line="439" pos:column="65">get<pos:position pos:line="439" pos:column="68"/></name></name><argument_list pos:line="439" pos:column="68">()<pos:position pos:line="439" pos:column="70"/></argument_list></call><operator pos:line="439" pos:column="70">-&gt;<pos:position pos:line="439" pos:column="75"/></operator><name pos:line="439" pos:column="72">data<pos:position pos:line="439" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="439" pos:column="78">i<pos:position pos:line="439" pos:column="79"/></name></expr></argument>)<pos:position pos:line="439" pos:column="80"/></argument_list></call><operator pos:line="439" pos:column="80">)<pos:position pos:line="439" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="439" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">endif<pos:position pos:line="440" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="441" pos:column="9">if <condition pos:line="441" pos:column="12">(<expr><name pos:line="441" pos:column="13">host<pos:position pos:line="441" pos:column="17"/></name> <operator pos:line="441" pos:column="18">==<pos:position pos:line="441" pos:column="20"/></operator> <name><name pos:line="441" pos:column="21">current_row<pos:position pos:line="441" pos:column="32"/></name><index pos:line="441" pos:column="32">[<expr><name pos:line="441" pos:column="33">cnlName<pos:position pos:line="441" pos:column="40"/></name></expr>]<pos:position pos:line="441" pos:column="41"/></index></name></expr>)<pos:position pos:line="441" pos:column="42"/></condition><then pos:line="441" pos:column="42"> <block pos:line="441" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="442" pos:column="13">deleteRow<pos:position pos:line="442" pos:column="22"/></name><argument_list pos:line="442" pos:column="22">(<argument><expr><name pos:line="442" pos:column="23">current_row<pos:position pos:line="442" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="36">i<pos:position pos:line="442" pos:column="37"/></name></expr></argument>)<pos:position pos:line="442" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="442" pos:column="39"/></expr_stmt>
            <return pos:line="443" pos:column="13">return <expr><literal type="boolean" pos:line="443" pos:column="20">true<pos:position pos:line="443" pos:column="24"/></literal></expr>;<pos:position pos:line="443" pos:column="25"/></return>
        }<pos:position pos:line="444" pos:column="10"/></block></then></if>
    }<pos:position pos:line="445" pos:column="6"/></block></for>
    <return pos:line="446" pos:column="5">return <expr><literal type="boolean" pos:line="446" pos:column="12">false<pos:position pos:line="446" pos:column="17"/></literal></expr>;<pos:position pos:line="446" pos:column="18"/></return>
}<pos:position pos:line="447" pos:column="2"/></block></for>

<function><type><name pos:line="449" pos:column="1">bool<pos:position pos:line="449" pos:column="5"/></name></type> <name><name pos:line="449" pos:column="6">Ssl<pos:position pos:line="449" pos:column="9"/></name><operator pos:line="449" pos:column="9">::<pos:position pos:line="449" pos:column="11"/></operator><name pos:line="449" pos:column="11">CertificateDb<pos:position pos:line="449" pos:column="24"/></name><operator pos:line="449" pos:column="24">::<pos:position pos:line="449" pos:column="26"/></operator><name pos:line="449" pos:column="26">hasRows<pos:position pos:line="449" pos:column="33"/></name></name><parameter_list pos:line="449" pos:column="33">()<pos:position pos:line="449" pos:column="35"/></parameter_list> <specifier pos:line="449" pos:column="36">const<pos:position pos:line="449" pos:column="41"/></specifier>
<block pos:line="450" pos:column="1">{
    <if pos:line="451" pos:column="5">if <condition pos:line="451" pos:column="8">(<expr><operator pos:line="451" pos:column="9">!<pos:position pos:line="451" pos:column="10"/></operator><name pos:line="451" pos:column="10">db<pos:position pos:line="451" pos:column="12"/></name></expr>)<pos:position pos:line="451" pos:column="13"/></condition><then pos:line="451" pos:column="13">
        <block type="pseudo"><return pos:line="452" pos:column="9">return <expr><literal type="boolean" pos:line="452" pos:column="16">false<pos:position pos:line="452" pos:column="21"/></literal></expr>;<pos:position pos:line="452" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="454" pos:column="1">#<cpp:directive pos:line="454" pos:column="2">if<pos:position pos:line="454" pos:column="4"/></cpp:directive> <expr><name pos:line="454" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="454" pos:column="31"/></name></expr></cpp:if>
    <if pos:line="455" pos:column="5">if <condition pos:line="455" pos:column="8">(<expr><call><name pos:line="455" pos:column="9">sk_OPENSSL_PSTRING_num<pos:position pos:line="455" pos:column="31"/></name><argument_list pos:line="455" pos:column="31">(<argument><expr><call><name><name pos:line="455" pos:column="32">db<pos:position pos:line="455" pos:column="34"/></name><operator pos:line="455" pos:column="34">.<pos:position pos:line="455" pos:column="35"/></operator><name pos:line="455" pos:column="35">get<pos:position pos:line="455" pos:column="38"/></name></name><argument_list pos:line="455" pos:column="38">()<pos:position pos:line="455" pos:column="40"/></argument_list></call><operator pos:line="455" pos:column="40">-&gt;<pos:position pos:line="455" pos:column="45"/></operator><name pos:line="455" pos:column="42">data<pos:position pos:line="455" pos:column="46"/></name></expr></argument>)<pos:position pos:line="455" pos:column="47"/></argument_list></call> <operator pos:line="455" pos:column="48">==<pos:position pos:line="455" pos:column="50"/></operator> <literal type="number" pos:line="455" pos:column="51">0<pos:position pos:line="455" pos:column="52"/></literal></expr>)<pos:position pos:line="455" pos:column="53"/></condition><then pos:line="455" pos:column="53">
<cpp:else pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">else<pos:position pos:line="456" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="457" pos:column="5">if <condition pos:line="457" pos:column="8">(<expr><call><name pos:line="457" pos:column="9">sk_num<pos:position pos:line="457" pos:column="15"/></name><argument_list pos:line="457" pos:column="15">(<argument><expr><call><name><name pos:line="457" pos:column="16">db<pos:position pos:line="457" pos:column="18"/></name><operator pos:line="457" pos:column="18">.<pos:position pos:line="457" pos:column="19"/></operator><name pos:line="457" pos:column="19">get<pos:position pos:line="457" pos:column="22"/></name></name><argument_list pos:line="457" pos:column="22">()<pos:position pos:line="457" pos:column="24"/></argument_list></call><operator pos:line="457" pos:column="24">-&gt;<pos:position pos:line="457" pos:column="29"/></operator><name pos:line="457" pos:column="26">data<pos:position pos:line="457" pos:column="30"/></name></expr></argument>)<pos:position pos:line="457" pos:column="31"/></argument_list></call> <operator pos:line="457" pos:column="32">==<pos:position pos:line="457" pos:column="34"/></operator> <literal type="number" pos:line="457" pos:column="35">0<pos:position pos:line="457" pos:column="36"/></literal></expr>)<pos:position pos:line="457" pos:column="37"/></condition><then pos:line="457" pos:column="37">
<cpp:endif pos:line="458" pos:column="1">#<cpp:directive pos:line="458" pos:column="2">endif<pos:position pos:line="458" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><return pos:line="459" pos:column="9">return <expr><literal type="boolean" pos:line="459" pos:column="16">false<pos:position pos:line="459" pos:column="21"/></literal></expr>;<pos:position pos:line="459" pos:column="22"/></return></block></then></if></block></then></if>
    <return pos:line="460" pos:column="5">return <expr><literal type="boolean" pos:line="460" pos:column="12">true<pos:position pos:line="460" pos:column="16"/></literal></expr>;<pos:position pos:line="460" pos:column="17"/></return>
}<pos:position pos:line="461" pos:column="2"/></block></function>

<function><type><name pos:line="463" pos:column="1">bool<pos:position pos:line="463" pos:column="5"/></name></type> <name><name pos:line="463" pos:column="6">Ssl<pos:position pos:line="463" pos:column="9"/></name><operator pos:line="463" pos:column="9">::<pos:position pos:line="463" pos:column="11"/></operator><name pos:line="463" pos:column="11">CertificateDb<pos:position pos:line="463" pos:column="24"/></name><operator pos:line="463" pos:column="24">::<pos:position pos:line="463" pos:column="26"/></operator><name pos:line="463" pos:column="26">IsEnabledDiskStore<pos:position pos:line="463" pos:column="44"/></name></name><parameter_list pos:line="463" pos:column="44">()<pos:position pos:line="463" pos:column="46"/></parameter_list> <specifier pos:line="463" pos:column="47">const<pos:position pos:line="463" pos:column="52"/></specifier> <block pos:line="463" pos:column="53">{
    <return pos:line="464" pos:column="5">return <expr><name pos:line="464" pos:column="12">enabled_disk_store<pos:position pos:line="464" pos:column="30"/></name></expr>;<pos:position pos:line="464" pos:column="31"/></return>
}<pos:position pos:line="465" pos:column="2"/></block></function></block></function></block></function></block></function></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5372_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">logfile_mod_tcp_open<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">Logfile<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">lf<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">path<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">size_t<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">bufsz<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">int<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">fatal_flag<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">5<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"Tcp Open called"<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Ip<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">::<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">Address<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">addr<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">strAddr<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">lf<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">f_close<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">logfile_mod_tcp_close<pos:position pos:line="9" pos:column="40"/></name></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">lf<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">f_linewrite<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">logfile_mod_tcp_writeline<pos:position pos:line="10" pos:column="48"/></name></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">lf<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">f_linestart<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">logfile_mod_tcp_linestart<pos:position pos:line="11" pos:column="48"/></name></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">lf<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">f_lineend<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">logfile_mod_tcp_lineend<pos:position pos:line="12" pos:column="44"/></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">lf<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">f_flush<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">logfile_mod_tcp_flush<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">lf<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">f_rotate<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">logfile_mod_tcp_rotate<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">l_tcp_t<pos:position pos:line="16" pos:column="12"/></name> <modifier pos:line="16" pos:column="13">*<pos:position pos:line="16" pos:column="14"/></modifier></type><name pos:line="16" pos:column="14">ll<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><cast type="static" pos:line="16" pos:column="19">static_cast<argument_list type="generic" pos:line="16" pos:column="30">&lt;<argument><expr><name pos:line="16" pos:column="31">l_tcp_t<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="43"/></argument_list><argument_list pos:line="16" pos:column="40">(<argument><expr><call><name pos:line="16" pos:column="41">xcalloc<pos:position pos:line="16" pos:column="48"/></name><argument_list pos:line="16" pos:column="48">(<argument><expr><literal type="number" pos:line="16" pos:column="49">1<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="52">sizeof<argument_list pos:line="16" pos:column="58">(<argument><expr><operator pos:line="16" pos:column="59">*<pos:position pos:line="16" pos:column="60"/></operator><name pos:line="16" pos:column="60">ll<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="16" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">lf<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">data<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">ll<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strncmp<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">path<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"//"<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="29">2<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">path<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">+=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">2<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="22" pos:column="5">strAddr<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">xstrdup<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">path<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">GetHostWithPort<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">strAddr<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="35">&amp;<pos:position pos:line="24" pos:column="40"/></operator><name pos:line="24" pos:column="36">addr<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="42"/></condition><then pos:line="24" pos:column="42"> <block pos:line="24" pos:column="43">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">lf<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">flags<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">fatal<pos:position pos:line="25" pos:column="28"/></name></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29"> <block pos:line="25" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">fatalf<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="string" pos:line="26" pos:column="20">"Invalid TCP logging address '%s'\n"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="58">lf<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">-&gt;<pos:position pos:line="26" pos:column="65"/></operator><name pos:line="26" pos:column="62">path<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">debugs<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="number" pos:line="28" pos:column="20">50<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="24">DBG_IMPORTANT<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"Invalid TCP logging address '"<pos:position pos:line="28" pos:column="70"/></literal> <operator pos:line="28" pos:column="71">&lt;&lt;<pos:position pos:line="28" pos:column="79"/></operator> <name><name pos:line="28" pos:column="74">lf<pos:position pos:line="28" pos:column="76"/></name><operator pos:line="28" pos:column="76">-&gt;<pos:position pos:line="28" pos:column="81"/></operator><name pos:line="28" pos:column="78">path<pos:position pos:line="28" pos:column="82"/></name></name> <operator pos:line="28" pos:column="83">&lt;&lt;<pos:position pos:line="28" pos:column="91"/></operator> <literal type="string" pos:line="28" pos:column="86">"'"<pos:position pos:line="28" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">safe_free<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">strAddr<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
            <return pos:line="30" pos:column="13">return <expr><name pos:line="30" pos:column="20">FALSE<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></return>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">safe_free<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">strAddr<pos:position pos:line="34" pos:column="22"/></name></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="36" pos:column="5">Ip<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">::<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="9">Address<pos:position pos:line="36" pos:column="16"/></name></name></type> <name pos:line="36" pos:column="17">any_addr<pos:position pos:line="36" pos:column="25"/></name></decl>;<pos:position pos:line="36" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">any_addr<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">.<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">SetAnyAddr<pos:position pos:line="37" pos:column="24"/></name></name><argument_list pos:line="37" pos:column="24">()<pos:position pos:line="37" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="27"/></expr_stmt>

    <comment type="line" pos:line="39" pos:column="5">// require the sending TCP port to be of the right family for the destination address.</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name><name pos:line="40" pos:column="9">addr<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">.<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">IsIPv4<pos:position pos:line="40" pos:column="20"/></name></name><argument_list pos:line="40" pos:column="20">()<pos:position pos:line="40" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="41" pos:column="9">any_addr<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">.<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="18">SetIPv4<pos:position pos:line="41" pos:column="25"/></name></name><argument_list pos:line="41" pos:column="25">()<pos:position pos:line="41" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">ll<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">fd<pos:position pos:line="43" pos:column="11"/></name></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <call><name pos:line="43" pos:column="14">comm_open<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">SOCK_STREAM<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">IPPROTO_TCP<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">any_addr<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">COMM_NONBLOCKING<pos:position pos:line="43" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="78">"TCP log socket"<pos:position pos:line="43" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="96"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name><name pos:line="44" pos:column="9">ll<pos:position pos:line="44" pos:column="11"/></name><operator pos:line="44" pos:column="11">-&gt;<pos:position pos:line="44" pos:column="16"/></operator><name pos:line="44" pos:column="13">fd<pos:position pos:line="44" pos:column="15"/></name></name> <operator pos:line="44" pos:column="16">&lt;<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">lf<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">flags<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">.<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">fatal<pos:position pos:line="45" pos:column="28"/></name></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29"> <block pos:line="45" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">fatalf<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><literal type="string" pos:line="46" pos:column="20">"Unable to open TCP socket for logging\n"<pos:position pos:line="46" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then> <else pos:line="47" pos:column="11">else <block pos:line="47" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">debugs<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="number" pos:line="48" pos:column="20">50<pos:position pos:line="48" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="24">DBG_IMPORTANT<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="39">"Unable to open TCP socket for logging"<pos:position pos:line="48" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="80"/></expr_stmt>
            <return pos:line="49" pos:column="13">return <expr><name pos:line="49" pos:column="20">FALSE<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></return>
        }<pos:position pos:line="50" pos:column="10"/></block></else></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then> <elseif pos:line="51" pos:column="7">else <if pos:line="51" pos:column="12">if <condition pos:line="51" pos:column="15">(<expr><operator pos:line="51" pos:column="16">!<pos:position pos:line="51" pos:column="17"/></operator><call><name pos:line="51" pos:column="17">comm_connect_addr<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name><name pos:line="51" pos:column="35">ll<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">-&gt;<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="39">fd<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="43">&amp;<pos:position pos:line="51" pos:column="48"/></operator><name pos:line="51" pos:column="44">addr<pos:position pos:line="51" pos:column="48"/></name></expr></argument>)<pos:position pos:line="51" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="50"/></condition><then pos:line="51" pos:column="50"> <block pos:line="51" pos:column="51">{
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name><name pos:line="52" pos:column="13">lf<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">flags<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">.<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="23">fatal<pos:position pos:line="52" pos:column="28"/></name></name></expr>)<pos:position pos:line="52" pos:column="29"/></condition><then pos:line="52" pos:column="29"> <block pos:line="52" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">fatalf<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="string" pos:line="53" pos:column="20">"Unable to connect to %s for TCP log: %s\n"<pos:position pos:line="53" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="65">lf<pos:position pos:line="53" pos:column="67"/></name><operator pos:line="53" pos:column="67">-&gt;<pos:position pos:line="53" pos:column="72"/></operator><name pos:line="53" pos:column="69">path<pos:position pos:line="53" pos:column="73"/></name></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="75">xstrerror<pos:position pos:line="53" pos:column="84"/></name><argument_list pos:line="53" pos:column="84">()<pos:position pos:line="53" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="88"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then> <else pos:line="54" pos:column="11">else <block pos:line="54" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">debugs<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><literal type="number" pos:line="55" pos:column="20">50<pos:position pos:line="55" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">DBG_IMPORTANT<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"Unable to connect to "<pos:position pos:line="55" pos:column="62"/></literal> <operator pos:line="55" pos:column="63">&lt;&lt;<pos:position pos:line="55" pos:column="71"/></operator> <name><name pos:line="55" pos:column="66">lf<pos:position pos:line="55" pos:column="68"/></name><operator pos:line="55" pos:column="68">-&gt;<pos:position pos:line="55" pos:column="73"/></operator><name pos:line="55" pos:column="70">path<pos:position pos:line="55" pos:column="74"/></name></name> <operator pos:line="55" pos:column="75">&lt;&lt;<pos:position pos:line="55" pos:column="83"/></operator> <literal type="string" pos:line="55" pos:column="78">" for TCP log: "<pos:position pos:line="55" pos:column="94"/></literal> <operator pos:line="55" pos:column="95">&lt;&lt;<pos:position pos:line="55" pos:column="103"/></operator> <call><name pos:line="55" pos:column="98">xstrerror<pos:position pos:line="55" pos:column="107"/></name><argument_list pos:line="55" pos:column="107">()<pos:position pos:line="55" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="111"/></expr_stmt>
            <return pos:line="56" pos:column="13">return <expr><name pos:line="56" pos:column="20">FALSE<pos:position pos:line="56" pos:column="25"/></name></expr>;<pos:position pos:line="56" pos:column="26"/></return>
        }<pos:position pos:line="57" pos:column="10"/></block></else></if>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif></if>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">ll<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">fd<pos:position pos:line="59" pos:column="15"/></name></name> <operator pos:line="59" pos:column="16">==<pos:position pos:line="59" pos:column="18"/></operator> <operator pos:line="59" pos:column="19">-<pos:position pos:line="59" pos:column="20"/></operator><literal type="number" pos:line="59" pos:column="20">1<pos:position pos:line="59" pos:column="21"/></literal></expr>)<pos:position pos:line="59" pos:column="22"/></condition><then pos:line="59" pos:column="22"> <block pos:line="59" pos:column="23">{
        <if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">ENOENT<pos:position pos:line="60" pos:column="19"/></name> <operator pos:line="60" pos:column="20">==<pos:position pos:line="60" pos:column="22"/></operator> <name pos:line="60" pos:column="23">errno<pos:position pos:line="60" pos:column="28"/></name> <operator pos:line="60" pos:column="29">&amp;&amp;<pos:position pos:line="60" pos:column="39"/></operator> <name pos:line="60" pos:column="32">fatal_flag<pos:position pos:line="60" pos:column="42"/></name></expr>)<pos:position pos:line="60" pos:column="43"/></condition><then pos:line="60" pos:column="43"> <block pos:line="60" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">fatalf<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="string" pos:line="61" pos:column="20">"Cannot open '%s' because\n"<pos:position pos:line="61" pos:column="48"/></literal>
                   <literal type="string" pos:line="62" pos:column="20">"\tthe parent directory does not exist.\n"<pos:position pos:line="62" pos:column="62"/></literal>
                   <literal type="string" pos:line="63" pos:column="20">"\tPlease create the directory.\n"<pos:position pos:line="63" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="56">path<pos:position pos:line="63" pos:column="60"/></name></expr></argument>)<pos:position pos:line="63" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="62"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></then> <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if <condition pos:line="64" pos:column="19">(<expr><name pos:line="64" pos:column="20">EACCES<pos:position pos:line="64" pos:column="26"/></name> <operator pos:line="64" pos:column="27">==<pos:position pos:line="64" pos:column="29"/></operator> <name pos:line="64" pos:column="30">errno<pos:position pos:line="64" pos:column="35"/></name> <operator pos:line="64" pos:column="36">&amp;&amp;<pos:position pos:line="64" pos:column="46"/></operator> <name pos:line="64" pos:column="39">fatal_flag<pos:position pos:line="64" pos:column="49"/></name></expr>)<pos:position pos:line="64" pos:column="50"/></condition><then pos:line="64" pos:column="50"> <block pos:line="64" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">fatalf<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><literal type="string" pos:line="65" pos:column="20">"Cannot open '%s' for writing.\n"<pos:position pos:line="65" pos:column="53"/></literal>
                   <literal type="string" pos:line="66" pos:column="20">"\tThe parent directory must be writeable by the\n"<pos:position pos:line="66" pos:column="71"/></literal>
                   <literal type="string" pos:line="67" pos:column="20">"\tuser '%s', which is the cache_effective_user\n"<pos:position pos:line="67" pos:column="70"/></literal>
                   <literal type="string" pos:line="68" pos:column="20">"\tset in squid.conf."<pos:position pos:line="68" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="44">path<pos:position pos:line="68" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="50">Config<pos:position pos:line="68" pos:column="56"/></name><operator pos:line="68" pos:column="56">.<pos:position pos:line="68" pos:column="57"/></operator><name pos:line="68" pos:column="57">effectiveUser<pos:position pos:line="68" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if></elseif> <else pos:line="69" pos:column="11">else <block pos:line="69" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">debugs<pos:position pos:line="70" pos:column="19"/></name><argument_list pos:line="70" pos:column="19">(<argument><expr><literal type="number" pos:line="70" pos:column="20">50<pos:position pos:line="70" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="24">DBG_IMPORTANT<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="39">"logfileOpen (TCP): "<pos:position pos:line="70" pos:column="60"/></literal> <operator pos:line="70" pos:column="61">&lt;&lt;<pos:position pos:line="70" pos:column="69"/></operator> <name><name pos:line="70" pos:column="64">lf<pos:position pos:line="70" pos:column="66"/></name><operator pos:line="70" pos:column="66">-&gt;<pos:position pos:line="70" pos:column="71"/></operator><name pos:line="70" pos:column="68">path<pos:position pos:line="70" pos:column="72"/></name></name> <operator pos:line="70" pos:column="73">&lt;&lt;<pos:position pos:line="70" pos:column="81"/></operator> <literal type="string" pos:line="70" pos:column="76">": "<pos:position pos:line="70" pos:column="80"/></literal> <operator pos:line="70" pos:column="81">&lt;&lt;<pos:position pos:line="70" pos:column="89"/></operator> <call><name pos:line="70" pos:column="84">xstrerror<pos:position pos:line="70" pos:column="93"/></name><argument_list pos:line="70" pos:column="93">()<pos:position pos:line="70" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="97"/></expr_stmt>
            <return pos:line="71" pos:column="13">return <expr><literal type="number" pos:line="71" pos:column="20">0<pos:position pos:line="71" pos:column="21"/></literal></expr>;<pos:position pos:line="71" pos:column="22"/></return>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="75" pos:column="5">bufsz<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <literal type="number" pos:line="75" pos:column="13">65536<pos:position pos:line="75" pos:column="18"/></literal></expr>;<pos:position pos:line="75" pos:column="19"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">bufsz<pos:position pos:line="76" pos:column="14"/></name> <operator pos:line="76" pos:column="15">&gt;<pos:position pos:line="76" pos:column="19"/></operator> <literal type="number" pos:line="76" pos:column="17">0<pos:position pos:line="76" pos:column="18"/></literal></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19"> <block pos:line="76" pos:column="20">{
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">ll<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">-&gt;<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="13">buf<pos:position pos:line="77" pos:column="16"/></name></name> <operator pos:line="77" pos:column="17">=<pos:position pos:line="77" pos:column="18"/></operator> <cast type="static" pos:line="77" pos:column="19">static_cast<argument_list type="generic" pos:line="77" pos:column="30">&lt;<argument><expr><name pos:line="77" pos:column="31">char<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">*<pos:position pos:line="77" pos:column="36"/></operator></expr></argument>&gt;<pos:position pos:line="77" pos:column="40"/></argument_list><argument_list pos:line="77" pos:column="37">(<argument><expr><call><name pos:line="77" pos:column="38">xmalloc<pos:position pos:line="77" pos:column="45"/></name><argument_list pos:line="77" pos:column="45">(<argument><expr><name pos:line="77" pos:column="46">bufsz<pos:position pos:line="77" pos:column="51"/></name></expr></argument>)<pos:position pos:line="77" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></cast></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="78" pos:column="9">ll<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">-&gt;<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="13">bufsz<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <name pos:line="78" pos:column="21">bufsz<pos:position pos:line="78" pos:column="26"/></name></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if>

    <return pos:line="81" pos:column="5">return <expr><literal type="number" pos:line="81" pos:column="12">1<pos:position pos:line="81" pos:column="13"/></literal></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

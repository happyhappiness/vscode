<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3131_squid-3.1.23.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">fqdnFromAddr<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">IpAddress<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">&amp;<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="25">addr<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">n<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name></type> <name><name pos:line="5" pos:column="17">buf<pos:position pos:line="5" pos:column="20"/></name><index pos:line="5" pos:column="20">[<expr><name pos:line="5" pos:column="21">MAX_IPSTRLEN<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">Config<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">onoff<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">log_fqdn<pos:position pos:line="7" pos:column="30"/></name></name> <operator pos:line="7" pos:column="31">&amp;&amp;<pos:position pos:line="7" pos:column="41"/></operator> <operator pos:line="7" pos:column="34">(<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">n<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">=<pos:position pos:line="7" pos:column="38"/></operator> <call><name pos:line="7" pos:column="39">fqdncache_gethostbyaddr<pos:position pos:line="7" pos:column="62"/></name><argument_list pos:line="7" pos:column="62">(<argument><expr><name pos:line="7" pos:column="63">addr<pos:position pos:line="7" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="69">0<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call><operator pos:line="7" pos:column="71">)<pos:position pos:line="7" pos:column="72"/></operator></expr>)<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">n<pos:position pos:line="8" pos:column="17"/></name></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>

<comment type="line" format="doxygen" pos:line="10" pos:column="1">/// \todo Perhapse this should use toHostname() instead of straight NtoA.</comment>
<comment type="line" format="doxygen" pos:line="11" pos:column="1">///       that would wrap the IPv6 properly when raw.</comment>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">addr<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">.<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">NtoA<pos:position pos:line="12" pos:column="14"/></name></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">buf<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">MAX_IPSTRLEN<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>

    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">buf<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

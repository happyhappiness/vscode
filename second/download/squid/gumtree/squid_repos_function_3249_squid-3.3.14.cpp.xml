<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3249_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">urlInitialize<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">23<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"urlInitialize: Initializing..."<pos:position pos:line="4" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="53"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* this ensures that the number of protocol strings is the same as
     * the enum slots allocated because the last enum is always 'MAX'.
     */</comment>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><call><name pos:line="8" pos:column="12">strcmp<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name><name pos:line="8" pos:column="19">AnyP<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">::<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">ProtocolType_str<pos:position pos:line="8" pos:column="41"/></name><index pos:line="8" pos:column="41">[<expr><name><name pos:line="8" pos:column="42">AnyP<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">::<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">PROTO_MAX<pos:position pos:line="8" pos:column="57"/></name></name></expr>]<pos:position pos:line="8" pos:column="58"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="60">"MAX"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call> <operator pos:line="8" pos:column="67">==<pos:position pos:line="8" pos:column="69"/></operator> <literal type="number" pos:line="8" pos:column="70">0<pos:position pos:line="8" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="73"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/*
     * These test that our matchDomainName() function works the
     * way we expect it to.
     */</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal> <operator pos:line="13" pos:column="14">==<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">matchDomainName<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><literal type="string" pos:line="13" pos:column="33">"foo.com"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="44">"foo.com"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal> <operator pos:line="14" pos:column="14">==<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">matchDomainName<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><literal type="string" pos:line="14" pos:column="33">".foo.com"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="45">"foo.com"<pos:position pos:line="14" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">0<pos:position pos:line="15" pos:column="13"/></literal> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">matchDomainName<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><literal type="string" pos:line="15" pos:column="33">"foo.com"<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="44">".foo.com"<pos:position pos:line="15" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">matchDomainName<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><literal type="string" pos:line="16" pos:column="33">".foo.com"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="45">".foo.com"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">matchDomainName<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><literal type="string" pos:line="17" pos:column="33">"x.foo.com"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">".foo.com"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">0<pos:position pos:line="18" pos:column="13"/></literal> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <call><name pos:line="18" pos:column="17">matchDomainName<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><literal type="string" pos:line="18" pos:column="33">"x.foo.com"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="46">"foo.com"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">matchDomainName<pos:position pos:line="19" pos:column="32"/></name><argument_list pos:line="19" pos:column="32">(<argument><expr><literal type="string" pos:line="19" pos:column="33">"foo.com"<pos:position pos:line="19" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="44">"x.foo.com"<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">matchDomainName<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><literal type="string" pos:line="20" pos:column="33">"bar.com"<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="44">"foo.com"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal> <operator pos:line="21" pos:column="14">!=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">matchDomainName<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><literal type="string" pos:line="21" pos:column="33">".bar.com"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="45">"foo.com"<pos:position pos:line="21" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">matchDomainName<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><literal type="string" pos:line="22" pos:column="33">".bar.com"<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="45">".foo.com"<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal> <operator pos:line="23" pos:column="14">!=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">matchDomainName<pos:position pos:line="23" pos:column="32"/></name><argument_list pos:line="23" pos:column="32">(<argument><expr><literal type="string" pos:line="23" pos:column="33">"bar.com"<pos:position pos:line="23" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="44">".foo.com"<pos:position pos:line="23" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal> <operator pos:line="24" pos:column="14">&lt;<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="16">matchDomainName<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><literal type="string" pos:line="24" pos:column="32">"zzz.com"<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="43">"foo.com"<pos:position pos:line="24" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal> <operator pos:line="25" pos:column="14">&gt;<pos:position pos:line="25" pos:column="18"/></operator> <call><name pos:line="25" pos:column="16">matchDomainName<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"aaa.com"<pos:position pos:line="25" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"foo.com"<pos:position pos:line="25" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">assert<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal> <operator pos:line="26" pos:column="14">==<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">matchDomainName<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><literal type="string" pos:line="26" pos:column="33">"FOO.com"<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="44">"foo.COM"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">assert<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">0<pos:position pos:line="27" pos:column="13"/></literal> <operator pos:line="27" pos:column="14">&lt;<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="16">matchDomainName<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><literal type="string" pos:line="27" pos:column="32">"bfoo.com"<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="44">"afoo.com"<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">assert<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal> <operator pos:line="28" pos:column="14">&gt;<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="16">matchDomainName<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><literal type="string" pos:line="28" pos:column="32">"afoo.com"<pos:position pos:line="28" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="44">"bfoo.com"<pos:position pos:line="28" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">assert<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal> <operator pos:line="29" pos:column="14">&lt;<pos:position pos:line="29" pos:column="18"/></operator> <call><name pos:line="29" pos:column="16">matchDomainName<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"x-foo.com"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="45">".foo.com"<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/* more cases? */</comment>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7619_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">base64_decode_update<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">base64_decode_ctx<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">ctx<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="3" pos:column="22">size_t<pos:position pos:line="3" pos:column="28"/></name> <modifier pos:line="3" pos:column="29">*<pos:position pos:line="3" pos:column="30"/></modifier></type><name pos:line="3" pos:column="30">dst_length<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="4" pos:column="22">uint8_t<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">dst<pos:position pos:line="4" pos:column="34"/></name></decl></parameter>,
                     <parameter><decl><type><name pos:line="5" pos:column="22">size_t<pos:position pos:line="5" pos:column="28"/></name></type> <name pos:line="5" pos:column="29">src_length<pos:position pos:line="5" pos:column="39"/></name></decl></parameter>,
                     <parameter><decl><type><specifier pos:line="6" pos:column="22">const<pos:position pos:line="6" pos:column="27"/></specifier> <name pos:line="6" pos:column="28">uint8_t<pos:position pos:line="6" pos:column="35"/></name> <modifier pos:line="6" pos:column="36">*<pos:position pos:line="6" pos:column="37"/></modifier></type><name pos:line="6" pos:column="37">src<pos:position pos:line="6" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="41"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">done<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">size_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">i<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr><operator pos:line="11" pos:column="15">,<pos:position pos:line="11" pos:column="16"/></operator> <expr><name pos:line="11" pos:column="17">done<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="24">0<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></init> <condition><expr><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&lt;<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="31">src_length<pos:position pos:line="11" pos:column="41"/></name></expr>;<pos:position pos:line="11" pos:column="42"/></condition> <incr><expr><name pos:line="11" pos:column="43">i<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">++<pos:position pos:line="11" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="47"/></control> <block pos:line="11" pos:column="48">{
        <switch pos:line="12" pos:column="9">switch<condition pos:line="12" pos:column="15">(<expr><call><name pos:line="12" pos:column="16">base64_decode_single<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">ctx<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">dst<pos:position pos:line="12" pos:column="45"/></name> <operator pos:line="12" pos:column="46">+<pos:position pos:line="12" pos:column="47"/></operator> <name pos:line="12" pos:column="48">done<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="54">src<pos:position pos:line="12" pos:column="57"/></name><index pos:line="12" pos:column="57">[<expr><name pos:line="12" pos:column="58">i<pos:position pos:line="12" pos:column="59"/></name></expr>]<pos:position pos:line="12" pos:column="60"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="62"/></condition> <block pos:line="12" pos:column="63">{
        <case pos:line="13" pos:column="9">case <expr><operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr>:<pos:position pos:line="13" pos:column="17"/></case>
            <return pos:line="14" pos:column="13">return <expr><literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></return>
        <case pos:line="15" pos:column="9">case <expr><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal></expr>:<pos:position pos:line="15" pos:column="16"/></case>
            <expr_stmt><expr><name pos:line="16" pos:column="13">done<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">++<pos:position pos:line="16" pos:column="19"/></operator></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
        <comment type="block" pos:line="17" pos:column="9">/* Fall through */</comment>
        <case pos:line="18" pos:column="9">case <expr><literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>:<pos:position pos:line="18" pos:column="16"/></case>
            <break pos:line="19" pos:column="13">break;<pos:position pos:line="19" pos:column="19"/></break>
        <default pos:line="20" pos:column="9">default:<pos:position pos:line="20" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">abort<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">()<pos:position pos:line="21" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></switch>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">done<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">&lt;=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="20">BASE64_DECODE_LENGTH<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><name pos:line="25" pos:column="41">src_length<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">dst_length<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">done<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">1<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

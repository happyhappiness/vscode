<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3103_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">errorSendComplete<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">int<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">fd<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">bufnotused<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">size_t<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">size<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">comm_err_t<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">errflag<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="78">int<pos:position pos:line="2" pos:column="81"/></name></type> <name pos:line="2" pos:column="82">xerrno<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="90">void<pos:position pos:line="2" pos:column="94"/></name> <modifier pos:line="2" pos:column="95">*<pos:position pos:line="2" pos:column="96"/></modifier></type><name pos:line="2" pos:column="96">data<pos:position pos:line="2" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="101"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ErrorState<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><cast type="static" pos:line="4" pos:column="23">static_cast<argument_list type="generic" pos:line="4" pos:column="34">&lt;<argument><expr><name pos:line="4" pos:column="35">ErrorState<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="51"/></argument_list><argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">data<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">4<pos:position pos:line="5" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="15">3<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="18">"errorSendComplete: FD "<pos:position pos:line="5" pos:column="42"/></literal> <operator pos:line="5" pos:column="43">&lt;&lt;<pos:position pos:line="5" pos:column="51"/></operator> <name pos:line="5" pos:column="46">fd<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">&lt;&lt;<pos:position pos:line="5" pos:column="57"/></operator> <literal type="string" pos:line="5" pos:column="52">", size="<pos:position pos:line="5" pos:column="61"/></literal> <operator pos:line="5" pos:column="62">&lt;&lt;<pos:position pos:line="5" pos:column="70"/></operator> <name pos:line="5" pos:column="65">size<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="71"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">errflag<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">!=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="20">COMM_ERR_CLOSING<pos:position pos:line="7" pos:column="36"/></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">err<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">callback<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27"> <block pos:line="8" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="9" pos:column="13">debugs<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="number" pos:line="9" pos:column="20">4<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">3<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"errorSendComplete: callback"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="10" pos:column="13">err<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">callback<pos:position pos:line="10" pos:column="26"/></name></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">fd<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="31">err<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">callback_data<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="51">size<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then> <else pos:line="11" pos:column="11">else <block pos:line="11" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">comm_close<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">fd<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">4<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="23">3<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">"errorSendComplete: comm_close"<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></else></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">errorStateFree<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">err<pos:position pos:line="17" pos:column="23"/></name></expr></argument>)<pos:position pos:line="17" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

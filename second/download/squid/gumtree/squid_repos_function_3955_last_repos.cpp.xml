<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3955_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeekingPeerConnector<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">noteNegotiationDone<pos:position pos:line="2" pos:column="47"/></name></name><parameter_list pos:line="2" pos:column="47">(<parameter><decl><type><name pos:line="2" pos:column="48">ErrorState<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">error<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Check the list error with</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">request<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">clientConnectionManager<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">valid<pos:position pos:line="5" pos:column="48"/></name></name><argument_list pos:line="5" pos:column="48">()<pos:position pos:line="5" pos:column="50"/></argument_list></call> <operator pos:line="5" pos:column="51">||<pos:position pos:line="5" pos:column="53"/></operator> <operator pos:line="5" pos:column="54">!<pos:position pos:line="5" pos:column="55"/></operator><name><name pos:line="5" pos:column="55">fd_table<pos:position pos:line="5" pos:column="63"/></name><index pos:line="5" pos:column="63">[<expr><call><name pos:line="5" pos:column="64">serverConnection<pos:position pos:line="5" pos:column="80"/></name><argument_list pos:line="5" pos:column="80">()<pos:position pos:line="5" pos:column="82"/></argument_list></call><operator pos:line="5" pos:column="82">-&gt;<pos:position pos:line="5" pos:column="87"/></operator><name pos:line="5" pos:column="84">fd<pos:position pos:line="5" pos:column="86"/></name></expr>]<pos:position pos:line="5" pos:column="87"/></index></name><operator pos:line="5" pos:column="87">.<pos:position pos:line="5" pos:column="88"/></operator><name pos:line="5" pos:column="88">ssl<pos:position pos:line="5" pos:column="91"/></name></expr>)<pos:position pos:line="5" pos:column="92"/></condition><then pos:line="5" pos:column="92">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="8" pos:column="5">// remember the server certificate from the ErrorDetail object</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<decl><type><name><name pos:line="9" pos:column="9">Ssl<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">::<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ServerBump<pos:position pos:line="9" pos:column="24"/></name></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type><name pos:line="9" pos:column="26">serverBump<pos:position pos:line="9" pos:column="36"/></name> <init pos:line="9" pos:column="37">= <expr><call><name><name pos:line="9" pos:column="39">request<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">clientConnectionManager<pos:position pos:line="9" pos:column="71"/></name><operator pos:line="9" pos:column="71">-&gt;<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="73">serverBump<pos:position pos:line="9" pos:column="83"/></name></name><argument_list pos:line="9" pos:column="83">()<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr></init></decl>)<pos:position pos:line="9" pos:column="86"/></condition><then pos:line="9" pos:column="86"> <block pos:line="9" pos:column="87">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name><name pos:line="10" pos:column="14">serverBump<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">serverCert<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">.<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">get<pos:position pos:line="10" pos:column="40"/></name></name><argument_list pos:line="10" pos:column="40">()<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="43"/></condition><then pos:line="10" pos:column="43"> <block pos:line="10" pos:column="44">{
            <comment type="line" pos:line="11" pos:column="13">// remember the server certificate from the ErrorDetail object</comment>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name pos:line="12" pos:column="17">error<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&amp;&amp;<pos:position pos:line="12" pos:column="33"/></operator> <name><name pos:line="12" pos:column="26">error<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">detail<pos:position pos:line="12" pos:column="39"/></name></name> <operator pos:line="12" pos:column="40">&amp;&amp;<pos:position pos:line="12" pos:column="50"/></operator> <call><name><name pos:line="12" pos:column="43">error<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">detail<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">peerCert<pos:position pos:line="12" pos:column="66"/></name></name><argument_list pos:line="12" pos:column="66">()<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="69"/></condition><then pos:line="12" pos:column="69">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="17">serverBump<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">serverCert<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">.<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">resetAndLock<pos:position pos:line="13" pos:column="52"/></name></name><argument_list pos:line="13" pos:column="52">(<argument><expr><call><name><name pos:line="13" pos:column="53">error<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">detail<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">-&gt;<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="68">peerCert<pos:position pos:line="13" pos:column="76"/></name></name><argument_list pos:line="13" pos:column="76">()<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt></block></then>
            <else pos:line="14" pos:column="13">else <block pos:line="14" pos:column="18">{
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">handleServerCertificate<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">()<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="16" pos:column="14"/></block></else></if>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">error<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
            <comment type="line" pos:line="20" pos:column="13">// For intercepted connections, set the host name to the server</comment>
            <comment type="line" pos:line="21" pos:column="13">// certificate CN. Otherwise, we just hope that CONNECT is using</comment>
            <comment type="line" pos:line="22" pos:column="13">// a user-entered address (a host name or a user-entered IP).</comment>
            <decl_stmt><decl><type><specifier pos:line="23" pos:column="13">const<pos:position pos:line="23" pos:column="18"/></specifier> <name pos:line="23" pos:column="19">bool<pos:position pos:line="23" pos:column="23"/></name></type> <name pos:line="23" pos:column="24">isConnectRequest<pos:position pos:line="23" pos:column="40"/></name> <init pos:line="23" pos:column="41">= <expr><operator pos:line="23" pos:column="43">!<pos:position pos:line="23" pos:column="44"/></operator><call><name><name pos:line="23" pos:column="44">request<pos:position pos:line="23" pos:column="51"/></name><operator pos:line="23" pos:column="51">-&gt;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="53">clientConnectionManager<pos:position pos:line="23" pos:column="76"/></name><operator pos:line="23" pos:column="76">-&gt;<pos:position pos:line="23" pos:column="81"/></operator><name pos:line="23" pos:column="78">port<pos:position pos:line="23" pos:column="82"/></name><operator pos:line="23" pos:column="82">-&gt;<pos:position pos:line="23" pos:column="87"/></operator><name pos:line="23" pos:column="84">flags<pos:position pos:line="23" pos:column="89"/></name><operator pos:line="23" pos:column="89">.<pos:position pos:line="23" pos:column="90"/></operator><name pos:line="23" pos:column="90">isIntercepted<pos:position pos:line="23" pos:column="103"/></name></name><argument_list pos:line="23" pos:column="103">()<pos:position pos:line="23" pos:column="105"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="106"/></decl_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name><name pos:line="24" pos:column="17">request<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">flags<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">sslPeek<pos:position pos:line="24" pos:column="39"/></name></name> <operator pos:line="24" pos:column="40">&amp;&amp;<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="43">!<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="44">isConnectRequest<pos:position pos:line="24" pos:column="60"/></name></expr>)<pos:position pos:line="24" pos:column="61"/></condition><then pos:line="24" pos:column="61"> <block pos:line="24" pos:column="62">{
                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<decl><type><name pos:line="25" pos:column="21">X509<pos:position pos:line="25" pos:column="25"/></name> <modifier pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></modifier></type><name pos:line="25" pos:column="27">srvX509<pos:position pos:line="25" pos:column="34"/></name> <init pos:line="25" pos:column="35">= <expr><call><name><name pos:line="25" pos:column="37">serverBump<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">serverCert<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">get<pos:position pos:line="25" pos:column="63"/></name></name><argument_list pos:line="25" pos:column="63">()<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr></init></decl>)<pos:position pos:line="25" pos:column="66"/></condition><then pos:line="25" pos:column="66"> <block pos:line="25" pos:column="67">{
                    <if pos:line="26" pos:column="21">if <condition pos:line="26" pos:column="24">(<decl><type><specifier pos:line="26" pos:column="25">const<pos:position pos:line="26" pos:column="30"/></specifier> <name pos:line="26" pos:column="31">char<pos:position pos:line="26" pos:column="35"/></name> <modifier pos:line="26" pos:column="36">*<pos:position pos:line="26" pos:column="37"/></modifier></type><name pos:line="26" pos:column="37">name<pos:position pos:line="26" pos:column="41"/></name> <init pos:line="26" pos:column="42">= <expr><call><name><name pos:line="26" pos:column="44">Ssl<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">::<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="49">CommonHostName<pos:position pos:line="26" pos:column="63"/></name></name><argument_list pos:line="26" pos:column="63">(<argument><expr><name pos:line="26" pos:column="64">srvX509<pos:position pos:line="26" pos:column="71"/></name></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr></init></decl>)<pos:position pos:line="26" pos:column="73"/></condition><then pos:line="26" pos:column="73"> <block pos:line="26" pos:column="74">{
                        <expr_stmt><expr><call><name><name pos:line="27" pos:column="25">request<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">url<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">.<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">host<pos:position pos:line="27" pos:column="42"/></name></name><argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">name<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="28" pos:column="25">debugs<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><literal type="number" pos:line="28" pos:column="32">83<pos:position pos:line="28" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="36">3<pos:position pos:line="28" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"reset request host: "<pos:position pos:line="28" pos:column="61"/></literal> <operator pos:line="28" pos:column="62">&lt;&lt;<pos:position pos:line="28" pos:column="70"/></operator> <name pos:line="28" pos:column="65">name<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="71"/></expr_stmt>
                    }<pos:position pos:line="29" pos:column="22"/></block></then></if>
                }<pos:position pos:line="30" pos:column="18"/></block></then></if>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">error<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block pos:line="35" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">serverCertificateVerified<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">()<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">splice<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition><then pos:line="37" pos:column="20"> <block pos:line="37" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">switchToTunnel<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><call><name><name pos:line="38" pos:column="28">request<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">getRaw<pos:position pos:line="38" pos:column="42"/></name></name><argument_list pos:line="38" pos:column="42">()<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="38" pos:column="46">clientConn<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">serverConn<pos:position pos:line="38" pos:column="68"/></name></expr></argument>)<pos:position pos:line="38" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">tunnelInsteadOfNegotiating<pos:position pos:line="39" pos:column="39"/></name><argument_list pos:line="39" pos:column="39">()<pos:position pos:line="39" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

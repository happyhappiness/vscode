<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2482_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">send_announce<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">ipcache_addrs<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">ia<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">DnsLookupDetails<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">&amp;<pos:position pos:line="2" pos:column="68"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">void<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">junk<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">tbuf<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="29">256<pos:position pos:line="4" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">LOCAL_ARRAY<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">sndbuf<pos:position pos:line="5" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="31">BUFSIZ<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">host<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name><name pos:line="7" pos:column="18">Config<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">Announce<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">host<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">file<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">short<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">port<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name><name pos:line="9" pos:column="27">Config<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">.<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">Announce<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">.<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">port<pos:position pos:line="9" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">l<pos:position pos:line="10" pos:column="10"/></name></decl>;<pos:position pos:line="10" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">n<pos:position pos:line="11" pos:column="10"/></name></decl>;<pos:position pos:line="11" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">fd<pos:position pos:line="12" pos:column="11"/></name></decl>;<pos:position pos:line="12" pos:column="12"/></decl_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ia<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">==<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">NULL<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">27<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">DBG_IMPORTANT<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"send_announce: Unknown host '"<pos:position pos:line="15" pos:column="66"/></literal> <operator pos:line="15" pos:column="67">&lt;&lt;<pos:position pos:line="15" pos:column="75"/></operator> <name pos:line="15" pos:column="70">host<pos:position pos:line="15" pos:column="74"/></name> <operator pos:line="15" pos:column="75">&lt;&lt;<pos:position pos:line="15" pos:column="83"/></operator> <literal type="string" pos:line="15" pos:column="78">"'"<pos:position pos:line="15" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="83"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">27<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="16">DBG_IMPORTANT<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"Sending Announcement to "<pos:position pos:line="19" pos:column="57"/></literal> <operator pos:line="19" pos:column="58">&lt;&lt;<pos:position pos:line="19" pos:column="66"/></operator> <name pos:line="19" pos:column="61">host<pos:position pos:line="19" pos:column="65"/></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">sndbuf<pos:position pos:line="20" pos:column="11"/></name><index pos:line="20" pos:column="11">[<expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>]<pos:position pos:line="20" pos:column="14"/></index></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <literal type="char" pos:line="20" pos:column="17">'\0'<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">snprintf<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">tbuf<pos:position pos:line="21" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">256<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="25">"cache_version SQUID/%s\n"<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">version_string<pos:position pos:line="21" pos:column="67"/></name></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">strcat<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">sndbuf<pos:position pos:line="22" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">tbuf<pos:position pos:line="22" pos:column="24"/></name></expr></argument>)<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name><name pos:line="23" pos:column="12">Config<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">Sockaddr<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">http<pos:position pos:line="23" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">snprintf<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">tbuf<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">256<pos:position pos:line="24" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="25">"Running on %s %d %d\n"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>,
             <argument><expr><call><name pos:line="25" pos:column="14">getMyHostname<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">()<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr></argument>,
             <argument><expr><call><name pos:line="26" pos:column="14">getMyPort<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr></argument>,
             <argument><expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">int<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">)<pos:position pos:line="27" pos:column="19"/></operator> <name><name pos:line="27" pos:column="20">Config<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">Port<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">icp<pos:position pos:line="27" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">strcat<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">sndbuf<pos:position pos:line="28" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="20">tbuf<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name><name pos:line="30" pos:column="9">Config<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">.<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">adminEmail<pos:position pos:line="30" pos:column="26"/></name></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">snprintf<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">tbuf<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="24">256<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="29">"cache_admin: %s\n"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="50">Config<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">.<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="57">adminEmail<pos:position pos:line="31" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">strcat<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">sndbuf<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="24">tbuf<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">snprintf<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">tbuf<pos:position pos:line="35" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="20">256<pos:position pos:line="35" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="25">"generated %d [%s]\n"<pos:position pos:line="35" pos:column="46"/></literal></expr></argument>,
             <argument><expr><operator pos:line="36" pos:column="14">(<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">int<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">)<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">squid_curtime<pos:position pos:line="36" pos:column="33"/></name></expr></argument>,
             <argument><expr><call><name><name pos:line="37" pos:column="14">Time<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">::<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">FormatHttpd<pos:position pos:line="37" pos:column="31"/></name></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">squid_curtime<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">strcat<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name pos:line="38" pos:column="12">sndbuf<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="20">tbuf<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">l<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">strlen<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><name pos:line="39" pos:column="16">sndbuf<pos:position pos:line="39" pos:column="22"/></name></expr></argument>)<pos:position pos:line="39" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">file<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name><name pos:line="41" pos:column="17">Config<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">Announce<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">.<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">file<pos:position pos:line="41" pos:column="37"/></name></name><operator pos:line="41" pos:column="37">)<pos:position pos:line="41" pos:column="38"/></operator> <operator pos:line="41" pos:column="39">!=<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">NULL<pos:position pos:line="41" pos:column="46"/></name></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
        <expr_stmt><expr><name pos:line="42" pos:column="9">fd<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">file_open<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">file<pos:position pos:line="42" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="30">O_RDONLY<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">|<pos:position pos:line="42" pos:column="40"/></operator> <name pos:line="42" pos:column="41">O_TEXT<pos:position pos:line="42" pos:column="47"/></name></expr></argument>)<pos:position pos:line="42" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="49"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">fd<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">&gt;<pos:position pos:line="44" pos:column="20"/></operator> <operator pos:line="44" pos:column="18">-<pos:position pos:line="44" pos:column="19"/></operator><literal type="number" pos:line="44" pos:column="19">1<pos:position pos:line="44" pos:column="20"/></literal> <operator pos:line="44" pos:column="21">&amp;&amp;<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">n<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <call><name pos:line="44" pos:column="29">FD_READ_METHOD<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">fd<pos:position pos:line="44" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="48">sndbuf<pos:position pos:line="44" pos:column="54"/></name> <operator pos:line="44" pos:column="55">+<pos:position pos:line="44" pos:column="56"/></operator> <name pos:line="44" pos:column="57">l<pos:position pos:line="44" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="60">BUFSIZ<pos:position pos:line="44" pos:column="66"/></name> <operator pos:line="44" pos:column="67">-<pos:position pos:line="44" pos:column="68"/></operator> <name pos:line="44" pos:column="69">l<pos:position pos:line="44" pos:column="70"/></name> <operator pos:line="44" pos:column="71">-<pos:position pos:line="44" pos:column="72"/></operator> <literal type="number" pos:line="44" pos:column="73">1<pos:position pos:line="44" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call><operator pos:line="44" pos:column="75">)<pos:position pos:line="44" pos:column="76"/></operator> <operator pos:line="44" pos:column="77">&gt;<pos:position pos:line="44" pos:column="81"/></operator> <literal type="number" pos:line="44" pos:column="79">0<pos:position pos:line="44" pos:column="80"/></literal></expr>)<pos:position pos:line="44" pos:column="81"/></condition><then pos:line="44" pos:column="81"> <block pos:line="44" pos:column="82">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">fd_bytes<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">fd<pos:position pos:line="45" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="26">n<pos:position pos:line="45" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="29">FD_READ<pos:position pos:line="45" pos:column="36"/></name></expr></argument>)<pos:position pos:line="45" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="46" pos:column="13">l<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">+=<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">n<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">sndbuf<pos:position pos:line="47" pos:column="19"/></name><index pos:line="47" pos:column="19">[<expr><name pos:line="47" pos:column="20">l<pos:position pos:line="47" pos:column="21"/></name></expr>]<pos:position pos:line="47" pos:column="22"/></index></name> <operator pos:line="47" pos:column="23">=<pos:position pos:line="47" pos:column="24"/></operator> <literal type="char" pos:line="47" pos:column="25">'\0'<pos:position pos:line="47" pos:column="29"/></literal></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">file_close<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">fd<pos:position pos:line="48" pos:column="26"/></name></expr></argument>)<pos:position pos:line="48" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">debugs<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><literal type="number" pos:line="50" pos:column="20">50<pos:position pos:line="50" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="24">DBG_IMPORTANT<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="39">"send_announce: "<pos:position pos:line="50" pos:column="56"/></literal> <operator pos:line="50" pos:column="57">&lt;&lt;<pos:position pos:line="50" pos:column="65"/></operator> <name pos:line="50" pos:column="60">file<pos:position pos:line="50" pos:column="64"/></name> <operator pos:line="50" pos:column="65">&lt;&lt;<pos:position pos:line="50" pos:column="73"/></operator> <literal type="string" pos:line="50" pos:column="68">": "<pos:position pos:line="50" pos:column="72"/></literal> <operator pos:line="50" pos:column="73">&lt;&lt;<pos:position pos:line="50" pos:column="81"/></operator> <call><name pos:line="50" pos:column="76">xstrerror<pos:position pos:line="50" pos:column="85"/></name><argument_list pos:line="50" pos:column="85">()<pos:position pos:line="50" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="89"/></expr_stmt>
        }<pos:position pos:line="51" pos:column="10"/></block></else></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="54" pos:column="5">Ip<pos:position pos:line="54" pos:column="7"/></name><operator pos:line="54" pos:column="7">::<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="9">Address<pos:position pos:line="54" pos:column="16"/></name></name></type> <name pos:line="54" pos:column="17">S<pos:position pos:line="54" pos:column="18"/></name> <init pos:line="54" pos:column="19">= <expr><name><name pos:line="54" pos:column="21">ia<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">-&gt;<pos:position pos:line="54" pos:column="28"/></operator><name pos:line="54" pos:column="25">in_addrs<pos:position pos:line="54" pos:column="33"/></name><index pos:line="54" pos:column="33">[<expr><literal type="number" pos:line="54" pos:column="34">0<pos:position pos:line="54" pos:column="35"/></literal></expr>]<pos:position pos:line="54" pos:column="36"/></index></name></expr></init></decl>;<pos:position pos:line="54" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="55" pos:column="5">S<pos:position pos:line="55" pos:column="6"/></name><operator pos:line="55" pos:column="6">.<pos:position pos:line="55" pos:column="7"/></operator><name pos:line="55" pos:column="7">SetPort<pos:position pos:line="55" pos:column="14"/></name></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">port<pos:position pos:line="55" pos:column="19"/></name></expr></argument>)<pos:position pos:line="55" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">assert<pos:position pos:line="56" pos:column="11"/></name><argument_list pos:line="56" pos:column="11">(<argument><expr><call><name><name pos:line="56" pos:column="12">Comm<pos:position pos:line="56" pos:column="16"/></name><operator pos:line="56" pos:column="16">::<pos:position pos:line="56" pos:column="18"/></operator><name pos:line="56" pos:column="18">IsConnOpen<pos:position pos:line="56" pos:column="28"/></name></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">icpOutgoingConn<pos:position pos:line="56" pos:column="44"/></name></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="47"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><call><name pos:line="58" pos:column="9">comm_udp_sendto<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name><name pos:line="58" pos:column="25">icpOutgoingConn<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">-&gt;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="42">fd<pos:position pos:line="58" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">S<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">sndbuf<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><call><name pos:line="58" pos:column="57">strlen<pos:position pos:line="58" pos:column="63"/></name><argument_list pos:line="58" pos:column="63">(<argument><expr><name pos:line="58" pos:column="64">sndbuf<pos:position pos:line="58" pos:column="70"/></name></expr></argument>)<pos:position pos:line="58" pos:column="71"/></argument_list></call> <operator pos:line="58" pos:column="72">+<pos:position pos:line="58" pos:column="73"/></operator> <literal type="number" pos:line="58" pos:column="74">1<pos:position pos:line="58" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="76"/></argument_list></call> <operator pos:line="58" pos:column="77">&lt;<pos:position pos:line="58" pos:column="81"/></operator> <literal type="number" pos:line="58" pos:column="79">0<pos:position pos:line="58" pos:column="80"/></literal></expr>)<pos:position pos:line="58" pos:column="81"/></condition><then pos:line="58" pos:column="81">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="9">debugs<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="number" pos:line="59" pos:column="16">27<pos:position pos:line="59" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="20">DBG_IMPORTANT<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="35">"ERROR: Failed to announce to "<pos:position pos:line="59" pos:column="66"/></literal> <operator pos:line="59" pos:column="67">&lt;&lt;<pos:position pos:line="59" pos:column="75"/></operator> <name pos:line="59" pos:column="70">S<pos:position pos:line="59" pos:column="71"/></name> <operator pos:line="59" pos:column="72">&lt;&lt;<pos:position pos:line="59" pos:column="80"/></operator> <literal type="string" pos:line="59" pos:column="75">" from "<pos:position pos:line="59" pos:column="83"/></literal> <operator pos:line="59" pos:column="84">&lt;&lt;<pos:position pos:line="59" pos:column="92"/></operator> <name><name pos:line="59" pos:column="87">icpOutgoingConn<pos:position pos:line="59" pos:column="102"/></name><operator pos:line="59" pos:column="102">-&gt;<pos:position pos:line="59" pos:column="107"/></operator><name pos:line="59" pos:column="104">local<pos:position pos:line="59" pos:column="109"/></name></name> <operator pos:line="59" pos:column="110">&lt;&lt;<pos:position pos:line="59" pos:column="118"/></operator> <literal type="string" pos:line="59" pos:column="113">": "<pos:position pos:line="59" pos:column="117"/></literal> <operator pos:line="59" pos:column="118">&lt;&lt;<pos:position pos:line="59" pos:column="126"/></operator> <call><name pos:line="59" pos:column="121">xstrerror<pos:position pos:line="59" pos:column="130"/></name><argument_list pos:line="59" pos:column="130">()<pos:position pos:line="59" pos:column="132"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="134"/></expr_stmt></block></then></if>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

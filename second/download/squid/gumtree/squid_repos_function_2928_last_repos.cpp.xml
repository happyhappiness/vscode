<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2928_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">storeOKTransferDone<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list> <specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name><name pos:line="4" pos:column="12">http<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">-&gt;<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="18">storeEntry<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">()<pos:position pos:line="4" pos:column="30"/></argument_list></call><operator pos:line="4" pos:column="30">-&gt;<pos:position pos:line="4" pos:column="35"/></operator><call><name pos:line="4" pos:column="32">objectLen<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">()<pos:position pos:line="4" pos:column="43"/></argument_list></call> <operator pos:line="4" pos:column="44">&gt;=<pos:position pos:line="4" pos:column="49"/></operator> <literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name><name pos:line="5" pos:column="12">http<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">storeEntry<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">()<pos:position pos:line="5" pos:column="30"/></argument_list></call><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><call><name pos:line="5" pos:column="32">objectLen<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">()<pos:position pos:line="5" pos:column="43"/></argument_list></call> <operator pos:line="5" pos:column="44">&gt;=<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="47">headers_sz<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">http<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">out<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">offset<pos:position pos:line="6" pos:column="25"/></name></name> <operator pos:line="6" pos:column="26">&gt;=<pos:position pos:line="6" pos:column="31"/></operator> <call><name><name pos:line="6" pos:column="29">http<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">storeEntry<pos:position pos:line="6" pos:column="45"/></name></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><call><name pos:line="6" pos:column="49">objectLen<pos:position pos:line="6" pos:column="58"/></name><argument_list pos:line="6" pos:column="58">()<pos:position pos:line="6" pos:column="60"/></argument_list></call> <operator pos:line="6" pos:column="61">-<pos:position pos:line="6" pos:column="62"/></operator> <name pos:line="6" pos:column="63">headers_sz<pos:position pos:line="6" pos:column="73"/></name></expr>)<pos:position pos:line="6" pos:column="74"/></condition><then pos:line="6" pos:column="74"> <block pos:line="6" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">88<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="19">3<pos:position pos:line="7" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="7" pos:column="21">HERE<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">&lt;&lt;<pos:position pos:line="7" pos:column="34"/></operator> <literal type="string" pos:line="7" pos:column="29">"storeOKTransferDone "<pos:position pos:line="7" pos:column="51"/></literal> <operator pos:line="7" pos:column="52">&lt;&lt;<pos:position pos:line="7" pos:column="60"/></operator>
               <literal type="string" pos:line="8" pos:column="16">" out.offset="<pos:position pos:line="8" pos:column="30"/></literal> <operator pos:line="8" pos:column="31">&lt;&lt;<pos:position pos:line="8" pos:column="39"/></operator> <name><name pos:line="8" pos:column="34">http<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">out<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">offset<pos:position pos:line="8" pos:column="50"/></name></name> <operator pos:line="8" pos:column="51">&lt;&lt;<pos:position pos:line="8" pos:column="59"/></operator>
               <literal type="string" pos:line="9" pos:column="16">" objectLen()="<pos:position pos:line="9" pos:column="31"/></literal> <operator pos:line="9" pos:column="32">&lt;&lt;<pos:position pos:line="9" pos:column="40"/></operator> <call><name><name pos:line="9" pos:column="35">http<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">storeEntry<pos:position pos:line="9" pos:column="51"/></name></name><argument_list pos:line="9" pos:column="51">()<pos:position pos:line="9" pos:column="53"/></argument_list></call><operator pos:line="9" pos:column="53">-&gt;<pos:position pos:line="9" pos:column="58"/></operator><call><name pos:line="9" pos:column="55">objectLen<pos:position pos:line="9" pos:column="64"/></name><argument_list pos:line="9" pos:column="64">()<pos:position pos:line="9" pos:column="66"/></argument_list></call> <operator pos:line="9" pos:column="67">&lt;&lt;<pos:position pos:line="9" pos:column="75"/></operator>
               <literal type="string" pos:line="10" pos:column="16">" headers_sz="<pos:position pos:line="10" pos:column="30"/></literal> <operator pos:line="10" pos:column="31">&lt;&lt;<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="34">headers_sz<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

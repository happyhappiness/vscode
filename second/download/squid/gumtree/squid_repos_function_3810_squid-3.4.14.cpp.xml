<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3810_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Iterator<pos:position pos:line="1" pos:column="26"/></name><operator pos:line="1" pos:column="26">::<pos:position pos:line="1" pos:column="28"/></operator><name pos:line="1" pos:column="28">updatePlan<pos:position pos:line="1" pos:column="38"/></name></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">bool<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">adopt<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">HttpRequest<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">r<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><ternary><condition><expr><name pos:line="3" pos:column="22">theCause<pos:position pos:line="3" pos:column="30"/></name></expr> ?<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <expr><name pos:line="3" pos:column="33">theCause<pos:position pos:line="3" pos:column="41"/></name></expr> <pos:position pos:line="3" pos:column="42"/></then><else pos:line="3" pos:column="42">: <expr><cast type="dynamic" pos:line="3" pos:column="44">dynamic_cast<argument_list type="generic" pos:line="3" pos:column="56">&lt;<argument><expr><name pos:line="3" pos:column="57">HttpRequest<pos:position pos:line="3" pos:column="68"/></name><operator pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="3" pos:column="73"/></argument_list><argument_list pos:line="3" pos:column="70">(<argument><expr><name pos:line="3" pos:column="71">theMsg<pos:position pos:line="3" pos:column="77"/></name></expr></argument>)<pos:position pos:line="3" pos:column="78"/></argument_list></cast></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="79"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">r<pos:position pos:line="4" pos:column="11"/></name></expr></argument>)<pos:position pos:line="4" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Adaptation<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">::<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">History<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">::<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">Pointer<pos:position pos:line="6" pos:column="33"/></name></name></type> <name pos:line="6" pos:column="34">ah<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><call><name><name pos:line="6" pos:column="39">r<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">adaptHistory<pos:position pos:line="6" pos:column="54"/></name></name><argument_list pos:line="6" pos:column="54">()<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">ah<pos:position pos:line="7" pos:column="12"/></name></expr>)<pos:position pos:line="7" pos:column="13"/></condition><then pos:line="7" pos:column="13"> <block pos:line="7" pos:column="14">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">85<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="19">9<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">HERE<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">&lt;&lt;<pos:position pos:line="8" pos:column="35"/></operator> <literal type="string" pos:line="8" pos:column="30">"no history to store a service-proposed plan"<pos:position pos:line="8" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="77"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return> <comment type="line" pos:line="9" pos:column="23">// the feature is not enabled or is not triggered</comment>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">String<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">services<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><call><name><name pos:line="13" pos:column="10">ah<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">extractNextServices<pos:position pos:line="13" pos:column="33"/></name></name><argument_list pos:line="13" pos:column="33">(<argument><expr><name pos:line="13" pos:column="34">services<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{ <comment type="line" pos:line="13" pos:column="47">// clears history</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">85<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="19">9<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">HERE<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&lt;&lt;<pos:position pos:line="14" pos:column="35"/></operator> <literal type="string" pos:line="14" pos:column="30">"no service-proposed plan received"<pos:position pos:line="14" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">false<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return> <comment type="line" pos:line="15" pos:column="23">// the service did not provide a new plan</comment>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">adopt<pos:position pos:line="18" pos:column="15"/></name></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">85<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="19" pos:column="19">3<pos:position pos:line="19" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">HERE<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;&lt;<pos:position pos:line="19" pos:column="35"/></operator> <literal type="string" pos:line="19" pos:column="30">"rejecting service-proposed plan"<pos:position pos:line="19" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">false<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">85<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="15">3<pos:position pos:line="23" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="18">HERE<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&lt;&lt;<pos:position pos:line="23" pos:column="31"/></operator> <literal type="string" pos:line="23" pos:column="26">"retiring old plan: "<pos:position pos:line="23" pos:column="47"/></literal> <operator pos:line="23" pos:column="48">&lt;&lt;<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="51">thePlan<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="25" pos:column="5">Adaptation<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">::<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">ServiceFilter<pos:position pos:line="25" pos:column="30"/></name></name></type> <name pos:line="25" pos:column="31">f<pos:position pos:line="25" pos:column="32"/></name> <init pos:line="25" pos:column="33">= <expr><call><name><name pos:line="25" pos:column="35">this<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">-&gt;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="41">filter<pos:position pos:line="25" pos:column="47"/></name></name><argument_list pos:line="25" pos:column="47">()<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">DynamicGroupCfg<pos:position pos:line="26" pos:column="20"/></name></type> <name pos:line="26" pos:column="21">current<pos:position pos:line="26" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="26" pos:column="30">future<pos:position pos:line="26" pos:column="36"/></name></decl>;<pos:position pos:line="26" pos:column="37"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">DynamicServiceChain<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">::<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="26">Split<pos:position pos:line="27" pos:column="31"/></name></name><argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">f<pos:position pos:line="27" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">services<pos:position pos:line="27" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">current<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">future<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><call><name><name pos:line="29" pos:column="10">future<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">empty<pos:position pos:line="29" pos:column="22"/></name></name><argument_list pos:line="29" pos:column="22">()<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25"> <block pos:line="29" pos:column="26">{
        <expr_stmt><expr><call><name><name pos:line="30" pos:column="9">ah<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">-&gt;<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="13">setFutureServices<pos:position pos:line="30" pos:column="30"/></name></name><argument_list pos:line="30" pos:column="30">(<argument><expr><name pos:line="30" pos:column="31">future<pos:position pos:line="30" pos:column="37"/></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">85<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="31" pos:column="19">3<pos:position pos:line="31" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="22">HERE<pos:position pos:line="31" pos:column="26"/></name> <operator pos:line="31" pos:column="27">&lt;&lt;<pos:position pos:line="31" pos:column="35"/></operator> <literal type="string" pos:line="31" pos:column="30">"noted future service-proposed plan: "<pos:position pos:line="31" pos:column="68"/></literal> <operator pos:line="31" pos:column="69">&lt;&lt;<pos:position pos:line="31" pos:column="77"/></operator> <name pos:line="31" pos:column="72">future<pos:position pos:line="31" pos:column="78"/></name></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="34" pos:column="5">// use the current config even if it is empty; we must replace the old plan</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">theGroup<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <operator pos:line="35" pos:column="16">new<pos:position pos:line="35" pos:column="19"/></operator> <call><name pos:line="35" pos:column="20">DynamicServiceChain<pos:position pos:line="35" pos:column="39"/></name><argument_list pos:line="35" pos:column="39">(<argument><expr><name pos:line="35" pos:column="40">current<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">f<pos:position pos:line="35" pos:column="50"/></name></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt> <comment type="line" pos:line="35" pos:column="53">// refcounted</comment>
    <expr_stmt><expr><name pos:line="36" pos:column="5">thePlan<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">ServicePlan<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">theGroup<pos:position pos:line="36" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">f<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">85<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="37" pos:column="15">3<pos:position pos:line="37" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="18">HERE<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&lt;&lt;<pos:position pos:line="37" pos:column="31"/></operator> <literal type="string" pos:line="37" pos:column="26">"adopted service-proposed plan: "<pos:position pos:line="37" pos:column="59"/></literal> <operator pos:line="37" pos:column="60">&lt;&lt;<pos:position pos:line="37" pos:column="68"/></operator> <name pos:line="37" pos:column="63">thePlan<pos:position pos:line="37" pos:column="70"/></name></expr></argument>)<pos:position pos:line="37" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>
    <return pos:line="38" pos:column="5">return <expr><literal type="boolean" pos:line="38" pos:column="12">true<pos:position pos:line="38" pos:column="16"/></literal></expr>;<pos:position pos:line="38" pos:column="17"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_732.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">check_gss_err<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">OM_uint32<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">major_status<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">OM_uint32<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">minor_status<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">function<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="84"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">GSS_ERROR<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">major_status<pos:position pos:line="4" pos:column="31"/></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <block pos:line="4" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">OM_uint32<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">maj_stat<pos:position pos:line="5" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="29">min_stat<pos:position pos:line="5" pos:column="37"/></name></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">OM_uint32<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">msg_ctx<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">gss_buffer_desc<pos:position pos:line="7" pos:column="24"/></name></type> <name pos:line="7" pos:column="25">status_string<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">BUFFER_SIZE<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">size_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">len<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

        <expr_stmt><expr><name pos:line="11" pos:column="9">len<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <literal type="number" pos:line="11" pos:column="15">0<pos:position pos:line="11" pos:column="16"/></literal></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">msg_ctx<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <literal type="number" pos:line="12" pos:column="19">0<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
        <while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">msg_ctx<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition> <block pos:line="13" pos:column="26">{
            <comment type="block" pos:line="14" pos:column="13">/* convert major status code (GSS-API error) to text */</comment>
            <expr_stmt><expr><name pos:line="15" pos:column="13">maj_stat<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">gss_display_status<pos:position pos:line="15" pos:column="42"/></name><argument_list pos:line="15" pos:column="42">(<argument><expr><operator pos:line="15" pos:column="43">&amp;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="44">min_stat<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">major_status<pos:position pos:line="15" pos:column="66"/></name></expr></argument>,
                                          <argument><expr><name pos:line="16" pos:column="43">GSS_C_GSS_CODE<pos:position pos:line="16" pos:column="57"/></name></expr></argument>,
                                          <argument><expr><name pos:line="17" pos:column="43">GSS_C_NULL_OID<pos:position pos:line="17" pos:column="57"/></name></expr></argument>,
                                          <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="44">msg_ctx<pos:position pos:line="18" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">&amp;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="54">status_string<pos:position pos:line="18" pos:column="67"/></name></expr></argument>)<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="69"/></expr_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">maj_stat<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">==<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">GSS_S_COMPLETE<pos:position pos:line="19" pos:column="43"/></name></expr>)<pos:position pos:line="19" pos:column="44"/></condition><then pos:line="19" pos:column="44"> <block pos:line="19" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">snprintf<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">buf<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">+<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="32">len<pos:position pos:line="20" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="37">BUFFER_SIZE<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">-<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">len<pos:position pos:line="20" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="54">"%s"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="60">(<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">char<pos:position pos:line="20" pos:column="65"/></name> <operator pos:line="20" pos:column="66">*<pos:position pos:line="20" pos:column="67"/></operator><operator pos:line="20" pos:column="67">)<pos:position pos:line="20" pos:column="68"/></operator> <name><name pos:line="20" pos:column="69">status_string<pos:position pos:line="20" pos:column="82"/></name><operator pos:line="20" pos:column="82">.<pos:position pos:line="20" pos:column="83"/></operator><name pos:line="20" pos:column="83">value<pos:position pos:line="20" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="90"/></expr_stmt>
                <expr_stmt><expr><name pos:line="21" pos:column="17">len<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">+=<pos:position pos:line="21" pos:column="23"/></operator> <name><name pos:line="21" pos:column="24">status_string<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">.<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="38">length<pos:position pos:line="21" pos:column="44"/></name></name></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="22" pos:column="17">gss_release_buffer<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><operator pos:line="22" pos:column="36">&amp;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="37">min_stat<pos:position pos:line="22" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="47">&amp;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="48">status_string<pos:position pos:line="22" pos:column="61"/></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>
                <break pos:line="23" pos:column="17">break;<pos:position pos:line="23" pos:column="23"/></break>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">gss_release_buffer<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><operator pos:line="25" pos:column="32">&amp;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="33">min_stat<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="43">&amp;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="44">status_string<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">snprintf<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">(<argument><expr><name pos:line="27" pos:column="18">buf<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">+<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">len<pos:position pos:line="27" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="29">BUFFER_SIZE<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">-<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">len<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="46">"%s"<pos:position pos:line="27" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="52">". "<pos:position pos:line="27" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">len<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">+=<pos:position pos:line="28" pos:column="15"/></operator> <literal type="number" pos:line="28" pos:column="16">2<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">msg_ctx<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
        <while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><operator pos:line="30" pos:column="16">!<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">msg_ctx<pos:position pos:line="30" pos:column="24"/></name></expr>)<pos:position pos:line="30" pos:column="25"/></condition> <block pos:line="30" pos:column="26">{
            <comment type="block" pos:line="31" pos:column="13">/* convert minor status code (underlying routine error) to text */</comment>
            <expr_stmt><expr><name pos:line="32" pos:column="13">maj_stat<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <call><name pos:line="32" pos:column="24">gss_display_status<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><operator pos:line="32" pos:column="43">&amp;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="44">min_stat<pos:position pos:line="32" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">minor_status<pos:position pos:line="32" pos:column="66"/></name></expr></argument>,
                                          <argument><expr><name pos:line="33" pos:column="43">GSS_C_MECH_CODE<pos:position pos:line="33" pos:column="58"/></name></expr></argument>,
                                          <argument><expr><name pos:line="34" pos:column="43">GSS_C_NULL_OID<pos:position pos:line="34" pos:column="57"/></name></expr></argument>,
                                          <argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">msg_ctx<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="53">&amp;<pos:position pos:line="35" pos:column="58"/></operator><name pos:line="35" pos:column="54">status_string<pos:position pos:line="35" pos:column="67"/></name></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">maj_stat<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">==<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">GSS_S_COMPLETE<pos:position pos:line="36" pos:column="43"/></name></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">snprintf<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">buf<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">+<pos:position pos:line="37" pos:column="31"/></operator> <name pos:line="37" pos:column="32">len<pos:position pos:line="37" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="37">BUFFER_SIZE<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">-<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="49">len<pos:position pos:line="37" pos:column="52"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="37" pos:column="53">"%s"<pos:position pos:line="37" pos:column="57"/></literal></expr></argument>, <argument><expr><operator pos:line="37" pos:column="59">(<pos:position pos:line="37" pos:column="60"/></operator><name pos:line="37" pos:column="60">char<pos:position pos:line="37" pos:column="64"/></name> <operator pos:line="37" pos:column="65">*<pos:position pos:line="37" pos:column="66"/></operator><operator pos:line="37" pos:column="66">)<pos:position pos:line="37" pos:column="67"/></operator> <name><name pos:line="37" pos:column="68">status_string<pos:position pos:line="37" pos:column="81"/></name><operator pos:line="37" pos:column="81">.<pos:position pos:line="37" pos:column="82"/></operator><name pos:line="37" pos:column="82">value<pos:position pos:line="37" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="89"/></expr_stmt>
                <expr_stmt><expr><name pos:line="38" pos:column="17">len<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">+=<pos:position pos:line="38" pos:column="23"/></operator> <name><name pos:line="38" pos:column="24">status_string<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">length<pos:position pos:line="38" pos:column="44"/></name></name></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="39" pos:column="17">gss_release_buffer<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><operator pos:line="39" pos:column="36">&amp;<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="37">min_stat<pos:position pos:line="39" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="47">&amp;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="48">status_string<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
                <break pos:line="40" pos:column="17">break;<pos:position pos:line="40" pos:column="23"/></break>
            }<pos:position pos:line="41" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">gss_release_buffer<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="33">min_stat<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="43">&amp;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="44">status_string<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">fprintf<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">stderr<pos:position pos:line="44" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="25">"%s failed: %s\n"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">function<pos:position pos:line="44" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="54">buf<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">(<pos:position pos:line="45" pos:column="17"/></operator><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal><operator pos:line="45" pos:column="18">)<pos:position pos:line="45" pos:column="19"/></operator></expr>;<pos:position pos:line="45" pos:column="20"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <return pos:line="47" pos:column="5">return <expr><operator pos:line="47" pos:column="12">(<pos:position pos:line="47" pos:column="13"/></operator><literal type="number" pos:line="47" pos:column="13">0<pos:position pos:line="47" pos:column="14"/></literal><operator pos:line="47" pos:column="14">)<pos:position pos:line="47" pos:column="15"/></operator></expr>;<pos:position pos:line="47" pos:column="16"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

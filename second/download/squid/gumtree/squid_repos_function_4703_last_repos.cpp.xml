<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4703_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">SBufToCstring<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">SBuf<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">&amp;<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="27">s<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">d<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><cast type="static" pos:line="4" pos:column="15">static_cast<argument_list type="generic" pos:line="4" pos:column="26">&lt;<argument><expr><name pos:line="4" pos:column="27">char<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="36"/></argument_list><argument_list pos:line="4" pos:column="33">(<argument><expr><call><name pos:line="4" pos:column="34">xmalloc<pos:position pos:line="4" pos:column="41"/></name><argument_list pos:line="4" pos:column="41">(<argument><expr><call><name><name pos:line="4" pos:column="42">s<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">.<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">length<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">()<pos:position pos:line="4" pos:column="52"/></argument_list></call><operator pos:line="4" pos:column="52">+<pos:position pos:line="4" pos:column="53"/></operator><literal type="number" pos:line="4" pos:column="53">1<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">SBufToCstring<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">d<pos:position pos:line="5" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">s<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">d<pos:position pos:line="6" pos:column="13"/></name></expr>;<pos:position pos:line="6" pos:column="14"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

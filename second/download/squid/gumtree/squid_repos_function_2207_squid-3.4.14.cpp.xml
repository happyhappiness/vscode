<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2207_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">selectPeerForIntercepted<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// use pinned connection if available</comment>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Comm<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">::<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">ConnectionPointer<pos:position pos:line="5" pos:column="28"/></name></name></type> <name pos:line="5" pos:column="29">p<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<decl><type><name pos:line="6" pos:column="9">ConnStateData<pos:position pos:line="6" pos:column="22"/></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">client<pos:position pos:line="6" pos:column="30"/></name> <init pos:line="6" pos:column="31">= <expr><call><name><name pos:line="6" pos:column="33">request<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">pinnedConnection<pos:position pos:line="6" pos:column="58"/></name></name><argument_list pos:line="6" pos:column="58">()<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61"> <block pos:line="6" pos:column="62">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name><name pos:line="7" pos:column="13">client<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">validatePinnedConnection<pos:position pos:line="7" pos:column="45"/></name></name><argument_list pos:line="7" pos:column="45">(<argument><expr><name pos:line="7" pos:column="46">request<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">NULL<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name><name pos:line="8" pos:column="13">Comm<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">::<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">IsConnOpen<pos:position pos:line="8" pos:column="29"/></name></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">p<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33"> <block pos:line="8" pos:column="34">{
            <comment type="block" pos:line="9" pos:column="13">/* duplicate peerSelectPinned() effects */</comment>
            <expr_stmt><expr><name><name pos:line="10" pos:column="13">p<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">peerType<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="27">PINNED<pos:position pos:line="10" pos:column="33"/></name></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">entry<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">ping_status<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <name pos:line="11" pos:column="34">PING_DONE<pos:position pos:line="11" pos:column="43"/></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>     <comment type="block" pos:line="11" pos:column="49">/* Skip ICP */</comment>

            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">17<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="24">3<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">"reusing a pinned conn: "<pos:position pos:line="13" pos:column="52"/></literal> <operator pos:line="13" pos:column="53">&lt;&lt;<pos:position pos:line="13" pos:column="61"/></operator> <operator pos:line="13" pos:column="56">*<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="57">p<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="14" pos:column="13">serverDestinations<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">push_back<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">p<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else <block pos:line="15" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debugs<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="number" pos:line="16" pos:column="20">17<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="23">2<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="26">"Pinned connection is not valid: "<pos:position pos:line="16" pos:column="60"/></literal> <operator pos:line="16" pos:column="61">&lt;&lt;<pos:position pos:line="16" pos:column="69"/></operator> <name pos:line="16" pos:column="64">p<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="17" pos:column="13">ErrorState<pos:position pos:line="17" pos:column="23"/></name> <modifier pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></modifier></type><name pos:line="17" pos:column="25">anErr<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><operator pos:line="17" pos:column="33">new<pos:position pos:line="17" pos:column="36"/></operator> <call><name pos:line="17" pos:column="37">ErrorState<pos:position pos:line="17" pos:column="47"/></name><argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">ERR_ZERO_SIZE_OBJECT<pos:position pos:line="17" pos:column="68"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="70">Http<pos:position pos:line="17" pos:column="74"/></name><operator pos:line="17" pos:column="74">::<pos:position pos:line="17" pos:column="76"/></operator><name pos:line="17" pos:column="76">scServiceUnavailable<pos:position pos:line="17" pos:column="96"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="98">request<pos:position pos:line="17" pos:column="105"/></name></expr></argument>)<pos:position pos:line="17" pos:column="106"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="107"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">fail<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">anErr<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></else></if>
        <comment type="line" pos:line="20" pos:column="9">// Either use the valid pinned connection or fail if it is invalid.</comment>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="24" pos:column="5">// use client original destination as second preferred choice</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">p<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <operator pos:line="25" pos:column="9">new<pos:position pos:line="25" pos:column="12"/></operator> <call><name><name pos:line="25" pos:column="13">Comm<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">::<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">Connection<pos:position pos:line="25" pos:column="29"/></name></name><argument_list pos:line="25" pos:column="29">()<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">peerType<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <name pos:line="26" pos:column="19">ORIGINAL_DST<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">p<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">remote<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name><name pos:line="27" pos:column="17">clientConn<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">local<pos:position pos:line="27" pos:column="34"/></name></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">getOutgoingAddress<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">request<pos:position pos:line="28" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="33">p<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">debugs<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="number" pos:line="30" pos:column="12">17<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="16">3<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="19">HERE<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">&lt;&lt;<pos:position pos:line="30" pos:column="32"/></operator> <literal type="string" pos:line="30" pos:column="27">"using client original destination: "<pos:position pos:line="30" pos:column="64"/></literal> <operator pos:line="30" pos:column="65">&lt;&lt;<pos:position pos:line="30" pos:column="73"/></operator> <operator pos:line="30" pos:column="68">*<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="69">p<pos:position pos:line="30" pos:column="70"/></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">serverDestinations<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">push_back<pos:position pos:line="31" pos:column="33"/></name></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">p<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

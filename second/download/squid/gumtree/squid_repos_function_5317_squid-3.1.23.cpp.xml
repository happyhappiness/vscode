<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5317_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIContext<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">appendOutboundData<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><name><name pos:line="2" pos:column="32">ESISegment<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">Pointer<pos:position pos:line="2" pos:column="51"/></name></name></type> <name pos:line="2" pos:column="52">theData<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">outbound<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">.<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">getRaw<pos:position pos:line="4" pos:column="25"/></name></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28"> <block pos:line="4" pos:column="29">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">outbound<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">theData<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">outboundtail<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">=<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="24">outbound<pos:position pos:line="6" pos:column="32"/></name></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then> <else pos:line="7" pos:column="7">else <block pos:line="7" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><call><name><name pos:line="8" pos:column="17">outboundtail<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">next<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">getRaw<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">==<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">outboundtail<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">next<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">theData<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fixupOutboundTail<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">86<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">9<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"ESIContext::appendOutboundData: outbound "<pos:position pos:line="13" pos:column="62"/></literal> <operator pos:line="13" pos:column="63">&lt;&lt;<pos:position pos:line="13" pos:column="71"/></operator> <call><name><name pos:line="13" pos:column="66">outbound<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">.<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="75">getRaw<pos:position pos:line="13" pos:column="81"/></name></name><argument_list pos:line="13" pos:column="81">()<pos:position pos:line="13" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="85"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

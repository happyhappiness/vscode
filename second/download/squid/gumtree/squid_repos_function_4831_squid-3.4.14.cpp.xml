<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4831_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CossState<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">read_<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">buf<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">size_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">size<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">off_t<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">offset<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">STRCB<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type> <name pos:line="2" pos:column="64">callback<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">void<pos:position pos:line="2" pos:column="78"/></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">callback_data<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CossSwapDir<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">SD<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">CossSwapDir<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></operator><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator><call><name pos:line="5" pos:column="38">INDEXSD<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">(<argument><expr><name pos:line="5" pos:column="46">swap_dirn<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="7" pos:column="5">++<pos:position pos:line="7" pos:column="7"/></operator> <call><name><name pos:line="7" pos:column="8">StoreFScoss<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">::<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">GetInstance<pos:position pos:line="7" pos:column="32"/></name></name><argument_list pos:line="7" pos:column="32">()<pos:position pos:line="7" pos:column="34"/></argument_list></call><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name><name pos:line="7" pos:column="35">stats<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">.<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">read<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">ops<pos:position pos:line="7" pos:column="49"/></name></name></expr>;<pos:position pos:line="7" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">read<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">callback<pos:position pos:line="8" pos:column="25"/></name></name> <operator pos:line="8" pos:column="26">==<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">NULL<pos:position pos:line="8" pos:column="33"/></name></expr></argument>)<pos:position pos:line="8" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">read<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">.<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">callback_data<pos:position pos:line="9" pos:column="30"/></name></name> <operator pos:line="9" pos:column="31">==<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="34">NULL<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">read<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">.<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">callback<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">callback<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">read<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">.<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">callback_data<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <call><name pos:line="11" pos:column="26">cbdataReference<pos:position pos:line="11" pos:column="41"/></name><argument_list pos:line="11" pos:column="41">(<argument><expr><name pos:line="11" pos:column="42">callback_data<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">79<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"storeCossRead: offset "<pos:position pos:line="12" pos:column="43"/></literal> <operator pos:line="12" pos:column="44">&lt;&lt;<pos:position pos:line="12" pos:column="52"/></operator> <name pos:line="12" pos:column="47">offset<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">offset_<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">offset<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">flags<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">.<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">reading<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <literal type="boolean" pos:line="14" pos:column="21">true<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">offset<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">+<pos:position pos:line="16" pos:column="18"/></operator> <operator pos:line="16" pos:column="19">(<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">off_t<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">)<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="26">size<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">)<pos:position pos:line="16" pos:column="31"/></operator> <operator pos:line="16" pos:column="32">&gt;<pos:position pos:line="16" pos:column="36"/></operator> <name pos:line="16" pos:column="34">st_size<pos:position pos:line="16" pos:column="41"/></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">size<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">st_size<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">offset<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">requestlen<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">size<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">requestbuf<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">buf<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">requestoffset<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">offset<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">readbuffer<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">==<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">NULL<pos:position pos:line="25" pos:column="27"/></name></expr>)<pos:position pos:line="25" pos:column="28"/></condition><then pos:line="25" pos:column="28"> <block pos:line="25" pos:column="29">{
        <expr_stmt><expr><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name><name pos:line="26" pos:column="13">SD<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">storeCossMemPointerFromDiskOffset<pos:position pos:line="26" pos:column="50"/></name></name><argument_list pos:line="26" pos:column="50">(<argument><expr><call><name><name pos:line="26" pos:column="51">SD<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">-&gt;<pos:position pos:line="26" pos:column="58"/></operator><name pos:line="26" pos:column="55">storeCossFilenoToDiskOffset<pos:position pos:line="26" pos:column="82"/></name></name><argument_list pos:line="26" pos:column="82">(<argument><expr><name pos:line="26" pos:column="83">swap_filen<pos:position pos:line="26" pos:column="93"/></name></expr></argument>)<pos:position pos:line="26" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="96">NULL<pos:position pos:line="26" pos:column="100"/></name></expr></argument>)<pos:position pos:line="26" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="102"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">sfileno<pos:position pos:line="27" pos:column="16"/></name></type> <name pos:line="27" pos:column="17">tempReqdiskoffset<pos:position pos:line="27" pos:column="34"/></name> <init pos:line="27" pos:column="35">= <expr><name pos:line="27" pos:column="37">reqdiskoffset<pos:position pos:line="27" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="51"/></decl_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">reqdiskoffset<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>	<comment type="block" pos:line="28" pos:column="33">/* XXX */</comment>
        <expr_stmt><expr><call><name><name pos:line="29" pos:column="9">SD<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">theFile<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">read<pos:position pos:line="29" pos:column="26"/></name></name><argument_list pos:line="29" pos:column="26">(<argument><expr><operator pos:line="29" pos:column="27">new<pos:position pos:line="29" pos:column="30"/></operator> <call><name pos:line="29" pos:column="31">CossRead<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><call><name pos:line="29" pos:column="40">ReadRequest<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">(<argument><expr><name pos:line="29" pos:column="52">p<pos:position pos:line="29" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="55">st_size<pos:position pos:line="29" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="64">tempReqdiskoffset<pos:position pos:line="29" pos:column="81"/></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="29" pos:column="84">this<pos:position pos:line="29" pos:column="88"/></name></expr></argument>)<pos:position pos:line="29" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <comment type="block" pos:line="31" pos:column="9">/*
         * It was copied from memory in storeCossOpen()
         */</comment>
        <decl_stmt><decl><type><name><name pos:line="34" pos:column="9">ReadRequest<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">::<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">Pointer<pos:position pos:line="34" pos:column="29"/></name></name></type> <name pos:line="34" pos:column="30">readRequest<pos:position pos:line="34" pos:column="41"/></name> <init pos:line="34" pos:column="42">= <expr><operator pos:line="34" pos:column="44">new<pos:position pos:line="34" pos:column="47"/></operator> <call><name pos:line="34" pos:column="48">CossRead<pos:position pos:line="34" pos:column="56"/></name><argument_list pos:line="34" pos:column="56">(<argument><expr><call><name pos:line="34" pos:column="57">ReadRequest<pos:position pos:line="34" pos:column="68"/></name><argument_list pos:line="34" pos:column="68">(
                    <argument><expr><operator pos:line="35" pos:column="21">(<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">char<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">readbuffer<pos:position pos:line="35" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="35" pos:column="40">st_size<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="49">0<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="53">this<pos:position pos:line="35" pos:column="57"/></name></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="59"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="36" pos:column="9">SD<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">-&gt;<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="13">readCompleted<pos:position pos:line="36" pos:column="26"/></name></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">readbuffer<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">st_size<pos:position pos:line="36" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="48">0<pos:position pos:line="36" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="51">readRequest<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

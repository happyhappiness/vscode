<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1913_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">httpHdrMangleList<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">HttpHeader<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">l<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">HttpRequest<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">request<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">AccessLogEntryPointer<pos:position pos:line="2" pos:column="83"/></name> <modifier pos:line="2" pos:column="84">&amp;<pos:position pos:line="2" pos:column="89"/></modifier></type><name pos:line="2" pos:column="85">al<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="89">req_or_rep_t<pos:position pos:line="2" pos:column="101"/></name></type> <name pos:line="2" pos:column="102">req_or_rep<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="113"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpHeaderEntry<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">e<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeaderPos<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">p<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">HttpHeaderInitPos<pos:position pos:line="5" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* check with anonymizer tables */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HeaderManglers<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">hms<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><literal type="null" pos:line="8" pos:column="27">nullptr<pos:position pos:line="8" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HeaderWithAclList<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">headersAdd<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><literal type="null" pos:line="9" pos:column="37">nullptr<pos:position pos:line="9" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>

    <switch pos:line="11" pos:column="5">switch <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">req_or_rep<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition> <block pos:line="11" pos:column="25">{
    <case pos:line="12" pos:column="5">case <expr><name pos:line="12" pos:column="10">ROR_REQUEST<pos:position pos:line="12" pos:column="21"/></name></expr>:<pos:position pos:line="12" pos:column="22"/></case>
        <expr_stmt><expr><name pos:line="13" pos:column="9">hms<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name><name pos:line="13" pos:column="15">Config<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">request_header_access<pos:position pos:line="13" pos:column="43"/></name></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">headersAdd<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">Config<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">request_header_add<pos:position pos:line="14" pos:column="47"/></name></name></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
        <break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break>
    <case pos:line="16" pos:column="5">case <expr><name pos:line="16" pos:column="10">ROR_REPLY<pos:position pos:line="16" pos:column="19"/></name></expr>:<pos:position pos:line="16" pos:column="20"/></case>
        <expr_stmt><expr><name pos:line="17" pos:column="9">hms<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <name><name pos:line="17" pos:column="15">Config<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">reply_header_access<pos:position pos:line="17" pos:column="41"/></name></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">headersAdd<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">Config<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">reply_header_add<pos:position pos:line="18" pos:column="45"/></name></name></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
        <break pos:line="19" pos:column="9">break;<pos:position pos:line="19" pos:column="15"/></break>
    }<pos:position pos:line="20" pos:column="6"/></block></switch>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">hms<pos:position pos:line="22" pos:column="12"/></name></expr>)<pos:position pos:line="22" pos:column="13"/></condition><then pos:line="22" pos:column="13"> <block pos:line="22" pos:column="14">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type> <name pos:line="23" pos:column="13">headers_deleted<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="33"/></decl_stmt>
        <while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">e<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name><name pos:line="24" pos:column="21">l<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">getEntry<pos:position pos:line="24" pos:column="32"/></name></name><argument_list pos:line="24" pos:column="32">(<argument><expr><operator pos:line="24" pos:column="33">&amp;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="34">p<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator></expr>)<pos:position pos:line="24" pos:column="38"/></condition> <block pos:line="24" pos:column="39">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><literal type="number" pos:line="25" pos:column="17">0<pos:position pos:line="25" pos:column="18"/></literal> <operator pos:line="25" pos:column="19">==<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">httpHdrMangle<pos:position pos:line="25" pos:column="35"/></name><argument_list pos:line="25" pos:column="35">(<argument><expr><name pos:line="25" pos:column="36">e<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">request<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">hms<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="26" pos:column="17">l<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">delAt<pos:position pos:line="26" pos:column="25"/></name></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">p<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">headers_deleted<pos:position pos:line="26" pos:column="44"/></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt></block></then></if>
        }<pos:position pos:line="27" pos:column="10"/></block></while>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">headers_deleted<pos:position pos:line="29" pos:column="28"/></name></expr>)<pos:position pos:line="29" pos:column="29"/></condition><then pos:line="29" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="13">l<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">refreshMask<pos:position pos:line="30" pos:column="27"/></name></name><argument_list pos:line="30" pos:column="27">()<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">headersAdd<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">&amp;&amp;<pos:position pos:line="33" pos:column="30"/></operator> <operator pos:line="33" pos:column="23">!<pos:position pos:line="33" pos:column="24"/></operator><call><name><name pos:line="33" pos:column="24">headersAdd<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">-&gt;<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="36">empty<pos:position pos:line="33" pos:column="41"/></name></name><argument_list pos:line="33" pos:column="41">()<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="44"/></condition><then pos:line="33" pos:column="44"> <block pos:line="33" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">httpHdrAdd<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">l<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">request<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">al<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="36">*<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="37">headersAdd<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1248_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CommonPool<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">CommonPool<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Factory<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">unsigned<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">_class<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">CompositePoolNode<pos:position pos:line="2" pos:column="60"/></name><operator pos:line="2" pos:column="60">::<pos:position pos:line="2" pos:column="62"/></operator><name pos:line="2" pos:column="62">Pointer<pos:position pos:line="2" pos:column="69"/></name></name><modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type> <name pos:line="2" pos:column="71">compositeCopy<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CommonPool<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">result<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><operator pos:line="4" pos:column="26">new<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">CommonPool<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">_class<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition> <block pos:line="6" pos:column="21">{

    <case pos:line="8" pos:column="5">case <expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>:<pos:position pos:line="8" pos:column="12"/></case>
        <break pos:line="9" pos:column="9">break;<pos:position pos:line="9" pos:column="15"/></break>

    <case pos:line="11" pos:column="5">case <expr><literal type="number" pos:line="11" pos:column="10">1<pos:position pos:line="11" pos:column="11"/></literal></expr>:<pos:position pos:line="11" pos:column="12"/></case>
        <expr_stmt><expr><name pos:line="12" pos:column="9">compositeCopy<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <operator pos:line="12" pos:column="25">new<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">Aggregate<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">result<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">typeLabel<pos:position pos:line="13" pos:column="26"/></name></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <literal type="string" pos:line="13" pos:column="29">"1"<pos:position pos:line="13" pos:column="32"/></literal></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
        <break pos:line="14" pos:column="9">break;<pos:position pos:line="14" pos:column="15"/></break>

    <case pos:line="16" pos:column="5">case <expr><literal type="number" pos:line="16" pos:column="10">2<pos:position pos:line="16" pos:column="11"/></literal></expr>:<pos:position pos:line="16" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">result<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">-&gt;<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="17">typeLabel<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <literal type="string" pos:line="17" pos:column="29">"2"<pos:position pos:line="17" pos:column="32"/></literal></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
        <block pos:line="18" pos:column="9">{
            <decl_stmt><decl><type><name><name pos:line="19" pos:column="13">DelayVector<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">::<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">Pointer<pos:position pos:line="19" pos:column="33"/></name></name></type> <name pos:line="19" pos:column="34">temp<pos:position pos:line="19" pos:column="38"/></name> <init pos:line="19" pos:column="39">= <expr><operator pos:line="19" pos:column="41">new<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">DelayVector<pos:position pos:line="19" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="57"/></decl_stmt>
            <expr_stmt><expr><name pos:line="20" pos:column="13">compositeCopy<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <call><name><name pos:line="20" pos:column="29">temp<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">.<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">getRaw<pos:position pos:line="20" pos:column="40"/></name></name><argument_list pos:line="20" pos:column="40">()<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="21" pos:column="13">temp<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">push_back<pos:position pos:line="21" pos:column="28"/></name></name> <argument_list pos:line="21" pos:column="29">(<argument><expr><operator pos:line="21" pos:column="30">new<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="34">Aggregate<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="22" pos:column="13">temp<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">push_back<pos:position pos:line="22" pos:column="28"/></name></name><argument_list pos:line="22" pos:column="28">(<argument><expr><operator pos:line="22" pos:column="29">new<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">IndividualPool<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block>
        <break pos:line="24" pos:column="9">break;<pos:position pos:line="24" pos:column="15"/></break>

    <case pos:line="26" pos:column="5">case <expr><literal type="number" pos:line="26" pos:column="10">3<pos:position pos:line="26" pos:column="11"/></literal></expr>:<pos:position pos:line="26" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">result<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">typeLabel<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <literal type="string" pos:line="27" pos:column="29">"3"<pos:position pos:line="27" pos:column="32"/></literal></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
        <block pos:line="28" pos:column="9">{
            <decl_stmt><decl><type><name><name pos:line="29" pos:column="13">DelayVector<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">::<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">Pointer<pos:position pos:line="29" pos:column="33"/></name></name></type> <name pos:line="29" pos:column="34">temp<pos:position pos:line="29" pos:column="38"/></name> <init pos:line="29" pos:column="39">= <expr><operator pos:line="29" pos:column="41">new<pos:position pos:line="29" pos:column="44"/></operator> <name pos:line="29" pos:column="45">DelayVector<pos:position pos:line="29" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="57"/></decl_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">compositeCopy<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">=<pos:position pos:line="30" pos:column="28"/></operator> <call><name><name pos:line="30" pos:column="29">temp<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">.<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">getRaw<pos:position pos:line="30" pos:column="40"/></name></name><argument_list pos:line="30" pos:column="40">()<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">temp<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">push_back<pos:position pos:line="31" pos:column="28"/></name></name> <argument_list pos:line="31" pos:column="29">(<argument><expr><operator pos:line="31" pos:column="30">new<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">Aggregate<pos:position pos:line="31" pos:column="43"/></name></expr></argument>)<pos:position pos:line="31" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">temp<pos:position pos:line="32" pos:column="17"/></name><operator pos:line="32" pos:column="17">-&gt;<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="19">push_back<pos:position pos:line="32" pos:column="28"/></name></name> <argument_list pos:line="32" pos:column="29">(<argument><expr><operator pos:line="32" pos:column="30">new<pos:position pos:line="32" pos:column="33"/></operator> <name pos:line="32" pos:column="34">ClassCNetPool<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">temp<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">push_back<pos:position pos:line="33" pos:column="28"/></name></name> <argument_list pos:line="33" pos:column="29">(<argument><expr><operator pos:line="33" pos:column="30">new<pos:position pos:line="33" pos:column="33"/></operator> <name pos:line="33" pos:column="34">ClassCHostPool<pos:position pos:line="33" pos:column="48"/></name></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block>
        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>

    <case pos:line="37" pos:column="5">case <expr><literal type="number" pos:line="37" pos:column="10">4<pos:position pos:line="37" pos:column="11"/></literal></expr>:<pos:position pos:line="37" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">result<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">typeLabel<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="string" pos:line="38" pos:column="29">"4"<pos:position pos:line="38" pos:column="32"/></literal></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
        <block pos:line="39" pos:column="9">{
            <decl_stmt><decl><type><name><name pos:line="40" pos:column="13">DelayVector<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">::<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">Pointer<pos:position pos:line="40" pos:column="33"/></name></name></type> <name pos:line="40" pos:column="34">temp<pos:position pos:line="40" pos:column="38"/></name> <init pos:line="40" pos:column="39">= <expr><operator pos:line="40" pos:column="41">new<pos:position pos:line="40" pos:column="44"/></operator> <name pos:line="40" pos:column="45">DelayVector<pos:position pos:line="40" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="57"/></decl_stmt>
            <expr_stmt><expr><name pos:line="41" pos:column="13">compositeCopy<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">=<pos:position pos:line="41" pos:column="28"/></operator> <call><name><name pos:line="41" pos:column="29">temp<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">.<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">getRaw<pos:position pos:line="41" pos:column="40"/></name></name><argument_list pos:line="41" pos:column="40">()<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">temp<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">-&gt;<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="19">push_back<pos:position pos:line="42" pos:column="28"/></name></name> <argument_list pos:line="42" pos:column="29">(<argument><expr><operator pos:line="42" pos:column="30">new<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">Aggregate<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="43" pos:column="13">temp<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">-&gt;<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="19">push_back<pos:position pos:line="43" pos:column="28"/></name></name> <argument_list pos:line="43" pos:column="29">(<argument><expr><operator pos:line="43" pos:column="30">new<pos:position pos:line="43" pos:column="33"/></operator> <name pos:line="43" pos:column="34">ClassCNetPool<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">temp<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">push_back<pos:position pos:line="44" pos:column="28"/></name></name> <argument_list pos:line="44" pos:column="29">(<argument><expr><operator pos:line="44" pos:column="30">new<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="34">ClassCHostPool<pos:position pos:line="44" pos:column="48"/></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="50"/></expr_stmt>
<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if<pos:position pos:line="45" pos:column="4"/></cpp:directive> <expr><name pos:line="45" pos:column="5">USE_AUTH<pos:position pos:line="45" pos:column="13"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">temp<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">push_back<pos:position pos:line="46" pos:column="28"/></name></name> <argument_list pos:line="46" pos:column="29">(<argument><expr><operator pos:line="46" pos:column="30">new<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="34">DelayUser<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="48" pos:column="10"/></block>
        <break pos:line="49" pos:column="9">break;<pos:position pos:line="49" pos:column="15"/></break>

    <case pos:line="51" pos:column="5">case <expr><literal type="number" pos:line="51" pos:column="10">5<pos:position pos:line="51" pos:column="11"/></literal></expr>:<pos:position pos:line="51" pos:column="12"/></case>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">result<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">typeLabel<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <literal type="string" pos:line="52" pos:column="29">"5"<pos:position pos:line="52" pos:column="32"/></literal></expr>;<pos:position pos:line="52" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">compositeCopy<pos:position pos:line="53" pos:column="22"/></name> <operator pos:line="53" pos:column="23">=<pos:position pos:line="53" pos:column="24"/></operator> <operator pos:line="53" pos:column="25">new<pos:position pos:line="53" pos:column="28"/></operator> <name pos:line="53" pos:column="29">DelayTagged<pos:position pos:line="53" pos:column="40"/></name></expr>;<pos:position pos:line="53" pos:column="41"/></expr_stmt>
        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>

    <default pos:line="56" pos:column="5">default:<pos:position pos:line="56" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">fatal<pos:position pos:line="57" pos:column="14"/></name> <argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="string" pos:line="57" pos:column="16">"unknown delay pool class"<pos:position pos:line="57" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
        <return pos:line="58" pos:column="9">return <expr><name pos:line="58" pos:column="16">NULL<pos:position pos:line="58" pos:column="20"/></name></expr>;<pos:position pos:line="58" pos:column="21"/></return>
    }<pos:position pos:line="59" pos:column="6"/></block></switch><empty_stmt pos:line="59" pos:column="6">;<pos:position pos:line="59" pos:column="7"/></empty_stmt>

    <return pos:line="61" pos:column="5">return <expr><name pos:line="61" pos:column="12">result<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_816_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpReply<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">sanityCheckStartLine<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">MemBuf<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">buf<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">size_t<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">hdr_len<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="68">Http<pos:position pos:line="2" pos:column="72"/></name><operator pos:line="2" pos:column="72">::<pos:position pos:line="2" pos:column="74"/></operator><name pos:line="2" pos:column="74">StatusCode<pos:position pos:line="2" pos:column="84"/></name></name> <modifier pos:line="2" pos:column="85">*<pos:position pos:line="2" pos:column="86"/></modifier></type><name pos:line="2" pos:column="86">error<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// hack warning: using psize instead of size here due to type mismatches with MemBuf.</comment>

    <comment type="line" pos:line="6" pos:column="5">// content is long enough to possibly hold a reply</comment>
    <comment type="line" pos:line="7" pos:column="5">// 4 being magic size of a 3-digit number plus space delimiter</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">( <expr><call><name><name pos:line="8" pos:column="10">buf<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">contentSize<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call> <operator pos:line="8" pos:column="29">&lt;<pos:position pos:line="8" pos:column="33"/></operator> <operator pos:line="8" pos:column="31">(<pos:position pos:line="8" pos:column="32"/></operator><call><name><name pos:line="8" pos:column="32">protoPrefix<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">psize<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">()<pos:position pos:line="8" pos:column="51"/></argument_list></call> <operator pos:line="8" pos:column="52">+<pos:position pos:line="8" pos:column="53"/></operator> <literal type="number" pos:line="8" pos:column="54">4<pos:position pos:line="8" pos:column="55"/></literal><operator pos:line="8" pos:column="55">)<pos:position pos:line="8" pos:column="56"/></operator></expr> )<pos:position pos:line="8" pos:column="58"/></condition><then pos:line="8" pos:column="58"> <block pos:line="8" pos:column="59">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">hdr_len<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&gt;<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25"> <block pos:line="9" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">debugs<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="number" pos:line="10" pos:column="20">58<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="24">3<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">HERE<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&lt;&lt;<pos:position pos:line="10" pos:column="40"/></operator> <literal type="string" pos:line="10" pos:column="35">"Too small reply header ("<pos:position pos:line="10" pos:column="61"/></literal> <operator pos:line="10" pos:column="62">&lt;&lt;<pos:position pos:line="10" pos:column="70"/></operator> <name pos:line="10" pos:column="65">hdr_len<pos:position pos:line="10" pos:column="72"/></name> <operator pos:line="10" pos:column="73">&lt;&lt;<pos:position pos:line="10" pos:column="81"/></operator> <literal type="string" pos:line="10" pos:column="76">" bytes)"<pos:position pos:line="10" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="87"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">error<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <name><name pos:line="11" pos:column="22">Http<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">::<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">scInvalidHeader<pos:position pos:line="11" pos:column="43"/></name></name></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then></if>
        <return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">false<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">pos<pos:position pos:line="16" pos:column="12"/></name></decl>;<pos:position pos:line="16" pos:column="13"/></decl_stmt>
    <comment type="line" pos:line="17" pos:column="5">// catch missing or mismatched protocol identifier</comment>
    <comment type="line" pos:line="18" pos:column="5">// allow special-case for ICY protocol (non-HTTP identifier) in response to faked HTTP request.</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strncmp<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><call><name><name pos:line="19" pos:column="17">buf<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">content<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">()<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="33">"ICY"<pos:position pos:line="19" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="40">3<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call> <operator pos:line="19" pos:column="43">==<pos:position pos:line="19" pos:column="45"/></operator> <literal type="number" pos:line="19" pos:column="46">0<pos:position pos:line="19" pos:column="47"/></literal></expr>)<pos:position pos:line="19" pos:column="48"/></condition><then pos:line="19" pos:column="48"> <block pos:line="19" pos:column="49">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">protoPrefix<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <literal type="string" pos:line="20" pos:column="23">"ICY"<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">pos<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name><name pos:line="21" pos:column="15">protoPrefix<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">psize<pos:position pos:line="21" pos:column="32"/></name></name><argument_list pos:line="21" pos:column="32">()<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <else pos:line="22" pos:column="7">else <block pos:line="22" pos:column="12">{

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name><name pos:line="24" pos:column="13">protoPrefix<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">cmp<pos:position pos:line="24" pos:column="28"/></name></name><argument_list pos:line="24" pos:column="28">(<argument><expr><call><name><name pos:line="24" pos:column="29">buf<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">-&gt;<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="34">content<pos:position pos:line="24" pos:column="41"/></name></name><argument_list pos:line="24" pos:column="41">()<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="45">protoPrefix<pos:position pos:line="24" pos:column="56"/></name><operator pos:line="24" pos:column="56">.<pos:position pos:line="24" pos:column="57"/></operator><name pos:line="24" pos:column="57">size<pos:position pos:line="24" pos:column="61"/></name></name><argument_list pos:line="24" pos:column="61">()<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call> <operator pos:line="24" pos:column="65">!=<pos:position pos:line="24" pos:column="67"/></operator> <literal type="number" pos:line="24" pos:column="68">0<pos:position pos:line="24" pos:column="69"/></literal></expr>)<pos:position pos:line="24" pos:column="70"/></condition><then pos:line="24" pos:column="70"> <block pos:line="24" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">58<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="24">3<pos:position pos:line="25" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"HttpReply::sanityCheckStartLine: missing protocol prefix ("<pos:position pos:line="25" pos:column="87"/></literal> <operator pos:line="25" pos:column="88">&lt;&lt;<pos:position pos:line="25" pos:column="96"/></operator> <name pos:line="25" pos:column="91">protoPrefix<pos:position pos:line="25" pos:column="102"/></name> <operator pos:line="25" pos:column="103">&lt;&lt;<pos:position pos:line="25" pos:column="111"/></operator> <literal type="string" pos:line="25" pos:column="106">") in '"<pos:position pos:line="25" pos:column="114"/></literal> <operator pos:line="25" pos:column="115">&lt;&lt;<pos:position pos:line="25" pos:column="123"/></operator> <call><name><name pos:line="25" pos:column="118">buf<pos:position pos:line="25" pos:column="121"/></name><operator pos:line="25" pos:column="121">-&gt;<pos:position pos:line="25" pos:column="126"/></operator><name pos:line="25" pos:column="123">content<pos:position pos:line="25" pos:column="130"/></name></name><argument_list pos:line="25" pos:column="130">()<pos:position pos:line="25" pos:column="132"/></argument_list></call> <operator pos:line="25" pos:column="133">&lt;&lt;<pos:position pos:line="25" pos:column="141"/></operator> <literal type="string" pos:line="25" pos:column="136">"'"<pos:position pos:line="25" pos:column="139"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="141"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">error<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">=<pos:position pos:line="26" pos:column="21"/></operator> <name><name pos:line="26" pos:column="22">Http<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">::<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">scInvalidHeader<pos:position pos:line="26" pos:column="43"/></name></name></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><literal type="boolean" pos:line="27" pos:column="20">false<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="30" pos:column="9">// catch missing or negative status value (negative '-' is not a digit)</comment>
        <expr_stmt><expr><name pos:line="31" pos:column="9">pos<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">=<pos:position pos:line="31" pos:column="14"/></operator> <call><name><name pos:line="31" pos:column="15">protoPrefix<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">.<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">psize<pos:position pos:line="31" pos:column="32"/></name></name><argument_list pos:line="31" pos:column="32">()<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>

        <comment type="line" pos:line="33" pos:column="9">// skip arbitrary number of digits and a dot in the verion portion</comment>
        <while pos:line="34" pos:column="9">while <condition pos:line="34" pos:column="15">( <expr><name pos:line="34" pos:column="17">pos<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;=<pos:position pos:line="34" pos:column="26"/></operator> <call><name><name pos:line="34" pos:column="24">buf<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">contentSize<pos:position pos:line="34" pos:column="40"/></name></name><argument_list pos:line="34" pos:column="40">()<pos:position pos:line="34" pos:column="42"/></argument_list></call> <operator pos:line="34" pos:column="43">&amp;&amp;<pos:position pos:line="34" pos:column="53"/></operator> <operator pos:line="34" pos:column="46">(<pos:position pos:line="34" pos:column="47"/></operator><operator pos:line="34" pos:column="47">*<pos:position pos:line="34" pos:column="48"/></operator><operator pos:line="34" pos:column="48">(<pos:position pos:line="34" pos:column="49"/></operator><call><name><name pos:line="34" pos:column="49">buf<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">-&gt;<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="54">content<pos:position pos:line="34" pos:column="61"/></name></name><argument_list pos:line="34" pos:column="61">()<pos:position pos:line="34" pos:column="63"/></argument_list></call><operator pos:line="34" pos:column="63">+<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="64">pos<pos:position pos:line="34" pos:column="67"/></name><operator pos:line="34" pos:column="67">)<pos:position pos:line="34" pos:column="68"/></operator> <operator pos:line="34" pos:column="69">==<pos:position pos:line="34" pos:column="71"/></operator> <literal type="char" pos:line="34" pos:column="72">'.'<pos:position pos:line="34" pos:column="75"/></literal> <operator pos:line="34" pos:column="76">||<pos:position pos:line="34" pos:column="78"/></operator> <call><name pos:line="34" pos:column="79">xisdigit<pos:position pos:line="34" pos:column="87"/></name><argument_list pos:line="34" pos:column="87">(<argument><expr><operator pos:line="34" pos:column="88">*<pos:position pos:line="34" pos:column="89"/></operator><operator pos:line="34" pos:column="89">(<pos:position pos:line="34" pos:column="90"/></operator><call><name><name pos:line="34" pos:column="90">buf<pos:position pos:line="34" pos:column="93"/></name><operator pos:line="34" pos:column="93">-&gt;<pos:position pos:line="34" pos:column="98"/></operator><name pos:line="34" pos:column="95">content<pos:position pos:line="34" pos:column="102"/></name></name><argument_list pos:line="34" pos:column="102">()<pos:position pos:line="34" pos:column="104"/></argument_list></call><operator pos:line="34" pos:column="104">+<pos:position pos:line="34" pos:column="105"/></operator><name pos:line="34" pos:column="105">pos<pos:position pos:line="34" pos:column="108"/></name><operator pos:line="34" pos:column="108">)<pos:position pos:line="34" pos:column="109"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="110"/></argument_list></call> <operator pos:line="34" pos:column="111">)<pos:position pos:line="34" pos:column="112"/></operator></expr> )<pos:position pos:line="34" pos:column="114"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="115">++<pos:position pos:line="34" pos:column="117"/></operator><name pos:line="34" pos:column="117">pos<pos:position pos:line="34" pos:column="120"/></name></expr>;<pos:position pos:line="34" pos:column="121"/></expr_stmt></block></while>

        <comment type="line" pos:line="36" pos:column="9">// catch missing version info</comment>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">pos<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <call><name><name pos:line="37" pos:column="20">protoPrefix<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">psize<pos:position pos:line="37" pos:column="37"/></name></name><argument_list pos:line="37" pos:column="37">()<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="40"/></condition><then pos:line="37" pos:column="40"> <block pos:line="37" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">58<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="24">3<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"HttpReply::sanityCheckStartLine: missing protocol version numbers (ie. "<pos:position pos:line="38" pos:column="100"/></literal> <operator pos:line="38" pos:column="101">&lt;&lt;<pos:position pos:line="38" pos:column="109"/></operator> <name pos:line="38" pos:column="104">protoPrefix<pos:position pos:line="38" pos:column="115"/></name> <operator pos:line="38" pos:column="116">&lt;&lt;<pos:position pos:line="38" pos:column="124"/></operator> <literal type="string" pos:line="38" pos:column="119">"/1.0) in '"<pos:position pos:line="38" pos:column="131"/></literal> <operator pos:line="38" pos:column="132">&lt;&lt;<pos:position pos:line="38" pos:column="140"/></operator> <call><name><name pos:line="38" pos:column="135">buf<pos:position pos:line="38" pos:column="138"/></name><operator pos:line="38" pos:column="138">-&gt;<pos:position pos:line="38" pos:column="143"/></operator><name pos:line="38" pos:column="140">content<pos:position pos:line="38" pos:column="147"/></name></name><argument_list pos:line="38" pos:column="147">()<pos:position pos:line="38" pos:column="149"/></argument_list></call> <operator pos:line="38" pos:column="150">&lt;&lt;<pos:position pos:line="38" pos:column="158"/></operator> <literal type="string" pos:line="38" pos:column="153">"'"<pos:position pos:line="38" pos:column="156"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="157"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="158"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="39" pos:column="13">*<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">error<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name><name pos:line="39" pos:column="22">Http<pos:position pos:line="39" pos:column="26"/></name><operator pos:line="39" pos:column="26">::<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">scInvalidHeader<pos:position pos:line="39" pos:column="43"/></name></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><literal type="boolean" pos:line="40" pos:column="20">false<pos:position pos:line="40" pos:column="25"/></literal></expr>;<pos:position pos:line="40" pos:column="26"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="44" pos:column="5">// skip arbitrary number of spaces...</comment>
    <while pos:line="45" pos:column="5">while <condition pos:line="45" pos:column="11">(<expr><name pos:line="45" pos:column="12">pos<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">&lt;=<pos:position pos:line="45" pos:column="21"/></operator> <call><name><name pos:line="45" pos:column="19">buf<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">-&gt;<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="24">contentSize<pos:position pos:line="45" pos:column="35"/></name></name><argument_list pos:line="45" pos:column="35">()<pos:position pos:line="45" pos:column="37"/></argument_list></call> <operator pos:line="45" pos:column="38">&amp;&amp;<pos:position pos:line="45" pos:column="48"/></operator> <operator pos:line="45" pos:column="41">(<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">char<pos:position pos:line="45" pos:column="46"/></name><operator pos:line="45" pos:column="46">)<pos:position pos:line="45" pos:column="47"/></operator><operator pos:line="45" pos:column="47">*<pos:position pos:line="45" pos:column="48"/></operator><operator pos:line="45" pos:column="48">(<pos:position pos:line="45" pos:column="49"/></operator><call><name><name pos:line="45" pos:column="49">buf<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">-&gt;<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="54">content<pos:position pos:line="45" pos:column="61"/></name></name><argument_list pos:line="45" pos:column="61">()<pos:position pos:line="45" pos:column="63"/></argument_list></call><operator pos:line="45" pos:column="63">+<pos:position pos:line="45" pos:column="64"/></operator><name pos:line="45" pos:column="64">pos<pos:position pos:line="45" pos:column="67"/></name><operator pos:line="45" pos:column="67">)<pos:position pos:line="45" pos:column="68"/></operator> <operator pos:line="45" pos:column="69">==<pos:position pos:line="45" pos:column="71"/></operator> <literal type="char" pos:line="45" pos:column="72">' '<pos:position pos:line="45" pos:column="75"/></literal></expr>)<pos:position pos:line="45" pos:column="76"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="45" pos:column="77">++<pos:position pos:line="45" pos:column="79"/></operator><name pos:line="45" pos:column="79">pos<pos:position pos:line="45" pos:column="82"/></name></expr>;<pos:position pos:line="45" pos:column="83"/></expr_stmt></block></while>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">pos<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">&lt;<pos:position pos:line="47" pos:column="17"/></operator> <call><name><name pos:line="47" pos:column="15">buf<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">contentSize<pos:position pos:line="47" pos:column="31"/></name></name><argument_list pos:line="47" pos:column="31">()<pos:position pos:line="47" pos:column="33"/></argument_list></call> <operator pos:line="47" pos:column="34">&amp;&amp;<pos:position pos:line="47" pos:column="44"/></operator> <operator pos:line="47" pos:column="37">!<pos:position pos:line="47" pos:column="38"/></operator><call><name pos:line="47" pos:column="38">xisdigit<pos:position pos:line="47" pos:column="46"/></name><argument_list pos:line="47" pos:column="46">(<argument><expr><operator pos:line="47" pos:column="47">*<pos:position pos:line="47" pos:column="48"/></operator><operator pos:line="47" pos:column="48">(<pos:position pos:line="47" pos:column="49"/></operator><call><name><name pos:line="47" pos:column="49">buf<pos:position pos:line="47" pos:column="52"/></name><operator pos:line="47" pos:column="52">-&gt;<pos:position pos:line="47" pos:column="57"/></operator><name pos:line="47" pos:column="54">content<pos:position pos:line="47" pos:column="61"/></name></name><argument_list pos:line="47" pos:column="61">()<pos:position pos:line="47" pos:column="63"/></argument_list></call><operator pos:line="47" pos:column="63">+<pos:position pos:line="47" pos:column="64"/></operator><name pos:line="47" pos:column="64">pos<pos:position pos:line="47" pos:column="67"/></name><operator pos:line="47" pos:column="67">)<pos:position pos:line="47" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="47" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="70"/></condition><then pos:line="47" pos:column="70"> <block pos:line="47" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">debugs<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="number" pos:line="48" pos:column="16">58<pos:position pos:line="48" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="20">3<pos:position pos:line="48" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="23">"HttpReply::sanityCheckStartLine: missing or invalid status number in '"<pos:position pos:line="48" pos:column="95"/></literal> <operator pos:line="48" pos:column="96">&lt;&lt;<pos:position pos:line="48" pos:column="104"/></operator> <call><name><name pos:line="48" pos:column="99">buf<pos:position pos:line="48" pos:column="102"/></name><operator pos:line="48" pos:column="102">-&gt;<pos:position pos:line="48" pos:column="107"/></operator><name pos:line="48" pos:column="104">content<pos:position pos:line="48" pos:column="111"/></name></name><argument_list pos:line="48" pos:column="111">()<pos:position pos:line="48" pos:column="113"/></argument_list></call> <operator pos:line="48" pos:column="114">&lt;&lt;<pos:position pos:line="48" pos:column="122"/></operator> <literal type="string" pos:line="48" pos:column="117">"'"<pos:position pos:line="48" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="122"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">error<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <name><name pos:line="49" pos:column="18">Http<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">::<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">scInvalidHeader<pos:position pos:line="49" pos:column="39"/></name></name></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><literal type="boolean" pos:line="50" pos:column="16">false<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <return pos:line="53" pos:column="5">return <expr><literal type="boolean" pos:line="53" pos:column="12">true<pos:position pos:line="53" pos:column="16"/></literal></expr>;<pos:position pos:line="53" pos:column="17"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

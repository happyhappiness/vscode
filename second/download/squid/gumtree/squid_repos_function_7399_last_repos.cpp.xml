<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7399_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">noteNegotiationError<pos:position pos:line="2" pos:column="46"/></name></name><parameter_list pos:line="2" pos:column="46">(<parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">int<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">ret<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="62">const<pos:position pos:line="2" pos:column="67"/></specifier> <name pos:line="2" pos:column="68">int<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">ssl_error<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="83">const<pos:position pos:line="2" pos:column="88"/></specifier> <name pos:line="2" pos:column="89">int<pos:position pos:line="2" pos:column="92"/></name></type> <name pos:line="2" pos:column="93">ssl_lib_error<pos:position pos:line="2" pos:column="106"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="107"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><call><name pos:line="4" pos:column="5">defined<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">EPROTO<pos:position pos:line="4" pos:column="19"/></name></expr></argument>)<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">sysErrNo<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">EPROTO<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
<cpp:else pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">else<pos:position pos:line="6" pos:column="6"/></cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">sysErrNo<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name pos:line="7" pos:column="20">EACCES<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">USE_OPENSSL<pos:position pos:line="10" pos:column="16"/></name></expr></cpp:if>
    <comment type="line" pos:line="11" pos:column="5">// store/report errno when ssl_error is SSL_ERROR_SYSCALL, ssl_lib_error is 0, and ret is -1</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ssl_error<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">==<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">SSL_ERROR_SYSCALL<pos:position pos:line="12" pos:column="39"/></name> <operator pos:line="12" pos:column="40">&amp;&amp;<pos:position pos:line="12" pos:column="50"/></operator> <name pos:line="12" pos:column="43">ret<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">==<pos:position pos:line="12" pos:column="49"/></operator> <operator pos:line="12" pos:column="50">-<pos:position pos:line="12" pos:column="51"/></operator><literal type="number" pos:line="12" pos:column="51">1<pos:position pos:line="12" pos:column="52"/></literal> <operator pos:line="12" pos:column="53">&amp;&amp;<pos:position pos:line="12" pos:column="63"/></operator> <name pos:line="12" pos:column="56">ssl_lib_error<pos:position pos:line="12" pos:column="69"/></name> <operator pos:line="12" pos:column="70">==<pos:position pos:line="12" pos:column="72"/></operator> <literal type="number" pos:line="12" pos:column="73">0<pos:position pos:line="12" pos:column="74"/></literal></expr>)<pos:position pos:line="12" pos:column="75"/></condition><then pos:line="12" pos:column="75">
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">sysErrNo<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">errno<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></then></if>
<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">xerr<pos:position pos:line="15" pos:column="13"/></name> <init pos:line="15" pos:column="14">= <expr><name pos:line="15" pos:column="16">errno<pos:position pos:line="15" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="17" pos:column="5">const<pos:position pos:line="17" pos:column="10"/></specifier> <name pos:line="17" pos:column="11">int<pos:position pos:line="17" pos:column="14"/></name></type> <name pos:line="17" pos:column="15">fd<pos:position pos:line="17" pos:column="17"/></name> <init pos:line="17" pos:column="18">= <expr><call><name pos:line="17" pos:column="20">serverConnection<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">()<pos:position pos:line="17" pos:column="38"/></argument_list></call><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">fd<pos:position pos:line="17" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">83<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="16">DBG_IMPORTANT<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="31">"ERROR: negotiating TLS on FD "<pos:position pos:line="18" pos:column="62"/></literal> <operator pos:line="18" pos:column="63">&lt;&lt;<pos:position pos:line="18" pos:column="71"/></operator> <name pos:line="18" pos:column="66">fd<pos:position pos:line="18" pos:column="68"/></name> <operator pos:line="18" pos:column="69">&lt;&lt;<pos:position pos:line="18" pos:column="77"/></operator>
           <literal type="string" pos:line="19" pos:column="12">": "<pos:position pos:line="19" pos:column="16"/></literal> <operator pos:line="19" pos:column="17">&lt;&lt;<pos:position pos:line="19" pos:column="25"/></operator> <call><name><name pos:line="19" pos:column="20">Security<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">::<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">ErrorString<pos:position pos:line="19" pos:column="41"/></name></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">ssl_lib_error<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call> <operator pos:line="19" pos:column="57">&lt;&lt;<pos:position pos:line="19" pos:column="65"/></operator> <literal type="string" pos:line="19" pos:column="60">" ("<pos:position pos:line="19" pos:column="64"/></literal> <operator pos:line="19" pos:column="65">&lt;&lt;<pos:position pos:line="19" pos:column="73"/></operator>
           <name pos:line="20" pos:column="12">ssl_error<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&lt;&lt;<pos:position pos:line="20" pos:column="30"/></operator> <literal type="string" pos:line="20" pos:column="25">"/"<pos:position pos:line="20" pos:column="28"/></literal> <operator pos:line="20" pos:column="29">&lt;&lt;<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="32">ret<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">&lt;&lt;<pos:position pos:line="20" pos:column="44"/></operator> <literal type="string" pos:line="20" pos:column="39">"/"<pos:position pos:line="20" pos:column="42"/></literal> <operator pos:line="20" pos:column="43">&lt;&lt;<pos:position pos:line="20" pos:column="51"/></operator> <name pos:line="20" pos:column="46">xerr<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">&lt;&lt;<pos:position pos:line="20" pos:column="59"/></operator> <literal type="string" pos:line="20" pos:column="54">")"<pos:position pos:line="20" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="22" pos:column="5">ErrorState<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">anErr<pos:position pos:line="22" pos:column="22"/></name> <init pos:line="22" pos:column="23">= <expr><name pos:line="22" pos:column="25">NULL<pos:position pos:line="22" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="30"/></decl_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">request<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">!=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">NULL<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">anErr<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name><name pos:line="24" pos:column="17">ErrorState<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">::<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">NewForwarding<pos:position pos:line="24" pos:column="42"/></name></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="24" pos:column="66"/></name></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="68">request<pos:position pos:line="24" pos:column="75"/></name><operator pos:line="24" pos:column="75">.<pos:position pos:line="24" pos:column="76"/></operator><name pos:line="24" pos:column="76">getRaw<pos:position pos:line="24" pos:column="82"/></name></name><argument_list pos:line="24" pos:column="82">()<pos:position pos:line="24" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="86"/></expr_stmt></block></then>
    <else pos:line="25" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">anErr<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">new<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">ErrorState<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="57">Http<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">::<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="63">scServiceUnavailable<pos:position pos:line="26" pos:column="83"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="85">NULL<pos:position pos:line="26" pos:column="89"/></name></expr></argument>)<pos:position pos:line="26" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="91"/></expr_stmt></block></else></if>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">anErr<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">xerrno<pos:position pos:line="27" pos:column="18"/></name></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <name pos:line="27" pos:column="21">sysErrNo<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>

<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><name pos:line="29" pos:column="5">USE_OPENSSL<pos:position pos:line="29" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="30" pos:column="5">Security<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">::<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">SessionPointer<pos:position pos:line="30" pos:column="29"/></name></name></type> <name pos:line="30" pos:column="30">session<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name><name pos:line="30" pos:column="38">fd_table<pos:position pos:line="30" pos:column="46"/></name><index pos:line="30" pos:column="46">[<expr><name pos:line="30" pos:column="47">fd<pos:position pos:line="30" pos:column="49"/></name></expr>]<pos:position pos:line="30" pos:column="50"/></index></name><operator pos:line="30" pos:column="50">.<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="51">ssl<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></decl>;<pos:position pos:line="30" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">Ssl<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">::<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">ErrorDetail<pos:position pos:line="31" pos:column="21"/></name></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">errFromFailure<pos:position pos:line="31" pos:column="37"/></name> <init pos:line="31" pos:column="38">= <expr><cast type="static" pos:line="31" pos:column="40">static_cast<argument_list type="generic" pos:line="31" pos:column="51">&lt;<argument><expr><name><name pos:line="31" pos:column="52">Ssl<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">::<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="57">ErrorDetail<pos:position pos:line="31" pos:column="68"/></name></name> <operator pos:line="31" pos:column="69">*<pos:position pos:line="31" pos:column="70"/></operator></expr></argument>&gt;<pos:position pos:line="31" pos:column="74"/></argument_list><argument_list pos:line="31" pos:column="71">(<argument><expr><call><name pos:line="31" pos:column="72">SSL_get_ex_data<pos:position pos:line="31" pos:column="87"/></name><argument_list pos:line="31" pos:column="87">(<argument><expr><call><name><name pos:line="31" pos:column="88">session<pos:position pos:line="31" pos:column="95"/></name><operator pos:line="31" pos:column="95">.<pos:position pos:line="31" pos:column="96"/></operator><name pos:line="31" pos:column="96">get<pos:position pos:line="31" pos:column="99"/></name></name><argument_list pos:line="31" pos:column="99">()<pos:position pos:line="31" pos:column="101"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="31" pos:column="103">ssl_ex_index_ssl_error_detail<pos:position pos:line="31" pos:column="132"/></name></expr></argument>)<pos:position pos:line="31" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="134"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="31" pos:column="135"/></decl_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">errFromFailure<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">!=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">NULL<pos:position pos:line="32" pos:column="31"/></name></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
        <comment type="line" pos:line="33" pos:column="9">// The errFromFailure is attached to the ssl object</comment>
        <comment type="line" pos:line="34" pos:column="9">// and will be released when ssl object destroyed.</comment>
        <comment type="line" pos:line="35" pos:column="9">// Copy errFromFailure to a new Ssl::ErrorDetail object</comment>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">anErr<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">detail<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">=<pos:position pos:line="36" pos:column="24"/></operator> <operator pos:line="36" pos:column="25">new<pos:position pos:line="36" pos:column="28"/></operator> <call><name><name pos:line="36" pos:column="29">Ssl<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">::<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="34">ErrorDetail<pos:position pos:line="36" pos:column="45"/></name></name><argument_list pos:line="36" pos:column="45">(<argument><expr><operator pos:line="36" pos:column="46">*<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="47">errFromFailure<pos:position pos:line="36" pos:column="61"/></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then> <else pos:line="37" pos:column="7">else <block pos:line="37" pos:column="12">{
        <comment type="line" pos:line="38" pos:column="9">// server_cert can be NULL here</comment>
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">X509<pos:position pos:line="39" pos:column="13"/></name> <modifier pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></modifier></type><name pos:line="39" pos:column="15">server_cert<pos:position pos:line="39" pos:column="26"/></name> <init pos:line="39" pos:column="27">= <expr><call><name pos:line="39" pos:column="29">SSL_get_peer_certificate<pos:position pos:line="39" pos:column="53"/></name><argument_list pos:line="39" pos:column="53">(<argument><expr><call><name><name pos:line="39" pos:column="54">session<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">.<pos:position pos:line="39" pos:column="62"/></operator><name pos:line="39" pos:column="62">get<pos:position pos:line="39" pos:column="65"/></name></name><argument_list pos:line="39" pos:column="65">()<pos:position pos:line="39" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="69"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">anErr<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">detail<pos:position pos:line="40" pos:column="22"/></name></name> <operator pos:line="40" pos:column="23">=<pos:position pos:line="40" pos:column="24"/></operator> <operator pos:line="40" pos:column="25">new<pos:position pos:line="40" pos:column="28"/></operator> <call><name><name pos:line="40" pos:column="29">Ssl<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">::<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="34">ErrorDetail<pos:position pos:line="40" pos:column="45"/></name></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">SQUID_ERR_SSL_HANDSHAKE<pos:position pos:line="40" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="71">server_cert<pos:position pos:line="40" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="84">NULL<pos:position pos:line="40" pos:column="88"/></name></expr></argument>)<pos:position pos:line="40" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">X509_free<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">server_cert<pos:position pos:line="41" pos:column="30"/></name></expr></argument>)<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">ssl_lib_error<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">!=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">SSL_ERROR_NONE<pos:position pos:line="44" pos:column="40"/></name></expr>)<pos:position pos:line="44" pos:column="41"/></condition><then pos:line="44" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="45" pos:column="9">anErr<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">detail<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">-&gt;<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="24">setLibError<pos:position pos:line="45" pos:column="35"/></name></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">ssl_lib_error<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">noteNegotiationDone<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">anErr<pos:position pos:line="48" pos:column="30"/></name></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">bail<pos:position pos:line="49" pos:column="9"/></name><argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">anErr<pos:position pos:line="49" pos:column="15"/></name></expr></argument>)<pos:position pos:line="49" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

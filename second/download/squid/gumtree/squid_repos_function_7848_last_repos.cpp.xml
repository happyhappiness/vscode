<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7848_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">xstatvfs<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">path<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">statvfs<pos:position pos:line="2" pos:column="42"/></name></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">sfs<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><operator pos:line="4" pos:column="5">!<pos:position pos:line="4" pos:column="6"/></operator><name pos:line="4" pos:column="6">HAVE_STATFS<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">&amp;&amp;<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="21">_SQUID_WINDOWS_<pos:position pos:line="4" pos:column="36"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">drive<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">4<pos:position pos:line="5" pos:column="17"/></literal></expr>]<pos:position pos:line="5" pos:column="18"/></index></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">DWORD<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">spc<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">bps<pos:position pos:line="6" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="21">freec<pos:position pos:line="6" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="28">totalc<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">DWORD<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">vsn<pos:position pos:line="7" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="16">maxlen<pos:position pos:line="7" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="7" pos:column="24">flags<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">sfs<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14"> <block pos:line="9" pos:column="15">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">errno<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">EINVAL<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">strncpy<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">drive<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">path<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="26">2<pos:position pos:line="13" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">drive<pos:position pos:line="14" pos:column="10"/></name><index pos:line="14" pos:column="10">[<expr><literal type="number" pos:line="14" pos:column="11">2<pos:position pos:line="14" pos:column="12"/></literal></expr>]<pos:position pos:line="14" pos:column="13"/></index></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="char" pos:line="14" pos:column="16">'\0'<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">strcat<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">drive<pos:position pos:line="15" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"\\"<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">GetDiskFreeSpace<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">drive<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="34">&amp;<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="35">spc<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="40">&amp;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="41">bps<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="46">&amp;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="47">freec<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="54">&amp;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="55">totalc<pos:position pos:line="17" pos:column="61"/></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="63"/></condition><then pos:line="17" pos:column="63"> <block pos:line="17" pos:column="64">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">errno<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">ENOENT<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><operator pos:line="19" pos:column="16">-<pos:position pos:line="19" pos:column="17"/></operator><literal type="number" pos:line="19" pos:column="17">1<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">GetVolumeInformation<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">drive<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">NULL<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="44">0<pos:position pos:line="21" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="47">&amp;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="48">vsn<pos:position pos:line="21" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="53">&amp;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="54">maxlen<pos:position pos:line="21" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="62">&amp;<pos:position pos:line="21" pos:column="67"/></operator><name pos:line="21" pos:column="63">flags<pos:position pos:line="21" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="70">NULL<pos:position pos:line="21" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="76">0<pos:position pos:line="21" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="79"/></condition><then pos:line="21" pos:column="79"> <block pos:line="21" pos:column="80">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">errno<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">ENOENT<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">-<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">memset<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">sfs<pos:position pos:line="26" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="20">sizeof<argument_list pos:line="26" pos:column="26">(<argument><expr><operator pos:line="26" pos:column="27">*<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">sfs<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">sfs<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">-&gt;<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="10">f_bsize<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name><name pos:line="28" pos:column="20">sfs<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">f_frsize<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">=<pos:position pos:line="28" pos:column="35"/></operator> <name pos:line="28" pos:column="36">spc<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">bps<pos:position pos:line="28" pos:column="45"/></name></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>         <comment type="block" pos:line="28" pos:column="55">/* file system block size, fragment size */</comment>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">sfs<pos:position pos:line="29" pos:column="8"/></name><operator pos:line="29" pos:column="8">-&gt;<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="10">f_blocks<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">totalc<pos:position pos:line="29" pos:column="27"/></name></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>                           <comment type="block" pos:line="29" pos:column="55">/* size of fs in f_frsize units */</comment>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">sfs<pos:position pos:line="30" pos:column="8"/></name><operator pos:line="30" pos:column="8">-&gt;<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="10">f_bfree<pos:position pos:line="30" pos:column="17"/></name></name> <operator pos:line="30" pos:column="18">=<pos:position pos:line="30" pos:column="19"/></operator> <name><name pos:line="30" pos:column="20">sfs<pos:position pos:line="30" pos:column="23"/></name><operator pos:line="30" pos:column="23">-&gt;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="25">f_bavail<pos:position pos:line="30" pos:column="33"/></name></name> <operator pos:line="30" pos:column="34">=<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">freec<pos:position pos:line="30" pos:column="41"/></name></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>             <comment type="block" pos:line="30" pos:column="55">/* # free blocks total, and available for unprivileged users */</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">sfs<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">f_files<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <name><name pos:line="31" pos:column="20">sfs<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">f_ffree<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <name><name pos:line="31" pos:column="35">sfs<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">f_favail<pos:position pos:line="31" pos:column="48"/></name></name> <operator pos:line="31" pos:column="49">=<pos:position pos:line="31" pos:column="50"/></operator> <operator pos:line="31" pos:column="51">-<pos:position pos:line="31" pos:column="52"/></operator><literal type="number" pos:line="31" pos:column="52">1<pos:position pos:line="31" pos:column="53"/></literal></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt> <comment type="block" pos:line="31" pos:column="55">/* # inodes total, free, and available for unprivileged users */</comment>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">sfs<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">f_fsid<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">vsn<pos:position pos:line="32" pos:column="22"/></name></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>                                <comment type="block" pos:line="32" pos:column="55">/* file system ID */</comment>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">sfs<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">f_namemax<pos:position pos:line="33" pos:column="19"/></name></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <name pos:line="33" pos:column="22">maxlen<pos:position pos:line="33" pos:column="28"/></name></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>                          <comment type="block" pos:line="33" pos:column="55">/* maximum filename length */</comment>
    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>

<cpp:elif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">elif<pos:position pos:line="36" pos:column="6"/></cpp:directive> <expr><name pos:line="36" pos:column="7">HAVE_STATFS<pos:position pos:line="36" pos:column="18"/></name></expr></cpp:elif>
    <comment type="line" pos:line="37" pos:column="5">// use statfs() and map results from struct statfs to struct statvfs</comment>
    <decl_stmt><decl><type><name><name pos:line="38" pos:column="5">struct<pos:position pos:line="38" pos:column="11"/></name> <name pos:line="38" pos:column="12">statfs<pos:position pos:line="38" pos:column="18"/></name></name></type> <name pos:line="38" pos:column="19">tmpSfs<pos:position pos:line="38" pos:column="25"/></name></decl>;<pos:position pos:line="38" pos:column="26"/></decl_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<decl><type><name pos:line="40" pos:column="9">int<pos:position pos:line="40" pos:column="12"/></name></type> <name pos:line="40" pos:column="13">x<pos:position pos:line="40" pos:column="14"/></name> <init pos:line="40" pos:column="15">= <expr><call><name pos:line="40" pos:column="17">statfs<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">path<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="30">&amp;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="31">tmpSfs<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr></init></decl>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39">
        <block type="pseudo"><return pos:line="41" pos:column="9">return <expr><name pos:line="41" pos:column="16">x<pos:position pos:line="41" pos:column="17"/></name></expr>;<pos:position pos:line="41" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">memset<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name pos:line="43" pos:column="12">sfs<pos:position pos:line="43" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="17">0<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="20">sizeof<argument_list pos:line="43" pos:column="26">(<argument><expr><operator pos:line="43" pos:column="27">*<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">sfs<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">sfs<pos:position pos:line="45" pos:column="8"/></name><operator pos:line="45" pos:column="8">-&gt;<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="10">f_bsize<pos:position pos:line="45" pos:column="17"/></name></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <name><name pos:line="45" pos:column="20">tmpSfs<pos:position pos:line="45" pos:column="26"/></name><operator pos:line="45" pos:column="26">.<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="27">f_bsize<pos:position pos:line="45" pos:column="34"/></name></name></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>         <comment type="block" pos:line="45" pos:column="44">/* file system block size */</comment>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">sfs<pos:position pos:line="46" pos:column="8"/></name><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">f_frsize<pos:position pos:line="46" pos:column="18"/></name></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">STATFS_FRSIZE<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">tmpSfs<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt> <comment type="block" pos:line="46" pos:column="44">/* fragment size */</comment>
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">sfs<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">-&gt;<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="10">f_blocks<pos:position pos:line="47" pos:column="18"/></name></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <name><name pos:line="47" pos:column="21">tmpSfs<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">.<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">f_blocks<pos:position pos:line="47" pos:column="36"/></name></name></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>       <comment type="block" pos:line="47" pos:column="44">/* size of fs in f_frsize units */</comment>
    <expr_stmt><expr><name><name pos:line="48" pos:column="5">sfs<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">-&gt;<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="10">f_bfree<pos:position pos:line="48" pos:column="17"/></name></name> <operator pos:line="48" pos:column="18">=<pos:position pos:line="48" pos:column="19"/></operator> <name><name pos:line="48" pos:column="20">tmpSfs<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">.<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="27">f_bfree<pos:position pos:line="48" pos:column="34"/></name></name></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>         <comment type="block" pos:line="48" pos:column="44">/* # free blocks */</comment>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">sfs<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">f_bavail<pos:position pos:line="49" pos:column="18"/></name></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <name><name pos:line="49" pos:column="21">tmpSfs<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">.<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="28">f_bavail<pos:position pos:line="49" pos:column="36"/></name></name></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>       <comment type="block" pos:line="49" pos:column="44">/* # free blocks for unprivileged users */</comment>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">sfs<pos:position pos:line="50" pos:column="8"/></name><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">f_files<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <name><name pos:line="50" pos:column="20">tmpSfs<pos:position pos:line="50" pos:column="26"/></name><operator pos:line="50" pos:column="26">.<pos:position pos:line="50" pos:column="27"/></operator><name pos:line="50" pos:column="27">f_files<pos:position pos:line="50" pos:column="34"/></name></name></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>         <comment type="block" pos:line="50" pos:column="44">/* # inodes */</comment>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">sfs<pos:position pos:line="51" pos:column="8"/></name><operator pos:line="51" pos:column="8">-&gt;<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="10">f_ffree<pos:position pos:line="51" pos:column="17"/></name></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name><name pos:line="51" pos:column="20">tmpSfs<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">.<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">f_ffree<pos:position pos:line="51" pos:column="34"/></name></name></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt>         <comment type="block" pos:line="51" pos:column="44">/* # free inodes */</comment>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">sfs<pos:position pos:line="52" pos:column="8"/></name><operator pos:line="52" pos:column="8">-&gt;<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="10">f_favail<pos:position pos:line="52" pos:column="18"/></name></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <name><name pos:line="52" pos:column="21">tmpSfs<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">f_ffree<pos:position pos:line="52" pos:column="35"/></name></name></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>        <comment type="block" pos:line="52" pos:column="44">/* # free inodes for unprivileged users */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">sfs<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">f_fsid<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name><name pos:line="53" pos:column="19">tmpSfs<pos:position pos:line="53" pos:column="25"/></name><operator pos:line="53" pos:column="25">.<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">f_fsid<pos:position pos:line="53" pos:column="32"/></name></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>           <comment type="block" pos:line="53" pos:column="44">/* file system ID */</comment>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">sfs<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">-&gt;<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="10">f_namemax<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name><name pos:line="54" pos:column="22">tmpSfs<pos:position pos:line="54" pos:column="28"/></name><operator pos:line="54" pos:column="28">.<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="29">f_namelen<pos:position pos:line="54" pos:column="38"/></name></name></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>     <comment type="block" pos:line="54" pos:column="44">/* maximum filename length */</comment>

<cpp:else pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">else<pos:position pos:line="56" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">error<pos:position pos:line="57" pos:column="7"/></cpp:directive> Both statvfs() and statfs() system calls are missing.<pos:position pos:line="57" pos:column="61"/></cpp:error>
    <expr_stmt><expr><name pos:line="58" pos:column="5">errno<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <name pos:line="58" pos:column="13">ENOSYS<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">-<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">1<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></return>

<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

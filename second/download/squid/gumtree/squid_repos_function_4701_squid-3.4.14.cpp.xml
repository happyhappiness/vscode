<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4701_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">compileUnoptimisedREs<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">RegexList<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier><modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">curlist<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">wordlist<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">wl<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RegexList<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier><modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">Tail<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">RegexList<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier><modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">newTail<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">flags<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><name pos:line="6" pos:column="17">REG_EXTENDED<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">|<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="32">REG_NOSUB<pos:position pos:line="6" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">Tail<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">curlist<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></init> <condition><expr><operator pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">Tail<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">!=<pos:position pos:line="8" pos:column="34"/></operator> <name pos:line="8" pos:column="35">NULL<pos:position pos:line="8" pos:column="39"/></name></expr>;<pos:position pos:line="8" pos:column="40"/></condition> <incr><expr><name pos:line="8" pos:column="41">Tail<pos:position pos:line="8" pos:column="45"/></name> <operator pos:line="8" pos:column="46">=<pos:position pos:line="8" pos:column="47"/></operator> <operator pos:line="8" pos:column="48">&amp;<pos:position pos:line="8" pos:column="53"/></operator><operator pos:line="8" pos:column="49">(<pos:position pos:line="8" pos:column="50"/></operator><name><operator pos:line="8" pos:column="50">(<pos:position pos:line="8" pos:column="51"/></operator><operator pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">Tail<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">)<pos:position pos:line="8" pos:column="57"/></operator><operator pos:line="8" pos:column="57">-&gt;<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="59">next<pos:position pos:line="8" pos:column="63"/></name></name><operator pos:line="8" pos:column="63">)<pos:position pos:line="8" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="65"/></control>
        <block type="pseudo"><empty_stmt pos:line="9" pos:column="9">;<pos:position pos:line="9" pos:column="10"/></empty_stmt></block></for>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">wl<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">!=<pos:position pos:line="11" pos:column="17"/></operator> <name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition> <block pos:line="11" pos:column="24">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">strcmp<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">wl<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">key<pos:position pos:line="12" pos:column="27"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="29">"-i"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40"> <block pos:line="12" pos:column="41">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">flags<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">|=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">REG_ICASE<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then> <elseif pos:line="14" pos:column="11">else <if pos:line="14" pos:column="16">if <condition pos:line="14" pos:column="19">(<expr><call><name pos:line="14" pos:column="20">strcmp<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name><name pos:line="14" pos:column="27">wl<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">key<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"+i"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call> <operator pos:line="14" pos:column="42">==<pos:position pos:line="14" pos:column="44"/></operator> <literal type="number" pos:line="14" pos:column="45">0<pos:position pos:line="14" pos:column="46"/></literal></expr>)<pos:position pos:line="14" pos:column="47"/></condition><then pos:line="14" pos:column="47"> <block pos:line="14" pos:column="48">{
            <expr_stmt><expr><name pos:line="15" pos:column="13">flags<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">&amp;=<pos:position pos:line="15" pos:column="25"/></operator> <operator pos:line="15" pos:column="22">~<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">REG_ICASE<pos:position pos:line="15" pos:column="32"/></name></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">newTail<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">compileRE<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">( <argument><expr><name pos:line="17" pos:column="34">Tail<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">wl<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">key<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument> , <argument><expr><name pos:line="17" pos:column="50">flags<pos:position pos:line="17" pos:column="55"/></name></expr></argument> )<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><name pos:line="18" pos:column="17">newTail<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">==<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">NULL<pos:position pos:line="18" pos:column="32"/></name></expr>)<pos:position pos:line="18" pos:column="33"/></condition><then pos:line="18" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">debugs<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="number" pos:line="19" pos:column="24">28<pos:position pos:line="19" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">DBG_CRITICAL<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="42">"ERROR: Skipping regular expression. Compile failed: '"<pos:position pos:line="19" pos:column="97"/></literal> <operator pos:line="19" pos:column="98">&lt;&lt;<pos:position pos:line="19" pos:column="106"/></operator> <name><name pos:line="19" pos:column="101">wl<pos:position pos:line="19" pos:column="103"/></name><operator pos:line="19" pos:column="103">-&gt;<pos:position pos:line="19" pos:column="108"/></operator><name pos:line="19" pos:column="105">key<pos:position pos:line="19" pos:column="108"/></name></name> <operator pos:line="19" pos:column="109">&lt;&lt;<pos:position pos:line="19" pos:column="117"/></operator> <literal type="string" pos:line="19" pos:column="112">"'"<pos:position pos:line="19" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="117"/></expr_stmt></block></then>
            <else pos:line="20" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">Tail<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="24">newTail<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt></block></else></if>
        }<pos:position pos:line="22" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="23" pos:column="9">wl<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name><name pos:line="23" pos:column="14">wl<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">next<pos:position pos:line="23" pos:column="22"/></name></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1786_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeDigestRewriteResume<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">sd_state<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">rewrite_lock<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><name><name pos:line="7" pos:column="13">sd_state<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">rebuild_lock<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">e<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <name><name pos:line="8" pos:column="9">sd_state<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">rewrite_lock<pos:position pos:line="8" pos:column="30"/></name></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">sd_state<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">rewrite_offset<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">0<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">EBIT_SET<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name><name pos:line="10" pos:column="14">e<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">flags<pos:position pos:line="10" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">ENTRY_SPECIAL<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* setting public key will purge old digest entry if any */</comment>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">e<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">setPublicKey<pos:position pos:line="12" pos:column="20"/></name></name><argument_list pos:line="12" pos:column="20">()<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* fake reply */</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">HttpReply<pos:position pos:line="14" pos:column="14"/></name> <modifier pos:line="14" pos:column="15">*<pos:position pos:line="14" pos:column="16"/></modifier></type><name pos:line="14" pos:column="16">rep<pos:position pos:line="14" pos:column="19"/></name> <init pos:line="14" pos:column="20">= <expr><operator pos:line="14" pos:column="22">new<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">HttpReply<pos:position pos:line="14" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">rep<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">setHeaders<pos:position pos:line="15" pos:column="20"/></name></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">Http<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">::<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">scOkay<pos:position pos:line="15" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"Cache Digest OK"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>,
                    <argument><expr><literal type="string" pos:line="16" pos:column="21">"application/cache-digest"<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="49">(<pos:position pos:line="16" pos:column="50"/></operator><name><name pos:line="16" pos:column="50">store_digest<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">mask_size<pos:position pos:line="16" pos:column="73"/></name></name> <operator pos:line="16" pos:column="74">+<pos:position pos:line="16" pos:column="75"/></operator> <sizeof pos:line="16" pos:column="76">sizeof<argument_list pos:line="16" pos:column="82">(<argument><expr><name><name pos:line="16" pos:column="83">sd_state<pos:position pos:line="16" pos:column="91"/></name><operator pos:line="16" pos:column="91">.<pos:position pos:line="16" pos:column="92"/></operator><name pos:line="16" pos:column="92">cblock<pos:position pos:line="16" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="99"/></argument_list></sizeof><operator pos:line="16" pos:column="99">)<pos:position pos:line="16" pos:column="100"/></operator></expr></argument>,
                    <argument><expr><name pos:line="17" pos:column="21">squid_curtime<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">squid_curtime<pos:position pos:line="17" pos:column="50"/></name> <operator pos:line="17" pos:column="51">+<pos:position pos:line="17" pos:column="52"/></operator> <name><name pos:line="17" pos:column="53">Config<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">.<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">digest<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">.<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="67">rewrite_period<pos:position pos:line="17" pos:column="81"/></name></name><operator pos:line="17" pos:column="81">)<pos:position pos:line="17" pos:column="82"/></operator></expr></argument> )<pos:position pos:line="17" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="85"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">71<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">3<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"storeDigestRewrite: entry expires on "<pos:position pos:line="18" pos:column="58"/></literal> <operator pos:line="18" pos:column="59">&lt;&lt;<pos:position pos:line="18" pos:column="67"/></operator> <name><name pos:line="18" pos:column="62">rep<pos:position pos:line="18" pos:column="65"/></name><operator pos:line="18" pos:column="65">-&gt;<pos:position pos:line="18" pos:column="70"/></operator><name pos:line="18" pos:column="67">expires<pos:position pos:line="18" pos:column="74"/></name></name> <operator pos:line="18" pos:column="75">&lt;&lt;<pos:position pos:line="18" pos:column="83"/></operator>
           <literal type="string" pos:line="19" pos:column="12">" ("<pos:position pos:line="19" pos:column="16"/></literal> <operator pos:line="19" pos:column="17">&lt;&lt;<pos:position pos:line="19" pos:column="25"/></operator> <name><name pos:line="19" pos:column="20">std<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">::<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">showpos<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">&lt;&lt;<pos:position pos:line="19" pos:column="41"/></operator> <call pos:line="19" pos:column="36">(<name pos:line="19" pos:column="37">int<pos:position pos:line="19" pos:column="40"/></name>) <argument_list pos:line="19" pos:column="42">(<argument><expr><name><name pos:line="19" pos:column="43">rep<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">-&gt;<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="48">expires<pos:position pos:line="19" pos:column="55"/></name></name> <operator pos:line="19" pos:column="56">-<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">squid_curtime<pos:position pos:line="19" pos:column="71"/></name></expr></argument>)<pos:position pos:line="19" pos:column="72"/></argument_list></call> <operator pos:line="19" pos:column="73">&lt;&lt;<pos:position pos:line="19" pos:column="81"/></operator> <literal type="string" pos:line="19" pos:column="76">")"<pos:position pos:line="19" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">e<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">buffer<pos:position pos:line="20" pos:column="14"/></name></name><argument_list pos:line="20" pos:column="14">()<pos:position pos:line="20" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">e<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">replaceHttpReply<pos:position pos:line="21" pos:column="24"/></name></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">rep<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">storeDigestCBlockSwapOut<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><name pos:line="22" pos:column="30">e<pos:position pos:line="22" pos:column="31"/></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">e<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">flush<pos:position pos:line="23" pos:column="13"/></name></name><argument_list pos:line="23" pos:column="13">()<pos:position pos:line="23" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">eventAdd<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="string" pos:line="24" pos:column="14">"storeDigestSwapOutStep"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">storeDigestSwapOutStep<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="64">sd_state<pos:position pos:line="24" pos:column="72"/></name><operator pos:line="24" pos:column="72">.<pos:position pos:line="24" pos:column="73"/></operator><name pos:line="24" pos:column="73">rewrite_lock<pos:position pos:line="24" pos:column="85"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="87">0.0<pos:position pos:line="24" pos:column="90"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="92">1<pos:position pos:line="24" pos:column="93"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="24" pos:column="95">false<pos:position pos:line="24" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="102"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

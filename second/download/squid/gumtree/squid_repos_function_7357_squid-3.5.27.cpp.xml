<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7357_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">rfc1035BuildPTRQuery<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name><name pos:line="2" pos:column="28">struct<pos:position pos:line="2" pos:column="34"/></name> <name pos:line="2" pos:column="35">in_addr<pos:position pos:line="2" pos:column="42"/></name></name></type> <name pos:line="2" pos:column="43">addr<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">buf<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">size_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">sz<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">unsigned<pos:position pos:line="2" pos:column="79"/></name> <name pos:line="2" pos:column="80">short<pos:position pos:line="2" pos:column="85"/></name></type> <name pos:line="2" pos:column="86">qid<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">rfc1035_query<pos:position pos:line="2" pos:column="104"/></name> <modifier pos:line="2" pos:column="105">*<pos:position pos:line="2" pos:column="106"/></modifier></type> <name pos:line="2" pos:column="107">query<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="114">ssize_t<pos:position pos:line="2" pos:column="121"/></name></type> <name pos:line="2" pos:column="122">edns_sz<pos:position pos:line="2" pos:column="129"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="130"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">rfc1035_message<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">h<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">offset<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name pos:line="6" pos:column="12">char<pos:position pos:line="6" pos:column="16"/></name></type> <name><name pos:line="6" pos:column="17">rev<pos:position pos:line="6" pos:column="20"/></name><index pos:line="6" pos:column="20">[<expr><literal type="number" pos:line="6" pos:column="21">32<pos:position pos:line="6" pos:column="23"/></literal></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">i<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">memset<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><operator pos:line="8" pos:column="12">&amp;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="13">h<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="16">'\0'<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="22">sizeof<argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">h<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">i<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">unsigned<pos:position pos:line="9" pos:column="18"/></name> <name pos:line="9" pos:column="19">int<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">)<pos:position pos:line="9" pos:column="23"/></operator> <call><name pos:line="9" pos:column="24">ntohl<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">addr<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">s_addr<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">snprintf<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">rev<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="19">32<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"%u.%u.%u.%u.in-addr.arpa."<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>,
             <argument><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="18">255<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>,
             <argument><expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">&gt;&gt;<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="20">8<pos:position pos:line="12" pos:column="21"/></literal><operator pos:line="12" pos:column="21">)<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="25">255<pos:position pos:line="12" pos:column="28"/></literal></expr></argument>,
             <argument><expr><operator pos:line="13" pos:column="14">(<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&gt;&gt;<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="20">16<pos:position pos:line="13" pos:column="22"/></literal><operator pos:line="13" pos:column="22">)<pos:position pos:line="13" pos:column="23"/></operator> <operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="26">255<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>,
             <argument><expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">i<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&gt;&gt;<pos:position pos:line="14" pos:column="22"/></operator> <literal type="number" pos:line="14" pos:column="20">24<pos:position pos:line="14" pos:column="22"/></literal><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator> <operator pos:line="14" pos:column="24">&amp;<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="26">255<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">h<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">.<pos:position pos:line="15" pos:column="7"/></operator><name pos:line="15" pos:column="7">id<pos:position pos:line="15" pos:column="9"/></name></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <name pos:line="15" pos:column="12">qid<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">h<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">.<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">qr<pos:position pos:line="16" pos:column="9"/></name></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <literal type="number" pos:line="16" pos:column="12">0<pos:position pos:line="16" pos:column="13"/></literal></expr>;<pos:position pos:line="16" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">h<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">.<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">rd<pos:position pos:line="17" pos:column="9"/></name></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">h<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">.<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">opcode<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>       <comment type="block" pos:line="18" pos:column="25">/* QUERY */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">h<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">.<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">qdcount<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <operator pos:line="19" pos:column="17">(<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">unsigned<pos:position pos:line="19" pos:column="26"/></name> <name pos:line="19" pos:column="27">int<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">)<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">h<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">.<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">arcount<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><ternary><condition><expr><name pos:line="20" pos:column="18">edns_sz<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&gt;<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="28">0<pos:position pos:line="20" pos:column="29"/></literal></expr> ?<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <expr><literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal></expr> <pos:position pos:line="20" pos:column="34"/></then><else pos:line="20" pos:column="34">: <expr><literal type="number" pos:line="20" pos:column="36">0<pos:position pos:line="20" pos:column="37"/></literal></expr></else></ternary><operator pos:line="20" pos:column="37">)<pos:position pos:line="20" pos:column="38"/></operator></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">offset<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">+=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">rfc1035HeaderPack<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">buf<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">+<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">offset<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="47">sz<pos:position pos:line="21" pos:column="49"/></name> <operator pos:line="21" pos:column="50">-<pos:position pos:line="21" pos:column="51"/></operator> <name pos:line="21" pos:column="52">offset<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="60">&amp;<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="61">h<pos:position pos:line="21" pos:column="62"/></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">offset<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">+=<pos:position pos:line="22" pos:column="14"/></operator> <call><name pos:line="22" pos:column="15">rfc1035QuestionPack<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">buf<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">+<pos:position pos:line="22" pos:column="40"/></operator> <name pos:line="22" pos:column="41">offset<pos:position pos:line="22" pos:column="47"/></name></expr></argument>,
                                  <argument><expr><name pos:line="23" pos:column="35">sz<pos:position pos:line="23" pos:column="37"/></name> <operator pos:line="23" pos:column="38">-<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="40">offset<pos:position pos:line="23" pos:column="46"/></name></expr></argument>,
                                  <argument><expr><name pos:line="24" pos:column="35">rev<pos:position pos:line="24" pos:column="38"/></name></expr></argument>,
                                  <argument><expr><name pos:line="25" pos:column="35">RFC1035_TYPE_PTR<pos:position pos:line="25" pos:column="51"/></name></expr></argument>,
                                  <argument><expr><name pos:line="26" pos:column="35">RFC1035_CLASS_IN<pos:position pos:line="26" pos:column="51"/></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">edns_sz<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">&gt;<pos:position pos:line="27" pos:column="21"/></operator> <literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="9">offset<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">+=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">rfc2671RROptPack<pos:position pos:line="28" pos:column="35"/></name><argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">buf<pos:position pos:line="28" pos:column="39"/></name> <operator pos:line="28" pos:column="40">+<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">offset<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">sz<pos:position pos:line="28" pos:column="52"/></name> <operator pos:line="28" pos:column="53">-<pos:position pos:line="28" pos:column="54"/></operator> <name pos:line="28" pos:column="55">offset<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">edns_sz<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">query<pos:position pos:line="29" pos:column="14"/></name></expr>)<pos:position pos:line="29" pos:column="15"/></condition><then pos:line="29" pos:column="15"> <block pos:line="29" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">query<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">qtype<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">RFC1035_TYPE_PTR<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">query<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">qclass<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">RFC1035_CLASS_IN<pos:position pos:line="31" pos:column="41"/></name></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">xstrncpy<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name><name pos:line="32" pos:column="18">query<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">name<pos:position pos:line="32" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">rev<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="36">sizeof<argument_list pos:line="32" pos:column="42">(<argument><expr><name><name pos:line="32" pos:column="43">query<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">name<pos:position pos:line="32" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">assert<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">offset<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">&lt;=<pos:position pos:line="34" pos:column="24"/></operator> <name pos:line="34" pos:column="22">sz<pos:position pos:line="34" pos:column="24"/></name></expr></argument>)<pos:position pos:line="34" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">offset<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

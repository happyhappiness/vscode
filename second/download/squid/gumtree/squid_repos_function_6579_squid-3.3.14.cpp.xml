<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6579_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">check_free<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type><name pos:line="2" pos:column="18">s<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">B<pos:position pos:line="4" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="12">I<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">B<pos:position pos:line="5" pos:column="6"/></name> <operator pos:line="5" pos:column="7">=<pos:position pos:line="5" pos:column="8"/></operator> <call><name pos:line="5" pos:column="9">DBG_HASH_BUCKET<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">s<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">I<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>;<pos:position pos:line="7" pos:column="16"/></init> <condition><expr><name pos:line="7" pos:column="17">I<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&lt;<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="21">DBG_ARRY_SZ<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></condition> <incr><expr><operator pos:line="7" pos:column="34">++<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">I<pos:position pos:line="7" pos:column="37"/></name></expr></incr>)<pos:position pos:line="7" pos:column="38"/></control> <block pos:line="7" pos:column="39">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">malloc_ptrs<pos:position pos:line="8" pos:column="24"/></name><index pos:line="8" pos:column="24">[<expr><name pos:line="8" pos:column="25">B<pos:position pos:line="8" pos:column="26"/></name></expr>]<pos:position pos:line="8" pos:column="27"/></index><index pos:line="8" pos:column="27">[<expr><name pos:line="8" pos:column="28">I<pos:position pos:line="8" pos:column="29"/></name></expr>]<pos:position pos:line="8" pos:column="30"/></index></name> <operator pos:line="8" pos:column="31">!=<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">s<pos:position pos:line="8" pos:column="35"/></name></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
            <block type="pseudo"><continue pos:line="9" pos:column="13">continue;<pos:position pos:line="9" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="11" pos:column="9">malloc_ptrs<pos:position pos:line="11" pos:column="20"/></name><index pos:line="11" pos:column="20">[<expr><name pos:line="11" pos:column="21">B<pos:position pos:line="11" pos:column="22"/></name></expr>]<pos:position pos:line="11" pos:column="23"/></index><index pos:line="11" pos:column="23">[<expr><name pos:line="11" pos:column="24">I<pos:position pos:line="11" pos:column="25"/></name></expr>]<pos:position pos:line="11" pos:column="26"/></index></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="13" pos:column="9">malloc_size<pos:position pos:line="13" pos:column="20"/></name><index pos:line="13" pos:column="20">[<expr><name pos:line="13" pos:column="21">B<pos:position pos:line="13" pos:column="22"/></name></expr>]<pos:position pos:line="13" pos:column="23"/></index><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">I<pos:position pos:line="13" pos:column="25"/></name></expr>]<pos:position pos:line="13" pos:column="26"/></index></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">XMALLOC_TRACE<pos:position pos:line="15" pos:column="18"/></name></expr></cpp:if>

        <expr_stmt><expr><name><name pos:line="17" pos:column="9">malloc_file<pos:position pos:line="17" pos:column="20"/></name><index pos:line="17" pos:column="20">[<expr><name pos:line="17" pos:column="21">B<pos:position pos:line="17" pos:column="22"/></name></expr>]<pos:position pos:line="17" pos:column="23"/></index><index pos:line="17" pos:column="23">[<expr><name pos:line="17" pos:column="24">I<pos:position pos:line="17" pos:column="25"/></name></expr>]<pos:position pos:line="17" pos:column="26"/></index></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">NULL<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="19" pos:column="9">malloc_line<pos:position pos:line="19" pos:column="20"/></name><index pos:line="19" pos:column="20">[<expr><name pos:line="19" pos:column="21">B<pos:position pos:line="19" pos:column="22"/></name></expr>]<pos:position pos:line="19" pos:column="23"/></index><index pos:line="19" pos:column="23">[<expr><name pos:line="19" pos:column="24">I<pos:position pos:line="19" pos:column="25"/></name></expr>]<pos:position pos:line="19" pos:column="26"/></index></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="number" pos:line="19" pos:column="29">0<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="21" pos:column="9">malloc_count<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">B<pos:position pos:line="21" pos:column="23"/></name></expr>]<pos:position pos:line="21" pos:column="24"/></index><index pos:line="21" pos:column="24">[<expr><name pos:line="21" pos:column="25">I<pos:position pos:line="21" pos:column="26"/></name></expr>]<pos:position pos:line="21" pos:column="27"/></index></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>

<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>
    }<pos:position pos:line="26" pos:column="6"/></block></for>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">I<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">==<pos:position pos:line="28" pos:column="13"/></operator> <name pos:line="28" pos:column="14">DBG_ARRY_SZ<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
        <decl_stmt><decl><specifier pos:line="29" pos:column="9">static<pos:position pos:line="29" pos:column="15"/></specifier> <type><name pos:line="29" pos:column="16">char<pos:position pos:line="29" pos:column="20"/></name></type> <name><name pos:line="29" pos:column="21">msg<pos:position pos:line="29" pos:column="24"/></name><index pos:line="29" pos:column="24">[<expr><literal type="number" pos:line="29" pos:column="25">128<pos:position pos:line="29" pos:column="28"/></literal></expr>]<pos:position pos:line="29" pos:column="29"/></index></name></decl>;<pos:position pos:line="29" pos:column="30"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">snprintf<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">msg<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="23">128<pos:position pos:line="30" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="28">"xfree: ERROR: s=%p not found!"<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">s<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">failure_notify<pos:position pos:line="31" pos:column="27"/></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call pos:line="32" pos:column="13">(<modifier pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></modifier><name pos:line="32" pos:column="15">failure_notify<pos:position pos:line="32" pos:column="29"/></name>) <argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">msg<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt></block></then>
        <else pos:line="33" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">perror<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">msg<pos:position pos:line="34" pos:column="23"/></name></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt></block></else></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

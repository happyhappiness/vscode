<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6849_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">cleanmember<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">stackmember<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">s<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">-&gt;<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="12">valuetype<pos:position pos:line="4" pos:column="21"/></name></name> <operator pos:line="4" pos:column="22">==<pos:position pos:line="4" pos:column="24"/></operator> <name pos:line="4" pos:column="25">ESI_EXPR_LITERAL<pos:position pos:line="4" pos:column="41"/></name>
            <operator pos:line="5" pos:column="13">&amp;&amp;<pos:position pos:line="5" pos:column="23"/></operator> <name><name pos:line="5" pos:column="16">s<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">valuestored<pos:position pos:line="5" pos:column="30"/></name></name> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">ESI_LITERAL_STRING<pos:position pos:line="5" pos:column="52"/></name></expr>)<pos:position pos:line="5" pos:column="53"/></condition><then pos:line="5" pos:column="53"> <block pos:line="5" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">safe_free<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name><name pos:line="6" pos:column="19">s<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">-&gt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">value<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">string<pos:position pos:line="6" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">s<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">value<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">string<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">=<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

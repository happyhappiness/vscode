<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4783_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">authenticateShutdown<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">void<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">29<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">2<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"authenticateShutdown: shutting down auth schemes"<pos:position pos:line="4" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="71"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* free the cache if we are shutting down */</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">shutting_down<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">hashFreeItems<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">proxy_auth_username_cache<pos:position pos:line="8" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="50">AuthUserHashPointer<pos:position pos:line="8" pos:column="69"/></name><operator pos:line="8" pos:column="69">::<pos:position pos:line="8" pos:column="71"/></operator><name pos:line="8" pos:column="71">removeFromCache<pos:position pos:line="8" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">AuthScheme<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">::<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">FreeAll<pos:position pos:line="9" pos:column="28"/></name></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <else pos:line="10" pos:column="7">else <block pos:line="10" pos:column="12">{
        <for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><decl><type><name><name pos:line="11" pos:column="14">AuthScheme<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">::<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">const_iterator<pos:position pos:line="11" pos:column="40"/></name></name></type> <name pos:line="11" pos:column="41">i<pos:position pos:line="11" pos:column="42"/></name> <init pos:line="11" pos:column="43">= <expr><call><name><name pos:line="11" pos:column="45">AuthScheme<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">::<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="57">Schemes<pos:position pos:line="11" pos:column="64"/></name></name><argument_list pos:line="11" pos:column="64">()<pos:position pos:line="11" pos:column="66"/></argument_list></call><operator pos:line="11" pos:column="66">.<pos:position pos:line="11" pos:column="67"/></operator><call><name pos:line="11" pos:column="67">begin<pos:position pos:line="11" pos:column="72"/></name><argument_list pos:line="11" pos:column="72">()<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="75"/></init> <condition><expr><name pos:line="11" pos:column="76">i<pos:position pos:line="11" pos:column="77"/></name> <operator pos:line="11" pos:column="78">!=<pos:position pos:line="11" pos:column="80"/></operator> <call><name><name pos:line="11" pos:column="81">AuthScheme<pos:position pos:line="11" pos:column="91"/></name><operator pos:line="11" pos:column="91">::<pos:position pos:line="11" pos:column="93"/></operator><name pos:line="11" pos:column="93">Schemes<pos:position pos:line="11" pos:column="100"/></name></name><argument_list pos:line="11" pos:column="100">()<pos:position pos:line="11" pos:column="102"/></argument_list></call><operator pos:line="11" pos:column="102">.<pos:position pos:line="11" pos:column="103"/></operator><call><name pos:line="11" pos:column="103">end<pos:position pos:line="11" pos:column="106"/></name><argument_list pos:line="11" pos:column="106">()<pos:position pos:line="11" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="109"/></condition> <incr><expr><operator pos:line="11" pos:column="110">++<pos:position pos:line="11" pos:column="112"/></operator><name pos:line="11" pos:column="112">i<pos:position pos:line="11" pos:column="113"/></name></expr></incr>)<pos:position pos:line="11" pos:column="114"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><operator pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">done<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">()<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt></block></for>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

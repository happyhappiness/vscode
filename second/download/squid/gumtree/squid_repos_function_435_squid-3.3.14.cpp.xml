<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_435_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">stat<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">sb<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">change_time<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">-<pos:position pos:line="5" pos:column="27"/></operator><literal type="number" pos:line="5" pos:column="27">1<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">HELPER_INPUT_BUFFER<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">user<pos:position pos:line="7" pos:column="15"/></name></decl>, <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="18">passwd<pos:position pos:line="7" pos:column="24"/></name></decl>, <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="27">p<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">user_data<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">u<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">setbuf<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">stdout<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">argc<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">stderr<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="25">"Usage: ncsa_auth &lt;passwordfile&gt;\n"<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">exit<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">stat<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name><name pos:line="14" pos:column="14">argv<pos:position pos:line="14" pos:column="18"/></name><index pos:line="14" pos:column="18">[<expr><literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>]<pos:position pos:line="14" pos:column="21"/></index></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="24">sb<pos:position pos:line="14" pos:column="26"/></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call> <operator pos:line="14" pos:column="28">!=<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33"> <block pos:line="14" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">fprintf<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name pos:line="15" pos:column="17">stderr<pos:position pos:line="15" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="25">"FATAL: cannot stat %s\n"<pos:position pos:line="15" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="52">argv<pos:position pos:line="15" pos:column="56"/></name><index pos:line="15" pos:column="56">[<expr><literal type="number" pos:line="15" pos:column="57">1<pos:position pos:line="15" pos:column="58"/></literal></expr>]<pos:position pos:line="15" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">exit<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">fgets<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">buf<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">HELPER_INPUT_BUFFER<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">stdin<pos:position pos:line="18" pos:column="49"/></name></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call> <operator pos:line="18" pos:column="51">!=<pos:position pos:line="18" pos:column="53"/></operator> <name pos:line="18" pos:column="54">NULL<pos:position pos:line="18" pos:column="58"/></name></expr>)<pos:position pos:line="18" pos:column="59"/></condition> <block pos:line="18" pos:column="60">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">(<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">p<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">strchr<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">buf<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="30">'\n'<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="37">!=<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">NULL<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">p<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="char" pos:line="20" pos:column="18">'\0'<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt></block></then></if>		<comment type="block" pos:line="20" pos:column="33">/* strip \n */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name pos:line="21" pos:column="13">stat<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">argv<pos:position pos:line="21" pos:column="22"/></name><index pos:line="21" pos:column="22">[<expr><literal type="number" pos:line="21" pos:column="23">1<pos:position pos:line="21" pos:column="24"/></literal></expr>]<pos:position pos:line="21" pos:column="25"/></index></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="27">&amp;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="28">sb<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call> <operator pos:line="21" pos:column="32">==<pos:position pos:line="21" pos:column="34"/></operator> <literal type="number" pos:line="21" pos:column="35">0<pos:position pos:line="21" pos:column="36"/></literal></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37"> <block pos:line="21" pos:column="38">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name><name pos:line="22" pos:column="17">sb<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">.<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">st_mtime<pos:position pos:line="22" pos:column="28"/></name></name> <operator pos:line="22" pos:column="29">!=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">change_time<pos:position pos:line="22" pos:column="43"/></name></expr>)<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44"> <block pos:line="22" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="23" pos:column="17">read_passwd_file<pos:position pos:line="23" pos:column="33"/></name><argument_list pos:line="23" pos:column="33">(<argument><expr><name><name pos:line="23" pos:column="34">argv<pos:position pos:line="23" pos:column="38"/></name><index pos:line="23" pos:column="38">[<expr><literal type="number" pos:line="23" pos:column="39">1<pos:position pos:line="23" pos:column="40"/></literal></expr>]<pos:position pos:line="23" pos:column="41"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name pos:line="24" pos:column="17">change_time<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">=<pos:position pos:line="24" pos:column="30"/></operator> <name><name pos:line="24" pos:column="31">sb<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">st_mtime<pos:position pos:line="24" pos:column="42"/></name></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">user<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">=<pos:position pos:line="27" pos:column="20"/></operator> <call><name pos:line="27" pos:column="21">strtok<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><name pos:line="27" pos:column="28">buf<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">" "<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call><operator pos:line="27" pos:column="37">)<pos:position pos:line="27" pos:column="38"/></operator> <operator pos:line="27" pos:column="39">==<pos:position pos:line="27" pos:column="41"/></operator> <name pos:line="27" pos:column="42">NULL<pos:position pos:line="27" pos:column="46"/></name></expr>)<pos:position pos:line="27" pos:column="47"/></condition><then pos:line="27" pos:column="47"> <block pos:line="27" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">SEND_ERR<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><literal type="string" pos:line="28" pos:column="22">""<pos:position pos:line="28" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
            <continue pos:line="29" pos:column="13">continue;<pos:position pos:line="29" pos:column="22"/></continue>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><operator pos:line="31" pos:column="13">(<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">passwd<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">strtok<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">NULL<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">""<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call><operator pos:line="31" pos:column="39">)<pos:position pos:line="31" pos:column="40"/></operator> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <name pos:line="31" pos:column="44">NULL<pos:position pos:line="31" pos:column="48"/></name></expr>)<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49"> <block pos:line="31" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">SEND_ERR<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><literal type="string" pos:line="32" pos:column="22">""<pos:position pos:line="32" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
            <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">rfc1738_unescape<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">user<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">rfc1738_unescape<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">passwd<pos:position pos:line="36" pos:column="32"/></name></expr></argument>)<pos:position pos:line="36" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">u<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <operator pos:line="37" pos:column="13">(<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">user_data<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></operator><operator pos:line="37" pos:column="25">)<pos:position pos:line="37" pos:column="26"/></operator> <call><name pos:line="37" pos:column="27">hash_lookup<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">hash<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="45">user<pos:position pos:line="37" pos:column="49"/></name></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">u<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23"> <block pos:line="38" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">SEND_ERR<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><literal type="string" pos:line="39" pos:column="22">"No such user"<pos:position pos:line="39" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
            <continue pos:line="40" pos:column="13">continue;<pos:position pos:line="40" pos:column="22"/></continue>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="42" pos:column="9">char<pos:position pos:line="42" pos:column="13"/></name> <modifier pos:line="42" pos:column="14">*<pos:position pos:line="42" pos:column="15"/></modifier></type><name pos:line="42" pos:column="15">crypted<pos:position pos:line="42" pos:column="22"/></name> <init pos:line="42" pos:column="23">= <expr><name pos:line="42" pos:column="25">NULL<pos:position pos:line="42" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="30"/></decl_stmt>
<cpp:if pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">if<pos:position pos:line="43" pos:column="4"/></cpp:directive> <expr><name pos:line="43" pos:column="5">HAVE_CRYPT<pos:position pos:line="43" pos:column="15"/></name></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="44" pos:column="9">size_t<pos:position pos:line="44" pos:column="15"/></name></type> <name pos:line="44" pos:column="16">passwordLength<pos:position pos:line="44" pos:column="30"/></name> <init pos:line="44" pos:column="31">= <expr><call><name pos:line="44" pos:column="33">strlen<pos:position pos:line="44" pos:column="39"/></name><argument_list pos:line="44" pos:column="39">(<argument><expr><name pos:line="44" pos:column="40">passwd<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="48"/></decl_stmt>
        <comment type="line" pos:line="45" pos:column="9">// Bug 3831: given algorithms more secure than DES crypt() does not truncate, so we can ignore the bug 3107 length checks below</comment>
        <comment type="line" pos:line="46" pos:column="9">// '$1$' = MD5, '$2a$' = Blowfish, '$5$' = SHA256 (Linux), '$6$' = SHA256 (BSD) and SHA512</comment>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">passwordLength<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">&gt;<pos:position pos:line="47" pos:column="32"/></operator> <literal type="number" pos:line="47" pos:column="30">1<pos:position pos:line="47" pos:column="31"/></literal> <operator pos:line="47" pos:column="32">&amp;&amp;<pos:position pos:line="47" pos:column="42"/></operator> <name><name pos:line="47" pos:column="35">u<pos:position pos:line="47" pos:column="36"/></name><operator pos:line="47" pos:column="36">-&gt;<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="38">passwd<pos:position pos:line="47" pos:column="44"/></name><index pos:line="47" pos:column="44">[<expr><literal type="number" pos:line="47" pos:column="45">0<pos:position pos:line="47" pos:column="46"/></literal></expr>]<pos:position pos:line="47" pos:column="47"/></index></name> <operator pos:line="47" pos:column="48">==<pos:position pos:line="47" pos:column="50"/></operator> <literal type="char" pos:line="47" pos:column="51">'$'<pos:position pos:line="47" pos:column="54"/></literal> <operator pos:line="47" pos:column="55">&amp;&amp;<pos:position pos:line="47" pos:column="65"/></operator>
                <operator pos:line="48" pos:column="17">(<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">crypted<pos:position pos:line="48" pos:column="25"/></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <call><name pos:line="48" pos:column="28">crypt<pos:position pos:line="48" pos:column="33"/></name><argument_list pos:line="48" pos:column="33">(<argument><expr><name pos:line="48" pos:column="34">passwd<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="42">u<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">passwd<pos:position pos:line="48" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call><operator pos:line="48" pos:column="52">)<pos:position pos:line="48" pos:column="53"/></operator> <operator pos:line="48" pos:column="54">&amp;&amp;<pos:position pos:line="48" pos:column="64"/></operator> <call><name pos:line="48" pos:column="57">strcmp<pos:position pos:line="48" pos:column="63"/></name><argument_list pos:line="48" pos:column="63">(<argument><expr><name><name pos:line="48" pos:column="64">u<pos:position pos:line="48" pos:column="65"/></name><operator pos:line="48" pos:column="65">-&gt;<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="67">passwd<pos:position pos:line="48" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="75">crypted<pos:position pos:line="48" pos:column="82"/></name></expr></argument>)<pos:position pos:line="48" pos:column="83"/></argument_list></call> <operator pos:line="48" pos:column="84">==<pos:position pos:line="48" pos:column="86"/></operator> <literal type="number" pos:line="48" pos:column="87">0<pos:position pos:line="48" pos:column="88"/></literal></expr>)<pos:position pos:line="48" pos:column="89"/></condition><then pos:line="48" pos:column="89"> <block pos:line="48" pos:column="90">{
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">SEND_OK<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><literal type="string" pos:line="49" pos:column="21">""<pos:position pos:line="49" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="25"/></expr_stmt>
            <continue pos:line="50" pos:column="13">continue;<pos:position pos:line="50" pos:column="22"/></continue>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="52" pos:column="9">// 'other' prefixes indicate DES algorithm.</comment>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">passwordLength<pos:position pos:line="53" pos:column="27"/></name> <operator pos:line="53" pos:column="28">&lt;=<pos:position pos:line="53" pos:column="33"/></operator> <literal type="number" pos:line="53" pos:column="31">8<pos:position pos:line="53" pos:column="32"/></literal> <operator pos:line="53" pos:column="33">&amp;&amp;<pos:position pos:line="53" pos:column="43"/></operator> <operator pos:line="53" pos:column="36">(<pos:position pos:line="53" pos:column="37"/></operator><name pos:line="53" pos:column="37">crypted<pos:position pos:line="53" pos:column="44"/></name> <operator pos:line="53" pos:column="45">=<pos:position pos:line="53" pos:column="46"/></operator> <call><name pos:line="53" pos:column="47">crypt<pos:position pos:line="53" pos:column="52"/></name><argument_list pos:line="53" pos:column="52">(<argument><expr><name pos:line="53" pos:column="53">passwd<pos:position pos:line="53" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="61">u<pos:position pos:line="53" pos:column="62"/></name><operator pos:line="53" pos:column="62">-&gt;<pos:position pos:line="53" pos:column="67"/></operator><name pos:line="53" pos:column="64">passwd<pos:position pos:line="53" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call><operator pos:line="53" pos:column="71">)<pos:position pos:line="53" pos:column="72"/></operator> <operator pos:line="53" pos:column="73">&amp;&amp;<pos:position pos:line="53" pos:column="83"/></operator> <operator pos:line="53" pos:column="76">(<pos:position pos:line="53" pos:column="77"/></operator><call><name pos:line="53" pos:column="77">strcmp<pos:position pos:line="53" pos:column="83"/></name><argument_list pos:line="53" pos:column="83">(<argument><expr><name><name pos:line="53" pos:column="84">u<pos:position pos:line="53" pos:column="85"/></name><operator pos:line="53" pos:column="85">-&gt;<pos:position pos:line="53" pos:column="90"/></operator><name pos:line="53" pos:column="87">passwd<pos:position pos:line="53" pos:column="93"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="95">crypted<pos:position pos:line="53" pos:column="102"/></name></expr></argument>)<pos:position pos:line="53" pos:column="103"/></argument_list></call> <operator pos:line="53" pos:column="104">==<pos:position pos:line="53" pos:column="106"/></operator> <literal type="number" pos:line="53" pos:column="107">0<pos:position pos:line="53" pos:column="108"/></literal><operator pos:line="53" pos:column="108">)<pos:position pos:line="53" pos:column="109"/></operator></expr>)<pos:position pos:line="53" pos:column="110"/></condition><then pos:line="53" pos:column="110"> <block pos:line="53" pos:column="111">{
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">SEND_OK<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><literal type="string" pos:line="54" pos:column="21">""<pos:position pos:line="54" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt>
            <continue pos:line="55" pos:column="13">continue;<pos:position pos:line="55" pos:column="22"/></continue>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">passwordLength<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">&gt;<pos:position pos:line="57" pos:column="32"/></operator> <literal type="number" pos:line="57" pos:column="30">8<pos:position pos:line="57" pos:column="31"/></literal> <operator pos:line="57" pos:column="32">&amp;&amp;<pos:position pos:line="57" pos:column="42"/></operator> <operator pos:line="57" pos:column="35">(<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="36">crypted<pos:position pos:line="57" pos:column="43"/></name> <operator pos:line="57" pos:column="44">=<pos:position pos:line="57" pos:column="45"/></operator> <call><name pos:line="57" pos:column="46">crypt<pos:position pos:line="57" pos:column="51"/></name><argument_list pos:line="57" pos:column="51">(<argument><expr><name pos:line="57" pos:column="52">passwd<pos:position pos:line="57" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="60">u<pos:position pos:line="57" pos:column="61"/></name><operator pos:line="57" pos:column="61">-&gt;<pos:position pos:line="57" pos:column="66"/></operator><name pos:line="57" pos:column="63">passwd<pos:position pos:line="57" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="70"/></argument_list></call><operator pos:line="57" pos:column="70">)<pos:position pos:line="57" pos:column="71"/></operator> <operator pos:line="57" pos:column="72">&amp;&amp;<pos:position pos:line="57" pos:column="82"/></operator> <operator pos:line="57" pos:column="75">(<pos:position pos:line="57" pos:column="76"/></operator><call><name pos:line="57" pos:column="76">strcmp<pos:position pos:line="57" pos:column="82"/></name><argument_list pos:line="57" pos:column="82">(<argument><expr><name><name pos:line="57" pos:column="83">u<pos:position pos:line="57" pos:column="84"/></name><operator pos:line="57" pos:column="84">-&gt;<pos:position pos:line="57" pos:column="89"/></operator><name pos:line="57" pos:column="86">passwd<pos:position pos:line="57" pos:column="92"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="94">crypted<pos:position pos:line="57" pos:column="101"/></name></expr></argument>)<pos:position pos:line="57" pos:column="102"/></argument_list></call> <operator pos:line="57" pos:column="103">==<pos:position pos:line="57" pos:column="105"/></operator> <literal type="number" pos:line="57" pos:column="106">0<pos:position pos:line="57" pos:column="107"/></literal><operator pos:line="57" pos:column="107">)<pos:position pos:line="57" pos:column="108"/></operator></expr>)<pos:position pos:line="57" pos:column="109"/></condition><then pos:line="57" pos:column="109"> <block pos:line="57" pos:column="110">{
            <comment type="line" pos:line="58" pos:column="13">// Bug 3107: crypt() DES functionality silently truncates long passwords.</comment>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">SEND_ERR<pos:position pos:line="59" pos:column="21"/></name><argument_list pos:line="59" pos:column="21">(<argument><expr><literal type="string" pos:line="59" pos:column="22">"Password too long. Only 8 characters accepted."<pos:position pos:line="59" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="72"/></expr_stmt>
            <continue pos:line="60" pos:column="13">continue;<pos:position pos:line="60" pos:column="22"/></continue>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>

<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">( <expr><operator pos:line="64" pos:column="14">(<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">crypted<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <call><name pos:line="64" pos:column="25">crypt_md5<pos:position pos:line="64" pos:column="34"/></name><argument_list pos:line="64" pos:column="34">(<argument><expr><name pos:line="64" pos:column="35">passwd<pos:position pos:line="64" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="43">u<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">-&gt;<pos:position pos:line="64" pos:column="49"/></operator><name pos:line="64" pos:column="46">passwd<pos:position pos:line="64" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call><operator pos:line="64" pos:column="53">)<pos:position pos:line="64" pos:column="54"/></operator> <operator pos:line="64" pos:column="55">&amp;&amp;<pos:position pos:line="64" pos:column="65"/></operator> <call><name pos:line="64" pos:column="58">strcmp<pos:position pos:line="64" pos:column="64"/></name><argument_list pos:line="64" pos:column="64">(<argument><expr><name><name pos:line="64" pos:column="65">u<pos:position pos:line="64" pos:column="66"/></name><operator pos:line="64" pos:column="66">-&gt;<pos:position pos:line="64" pos:column="71"/></operator><name pos:line="64" pos:column="68">passwd<pos:position pos:line="64" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="76">crypted<pos:position pos:line="64" pos:column="83"/></name></expr></argument>)<pos:position pos:line="64" pos:column="84"/></argument_list></call> <operator pos:line="64" pos:column="85">==<pos:position pos:line="64" pos:column="87"/></operator> <literal type="number" pos:line="64" pos:column="88">0<pos:position pos:line="64" pos:column="89"/></literal></expr>)<pos:position pos:line="64" pos:column="90"/></condition><then pos:line="64" pos:column="90"> <block pos:line="64" pos:column="91">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">SEND_OK<pos:position pos:line="65" pos:column="20"/></name><argument_list pos:line="65" pos:column="20">(<argument><expr><literal type="string" pos:line="65" pos:column="21">""<pos:position pos:line="65" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
            <continue pos:line="66" pos:column="13">continue;<pos:position pos:line="66" pos:column="22"/></continue>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">( <expr><operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="15">crypted<pos:position pos:line="68" pos:column="22"/></name> <operator pos:line="68" pos:column="23">=<pos:position pos:line="68" pos:column="24"/></operator> <call><name pos:line="68" pos:column="25">md5sum<pos:position pos:line="68" pos:column="31"/></name><argument_list pos:line="68" pos:column="31">(<argument><expr><name pos:line="68" pos:column="32">passwd<pos:position pos:line="68" pos:column="38"/></name></expr></argument>)<pos:position pos:line="68" pos:column="39"/></argument_list></call><operator pos:line="68" pos:column="39">)<pos:position pos:line="68" pos:column="40"/></operator> <operator pos:line="68" pos:column="41">&amp;&amp;<pos:position pos:line="68" pos:column="51"/></operator> <call><name pos:line="68" pos:column="44">strcmp<pos:position pos:line="68" pos:column="50"/></name><argument_list pos:line="68" pos:column="50">(<argument><expr><name><name pos:line="68" pos:column="51">u<pos:position pos:line="68" pos:column="52"/></name><operator pos:line="68" pos:column="52">-&gt;<pos:position pos:line="68" pos:column="57"/></operator><name pos:line="68" pos:column="54">passwd<pos:position pos:line="68" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="62">crypted<pos:position pos:line="68" pos:column="69"/></name></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></call> <operator pos:line="68" pos:column="71">==<pos:position pos:line="68" pos:column="73"/></operator> <literal type="number" pos:line="68" pos:column="74">0<pos:position pos:line="68" pos:column="75"/></literal></expr>)<pos:position pos:line="68" pos:column="76"/></condition><then pos:line="68" pos:column="76"> <block pos:line="68" pos:column="77">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">SEND_OK<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><literal type="string" pos:line="69" pos:column="21">""<pos:position pos:line="69" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
            <continue pos:line="70" pos:column="13">continue;<pos:position pos:line="70" pos:column="22"/></continue>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="72" pos:column="9">SEND_ERR<pos:position pos:line="72" pos:column="17"/></name><argument_list pos:line="72" pos:column="17">(<argument><expr><literal type="string" pos:line="72" pos:column="18">"Wrong password"<pos:position pos:line="72" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></while>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">hash<pos:position pos:line="74" pos:column="13"/></name> <operator pos:line="74" pos:column="14">!=<pos:position pos:line="74" pos:column="16"/></operator> <name pos:line="74" pos:column="17">NULL<pos:position pos:line="74" pos:column="21"/></name></expr>)<pos:position pos:line="74" pos:column="22"/></condition><then pos:line="74" pos:column="22"> <block pos:line="74" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">hashFreeItems<pos:position pos:line="75" pos:column="22"/></name><argument_list pos:line="75" pos:column="22">(<argument><expr><name pos:line="75" pos:column="23">hash<pos:position pos:line="75" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="29">my_free<pos:position pos:line="75" pos:column="36"/></name></expr></argument>)<pos:position pos:line="75" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">hashFreeMemory<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><name pos:line="76" pos:column="24">hash<pos:position pos:line="76" pos:column="28"/></name></expr></argument>)<pos:position pos:line="76" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">exit<pos:position pos:line="78" pos:column="9"/></name><argument_list pos:line="78" pos:column="9">(<argument><expr><literal type="number" pos:line="78" pos:column="10">0<pos:position pos:line="78" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="13"/></expr_stmt>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2624_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">String<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">ProcessRoles<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">()<pos:position pos:line="2" pos:column="15"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">roles<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="string" pos:line="4" pos:column="20">""<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">IamMasterProcess<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">()<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">roles<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">append<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">(<argument><expr><literal type="string" pos:line="6" pos:column="22">" master"<pos:position pos:line="6" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt></block></then></if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">IamCoordinatorProcess<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">()<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">roles<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">append<pos:position pos:line="8" pos:column="21"/></name></name><argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="string" pos:line="8" pos:column="22">" coordinator"<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">IamWorkerProcess<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">()<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">roles<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">append<pos:position pos:line="10" pos:column="21"/></name></name><argument_list pos:line="10" pos:column="21">(<argument><expr><literal type="string" pos:line="10" pos:column="22">" worker"<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">IamDiskProcess<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">()<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">roles<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">append<pos:position pos:line="12" pos:column="21"/></name></name><argument_list pos:line="12" pos:column="21">(<argument><expr><literal type="string" pos:line="12" pos:column="22">" disker"<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt></block></then></if>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">roles<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1514_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPools<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">pools<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">unsigned<pos:position pos:line="2" pos:column="27"/></name> <name pos:line="2" pos:column="28">short<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">newPools<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">pools<pos:position pos:line="4" pos:column="14"/></name><argument_list pos:line="4" pos:column="14">()<pos:position pos:line="4" pos:column="16"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="22">"parse_delay_pool_count: multiple delay_pools lines, aborting all previous delay_pools config"<pos:position pos:line="5" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="118"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">FreePools<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">()<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">pools_<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">newPools<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">pools<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">()<pos:position pos:line="11" pos:column="16"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="17"/></condition><then pos:line="11" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">InitDelayData<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">()<pos:position pos:line="12" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

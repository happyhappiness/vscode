<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2139_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ClientDelayConfig<pos:position pos:line="1" pos:column="23"/></name><operator pos:line="1" pos:column="23">::<pos:position pos:line="1" pos:column="25"/></operator><name pos:line="1" pos:column="25">clean<pos:position pos:line="1" pos:column="30"/></name></name><parameter_list pos:line="1" pos:column="30">()<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <for pos:line="3" pos:column="5">for <control pos:line="3" pos:column="9">(<init><decl><type><name pos:line="3" pos:column="10">unsigned<pos:position pos:line="3" pos:column="18"/></name> <name pos:line="3" pos:column="19">int<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">i<pos:position pos:line="3" pos:column="24"/></name> <init pos:line="3" pos:column="25">= <expr><literal type="number" pos:line="3" pos:column="27">0<pos:position pos:line="3" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></init> <condition><expr><name pos:line="3" pos:column="30">i<pos:position pos:line="3" pos:column="31"/></name> <operator pos:line="3" pos:column="32">&lt;<pos:position pos:line="3" pos:column="36"/></operator> <call><name><name pos:line="3" pos:column="34">pools<pos:position pos:line="3" pos:column="39"/></name><operator pos:line="3" pos:column="39">.<pos:position pos:line="3" pos:column="40"/></operator><name pos:line="3" pos:column="40">size<pos:position pos:line="3" pos:column="44"/></name></name><argument_list pos:line="3" pos:column="44">()<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="47"/></condition> <incr><expr><operator pos:line="3" pos:column="48">++<pos:position pos:line="3" pos:column="50"/></operator><name pos:line="3" pos:column="50">i<pos:position pos:line="3" pos:column="51"/></name></expr></incr>)<pos:position pos:line="3" pos:column="52"/></control> <block pos:line="3" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">aclDestroyAccessList<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">(<argument><expr><operator pos:line="4" pos:column="30">&amp;<pos:position pos:line="4" pos:column="35"/></operator><name><name pos:line="4" pos:column="31">pools<pos:position pos:line="4" pos:column="36"/></name><index pos:line="4" pos:column="36">[<expr><name pos:line="4" pos:column="37">i<pos:position pos:line="4" pos:column="38"/></name></expr>]<pos:position pos:line="4" pos:column="39"/></index></name><operator pos:line="4" pos:column="39">.<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">access<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="5" pos:column="6"/></block></for>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

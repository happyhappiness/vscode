<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_718_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">WIN32_Subsystem_Init<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type> <name pos:line="1" pos:column="32">argc<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">char<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier><modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier><modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type> <name pos:line="1" pos:column="47">argv<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><call><name pos:line="3" pos:column="5">defined<pos:position pos:line="3" pos:column="12"/></name><argument_list pos:line="3" pos:column="12">(<argument><expr><name pos:line="3" pos:column="13">_MSC_VER<pos:position pos:line="3" pos:column="21"/></name></expr></argument>)<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr></cpp:if> <comment type="block" pos:line="3" pos:column="23">/* Microsoft C Compiler ONLY */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">_invalid_parameter_handler<pos:position pos:line="4" pos:column="31"/></name></type> <name pos:line="4" pos:column="32">oldHandler<pos:position pos:line="4" pos:column="42"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="44">newHandler<pos:position pos:line="4" pos:column="54"/></name></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
<cpp:endif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">endif<pos:position pos:line="5" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="7" pos:column="5">WIN32_OS_version<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">=<pos:position pos:line="7" pos:column="23"/></operator> <call><name pos:line="7" pos:column="24">GetOSVersion<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">WIN32_OS_version<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">_WIN_OS_UNKNOWN<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">)<pos:position pos:line="9" pos:column="46"/></operator> <operator pos:line="9" pos:column="47">||<pos:position pos:line="9" pos:column="49"/></operator> <operator pos:line="9" pos:column="50">(<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="51">WIN32_OS_version<pos:position pos:line="9" pos:column="67"/></name> <operator pos:line="9" pos:column="68">==<pos:position pos:line="9" pos:column="70"/></operator> <name pos:line="9" pos:column="71">_WIN_OS_WIN32S<pos:position pos:line="9" pos:column="85"/></name><operator pos:line="9" pos:column="85">)<pos:position pos:line="9" pos:column="86"/></operator></expr>)<pos:position pos:line="9" pos:column="87"/></condition><then pos:line="9" pos:column="87">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">atexit<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">WIN32_Exit<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call> <operator pos:line="12" pos:column="28">!=<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="31">0<pos:position pos:line="12" pos:column="32"/></literal></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return></block></then></if>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><call><name pos:line="15" pos:column="5">defined<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">_MSC_VER<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr></cpp:if> <comment type="block" pos:line="15" pos:column="23">/* Microsoft C Compiler ONLY */</comment>

    <expr_stmt><expr><name pos:line="17" pos:column="5">newHandler<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">Squid_Win32InvalidParameterHandler<pos:position pos:line="17" pos:column="52"/></name></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">oldHandler<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">_set_invalid_parameter_handler<pos:position pos:line="19" pos:column="48"/></name><argument_list pos:line="19" pos:column="48">(<argument><expr><name pos:line="19" pos:column="49">newHandler<pos:position pos:line="19" pos:column="59"/></name></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">_CrtSetReportMode<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">_CRT_ASSERT<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="36">0<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>

<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="24" pos:column="22"/></name></expr></cpp:if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">WIN32_run_mode<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">==<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">_WIN_SQUID_RUN_MODE_SERVICE<pos:position pos:line="26" pos:column="54"/></name></expr>)<pos:position pos:line="26" pos:column="55"/></condition><then pos:line="26" pos:column="55"> <block pos:line="26" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name></type> <name><name pos:line="27" pos:column="14">path<pos:position pos:line="27" pos:column="18"/></name><index pos:line="27" pos:column="18">[<expr><literal type="number" pos:line="27" pos:column="19">512<pos:position pos:line="27" pos:column="22"/></literal></expr>]<pos:position pos:line="27" pos:column="23"/></index></name></decl>;<pos:position pos:line="27" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">HKEY<pos:position pos:line="28" pos:column="13"/></name></type> <name pos:line="28" pos:column="14">hndKey<pos:position pos:line="28" pos:column="20"/></name></decl>;<pos:position pos:line="28" pos:column="21"/></decl_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">signal<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">SIGABRT<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="29">WIN32_Abort<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call> <operator pos:line="30" pos:column="42">==<pos:position pos:line="30" pos:column="44"/></operator> <name pos:line="30" pos:column="45">SIG_ERR<pos:position pos:line="30" pos:column="52"/></name></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53">
            <block type="pseudo"><return pos:line="31" pos:column="13">return <expr><literal type="number" pos:line="31" pos:column="20">1<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></return></block></then></if>

        <comment type="block" pos:line="33" pos:column="9">/* Register the service Handler function */</comment>
        <expr_stmt><expr><name pos:line="34" pos:column="9">svcHandle<pos:position pos:line="34" pos:column="18"/></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <call><name pos:line="34" pos:column="21">RegisterServiceCtrlHandler<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">(<argument><expr><name pos:line="34" pos:column="48">WIN32_Service_name<pos:position pos:line="34" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">WIN32_svcHandler<pos:position pos:line="34" pos:column="84"/></name></expr></argument>)<pos:position pos:line="34" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="86"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">svcHandle<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
            <block type="pseudo"><return pos:line="37" pos:column="13">return <expr><literal type="number" pos:line="37" pos:column="20">1<pos:position pos:line="37" pos:column="21"/></literal></expr>;<pos:position pos:line="37" pos:column="22"/></return></block></then></if>

        <comment type="block" pos:line="39" pos:column="9">/* Set Process work dir to directory cointaining squid.exe */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">GetModuleFileName<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">NULL<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">path<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="39">512<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>

        <expr_stmt><expr><name pos:line="42" pos:column="9">WIN32_module_name<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator><call><name pos:line="42" pos:column="27">xstrdup<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">path<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="44" pos:column="9">path<pos:position pos:line="44" pos:column="13"/></name><index pos:line="44" pos:column="13">[<expr><call><name pos:line="44" pos:column="14">strlen<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">path<pos:position pos:line="44" pos:column="25"/></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call> <operator pos:line="44" pos:column="27">-<pos:position pos:line="44" pos:column="28"/></operator> <literal type="number" pos:line="44" pos:column="29">10<pos:position pos:line="44" pos:column="31"/></literal></expr>]<pos:position pos:line="44" pos:column="32"/></index></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator> <literal type="char" pos:line="44" pos:column="35">'\0'<pos:position pos:line="44" pos:column="39"/></literal></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">SetCurrentDirectory<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">path<pos:position pos:line="46" pos:column="37"/></name></expr></argument>)<pos:position pos:line="46" pos:column="38"/></argument_list></call> <operator pos:line="46" pos:column="39">==<pos:position pos:line="46" pos:column="41"/></operator> <literal type="number" pos:line="46" pos:column="42">0<pos:position pos:line="46" pos:column="43"/></literal></expr>)<pos:position pos:line="46" pos:column="44"/></condition><then pos:line="46" pos:column="44">
            <block type="pseudo"><return pos:line="47" pos:column="13">return <expr><literal type="number" pos:line="47" pos:column="20">1<pos:position pos:line="47" pos:column="21"/></literal></expr>;<pos:position pos:line="47" pos:column="22"/></return></block></then></if>

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">safe_free<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">ConfigFile<pos:position pos:line="49" pos:column="29"/></name></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="31"/></expr_stmt>

        <comment type="block" pos:line="51" pos:column="9">/* get config file from Windows Registry */</comment>
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><call><name pos:line="52" pos:column="13">RegOpenKeyEx<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">HKEY_LOCAL_MACHINE<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="46">REGKEY<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="54">0<pos:position pos:line="52" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="57">KEY_QUERY_VALUE<pos:position pos:line="52" pos:column="72"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="74">&amp;<pos:position pos:line="52" pos:column="79"/></operator><name pos:line="52" pos:column="75">hndKey<pos:position pos:line="52" pos:column="81"/></name></expr></argument>)<pos:position pos:line="52" pos:column="82"/></argument_list></call> <operator pos:line="52" pos:column="83">==<pos:position pos:line="52" pos:column="85"/></operator> <name pos:line="52" pos:column="86">ERROR_SUCCESS<pos:position pos:line="52" pos:column="99"/></name></expr>)<pos:position pos:line="52" pos:column="100"/></condition><then pos:line="52" pos:column="100"> <block pos:line="52" pos:column="101">{
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">DWORD<pos:position pos:line="53" pos:column="18"/></name></type> <name pos:line="53" pos:column="19">Type<pos:position pos:line="53" pos:column="23"/></name> <init pos:line="53" pos:column="24">= <expr><literal type="number" pos:line="53" pos:column="26">0<pos:position pos:line="53" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="53" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="54" pos:column="13">DWORD<pos:position pos:line="54" pos:column="18"/></name></type> <name pos:line="54" pos:column="19">Size<pos:position pos:line="54" pos:column="23"/></name> <init pos:line="54" pos:column="24">= <expr><literal type="number" pos:line="54" pos:column="26">0<pos:position pos:line="54" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="54" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="55" pos:column="13">LONG<pos:position pos:line="55" pos:column="17"/></name></type> <name pos:line="55" pos:column="18">Result<pos:position pos:line="55" pos:column="24"/></name></decl>;<pos:position pos:line="55" pos:column="25"/></decl_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">Result<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <call><name pos:line="56" pos:column="22">RegQueryValueEx<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">hndKey<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">CONFIGFILE<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">NULL<pos:position pos:line="56" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="64">&amp;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="65">Type<pos:position pos:line="56" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="71">NULL<pos:position pos:line="56" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="77">&amp;<pos:position pos:line="56" pos:column="82"/></operator><name pos:line="56" pos:column="78">Size<pos:position pos:line="56" pos:column="82"/></name></expr></argument>)<pos:position pos:line="56" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="84"/></expr_stmt>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><name pos:line="58" pos:column="17">Result<pos:position pos:line="58" pos:column="23"/></name> <operator pos:line="58" pos:column="24">==<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">ERROR_SUCCESS<pos:position pos:line="58" pos:column="40"/></name> <operator pos:line="58" pos:column="41">&amp;&amp;<pos:position pos:line="58" pos:column="51"/></operator> <name pos:line="58" pos:column="44">Size<pos:position pos:line="58" pos:column="48"/></name></expr>)<pos:position pos:line="58" pos:column="49"/></condition><then pos:line="58" pos:column="49"> <block pos:line="58" pos:column="50">{
                <expr_stmt><expr><name pos:line="59" pos:column="17">ConfigFile<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <cast type="static" pos:line="59" pos:column="30">static_cast<argument_list type="generic" pos:line="59" pos:column="41">&lt;<argument><expr><name pos:line="59" pos:column="42">char<pos:position pos:line="59" pos:column="46"/></name> <operator pos:line="59" pos:column="47">*<pos:position pos:line="59" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="59" pos:column="52"/></argument_list><argument_list pos:line="59" pos:column="49">(<argument><expr><call><name pos:line="59" pos:column="50">xmalloc<pos:position pos:line="59" pos:column="57"/></name><argument_list pos:line="59" pos:column="57">(<argument><expr><name pos:line="59" pos:column="58">Size<pos:position pos:line="59" pos:column="62"/></name></expr></argument>)<pos:position pos:line="59" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></cast></expr>;<pos:position pos:line="59" pos:column="65"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">RegQueryValueEx<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><name pos:line="60" pos:column="33">hndKey<pos:position pos:line="60" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="41">CONFIGFILE<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">NULL<pos:position pos:line="60" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="59">&amp;<pos:position pos:line="60" pos:column="64"/></operator><name pos:line="60" pos:column="60">Type<pos:position pos:line="60" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="66">(<pos:position pos:line="60" pos:column="67"/></operator><name pos:line="60" pos:column="67">unsigned<pos:position pos:line="60" pos:column="75"/></name> <name pos:line="60" pos:column="76">char<pos:position pos:line="60" pos:column="80"/></name> <operator pos:line="60" pos:column="81">*<pos:position pos:line="60" pos:column="82"/></operator><operator pos:line="60" pos:column="82">)<pos:position pos:line="60" pos:column="83"/></operator><name pos:line="60" pos:column="83">ConfigFile<pos:position pos:line="60" pos:column="93"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="95">&amp;<pos:position pos:line="60" pos:column="100"/></operator><name pos:line="60" pos:column="96">Size<pos:position pos:line="60" pos:column="100"/></name></expr></argument>)<pos:position pos:line="60" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="102"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then> <else pos:line="61" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="17">ConfigFile<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <call><name pos:line="62" pos:column="30">xstrdup<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">(<argument><expr><name pos:line="62" pos:column="38">DefaultConfigFile<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="57"/></expr_stmt></block></else></if>

            <expr_stmt><expr><name pos:line="64" pos:column="13">Size<pos:position pos:line="64" pos:column="17"/></name> <operator pos:line="64" pos:column="18">=<pos:position pos:line="64" pos:column="19"/></operator> <literal type="number" pos:line="64" pos:column="20">0<pos:position pos:line="64" pos:column="21"/></literal></expr>;<pos:position pos:line="64" pos:column="22"/></expr_stmt>

            <expr_stmt><expr><name pos:line="66" pos:column="13">Type<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">=<pos:position pos:line="66" pos:column="19"/></operator> <literal type="number" pos:line="66" pos:column="20">0<pos:position pos:line="66" pos:column="21"/></literal></expr>;<pos:position pos:line="66" pos:column="22"/></expr_stmt>

            <expr_stmt><expr><name pos:line="68" pos:column="13">Result<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">=<pos:position pos:line="68" pos:column="21"/></operator> <call><name pos:line="68" pos:column="22">RegQueryValueEx<pos:position pos:line="68" pos:column="37"/></name><argument_list pos:line="68" pos:column="37">(<argument><expr><name pos:line="68" pos:column="38">hndKey<pos:position pos:line="68" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="46">COMMANDLINE<pos:position pos:line="68" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="59">NULL<pos:position pos:line="68" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="65">&amp;<pos:position pos:line="68" pos:column="70"/></operator><name pos:line="68" pos:column="66">Type<pos:position pos:line="68" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="72">NULL<pos:position pos:line="68" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="78">&amp;<pos:position pos:line="68" pos:column="83"/></operator><name pos:line="68" pos:column="79">Size<pos:position pos:line="68" pos:column="83"/></name></expr></argument>)<pos:position pos:line="68" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="85"/></expr_stmt>

            <if pos:line="70" pos:column="13">if <condition pos:line="70" pos:column="16">(<expr><name pos:line="70" pos:column="17">Result<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">==<pos:position pos:line="70" pos:column="26"/></operator> <name pos:line="70" pos:column="27">ERROR_SUCCESS<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">&amp;&amp;<pos:position pos:line="70" pos:column="51"/></operator> <name pos:line="70" pos:column="44">Size<pos:position pos:line="70" pos:column="48"/></name></expr>)<pos:position pos:line="70" pos:column="49"/></condition><then pos:line="70" pos:column="49"> <block pos:line="70" pos:column="50">{
                <expr_stmt><expr><name pos:line="71" pos:column="17">WIN32_Service_Command_Line<pos:position pos:line="71" pos:column="43"/></name> <operator pos:line="71" pos:column="44">=<pos:position pos:line="71" pos:column="45"/></operator> <cast type="static" pos:line="71" pos:column="46">static_cast<argument_list type="generic" pos:line="71" pos:column="57">&lt;<argument><expr><name pos:line="71" pos:column="58">char<pos:position pos:line="71" pos:column="62"/></name> <operator pos:line="71" pos:column="63">*<pos:position pos:line="71" pos:column="64"/></operator></expr></argument>&gt;<pos:position pos:line="71" pos:column="68"/></argument_list><argument_list pos:line="71" pos:column="65">(<argument><expr><call><name pos:line="71" pos:column="66">xmalloc<pos:position pos:line="71" pos:column="73"/></name><argument_list pos:line="71" pos:column="73">(<argument><expr><name pos:line="71" pos:column="74">Size<pos:position pos:line="71" pos:column="78"/></name></expr></argument>)<pos:position pos:line="71" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="80"/></argument_list></cast></expr>;<pos:position pos:line="71" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">RegQueryValueEx<pos:position pos:line="72" pos:column="32"/></name><argument_list pos:line="72" pos:column="32">(<argument><expr><name pos:line="72" pos:column="33">hndKey<pos:position pos:line="72" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="41">COMMANDLINE<pos:position pos:line="72" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="54">NULL<pos:position pos:line="72" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="60">&amp;<pos:position pos:line="72" pos:column="65"/></operator><name pos:line="72" pos:column="61">Type<pos:position pos:line="72" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="67">(<pos:position pos:line="72" pos:column="68"/></operator><name pos:line="72" pos:column="68">unsigned<pos:position pos:line="72" pos:column="76"/></name> <name pos:line="72" pos:column="77">char<pos:position pos:line="72" pos:column="81"/></name> <operator pos:line="72" pos:column="82">*<pos:position pos:line="72" pos:column="83"/></operator><operator pos:line="72" pos:column="83">)<pos:position pos:line="72" pos:column="84"/></operator><name pos:line="72" pos:column="84">WIN32_Service_Command_Line<pos:position pos:line="72" pos:column="110"/></name></expr></argument>, <argument><expr><operator pos:line="72" pos:column="112">&amp;<pos:position pos:line="72" pos:column="117"/></operator><name pos:line="72" pos:column="113">Size<pos:position pos:line="72" pos:column="117"/></name></expr></argument>)<pos:position pos:line="72" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="119"/></expr_stmt>
            }<pos:position pos:line="73" pos:column="14"/></block></then> <else pos:line="73" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="17">WIN32_Service_Command_Line<pos:position pos:line="74" pos:column="43"/></name> <operator pos:line="74" pos:column="44">=<pos:position pos:line="74" pos:column="45"/></operator> <call><name pos:line="74" pos:column="46">xstrdup<pos:position pos:line="74" pos:column="53"/></name><argument_list pos:line="74" pos:column="53">(<argument><expr><literal type="string" pos:line="74" pos:column="54">""<pos:position pos:line="74" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="58"/></expr_stmt></block></else></if>

            <expr_stmt><expr><call><name pos:line="76" pos:column="13">RegCloseKey<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><name pos:line="76" pos:column="25">hndKey<pos:position pos:line="76" pos:column="31"/></name></expr></argument>)<pos:position pos:line="76" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then> <else pos:line="77" pos:column="11">else <block pos:line="77" pos:column="16">{
            <expr_stmt><expr><name pos:line="78" pos:column="13">ConfigFile<pos:position pos:line="78" pos:column="23"/></name> <operator pos:line="78" pos:column="24">=<pos:position pos:line="78" pos:column="25"/></operator> <call><name pos:line="78" pos:column="26">xstrdup<pos:position pos:line="78" pos:column="33"/></name><argument_list pos:line="78" pos:column="33">(<argument><expr><name pos:line="78" pos:column="34">DefaultConfigFile<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><name pos:line="79" pos:column="13">WIN32_Service_Command_Line<pos:position pos:line="79" pos:column="39"/></name> <operator pos:line="79" pos:column="40">=<pos:position pos:line="79" pos:column="41"/></operator> <call><name pos:line="79" pos:column="42">xstrdup<pos:position pos:line="79" pos:column="49"/></name><argument_list pos:line="79" pos:column="49">(<argument><expr><literal type="string" pos:line="79" pos:column="50">""<pos:position pos:line="79" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="82" pos:column="9">WIN32_build_argv<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">WIN32_Service_Command_Line<pos:position pos:line="82" pos:column="52"/></name></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="83" pos:column="9">*<pos:position pos:line="83" pos:column="10"/></operator><name pos:line="83" pos:column="10">argc<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <name pos:line="83" pos:column="17">WIN32_argc<pos:position pos:line="83" pos:column="27"/></name></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="84" pos:column="9">*<pos:position pos:line="84" pos:column="10"/></operator><name pos:line="84" pos:column="10">argv<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">=<pos:position pos:line="84" pos:column="16"/></operator> <name pos:line="84" pos:column="17">WIN32_argv<pos:position pos:line="84" pos:column="27"/></name></expr>;<pos:position pos:line="84" pos:column="28"/></expr_stmt>
        <comment type="block" pos:line="85" pos:column="9">/* Set Service Status to SERVICE_START_PENDING */</comment>
        <expr_stmt><expr><name><name pos:line="86" pos:column="9">svcStatus<pos:position pos:line="86" pos:column="18"/></name><operator pos:line="86" pos:column="18">.<pos:position pos:line="86" pos:column="19"/></operator><name pos:line="86" pos:column="19">dwServiceType<pos:position pos:line="86" pos:column="32"/></name></name> <operator pos:line="86" pos:column="33">=<pos:position pos:line="86" pos:column="34"/></operator> <name pos:line="86" pos:column="35">SERVICE_WIN32_OWN_PROCESS<pos:position pos:line="86" pos:column="60"/></name></expr>;<pos:position pos:line="86" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="87" pos:column="9">svcStatus<pos:position pos:line="87" pos:column="18"/></name><operator pos:line="87" pos:column="18">.<pos:position pos:line="87" pos:column="19"/></operator><name pos:line="87" pos:column="19">dwCurrentState<pos:position pos:line="87" pos:column="33"/></name></name> <operator pos:line="87" pos:column="34">=<pos:position pos:line="87" pos:column="35"/></operator> <name pos:line="87" pos:column="36">SERVICE_START_PENDING<pos:position pos:line="87" pos:column="57"/></name></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="88" pos:column="9">svcStatus<pos:position pos:line="88" pos:column="18"/></name><operator pos:line="88" pos:column="18">.<pos:position pos:line="88" pos:column="19"/></operator><name pos:line="88" pos:column="19">dwControlsAccepted<pos:position pos:line="88" pos:column="37"/></name></name> <operator pos:line="88" pos:column="38">=<pos:position pos:line="88" pos:column="39"/></operator>
            <name pos:line="89" pos:column="13">SERVICE_ACCEPT_STOP<pos:position pos:line="89" pos:column="32"/></name> <operator pos:line="89" pos:column="33">|<pos:position pos:line="89" pos:column="34"/></operator> <name pos:line="89" pos:column="35">SERVICE_ACCEPT_SHUTDOWN<pos:position pos:line="89" pos:column="58"/></name></expr>;<pos:position pos:line="89" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">svcStatus<pos:position pos:line="90" pos:column="18"/></name><operator pos:line="90" pos:column="18">.<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">dwWin32ExitCode<pos:position pos:line="90" pos:column="34"/></name></name> <operator pos:line="90" pos:column="35">=<pos:position pos:line="90" pos:column="36"/></operator> <literal type="number" pos:line="90" pos:column="37">0<pos:position pos:line="90" pos:column="38"/></literal></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">svcStatus<pos:position pos:line="91" pos:column="18"/></name><operator pos:line="91" pos:column="18">.<pos:position pos:line="91" pos:column="19"/></operator><name pos:line="91" pos:column="19">dwServiceSpecificExitCode<pos:position pos:line="91" pos:column="44"/></name></name> <operator pos:line="91" pos:column="45">=<pos:position pos:line="91" pos:column="46"/></operator> <literal type="number" pos:line="91" pos:column="47">0<pos:position pos:line="91" pos:column="48"/></literal></expr>;<pos:position pos:line="91" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">svcStatus<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">.<pos:position pos:line="92" pos:column="19"/></operator><name pos:line="92" pos:column="19">dwCheckPoint<pos:position pos:line="92" pos:column="31"/></name></name> <operator pos:line="92" pos:column="32">=<pos:position pos:line="92" pos:column="33"/></operator> <literal type="number" pos:line="92" pos:column="34">0<pos:position pos:line="92" pos:column="35"/></literal></expr>;<pos:position pos:line="92" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">svcStatus<pos:position pos:line="93" pos:column="18"/></name><operator pos:line="93" pos:column="18">.<pos:position pos:line="93" pos:column="19"/></operator><name pos:line="93" pos:column="19">dwWaitHint<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">=<pos:position pos:line="93" pos:column="31"/></operator> <literal type="number" pos:line="93" pos:column="32">10000<pos:position pos:line="93" pos:column="37"/></literal></expr>;<pos:position pos:line="93" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="94" pos:column="9">SetServiceStatus<pos:position pos:line="94" pos:column="25"/></name><argument_list pos:line="94" pos:column="25">(<argument><expr><name pos:line="94" pos:column="26">svcHandle<pos:position pos:line="94" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="37">&amp;<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="38">svcStatus<pos:position pos:line="94" pos:column="47"/></name></expr></argument>)<pos:position pos:line="94" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="49"/></expr_stmt>
<cpp:ifdef pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">ifdef<pos:position pos:line="95" pos:column="7"/></cpp:directive> <name pos:line="95" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="95" pos:column="21"/></name></cpp:ifdef>

        <expr_stmt><expr><call><name pos:line="97" pos:column="9">_setmaxstdio<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">Squid_MaxFD<pos:position pos:line="97" pos:column="33"/></name></expr></argument>)<pos:position pos:line="97" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>

    }<pos:position pos:line="100" pos:column="6"/></block></then></if>

<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="102" pos:column="8">/* USE_WIN32_SERVICE */</comment>
<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef<pos:position pos:line="103" pos:column="7"/></cpp:directive> <name pos:line="103" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="103" pos:column="21"/></name></cpp:ifdef>
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><call><name pos:line="104" pos:column="9">Win32SockInit<pos:position pos:line="104" pos:column="22"/></name><argument_list pos:line="104" pos:column="22">()<pos:position pos:line="104" pos:column="24"/></argument_list></call> <operator pos:line="104" pos:column="25">&lt;<pos:position pos:line="104" pos:column="29"/></operator> <literal type="number" pos:line="104" pos:column="27">0<pos:position pos:line="104" pos:column="28"/></literal></expr>)<pos:position pos:line="104" pos:column="29"/></condition><then pos:line="104" pos:column="29">
        <block type="pseudo"><return pos:line="105" pos:column="9">return <expr><literal type="number" pos:line="105" pos:column="16">1<pos:position pos:line="105" pos:column="17"/></literal></expr>;<pos:position pos:line="105" pos:column="18"/></return></block></then></if>

<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="109" pos:column="5">return <expr><literal type="number" pos:line="109" pos:column="12">0<pos:position pos:line="109" pos:column="13"/></literal></expr>;<pos:position pos:line="109" pos:column="14"/></return>
}<pos:position pos:line="110" pos:column="2"/></block></function></unit>

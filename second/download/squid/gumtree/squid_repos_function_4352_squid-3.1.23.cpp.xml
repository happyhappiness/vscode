<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4352_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLList<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">matches<pos:position pos:line="2" pos:column="17"/></name></name> <parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">ACLChecklist<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">checklist<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list> <specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">_acl<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">AclMatchedName<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">=<pos:position pos:line="5" pos:column="21"/></operator> <name><name pos:line="5" pos:column="22">_acl<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">name<pos:position pos:line="5" pos:column="32"/></name></name></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">28<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"ACLList::matches: checking "<pos:position pos:line="6" pos:column="48"/></literal> <operator pos:line="6" pos:column="49">&lt;&lt;<pos:position pos:line="6" pos:column="57"/></operator> <operator pos:line="6" pos:column="52">(<pos:position pos:line="6" pos:column="53"/></operator><ternary><condition><expr><name pos:line="6" pos:column="53">op<pos:position pos:line="6" pos:column="55"/></name></expr> ?<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57"> <expr><name pos:line="6" pos:column="58">null_string<pos:position pos:line="6" pos:column="69"/></name></expr> <pos:position pos:line="6" pos:column="70"/></then><else pos:line="6" pos:column="70">: <expr><literal type="string" pos:line="6" pos:column="72">"!"<pos:position pos:line="6" pos:column="75"/></literal></expr></else></ternary><operator pos:line="6" pos:column="75">)<pos:position pos:line="6" pos:column="76"/></operator> <operator pos:line="6" pos:column="77">&lt;&lt;<pos:position pos:line="6" pos:column="85"/></operator> <name><name pos:line="6" pos:column="80">_acl<pos:position pos:line="6" pos:column="84"/></name><operator pos:line="6" pos:column="84">-&gt;<pos:position pos:line="6" pos:column="89"/></operator><name pos:line="6" pos:column="86">name<pos:position pos:line="6" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="92"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">_acl<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">checklistMatches<pos:position pos:line="8" pos:column="31"/></name></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">checklist<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call> <operator pos:line="8" pos:column="43">!=<pos:position pos:line="8" pos:column="45"/></operator> <name pos:line="8" pos:column="46">op<pos:position pos:line="8" pos:column="48"/></name></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">28<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">4<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"ACLList::matches: result is false"<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><call><name><name pos:line="10" pos:column="16">checklist<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">lastACLResult<pos:position pos:line="10" pos:column="40"/></name></name><argument_list pos:line="10" pos:column="40">(<argument><expr><literal type="boolean" pos:line="10" pos:column="41">false<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">28<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">4<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"ACLList::matches: result is true"<pos:position pos:line="13" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><call><name><name pos:line="14" pos:column="12">checklist<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">lastACLResult<pos:position pos:line="14" pos:column="36"/></name></name><argument_list pos:line="14" pos:column="36">(<argument><expr><literal type="boolean" pos:line="14" pos:column="37">true<pos:position pos:line="14" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="43"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

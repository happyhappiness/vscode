<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1908_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreController<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">createOneStore<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">Store<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">aStore<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * On Windows, fork() is not available.
     * The following is a workaround for create store directories sequentially
     * when running on native Windows port.
     */</comment>
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><operator pos:line="9" pos:column="5">!<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">_SQUID_WINDOWS_<pos:position pos:line="9" pos:column="21"/></name></expr></cpp:if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">fork<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">()<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">aStore<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">create<pos:position pos:line="16" pos:column="18"/></name></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><operator pos:line="18" pos:column="5">!<pos:position pos:line="18" pos:column="6"/></operator><name pos:line="18" pos:column="6">_SQUID_WINDOWS_<pos:position pos:line="18" pos:column="21"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">exit<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><literal type="number" pos:line="20" pos:column="10">0<pos:position pos:line="20" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="13"/></expr_stmt>

<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

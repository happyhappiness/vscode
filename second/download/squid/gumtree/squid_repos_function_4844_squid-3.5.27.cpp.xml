<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4844_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">ACLFlags<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">flagsStr<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list> <specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">64<pos:position pos:line="4" pos:column="23"/></literal></expr>]<pos:position pos:line="4" pos:column="24"/></index></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">flags_<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">==<pos:position pos:line="5" pos:column="18"/></operator> <literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="string" pos:line="6" pos:column="16">""<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">s<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">buf<pos:position pos:line="8" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">s<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">++<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="char" pos:line="9" pos:column="12">'-'<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name pos:line="10" pos:column="10">ACLFlag<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">f<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><literal type="char" pos:line="10" pos:column="22">'A'<pos:position pos:line="10" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="26"/></init> <condition><expr><name pos:line="10" pos:column="27">f<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&lt;=<pos:position pos:line="10" pos:column="34"/></operator> <literal type="char" pos:line="10" pos:column="32">'z'<pos:position pos:line="10" pos:column="35"/></literal></expr>;<pos:position pos:line="10" pos:column="36"/></condition> <incr><expr><name pos:line="10" pos:column="37">f<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">++<pos:position pos:line="10" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="41"/></control> <block pos:line="10" pos:column="42">{
        <comment type="line" pos:line="11" pos:column="9">// ACL_F_REGEX_CASE (-i) flag handled by ACLRegexData class, ignore</comment>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">isSet<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">f<pos:position pos:line="12" pos:column="20"/></name></expr></argument>)<pos:position pos:line="12" pos:column="21"/></argument_list></call> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="25">f<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">!=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">ACL_F_REGEX_CASE<pos:position pos:line="12" pos:column="46"/></name></expr>)<pos:position pos:line="12" pos:column="47"/></condition><then pos:line="12" pos:column="47">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">s<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">++<pos:position pos:line="13" pos:column="17"/></operator> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">f<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></for>
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">s<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <literal type="char" pos:line="15" pos:column="10">'\0'<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">buf<pos:position pos:line="16" pos:column="15"/></name></expr>;<pos:position pos:line="16" pos:column="16"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7220_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">RemovalPolicy<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type>
<name pos:line="2" pos:column="1">createRemovalPolicy_heap<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">wordlist<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">args<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RemovalPolicy<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">policy<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HeapPolicyData<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">heap_data<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">keytype<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* Allocate the needed structures */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">policy<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <operator pos:line="8" pos:column="14">new<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">RemovalPolicy<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">heap_data<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">HeapPolicyData<pos:position pos:line="9" pos:column="32"/></name> <operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator><call><name pos:line="9" pos:column="35">xcalloc<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><literal type="number" pos:line="9" pos:column="43">1<pos:position pos:line="9" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="46">sizeof<argument_list pos:line="9" pos:column="52">(<argument><expr><operator pos:line="9" pos:column="53">*<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="54">heap_data<pos:position pos:line="9" pos:column="63"/></name></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* Initialize the policy data */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">heap_data<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">policy<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">policy<pos:position pos:line="11" pos:column="31"/></name></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">args<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14"> <block pos:line="13" pos:column="15">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">keytype<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name><name pos:line="14" pos:column="19">args<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">key<pos:position pos:line="14" pos:column="28"/></name></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">args<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name><name pos:line="15" pos:column="16">args<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">next<pos:position pos:line="15" pos:column="26"/></name></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then> <else pos:line="16" pos:column="7">else <block pos:line="16" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">81<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">DBG_IMPORTANT<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"createRemovalPolicy_heap: No key type specified. Using LRU"<pos:position pos:line="17" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">keytype<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="string" pos:line="18" pos:column="19">"LRU"<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">strcmp<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">keytype<pos:position pos:line="21" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="26">"GDSF"<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="34"/></condition><then pos:line="21" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="9">heap_data<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">keyfunc<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <name pos:line="22" pos:column="30">HeapKeyGen_StoreEntry_GDSF<pos:position pos:line="22" pos:column="56"/></name></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt></block></then>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><operator pos:line="23" pos:column="14">!<pos:position pos:line="23" pos:column="15"/></operator><call><name pos:line="23" pos:column="15">strcmp<pos:position pos:line="23" pos:column="21"/></name><argument_list pos:line="23" pos:column="21">(<argument><expr><name pos:line="23" pos:column="22">keytype<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="31">"LFUDA"<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="40"/></condition><then pos:line="23" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="24" pos:column="9">heap_data<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">keyfunc<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">HeapKeyGen_StoreEntry_LFUDA<pos:position pos:line="24" pos:column="57"/></name></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="25" pos:column="5">else <if pos:line="25" pos:column="10">if <condition pos:line="25" pos:column="13">(<expr><operator pos:line="25" pos:column="14">!<pos:position pos:line="25" pos:column="15"/></operator><call><name pos:line="25" pos:column="15">strcmp<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">keytype<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"LRU"<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="9">heap_data<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">-&gt;<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="20">keyfunc<pos:position pos:line="26" pos:column="27"/></name></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">HeapKeyGen_StoreEntry_LRU<pos:position pos:line="26" pos:column="55"/></name></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <else pos:line="27" pos:column="5">else <block pos:line="27" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">81<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="20">DBG_CRITICAL<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"createRemovalPolicy_heap: Unknown key type \""<pos:position pos:line="28" pos:column="81"/></literal> <operator pos:line="28" pos:column="82">&lt;&lt;<pos:position pos:line="28" pos:column="90"/></operator> <name pos:line="28" pos:column="85">keytype<pos:position pos:line="28" pos:column="92"/></name> <operator pos:line="28" pos:column="93">&lt;&lt;<pos:position pos:line="28" pos:column="101"/></operator> <literal type="string" pos:line="28" pos:column="96">"\". Using LRU"<pos:position pos:line="28" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">heap_data<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">keyfunc<pos:position pos:line="29" pos:column="27"/></name></name> <operator pos:line="29" pos:column="28">=<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">HeapKeyGen_StoreEntry_LRU<pos:position pos:line="29" pos:column="55"/></name></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="32" pos:column="5">/* No additional arguments expected */</comment>
    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><name pos:line="33" pos:column="12">args<pos:position pos:line="33" pos:column="16"/></name></expr>)<pos:position pos:line="33" pos:column="17"/></condition> <block pos:line="33" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">81<pos:position pos:line="34" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">DBG_IMPORTANT<pos:position pos:line="34" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="35">"WARNING: discarding unknown removal policy '"<pos:position pos:line="34" pos:column="81"/></literal> <operator pos:line="34" pos:column="82">&lt;&lt;<pos:position pos:line="34" pos:column="90"/></operator> <name><name pos:line="34" pos:column="85">args<pos:position pos:line="34" pos:column="89"/></name><operator pos:line="34" pos:column="89">-&gt;<pos:position pos:line="34" pos:column="94"/></operator><name pos:line="34" pos:column="91">key<pos:position pos:line="34" pos:column="94"/></name></name> <operator pos:line="34" pos:column="95">&lt;&lt;<pos:position pos:line="34" pos:column="103"/></operator> <literal type="string" pos:line="34" pos:column="98">"'"<pos:position pos:line="34" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">args<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <name><name pos:line="35" pos:column="16">args<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">next<pos:position pos:line="35" pos:column="26"/></name></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></while>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">heap_data<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">theHeap<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <call><name pos:line="38" pos:column="26">new_heap<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><literal type="number" pos:line="38" pos:column="35">1000<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="41">heap_data<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">keyfunc<pos:position pos:line="38" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="40" pos:column="5">heap_data<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">theHeap<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">-&gt;<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="25">age<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">=<pos:position pos:line="40" pos:column="30"/></operator> <literal type="number" pos:line="40" pos:column="31">1.0<pos:position pos:line="40" pos:column="34"/></literal></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Populate the policy structure */</comment>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">policy<pos:position pos:line="43" pos:column="11"/></name><operator pos:line="43" pos:column="11">-&gt;<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="13">_type<pos:position pos:line="43" pos:column="18"/></name></name> <operator pos:line="43" pos:column="19">=<pos:position pos:line="43" pos:column="20"/></operator> <literal type="string" pos:line="43" pos:column="21">"heap"<pos:position pos:line="43" pos:column="27"/></literal></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">policy<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">_data<pos:position pos:line="45" pos:column="18"/></name></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <name pos:line="45" pos:column="21">heap_data<pos:position pos:line="45" pos:column="30"/></name></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">policy<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">-&gt;<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="13">Free<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">heap_free<pos:position pos:line="47" pos:column="29"/></name></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="49" pos:column="5">policy<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">Add<pos:position pos:line="49" pos:column="16"/></name></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">heap_add<pos:position pos:line="49" pos:column="27"/></name></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">policy<pos:position pos:line="51" pos:column="11"/></name><operator pos:line="51" pos:column="11">-&gt;<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="13">Remove<pos:position pos:line="51" pos:column="19"/></name></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">heap_remove<pos:position pos:line="51" pos:column="33"/></name></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="53" pos:column="5">policy<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">Referenced<pos:position pos:line="53" pos:column="23"/></name></name> <operator pos:line="53" pos:column="24">=<pos:position pos:line="53" pos:column="25"/></operator> <name pos:line="53" pos:column="26">NULL<pos:position pos:line="53" pos:column="30"/></name></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="55" pos:column="5">policy<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">Dereferenced<pos:position pos:line="55" pos:column="25"/></name></name> <operator pos:line="55" pos:column="26">=<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="28">heap_referenced<pos:position pos:line="55" pos:column="43"/></name></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="57" pos:column="5">policy<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">WalkInit<pos:position pos:line="57" pos:column="21"/></name></name> <operator pos:line="57" pos:column="22">=<pos:position pos:line="57" pos:column="23"/></operator> <name pos:line="57" pos:column="24">heap_walkInit<pos:position pos:line="57" pos:column="37"/></name></expr>;<pos:position pos:line="57" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="59" pos:column="5">policy<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">PurgeInit<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">heap_purgeInit<pos:position pos:line="59" pos:column="39"/></name></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="61" pos:column="5">/* Increase policy usage count */</comment>
    <expr_stmt><expr><name pos:line="62" pos:column="5">nr_heap_policies<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">+=<pos:position pos:line="62" pos:column="24"/></operator> <literal type="number" pos:line="62" pos:column="25">0<pos:position pos:line="62" pos:column="26"/></literal></expr>;<pos:position pos:line="62" pos:column="27"/></expr_stmt>

    <return pos:line="64" pos:column="5">return <expr><name pos:line="64" pos:column="12">policy<pos:position pos:line="64" pos:column="18"/></name></expr>;<pos:position pos:line="64" pos:column="19"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

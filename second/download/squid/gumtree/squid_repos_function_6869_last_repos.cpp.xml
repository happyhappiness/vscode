<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6869_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dumpstack<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">stackmember<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">stack<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">depth<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">depth<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15"> <block pos:line="4" pos:column="16">{
        <decl_stmt><decl><type><name><name pos:line="5" pos:column="9">std<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">::<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">ostringstream<pos:position pos:line="5" pos:column="27"/></name></name></type> <name pos:line="5" pos:column="28">buf<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
        <for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><decl><type><name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">i<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></init> <condition><expr><name pos:line="6" pos:column="25">i<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="29">depth<pos:position pos:line="6" pos:column="34"/></name></expr>;<pos:position pos:line="6" pos:column="35"/></condition> <incr><expr><operator pos:line="6" pos:column="36">++<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">i<pos:position pos:line="6" pos:column="39"/></name></expr></incr>)<pos:position pos:line="6" pos:column="40"/></control>
            <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="13">buf<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&lt;&lt;<pos:position pos:line="7" pos:column="25"/></operator> <name><name pos:line="7" pos:column="20">stack<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><name pos:line="7" pos:column="26">i<pos:position pos:line="7" pos:column="27"/></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt></block></for>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">86<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">str<pos:position pos:line="8" pos:column="29"/></name></name><argument_list pos:line="8" pos:column="29">()<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

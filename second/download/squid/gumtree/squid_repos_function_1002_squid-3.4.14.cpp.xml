<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1002_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">_db_init<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">logfile<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">options<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">Debug<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">::<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">parseOptions<pos:position pos:line="4" pos:column="24"/></name></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">options<pos:position pos:line="4" pos:column="32"/></name></expr></argument>)<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugOpenLog<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">logfile<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">HAVE_SYSLOG<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&amp;&amp;<pos:position pos:line="8" pos:column="27"/></operator> <call><name pos:line="8" pos:column="20">defined<pos:position pos:line="8" pos:column="27"/></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">LOG_LOCAL4<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr></cpp:if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">Debug<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">log_syslog<pos:position pos:line="10" pos:column="26"/></name></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">openlog<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">APP_SHORTNAME<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">LOG_PID<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">|<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">LOG_NDELAY<pos:position pos:line="11" pos:column="52"/></name> <operator pos:line="11" pos:column="53">|<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="55">LOG_CONS<pos:position pos:line="11" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="65">syslog_facility<pos:position pos:line="11" pos:column="80"/></name></expr></argument>)<pos:position pos:line="11" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="82"/></expr_stmt></block></then></if>

<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="13" pos:column="8">/* HAVE_SYSLOG */</comment>

    <comment type="block" pos:line="15" pos:column="5">/* Pre-Init TZ env, see bug #2656 */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">tzset<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">()<pos:position pos:line="16" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="13"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

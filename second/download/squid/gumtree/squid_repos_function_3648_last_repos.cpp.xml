<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3648_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">fillDoneStatus<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">MemBuf<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">&amp;<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="56">buf<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name pos:line="3" pos:column="9">haveConnection<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">()<pos:position pos:line="3" pos:column="25"/></argument_list></call> <operator pos:line="3" pos:column="26">&amp;&amp;<pos:position pos:line="3" pos:column="36"/></operator> <name pos:line="3" pos:column="29">commEof<pos:position pos:line="3" pos:column="36"/></name></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="4" pos:column="9">buf<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">.<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">appendf<pos:position pos:line="4" pos:column="20"/></name></name><argument_list pos:line="4" pos:column="20">(<argument><expr><literal type="string" pos:line="4" pos:column="21">"Comm(%d)"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="33">connection<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">fd<pos:position pos:line="4" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="49"/></expr_stmt></block></then></if>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">stopReason<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">!=<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr>)<pos:position pos:line="6" pos:column="28"/></condition><then pos:line="6" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">.<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">append<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="string" pos:line="7" pos:column="20">"Stopped"<pos:position pos:line="7" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="31">7<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

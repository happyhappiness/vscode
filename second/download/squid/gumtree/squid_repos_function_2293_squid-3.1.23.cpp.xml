<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2293_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">httpHdrCcParseInit<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">HttpHdrCc<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">cc<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">String<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">str<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">item<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>		<comment type="block" pos:line="5" pos:column="33">/* '=' parameter */</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">http_hdr_cc_type<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">type<pos:position pos:line="7" pos:column="26"/></name></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">ilen<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">nlen<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">cc<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&amp;&amp;<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="18">str<pos:position pos:line="10" pos:column="21"/></name></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* iterate through comma separated list */</comment>

    <while pos:line="14" pos:column="5">while <condition pos:line="14" pos:column="11">(<expr><call><name pos:line="14" pos:column="12">strListGetItem<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">str<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="32">','<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="37">&amp;<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="38">item<pos:position pos:line="14" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="44">&amp;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="45">ilen<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="51">&amp;<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="52">pos<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="57"/></condition> <block pos:line="14" pos:column="58">{
        <comment type="block" pos:line="15" pos:column="9">/* isolate directive name */</comment>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">p<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator><specifier pos:line="17" pos:column="19">const<pos:position pos:line="17" pos:column="24"/></specifier> <name pos:line="17" pos:column="25">char<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">*<pos:position pos:line="17" pos:column="31"/></operator><operator pos:line="17" pos:column="31">)<pos:position pos:line="17" pos:column="32"/></operator><call><name pos:line="17" pos:column="32">memchr<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">item<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="45">'='<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">ilen<pos:position pos:line="17" pos:column="54"/></name></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator> <operator pos:line="17" pos:column="57">&amp;&amp;<pos:position pos:line="17" pos:column="67"/></operator> <operator pos:line="17" pos:column="60">(<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">p<pos:position pos:line="17" pos:column="62"/></name> <operator pos:line="17" pos:column="63">-<pos:position pos:line="17" pos:column="64"/></operator> <name pos:line="17" pos:column="65">item<pos:position pos:line="17" pos:column="69"/></name> <operator pos:line="17" pos:column="70">&lt;<pos:position pos:line="17" pos:column="74"/></operator> <name pos:line="17" pos:column="72">ilen<pos:position pos:line="17" pos:column="76"/></name><operator pos:line="17" pos:column="76">)<pos:position pos:line="17" pos:column="77"/></operator></expr>)<pos:position pos:line="17" pos:column="78"/></condition><then pos:line="17" pos:column="78">
            <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="13">nlen<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <name pos:line="18" pos:column="20">p<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">++<pos:position pos:line="18" pos:column="23"/></operator> <operator pos:line="18" pos:column="24">-<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">item<pos:position pos:line="18" pos:column="30"/></name></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then>
        <else pos:line="19" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">nlen<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">ilen<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt></block></else></if>

        <comment type="block" pos:line="22" pos:column="9">/* find type */</comment>
        <expr_stmt><expr><name pos:line="23" pos:column="9">type<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">http_hdr_cc_type<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">)<pos:position pos:line="23" pos:column="35"/></operator> <call><name pos:line="23" pos:column="36">httpHeaderIdByName<pos:position pos:line="23" pos:column="54"/></name><argument_list pos:line="23" pos:column="54">(<argument><expr><name pos:line="23" pos:column="55">item<pos:position pos:line="23" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="61">nlen<pos:position pos:line="23" pos:column="65"/></name></expr></argument>,
                <argument><expr><name pos:line="24" pos:column="17">CcFieldsInfo<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">CC_ENUM_END<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="44"/></expr_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">type<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&lt;<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="20">0<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22"> <block pos:line="26" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">65<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="24">2<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="27">"hdr cc: unknown cache-directive: near '"<pos:position pos:line="27" pos:column="68"/></literal> <operator pos:line="27" pos:column="69">&lt;&lt;<pos:position pos:line="27" pos:column="77"/></operator> <name pos:line="27" pos:column="72">item<pos:position pos:line="27" pos:column="76"/></name> <operator pos:line="27" pos:column="77">&lt;&lt;<pos:position pos:line="27" pos:column="85"/></operator> <literal type="string" pos:line="27" pos:column="80">"' in '"<pos:position pos:line="27" pos:column="88"/></literal> <operator pos:line="27" pos:column="89">&lt;&lt;<pos:position pos:line="27" pos:column="97"/></operator> <name pos:line="27" pos:column="92">str<pos:position pos:line="27" pos:column="95"/></name> <operator pos:line="27" pos:column="96">&lt;&lt;<pos:position pos:line="27" pos:column="104"/></operator> <literal type="string" pos:line="27" pos:column="99">"'"<pos:position pos:line="27" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">type<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">CC_OTHER<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="31" pos:column="9">// ignore known duplicate directives</comment>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">EBIT_TEST<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name><name pos:line="32" pos:column="23">cc<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">mask<pos:position pos:line="32" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">type<pos:position pos:line="32" pos:column="37"/></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <block pos:line="32" pos:column="40">{
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name pos:line="33" pos:column="17">type<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">!=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">CC_OTHER<pos:position pos:line="33" pos:column="33"/></name></expr>)<pos:position pos:line="33" pos:column="34"/></condition><then pos:line="33" pos:column="34"> <block pos:line="33" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">debugs<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="number" pos:line="34" pos:column="24">65<pos:position pos:line="34" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="28">2<pos:position pos:line="34" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="31">"hdr cc: ignoring duplicate cache-directive: near '"<pos:position pos:line="34" pos:column="83"/></literal> <operator pos:line="34" pos:column="84">&lt;&lt;<pos:position pos:line="34" pos:column="92"/></operator> <name pos:line="34" pos:column="87">item<pos:position pos:line="34" pos:column="91"/></name> <operator pos:line="34" pos:column="92">&lt;&lt;<pos:position pos:line="34" pos:column="100"/></operator> <literal type="string" pos:line="34" pos:column="95">"' in '"<pos:position pos:line="34" pos:column="103"/></literal> <operator pos:line="34" pos:column="104">&lt;&lt;<pos:position pos:line="34" pos:column="112"/></operator> <name pos:line="34" pos:column="107">str<pos:position pos:line="34" pos:column="110"/></name> <operator pos:line="34" pos:column="111">&lt;&lt;<pos:position pos:line="34" pos:column="119"/></operator> <literal type="string" pos:line="34" pos:column="114">"'"<pos:position pos:line="34" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="119"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="35" pos:column="17">CcFieldsInfo<pos:position pos:line="35" pos:column="29"/></name><index pos:line="35" pos:column="29">[<expr><name pos:line="35" pos:column="30">type<pos:position pos:line="35" pos:column="34"/></name></expr>]<pos:position pos:line="35" pos:column="35"/></index></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name><name pos:line="35" pos:column="36">stat<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">.<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="41">repCount<pos:position pos:line="35" pos:column="49"/></name></name><operator pos:line="35" pos:column="49">++<pos:position pos:line="35" pos:column="51"/></operator></expr>;<pos:position pos:line="35" pos:column="52"/></expr_stmt>
                <continue pos:line="36" pos:column="17">continue;<pos:position pos:line="36" pos:column="26"/></continue>
            }<pos:position pos:line="37" pos:column="14"/></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></then> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">EBIT_SET<pos:position pos:line="39" pos:column="21"/></name><argument_list pos:line="39" pos:column="21">(<argument><expr><name><name pos:line="39" pos:column="22">cc<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">mask<pos:position pos:line="39" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">type<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="42" pos:column="9">/* post-processing special cases */</comment>
        <switch pos:line="43" pos:column="9">switch <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">type<pos:position pos:line="43" pos:column="21"/></name></expr>)<pos:position pos:line="43" pos:column="22"/></condition> <block pos:line="43" pos:column="23">{

        <case pos:line="45" pos:column="9">case <expr><name pos:line="45" pos:column="14">CC_MAX_AGE<pos:position pos:line="45" pos:column="24"/></name></expr>:<pos:position pos:line="45" pos:column="25"/></case>

            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><operator pos:line="47" pos:column="17">!<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">p<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">||<pos:position pos:line="47" pos:column="22"/></operator> <operator pos:line="47" pos:column="23">!<pos:position pos:line="47" pos:column="24"/></operator><call><name pos:line="47" pos:column="24">httpHeaderParseInt<pos:position pos:line="47" pos:column="42"/></name><argument_list pos:line="47" pos:column="42">(<argument><expr><name pos:line="47" pos:column="43">p<pos:position pos:line="47" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="47" pos:column="46">&amp;<pos:position pos:line="47" pos:column="51"/></operator><name><name pos:line="47" pos:column="47">cc<pos:position pos:line="47" pos:column="49"/></name><operator pos:line="47" pos:column="49">-&gt;<pos:position pos:line="47" pos:column="54"/></operator><name pos:line="47" pos:column="51">max_age<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="60"/></condition><then pos:line="47" pos:column="60"> <block pos:line="47" pos:column="61">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">debugs<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="number" pos:line="48" pos:column="24">65<pos:position pos:line="48" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="28">2<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="31">"cc: invalid max-age specs near '"<pos:position pos:line="48" pos:column="65"/></literal> <operator pos:line="48" pos:column="66">&lt;&lt;<pos:position pos:line="48" pos:column="74"/></operator> <name pos:line="48" pos:column="69">item<pos:position pos:line="48" pos:column="73"/></name> <operator pos:line="48" pos:column="74">&lt;&lt;<pos:position pos:line="48" pos:column="82"/></operator> <literal type="string" pos:line="48" pos:column="77">"'"<pos:position pos:line="48" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="82"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="49" pos:column="17">cc<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">-&gt;<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="21">max_age<pos:position pos:line="49" pos:column="28"/></name></name> <operator pos:line="49" pos:column="29">=<pos:position pos:line="49" pos:column="30"/></operator> <operator pos:line="49" pos:column="31">-<pos:position pos:line="49" pos:column="32"/></operator><literal type="number" pos:line="49" pos:column="32">1<pos:position pos:line="49" pos:column="33"/></literal></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">EBIT_CLR<pos:position pos:line="50" pos:column="25"/></name><argument_list pos:line="50" pos:column="25">(<argument><expr><name><name pos:line="50" pos:column="26">cc<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">-&gt;<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="30">mask<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="36">type<pos:position pos:line="50" pos:column="40"/></name></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>

            <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>

        <case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">CC_S_MAXAGE<pos:position pos:line="55" pos:column="25"/></name></expr>:<pos:position pos:line="55" pos:column="26"/></case>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><operator pos:line="57" pos:column="17">!<pos:position pos:line="57" pos:column="18"/></operator><name pos:line="57" pos:column="18">p<pos:position pos:line="57" pos:column="19"/></name> <operator pos:line="57" pos:column="20">||<pos:position pos:line="57" pos:column="22"/></operator> <operator pos:line="57" pos:column="23">!<pos:position pos:line="57" pos:column="24"/></operator><call><name pos:line="57" pos:column="24">httpHeaderParseInt<pos:position pos:line="57" pos:column="42"/></name><argument_list pos:line="57" pos:column="42">(<argument><expr><name pos:line="57" pos:column="43">p<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="46">&amp;<pos:position pos:line="57" pos:column="51"/></operator><name><name pos:line="57" pos:column="47">cc<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">s_maxage<pos:position pos:line="57" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="61"/></condition><then pos:line="57" pos:column="61"> <block pos:line="57" pos:column="62">{
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">debugs<pos:position pos:line="58" pos:column="23"/></name><argument_list pos:line="58" pos:column="23">(<argument><expr><literal type="number" pos:line="58" pos:column="24">65<pos:position pos:line="58" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="28">2<pos:position pos:line="58" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="31">"cc: invalid s-maxage specs near '"<pos:position pos:line="58" pos:column="66"/></literal> <operator pos:line="58" pos:column="67">&lt;&lt;<pos:position pos:line="58" pos:column="75"/></operator> <name pos:line="58" pos:column="70">item<pos:position pos:line="58" pos:column="74"/></name> <operator pos:line="58" pos:column="75">&lt;&lt;<pos:position pos:line="58" pos:column="83"/></operator> <literal type="string" pos:line="58" pos:column="78">"'"<pos:position pos:line="58" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="83"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="59" pos:column="17">cc<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">s_maxage<pos:position pos:line="59" pos:column="29"/></name></name> <operator pos:line="59" pos:column="30">=<pos:position pos:line="59" pos:column="31"/></operator> <operator pos:line="59" pos:column="32">-<pos:position pos:line="59" pos:column="33"/></operator><literal type="number" pos:line="59" pos:column="33">1<pos:position pos:line="59" pos:column="34"/></literal></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">EBIT_CLR<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name><name pos:line="60" pos:column="26">cc<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">mask<pos:position pos:line="60" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="36">type<pos:position pos:line="60" pos:column="40"/></name></expr></argument>)<pos:position pos:line="60" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="61" pos:column="14"/></block></then></if>

            <break pos:line="63" pos:column="13">break;<pos:position pos:line="63" pos:column="19"/></break>

        <case pos:line="65" pos:column="9">case <expr><name pos:line="65" pos:column="14">CC_MAX_STALE<pos:position pos:line="65" pos:column="26"/></name></expr>:<pos:position pos:line="65" pos:column="27"/></case>

            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><operator pos:line="67" pos:column="17">!<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">p<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">||<pos:position pos:line="67" pos:column="22"/></operator> <operator pos:line="67" pos:column="23">!<pos:position pos:line="67" pos:column="24"/></operator><call><name pos:line="67" pos:column="24">httpHeaderParseInt<pos:position pos:line="67" pos:column="42"/></name><argument_list pos:line="67" pos:column="42">(<argument><expr><name pos:line="67" pos:column="43">p<pos:position pos:line="67" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="46">&amp;<pos:position pos:line="67" pos:column="51"/></operator><name><name pos:line="67" pos:column="47">cc<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">-&gt;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="51">max_stale<pos:position pos:line="67" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="62"/></condition><then pos:line="67" pos:column="62"> <block pos:line="67" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">debugs<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><literal type="number" pos:line="68" pos:column="24">65<pos:position pos:line="68" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="28">2<pos:position pos:line="68" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="31">"cc: max-stale directive is valid without value"<pos:position pos:line="68" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="69" pos:column="17">cc<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">-&gt;<pos:position pos:line="69" pos:column="24"/></operator><name pos:line="69" pos:column="21">max_stale<pos:position pos:line="69" pos:column="30"/></name></name> <operator pos:line="69" pos:column="31">=<pos:position pos:line="69" pos:column="32"/></operator> <operator pos:line="69" pos:column="33">-<pos:position pos:line="69" pos:column="34"/></operator><literal type="number" pos:line="69" pos:column="34">1<pos:position pos:line="69" pos:column="35"/></literal></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="70" pos:column="14"/></block></then></if>

            <break pos:line="72" pos:column="13">break;<pos:position pos:line="72" pos:column="19"/></break>

        <case pos:line="74" pos:column="9">case <expr><name pos:line="74" pos:column="14">CC_MIN_FRESH<pos:position pos:line="74" pos:column="26"/></name></expr>:<pos:position pos:line="74" pos:column="27"/></case>

            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><operator pos:line="76" pos:column="17">!<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">p<pos:position pos:line="76" pos:column="19"/></name> <operator pos:line="76" pos:column="20">||<pos:position pos:line="76" pos:column="22"/></operator> <operator pos:line="76" pos:column="23">!<pos:position pos:line="76" pos:column="24"/></operator><call><name pos:line="76" pos:column="24">httpHeaderParseInt<pos:position pos:line="76" pos:column="42"/></name><argument_list pos:line="76" pos:column="42">(<argument><expr><name pos:line="76" pos:column="43">p<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="46">&amp;<pos:position pos:line="76" pos:column="51"/></operator><name><name pos:line="76" pos:column="47">cc<pos:position pos:line="76" pos:column="49"/></name><operator pos:line="76" pos:column="49">-&gt;<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="51">min_fresh<pos:position pos:line="76" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="62"/></condition><then pos:line="76" pos:column="62"> <block pos:line="76" pos:column="63">{
                <expr_stmt><expr><call><name pos:line="77" pos:column="17">debugs<pos:position pos:line="77" pos:column="23"/></name><argument_list pos:line="77" pos:column="23">(<argument><expr><literal type="number" pos:line="77" pos:column="24">65<pos:position pos:line="77" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="28">2<pos:position pos:line="77" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="31">"cc: invalid min-fresh specs near '"<pos:position pos:line="77" pos:column="67"/></literal> <operator pos:line="77" pos:column="68">&lt;&lt;<pos:position pos:line="77" pos:column="76"/></operator> <name pos:line="77" pos:column="71">item<pos:position pos:line="77" pos:column="75"/></name> <operator pos:line="77" pos:column="76">&lt;&lt;<pos:position pos:line="77" pos:column="84"/></operator> <literal type="string" pos:line="77" pos:column="79">"'"<pos:position pos:line="77" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="84"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="78" pos:column="17">cc<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">-&gt;<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="21">min_fresh<pos:position pos:line="78" pos:column="30"/></name></name> <operator pos:line="78" pos:column="31">=<pos:position pos:line="78" pos:column="32"/></operator> <operator pos:line="78" pos:column="33">-<pos:position pos:line="78" pos:column="34"/></operator><literal type="number" pos:line="78" pos:column="34">1<pos:position pos:line="78" pos:column="35"/></literal></expr>;<pos:position pos:line="78" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="79" pos:column="17">EBIT_CLR<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name><name pos:line="79" pos:column="26">cc<pos:position pos:line="79" pos:column="28"/></name><operator pos:line="79" pos:column="28">-&gt;<pos:position pos:line="79" pos:column="33"/></operator><name pos:line="79" pos:column="30">mask<pos:position pos:line="79" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="36">type<pos:position pos:line="79" pos:column="40"/></name></expr></argument>)<pos:position pos:line="79" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="80" pos:column="14"/></block></then></if>

            <break pos:line="82" pos:column="13">break;<pos:position pos:line="82" pos:column="19"/></break>

        <case pos:line="84" pos:column="9">case <expr><name pos:line="84" pos:column="14">CC_STALE_IF_ERROR<pos:position pos:line="84" pos:column="31"/></name></expr>:<pos:position pos:line="84" pos:column="32"/></case>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><operator pos:line="85" pos:column="17">!<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="18">p<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">||<pos:position pos:line="85" pos:column="22"/></operator> <operator pos:line="85" pos:column="23">!<pos:position pos:line="85" pos:column="24"/></operator><call><name pos:line="85" pos:column="24">httpHeaderParseInt<pos:position pos:line="85" pos:column="42"/></name><argument_list pos:line="85" pos:column="42">(<argument><expr><name pos:line="85" pos:column="43">p<pos:position pos:line="85" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="46">&amp;<pos:position pos:line="85" pos:column="51"/></operator><name><name pos:line="85" pos:column="47">cc<pos:position pos:line="85" pos:column="49"/></name><operator pos:line="85" pos:column="49">-&gt;<pos:position pos:line="85" pos:column="54"/></operator><name pos:line="85" pos:column="51">stale_if_error<pos:position pos:line="85" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="67"/></condition><then pos:line="85" pos:column="67"> <block pos:line="85" pos:column="68">{
                <expr_stmt><expr><call><name pos:line="86" pos:column="17">debugs<pos:position pos:line="86" pos:column="23"/></name><argument_list pos:line="86" pos:column="23">(<argument><expr><literal type="number" pos:line="86" pos:column="24">65<pos:position pos:line="86" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="28">2<pos:position pos:line="86" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="31">"cc: invalid stale-if-error specs near '"<pos:position pos:line="86" pos:column="72"/></literal> <operator pos:line="86" pos:column="73">&lt;&lt;<pos:position pos:line="86" pos:column="81"/></operator> <name pos:line="86" pos:column="76">item<pos:position pos:line="86" pos:column="80"/></name> <operator pos:line="86" pos:column="81">&lt;&lt;<pos:position pos:line="86" pos:column="89"/></operator> <literal type="string" pos:line="86" pos:column="84">"'"<pos:position pos:line="86" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="89"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="87" pos:column="17">cc<pos:position pos:line="87" pos:column="19"/></name><operator pos:line="87" pos:column="19">-&gt;<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="21">stale_if_error<pos:position pos:line="87" pos:column="35"/></name></name> <operator pos:line="87" pos:column="36">=<pos:position pos:line="87" pos:column="37"/></operator> <operator pos:line="87" pos:column="38">-<pos:position pos:line="87" pos:column="39"/></operator><literal type="number" pos:line="87" pos:column="39">1<pos:position pos:line="87" pos:column="40"/></literal></expr>;<pos:position pos:line="87" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="88" pos:column="17">EBIT_CLR<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name><name pos:line="88" pos:column="26">cc<pos:position pos:line="88" pos:column="28"/></name><operator pos:line="88" pos:column="28">-&gt;<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="30">mask<pos:position pos:line="88" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="36">type<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>
            <break pos:line="90" pos:column="13">break;<pos:position pos:line="90" pos:column="19"/></break>

        <case pos:line="92" pos:column="9">case <expr><name pos:line="92" pos:column="14">CC_OTHER<pos:position pos:line="92" pos:column="22"/></name></expr>:<pos:position pos:line="92" pos:column="23"/></case>

            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><call><name><name pos:line="94" pos:column="17">cc<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">-&gt;<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="21">other<pos:position pos:line="94" pos:column="26"/></name><operator pos:line="94" pos:column="26">.<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="27">size<pos:position pos:line="94" pos:column="31"/></name></name><argument_list pos:line="94" pos:column="31">()<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="34"/></condition><then pos:line="94" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="95" pos:column="17">cc<pos:position pos:line="95" pos:column="19"/></name><operator pos:line="95" pos:column="19">-&gt;<pos:position pos:line="95" pos:column="24"/></operator><name pos:line="95" pos:column="21">other<pos:position pos:line="95" pos:column="26"/></name><operator pos:line="95" pos:column="26">.<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="27">append<pos:position pos:line="95" pos:column="33"/></name></name><argument_list pos:line="95" pos:column="33">(<argument><expr><literal type="string" pos:line="95" pos:column="34">", "<pos:position pos:line="95" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="40"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">cc<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">-&gt;<pos:position pos:line="97" pos:column="20"/></operator><name pos:line="97" pos:column="17">other<pos:position pos:line="97" pos:column="22"/></name><operator pos:line="97" pos:column="22">.<pos:position pos:line="97" pos:column="23"/></operator><name pos:line="97" pos:column="23">append<pos:position pos:line="97" pos:column="29"/></name></name><argument_list pos:line="97" pos:column="29">(<argument><expr><name pos:line="97" pos:column="30">item<pos:position pos:line="97" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="36">ilen<pos:position pos:line="97" pos:column="40"/></name></expr></argument>)<pos:position pos:line="97" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="42"/></expr_stmt>

            <break pos:line="99" pos:column="13">break;<pos:position pos:line="99" pos:column="19"/></break>

        <default pos:line="101" pos:column="9">default:<pos:position pos:line="101" pos:column="17"/></default>
            <comment type="block" pos:line="102" pos:column="13">/* note that we ignore most of '=' specs (RFCVIOLATION) */</comment>
            <break pos:line="103" pos:column="13">break;<pos:position pos:line="103" pos:column="19"/></break>
        }<pos:position pos:line="104" pos:column="10"/></block></switch>
    }<pos:position pos:line="105" pos:column="6"/></block></while>

    <return pos:line="107" pos:column="5">return <expr><name><name pos:line="107" pos:column="12">cc<pos:position pos:line="107" pos:column="14"/></name><operator pos:line="107" pos:column="14">-&gt;<pos:position pos:line="107" pos:column="19"/></operator><name pos:line="107" pos:column="16">mask<pos:position pos:line="107" pos:column="20"/></name></name> <operator pos:line="107" pos:column="21">!=<pos:position pos:line="107" pos:column="23"/></operator> <literal type="number" pos:line="107" pos:column="24">0<pos:position pos:line="107" pos:column="25"/></literal></expr>;<pos:position pos:line="107" pos:column="26"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

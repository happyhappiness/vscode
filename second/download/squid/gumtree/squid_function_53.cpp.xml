<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_53.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AuthDigestUserRequest<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">authenticate<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">HttpRequest<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">request<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">ConnStateData<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="76">conn<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="82">http_hdr_type<pos:position pos:line="2" pos:column="95"/></name></type> <name pos:line="2" pos:column="96">type<pos:position pos:line="2" pos:column="100"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="101"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AuthUser<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">auth_user<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">AuthDigestUserRequest<pos:position pos:line="5" pos:column="26"/></name> <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier></type><name pos:line="5" pos:column="28">digest_request<pos:position pos:line="5" pos:column="42"/></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">digest_user_h<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">digest_user<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HASHHEX<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">SESSIONKEY<pos:position pos:line="8" pos:column="23"/></name></decl>;<pos:position pos:line="8" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HASHHEX<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">HA2<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="string" pos:line="9" pos:column="19">""<pos:position pos:line="9" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">HASHHEX<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">Response<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><call><name pos:line="12" pos:column="12">authUser<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">()<pos:position pos:line="12" pos:column="22"/></argument_list></call> <operator pos:line="12" pos:column="23">!=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">auth_user<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">authUser<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">()<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">digest_user<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <cast type="dynamic" pos:line="15" pos:column="19">dynamic_cast <argument_list type="generic" pos:line="15" pos:column="32">&lt; <argument><expr><name pos:line="15" pos:column="34">digest_user_h<pos:position pos:line="15" pos:column="47"/></name> <operator pos:line="15" pos:column="48">*<pos:position pos:line="15" pos:column="49"/></operator></expr></argument> &gt;<pos:position pos:line="15" pos:column="54"/></argument_list><argument_list pos:line="15" pos:column="51">(<argument><expr><name pos:line="15" pos:column="52">auth_user<pos:position pos:line="15" pos:column="61"/></name></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></cast></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">digest_user<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">!=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">NULL<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* if the check has corrupted the user, just return */</comment>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">credentials<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">()<pos:position pos:line="21" pos:column="22"/></argument_list></call> <operator pos:line="21" pos:column="23">==<pos:position pos:line="21" pos:column="25"/></operator> <name pos:line="21" pos:column="26">Failed<pos:position pos:line="21" pos:column="32"/></name></expr>)<pos:position pos:line="21" pos:column="33"/></condition><then pos:line="21" pos:column="33"> <block pos:line="21" pos:column="34">{
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">digest_request<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <name pos:line="25" pos:column="22">this<pos:position pos:line="25" pos:column="26"/></name></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* do we have the HA1 */</comment>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name><name pos:line="29" pos:column="10">digest_user<pos:position pos:line="29" pos:column="21"/></name><operator pos:line="29" pos:column="21">-&gt;<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="23">HA1created<pos:position pos:line="29" pos:column="33"/></name></name></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34"> <block pos:line="29" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">credentials<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">Pending<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">digest_request<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">-&gt;<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="25">nonce<pos:position pos:line="34" pos:column="30"/></name></name> <operator pos:line="34" pos:column="31">==<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name></expr>)<pos:position pos:line="34" pos:column="39"/></condition><then pos:line="34" pos:column="39"> <block pos:line="34" pos:column="40">{
        <comment type="block" pos:line="35" pos:column="9">/* this isn't a nonce we issued */</comment>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">credentials<pos:position pos:line="36" pos:column="20"/></name><argument_list pos:line="36" pos:column="20">(<argument><expr><name pos:line="36" pos:column="21">Failed<pos:position pos:line="36" pos:column="27"/></name></expr></argument>)<pos:position pos:line="36" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">DigestCalcHA1<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name><name pos:line="40" pos:column="19">digest_request<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">algorithm<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="46">NULL<pos:position pos:line="40" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="52">NULL<pos:position pos:line="40" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="58">NULL<pos:position pos:line="40" pos:column="62"/></name></expr></argument>,
                  <argument><expr><call><name pos:line="41" pos:column="19">authenticateDigestNonceNonceb64<pos:position pos:line="41" pos:column="50"/></name><argument_list pos:line="41" pos:column="50">(<argument><expr><name><name pos:line="41" pos:column="51">digest_request<pos:position pos:line="41" pos:column="65"/></name><operator pos:line="41" pos:column="65">-&gt;<pos:position pos:line="41" pos:column="70"/></operator><name pos:line="41" pos:column="67">nonce<pos:position pos:line="41" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr></argument>,
                  <argument><expr><name><name pos:line="42" pos:column="19">digest_request<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">cnonce<pos:position pos:line="42" pos:column="41"/></name></name></expr></argument>,
                  <argument><expr><name><name pos:line="43" pos:column="19">digest_user<pos:position pos:line="43" pos:column="30"/></name><operator pos:line="43" pos:column="30">-&gt;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="32">HA1<pos:position pos:line="43" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="37">SESSIONKEY<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">DigestCalcResponse<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><name pos:line="44" pos:column="24">SESSIONKEY<pos:position pos:line="44" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="36">authenticateDigestNonceNonceb64<pos:position pos:line="44" pos:column="67"/></name><argument_list pos:line="44" pos:column="67">(<argument><expr><name><name pos:line="44" pos:column="68">digest_request<pos:position pos:line="44" pos:column="82"/></name><operator pos:line="44" pos:column="82">-&gt;<pos:position pos:line="44" pos:column="87"/></operator><name pos:line="44" pos:column="84">nonce<pos:position pos:line="44" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="90"/></argument_list></call></expr></argument>,
                       <argument><expr><name><name pos:line="45" pos:column="24">digest_request<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">nc<pos:position pos:line="45" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="44">digest_request<pos:position pos:line="45" pos:column="58"/></name><operator pos:line="45" pos:column="58">-&gt;<pos:position pos:line="45" pos:column="63"/></operator><name pos:line="45" pos:column="60">cnonce<pos:position pos:line="45" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="68">digest_request<pos:position pos:line="45" pos:column="82"/></name><operator pos:line="45" pos:column="82">-&gt;<pos:position pos:line="45" pos:column="87"/></operator><name pos:line="45" pos:column="84">qop<pos:position pos:line="45" pos:column="87"/></name></name></expr></argument>,
                       <argument><expr><call><name pos:line="46" pos:column="24">RequestMethodStr<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">(<argument><expr><name><name pos:line="46" pos:column="41">request<pos:position pos:line="46" pos:column="48"/></name><operator pos:line="46" pos:column="48">-&gt;<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="50">method<pos:position pos:line="46" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="59">digest_request<pos:position pos:line="46" pos:column="73"/></name><operator pos:line="46" pos:column="73">-&gt;<pos:position pos:line="46" pos:column="78"/></operator><name pos:line="46" pos:column="75">uri<pos:position pos:line="46" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="80">HA2<pos:position pos:line="46" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="85">Response<pos:position pos:line="46" pos:column="93"/></name></expr></argument>)<pos:position pos:line="46" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="95"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">debugs<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="number" pos:line="48" pos:column="12">29<pos:position pos:line="48" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="16">9<pos:position pos:line="48" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="19">"\nResponse = '"<pos:position pos:line="48" pos:column="35"/></literal> <operator pos:line="48" pos:column="36">&lt;&lt;<pos:position pos:line="48" pos:column="44"/></operator> <name><name pos:line="48" pos:column="39">digest_request<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">response<pos:position pos:line="48" pos:column="63"/></name></name> <operator pos:line="48" pos:column="64">&lt;&lt;<pos:position pos:line="48" pos:column="72"/></operator> <literal type="string" pos:line="48" pos:column="67">"'\nsquid is = '"<pos:position pos:line="48" pos:column="84"/></literal> <operator pos:line="48" pos:column="85">&lt;&lt;<pos:position pos:line="48" pos:column="93"/></operator> <name pos:line="48" pos:column="88">Response<pos:position pos:line="48" pos:column="96"/></name> <operator pos:line="48" pos:column="97">&lt;&lt;<pos:position pos:line="48" pos:column="105"/></operator> <literal type="string" pos:line="48" pos:column="100">"'"<pos:position pos:line="48" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="105"/></expr_stmt>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">strcasecmp<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name><name pos:line="50" pos:column="20">digest_request<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">response<pos:position pos:line="50" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">Response<pos:position pos:line="50" pos:column="54"/></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call> <operator pos:line="50" pos:column="56">!=<pos:position pos:line="50" pos:column="58"/></operator> <literal type="number" pos:line="50" pos:column="59">0<pos:position pos:line="50" pos:column="60"/></literal></expr>)<pos:position pos:line="50" pos:column="61"/></condition><then pos:line="50" pos:column="61"> <block pos:line="50" pos:column="62">{
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name><name pos:line="51" pos:column="14">digest_request<pos:position pos:line="51" pos:column="28"/></name><operator pos:line="51" pos:column="28">-&gt;<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="30">flags<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">helper_queried<pos:position pos:line="51" pos:column="50"/></name></name></expr>)<pos:position pos:line="51" pos:column="51"/></condition><then pos:line="51" pos:column="51"> <block pos:line="51" pos:column="52">{
            <comment type="block" pos:line="52" pos:column="13">/* Query the helper in case the password has changed */</comment>
            <expr_stmt><expr><name><name pos:line="53" pos:column="13">digest_request<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">-&gt;<pos:position pos:line="53" pos:column="32"/></operator><name pos:line="53" pos:column="29">flags<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">.<pos:position pos:line="53" pos:column="35"/></operator><name pos:line="53" pos:column="35">helper_queried<pos:position pos:line="53" pos:column="49"/></name></name> <operator pos:line="53" pos:column="50">=<pos:position pos:line="53" pos:column="51"/></operator> <literal type="number" pos:line="53" pos:column="52">1<pos:position pos:line="53" pos:column="53"/></literal></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">digest_request<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">credentials_ok<pos:position pos:line="54" pos:column="43"/></name></name> <operator pos:line="54" pos:column="44">=<pos:position pos:line="54" pos:column="45"/></operator> <name pos:line="54" pos:column="46">Pending<pos:position pos:line="54" pos:column="53"/></name></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
            <return pos:line="55" pos:column="13">return;<pos:position pos:line="55" pos:column="20"/></return>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>

        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">digestConfig<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">.<pos:position pos:line="58" pos:column="26"/></operator><name pos:line="58" pos:column="26">PostWorkaround<pos:position pos:line="58" pos:column="40"/></name></name> <operator pos:line="58" pos:column="41">&amp;&amp;<pos:position pos:line="58" pos:column="51"/></operator> <name><name pos:line="58" pos:column="44">request<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">-&gt;<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="53">method<pos:position pos:line="58" pos:column="59"/></name></name> <operator pos:line="58" pos:column="60">!=<pos:position pos:line="58" pos:column="62"/></operator> <name pos:line="58" pos:column="63">METHOD_GET<pos:position pos:line="58" pos:column="73"/></name></expr>)<pos:position pos:line="58" pos:column="74"/></condition><then pos:line="58" pos:column="74"> <block pos:line="58" pos:column="75">{
            <comment type="block" pos:line="59" pos:column="13">/* Ugly workaround for certain very broken browsers using the
             * wrong method to calculate the request-digest on POST request.
             * This should be deleted once Digest authentication becomes more
             * widespread and such broken browsers no longer are commonly
             * used.
             */</comment>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">DigestCalcResponse<pos:position pos:line="65" pos:column="31"/></name><argument_list pos:line="65" pos:column="31">(<argument><expr><name pos:line="65" pos:column="32">SESSIONKEY<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="44">authenticateDigestNonceNonceb64<pos:position pos:line="65" pos:column="75"/></name><argument_list pos:line="65" pos:column="75">(<argument><expr><name><name pos:line="65" pos:column="76">digest_request<pos:position pos:line="65" pos:column="90"/></name><operator pos:line="65" pos:column="90">-&gt;<pos:position pos:line="65" pos:column="95"/></operator><name pos:line="65" pos:column="92">nonce<pos:position pos:line="65" pos:column="97"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="98"/></argument_list></call></expr></argument>,
                               <argument><expr><name><name pos:line="66" pos:column="32">digest_request<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">-&gt;<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="48">nc<pos:position pos:line="66" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="52">digest_request<pos:position pos:line="66" pos:column="66"/></name><operator pos:line="66" pos:column="66">-&gt;<pos:position pos:line="66" pos:column="71"/></operator><name pos:line="66" pos:column="68">cnonce<pos:position pos:line="66" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="76">digest_request<pos:position pos:line="66" pos:column="90"/></name><operator pos:line="66" pos:column="90">-&gt;<pos:position pos:line="66" pos:column="95"/></operator><name pos:line="66" pos:column="92">qop<pos:position pos:line="66" pos:column="95"/></name></name></expr></argument>,
                               <argument><expr><call><name pos:line="67" pos:column="32">RequestMethodStr<pos:position pos:line="67" pos:column="48"/></name><argument_list pos:line="67" pos:column="48">(<argument><expr><name pos:line="67" pos:column="49">METHOD_GET<pos:position pos:line="67" pos:column="59"/></name></expr></argument>)<pos:position pos:line="67" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="62">digest_request<pos:position pos:line="67" pos:column="76"/></name><operator pos:line="67" pos:column="76">-&gt;<pos:position pos:line="67" pos:column="81"/></operator><name pos:line="67" pos:column="78">uri<pos:position pos:line="67" pos:column="81"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="83">HA2<pos:position pos:line="67" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="88">Response<pos:position pos:line="67" pos:column="96"/></name></expr></argument>)<pos:position pos:line="67" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="98"/></expr_stmt>

            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><call><name pos:line="69" pos:column="17">strcasecmp<pos:position pos:line="69" pos:column="27"/></name><argument_list pos:line="69" pos:column="27">(<argument><expr><name><name pos:line="69" pos:column="28">digest_request<pos:position pos:line="69" pos:column="42"/></name><operator pos:line="69" pos:column="42">-&gt;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="44">response<pos:position pos:line="69" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">Response<pos:position pos:line="69" pos:column="62"/></name></expr></argument>)<pos:position pos:line="69" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="64"/></condition><then pos:line="69" pos:column="64"> <block pos:line="69" pos:column="65">{
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">credentials<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">Failed<pos:position pos:line="70" pos:column="35"/></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="71" pos:column="17">digest_request<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">flags<pos:position pos:line="71" pos:column="38"/></name><operator pos:line="71" pos:column="38">.<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="39">invalid_password<pos:position pos:line="71" pos:column="55"/></name></name> <operator pos:line="71" pos:column="56">=<pos:position pos:line="71" pos:column="57"/></operator> <literal type="number" pos:line="71" pos:column="58">1<pos:position pos:line="71" pos:column="59"/></literal></expr>;<pos:position pos:line="71" pos:column="60"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">digest_request<pos:position pos:line="72" pos:column="31"/></name><operator pos:line="72" pos:column="31">-&gt;<pos:position pos:line="72" pos:column="36"/></operator><name pos:line="72" pos:column="33">setDenyMessage<pos:position pos:line="72" pos:column="47"/></name></name><argument_list pos:line="72" pos:column="47">(<argument><expr><literal type="string" pos:line="72" pos:column="48">"Incorrect password"<pos:position pos:line="72" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="70"/></expr_stmt>
                <return pos:line="73" pos:column="17">return;<pos:position pos:line="73" pos:column="24"/></return>
            }<pos:position pos:line="74" pos:column="14"/></block></then> <else pos:line="74" pos:column="15">else <block pos:line="74" pos:column="20">{
                <decl_stmt><decl><type><specifier pos:line="75" pos:column="17">const<pos:position pos:line="75" pos:column="22"/></specifier> <name pos:line="75" pos:column="23">char<pos:position pos:line="75" pos:column="27"/></name> <modifier pos:line="75" pos:column="28">*<pos:position pos:line="75" pos:column="29"/></modifier></type><name pos:line="75" pos:column="29">useragent<pos:position pos:line="75" pos:column="38"/></name> <init pos:line="75" pos:column="39">= <expr><call><name><name pos:line="75" pos:column="41">request<pos:position pos:line="75" pos:column="48"/></name><operator pos:line="75" pos:column="48">-&gt;<pos:position pos:line="75" pos:column="53"/></operator><name pos:line="75" pos:column="50">header<pos:position pos:line="75" pos:column="56"/></name><operator pos:line="75" pos:column="56">.<pos:position pos:line="75" pos:column="57"/></operator><name pos:line="75" pos:column="57">getStr<pos:position pos:line="75" pos:column="63"/></name></name><argument_list pos:line="75" pos:column="63">(<argument><expr><name pos:line="75" pos:column="64">HDR_USER_AGENT<pos:position pos:line="75" pos:column="78"/></name></expr></argument>)<pos:position pos:line="75" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="80"/></decl_stmt>

                <decl_stmt><decl><specifier pos:line="77" pos:column="17">static<pos:position pos:line="77" pos:column="23"/></specifier> <type><name pos:line="77" pos:column="24">IpAddress<pos:position pos:line="77" pos:column="33"/></name></type> <name pos:line="77" pos:column="34">last_broken_addr<pos:position pos:line="77" pos:column="50"/></name></decl>;<pos:position pos:line="77" pos:column="51"/></decl_stmt>
                <decl_stmt><decl><specifier pos:line="78" pos:column="17">static<pos:position pos:line="78" pos:column="23"/></specifier> <type><name pos:line="78" pos:column="24">int<pos:position pos:line="78" pos:column="27"/></name></type> <name pos:line="78" pos:column="28">seen_broken_client<pos:position pos:line="78" pos:column="46"/></name> <init pos:line="78" pos:column="47">= <expr><literal type="number" pos:line="78" pos:column="49">0<pos:position pos:line="78" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="78" pos:column="51"/></decl_stmt>

                <if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><operator pos:line="80" pos:column="21">!<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">seen_broken_client<pos:position pos:line="80" pos:column="40"/></name></expr>)<pos:position pos:line="80" pos:column="41"/></condition><then pos:line="80" pos:column="41"> <block pos:line="80" pos:column="42">{
                    <expr_stmt><expr><call><name><name pos:line="81" pos:column="21">last_broken_addr<pos:position pos:line="81" pos:column="37"/></name><operator pos:line="81" pos:column="37">.<pos:position pos:line="81" pos:column="38"/></operator><name pos:line="81" pos:column="38">SetNoAddr<pos:position pos:line="81" pos:column="47"/></name></name><argument_list pos:line="81" pos:column="47">()<pos:position pos:line="81" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="82" pos:column="21">seen_broken_client<pos:position pos:line="82" pos:column="39"/></name> <operator pos:line="82" pos:column="40">=<pos:position pos:line="82" pos:column="41"/></operator> <literal type="number" pos:line="82" pos:column="42">1<pos:position pos:line="82" pos:column="43"/></literal></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="83" pos:column="18"/></block></then></if>

                <if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">last_broken_addr<pos:position pos:line="85" pos:column="37"/></name> <operator pos:line="85" pos:column="38">!=<pos:position pos:line="85" pos:column="40"/></operator> <name><name pos:line="85" pos:column="41">request<pos:position pos:line="85" pos:column="48"/></name><operator pos:line="85" pos:column="48">-&gt;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="50">client_addr<pos:position pos:line="85" pos:column="61"/></name></name></expr>)<pos:position pos:line="85" pos:column="62"/></condition><then pos:line="85" pos:column="62"> <block pos:line="85" pos:column="63">{
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">debugs<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><literal type="number" pos:line="86" pos:column="28">29<pos:position pos:line="86" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="32">1<pos:position pos:line="86" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="35">"\nDigest POST bug detected from "<pos:position pos:line="86" pos:column="69"/></literal> <operator pos:line="86" pos:column="70">&lt;&lt;<pos:position pos:line="86" pos:column="78"/></operator>
                           <name><name pos:line="87" pos:column="28">request<pos:position pos:line="87" pos:column="35"/></name><operator pos:line="87" pos:column="35">-&gt;<pos:position pos:line="87" pos:column="40"/></operator><name pos:line="87" pos:column="37">client_addr<pos:position pos:line="87" pos:column="48"/></name></name> <operator pos:line="87" pos:column="49">&lt;&lt;<pos:position pos:line="87" pos:column="57"/></operator> <literal type="string" pos:line="87" pos:column="52">" using '"<pos:position pos:line="87" pos:column="62"/></literal> <operator pos:line="87" pos:column="63">&lt;&lt;<pos:position pos:line="87" pos:column="71"/></operator>
                           <operator pos:line="88" pos:column="28">(<pos:position pos:line="88" pos:column="29"/></operator><ternary><condition><expr><name pos:line="88" pos:column="29">useragent<pos:position pos:line="88" pos:column="38"/></name></expr> ?<pos:position pos:line="88" pos:column="40"/></condition><then pos:line="88" pos:column="40"> <expr><name pos:line="88" pos:column="41">useragent<pos:position pos:line="88" pos:column="50"/></name></expr> <pos:position pos:line="88" pos:column="51"/></then><else pos:line="88" pos:column="51">: <expr><literal type="string" pos:line="88" pos:column="53">"-"<pos:position pos:line="88" pos:column="56"/></literal></expr></else></ternary><operator pos:line="88" pos:column="56">)<pos:position pos:line="88" pos:column="57"/></operator> <operator pos:line="88" pos:column="58">&lt;&lt;<pos:position pos:line="88" pos:column="66"/></operator>
                           <literal type="string" pos:line="89" pos:column="28">"'. Please upgrade browser. See Bug #630 for details."<pos:position pos:line="89" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="84"/></expr_stmt>

                    <expr_stmt><expr><name pos:line="91" pos:column="21">last_broken_addr<pos:position pos:line="91" pos:column="37"/></name> <operator pos:line="91" pos:column="38">=<pos:position pos:line="91" pos:column="39"/></operator> <name><name pos:line="91" pos:column="40">request<pos:position pos:line="91" pos:column="47"/></name><operator pos:line="91" pos:column="47">-&gt;<pos:position pos:line="91" pos:column="52"/></operator><name pos:line="91" pos:column="49">client_addr<pos:position pos:line="91" pos:column="60"/></name></name></expr>;<pos:position pos:line="91" pos:column="61"/></expr_stmt>
                }<pos:position pos:line="92" pos:column="18"/></block></then></if>
            }<pos:position pos:line="93" pos:column="14"/></block></else></if>
        }<pos:position pos:line="94" pos:column="10"/></block></then> <else pos:line="94" pos:column="11">else <block pos:line="94" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">credentials<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">Failed<pos:position pos:line="95" pos:column="31"/></name></expr></argument>)<pos:position pos:line="95" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="96" pos:column="13">digest_request<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">-&gt;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="29">flags<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">.<pos:position pos:line="96" pos:column="35"/></operator><name pos:line="96" pos:column="35">invalid_password<pos:position pos:line="96" pos:column="51"/></name></name> <operator pos:line="96" pos:column="52">=<pos:position pos:line="96" pos:column="53"/></operator> <literal type="number" pos:line="96" pos:column="54">1<pos:position pos:line="96" pos:column="55"/></literal></expr>;<pos:position pos:line="96" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">digest_request<pos:position pos:line="97" pos:column="27"/></name><operator pos:line="97" pos:column="27">-&gt;<pos:position pos:line="97" pos:column="32"/></operator><name pos:line="97" pos:column="29">setDenyMessage<pos:position pos:line="97" pos:column="43"/></name></name><argument_list pos:line="97" pos:column="43">(<argument><expr><literal type="string" pos:line="97" pos:column="44">"Incorrect password"<pos:position pos:line="97" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="66"/></expr_stmt>
            <return pos:line="98" pos:column="13">return;<pos:position pos:line="98" pos:column="20"/></return>
        }<pos:position pos:line="99" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="101" pos:column="9">/* check for stale nonce */</comment>
        <if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><operator pos:line="102" pos:column="13">!<pos:position pos:line="102" pos:column="14"/></operator><call><name pos:line="102" pos:column="14">authDigestNonceIsValid<pos:position pos:line="102" pos:column="36"/></name><argument_list pos:line="102" pos:column="36">(<argument><expr><name><name pos:line="102" pos:column="37">digest_request<pos:position pos:line="102" pos:column="51"/></name><operator pos:line="102" pos:column="51">-&gt;<pos:position pos:line="102" pos:column="56"/></operator><name pos:line="102" pos:column="53">nonce<pos:position pos:line="102" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="60">digest_request<pos:position pos:line="102" pos:column="74"/></name><operator pos:line="102" pos:column="74">-&gt;<pos:position pos:line="102" pos:column="79"/></operator><name pos:line="102" pos:column="76">nc<pos:position pos:line="102" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="80"/></condition><then pos:line="102" pos:column="80"> <block pos:line="102" pos:column="81">{
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">debugs<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><literal type="number" pos:line="103" pos:column="20">29<pos:position pos:line="103" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="24">3<pos:position pos:line="103" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="27">"authenticateDigestAuthenticateuser: user '"<pos:position pos:line="103" pos:column="71"/></literal> <operator pos:line="103" pos:column="72">&lt;&lt;<pos:position pos:line="103" pos:column="80"/></operator> <call><name><name pos:line="103" pos:column="75">digest_user<pos:position pos:line="103" pos:column="86"/></name><operator pos:line="103" pos:column="86">-&gt;<pos:position pos:line="103" pos:column="91"/></operator><name pos:line="103" pos:column="88">username<pos:position pos:line="103" pos:column="96"/></name></name><argument_list pos:line="103" pos:column="96">()<pos:position pos:line="103" pos:column="98"/></argument_list></call> <operator pos:line="103" pos:column="99">&lt;&lt;<pos:position pos:line="103" pos:column="107"/></operator> <literal type="string" pos:line="103" pos:column="102">"' validated OK but nonce stale"<pos:position pos:line="103" pos:column="134"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="136"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="104" pos:column="13">credentials<pos:position pos:line="104" pos:column="24"/></name><argument_list pos:line="104" pos:column="24">(<argument><expr><name pos:line="104" pos:column="25">Failed<pos:position pos:line="104" pos:column="31"/></name></expr></argument>)<pos:position pos:line="104" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="105" pos:column="13">digest_request<pos:position pos:line="105" pos:column="27"/></name><operator pos:line="105" pos:column="27">-&gt;<pos:position pos:line="105" pos:column="32"/></operator><name pos:line="105" pos:column="29">setDenyMessage<pos:position pos:line="105" pos:column="43"/></name></name><argument_list pos:line="105" pos:column="43">(<argument><expr><literal type="string" pos:line="105" pos:column="44">"Stale nonce"<pos:position pos:line="105" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="59"/></expr_stmt>
            <return pos:line="106" pos:column="13">return;<pos:position pos:line="106" pos:column="20"/></return>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>
    }<pos:position pos:line="108" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="110" pos:column="5">credentials<pos:position pos:line="110" pos:column="16"/></name><argument_list pos:line="110" pos:column="16">(<argument><expr><name pos:line="110" pos:column="17">Ok<pos:position pos:line="110" pos:column="19"/></name></expr></argument>)<pos:position pos:line="110" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="21"/></expr_stmt>

    <comment type="block" pos:line="112" pos:column="5">/* password was checked and did match */</comment>
    <expr_stmt><expr><call><name pos:line="113" pos:column="5">debugs<pos:position pos:line="113" pos:column="11"/></name><argument_list pos:line="113" pos:column="11">(<argument><expr><literal type="number" pos:line="113" pos:column="12">29<pos:position pos:line="113" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="16">4<pos:position pos:line="113" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="19">"authenticateDigestAuthenticateuser: user '"<pos:position pos:line="113" pos:column="63"/></literal> <operator pos:line="113" pos:column="64">&lt;&lt;<pos:position pos:line="113" pos:column="72"/></operator> <call><name><name pos:line="113" pos:column="67">digest_user<pos:position pos:line="113" pos:column="78"/></name><operator pos:line="113" pos:column="78">-&gt;<pos:position pos:line="113" pos:column="83"/></operator><name pos:line="113" pos:column="80">username<pos:position pos:line="113" pos:column="88"/></name></name><argument_list pos:line="113" pos:column="88">()<pos:position pos:line="113" pos:column="90"/></argument_list></call> <operator pos:line="113" pos:column="91">&lt;&lt;<pos:position pos:line="113" pos:column="99"/></operator> <literal type="string" pos:line="113" pos:column="94">"' validated OK"<pos:position pos:line="113" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="112"/></expr_stmt>

    <comment type="block" pos:line="115" pos:column="5">/* auth_user is now linked, we reset these values
     * after external auth occurs anyway */</comment>
    <expr_stmt><expr><name><name pos:line="117" pos:column="5">auth_user<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">-&gt;<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="16">expiretime<pos:position pos:line="117" pos:column="26"/></name></name> <operator pos:line="117" pos:column="27">=<pos:position pos:line="117" pos:column="28"/></operator> <name><name pos:line="117" pos:column="29">current_time<pos:position pos:line="117" pos:column="41"/></name><operator pos:line="117" pos:column="41">.<pos:position pos:line="117" pos:column="42"/></operator><name pos:line="117" pos:column="42">tv_sec<pos:position pos:line="117" pos:column="48"/></name></name></expr>;<pos:position pos:line="117" pos:column="49"/></expr_stmt>
    <return pos:line="118" pos:column="5">return;<pos:position pos:line="118" pos:column="12"/></return>
}<pos:position pos:line="119" pos:column="2"/></block></function></unit>

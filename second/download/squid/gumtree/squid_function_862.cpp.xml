<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_862.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ipcacheStatPrint<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">ipcache_entry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">i<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">StoreEntry<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">sentry<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">k<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">MAX_IPSTRLEN<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">sentry<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17"> <block pos:line="7" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">14<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">HERE<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">&lt;&lt;<pos:position pos:line="8" pos:column="47"/></operator> <literal type="string" pos:line="8" pos:column="42">"CRITICAL: sentry is NULL!"<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">i<pos:position pos:line="12" pos:column="11"/></name></expr>)<pos:position pos:line="12" pos:column="12"/></condition><then pos:line="12" pos:column="12"> <block pos:line="12" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">14<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">DBG_CRITICAL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">HERE<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">&lt;&lt;<pos:position pos:line="13" pos:column="47"/></operator> <literal type="string" pos:line="13" pos:column="42">"CRITICAL: ipcache_entry is NULL!"<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">storeAppendPrintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">sentry<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"CRITICAL ERROR\n"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">count<pos:position pos:line="18" pos:column="14"/></name> <init pos:line="18" pos:column="15">= <expr><name><name pos:line="18" pos:column="17">i<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">addrs<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">count<pos:position pos:line="18" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="18" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">storeAppendPrintf<pos:position pos:line="20" pos:column="22"/></name><argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">sentry<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">" %-32.32s %c%c %6d %6d %2d(%2d)"<pos:position pos:line="20" pos:column="64"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="21" pos:column="23">hashKeyStr<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">(<argument><expr><operator pos:line="21" pos:column="34">&amp;<pos:position pos:line="21" pos:column="39"/></operator><name><name pos:line="21" pos:column="35">i<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">-&gt;<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="38">hash<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr></argument>,
                      <argument><expr><ternary><condition><expr><name><name pos:line="22" pos:column="23">i<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="26">flags<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">fromhosts<pos:position pos:line="22" pos:column="41"/></name></name></expr> ?<pos:position pos:line="22" pos:column="43"/></condition><then pos:line="22" pos:column="43"> <expr><literal type="char" pos:line="22" pos:column="44">'H'<pos:position pos:line="22" pos:column="47"/></literal></expr> <pos:position pos:line="22" pos:column="48"/></then><else pos:line="22" pos:column="48">: <expr><literal type="char" pos:line="22" pos:column="50">' '<pos:position pos:line="22" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><ternary><condition><expr><name><name pos:line="23" pos:column="23">i<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">-&gt;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="26">flags<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">negcached<pos:position pos:line="23" pos:column="41"/></name></name></expr> ?<pos:position pos:line="23" pos:column="43"/></condition><then pos:line="23" pos:column="43"> <expr><literal type="char" pos:line="23" pos:column="44">'N'<pos:position pos:line="23" pos:column="47"/></literal></expr> <pos:position pos:line="23" pos:column="48"/></then><else pos:line="23" pos:column="48">: <expr><literal type="char" pos:line="23" pos:column="50">' '<pos:position pos:line="23" pos:column="53"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><call pos:line="24" pos:column="23">(<name pos:line="24" pos:column="24">int<pos:position pos:line="24" pos:column="27"/></name>) <argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">squid_curtime<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">-<pos:position pos:line="24" pos:column="45"/></operator> <name><name pos:line="24" pos:column="46">i<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">lastref<pos:position pos:line="24" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr></argument>,
                      <argument><expr><call pos:line="25" pos:column="23">(<name pos:line="25" pos:column="24">int<pos:position pos:line="25" pos:column="27"/></name>) <argument_list pos:line="25" pos:column="29">(<argument><expr><operator pos:line="25" pos:column="30">(<pos:position pos:line="25" pos:column="31"/></operator><ternary><condition><expr><name><name pos:line="25" pos:column="31">i<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">flags<pos:position pos:line="25" pos:column="39"/></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">fromhosts<pos:position pos:line="25" pos:column="49"/></name></name></expr> ?<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51"> <expr><operator pos:line="25" pos:column="52">-<pos:position pos:line="25" pos:column="53"/></operator><literal type="number" pos:line="25" pos:column="53">1<pos:position pos:line="25" pos:column="54"/></literal></expr> <pos:position pos:line="25" pos:column="55"/></then><else pos:line="25" pos:column="55">: <expr><name><name pos:line="25" pos:column="57">i<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">-&gt;<pos:position pos:line="25" pos:column="63"/></operator><name pos:line="25" pos:column="60">expires<pos:position pos:line="25" pos:column="67"/></name></name> <operator pos:line="25" pos:column="68">-<pos:position pos:line="25" pos:column="69"/></operator> <name pos:line="25" pos:column="70">squid_curtime<pos:position pos:line="25" pos:column="83"/></name></expr></else></ternary><operator pos:line="25" pos:column="83">)<pos:position pos:line="25" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="85"/></argument_list></call></expr></argument>,
                      <argument><expr><operator pos:line="26" pos:column="23">(<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="24">int<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">)<pos:position pos:line="26" pos:column="28"/></operator> <name><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">addrs<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">.<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">count<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="27" pos:column="23">(<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">int<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">)<pos:position pos:line="27" pos:column="28"/></operator> <name><name pos:line="27" pos:column="29">i<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">addrs<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">.<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">badcount<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="29" pos:column="5">/** \par
     * Negative-cached entries have no IPs listed. */</comment>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">i<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">flags<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">negcached<pos:position pos:line="31" pos:column="27"/></name></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28"> <block pos:line="31" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">storeAppendPrintf<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">sentry<pos:position pos:line="32" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="35">"\n"<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
        <return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="36" pos:column="5">/** \par
     * Cached entries have IPs listed with a BNF of:   ip-address '-' ('OK'|'BAD') */</comment>
    <for pos:line="38" pos:column="5">for <control pos:line="38" pos:column="9">(<init><expr><name pos:line="38" pos:column="10">k<pos:position pos:line="38" pos:column="11"/></name> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <literal type="number" pos:line="38" pos:column="14">0<pos:position pos:line="38" pos:column="15"/></literal></expr>;<pos:position pos:line="38" pos:column="16"/></init> <condition><expr><name pos:line="38" pos:column="17">k<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&lt;<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="21">count<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></condition> <incr><expr><operator pos:line="38" pos:column="28">++<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">k<pos:position pos:line="38" pos:column="31"/></name></expr></incr>)<pos:position pos:line="38" pos:column="32"/></control> <block pos:line="38" pos:column="33">{
        <comment type="block" pos:line="39" pos:column="9">/* Display tidy-up: IPv6 are so big make the list vertical */</comment>
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">k<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <literal type="number" pos:line="40" pos:column="18">0<pos:position pos:line="40" pos:column="19"/></literal></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="13">storeAppendPrintf<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">sentry<pos:position pos:line="41" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="39">" %45.45s-%3s\n"<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="42" pos:column="31">i<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">-&gt;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="34">addrs<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">.<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">in_addrs<pos:position pos:line="42" pos:column="48"/></name><index pos:line="42" pos:column="48">[<expr><name pos:line="42" pos:column="49">k<pos:position pos:line="42" pos:column="50"/></name></expr>]<pos:position pos:line="42" pos:column="51"/></index></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><call><name pos:line="42" pos:column="52">NtoA<pos:position pos:line="42" pos:column="56"/></name><argument_list pos:line="42" pos:column="56">(<argument><expr><name pos:line="42" pos:column="57">buf<pos:position pos:line="42" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="42" pos:column="61">MAX_IPSTRLEN<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></call></expr></argument>,
                              <argument><expr><ternary><condition><expr><name><name pos:line="43" pos:column="31">i<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">-&gt;<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="34">addrs<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">.<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">bad_mask<pos:position pos:line="43" pos:column="48"/></name><index pos:line="43" pos:column="48">[<expr><name pos:line="43" pos:column="49">k<pos:position pos:line="43" pos:column="50"/></name></expr>]<pos:position pos:line="43" pos:column="51"/></index></name></expr> ?<pos:position pos:line="43" pos:column="53"/></condition><then pos:line="43" pos:column="53"> <expr><literal type="string" pos:line="43" pos:column="54">"BAD"<pos:position pos:line="43" pos:column="59"/></literal></expr> <pos:position pos:line="43" pos:column="60"/></then><else pos:line="43" pos:column="60">: <expr><literal type="string" pos:line="43" pos:column="62">"OK "<pos:position pos:line="43" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="69"/></expr_stmt></block></then>
        <else pos:line="44" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">storeAppendPrintf<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">sentry<pos:position pos:line="45" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="39">"%s %45.45s-%3s\n"<pos:position pos:line="45" pos:column="57"/></literal></expr></argument>,
                              <argument><expr><literal type="string" pos:line="46" pos:column="31">"                                                         "<pos:position pos:line="46" pos:column="90"/></literal></expr></argument>, <comment type="block" pos:line="46" pos:column="92">/* blank-space indenting IP list */</comment>
                              <argument><expr><name><name pos:line="47" pos:column="31">i<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">-&gt;<pos:position pos:line="47" pos:column="37"/></operator><name pos:line="47" pos:column="34">addrs<pos:position pos:line="47" pos:column="39"/></name><operator pos:line="47" pos:column="39">.<pos:position pos:line="47" pos:column="40"/></operator><name pos:line="47" pos:column="40">in_addrs<pos:position pos:line="47" pos:column="48"/></name><index pos:line="47" pos:column="48">[<expr><name pos:line="47" pos:column="49">k<pos:position pos:line="47" pos:column="50"/></name></expr>]<pos:position pos:line="47" pos:column="51"/></index></name><operator pos:line="47" pos:column="51">.<pos:position pos:line="47" pos:column="52"/></operator><call><name pos:line="47" pos:column="52">NtoA<pos:position pos:line="47" pos:column="56"/></name><argument_list pos:line="47" pos:column="56">(<argument><expr><name pos:line="47" pos:column="57">buf<pos:position pos:line="47" pos:column="60"/></name></expr></argument>,<argument><expr><name pos:line="47" pos:column="61">MAX_IPSTRLEN<pos:position pos:line="47" pos:column="73"/></name></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr></argument>,
                              <argument><expr><ternary><condition><expr><name><name pos:line="48" pos:column="31">i<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">-&gt;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="34">addrs<pos:position pos:line="48" pos:column="39"/></name><operator pos:line="48" pos:column="39">.<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">bad_mask<pos:position pos:line="48" pos:column="48"/></name><index pos:line="48" pos:column="48">[<expr><name pos:line="48" pos:column="49">k<pos:position pos:line="48" pos:column="50"/></name></expr>]<pos:position pos:line="48" pos:column="51"/></index></name></expr> ?<pos:position pos:line="48" pos:column="53"/></condition><then pos:line="48" pos:column="53"> <expr><literal type="string" pos:line="48" pos:column="54">"BAD"<pos:position pos:line="48" pos:column="59"/></literal></expr> <pos:position pos:line="48" pos:column="60"/></then><else pos:line="48" pos:column="60">: <expr><literal type="string" pos:line="48" pos:column="62">"OK "<pos:position pos:line="48" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="48" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="69"/></expr_stmt></block></else></if>
    }<pos:position pos:line="49" pos:column="6"/></block></for>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

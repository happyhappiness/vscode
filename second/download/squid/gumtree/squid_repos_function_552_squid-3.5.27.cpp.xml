<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_552_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">HELPER_INPUT_BUFFER<pos:position pos:line="4" pos:column="33"/></name></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">setbuf<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">stdout<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ProcessArguments<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">argc<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">argv<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">fgets<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">buf<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HELPER_INPUT_BUFFER<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">stdin<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">!=<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="54">NULL<pos:position pos:line="7" pos:column="58"/></name></expr>)<pos:position pos:line="7" pos:column="59"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">DoOneRequest<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">buf<pos:position pos:line="8" pos:column="25"/></name></expr></argument>)<pos:position pos:line="8" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt></block></while>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">exit<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><literal type="number" pos:line="9" pos:column="10">0<pos:position pos:line="9" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

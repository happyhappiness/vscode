<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1822_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Entry<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">genParseAlias<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name><name pos:line="2" pos:column="28">std<pos:position pos:line="2" pos:column="31"/></name><operator pos:line="2" pos:column="31">::<pos:position pos:line="2" pos:column="33"/></operator><name pos:line="2" pos:column="33">string<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">aName<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="48">std<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">ostream<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">fout<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list> <specifier pos:line="2" pos:column="68">const<pos:position pos:line="2" pos:column="73"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">fout<pos:position pos:line="4" pos:column="9"/></name> <operator pos:line="4" pos:column="10">&lt;&lt;<pos:position pos:line="4" pos:column="18"/></operator> <literal type="string" pos:line="4" pos:column="13">"    if (!strcmp(token, \""<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="44">aName<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">&lt;&lt;<pos:position pos:line="4" pos:column="58"/></operator> <literal type="string" pos:line="4" pos:column="53">"\")) {"<pos:position pos:line="4" pos:column="61"/></literal> <operator pos:line="4" pos:column="62">&lt;&lt;<pos:position pos:line="4" pos:column="70"/></operator> <name><name pos:line="4" pos:column="65">std<pos:position pos:line="4" pos:column="68"/></name><operator pos:line="4" pos:column="68">::<pos:position pos:line="4" pos:column="70"/></operator><name pos:line="4" pos:column="70">endl<pos:position pos:line="4" pos:column="74"/></name></name></expr>;<pos:position pos:line="4" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">fout<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">&lt;&lt;<pos:position pos:line="5" pos:column="18"/></operator> <literal type="string" pos:line="5" pos:column="13">"        "<pos:position pos:line="5" pos:column="23"/></literal></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name><name pos:line="6" pos:column="9">type<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">.<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">compare<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">(<argument><expr><literal type="string" pos:line="6" pos:column="22">"obsolete"<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <block pos:line="6" pos:column="40">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">fout<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">&lt;&lt;<pos:position pos:line="7" pos:column="22"/></operator> <literal type="string" pos:line="7" pos:column="17">"debugs(0, DBG_CRITICAL, \"ERROR: Directive '"<pos:position pos:line="7" pos:column="63"/></literal> <operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator> <name pos:line="7" pos:column="67">aName<pos:position pos:line="7" pos:column="72"/></name> <operator pos:line="7" pos:column="73">&lt;&lt;<pos:position pos:line="7" pos:column="81"/></operator> <literal type="string" pos:line="7" pos:column="76">"' is obsolete.\");\n"<pos:position pos:line="7" pos:column="98"/></literal></expr>;<pos:position pos:line="7" pos:column="99"/></expr_stmt>
        <for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><decl><type><name><name pos:line="8" pos:column="14">LineList<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">::<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">const_iterator<pos:position pos:line="8" pos:column="38"/></name></name></type> <name pos:line="8" pos:column="39">l<pos:position pos:line="8" pos:column="40"/></name> <init pos:line="8" pos:column="41">= <expr><call><name><name pos:line="8" pos:column="43">doc<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">begin<pos:position pos:line="8" pos:column="52"/></name></name><argument_list pos:line="8" pos:column="52">()<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="55"/></init> <condition><expr><name pos:line="8" pos:column="56">l<pos:position pos:line="8" pos:column="57"/></name> <operator pos:line="8" pos:column="58">!=<pos:position pos:line="8" pos:column="60"/></operator> <call><name><name pos:line="8" pos:column="61">doc<pos:position pos:line="8" pos:column="64"/></name><operator pos:line="8" pos:column="64">.<pos:position pos:line="8" pos:column="65"/></operator><name pos:line="8" pos:column="65">end<pos:position pos:line="8" pos:column="68"/></name></name><argument_list pos:line="8" pos:column="68">()<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></condition> <incr><expr><operator pos:line="8" pos:column="72">++<pos:position pos:line="8" pos:column="74"/></operator><name pos:line="8" pos:column="74">l<pos:position pos:line="8" pos:column="75"/></name></expr></incr>)<pos:position pos:line="8" pos:column="76"/></control> <block pos:line="8" pos:column="77">{
            <comment type="line" pos:line="9" pos:column="13">// offset line to strip initial whitespace tab byte</comment>
            <expr_stmt><expr><name pos:line="10" pos:column="13">fout<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">&lt;&lt;<pos:position pos:line="10" pos:column="26"/></operator> <literal type="string" pos:line="10" pos:column="21">"        debugs(0, opt_parse_cfg_only?0:1, \""<pos:position pos:line="10" pos:column="67"/></literal> <operator pos:line="10" pos:column="68">&lt;&lt;<pos:position pos:line="10" pos:column="76"/></operator> <name pos:line="10" pos:column="71">aName<pos:position pos:line="10" pos:column="76"/></name> <operator pos:line="10" pos:column="77">&lt;&lt;<pos:position pos:line="10" pos:column="85"/></operator> <literal type="string" pos:line="10" pos:column="80">" : "<pos:position pos:line="10" pos:column="85"/></literal> <operator pos:line="10" pos:column="86">&lt;&lt;<pos:position pos:line="10" pos:column="94"/></operator> <operator pos:line="10" pos:column="89">&amp;<pos:position pos:line="10" pos:column="94"/></operator><operator pos:line="10" pos:column="90">(<pos:position pos:line="10" pos:column="91"/></operator><operator pos:line="10" pos:column="91">*<pos:position pos:line="10" pos:column="92"/></operator><name pos:line="10" pos:column="92">l<pos:position pos:line="10" pos:column="93"/></name><operator pos:line="10" pos:column="93">)<pos:position pos:line="10" pos:column="94"/></operator><index pos:line="10" pos:column="94">[<expr><literal type="number" pos:line="10" pos:column="95">1<pos:position pos:line="10" pos:column="96"/></literal></expr>]<pos:position pos:line="10" pos:column="97"/></index> <operator pos:line="10" pos:column="98">&lt;&lt;<pos:position pos:line="10" pos:column="106"/></operator> <literal type="string" pos:line="10" pos:column="101">"\");"<pos:position pos:line="10" pos:column="107"/></literal> <operator pos:line="10" pos:column="108">&lt;&lt;<pos:position pos:line="10" pos:column="116"/></operator> <name><name pos:line="10" pos:column="111">std<pos:position pos:line="10" pos:column="114"/></name><operator pos:line="10" pos:column="114">::<pos:position pos:line="10" pos:column="116"/></operator><name pos:line="10" pos:column="116">endl<pos:position pos:line="10" pos:column="120"/></name></name></expr>;<pos:position pos:line="10" pos:column="121"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="12" pos:column="9">fout<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&lt;&lt;<pos:position pos:line="12" pos:column="22"/></operator> <literal type="string" pos:line="12" pos:column="17">"        parse_obsolete(token);"<pos:position pos:line="12" pos:column="49"/></literal></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if <condition pos:line="13" pos:column="15">(<expr><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><call><name><name pos:line="13" pos:column="17">loc<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">size<pos:position pos:line="13" pos:column="25"/></name></name><argument_list pos:line="13" pos:column="25">()<pos:position pos:line="13" pos:column="27"/></argument_list></call> <operator pos:line="13" pos:column="28">||<pos:position pos:line="13" pos:column="30"/></operator> <call><name><name pos:line="13" pos:column="31">loc<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">compare<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">(<argument><expr><literal type="string" pos:line="13" pos:column="43">"none"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call> <operator pos:line="13" pos:column="51">==<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="54">0<pos:position pos:line="13" pos:column="55"/></literal></expr>)<pos:position pos:line="13" pos:column="56"/></condition><then pos:line="13" pos:column="56"> <block pos:line="13" pos:column="57">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">fout<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">&lt;&lt;<pos:position pos:line="14" pos:column="22"/></operator> <literal type="string" pos:line="14" pos:column="17">"parse_"<pos:position pos:line="14" pos:column="25"/></literal> <operator pos:line="14" pos:column="26">&lt;&lt;<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="29">type<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">&lt;&lt;<pos:position pos:line="14" pos:column="42"/></operator> <literal type="string" pos:line="14" pos:column="37">"();"<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">fout<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">&lt;&lt;<pos:position pos:line="16" pos:column="22"/></operator> <literal type="string" pos:line="16" pos:column="17">"parse_"<pos:position pos:line="16" pos:column="25"/></literal> <operator pos:line="16" pos:column="26">&lt;&lt;<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="29">type<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">&lt;&lt;<pos:position pos:line="16" pos:column="42"/></operator> <literal type="string" pos:line="16" pos:column="37">"(&amp;"<pos:position pos:line="16" pos:column="45"/></literal> <operator pos:line="16" pos:column="42">&lt;&lt;<pos:position pos:line="16" pos:column="50"/></operator> <name pos:line="16" pos:column="45">loc<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">&lt;&lt;<pos:position pos:line="16" pos:column="57"/></operator> <operator pos:line="16" pos:column="52">(<pos:position pos:line="16" pos:column="53"/></operator><ternary><condition><expr><name pos:line="16" pos:column="53">array_flag<pos:position pos:line="16" pos:column="63"/></name></expr> ?<pos:position pos:line="16" pos:column="65"/></condition><then pos:line="16" pos:column="65"> <expr><literal type="string" pos:line="16" pos:column="66">"[0]"<pos:position pos:line="16" pos:column="71"/></literal></expr> <pos:position pos:line="16" pos:column="72"/></then><else pos:line="16" pos:column="72">: <expr><literal type="string" pos:line="16" pos:column="74">""<pos:position pos:line="16" pos:column="76"/></literal></expr></else></ternary><operator pos:line="16" pos:column="76">)<pos:position pos:line="16" pos:column="77"/></operator> <operator pos:line="16" pos:column="78">&lt;&lt;<pos:position pos:line="16" pos:column="86"/></operator> <literal type="string" pos:line="16" pos:column="81">");"<pos:position pos:line="16" pos:column="85"/></literal></expr>;<pos:position pos:line="16" pos:column="86"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="18" pos:column="5">fout<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">&lt;&lt;<pos:position pos:line="18" pos:column="18"/></operator> <name><name pos:line="18" pos:column="13">std<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">::<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">endl<pos:position pos:line="18" pos:column="22"/></name></name></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">fout<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">&lt;&lt;<pos:position pos:line="19" pos:column="18"/></operator> <literal type="string" pos:line="19" pos:column="13">"        return 1;"<pos:position pos:line="19" pos:column="32"/></literal> <operator pos:line="19" pos:column="33">&lt;&lt;<pos:position pos:line="19" pos:column="41"/></operator> <name><name pos:line="19" pos:column="36">std<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">::<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">endl<pos:position pos:line="19" pos:column="45"/></name></name></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">fout<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">&lt;&lt;<pos:position pos:line="20" pos:column="18"/></operator> <literal type="string" pos:line="20" pos:column="13">"    };"<pos:position pos:line="20" pos:column="21"/></literal> <operator pos:line="20" pos:column="22">&lt;&lt;<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="25">std<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">::<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">endl<pos:position pos:line="20" pos:column="34"/></name></name></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

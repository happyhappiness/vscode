<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4081_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">useVirgin<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">()<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">93<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <call><name pos:line="4" pos:column="26">status<pos:position pos:line="4" pos:column="32"/></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">proxyingAb<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">==<pos:position pos:line="5" pos:column="23"/></operator> <name pos:line="5" pos:column="24">opUndecided<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">proxyingAb<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">opNever<pos:position pos:line="6" pos:column="25"/></name></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">preserveVb<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"useVirgin"<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">HttpMsg<pos:position pos:line="10" pos:column="12"/></name> <modifier pos:line="10" pos:column="13">*<pos:position pos:line="10" pos:column="14"/></modifier></type><name pos:line="10" pos:column="14">clone<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><call><name><name pos:line="10" pos:column="22">theVirginRep<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">raw<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><call><name><name pos:line="10" pos:column="41">header<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">clone<pos:position pos:line="10" pos:column="54"/></name></name><argument_list pos:line="10" pos:column="54">()<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="57"/></decl_stmt>
    <comment type="line" pos:line="11" pos:column="5">// check that clone() copies the pipe so that we do not have to</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">Must<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><operator pos:line="12" pos:column="10">!<pos:position pos:line="12" pos:column="11"/></operator><call><name><name pos:line="12" pos:column="11">theVirginRep<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">raw<pos:position pos:line="12" pos:column="27"/></name></name><argument_list pos:line="12" pos:column="27">()<pos:position pos:line="12" pos:column="29"/></argument_list></call><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">header<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">body_pipe<pos:position pos:line="12" pos:column="47"/></name></name> <operator pos:line="12" pos:column="48">==<pos:position pos:line="12" pos:column="50"/></operator> <operator pos:line="12" pos:column="51">!<pos:position pos:line="12" pos:column="52"/></operator><name><name pos:line="12" pos:column="52">clone<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">body_pipe<pos:position pos:line="12" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">updateHistory<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">clone<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">sendAnswer<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><call><name><name pos:line="15" pos:column="16">Answer<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">::<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">Forward<pos:position pos:line="15" pos:column="31"/></name></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">clone<pos:position pos:line="15" pos:column="37"/></name></expr></argument>)<pos:position pos:line="15" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">Must<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><call><name pos:line="16" pos:column="10">done<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">()<pos:position pos:line="16" pos:column="16"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

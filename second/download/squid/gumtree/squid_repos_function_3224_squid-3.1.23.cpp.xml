<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3224_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">PconnPool<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">dumpHist<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">StoreEntry<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">e<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">storeAppendPrintf<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">e<pos:position pos:line="5" pos:column="24"/></name></expr></argument>,
                      <argument><expr><literal type="string" pos:line="6" pos:column="23">"%s persistent connection counts:\n"<pos:position pos:line="6" pos:column="59"/></literal>
                      <literal type="string" pos:line="7" pos:column="23">"\n"<pos:position pos:line="7" pos:column="27"/></literal>
                      <literal type="string" pos:line="8" pos:column="23">"\treq/\n"<pos:position pos:line="8" pos:column="33"/></literal>
                      <literal type="string" pos:line="9" pos:column="23">"\tconn      count\n"<pos:position pos:line="9" pos:column="44"/></literal>
                      <literal type="string" pos:line="10" pos:column="23">"\t----  ---------\n"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>,
                      <argument><expr><name pos:line="11" pos:column="23">descr<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><expr><name pos:line="13" pos:column="10">i<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></init> <condition><expr><name pos:line="13" pos:column="17">i<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&lt;<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="21">PCONN_HIST_SZ<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></condition> <incr><expr><name pos:line="13" pos:column="36">i<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">++<pos:position pos:line="13" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="40"/></control> <block pos:line="13" pos:column="41">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">hist<pos:position pos:line="14" pos:column="17"/></name><index pos:line="14" pos:column="17">[<expr><name pos:line="14" pos:column="18">i<pos:position pos:line="14" pos:column="19"/></name></expr>]<pos:position pos:line="14" pos:column="20"/></index></name> <operator pos:line="14" pos:column="21">==<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>)<pos:position pos:line="14" pos:column="26"/></condition><then pos:line="14" pos:column="26">
            <block type="pseudo"><continue pos:line="15" pos:column="13">continue;<pos:position pos:line="15" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">storeAppendPrintf<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">e<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="30">"\t%4d  %9d\n"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">i<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="49">hist<pos:position pos:line="17" pos:column="53"/></name><index pos:line="17" pos:column="53">[<expr><name pos:line="17" pos:column="54">i<pos:position pos:line="17" pos:column="55"/></name></expr>]<pos:position pos:line="17" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></for>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

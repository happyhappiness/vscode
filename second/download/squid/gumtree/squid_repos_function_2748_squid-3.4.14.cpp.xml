<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2748_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">ReadClient<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name><name pos:line="2" pos:column="35">Comm<pos:position pos:line="2" pos:column="39"/></name><operator pos:line="2" pos:column="39">::<pos:position pos:line="2" pos:column="41"/></operator><name pos:line="2" pos:column="41">ConnectionPointer<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">char<pos:position pos:line="2" pos:column="66"/></name> <modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">buf<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">size_t<pos:position pos:line="2" pos:column="79"/></name></type> <name pos:line="2" pos:column="80">len<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="85">comm_err_t<pos:position pos:line="2" pos:column="95"/></name></type> <name pos:line="2" pos:column="96">errcode<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="105">int<pos:position pos:line="2" pos:column="108"/></name></type> <name pos:line="2" pos:column="109">xerrno<pos:position pos:line="2" pos:column="115"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="117">void<pos:position pos:line="2" pos:column="121"/></name> <modifier pos:line="2" pos:column="122">*<pos:position pos:line="2" pos:column="123"/></modifier></type><name pos:line="2" pos:column="123">data<pos:position pos:line="2" pos:column="127"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="128"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><call><name pos:line="5" pos:column="13">cbdataReferenceValid<pos:position pos:line="5" pos:column="33"/></name> <argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">tunnelState<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">tunnelState<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">readClient<pos:position pos:line="7" pos:column="28"/></name></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">buf<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">len<pos:position pos:line="7" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">errcode<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="48">xerrno<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>
